;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11659$17Rald
     g$list-tail$11815$17Rald
     (case-lambda
       ((g$lst$11687$17Rald g$index$11688$17Rald)
        (if ((case-lambda
               ((g$t$11689$17Rald)
                (if g$t$11689$17Rald
                  g$t$11689$17Rald
                  (begin
                    '#f
                    (g$negative?$12656$17Rald g$index$11688$17Rald)))))
             (null? g$lst$11687$17Rald))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11687$17Rald
            g$index$11688$17Rald)
          (if (g$zero?$12657$17Rald g$index$11688$17Rald)
            g$lst$11687$17Rald
            (g$list-tail$11659$17Rald
              (cdr g$lst$11687$17Rald)
              (- g$index$11688$17Rald '1)))))))
   (g$list-ref$11660$17Rald
     g$list-ref$11816$17Rald
     (case-lambda
       ((g$lst$11690$17Rald g$index$11691$17Rald)
        (car (g$list-tail$11659$17Rald
               g$lst$11690$17Rald
               g$index$11691$17Rald)))))
   (g$last-pair$11661$17Rald
     g$last-pair$11817$17Rald
     (case-lambda
       ((g$lst$11692$17Rald)
        (if (null? g$lst$11692$17Rald)
          g$lst$11692$17Rald
          (if (null? (cdr g$lst$11692$17Rald))
            g$lst$11692$17Rald
            (g$last-pair$11661$17Rald (cdr g$lst$11692$17Rald)))))))
   (g$make-list$11662$17Rald
     g$make-list$11818$17Rald
     (case-lambda
       ((g$n$11693$17Rald)
        (vector->list (make-vector g$n$11693$17Rald)))
       ((g$n$11694$17Rald g$fill$11695$17Rald)
        (vector->list
          (make-vector g$n$11694$17Rald g$fill$11695$17Rald)))))
   (g$find$11663$17Rald
     g$find$11819$17Rald
     (case-lambda
       ((g$proc$11696$17Rald g$l$11697$17Rald)
        (if (null? g$l$11697$17Rald)
          '#f
          ((case-lambda
             ((g$e$11698$17Rald g$r$11699$17Rald g$proc$11700$17Rald)
              (if (g$proc$11700$17Rald g$e$11698$17Rald)
                g$e$11698$17Rald
                (g$find$11663$17Rald
                  g$proc$11700$17Rald
                  g$r$11699$17Rald))))
           (car g$l$11697$17Rald)
           (cdr g$l$11697$17Rald)
           g$proc$11696$17Rald)))))
   (g$partition$11664$17Rald
     g$partition$11820$17Rald
     (case-lambda
       ((g$proc$11701$17Rald g$l$11702$17Rald)
        ((letrec ((g$f$11703$17Rald
                    (case-lambda
                      ((g$l$11704$17Rald
                         g$a$11705$17Rald
                         g$b$11706$17Rald)
                       (if (null? g$l$11704$17Rald)
                         (values
                           (reverse! g$a$11705$17Rald)
                           (reverse! g$b$11706$17Rald))
                         ((case-lambda
                            ((g$e$11707$17Rald)
                             (if (g$proc$11701$17Rald g$e$11707$17Rald)
                               (g$f$11703$17Rald
                                 (cdr g$l$11704$17Rald)
                                 (cons
                                   g$e$11707$17Rald
                                   g$a$11705$17Rald)
                                 g$b$11706$17Rald)
                               (g$f$11703$17Rald
                                 (cdr g$l$11704$17Rald)
                                 g$a$11705$17Rald
                                 (cons
                                   g$e$11707$17Rald
                                   g$b$11706$17Rald)))))
                          (car g$l$11704$17Rald)))))))
           g$f$11703$17Rald)
         g$l$11702$17Rald
         '()
         '()))))
   (g$remp$11665$17Rald
     g$remp$11821$17Rald
     (case-lambda
       ((g$proc$11708$17Rald g$l$11709$17Rald)
        ((letrec ((g$f$11710$17Rald
                    (case-lambda
                      ((g$l$11711$17Rald g$a$11712$17Rald)
                       (if (null? g$l$11711$17Rald)
                         (reverse! g$a$11712$17Rald)
                         ((case-lambda
                            ((g$e$11713$17Rald)
                             (if (g$proc$11708$17Rald g$e$11713$17Rald)
                               (g$f$11710$17Rald
                                 (cdr g$l$11711$17Rald)
                                 g$a$11712$17Rald)
                               (g$f$11710$17Rald
                                 (cdr g$l$11711$17Rald)
                                 (cons
                                   g$e$11713$17Rald
                                   g$a$11712$17Rald)))))
                          (car g$l$11711$17Rald)))))))
           g$f$11710$17Rald)
         g$l$11709$17Rald
         '()))))
   (g$filter$11666$17Rald
     g$filter$11822$17Rald
     (case-lambda
       ((g$proc$11714$17Rald g$l$11715$17Rald)
        ((letrec ((g$f$11716$17Rald
                    (case-lambda
                      ((g$l$11717$17Rald g$a$11718$17Rald)
                       (if (null? g$l$11717$17Rald)
                         (reverse! g$a$11718$17Rald)
                         ((case-lambda
                            ((g$e$11719$17Rald)
                             (if (g$proc$11714$17Rald g$e$11719$17Rald)
                               (g$f$11716$17Rald
                                 (cdr g$l$11717$17Rald)
                                 (cons
                                   g$e$11719$17Rald
                                   g$a$11718$17Rald))
                               (g$f$11716$17Rald
                                 (cdr g$l$11717$17Rald)
                                 g$a$11718$17Rald))))
                          (car g$l$11717$17Rald)))))))
           g$f$11716$17Rald)
         g$l$11715$17Rald
         '()))))
   (g$assq$11667$17Rald
     g$assq$11823$17Rald
     (case-lambda
       ((g$obj$11720$17Rald g$lst$11721$17Rald)
        (if (null? g$lst$11721$17Rald)
          '#f
          ((case-lambda
             ((g$obj$11722$17Rald g$t$11723$17Rald g$r$11724$17Rald)
              (if (eq? g$obj$11722$17Rald (car g$t$11723$17Rald))
                g$t$11723$17Rald
                (g$assq$11667$17Rald
                  g$obj$11722$17Rald
                  g$r$11724$17Rald))))
           g$obj$11720$17Rald
           (car g$lst$11721$17Rald)
           (cdr g$lst$11721$17Rald))))))
   (g$assv$11668$17Rald
     g$assv$11824$17Rald
     (case-lambda
       ((g$obj$11725$17Rald g$lst$11726$17Rald)
        (if (null? g$lst$11726$17Rald)
          '#f
          ((case-lambda
             ((g$obj$11727$17Rald g$t$11728$17Rald g$r$11729$17Rald)
              (if (eqv? g$obj$11727$17Rald (car g$t$11728$17Rald))
                g$t$11728$17Rald
                (g$assv$11668$17Rald
                  g$obj$11727$17Rald
                  g$r$11729$17Rald))))
           g$obj$11725$17Rald
           (car g$lst$11726$17Rald)
           (cdr g$lst$11726$17Rald))))))
   (g$assoc$11669$17Rald
     g$assoc$11825$17Rald
     (case-lambda
       ((g$obj$11730$17Rald g$lst$11731$17Rald)
        (if (null? g$lst$11731$17Rald)
          '#f
          ((case-lambda
             ((g$obj$11732$17Rald g$t$11733$17Rald g$r$11734$17Rald)
              (if (equal? g$obj$11732$17Rald (car g$t$11733$17Rald))
                g$t$11733$17Rald
                (g$assoc$11669$17Rald
                  g$obj$11732$17Rald
                  g$r$11734$17Rald))))
           g$obj$11730$17Rald
           (car g$lst$11731$17Rald)
           (cdr g$lst$11731$17Rald))))))
   (g$assp$11670$17Rald
     g$assp$11826$17Rald
     (case-lambda
       ((g$p?$11735$17Rald g$lst$11736$17Rald)
        (if (null? g$lst$11736$17Rald)
          '#f
          ((case-lambda
             ((g$p?$11737$17Rald g$t$11738$17Rald g$r$11739$17Rald)
              (if (g$p?$11737$17Rald (car g$t$11738$17Rald))
                g$t$11738$17Rald
                (g$assp$11670$17Rald
                  g$p?$11737$17Rald
                  g$r$11739$17Rald))))
           g$p?$11735$17Rald
           (car g$lst$11736$17Rald)
           (cdr g$lst$11736$17Rald))))))
   (g$memq$11671$17Rald
     g$memq$11827$17Rald
     (case-lambda
       ((g$obj$11740$17Rald g$lst$11741$17Rald)
        (if (null? g$lst$11741$17Rald)
          '#f
          (if (eq? g$obj$11740$17Rald (car g$lst$11741$17Rald))
            g$lst$11741$17Rald
            (g$memq$11671$17Rald
              g$obj$11740$17Rald
              (cdr g$lst$11741$17Rald)))))))
   (g$memv$11672$17Rald
     g$memv$11828$17Rald
     (case-lambda
       ((g$obj$11742$17Rald g$lst$11743$17Rald)
        (if (null? g$lst$11743$17Rald)
          '#f
          (if (eqv? g$obj$11742$17Rald (car g$lst$11743$17Rald))
            g$lst$11743$17Rald
            (g$memv$11672$17Rald
              g$obj$11742$17Rald
              (cdr g$lst$11743$17Rald)))))))
   (g$member$11673$17Rald
     g$member$11829$17Rald
     (case-lambda
       ((g$obj$11744$17Rald g$lst$11745$17Rald)
        (if (null? g$lst$11745$17Rald)
          '#f
          (if (equal? g$obj$11744$17Rald (car g$lst$11745$17Rald))
            g$lst$11745$17Rald
            (g$member$11673$17Rald
              g$obj$11744$17Rald
              (cdr g$lst$11745$17Rald)))))))
   (g$memp$11674$17Rald
     g$memp$11830$17Rald
     (case-lambda
       ((g$p?$11746$17Rald g$lst$11747$17Rald)
        (if (null? g$lst$11747$17Rald)
          '#f
          (if (g$p?$11746$17Rald (car g$lst$11747$17Rald))
            g$lst$11747$17Rald
            (g$memp$11674$17Rald
              g$p?$11746$17Rald
              (cdr g$lst$11747$17Rald)))))))
   (g$all-empty?$11675$17Rald
     g$all-empty?$11831$17Rald
     (case-lambda
       ((g$ls$11748$17Rald)
        ((case-lambda
           ((g$t$11749$17Rald)
            (if g$t$11749$17Rald
              g$t$11749$17Rald
              (begin
                '#f
                (if (null? (car g$ls$11748$17Rald))
                  (begin
                    '#f
                    (g$all-empty?$11675$17Rald (cdr g$ls$11748$17Rald)))
                  '#f)))))
         (null? g$ls$11748$17Rald)))))
   (g$split$11676$17Rald
     g$split$11832$17Rald
     (case-lambda
       ((g$ls$11750$17Rald)
        (if (null? g$ls$11750$17Rald)
          (values '() '())
          (call-with-values
            (case-lambda
              (() (g$split$11676$17Rald (cdr g$ls$11750$17Rald))))
            (case-lambda
              ((g$cars$11751$17Rald g$cdrs$11752$17Rald)
               ((case-lambda
                  ((g$a$11753$17Rald)
                   (values
                     (cons (car g$a$11753$17Rald) g$cars$11751$17Rald)
                     (cons
                       (cdr g$a$11753$17Rald)
                       g$cdrs$11752$17Rald))))
                (car g$ls$11750$17Rald)))))))))
   (g$for-all$11677$17Rald
     g$for-all$11833$17Rald
     (case-lambda
       ((g$f$11754$17Rald g$arg1$11755$17Rald)
        (if (null? g$arg1$11755$17Rald)
          '#t
          (if (null? (cdr g$arg1$11755$17Rald))
            (g$f$11754$17Rald (car g$arg1$11755$17Rald))
            (if (g$f$11754$17Rald (car g$arg1$11755$17Rald))
              (begin
                '#f
                (g$for-all$11677$17Rald
                  g$f$11754$17Rald
                  (cdr g$arg1$11755$17Rald)))
              '#f))))
       ((g$f$11756$17Rald g$arg1$11757$17Rald . g$args$11758$17Rald)
        ((case-lambda
           ((g$args$11759$17Rald)
            (if (g$all-empty?$11675$17Rald g$args$11759$17Rald)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11676$17Rald g$args$11759$17Rald)))
                (case-lambda
                  ((g$cars$11760$17Rald g$cdrs$11761$17Rald)
                   (if (g$all-empty?$11675$17Rald g$cdrs$11761$17Rald)
                     (apply g$f$11756$17Rald g$cars$11760$17Rald)
                     (if (apply g$f$11756$17Rald g$cars$11760$17Rald)
                       (begin
                         '#f
                         (apply
                           g$for-all$11677$17Rald
                           g$f$11756$17Rald
                           g$cdrs$11761$17Rald))
                       '#f))))))))
         (cons g$arg1$11757$17Rald g$args$11758$17Rald)))))
   (g$exists$11678$17Rald
     g$exists$11834$17Rald
     (case-lambda
       ((g$f$11762$17Rald g$arg1$11763$17Rald)
        (if (null? g$arg1$11763$17Rald)
          '#f
          ((case-lambda
             ((g$t$11764$17Rald)
              (if g$t$11764$17Rald
                g$t$11764$17Rald
                (begin
                  '#f
                  (g$exists$11678$17Rald
                    g$f$11762$17Rald
                    (cdr g$arg1$11763$17Rald))))))
           (g$f$11762$17Rald (car g$arg1$11763$17Rald)))))
       ((g$f$11765$17Rald g$arg1$11766$17Rald . g$args$11767$17Rald)
        ((case-lambda
           ((g$args$11768$17Rald)
            (if (g$all-empty?$11675$17Rald g$args$11768$17Rald)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11676$17Rald g$args$11768$17Rald)))
                (case-lambda
                  ((g$cars$11769$17Rald g$cdrs$11770$17Rald)
                   ((case-lambda
                      ((g$t$11771$17Rald)
                       (if g$t$11771$17Rald
                         g$t$11771$17Rald
                         (begin
                           '#f
                           (apply
                             g$exists$11678$17Rald
                             g$f$11765$17Rald
                             g$cdrs$11770$17Rald)))))
                    (apply g$f$11765$17Rald g$cars$11769$17Rald))))))))
         (cons g$arg1$11766$17Rald g$args$11767$17Rald)))))
   (g$map$11679$17Rald
     g$map$11835$17Rald
     (case-lambda
       ((g$proc$11772$17Rald g$list1$11773$17Rald)
        ((letrec ((g$f$11774$17Rald
                    (case-lambda
                      ((g$lst$11775$17Rald g$a$11776$17Rald)
                       (if (null? g$lst$11775$17Rald)
                         (reverse! g$a$11776$17Rald)
                         (g$f$11774$17Rald
                           (cdr g$lst$11775$17Rald)
                           (cons
                             (g$proc$11772$17Rald
                               (car g$lst$11775$17Rald))
                             g$a$11776$17Rald)))))))
           g$f$11774$17Rald)
         g$list1$11773$17Rald
         '()))
       ((g$proc$11777$17Rald
          g$list1$11778$17Rald
          .
          g$lists$11779$17Rald)
        ((letrec ((g$f$11780$17Rald
                    (case-lambda
                      ((g$lists$11781$17Rald g$a$11782$17Rald)
                       (if (g$all-empty?$11675$17Rald
                             g$lists$11781$17Rald)
                         (reverse! g$a$11782$17Rald)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11676$17Rald
                                g$lists$11781$17Rald)))
                           (case-lambda
                             ((g$cars$11783$17Rald g$cdrs$11784$17Rald)
                              (g$f$11780$17Rald
                                g$cdrs$11784$17Rald
                                (cons
                                  (apply
                                    g$proc$11777$17Rald
                                    g$cars$11783$17Rald)
                                  g$a$11782$17Rald))))))))))
           g$f$11780$17Rald)
         (cons g$list1$11778$17Rald g$lists$11779$17Rald)
         '()))))
   (g$for-each$11680$17Rald
     g$for-each$11836$17Rald
     (case-lambda
       ((g$f$11785$17Rald g$arg1$11786$17Rald)
        (if (not (null? g$arg1$11786$17Rald))
          (begin
            (g$f$11785$17Rald (car g$arg1$11786$17Rald))
            (g$for-each$11680$17Rald
              g$f$11785$17Rald
              (cdr g$arg1$11786$17Rald)))
          (void)))
       ((g$f$11787$17Rald g$arg1$11788$17Rald . g$args$11789$17Rald)
        ((case-lambda
           ((g$args$11790$17Rald)
            (if (not (g$all-empty?$11675$17Rald g$args$11790$17Rald))
              (call-with-values
                (case-lambda
                  (() (g$split$11676$17Rald g$args$11790$17Rald)))
                (case-lambda
                  ((g$cars$11791$17Rald g$cdrs$11792$17Rald)
                   (begin
                     (apply g$f$11787$17Rald g$cars$11791$17Rald)
                     (apply
                       g$for-each$11680$17Rald
                       g$f$11787$17Rald
                       g$cdrs$11792$17Rald)))))
              (void))))
         (cons g$arg1$11788$17Rald g$args$11789$17Rald)))))
   (g$cons*$11681$17Rald
     g$cons*$11837$17Rald
     (case-lambda
       ((g$a$11793$17Rald . g$rest$11794$17Rald)
        ((letrec ((g$f$11795$17Rald
                    (case-lambda
                      ((g$a$11796$17Rald g$rest$11797$17Rald)
                       (if (null? g$rest$11797$17Rald)
                         g$a$11796$17Rald
                         (cons
                           g$a$11796$17Rald
                           (g$f$11795$17Rald
                             (car g$rest$11797$17Rald)
                             (cdr g$rest$11797$17Rald))))))))
           g$f$11795$17Rald)
         g$a$11793$17Rald
         g$rest$11794$17Rald))))
   (g$fold-left$11682$17Rald
     g$fold-left$11838$17Rald
     (case-lambda
       ((g$combine$11798$17Rald
          g$nil$11799$17Rald
          g$list1$11800$17Rald
          .
          g$lists$11801$17Rald)
        (if (null? g$list1$11800$17Rald)
          g$nil$11799$17Rald
          (if (null? g$lists$11801$17Rald)
            (g$fold-left$11682$17Rald
              g$combine$11798$17Rald
              (g$combine$11798$17Rald
                g$nil$11799$17Rald
                (car g$list1$11800$17Rald))
              (cdr g$list1$11800$17Rald))
            (apply
              g$fold-left$11682$17Rald
              (g$cons*$11681$17Rald
                g$combine$11798$17Rald
                (apply
                  g$combine$11798$17Rald
                  (g$cons*$11681$17Rald
                    g$nil$11799$17Rald
                    (car g$list1$11800$17Rald)
                    (g$map$11679$17Rald car g$lists$11801$17Rald)))
                (cdr g$list1$11800$17Rald)
                (g$map$11679$17Rald cdr g$lists$11801$17Rald))))))))
   (g$fold-right$11683$17Rald
     g$fold-right$11839$17Rald
     (case-lambda
       ((g$combine$11802$17Rald
          g$nil$11803$17Rald
          g$list1$11804$17Rald
          .
          g$lists$11805$17Rald)
        (if (null? g$list1$11804$17Rald)
          g$nil$11803$17Rald
          (if (null? g$lists$11805$17Rald)
            (g$combine$11802$17Rald
              (car g$list1$11804$17Rald)
              (g$fold-right$11683$17Rald
                g$combine$11802$17Rald
                g$nil$11803$17Rald
                (cdr g$list1$11804$17Rald)))
            (apply
              g$combine$11802$17Rald
              (append
                (list (car g$list1$11804$17Rald))
                (g$map$11679$17Rald car g$lists$11805$17Rald)
                (list
                  (apply
                    g$fold-right$11683$17Rald
                    (g$cons*$11681$17Rald
                      g$combine$11802$17Rald
                      g$nil$11803$17Rald
                      (cdr g$list1$11804$17Rald)
                      (g$map$11679$17Rald
                        cdr
                        g$lists$11805$17Rald)))))))))))
   (g$remove$11684$17Rald
     g$remove$11840$17Rald
     (case-lambda
       ((g$obj$11806$17Rald g$list$11807$17Rald)
        (g$remp$11665$17Rald
          (case-lambda
            ((g$x$11808$17Rald)
             (equal? g$obj$11806$17Rald g$x$11808$17Rald)))
          g$list$11807$17Rald))))
   (g$remv$11685$17Rald
     g$remv$11841$17Rald
     (case-lambda
       ((g$obj$11809$17Rald g$list$11810$17Rald)
        (g$remp$11665$17Rald
          (case-lambda
            ((g$x$11811$17Rald)
             (eqv? g$obj$11809$17Rald g$x$11811$17Rald)))
          g$list$11810$17Rald))))
   (g$remq$11686$17Rald
     g$remq$11842$17Rald
     (case-lambda
       ((g$obj$11812$17Rald g$list$11813$17Rald)
        (g$remp$11665$17Rald
          (case-lambda
            ((g$x$11814$17Rald)
             (eq? g$obj$11812$17Rald g$x$11814$17Rald)))
          g$list$11813$17Rald)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$12269$17Rald
     g$char?$12607$17Rald
     (case-lambda
       ((g$obj$12424$17Rald)
        (clr-is-internal 'system.char g$obj$12424$17Rald))))
   (g$vector?$12270$17Rald
     g$vector?$12608$17Rald
     (case-lambda
       ((g$obj$12425$17Rald)
        (clr-is-internal 'system.object[] g$obj$12425$17Rald))))
   (g$bytevector?$12271$17Rald
     g$bytevector?$12609$17Rald
     (case-lambda
       ((g$obj$12426$17Rald)
        (clr-is-internal 'system.byte[] g$obj$12426$17Rald))))
   (g$symbol?$12272$17Rald
     g$symbol?$12610$17Rald
     (case-lambda
       ((g$obj$12427$17Rald)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12427$17Rald))))
   (g$boolean?$12273$17Rald
     g$boolean?$12611$17Rald
     (case-lambda
       ((g$obj$12428$17Rald)
        (clr-is-internal 'system.boolean g$obj$12428$17Rald))))
   (g$procedure?$12274$17Rald
     g$procedure?$12612$17Rald
     (case-lambda
       ((g$obj$12429$17Rald)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12429$17Rald))))
   (g$fixnum?$12275$17Rald
     g$fixnum?$12613$17Rald
     (case-lambda
       ((g$obj$12430$17Rald)
        (clr-is-internal 'system.int32 g$obj$12430$17Rald))))
   (g$flonum?$12276$17Rald
     g$flonum?$12614$17Rald
     (case-lambda
       ((g$obj$12431$17Rald)
        (clr-is-internal 'system.double g$obj$12431$17Rald))))
   (g$fixnum-width$12277$17Rald
     g$fixnum-width$12615$17Rald
     (case-lambda (() '32)))
   (g$mod$12278$17Rald
     g$mod$12616$17Rald
     (case-lambda
       ((g$x1$12432$17Rald g$x2$12433$17Rald)
        (- g$x1$12432$17Rald
           (* (div g$x1$12432$17Rald g$x2$12433$17Rald)
              g$x2$12433$17Rald)))))
   (g$mod0$12279$17Rald
     g$mod0$12617$17Rald
     (case-lambda
       ((g$x1$12434$17Rald g$x2$12435$17Rald)
        (- g$x1$12434$17Rald
           (* (div0 g$x1$12434$17Rald g$x2$12435$17Rald)
              g$x2$12435$17Rald)))))
   (g$div-and-mod$12280$17Rald
     g$div-and-mod$12618$17Rald
     (case-lambda
       ((g$x1$12436$17Rald g$x2$12437$17Rald)
        ((case-lambda
           ((g$d$12438$17Rald)
            (values
              g$d$12438$17Rald
              (- g$x1$12436$17Rald
                 (* g$d$12438$17Rald g$x2$12437$17Rald)))))
         (div g$x1$12436$17Rald g$x2$12437$17Rald)))))
   (g$div0-and-mod0$12281$17Rald
     g$div0-and-mod0$12619$17Rald
     (case-lambda
       ((g$x1$12439$17Rald g$x2$12440$17Rald)
        ((case-lambda
           ((g$d$12441$17Rald)
            (values
              g$d$12441$17Rald
              (- g$x1$12439$17Rald
                 (* g$d$12441$17Rald g$x2$12440$17Rald)))))
         (div0 g$x1$12439$17Rald g$x2$12440$17Rald)))))
   (g$list->vector$12282$17Rald
     g$list->vector$12620$17Rald
     (case-lambda
       ((g$lst$12442$17Rald) (apply vector g$lst$12442$17Rald))))
   (g$list->string$12283$17Rald
     g$list->string$12621$17Rald
     (case-lambda
       ((g$lst$12443$17Rald) (apply string g$lst$12443$17Rald))))
   (g$vector-ref$12284$17Rald
     g$vector-ref$12622$17Rald
     (case-lambda
       ((g$x$12444$17Rald g$n$12445$17Rald)
        (begin
          (if (not (g$vector?$12270$17Rald g$x$12444$17Rald))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$12444$17Rald)
            (void))
          (if (not (integer? g$n$12445$17Rald))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$12445$17Rald)
            (void))
          (if (g$negative?$12318$17Rald g$n$12445$17Rald)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$12445$17Rald)
            (void))
          ($vector-ref g$x$12444$17Rald g$n$12445$17Rald)))))
   (g$vector-set!$12285$17Rald
     g$vector-set!$12623$17Rald
     (case-lambda
       ((g$x$12446$17Rald g$n$12447$17Rald g$value$12448$17Rald)
        (begin
          (if (not (g$vector?$12270$17Rald g$x$12446$17Rald))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$12446$17Rald)
            (void))
          (if (not (integer? g$n$12447$17Rald))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$12447$17Rald)
            (void))
          (if (g$negative?$12318$17Rald g$n$12447$17Rald)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$12447$17Rald)
            (void))
          ($vector-set!
            g$x$12446$17Rald
            g$n$12447$17Rald
            g$value$12448$17Rald)
          (void)))))
   (g$vector-fill!$12286$17Rald
     g$vector-fill!$12624$17Rald
     (case-lambda
       ((g$vec$12449$17Rald g$val$12450$17Rald)
        ((case-lambda
           ((g$len$12451$17Rald)
            (letrec ((g$loop$12452$17Rald
                       (case-lambda
                         ((g$i$12453$17Rald)
                          (if (g$fx=?$16030$17Rald
                                g$i$12453$17Rald
                                g$len$12451$17Rald)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$12285$17Rald
                                g$vec$12449$17Rald
                                g$i$12453$17Rald
                                g$val$12450$17Rald)
                              (g$loop$12452$17Rald
                                (g$fx+$16017$17Rald
                                  g$i$12453$17Rald
                                  '1))))))))
              (g$loop$12452$17Rald '0))))
         (vector-length g$vec$12449$17Rald)))))
   (g$xcons$12287$17Rald
     g$xcons$12625$17Rald
     (case-lambda
       ((g$x$12454$17Rald g$y$12455$17Rald)
        (cons g$y$12455$17Rald g$x$12454$17Rald))))
   (g$reverse$12288$17Rald
     g$reverse$12626$17Rald
     (case-lambda
       ((g$lst$12456$17Rald)
        (g$fold-left$11838$17Rald
          g$xcons$12287$17Rald
          '()
          g$lst$12456$17Rald))))
   (g$caar$12289$17Rald
     g$caar$12627$17Rald
     (case-lambda ((g$x$12457$17Rald) (car (car g$x$12457$17Rald)))))
   (g$cadr$12290$17Rald
     g$cadr$12628$17Rald
     (case-lambda ((g$x$12458$17Rald) (car (cdr g$x$12458$17Rald)))))
   (g$cdar$12291$17Rald
     g$cdar$12629$17Rald
     (case-lambda ((g$x$12459$17Rald) (cdr (car g$x$12459$17Rald)))))
   (g$cddr$12292$17Rald
     g$cddr$12630$17Rald
     (case-lambda ((g$x$12460$17Rald) (cdr (cdr g$x$12460$17Rald)))))
   (g$caaar$12293$17Rald
     g$caaar$12631$17Rald
     (case-lambda
       ((g$x$12461$17Rald)
        (g$caar$12289$17Rald (car g$x$12461$17Rald)))))
   (g$caadr$12294$17Rald
     g$caadr$12632$17Rald
     (case-lambda
       ((g$x$12462$17Rald)
        (g$caar$12289$17Rald (cdr g$x$12462$17Rald)))))
   (g$cadar$12295$17Rald
     g$cadar$12633$17Rald
     (case-lambda
       ((g$x$12463$17Rald)
        (g$cadr$12290$17Rald (car g$x$12463$17Rald)))))
   (g$caddr$12296$17Rald
     g$caddr$12634$17Rald
     (case-lambda
       ((g$x$12464$17Rald)
        (g$cadr$12290$17Rald (cdr g$x$12464$17Rald)))))
   (g$cdaar$12297$17Rald
     g$cdaar$12635$17Rald
     (case-lambda
       ((g$x$12465$17Rald)
        (g$cdar$12291$17Rald (car g$x$12465$17Rald)))))
   (g$cdadr$12298$17Rald
     g$cdadr$12636$17Rald
     (case-lambda
       ((g$x$12466$17Rald)
        (g$cdar$12291$17Rald (cdr g$x$12466$17Rald)))))
   (g$cddar$12299$17Rald
     g$cddar$12637$17Rald
     (case-lambda
       ((g$x$12467$17Rald)
        (g$cddr$12292$17Rald (car g$x$12467$17Rald)))))
   (g$cdddr$12300$17Rald
     g$cdddr$12638$17Rald
     (case-lambda
       ((g$x$12468$17Rald)
        (g$cddr$12292$17Rald (cdr g$x$12468$17Rald)))))
   (g$caaaar$12301$17Rald
     g$caaaar$12639$17Rald
     (case-lambda
       ((g$x$12469$17Rald)
        (g$caaar$12293$17Rald (car g$x$12469$17Rald)))))
   (g$caaadr$12302$17Rald
     g$caaadr$12640$17Rald
     (case-lambda
       ((g$x$12470$17Rald)
        (g$caaar$12293$17Rald (cdr g$x$12470$17Rald)))))
   (g$caadar$12303$17Rald
     g$caadar$12641$17Rald
     (case-lambda
       ((g$x$12471$17Rald)
        (g$caadr$12294$17Rald (car g$x$12471$17Rald)))))
   (g$caaddr$12304$17Rald
     g$caaddr$12642$17Rald
     (case-lambda
       ((g$x$12472$17Rald)
        (g$caadr$12294$17Rald (cdr g$x$12472$17Rald)))))
   (g$cadaar$12305$17Rald
     g$cadaar$12643$17Rald
     (case-lambda
       ((g$x$12473$17Rald)
        (g$cadar$12295$17Rald (car g$x$12473$17Rald)))))
   (g$cadadr$12306$17Rald
     g$cadadr$12644$17Rald
     (case-lambda
       ((g$x$12474$17Rald)
        (g$cadar$12295$17Rald (cdr g$x$12474$17Rald)))))
   (g$caddar$12307$17Rald
     g$caddar$12645$17Rald
     (case-lambda
       ((g$x$12475$17Rald)
        (g$caddr$12296$17Rald (car g$x$12475$17Rald)))))
   (g$cadddr$12308$17Rald
     g$cadddr$12646$17Rald
     (case-lambda
       ((g$x$12476$17Rald)
        (g$caddr$12296$17Rald (cdr g$x$12476$17Rald)))))
   (g$cdaaar$12309$17Rald
     g$cdaaar$12647$17Rald
     (case-lambda
       ((g$x$12477$17Rald)
        (g$cdaar$12297$17Rald (car g$x$12477$17Rald)))))
   (g$cdaadr$12310$17Rald
     g$cdaadr$12648$17Rald
     (case-lambda
       ((g$x$12478$17Rald)
        (g$cdaar$12297$17Rald (cdr g$x$12478$17Rald)))))
   (g$cdadar$12311$17Rald
     g$cdadar$12649$17Rald
     (case-lambda
       ((g$x$12479$17Rald)
        (g$cdadr$12298$17Rald (car g$x$12479$17Rald)))))
   (g$cdaddr$12312$17Rald
     g$cdaddr$12650$17Rald
     (case-lambda
       ((g$x$12480$17Rald)
        (g$cdadr$12298$17Rald (cdr g$x$12480$17Rald)))))
   (g$cddaar$12313$17Rald
     g$cddaar$12651$17Rald
     (case-lambda
       ((g$x$12481$17Rald)
        (g$cddar$12299$17Rald (car g$x$12481$17Rald)))))
   (g$cddadr$12314$17Rald
     g$cddadr$12652$17Rald
     (case-lambda
       ((g$x$12482$17Rald)
        (g$cddar$12299$17Rald (cdr g$x$12482$17Rald)))))
   (g$cdddar$12315$17Rald
     g$cdddar$12653$17Rald
     (case-lambda
       ((g$x$12483$17Rald)
        (g$cdddr$12300$17Rald (car g$x$12483$17Rald)))))
   (g$cddddr$12316$17Rald
     g$cddddr$12654$17Rald
     (case-lambda
       ((g$x$12484$17Rald)
        (g$cdddr$12300$17Rald (cdr g$x$12484$17Rald)))))
   (g$positive?$12317$17Rald
     g$positive?$12655$17Rald
     (case-lambda
       ((g$r$12485$17Rald)
        (begin
          (if (not (real-valued? g$r$12485$17Rald))
            (assertion-violation
              'positive?
              '"not a real"
              g$r$12485$17Rald)
            (void))
          (< '0 g$r$12485$17Rald)))))
   (g$negative?$12318$17Rald
     g$negative?$12656$17Rald
     (case-lambda
       ((g$r$12486$17Rald)
        (begin
          (if (not (real-valued? g$r$12486$17Rald))
            (assertion-violation
              'negative?
              '"not a real"
              g$r$12486$17Rald)
            (void))
          (> '0 g$r$12486$17Rald)))))
   (g$zero?$12319$17Rald
     g$zero?$12657$17Rald
     (case-lambda
       ((g$z$12487$17Rald)
        (begin
          (if (not (number? g$z$12487$17Rald))
            (assertion-violation
              'zero?
              '"not a number"
              g$z$12487$17Rald)
            (void))
          (= '0 g$z$12487$17Rald)))))
   (g$even?$12320$17Rald
     g$even?$12658$17Rald
     (case-lambda
       ((g$n$12488$17Rald)
        (begin
          (if (not (integer-valued? g$n$12488$17Rald))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12488$17Rald)
            (void))
          (= '0 (g$mod$12278$17Rald g$n$12488$17Rald '2))))))
   (g$odd?$12321$17Rald
     g$odd?$12659$17Rald
     (case-lambda
       ((g$n$12489$17Rald)
        (begin
          (if (not (integer-valued? g$n$12489$17Rald))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$12489$17Rald)
            (void))
          (= '1 (g$mod$12278$17Rald g$n$12489$17Rald '2))))))
   (g$max$12322$17Rald
     g$max$12660$17Rald
     (case-lambda
       ((g$a$12490$17Rald . g$rest$12491$17Rald)
        (begin
          (if (not (real-valued? g$a$12490$17Rald))
            (assertion-violation 'max '"not a real" g$a$12490$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$12492$17Rald g$b$12493$17Rald)
               ((case-lambda
                  ((g$r$12494$17Rald)
                   (if ((case-lambda
                          ((g$t$12495$17Rald)
                           (if g$t$12495$17Rald
                             g$t$12495$17Rald
                             (begin '#f (inexact? g$b$12493$17Rald)))))
                        (inexact? g$a$12492$17Rald))
                     (inexact g$r$12494$17Rald)
                     g$r$12494$17Rald)))
                (if (< g$a$12492$17Rald g$b$12493$17Rald)
                  g$b$12493$17Rald
                  g$a$12492$17Rald))))
            g$a$12490$17Rald
            g$rest$12491$17Rald)))))
   (g$min$12323$17Rald
     g$min$12661$17Rald
     (case-lambda
       ((g$a$12496$17Rald . g$rest$12497$17Rald)
        (begin
          (if (not (real-valued? g$a$12496$17Rald))
            (assertion-violation 'min '"not a real" g$a$12496$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$12498$17Rald g$b$12499$17Rald)
               ((case-lambda
                  ((g$r$12500$17Rald)
                   (if ((case-lambda
                          ((g$t$12501$17Rald)
                           (if g$t$12501$17Rald
                             g$t$12501$17Rald
                             (begin '#f (inexact? g$b$12499$17Rald)))))
                        (inexact? g$a$12498$17Rald))
                     (inexact g$r$12500$17Rald)
                     g$r$12500$17Rald)))
                (if (> g$a$12498$17Rald g$b$12499$17Rald)
                  g$b$12499$17Rald
                  g$a$12498$17Rald))))
            g$a$12496$17Rald
            g$rest$12497$17Rald)))))
   (g$gcd$12324$17Rald
     g$gcd$12662$17Rald
     (case-lambda
       (g$nums$12502$17Rald
        ((case-lambda
           ((g$t$12503$17Rald)
            (if (eqv? g$t$12503$17Rald '0)
              '0
              (if (eqv? g$t$12503$17Rald '1)
                ((case-lambda
                   ((g$n$12504$17Rald)
                    (begin
                      (if (not (integer-valued? g$n$12504$17Rald))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12504$17Rald)
                        (void))
                      (abs g$n$12504$17Rald))))
                 (car g$nums$12502$17Rald))
                (if (eqv? g$t$12503$17Rald '2)
                  ((case-lambda
                     ((g$a$12505$17Rald g$b$12506$17Rald)
                      (begin
                        (if (not (integer-valued? g$a$12505$17Rald))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12505$17Rald)
                          (void))
                        (if (not (integer-valued? g$b$12506$17Rald))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12506$17Rald)
                          (void))
                        (if (g$zero?$12319$17Rald g$b$12506$17Rald)
                          (abs g$a$12505$17Rald)
                          (abs (g$gcd$12324$17Rald
                                 g$b$12506$17Rald
                                 (g$mod$12278$17Rald
                                   g$a$12505$17Rald
                                   g$b$12506$17Rald)))))))
                   (car g$nums$12502$17Rald)
                   (g$cadr$12290$17Rald g$nums$12502$17Rald))
                  (g$fold-left$11838$17Rald
                    g$gcd$12324$17Rald
                    (abs (car g$nums$12502$17Rald))
                    (cdr g$nums$12502$17Rald)))))))
         (length g$nums$12502$17Rald)))))
   (g$lcm$12325$17Rald
     g$lcm$12663$17Rald
     (case-lambda
       (g$nums$12507$17Rald
        ((case-lambda
           ((g$t$12508$17Rald)
            (if (eqv? g$t$12508$17Rald '0)
              '1
              (if (eqv? g$t$12508$17Rald '1)
                ((case-lambda
                   ((g$n$12509$17Rald)
                    (begin
                      (if (not (integer-valued? g$n$12509$17Rald))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12509$17Rald)
                        (void))
                      (abs g$n$12509$17Rald))))
                 (car g$nums$12507$17Rald))
                (if (eqv? g$t$12508$17Rald '2)
                  ((case-lambda
                     ((g$a$12510$17Rald g$b$12511$17Rald)
                      (begin
                        (if (not (integer-valued? g$a$12510$17Rald))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12510$17Rald)
                          (void))
                        (if (not (integer-valued? g$b$12511$17Rald))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12511$17Rald)
                          (void))
                        (if ((case-lambda
                               ((g$t$12512$17Rald)
                                (if g$t$12512$17Rald
                                  g$t$12512$17Rald
                                  (begin
                                    '#f
                                    (g$zero?$12319$17Rald
                                      g$b$12511$17Rald)))))
                             (g$zero?$12319$17Rald g$a$12510$17Rald))
                          '0
                          (abs (* (/ g$a$12510$17Rald
                                     (g$gcd$12324$17Rald
                                       g$a$12510$17Rald
                                       g$b$12511$17Rald))
                                  g$b$12511$17Rald))))))
                   (car g$nums$12507$17Rald)
                   (g$cadr$12290$17Rald g$nums$12507$17Rald))
                  (g$fold-left$11838$17Rald
                    g$lcm$12325$17Rald
                    (abs (car g$nums$12507$17Rald))
                    (cdr g$nums$12507$17Rald)))))))
         (length g$nums$12507$17Rald)))))
   (g$string=?$12366$17Rald
     g$string=?$12664$17Rald
     (case-lambda
       ((g$a$12513$17Rald g$b$12514$17Rald . g$rest$12515$17Rald)
        (begin
          (if (not (string? g$a$12513$17Rald))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12513$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12516$17Rald)
               (begin
                 (if (not (string? g$x$12516$17Rald))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12516$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12517$17Rald)
                     (begin
                       (set! g$a$12513$17Rald g$x$12516$17Rald)
                       g$r$12517$17Rald)))
                  (g$fx=?$16030$17Rald
                    (string-compare g$a$12513$17Rald g$x$12516$17Rald)
                    '0)))))
            (cons g$b$12514$17Rald g$rest$12515$17Rald))))))
   (g$string<?$12367$17Rald
     g$string<?$12665$17Rald
     (case-lambda
       ((g$a$12518$17Rald g$b$12519$17Rald . g$rest$12520$17Rald)
        (begin
          (if (not (string? g$a$12518$17Rald))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12518$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12521$17Rald)
               (begin
                 (if (not (string? g$x$12521$17Rald))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12521$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12522$17Rald)
                     (begin
                       (set! g$a$12518$17Rald g$x$12521$17Rald)
                       g$r$12522$17Rald)))
                  (g$fx<?$16031$17Rald
                    (string-compare g$a$12518$17Rald g$x$12521$17Rald)
                    '0)))))
            (cons g$b$12519$17Rald g$rest$12520$17Rald))))))
   (g$string>?$12368$17Rald
     g$string>?$12666$17Rald
     (case-lambda
       ((g$a$12523$17Rald g$b$12524$17Rald . g$rest$12525$17Rald)
        (begin
          (if (not (string? g$a$12523$17Rald))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12523$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12526$17Rald)
               (begin
                 (if (not (string? g$x$12526$17Rald))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12526$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12527$17Rald)
                     (begin
                       (set! g$a$12523$17Rald g$x$12526$17Rald)
                       g$r$12527$17Rald)))
                  (g$fx>?$16033$17Rald
                    (string-compare g$a$12523$17Rald g$x$12526$17Rald)
                    '0)))))
            (cons g$b$12524$17Rald g$rest$12525$17Rald))))))
   (g$string<=?$12369$17Rald
     g$string<=?$12667$17Rald
     (case-lambda
       ((g$a$12528$17Rald g$b$12529$17Rald . g$rest$12530$17Rald)
        (begin
          (if (not (string? g$a$12528$17Rald))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12528$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12531$17Rald)
               (begin
                 (if (not (string? g$x$12531$17Rald))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12531$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12532$17Rald)
                     (begin
                       (set! g$a$12528$17Rald g$x$12531$17Rald)
                       g$r$12532$17Rald)))
                  (g$fx<=?$16032$17Rald
                    (string-compare g$a$12528$17Rald g$x$12531$17Rald)
                    '0)))))
            (cons g$b$12529$17Rald g$rest$12530$17Rald))))))
   (g$string>=?$12370$17Rald
     g$string>=?$12668$17Rald
     (case-lambda
       ((g$a$12533$17Rald g$b$12534$17Rald . g$rest$12535$17Rald)
        (begin
          (if (not (string? g$a$12533$17Rald))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12533$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12536$17Rald)
               (begin
                 (if (not (string? g$x$12536$17Rald))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12536$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12537$17Rald)
                     (begin
                       (set! g$a$12533$17Rald g$x$12536$17Rald)
                       g$r$12537$17Rald)))
                  (g$fx>=?$16034$17Rald
                    (string-compare g$a$12533$17Rald g$x$12536$17Rald)
                    '0)))))
            (cons g$b$12534$17Rald g$rest$12535$17Rald))))))
   (g$symbol=?$12371$17Rald
     g$symbol=?$12669$17Rald
     (case-lambda
       ((g$a$12538$17Rald g$b$12539$17Rald . g$rest$12540$17Rald)
        (begin
          (if (not (g$symbol?$12272$17Rald g$a$12538$17Rald))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12538$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12541$17Rald)
               (begin
                 (if (not (g$symbol?$12272$17Rald g$x$12541$17Rald))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12541$17Rald)
                   (void))
                 (eq? g$a$12538$17Rald g$x$12541$17Rald))))
            (cons g$b$12539$17Rald g$rest$12540$17Rald))))))
   (g$boolean=?$12372$17Rald
     g$boolean=?$12670$17Rald
     (case-lambda
       ((g$a$12542$17Rald g$b$12543$17Rald . g$rest$12544$17Rald)
        (begin
          (if (not (g$boolean?$12273$17Rald g$a$12542$17Rald))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12542$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12545$17Rald)
               (begin
                 (if (not (g$boolean?$12273$17Rald g$x$12545$17Rald))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12545$17Rald)
                   (void))
                 (eq? g$a$12542$17Rald g$x$12545$17Rald))))
            (cons g$b$12543$17Rald g$rest$12544$17Rald))))))
   (g$char=?$12413$17Rald
     g$char=?$12671$17Rald
     (case-lambda
       ((g$a$12546$17Rald g$b$12547$17Rald . g$rest$12548$17Rald)
        (begin
          (if (not (g$char?$12269$17Rald g$a$12546$17Rald))
            (assertion-violation 'char=? '"not a char" g$a$12546$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12549$17Rald)
               (begin
                 (if (not (g$char?$12269$17Rald g$x$12549$17Rald))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12549$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12550$17Rald)
                     (begin
                       (set! g$a$12546$17Rald g$x$12549$17Rald)
                       g$r$12550$17Rald)))
                  (g$fx=?$16030$17Rald
                    (char->integer g$a$12546$17Rald)
                    (char->integer g$x$12549$17Rald))))))
            (cons g$b$12547$17Rald g$rest$12548$17Rald))))))
   (g$char<?$12414$17Rald
     g$char<?$12672$17Rald
     (case-lambda
       ((g$a$12551$17Rald g$b$12552$17Rald . g$rest$12553$17Rald)
        (begin
          (if (not (g$char?$12269$17Rald g$a$12551$17Rald))
            (assertion-violation 'char<? '"not a char" g$a$12551$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12554$17Rald)
               (begin
                 (if (not (g$char?$12269$17Rald g$x$12554$17Rald))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12554$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12555$17Rald)
                     (begin
                       (set! g$a$12551$17Rald g$x$12554$17Rald)
                       g$r$12555$17Rald)))
                  (g$fx<?$16031$17Rald
                    (char->integer g$a$12551$17Rald)
                    (char->integer g$x$12554$17Rald))))))
            (cons g$b$12552$17Rald g$rest$12553$17Rald))))))
   (g$char>?$12415$17Rald
     g$char>?$12673$17Rald
     (case-lambda
       ((g$a$12556$17Rald g$b$12557$17Rald . g$rest$12558$17Rald)
        (begin
          (if (not (g$char?$12269$17Rald g$a$12556$17Rald))
            (assertion-violation 'char>? '"not a char" g$a$12556$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12559$17Rald)
               (begin
                 (if (not (g$char?$12269$17Rald g$x$12559$17Rald))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12559$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12560$17Rald)
                     (begin
                       (set! g$a$12556$17Rald g$x$12559$17Rald)
                       g$r$12560$17Rald)))
                  (g$fx>?$16033$17Rald
                    (char->integer g$a$12556$17Rald)
                    (char->integer g$x$12559$17Rald))))))
            (cons g$b$12557$17Rald g$rest$12558$17Rald))))))
   (g$char<=?$12416$17Rald
     g$char<=?$12674$17Rald
     (case-lambda
       ((g$a$12561$17Rald g$b$12562$17Rald . g$rest$12563$17Rald)
        (begin
          (if (not (g$char?$12269$17Rald g$a$12561$17Rald))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$12561$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12564$17Rald)
               (begin
                 (if (not (g$char?$12269$17Rald g$x$12564$17Rald))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12564$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12565$17Rald)
                     (begin
                       (set! g$a$12561$17Rald g$x$12564$17Rald)
                       g$r$12565$17Rald)))
                  (g$fx<=?$16032$17Rald
                    (char->integer g$a$12561$17Rald)
                    (char->integer g$x$12564$17Rald))))))
            (cons g$b$12562$17Rald g$rest$12563$17Rald))))))
   (g$char>=?$12417$17Rald
     g$char>=?$12675$17Rald
     (case-lambda
       ((g$a$12566$17Rald g$b$12567$17Rald . g$rest$12568$17Rald)
        (begin
          (if (not (g$char?$12269$17Rald g$a$12566$17Rald))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$12566$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$12569$17Rald)
               (begin
                 (if (not (g$char?$12269$17Rald g$x$12569$17Rald))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12569$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$12570$17Rald)
                     (begin
                       (set! g$a$12566$17Rald g$x$12569$17Rald)
                       g$r$12570$17Rald)))
                  (g$fx>=?$16034$17Rald
                    (char->integer g$a$12566$17Rald)
                    (char->integer g$x$12569$17Rald))))))
            (cons g$b$12567$17Rald g$rest$12568$17Rald))))))
   (g$rationalize$12418$17Rald
     g$rationalize$12676$17Rald
     (case-lambda
       ((g$x$12571$17Rald g$e$12572$17Rald)
        (if (if (infinite? g$x$12571$17Rald)
              (begin '#f (infinite? g$e$12572$17Rald))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12573$17Rald)
              (if (if (exact? g$x$12571$17Rald)
                    (begin '#f (exact? g$e$12572$17Rald))
                    '#f)
                g$r$12573$17Rald
                (inexact g$r$12573$17Rald))))
           (apply
             /
             (g$find-ratio$12419$17Rald
               g$x$12571$17Rald
               g$e$12572$17Rald)))))))
   (g$find-ratio$12419$17Rald
     g$find-ratio$12677$17Rald
     (case-lambda
       ((g$x$12574$17Rald g$e$12575$17Rald)
        (g$find-ratio-between$12420$17Rald
          (- g$x$12574$17Rald g$e$12575$17Rald)
          (+ g$x$12574$17Rald g$e$12575$17Rald)))))
   (g$find-ratio-between$12420$17Rald
     g$find-ratio-between$12678$17Rald
     (case-lambda
       ((g$x$12576$17Rald g$y$12577$17Rald)
        (letrec* ((g$sr$12578$17Rald
                    (case-lambda
                      ((g$x$12580$17Rald g$y$12581$17Rald)
                       ((case-lambda
                          ((g$fx$12582$17Rald g$fy$12583$17Rald)
                           (if (>= g$fx$12582$17Rald g$x$12580$17Rald)
                             (list g$fx$12582$17Rald '1)
                             (if (= g$fx$12582$17Rald g$fy$12583$17Rald)
                               ((case-lambda
                                  ((g$rat$12584$17Rald)
                                   (list
                                     (+ (g$cadr$12290$17Rald
                                          g$rat$12584$17Rald)
                                        (* g$fx$12582$17Rald
                                           (car g$rat$12584$17Rald)))
                                     (car g$rat$12584$17Rald))))
                                (g$sr$12578$17Rald
                                  (/ (- g$y$12581$17Rald
                                        g$fy$12583$17Rald))
                                  (/ (- g$x$12580$17Rald
                                        g$fx$12582$17Rald))))
                               (list (+ '1 g$fx$12582$17Rald) '1)))))
                        (exact (floor g$x$12580$17Rald))
                        (exact (floor g$y$12581$17Rald)))))))
          (if (< g$y$12577$17Rald g$x$12576$17Rald)
            (g$find-ratio-between$12420$17Rald
              g$y$12577$17Rald
              g$x$12576$17Rald)
            (if (>= g$x$12576$17Rald g$y$12577$17Rald)
              (list g$x$12576$17Rald '1)
              (if (g$positive?$12317$17Rald g$x$12576$17Rald)
                (g$sr$12578$17Rald g$x$12576$17Rald g$y$12577$17Rald)
                (if (g$negative?$12318$17Rald g$y$12577$17Rald)
                  ((case-lambda
                     ((g$rat$12579$17Rald)
                      (list
                        (- (car g$rat$12579$17Rald))
                        (g$cadr$12290$17Rald g$rat$12579$17Rald))))
                   (g$sr$12578$17Rald
                     (- g$y$12577$17Rald)
                     (- g$x$12576$17Rald)))
                  '(0 1)))))))))
   (g$vector-map$12421$17Rald
     g$vector-map$12679$17Rald
     (case-lambda
       ((g$p$12585$17Rald g$vec1$12586$17Rald . g$vecs$12587$17Rald)
        ((case-lambda
           ((g$len$12588$17Rald)
            ((case-lambda
               ((g$res$12589$17Rald)
                (letrec ((g$loop$12590$17Rald
                           (case-lambda
                             ((g$i$12591$17Rald)
                              (if (g$fx=?$16030$17Rald
                                    g$i$12591$17Rald
                                    g$len$12588$17Rald)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12589$17Rald)
                                (begin
                                  (g$vector-set!$12285$17Rald
                                    g$res$12589$17Rald
                                    g$i$12591$17Rald
                                    (if (null? g$vecs$12587$17Rald)
                                      (g$p$12585$17Rald
                                        (g$vector-ref$12284$17Rald
                                          g$vec1$12586$17Rald
                                          g$i$12591$17Rald))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$11835$17Rald
                                               (case-lambda
                                                 ((g$x$12592$17Rald)
                                                  (g$vector-ref$12284$17Rald
                                                    g$x$12592$17Rald
                                                    g$i$12591$17Rald)))
                                               (cons
                                                 g$vec1$12586$17Rald
                                                 g$vecs$12587$17Rald)))))
                                        g$p$12585$17Rald)))
                                  (g$loop$12590$17Rald
                                    (g$fx+$16017$17Rald
                                      g$i$12591$17Rald
                                      '1))))))))
                  (g$loop$12590$17Rald '0))))
             (make-vector g$len$12588$17Rald '()))))
         (vector-length g$vec1$12586$17Rald)))))
   (g$vector-for-each$12422$17Rald
     g$vector-for-each$12680$17Rald
     (case-lambda
       ((g$p$12593$17Rald g$vec1$12594$17Rald . g$vecs$12595$17Rald)
        ((case-lambda
           ((g$len$12596$17Rald)
            (letrec ((g$loop$12597$17Rald
                       (case-lambda
                         ((g$i$12598$17Rald)
                          (if (g$fx=?$16030$17Rald
                                g$i$12598$17Rald
                                g$len$12596$17Rald)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$12595$17Rald)
                                (g$p$12593$17Rald
                                  (g$vector-ref$12284$17Rald
                                    g$vec1$12594$17Rald
                                    g$i$12598$17Rald))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$17Rald
                                         (case-lambda
                                           ((g$x$12599$17Rald)
                                            (g$vector-ref$12284$17Rald
                                              g$x$12599$17Rald
                                              g$i$12598$17Rald)))
                                         (cons
                                           g$vec1$12594$17Rald
                                           g$vecs$12595$17Rald)))))
                                  g$p$12593$17Rald))
                              (g$loop$12597$17Rald
                                (g$fx+$16017$17Rald
                                  g$i$12598$17Rald
                                  '1))))))))
              (g$loop$12597$17Rald '0))))
         (vector-length g$vec1$12594$17Rald)))))
   (g$string-for-each$12423$17Rald
     g$string-for-each$12681$17Rald
     (case-lambda
       ((g$p$12600$17Rald g$str1$12601$17Rald . g$strs$12602$17Rald)
        ((case-lambda
           ((g$len$12603$17Rald)
            (letrec ((g$loop$12604$17Rald
                       (case-lambda
                         ((g$i$12605$17Rald)
                          (if (g$fx=?$16030$17Rald
                                g$i$12605$17Rald
                                g$len$12603$17Rald)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$12602$17Rald)
                                (g$p$12600$17Rald
                                  (string-ref
                                    g$str1$12601$17Rald
                                    g$i$12605$17Rald))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$17Rald
                                         (case-lambda
                                           ((g$x$12606$17Rald)
                                            (string-ref
                                              g$x$12606$17Rald
                                              g$i$12605$17Rald)))
                                         (cons
                                           g$str1$12601$17Rald
                                           g$strs$12602$17Rald)))))
                                  g$p$12600$17Rald))
                              (g$loop$12604$17Rald
                                (g$fx+$16017$17Rald
                                  g$i$12605$17Rald
                                  '1))))))))
              (g$loop$12604$17Rald '0))))
         (string-length g$str1$12601$17Rald))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12683$17Rald
     g$using$12717$17Rald
     (clr-using-internal 'system))
   (g$using$12685$17Rald
     g$using$12718$17Rald
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$12686$17Rald
     g$make-eq-hashtable$12719$17Rald
     (case-lambda
       (() (g$make-eq-hashtable$12686$17Rald '32))
       ((g$k$12695$17Rald)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12695$17Rald)))))
   (g$make-eqv-hashtable$12687$17Rald
     g$make-eqv-hashtable$12720$17Rald
     (case-lambda
       (() (g$make-eqv-hashtable$12687$17Rald '32))
       ((g$k$12696$17Rald)
        (make-hashtable eqv-hash eqv? g$k$12696$17Rald))))
   (g$hashtable-size$12688$17Rald
     g$hashtable-size$12721$17Rald
     (case-lambda
       ((g$ht$12697$17Rald)
        (clr-call-internal 'hashtable 'get_count g$ht$12697$17Rald))))
   (g$hashtable-ref$12689$17Rald
     g$hashtable-ref$12722$17Rald
     (case-lambda
       ((g$ht$12698$17Rald g$key$12699$17Rald g$default$12700$17Rald)
        (letrec* ((g$r$12701$17Rald
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$12698$17Rald
                      g$key$12699$17Rald)))
          (if ((case-lambda
                 ((g$t$12702$17Rald)
                  (if g$t$12702$17Rald
                    g$t$12702$17Rald
                    (begin
                      '#f
                      (g$hashtable-contains?$12692$17Rald
                        g$ht$12698$17Rald
                        g$key$12699$17Rald)))))
               (not (null? g$r$12701$17Rald)))
            g$r$12701$17Rald
            g$default$12700$17Rald)))))
   (g$hashtable-set!$12690$17Rald
     g$hashtable-set!$12723$17Rald
     (case-lambda
       ((g$ht$12703$17Rald g$key$12704$17Rald g$obj$12705$17Rald)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12703$17Rald
          g$key$12704$17Rald
          g$obj$12705$17Rald))))
   (g$hashtable-delete!$12691$17Rald
     g$hashtable-delete!$12724$17Rald
     (case-lambda
       ((g$ht$12706$17Rald g$key$12707$17Rald)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12706$17Rald
          g$key$12707$17Rald))))
   (g$hashtable-contains?$12692$17Rald
     g$hashtable-contains?$12725$17Rald
     (case-lambda
       ((g$ht$12708$17Rald g$key$12709$17Rald)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12708$17Rald
          g$key$12709$17Rald))))
   (g$hashtable-update!$12693$17Rald
     g$hashtable-update!$12726$17Rald
     (case-lambda
       ((g$ht$12710$17Rald
          g$key$12711$17Rald
          g$proc$12712$17Rald
          g$default$12713$17Rald)
        (g$hashtable-set!$12690$17Rald
          g$ht$12710$17Rald
          g$key$12711$17Rald
          (g$proc$12712$17Rald
            (g$hashtable-ref$12689$17Rald
              g$ht$12710$17Rald
              g$key$12711$17Rald
              g$default$12713$17Rald))))))
   (g$hashtable-clear!$12694$17Rald
     g$hashtable-clear!$12727$17Rald
     (case-lambda
       ((g$ht$12714$17Rald)
        (g$hashtable-clear!$12694$17Rald g$ht$12714$17Rald '32))
       ((g$ht$12715$17Rald g$k$12716$17Rald)
        (clr-call-internal 'hashtable 'clear g$ht$12715$17Rald)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12729$17Rald
     g$using$12736$17Rald
     (clr-using-internal 'system.io))
   (g$file-exists?$12730$17Rald
     g$file-exists?$12737$17Rald
     (case-lambda
       ((g$fn$12733$17Rald)
        (clr-call-internal 'file 'exists '() g$fn$12733$17Rald))))
   (g$delete-file$12731$17Rald
     g$delete-file$12738$17Rald
     (case-lambda
       ((g$fn$12734$17Rald)
        (clr-call-internal 'file 'delete '() g$fn$12734$17Rald))))
   (g$get-directory-name$12732$17Rald
     g$get-directory-name$12739$17Rald
     (case-lambda
       ((g$path$12735$17Rald)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12735$17Rald)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12740$17Rald
     g$native-endianness$12851$17Rald
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$12741$17Rald
     g$bytevector-u16-ref$12852$17Rald
     (case-lambda
       ((g$bytevector$12769$17Rald
          g$k$12770$17Rald
          g$endianness$12771$17Rald)
        (bytevector-uint-ref
          g$bytevector$12769$17Rald
          g$k$12770$17Rald
          g$endianness$12771$17Rald
          '2))))
   (g$bytevector-s16-ref$12742$17Rald
     g$bytevector-s16-ref$12853$17Rald
     (case-lambda
       ((g$bytevector$12772$17Rald
          g$k$12773$17Rald
          g$endianness$12774$17Rald)
        (bytevector-sint-ref
          g$bytevector$12772$17Rald
          g$k$12773$17Rald
          g$endianness$12774$17Rald
          '2))))
   (g$bytevector-u16-native-ref$12743$17Rald
     g$bytevector-u16-native-ref$12854$17Rald
     (case-lambda
       ((g$bytevector$12775$17Rald g$k$12776$17Rald)
        (bytevector-uint-ref
          g$bytevector$12775$17Rald
          g$k$12776$17Rald
          (g$native-endianness$12740$17Rald)
          '2))))
   (g$bytevector-s16-native-ref$12744$17Rald
     g$bytevector-s16-native-ref$12855$17Rald
     (case-lambda
       ((g$bytevector$12777$17Rald g$k$12778$17Rald)
        (bytevector-sint-ref
          g$bytevector$12777$17Rald
          g$k$12778$17Rald
          (g$native-endianness$12740$17Rald)
          '2))))
   (g$bytevector-u16-set!$12745$17Rald
     g$bytevector-u16-set!$12856$17Rald
     (case-lambda
       ((g$bytevector$12779$17Rald
          g$k$12780$17Rald
          g$n$12781$17Rald
          g$endianness$12782$17Rald)
        (bytevector-uint-set!
          g$bytevector$12779$17Rald
          g$k$12780$17Rald
          g$n$12781$17Rald
          g$endianness$12782$17Rald
          '2))))
   (g$bytevector-s16-set!$12746$17Rald
     g$bytevector-s16-set!$12857$17Rald
     (case-lambda
       ((g$bytevector$12783$17Rald
          g$k$12784$17Rald
          g$n$12785$17Rald
          g$endianness$12786$17Rald)
        (bytevector-sint-set!
          g$bytevector$12783$17Rald
          g$k$12784$17Rald
          g$n$12785$17Rald
          g$endianness$12786$17Rald
          '2))))
   (g$bytevector-u16-native-set!$12747$17Rald
     g$bytevector-u16-native-set!$12858$17Rald
     (case-lambda
       ((g$bytevector$12787$17Rald g$k$12788$17Rald g$n$12789$17Rald)
        (bytevector-uint-set!
          g$bytevector$12787$17Rald
          g$k$12788$17Rald
          g$n$12789$17Rald
          (g$native-endianness$12740$17Rald)
          '2))))
   (g$bytevector-s16-native-set!$12748$17Rald
     g$bytevector-s16-native-set!$12859$17Rald
     (case-lambda
       ((g$bytevector$12790$17Rald g$k$12791$17Rald g$n$12792$17Rald)
        (bytevector-sint-set!
          g$bytevector$12790$17Rald
          g$k$12791$17Rald
          g$n$12792$17Rald
          (g$native-endianness$12740$17Rald)
          '2))))
   (g$bytevector-u32-ref$12749$17Rald
     g$bytevector-u32-ref$12860$17Rald
     (case-lambda
       ((g$bytevector$12793$17Rald
          g$k$12794$17Rald
          g$endianness$12795$17Rald)
        (bytevector-uint-ref
          g$bytevector$12793$17Rald
          g$k$12794$17Rald
          g$endianness$12795$17Rald
          '4))))
   (g$bytevector-s32-ref$12750$17Rald
     g$bytevector-s32-ref$12861$17Rald
     (case-lambda
       ((g$bytevector$12796$17Rald
          g$k$12797$17Rald
          g$endianness$12798$17Rald)
        (bytevector-sint-ref
          g$bytevector$12796$17Rald
          g$k$12797$17Rald
          g$endianness$12798$17Rald
          '4))))
   (g$bytevector-u32-native-ref$12751$17Rald
     g$bytevector-u32-native-ref$12862$17Rald
     (case-lambda
       ((g$bytevector$12799$17Rald g$k$12800$17Rald)
        (bytevector-uint-ref
          g$bytevector$12799$17Rald
          g$k$12800$17Rald
          (g$native-endianness$12740$17Rald)
          '4))))
   (g$bytevector-s32-native-ref$12752$17Rald
     g$bytevector-s32-native-ref$12863$17Rald
     (case-lambda
       ((g$bytevector$12801$17Rald g$k$12802$17Rald)
        (bytevector-sint-ref
          g$bytevector$12801$17Rald
          g$k$12802$17Rald
          (g$native-endianness$12740$17Rald)
          '4))))
   (g$bytevector-u32-set!$12753$17Rald
     g$bytevector-u32-set!$12864$17Rald
     (case-lambda
       ((g$bytevector$12803$17Rald
          g$k$12804$17Rald
          g$n$12805$17Rald
          g$endianness$12806$17Rald)
        (bytevector-uint-set!
          g$bytevector$12803$17Rald
          g$k$12804$17Rald
          g$n$12805$17Rald
          g$endianness$12806$17Rald
          '4))))
   (g$bytevector-s32-set!$12754$17Rald
     g$bytevector-s32-set!$12865$17Rald
     (case-lambda
       ((g$bytevector$12807$17Rald
          g$k$12808$17Rald
          g$n$12809$17Rald
          g$endianness$12810$17Rald)
        (bytevector-sint-set!
          g$bytevector$12807$17Rald
          g$k$12808$17Rald
          g$n$12809$17Rald
          g$endianness$12810$17Rald
          '4))))
   (g$bytevector-u32-native-set!$12755$17Rald
     g$bytevector-u32-native-set!$12866$17Rald
     (case-lambda
       ((g$bytevector$12811$17Rald g$k$12812$17Rald g$n$12813$17Rald)
        (bytevector-uint-set!
          g$bytevector$12811$17Rald
          g$k$12812$17Rald
          g$n$12813$17Rald
          (g$native-endianness$12740$17Rald)
          '4))))
   (g$bytevector-s32-native-set!$12756$17Rald
     g$bytevector-s32-native-set!$12867$17Rald
     (case-lambda
       ((g$bytevector$12814$17Rald g$k$12815$17Rald g$n$12816$17Rald)
        (bytevector-sint-set!
          g$bytevector$12814$17Rald
          g$k$12815$17Rald
          g$n$12816$17Rald
          (g$native-endianness$12740$17Rald)
          '4))))
   (g$bytevector-u64-ref$12757$17Rald
     g$bytevector-u64-ref$12868$17Rald
     (case-lambda
       ((g$bytevector$12817$17Rald
          g$k$12818$17Rald
          g$endianness$12819$17Rald)
        (bytevector-uint-ref
          g$bytevector$12817$17Rald
          g$k$12818$17Rald
          g$endianness$12819$17Rald
          '8))))
   (g$bytevector-s64-ref$12758$17Rald
     g$bytevector-s64-ref$12869$17Rald
     (case-lambda
       ((g$bytevector$12820$17Rald
          g$k$12821$17Rald
          g$endianness$12822$17Rald)
        (bytevector-sint-ref
          g$bytevector$12820$17Rald
          g$k$12821$17Rald
          g$endianness$12822$17Rald
          '8))))
   (g$bytevector-u64-native-ref$12759$17Rald
     g$bytevector-u64-native-ref$12870$17Rald
     (case-lambda
       ((g$bytevector$12823$17Rald g$k$12824$17Rald)
        (bytevector-uint-ref
          g$bytevector$12823$17Rald
          g$k$12824$17Rald
          (g$native-endianness$12740$17Rald)
          '8))))
   (g$bytevector-s64-native-ref$12760$17Rald
     g$bytevector-s64-native-ref$12871$17Rald
     (case-lambda
       ((g$bytevector$12825$17Rald g$k$12826$17Rald)
        (bytevector-sint-ref
          g$bytevector$12825$17Rald
          g$k$12826$17Rald
          (g$native-endianness$12740$17Rald)
          '8))))
   (g$bytevector-u64-set!$12761$17Rald
     g$bytevector-u64-set!$12872$17Rald
     (case-lambda
       ((g$bytevector$12827$17Rald
          g$k$12828$17Rald
          g$n$12829$17Rald
          g$endianness$12830$17Rald)
        (bytevector-uint-set!
          g$bytevector$12827$17Rald
          g$k$12828$17Rald
          g$n$12829$17Rald
          g$endianness$12830$17Rald
          '8))))
   (g$bytevector-s64-set!$12762$17Rald
     g$bytevector-s64-set!$12873$17Rald
     (case-lambda
       ((g$bytevector$12831$17Rald
          g$k$12832$17Rald
          g$n$12833$17Rald
          g$endianness$12834$17Rald)
        (bytevector-sint-set!
          g$bytevector$12831$17Rald
          g$k$12832$17Rald
          g$n$12833$17Rald
          g$endianness$12834$17Rald
          '8))))
   (g$bytevector-u64-native-set!$12763$17Rald
     g$bytevector-u64-native-set!$12874$17Rald
     (case-lambda
       ((g$bytevector$12835$17Rald g$k$12836$17Rald g$n$12837$17Rald)
        (bytevector-uint-set!
          g$bytevector$12835$17Rald
          g$k$12836$17Rald
          g$n$12837$17Rald
          (g$native-endianness$12740$17Rald)
          '8))))
   (g$bytevector-s64-native-set!$12764$17Rald
     g$bytevector-s64-native-set!$12875$17Rald
     (case-lambda
       ((g$bytevector$12838$17Rald g$k$12839$17Rald g$n$12840$17Rald)
        (bytevector-sint-set!
          g$bytevector$12838$17Rald
          g$k$12839$17Rald
          g$n$12840$17Rald
          (g$native-endianness$12740$17Rald)
          '8))))
   (g$bytevector-ieee-single-native-ref$12765$17Rald
     g$bytevector-ieee-single-native-ref$12876$17Rald
     (case-lambda
       ((g$bytevector$12841$17Rald g$k$12842$17Rald)
        (if (not (g$zero?$12657$17Rald
                   (g$mod$12616$17Rald g$k$12842$17Rald '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$12842$17Rald)
          (bytevector-ieee-single-ref
            g$bytevector$12841$17Rald
            g$k$12842$17Rald
            (g$native-endianness$12740$17Rald))))))
   (g$bytevector-ieee-double-native-ref$12766$17Rald
     g$bytevector-ieee-double-native-ref$12877$17Rald
     (case-lambda
       ((g$bytevector$12843$17Rald g$k$12844$17Rald)
        (if (not (g$zero?$12657$17Rald
                   (g$mod$12616$17Rald g$k$12844$17Rald '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$12844$17Rald)
          (bytevector-ieee-double-ref
            g$bytevector$12843$17Rald
            g$k$12844$17Rald
            (g$native-endianness$12740$17Rald))))))
   (g$bytevector-ieee-single-native-set!$12767$17Rald
     g$bytevector-ieee-single-native-set!$12878$17Rald
     (case-lambda
       ((g$bytevector$12845$17Rald g$k$12846$17Rald g$x$12847$17Rald)
        (if (not (g$zero?$12657$17Rald
                   (g$mod$12616$17Rald g$k$12846$17Rald '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$12846$17Rald)
          (bytevector-ieee-single-set!
            g$bytevector$12845$17Rald
            g$k$12846$17Rald
            g$x$12847$17Rald
            (g$native-endianness$12740$17Rald))))))
   (g$bytevector-ieee-double-native-set!$12768$17Rald
     g$bytevector-ieee-double-native-set!$12879$17Rald
     (case-lambda
       ((g$bytevector$12848$17Rald g$k$12849$17Rald g$x$12850$17Rald)
        (if (not (g$zero?$12657$17Rald
                   (g$mod$12616$17Rald g$k$12849$17Rald '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$12849$17Rald)
          (bytevector-ieee-double-set!
            g$bytevector$12848$17Rald
            g$k$12849$17Rald
            g$x$12850$17Rald
            (g$native-endianness$12740$17Rald)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5908$12880$17Rald
     g$5908$13282$17Rald
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5911$17Rald
       '#f
       '#f
       '#()))
   (g$5910$12881$17Rald g$5910$13283$17Rald '#f)
   (g$5909$12882$17Rald
     g$5909$13284$17Rald
     (make-record-constructor-descriptor
       g$5908$12880$17Rald
       '#f
       g$5910$12881$17Rald))
   (g$&condition?$12885$17Rald
     g$&condition?$13285$17Rald
     (record-predicate g$5908$12880$17Rald))
   (g$make-&condition$12886$17Rald
     g$make-&condition$13286$17Rald
     (record-constructor g$5909$12882$17Rald))
   (g$&condition-rtd$12887$17Rald
     g$&condition-rtd$13287$17Rald
     g$5908$12880$17Rald)
   (g$&condition-rcd$12888$17Rald
     g$&condition-rcd$13288$17Rald
     g$5909$12882$17Rald)
   (g$5945$12986$17Rald
     g$5945$13289$17Rald
     (make-record-type-descriptor
       '&message
       g$5908$12880$17Rald
       'g$5948$17Rald
       '#f
       '#f
       '#((immutable message))))
   (g$5947$12987$17Rald g$5947$13290$17Rald '#f)
   (g$5946$12988$17Rald
     g$5946$13291$17Rald
     (make-record-constructor-descriptor
       g$5945$12986$17Rald
       g$5909$12882$17Rald
       g$5947$12987$17Rald))
   (g$p?$12991$17Rald
     g$p?$13292$17Rald
     (record-predicate g$5945$12986$17Rald))
   (g$make-message-condition$12992$17Rald
     g$make-message-condition$13293$17Rald
     (record-constructor g$5946$12988$17Rald))
   (g$condition-message$12993$17Rald
     g$condition-message$13294$17Rald
     (record-accessor g$5945$12986$17Rald '0))
   (g$message-condition?$12994$17Rald
     g$message-condition?$13295$17Rald
     (condition-predicate g$5945$12986$17Rald))
   (g$condition-message$12995$17Rald
     g$condition-message$13296$17Rald
     (condition-accessor
       g$5945$12986$17Rald
       g$condition-message$12993$17Rald))
   (g$&message-rtd$12996$17Rald
     g$&message-rtd$13297$17Rald
     g$5945$12986$17Rald)
   (g$&message-rcd$12997$17Rald
     g$&message-rcd$13298$17Rald
     g$5946$12988$17Rald)
   (g$5960$12998$17Rald
     g$5960$13299$17Rald
     (make-record-type-descriptor
       '&warning
       g$5908$12880$17Rald
       'g$5963$17Rald
       '#f
       '#f
       '#()))
   (g$5962$12999$17Rald g$5962$13300$17Rald '#f)
   (g$5961$13000$17Rald
     g$5961$13301$17Rald
     (make-record-constructor-descriptor
       g$5960$12998$17Rald
       g$5909$12882$17Rald
       g$5962$12999$17Rald))
   (g$p?$13003$17Rald
     g$p?$13302$17Rald
     (record-predicate g$5960$12998$17Rald))
   (g$make-warning$13004$17Rald
     g$make-warning$13303$17Rald
     (record-constructor g$5961$13000$17Rald))
   (g$warning?$13005$17Rald
     g$warning?$13304$17Rald
     (condition-predicate g$5960$12998$17Rald))
   (g$&warning-rtd$13006$17Rald
     g$&warning-rtd$13305$17Rald
     g$5960$12998$17Rald)
   (g$&warning-rcd$13007$17Rald
     g$&warning-rcd$13306$17Rald
     g$5961$13000$17Rald)
   (g$5973$13008$17Rald
     g$5973$13307$17Rald
     (make-record-type-descriptor
       '&serious
       g$5908$12880$17Rald
       'g$5976$17Rald
       '#f
       '#f
       '#()))
   (g$5975$13009$17Rald g$5975$13308$17Rald '#f)
   (g$5974$13010$17Rald
     g$5974$13309$17Rald
     (make-record-constructor-descriptor
       g$5973$13008$17Rald
       g$5909$12882$17Rald
       g$5975$13009$17Rald))
   (g$p?$13013$17Rald
     g$p?$13310$17Rald
     (record-predicate g$5973$13008$17Rald))
   (g$make-serious-condition$13014$17Rald
     g$make-serious-condition$13311$17Rald
     (record-constructor g$5974$13010$17Rald))
   (g$serious-condition?$13015$17Rald
     g$serious-condition?$13312$17Rald
     (condition-predicate g$5973$13008$17Rald))
   (g$&serious-rtd$13016$17Rald
     g$&serious-rtd$13313$17Rald
     g$5973$13008$17Rald)
   (g$&serious-rcd$13017$17Rald
     g$&serious-rcd$13314$17Rald
     g$5974$13010$17Rald)
   (g$5986$13018$17Rald
     g$5986$13315$17Rald
     (make-record-type-descriptor
       '&error
       g$5973$13008$17Rald
       'g$5989$17Rald
       '#f
       '#f
       '#()))
   (g$5988$13019$17Rald g$5988$13316$17Rald '#f)
   (g$5987$13020$17Rald
     g$5987$13317$17Rald
     (make-record-constructor-descriptor
       g$5986$13018$17Rald
       g$5974$13010$17Rald
       g$5988$13019$17Rald))
   (g$p?$13023$17Rald
     g$p?$13318$17Rald
     (record-predicate g$5986$13018$17Rald))
   (g$make-error$13024$17Rald
     g$make-error$13319$17Rald
     (record-constructor g$5987$13020$17Rald))
   (g$error?$13025$17Rald
     g$error?$13320$17Rald
     (condition-predicate g$5986$13018$17Rald))
   (g$&error-rtd$13026$17Rald
     g$&error-rtd$13321$17Rald
     g$5986$13018$17Rald)
   (g$&error-rcd$13027$17Rald
     g$&error-rcd$13322$17Rald
     g$5987$13020$17Rald)
   (g$5999$13028$17Rald
     g$5999$13323$17Rald
     (make-record-type-descriptor
       '&violation
       g$5973$13008$17Rald
       'g$6002$17Rald
       '#f
       '#f
       '#()))
   (g$6001$13029$17Rald g$6001$13324$17Rald '#f)
   (g$6000$13030$17Rald
     g$6000$13325$17Rald
     (make-record-constructor-descriptor
       g$5999$13028$17Rald
       g$5974$13010$17Rald
       g$6001$13029$17Rald))
   (g$p?$13033$17Rald
     g$p?$13326$17Rald
     (record-predicate g$5999$13028$17Rald))
   (g$make-violation$13034$17Rald
     g$make-violation$13327$17Rald
     (record-constructor g$6000$13030$17Rald))
   (g$violation?$13035$17Rald
     g$violation?$13328$17Rald
     (condition-predicate g$5999$13028$17Rald))
   (g$&violation-rtd$13036$17Rald
     g$&violation-rtd$13329$17Rald
     g$5999$13028$17Rald)
   (g$&violation-rcd$13037$17Rald
     g$&violation-rcd$13330$17Rald
     g$6000$13030$17Rald)
   (g$6012$13038$17Rald
     g$6012$13331$17Rald
     (make-record-type-descriptor
       '&assertion
       g$5999$13028$17Rald
       'g$6015$17Rald
       '#f
       '#f
       '#()))
   (g$6014$13039$17Rald g$6014$13332$17Rald '#f)
   (g$6013$13040$17Rald
     g$6013$13333$17Rald
     (make-record-constructor-descriptor
       g$6012$13038$17Rald
       g$6000$13030$17Rald
       g$6014$13039$17Rald))
   (g$p?$13043$17Rald
     g$p?$13334$17Rald
     (record-predicate g$6012$13038$17Rald))
   (g$make-assertion-violation$13044$17Rald
     g$make-assertion-violation$13335$17Rald
     (record-constructor g$6013$13040$17Rald))
   (g$assertion-violation?$13045$17Rald
     g$assertion-violation?$13336$17Rald
     (condition-predicate g$6012$13038$17Rald))
   (g$&assertion-rtd$13046$17Rald
     g$&assertion-rtd$13337$17Rald
     g$6012$13038$17Rald)
   (g$&assertion-rcd$13047$17Rald
     g$&assertion-rcd$13338$17Rald
     g$6013$13040$17Rald)
   (g$6025$13049$17Rald
     g$6025$13339$17Rald
     (make-record-type-descriptor
       '&irritants
       g$5908$12880$17Rald
       'g$6028$17Rald
       '#f
       '#f
       '#((immutable irritants))))
   (g$6027$13050$17Rald g$6027$13340$17Rald '#f)
   (g$6026$13051$17Rald
     g$6026$13341$17Rald
     (make-record-constructor-descriptor
       g$6025$13049$17Rald
       g$5909$12882$17Rald
       g$6027$13050$17Rald))
   (g$p?$13054$17Rald
     g$p?$13342$17Rald
     (record-predicate g$6025$13049$17Rald))
   (g$make-irritants-condition$13055$17Rald
     g$make-irritants-condition$13343$17Rald
     (record-constructor g$6026$13051$17Rald))
   (g$condition-irritants$13056$17Rald
     g$condition-irritants$13344$17Rald
     (record-accessor g$6025$13049$17Rald '0))
   (g$irritants-condition?$13057$17Rald
     g$irritants-condition?$13345$17Rald
     (condition-predicate g$6025$13049$17Rald))
   (g$condition-irritants$13058$17Rald
     g$condition-irritants$13346$17Rald
     (condition-accessor
       g$6025$13049$17Rald
       g$condition-irritants$13056$17Rald))
   (g$&irritants-rtd$13059$17Rald
     g$&irritants-rtd$13347$17Rald
     g$6025$13049$17Rald)
   (g$&irritants-rcd$13060$17Rald
     g$&irritants-rcd$13348$17Rald
     g$6026$13051$17Rald)
   (g$6040$13062$17Rald
     g$6040$13349$17Rald
     (make-record-type-descriptor
       '&who
       g$5908$12880$17Rald
       'g$6043$17Rald
       '#f
       '#f
       '#((immutable who))))
   (g$6042$13063$17Rald g$6042$13350$17Rald '#f)
   (g$6041$13064$17Rald
     g$6041$13351$17Rald
     (make-record-constructor-descriptor
       g$6040$13062$17Rald
       g$5909$12882$17Rald
       g$6042$13063$17Rald))
   (g$p?$13067$17Rald
     g$p?$13352$17Rald
     (record-predicate g$6040$13062$17Rald))
   (g$make-who-condition$13068$17Rald
     g$make-who-condition$13353$17Rald
     (record-constructor g$6041$13064$17Rald))
   (g$condition-who$13069$17Rald
     g$condition-who$13354$17Rald
     (record-accessor g$6040$13062$17Rald '0))
   (g$who-condition?$13070$17Rald
     g$who-condition?$13355$17Rald
     (condition-predicate g$6040$13062$17Rald))
   (g$condition-who$13071$17Rald
     g$condition-who$13356$17Rald
     (condition-accessor
       g$6040$13062$17Rald
       g$condition-who$13069$17Rald))
   (g$&who-rtd$13072$17Rald g$&who-rtd$13357$17Rald g$6040$13062$17Rald)
   (g$&who-rcd$13073$17Rald g$&who-rcd$13358$17Rald g$6041$13064$17Rald)
   (g$6055$13074$17Rald
     g$6055$13359$17Rald
     (make-record-type-descriptor
       '&non-continuable
       g$5999$13028$17Rald
       'g$6058$17Rald
       '#f
       '#f
       '#()))
   (g$6057$13075$17Rald g$6057$13360$17Rald '#f)
   (g$6056$13076$17Rald
     g$6056$13361$17Rald
     (make-record-constructor-descriptor
       g$6055$13074$17Rald
       g$6000$13030$17Rald
       g$6057$13075$17Rald))
   (g$p?$13079$17Rald
     g$p?$13362$17Rald
     (record-predicate g$6055$13074$17Rald))
   (g$make-non-continuable-violation$13080$17Rald
     g$make-non-continuable-violation$13363$17Rald
     (record-constructor g$6056$13076$17Rald))
   (g$non-continuable-violation?$13081$17Rald
     g$non-continuable-violation?$13364$17Rald
     (condition-predicate g$6055$13074$17Rald))
   (g$&non-continuable-rtd$13082$17Rald
     g$&non-continuable-rtd$13365$17Rald
     g$6055$13074$17Rald)
   (g$&non-continuable-rcd$13083$17Rald
     g$&non-continuable-rcd$13366$17Rald
     g$6056$13076$17Rald)
   (g$6068$13084$17Rald
     g$6068$13367$17Rald
     (make-record-type-descriptor
       '&implementation-restriction
       g$5999$13028$17Rald
       'g$6071$17Rald
       '#f
       '#f
       '#()))
   (g$6070$13085$17Rald g$6070$13368$17Rald '#f)
   (g$6069$13086$17Rald
     g$6069$13369$17Rald
     (make-record-constructor-descriptor
       g$6068$13084$17Rald
       g$6000$13030$17Rald
       g$6070$13085$17Rald))
   (g$p?$13089$17Rald
     g$p?$13370$17Rald
     (record-predicate g$6068$13084$17Rald))
   (g$make-implementation-restriction-violation$13090$17Rald
     g$make-implementation-restriction-violation$13371$17Rald
     (record-constructor g$6069$13086$17Rald))
   (g$implementation-restriction-violation?$13091$17Rald
     g$implementation-restriction-violation?$13372$17Rald
     (condition-predicate g$6068$13084$17Rald))
   (g$&implementation-restriction-rtd$13092$17Rald
     g$&implementation-restriction-rtd$13373$17Rald
     g$6068$13084$17Rald)
   (g$&implementation-restriction-rcd$13093$17Rald
     g$&implementation-restriction-rcd$13374$17Rald
     g$6069$13086$17Rald)
   (g$6081$13094$17Rald
     g$6081$13375$17Rald
     (make-record-type-descriptor
       '&lexical
       g$5999$13028$17Rald
       'g$6084$17Rald
       '#f
       '#f
       '#()))
   (g$6083$13095$17Rald g$6083$13376$17Rald '#f)
   (g$6082$13096$17Rald
     g$6082$13377$17Rald
     (make-record-constructor-descriptor
       g$6081$13094$17Rald
       g$6000$13030$17Rald
       g$6083$13095$17Rald))
   (g$p?$13099$17Rald
     g$p?$13378$17Rald
     (record-predicate g$6081$13094$17Rald))
   (g$make-lexical-violation$13100$17Rald
     g$make-lexical-violation$13379$17Rald
     (record-constructor g$6082$13096$17Rald))
   (g$lexical-violation?$13101$17Rald
     g$lexical-violation?$13380$17Rald
     (condition-predicate g$6081$13094$17Rald))
   (g$&lexical-rtd$13102$17Rald
     g$&lexical-rtd$13381$17Rald
     g$6081$13094$17Rald)
   (g$&lexical-rcd$13103$17Rald
     g$&lexical-rcd$13382$17Rald
     g$6082$13096$17Rald)
   (g$6094$13106$17Rald
     g$6094$13383$17Rald
     (make-record-type-descriptor
       '&syntax
       g$5999$13028$17Rald
       'g$6097$17Rald
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6096$13107$17Rald g$6096$13384$17Rald '#f)
   (g$6095$13108$17Rald
     g$6095$13385$17Rald
     (make-record-constructor-descriptor
       g$6094$13106$17Rald
       g$6000$13030$17Rald
       g$6096$13107$17Rald))
   (g$p?$13111$17Rald
     g$p?$13386$17Rald
     (record-predicate g$6094$13106$17Rald))
   (g$make-syntax-violation$13112$17Rald
     g$make-syntax-violation$13387$17Rald
     (record-constructor g$6095$13108$17Rald))
   (g$syntax-violation-form$13113$17Rald
     g$syntax-violation-form$13388$17Rald
     (record-accessor g$6094$13106$17Rald '0))
   (g$syntax-violation-subform$13114$17Rald
     g$syntax-violation-subform$13389$17Rald
     (record-accessor g$6094$13106$17Rald '1))
   (g$syntax-violation?$13115$17Rald
     g$syntax-violation?$13390$17Rald
     (condition-predicate g$6094$13106$17Rald))
   (g$syntax-violation-form$13116$17Rald
     g$syntax-violation-form$13391$17Rald
     (condition-accessor
       g$6094$13106$17Rald
       g$syntax-violation-form$13113$17Rald))
   (g$syntax-violation-subform$13117$17Rald
     g$syntax-violation-subform$13392$17Rald
     (condition-accessor
       g$6094$13106$17Rald
       g$syntax-violation-subform$13114$17Rald))
   (g$&syntax-rtd$13118$17Rald
     g$&syntax-rtd$13393$17Rald
     g$6094$13106$17Rald)
   (g$&syntax-rcd$13119$17Rald
     g$&syntax-rcd$13394$17Rald
     g$6095$13108$17Rald)
   (g$6111$13120$17Rald
     g$6111$13395$17Rald
     (make-record-type-descriptor
       '&undefined
       g$5999$13028$17Rald
       'g$6114$17Rald
       '#f
       '#f
       '#()))
   (g$6113$13121$17Rald g$6113$13396$17Rald '#f)
   (g$6112$13122$17Rald
     g$6112$13397$17Rald
     (make-record-constructor-descriptor
       g$6111$13120$17Rald
       g$6000$13030$17Rald
       g$6113$13121$17Rald))
   (g$p?$13125$17Rald
     g$p?$13398$17Rald
     (record-predicate g$6111$13120$17Rald))
   (g$make-undefined-violation$13126$17Rald
     g$make-undefined-violation$13399$17Rald
     (record-constructor g$6112$13122$17Rald))
   (g$undefined-violation?$13127$17Rald
     g$undefined-violation?$13400$17Rald
     (condition-predicate g$6111$13120$17Rald))
   (g$&undefined-rtd$13128$17Rald
     g$&undefined-rtd$13401$17Rald
     g$6111$13120$17Rald)
   (g$&undefined-rcd$13129$17Rald
     g$&undefined-rcd$13402$17Rald
     g$6112$13122$17Rald)
   (g$6124$13130$17Rald
     g$6124$13403$17Rald
     (make-record-type-descriptor
       '&i/o
       g$5986$13018$17Rald
       'g$6127$17Rald
       '#f
       '#f
       '#()))
   (g$6126$13131$17Rald g$6126$13404$17Rald '#f)
   (g$6125$13132$17Rald
     g$6125$13405$17Rald
     (make-record-constructor-descriptor
       g$6124$13130$17Rald
       g$5987$13020$17Rald
       g$6126$13131$17Rald))
   (g$p?$13135$17Rald
     g$p?$13406$17Rald
     (record-predicate g$6124$13130$17Rald))
   (g$make-i/o-error$13136$17Rald
     g$make-i/o-error$13407$17Rald
     (record-constructor g$6125$13132$17Rald))
   (g$i/o-error?$13137$17Rald
     g$i/o-error?$13408$17Rald
     (condition-predicate g$6124$13130$17Rald))
   (g$&i/o-rtd$13138$17Rald g$&i/o-rtd$13409$17Rald g$6124$13130$17Rald)
   (g$&i/o-rcd$13139$17Rald g$&i/o-rcd$13410$17Rald g$6125$13132$17Rald)
   (g$6137$13140$17Rald
     g$6137$13411$17Rald
     (make-record-type-descriptor
       '&i/o-read
       g$6124$13130$17Rald
       'g$6140$17Rald
       '#f
       '#f
       '#()))
   (g$6139$13141$17Rald g$6139$13412$17Rald '#f)
   (g$6138$13142$17Rald
     g$6138$13413$17Rald
     (make-record-constructor-descriptor
       g$6137$13140$17Rald
       g$6125$13132$17Rald
       g$6139$13141$17Rald))
   (g$p?$13145$17Rald
     g$p?$13414$17Rald
     (record-predicate g$6137$13140$17Rald))
   (g$make-i/o-read-error$13146$17Rald
     g$make-i/o-read-error$13415$17Rald
     (record-constructor g$6138$13142$17Rald))
   (g$i/o-read-error?$13147$17Rald
     g$i/o-read-error?$13416$17Rald
     (condition-predicate g$6137$13140$17Rald))
   (g$&i/o-read-rtd$13148$17Rald
     g$&i/o-read-rtd$13417$17Rald
     g$6137$13140$17Rald)
   (g$&i/o-read-rcd$13149$17Rald
     g$&i/o-read-rcd$13418$17Rald
     g$6138$13142$17Rald)
   (g$6150$13150$17Rald
     g$6150$13419$17Rald
     (make-record-type-descriptor
       '&i/o-write
       g$6124$13130$17Rald
       'g$6153$17Rald
       '#f
       '#f
       '#()))
   (g$6152$13151$17Rald g$6152$13420$17Rald '#f)
   (g$6151$13152$17Rald
     g$6151$13421$17Rald
     (make-record-constructor-descriptor
       g$6150$13150$17Rald
       g$6125$13132$17Rald
       g$6152$13151$17Rald))
   (g$p?$13155$17Rald
     g$p?$13422$17Rald
     (record-predicate g$6150$13150$17Rald))
   (g$make-i/o-write-error$13156$17Rald
     g$make-i/o-write-error$13423$17Rald
     (record-constructor g$6151$13152$17Rald))
   (g$i/o-write-error?$13157$17Rald
     g$i/o-write-error?$13424$17Rald
     (condition-predicate g$6150$13150$17Rald))
   (g$&i/o-write-rtd$13158$17Rald
     g$&i/o-write-rtd$13425$17Rald
     g$6150$13150$17Rald)
   (g$&i/o-write-rcd$13159$17Rald
     g$&i/o-write-rcd$13426$17Rald
     g$6151$13152$17Rald)
   (g$6163$13161$17Rald
     g$6163$13427$17Rald
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6124$13130$17Rald
       'g$6166$17Rald
       '#f
       '#f
       '#((immutable position))))
   (g$6165$13162$17Rald g$6165$13428$17Rald '#f)
   (g$6164$13163$17Rald
     g$6164$13429$17Rald
     (make-record-constructor-descriptor
       g$6163$13161$17Rald
       g$6125$13132$17Rald
       g$6165$13162$17Rald))
   (g$p?$13166$17Rald
     g$p?$13430$17Rald
     (record-predicate g$6163$13161$17Rald))
   (g$make-i/o-invalid-position-error$13167$17Rald
     g$make-i/o-invalid-position-error$13431$17Rald
     (record-constructor g$6164$13163$17Rald))
   (g$i/o-error-position$13168$17Rald
     g$i/o-error-position$13432$17Rald
     (record-accessor g$6163$13161$17Rald '0))
   (g$i/o-invalid-position-error?$13169$17Rald
     g$i/o-invalid-position-error?$13433$17Rald
     (condition-predicate g$6163$13161$17Rald))
   (g$i/o-error-position$13170$17Rald
     g$i/o-error-position$13434$17Rald
     (condition-accessor
       g$6163$13161$17Rald
       g$i/o-error-position$13168$17Rald))
   (g$&i/o-invalid-position-rtd$13171$17Rald
     g$&i/o-invalid-position-rtd$13435$17Rald
     g$6163$13161$17Rald)
   (g$&i/o-invalid-position-rcd$13172$17Rald
     g$&i/o-invalid-position-rcd$13436$17Rald
     g$6164$13163$17Rald)
   (g$6178$13174$17Rald
     g$6178$13437$17Rald
     (make-record-type-descriptor
       '&i/o-filename
       g$6124$13130$17Rald
       'g$6181$17Rald
       '#f
       '#f
       '#((immutable filename))))
   (g$6180$13175$17Rald g$6180$13438$17Rald '#f)
   (g$6179$13176$17Rald
     g$6179$13439$17Rald
     (make-record-constructor-descriptor
       g$6178$13174$17Rald
       g$6125$13132$17Rald
       g$6180$13175$17Rald))
   (g$p?$13179$17Rald
     g$p?$13440$17Rald
     (record-predicate g$6178$13174$17Rald))
   (g$make-i/o-filename-error$13180$17Rald
     g$make-i/o-filename-error$13441$17Rald
     (record-constructor g$6179$13176$17Rald))
   (g$i/o-error-filename$13181$17Rald
     g$i/o-error-filename$13442$17Rald
     (record-accessor g$6178$13174$17Rald '0))
   (g$i/o-filename-error?$13182$17Rald
     g$i/o-filename-error?$13443$17Rald
     (condition-predicate g$6178$13174$17Rald))
   (g$i/o-error-filename$13183$17Rald
     g$i/o-error-filename$13444$17Rald
     (condition-accessor
       g$6178$13174$17Rald
       g$i/o-error-filename$13181$17Rald))
   (g$&i/o-filename-rtd$13184$17Rald
     g$&i/o-filename-rtd$13445$17Rald
     g$6178$13174$17Rald)
   (g$&i/o-filename-rcd$13185$17Rald
     g$&i/o-filename-rcd$13446$17Rald
     g$6179$13176$17Rald)
   (g$6193$13186$17Rald
     g$6193$13447$17Rald
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6178$13174$17Rald
       'g$6196$17Rald
       '#f
       '#f
       '#()))
   (g$6195$13187$17Rald g$6195$13448$17Rald '#f)
   (g$6194$13188$17Rald
     g$6194$13449$17Rald
     (make-record-constructor-descriptor
       g$6193$13186$17Rald
       g$6179$13176$17Rald
       g$6195$13187$17Rald))
   (g$p?$13191$17Rald
     g$p?$13450$17Rald
     (record-predicate g$6193$13186$17Rald))
   (g$make-i/o-file-protection-error$13192$17Rald
     g$make-i/o-file-protection-error$13451$17Rald
     (record-constructor g$6194$13188$17Rald))
   (g$i/o-file-protection-error?$13193$17Rald
     g$i/o-file-protection-error?$13452$17Rald
     (condition-predicate g$6193$13186$17Rald))
   (g$&i/o-file-protection-rtd$13194$17Rald
     g$&i/o-file-protection-rtd$13453$17Rald
     g$6193$13186$17Rald)
   (g$&i/o-file-protection-rcd$13195$17Rald
     g$&i/o-file-protection-rcd$13454$17Rald
     g$6194$13188$17Rald)
   (g$6206$13196$17Rald
     g$6206$13455$17Rald
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6193$13186$17Rald
       'g$6209$17Rald
       '#f
       '#f
       '#()))
   (g$6208$13197$17Rald g$6208$13456$17Rald '#f)
   (g$6207$13198$17Rald
     g$6207$13457$17Rald
     (make-record-constructor-descriptor
       g$6206$13196$17Rald
       g$6194$13188$17Rald
       g$6208$13197$17Rald))
   (g$p?$13201$17Rald
     g$p?$13458$17Rald
     (record-predicate g$6206$13196$17Rald))
   (g$make-i/o-file-is-read-only-error$13202$17Rald
     g$make-i/o-file-is-read-only-error$13459$17Rald
     (record-constructor g$6207$13198$17Rald))
   (g$i/o-file-is-read-only-error?$13203$17Rald
     g$i/o-file-is-read-only-error?$13460$17Rald
     (condition-predicate g$6206$13196$17Rald))
   (g$&i/o-file-is-read-only-rtd$13204$17Rald
     g$&i/o-file-is-read-only-rtd$13461$17Rald
     g$6206$13196$17Rald)
   (g$&i/o-file-is-read-only-rcd$13205$17Rald
     g$&i/o-file-is-read-only-rcd$13462$17Rald
     g$6207$13198$17Rald)
   (g$6219$13206$17Rald
     g$6219$13463$17Rald
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6178$13174$17Rald
       'g$6222$17Rald
       '#f
       '#f
       '#()))
   (g$6221$13207$17Rald g$6221$13464$17Rald '#f)
   (g$6220$13208$17Rald
     g$6220$13465$17Rald
     (make-record-constructor-descriptor
       g$6219$13206$17Rald
       g$6179$13176$17Rald
       g$6221$13207$17Rald))
   (g$p?$13211$17Rald
     g$p?$13466$17Rald
     (record-predicate g$6219$13206$17Rald))
   (g$make-i/o-file-already-exists-error$13212$17Rald
     g$make-i/o-file-already-exists-error$13467$17Rald
     (record-constructor g$6220$13208$17Rald))
   (g$i/o-file-already-exists-error?$13213$17Rald
     g$i/o-file-already-exists-error?$13468$17Rald
     (condition-predicate g$6219$13206$17Rald))
   (g$&i/o-file-already-exists-rtd$13214$17Rald
     g$&i/o-file-already-exists-rtd$13469$17Rald
     g$6219$13206$17Rald)
   (g$&i/o-file-already-exists-rcd$13215$17Rald
     g$&i/o-file-already-exists-rcd$13470$17Rald
     g$6220$13208$17Rald)
   (g$6232$13216$17Rald
     g$6232$13471$17Rald
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6178$13174$17Rald
       'g$6235$17Rald
       '#f
       '#f
       '#()))
   (g$6234$13217$17Rald g$6234$13472$17Rald '#f)
   (g$6233$13218$17Rald
     g$6233$13473$17Rald
     (make-record-constructor-descriptor
       g$6232$13216$17Rald
       g$6179$13176$17Rald
       g$6234$13217$17Rald))
   (g$p?$13221$17Rald
     g$p?$13474$17Rald
     (record-predicate g$6232$13216$17Rald))
   (g$make-i/o-file-does-not-exist-error$13222$17Rald
     g$make-i/o-file-does-not-exist-error$13475$17Rald
     (record-constructor g$6233$13218$17Rald))
   (g$i/o-file-does-not-exist-error?$13223$17Rald
     g$i/o-file-does-not-exist-error?$13476$17Rald
     (condition-predicate g$6232$13216$17Rald))
   (g$&i/o-file-does-not-exist-rtd$13224$17Rald
     g$&i/o-file-does-not-exist-rtd$13477$17Rald
     g$6232$13216$17Rald)
   (g$&i/o-file-does-not-exist-rcd$13225$17Rald
     g$&i/o-file-does-not-exist-rcd$13478$17Rald
     g$6233$13218$17Rald)
   (g$6245$13227$17Rald
     g$6245$13479$17Rald
     (make-record-type-descriptor
       '&i/o-port
       g$6124$13130$17Rald
       'g$6248$17Rald
       '#f
       '#f
       '#((immutable port))))
   (g$6247$13228$17Rald g$6247$13480$17Rald '#f)
   (g$6246$13229$17Rald
     g$6246$13481$17Rald
     (make-record-constructor-descriptor
       g$6245$13227$17Rald
       g$6125$13132$17Rald
       g$6247$13228$17Rald))
   (g$p?$13232$17Rald
     g$p?$13482$17Rald
     (record-predicate g$6245$13227$17Rald))
   (g$make-i/o-port-error$13233$17Rald
     g$make-i/o-port-error$13483$17Rald
     (record-constructor g$6246$13229$17Rald))
   (g$i/o-error-port$13234$17Rald
     g$i/o-error-port$13484$17Rald
     (record-accessor g$6245$13227$17Rald '0))
   (g$i/o-port-error?$13235$17Rald
     g$i/o-port-error?$13485$17Rald
     (condition-predicate g$6245$13227$17Rald))
   (g$i/o-error-port$13236$17Rald
     g$i/o-error-port$13486$17Rald
     (condition-accessor
       g$6245$13227$17Rald
       g$i/o-error-port$13234$17Rald))
   (g$&i/o-port-rtd$13237$17Rald
     g$&i/o-port-rtd$13487$17Rald
     g$6245$13227$17Rald)
   (g$&i/o-port-rcd$13238$17Rald
     g$&i/o-port-rcd$13488$17Rald
     g$6246$13229$17Rald)
   (g$6260$13239$17Rald
     g$6260$13489$17Rald
     (make-record-type-descriptor
       '&i/o-decoding
       g$6245$13227$17Rald
       'g$6263$17Rald
       '#f
       '#f
       '#()))
   (g$6262$13240$17Rald g$6262$13490$17Rald '#f)
   (g$6261$13241$17Rald
     g$6261$13491$17Rald
     (make-record-constructor-descriptor
       g$6260$13239$17Rald
       g$6246$13229$17Rald
       g$6262$13240$17Rald))
   (g$p?$13244$17Rald
     g$p?$13492$17Rald
     (record-predicate g$6260$13239$17Rald))
   (g$make-i/o-decoding-error$13245$17Rald
     g$make-i/o-decoding-error$13493$17Rald
     (record-constructor g$6261$13241$17Rald))
   (g$i/o-decoding-error?$13246$17Rald
     g$i/o-decoding-error?$13494$17Rald
     (condition-predicate g$6260$13239$17Rald))
   (g$&i/o-decoding-rtd$13247$17Rald
     g$&i/o-decoding-rtd$13495$17Rald
     g$6260$13239$17Rald)
   (g$&i/o-decoding-rcd$13248$17Rald
     g$&i/o-decoding-rcd$13496$17Rald
     g$6261$13241$17Rald)
   (g$6273$13250$17Rald
     g$6273$13497$17Rald
     (make-record-type-descriptor
       '&i/o-encoding
       g$6245$13227$17Rald
       'g$6276$17Rald
       '#f
       '#f
       '#((immutable char))))
   (g$6275$13251$17Rald g$6275$13498$17Rald '#f)
   (g$6274$13252$17Rald
     g$6274$13499$17Rald
     (make-record-constructor-descriptor
       g$6273$13250$17Rald
       g$6246$13229$17Rald
       g$6275$13251$17Rald))
   (g$p?$13255$17Rald
     g$p?$13500$17Rald
     (record-predicate g$6273$13250$17Rald))
   (g$make-i/o-encoding-error$13256$17Rald
     g$make-i/o-encoding-error$13501$17Rald
     (record-constructor g$6274$13252$17Rald))
   (g$i/o-encoding-error-char$13257$17Rald
     g$i/o-encoding-error-char$13502$17Rald
     (record-accessor g$6273$13250$17Rald '0))
   (g$i/o-encoding-error?$13258$17Rald
     g$i/o-encoding-error?$13503$17Rald
     (condition-predicate g$6273$13250$17Rald))
   (g$i/o-encoding-error-char$13259$17Rald
     g$i/o-encoding-error-char$13504$17Rald
     (condition-accessor
       g$6273$13250$17Rald
       g$i/o-encoding-error-char$13257$17Rald))
   (g$&i/o-encoding-rtd$13260$17Rald
     g$&i/o-encoding-rtd$13505$17Rald
     g$6273$13250$17Rald)
   (g$&i/o-encoding-rcd$13261$17Rald
     g$&i/o-encoding-rcd$13506$17Rald
     g$6274$13252$17Rald)
   (g$6288$13262$17Rald
     g$6288$13507$17Rald
     (make-record-type-descriptor
       '&no-infinities
       g$6068$13084$17Rald
       'g$6291$17Rald
       '#f
       '#f
       '#()))
   (g$6290$13263$17Rald g$6290$13508$17Rald '#f)
   (g$6289$13264$17Rald
     g$6289$13509$17Rald
     (make-record-constructor-descriptor
       g$6288$13262$17Rald
       g$6069$13086$17Rald
       g$6290$13263$17Rald))
   (g$p?$13267$17Rald
     g$p?$13510$17Rald
     (record-predicate g$6288$13262$17Rald))
   (g$make-no-infinities-violation$13268$17Rald
     g$make-no-infinities-violation$13511$17Rald
     (record-constructor g$6289$13264$17Rald))
   (g$no-infinities-violation?$13269$17Rald
     g$no-infinities-violation?$13512$17Rald
     (condition-predicate g$6288$13262$17Rald))
   (g$&no-infinities-rtd$13270$17Rald
     g$&no-infinities-rtd$13513$17Rald
     g$6288$13262$17Rald)
   (g$&no-infinities-rcd$13271$17Rald
     g$&no-infinities-rcd$13514$17Rald
     g$6289$13264$17Rald)
   (g$6301$13272$17Rald
     g$6301$13515$17Rald
     (make-record-type-descriptor
       '&no-nans
       g$6068$13084$17Rald
       'g$6304$17Rald
       '#f
       '#f
       '#()))
   (g$6303$13273$17Rald g$6303$13516$17Rald '#f)
   (g$6302$13274$17Rald
     g$6302$13517$17Rald
     (make-record-constructor-descriptor
       g$6301$13272$17Rald
       g$6069$13086$17Rald
       g$6303$13273$17Rald))
   (g$p?$13277$17Rald
     g$p?$13518$17Rald
     (record-predicate g$6301$13272$17Rald))
   (g$make-no-nans-violation$13278$17Rald
     g$make-no-nans-violation$13519$17Rald
     (record-constructor g$6302$13274$17Rald))
   (g$no-nans-violation?$13279$17Rald
     g$no-nans-violation?$13520$17Rald
     (condition-predicate g$6301$13272$17Rald))
   (g$&no-nans-rtd$13280$17Rald
     g$&no-nans-rtd$13521$17Rald
     g$6301$13272$17Rald)
   (g$&no-nans-rcd$13281$17Rald
     g$&no-nans-rcd$13522$17Rald
     g$6302$13274$17Rald))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$13523$17Rald
     g$append!$13529$17Rald
     (case-lambda
       ((g$a$13524$17Rald . g$b$13525$17Rald)
        (if (null? g$a$13524$17Rald)
          g$b$13525$17Rald
          (if (null? g$b$13525$17Rald)
            g$a$13524$17Rald
            (begin
              ((letrec ((g$f$13526$17Rald
                          (case-lambda
                            ((g$a$13527$17Rald)
                             ((case-lambda
                                ((g$n$13528$17Rald)
                                 (if (null? g$n$13528$17Rald)
                                   (set-cdr!
                                     g$a$13527$17Rald
                                     g$b$13525$17Rald)
                                   (g$f$13526$17Rald
                                     g$n$13528$17Rald))))
                              (cdr g$a$13527$17Rald))))))
                 g$f$13526$17Rald)
               g$a$13524$17Rald)
              g$a$13524$17Rald)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$13530$17Rald g$inexact->exact$13550$17Rald exact)
   (g$exact->inexact$13531$17Rald g$exact->inexact$13551$17Rald inexact)
   (g$sign$13532$17Rald
     g$sign$13552$17Rald
     (case-lambda
       ((g$n$13538$17Rald)
        (if (> g$n$13538$17Rald '0)
          '1
          (if (< g$n$13538$17Rald '0) '-1 '0)))))
   (g$quotient$13533$17Rald
     g$quotient$13553$17Rald
     (case-lambda
       ((g$n1$13539$17Rald g$n2$13540$17Rald)
        (begin
          (if (not (integer-valued? g$n1$13539$17Rald))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$13539$17Rald)
            (void))
          (if (not (integer-valued? g$n2$13540$17Rald))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$13540$17Rald)
            (void))
          (* (g$sign$13532$17Rald g$n1$13539$17Rald)
             (g$sign$13532$17Rald g$n2$13540$17Rald)
             (div (abs g$n1$13539$17Rald) (abs g$n2$13540$17Rald)))))))
   (g$remainder$13534$17Rald
     g$remainder$13554$17Rald
     (case-lambda
       ((g$n1$13541$17Rald g$n2$13542$17Rald)
        (begin
          (if (not (integer-valued? g$n1$13541$17Rald))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$13541$17Rald)
            (void))
          (if (not (integer-valued? g$n2$13542$17Rald))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$13542$17Rald)
            (void))
          (* (g$sign$13532$17Rald g$n1$13541$17Rald)
             (g$mod$12616$17Rald
               (abs g$n1$13541$17Rald)
               (abs g$n2$13542$17Rald)))))))
   (g$modulo$13535$17Rald
     g$modulo$13555$17Rald
     (case-lambda
       ((g$n1$13543$17Rald g$n2$13544$17Rald)
        (begin
          (if (not (integer-valued? g$n1$13543$17Rald))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$13543$17Rald)
            (void))
          (if (not (integer-valued? g$n2$13544$17Rald))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$13544$17Rald)
            (void))
          (* (g$sign$13532$17Rald g$n2$13544$17Rald)
             (g$mod$12616$17Rald
               (* (g$sign$13532$17Rald g$n2$13544$17Rald)
                  g$n1$13543$17Rald)
               (abs g$n2$13544$17Rald)))))))
   (g$make-promise$13536$17Rald
     g$make-promise$13556$17Rald
     (case-lambda
       ((g$proc$13545$17Rald)
        ((case-lambda
           ((g$result-ready?$13546$17Rald g$result$13547$17Rald)
            (case-lambda
              (()
               (if g$result-ready?$13546$17Rald
                 g$result$13547$17Rald
                 ((case-lambda
                    ((g$x$13548$17Rald)
                     (if g$result-ready?$13546$17Rald
                       g$result$13547$17Rald
                       (begin
                         (set! g$result-ready?$13546$17Rald '#t)
                         (set! g$result$13547$17Rald g$x$13548$17Rald)
                         g$result$13547$17Rald))))
                  (g$proc$13545$17Rald)))))))
         '#f
         '#f))))
   (g$force$13537$17Rald
     g$force$13557$17Rald
     (case-lambda ((g$object$13549$17Rald) (g$object$13549$17Rald)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$13558$17Rald
     g$split$13583$17Rald
     (case-lambda
       ((g$ls$13562$17Rald)
        ((letrec ((g$loop$13563$17Rald
                    (case-lambda
                      ((g$rest$13564$17Rald
                         g$left$13565$17Rald
                         g$right$13566$17Rald)
                       (if (null? g$rest$13564$17Rald)
                         (cons g$left$13565$17Rald g$right$13566$17Rald)
                         (if (null? (cdr g$rest$13564$17Rald))
                           (cons
                             (cons
                               (car g$rest$13564$17Rald)
                               g$left$13565$17Rald)
                             g$right$13566$17Rald)
                           (g$loop$13563$17Rald
                             (g$cddr$12630$17Rald g$rest$13564$17Rald)
                             (cons
                               (car g$rest$13564$17Rald)
                               g$left$13565$17Rald)
                             (cons
                               (g$cadr$12628$17Rald g$rest$13564$17Rald)
                               g$right$13566$17Rald))))))))
           g$loop$13563$17Rald)
         g$ls$13562$17Rald
         '()
         '()))))
   (g$reverse-it$13559$17Rald
     g$reverse-it$13584$17Rald
     (case-lambda
       ((g$head$13567$17Rald g$tail$13568$17Rald)
        (if (null? g$head$13567$17Rald)
          g$tail$13568$17Rald
          (g$reverse-it$13559$17Rald
            (cdr g$head$13567$17Rald)
            (cons (car g$head$13567$17Rald) g$tail$13568$17Rald))))))
   (g$merge$13560$17Rald
     g$merge$13585$17Rald
     (case-lambda
       ((g$list-1$13569$17Rald
          g$list-2$13570$17Rald
          g$precedes?$13571$17Rald)
        ((letrec ((g$loop$13572$17Rald
                    (case-lambda
                      ((g$source-1$13573$17Rald
                         g$source-2$13574$17Rald
                         g$so-far$13575$17Rald)
                       (if (null? g$source-1$13573$17Rald)
                         (g$reverse-it$13559$17Rald
                           g$so-far$13575$17Rald
                           g$source-2$13574$17Rald)
                         (if (null? g$source-2$13574$17Rald)
                           (g$reverse-it$13559$17Rald
                             g$so-far$13575$17Rald
                             g$source-1$13573$17Rald)
                           ((case-lambda
                              ((g$car-1$13576$17Rald
                                 g$car-2$13577$17Rald)
                               (if (g$precedes?$13571$17Rald
                                     g$car-2$13577$17Rald
                                     g$car-1$13576$17Rald)
                                 (g$loop$13572$17Rald
                                   g$source-1$13573$17Rald
                                   (cdr g$source-2$13574$17Rald)
                                   (cons
                                     g$car-2$13577$17Rald
                                     g$so-far$13575$17Rald))
                                 (g$loop$13572$17Rald
                                   g$source-2$13574$17Rald
                                   (cdr g$source-1$13573$17Rald)
                                   (cons
                                     g$car-1$13576$17Rald
                                     g$so-far$13575$17Rald)))))
                            (car g$source-1$13573$17Rald)
                            (car g$source-2$13574$17Rald))))))))
           g$loop$13572$17Rald)
         g$list-1$13569$17Rald
         g$list-2$13570$17Rald
         '()))))
   (g$list-sort$13561$17Rald
     g$list-sort$13586$17Rald
     (case-lambda
       ((g$precedes?$13578$17Rald g$ls$13579$17Rald)
        (if (null? g$ls$13579$17Rald)
          '()
          ((letrec ((g$helper$13580$17Rald
                      (case-lambda
                        ((g$piece$13581$17Rald)
                         (if (null? (cdr g$piece$13581$17Rald))
                           g$piece$13581$17Rald
                           ((case-lambda
                              ((g$parts$13582$17Rald)
                               (g$merge$13560$17Rald
                                 (g$helper$13580$17Rald
                                   (car g$parts$13582$17Rald))
                                 (g$helper$13580$17Rald
                                   (cdr g$parts$13582$17Rald))
                                 g$precedes?$13578$17Rald)))
                            (g$split$13558$17Rald
                              g$piece$13581$17Rald)))))))
             g$helper$13580$17Rald)
           g$ls$13579$17Rald))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$13625$17Rald
     g$string-ci=?$13731$17Rald
     (case-lambda
       ((g$a$13677$17Rald g$b$13678$17Rald . g$rest$13679$17Rald)
        (begin
          (if (not (string? g$a$13677$17Rald))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$13677$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13680$17Rald)
               (begin
                 (if (not (string? g$x$13680$17Rald))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$13680$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13681$17Rald)
                     (begin
                       (set! g$a$13677$17Rald g$x$13680$17Rald)
                       g$r$13681$17Rald)))
                  (= (string-ci-compare
                       g$a$13677$17Rald
                       g$x$13680$17Rald)
                     '0)))))
            (cons g$b$13678$17Rald g$rest$13679$17Rald))))))
   (g$string-ci<?$13626$17Rald
     g$string-ci<?$13732$17Rald
     (case-lambda
       ((g$a$13682$17Rald g$b$13683$17Rald . g$rest$13684$17Rald)
        (begin
          (if (not (string? g$a$13682$17Rald))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$13682$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13685$17Rald)
               (begin
                 (if (not (string? g$x$13685$17Rald))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$13685$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13686$17Rald)
                     (begin
                       (set! g$a$13682$17Rald g$x$13685$17Rald)
                       g$r$13686$17Rald)))
                  (< (string-ci-compare
                       g$a$13682$17Rald
                       g$x$13685$17Rald)
                     '0)))))
            (cons g$b$13683$17Rald g$rest$13684$17Rald))))))
   (g$string-ci>?$13627$17Rald
     g$string-ci>?$13733$17Rald
     (case-lambda
       ((g$a$13687$17Rald g$b$13688$17Rald . g$rest$13689$17Rald)
        (begin
          (if (not (string? g$a$13687$17Rald))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$13687$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13690$17Rald)
               (begin
                 (if (not (string? g$x$13690$17Rald))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$13690$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13691$17Rald)
                     (begin
                       (set! g$a$13687$17Rald g$x$13690$17Rald)
                       g$r$13691$17Rald)))
                  (> (string-ci-compare
                       g$a$13687$17Rald
                       g$x$13690$17Rald)
                     '0)))))
            (cons g$b$13688$17Rald g$rest$13689$17Rald))))))
   (g$string-ci<=?$13628$17Rald
     g$string-ci<=?$13734$17Rald
     (case-lambda
       ((g$a$13692$17Rald g$b$13693$17Rald . g$rest$13694$17Rald)
        (begin
          (if (not (string? g$a$13692$17Rald))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$13692$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13695$17Rald)
               (begin
                 (if (not (string? g$x$13695$17Rald))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$13695$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13696$17Rald)
                     (begin
                       (set! g$a$13692$17Rald g$x$13695$17Rald)
                       g$r$13696$17Rald)))
                  (<= (string-ci-compare
                        g$a$13692$17Rald
                        g$x$13695$17Rald)
                      '0)))))
            (cons g$b$13693$17Rald g$rest$13694$17Rald))))))
   (g$string-ci>=?$13629$17Rald
     g$string-ci>=?$13735$17Rald
     (case-lambda
       ((g$a$13697$17Rald g$b$13698$17Rald . g$rest$13699$17Rald)
        (begin
          (if (not (string? g$a$13697$17Rald))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$13697$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13700$17Rald)
               (begin
                 (if (not (string? g$x$13700$17Rald))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$13700$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13701$17Rald)
                     (begin
                       (set! g$a$13697$17Rald g$x$13700$17Rald)
                       g$r$13701$17Rald)))
                  (>= (string-ci-compare
                        g$a$13697$17Rald
                        g$x$13700$17Rald)
                      '0)))))
            (cons g$b$13698$17Rald g$rest$13699$17Rald))))))
   (g$char-ci=?$13668$17Rald
     g$char-ci=?$13736$17Rald
     (case-lambda
       ((g$a$13702$17Rald g$b$13703$17Rald . g$rest$13704$17Rald)
        (begin
          (if (not (g$char?$12607$17Rald g$a$13702$17Rald))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$13702$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13705$17Rald)
               (begin
                 (if (not (g$char?$12607$17Rald g$x$13705$17Rald))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$13705$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13706$17Rald)
                     (begin
                       (set! g$a$13702$17Rald g$x$13705$17Rald)
                       g$r$13706$17Rald)))
                  (= (char->integer (char-upcase g$a$13702$17Rald))
                     (char->integer (char-upcase g$x$13705$17Rald)))))))
            (cons g$b$13703$17Rald g$rest$13704$17Rald))))))
   (g$char-ci<?$13669$17Rald
     g$char-ci<?$13737$17Rald
     (case-lambda
       ((g$a$13707$17Rald g$b$13708$17Rald . g$rest$13709$17Rald)
        (begin
          (if (not (g$char?$12607$17Rald g$a$13707$17Rald))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$13707$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13710$17Rald)
               (begin
                 (if (not (g$char?$12607$17Rald g$x$13710$17Rald))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$13710$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13711$17Rald)
                     (begin
                       (set! g$a$13707$17Rald g$x$13710$17Rald)
                       g$r$13711$17Rald)))
                  (< (char->integer (char-upcase g$a$13707$17Rald))
                     (char->integer (char-upcase g$x$13710$17Rald)))))))
            (cons g$b$13708$17Rald g$rest$13709$17Rald))))))
   (g$char-ci>?$13670$17Rald
     g$char-ci>?$13738$17Rald
     (case-lambda
       ((g$a$13712$17Rald g$b$13713$17Rald . g$rest$13714$17Rald)
        (begin
          (if (not (g$char?$12607$17Rald g$a$13712$17Rald))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$13712$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13715$17Rald)
               (begin
                 (if (not (g$char?$12607$17Rald g$x$13715$17Rald))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$13715$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13716$17Rald)
                     (begin
                       (set! g$a$13712$17Rald g$x$13715$17Rald)
                       g$r$13716$17Rald)))
                  (> (char->integer (char-upcase g$a$13712$17Rald))
                     (char->integer (char-upcase g$x$13715$17Rald)))))))
            (cons g$b$13713$17Rald g$rest$13714$17Rald))))))
   (g$char-ci<=?$13671$17Rald
     g$char-ci<=?$13739$17Rald
     (case-lambda
       ((g$a$13717$17Rald g$b$13718$17Rald . g$rest$13719$17Rald)
        (begin
          (if (not (g$char?$12607$17Rald g$a$13717$17Rald))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$13717$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13720$17Rald)
               (begin
                 (if (not (g$char?$12607$17Rald g$x$13720$17Rald))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$13720$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13721$17Rald)
                     (begin
                       (set! g$a$13717$17Rald g$x$13720$17Rald)
                       g$r$13721$17Rald)))
                  (<= (char->integer (char-upcase g$a$13717$17Rald))
                      (char->integer
                        (char-upcase g$x$13720$17Rald)))))))
            (cons g$b$13718$17Rald g$rest$13719$17Rald))))))
   (g$char-ci>=?$13672$17Rald
     g$char-ci>=?$13740$17Rald
     (case-lambda
       ((g$a$13722$17Rald g$b$13723$17Rald . g$rest$13724$17Rald)
        (begin
          (if (not (g$char?$12607$17Rald g$a$13722$17Rald))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$13722$17Rald)
            (void))
          (g$for-all$11833$17Rald
            (case-lambda
              ((g$x$13725$17Rald)
               (begin
                 (if (not (g$char?$12607$17Rald g$x$13725$17Rald))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$13725$17Rald)
                   (void))
                 ((case-lambda
                    ((g$r$13726$17Rald)
                     (begin
                       (set! g$a$13722$17Rald g$x$13725$17Rald)
                       g$r$13726$17Rald)))
                  (>= (char->integer (char-upcase g$a$13722$17Rald))
                      (char->integer
                        (char-upcase g$x$13725$17Rald)))))))
            (cons g$b$13723$17Rald g$rest$13724$17Rald))))))
   (g$string-normalize-nfc$13673$17Rald
     g$string-normalize-nfc$13741$17Rald
     (case-lambda
       ((g$s$13727$17Rald) (string-normalize g$s$13727$17Rald 'formc))))
   (g$string-normalize-nfd$13674$17Rald
     g$string-normalize-nfd$13742$17Rald
     (case-lambda
       ((g$s$13728$17Rald) (string-normalize g$s$13728$17Rald 'formd))))
   (g$string-normalize-nfkc$13675$17Rald
     g$string-normalize-nfkc$13743$17Rald
     (case-lambda
       ((g$s$13729$17Rald)
        (string-normalize g$s$13729$17Rald 'formkc))))
   (g$string-normalize-nfkd$13676$17Rald
     g$string-normalize-nfkd$13744$17Rald
     (case-lambda
       ((g$s$13730$17Rald)
        (string-normalize g$s$13730$17Rald 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$13745$17Rald
     g$bitwise-if$13776$17Rald
     (case-lambda
       ((g$ei1$13752$17Rald g$ei2$13753$17Rald g$ei3$13754$17Rald)
        (bitwise-ior
          (bitwise-and g$ei1$13752$17Rald g$ei2$13753$17Rald)
          (bitwise-and
            (bitwise-not g$ei1$13752$17Rald)
            g$ei3$13754$17Rald)))))
   (g$bitwise-copy-bit$13746$17Rald
     g$bitwise-copy-bit$13777$17Rald
     (case-lambda
       ((g$ei1$13755$17Rald g$ei2$13756$17Rald g$ei3$13757$17Rald)
        (g$bitwise-if$13745$17Rald
          (g$bitwise-arithmetic-shift-left$13749$17Rald
            '1
            g$ei2$13756$17Rald)
          (g$bitwise-arithmetic-shift-left$13749$17Rald
            g$ei3$13757$17Rald
            g$ei2$13756$17Rald)
          g$ei1$13755$17Rald))))
   (g$bitwise-bit-field$13747$17Rald
     g$bitwise-bit-field$13778$17Rald
     (case-lambda
       ((g$ei1$13758$17Rald g$ei2$13759$17Rald g$ei3$13760$17Rald)
        (g$bitwise-arithmetic-shift-right$13750$17Rald
          (bitwise-and
            g$ei1$13758$17Rald
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13749$17Rald
                '-1
                g$ei3$13760$17Rald)))
          g$ei2$13759$17Rald))))
   (g$bitwise-copy-bit-field$13748$17Rald
     g$bitwise-copy-bit-field$13779$17Rald
     (case-lambda
       ((g$to$13761$17Rald
          g$start$13762$17Rald
          g$end$13763$17Rald
          g$from$13764$17Rald)
        (g$bitwise-if$13745$17Rald
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$13749$17Rald
              '-1
              g$start$13762$17Rald)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13749$17Rald
                '-1
                g$end$13763$17Rald)))
          (g$bitwise-arithmetic-shift-left$13749$17Rald
            g$from$13764$17Rald
            g$start$13762$17Rald)
          g$to$13761$17Rald))))
   (g$bitwise-arithmetic-shift-left$13749$17Rald
     g$bitwise-arithmetic-shift-left$13780$17Rald
     (case-lambda
       ((g$ei1$13765$17Rald g$ei2$13766$17Rald)
        (bitwise-arithmetic-shift
          g$ei1$13765$17Rald
          g$ei2$13766$17Rald))))
   (g$bitwise-arithmetic-shift-right$13750$17Rald
     g$bitwise-arithmetic-shift-right$13781$17Rald
     (case-lambda
       ((g$ei1$13767$17Rald g$ei2$13768$17Rald)
        (bitwise-arithmetic-shift
          g$ei1$13767$17Rald
          (- g$ei2$13768$17Rald)))))
   (g$bitwise-rotate-bit-field$13751$17Rald
     g$bitwise-rotate-bit-field$13782$17Rald
     (case-lambda
       ((g$n$13769$17Rald
          g$start$13770$17Rald
          g$end$13771$17Rald
          g$count$13772$17Rald)
        ((case-lambda
           ((g$width$13773$17Rald)
            (if (g$positive?$12655$17Rald g$width$13773$17Rald)
              ((case-lambda
                 ((g$count$13774$17Rald g$field$13775$17Rald)
                  (g$bitwise-copy-bit-field$13748$17Rald
                    g$n$13769$17Rald
                    g$start$13770$17Rald
                    g$end$13771$17Rald
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$13749$17Rald
                        g$field$13775$17Rald
                        g$count$13774$17Rald)
                      (g$bitwise-arithmetic-shift-right$13750$17Rald
                        g$field$13775$17Rald
                        (- g$width$13773$17Rald
                           g$count$13774$17Rald))))))
               (g$mod$12616$17Rald
                 g$count$13772$17Rald
                 g$width$13773$17Rald)
               (g$bitwise-bit-field$13747$17Rald
                 g$n$13769$17Rald
                 g$start$13770$17Rald
                 g$end$13771$17Rald))
              g$n$13769$17Rald)))
         (- g$end$13771$17Rald g$start$13770$17Rald))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$13783$17Rald
     g$greatest-fixnum$16015$17Rald
     (case-lambda (() '2147483647)))
   (g$least-fixnum$13784$17Rald
     g$least-fixnum$16016$17Rald
     (case-lambda (() '-2147483648)))
   (g$fx+$13890$17Rald
     g$fx+$16017$17Rald
     (case-lambda
       ((g$x1$14285$17Rald g$x2$14286$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14285$17Rald))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$14285$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14286$17Rald))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$14286$17Rald)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$14285$17Rald g$x2$14286$17Rald)
                (g$overflow-error$13893$17Rald '#f)))))))))
   (g$fx*$13891$17Rald
     g$fx*$16018$17Rald
     (case-lambda
       ((g$x1$14287$17Rald g$x2$14288$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14287$17Rald))
            (assertion-violation 'fx* '"not a fixnum" g$x1$14287$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14288$17Rald))
            (assertion-violation 'fx* '"not a fixnum" g$x2$14288$17Rald)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$14287$17Rald g$x2$14288$17Rald)
                (g$overflow-error$13893$17Rald '#f)))))))))
   (g$fx-$13892$17Rald
     g$fx-$16019$17Rald
     (case-lambda
       ((g$x1$14289$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14289$17Rald))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14289$17Rald)
            (void))
          (if ($fx=? (g$least-fixnum$13784$17Rald) g$x1$14289$17Rald)
            (g$overflow-error$13893$17Rald 'fx- g$x1$14289$17Rald)
            (void))
          ($$fx- g$x1$14289$17Rald)))
       ((g$x1$14290$17Rald g$x2$14291$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14290$17Rald))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14290$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14291$17Rald))
            (assertion-violation 'fx- '"not a fixnum" g$x2$14291$17Rald)
            (void))
          ($try
            ($fx- g$x1$14290$17Rald g$x2$14291$17Rald)
            (g$overflow-error$13893$17Rald '#f))))))
   (g$overflow-error$13893$17Rald
     g$overflow-error$16020$17Rald
     (case-lambda
       ((g$name$14292$17Rald . g$irritants$14293$17Rald)
        (raise
          (condition
            (g$make-implementation-restriction-violation$13371$17Rald)
            (g$make-who-condition$13353$17Rald g$name$14292$17Rald)
            (g$make-message-condition$13293$17Rald
              '"arithmetic overflow")
            (g$make-irritants-condition$13343$17Rald
              g$irritants$14293$17Rald))))))
   (g$residual-fxarithmetic-shift*$13909$17Rald
     g$residual-fxarithmetic-shift*$16021$17Rald
     (case-lambda
       ((g$x$14314$17Rald g$k$14315$17Rald)
        (if ($fx=? g$k$14315$17Rald '0)
          g$x$14314$17Rald
          (if ($fx<? g$k$14315$17Rald '0)
            ($fxarithmetic-shift-right
              g$x$14314$17Rald
              ($$fx- g$k$14315$17Rald))
            ((case-lambda
               ((g$i$14316$17Rald)
                (begin
                  (if ($fx>?
                        (clr-call-internal
                          'System.Math
                          '"abs(int32)"
                          '()
                          g$x$14314$17Rald)
                        (clr-call-internal
                          'System.Math
                          '"abs(int32)"
                          '()
                          g$i$14316$17Rald))
                    (g$overflow-error$13893$17Rald
                      'fxarithmetic-shift
                      g$x$14314$17Rald
                      g$k$14315$17Rald)
                    (void))
                  g$i$14316$17Rald)))
             ($fxarithmetic-shift-left
               g$x$14314$17Rald
               g$k$14315$17Rald)))))))
   (g$fxarithmetic-shift$13910$17Rald
     g$fxarithmetic-shift$16022$17Rald
     (case-lambda
       ((g$x$14317$17Rald g$k$14318$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x$14317$17Rald))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$14317$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$k$14318$17Rald))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$14318$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14339$17Rald g$k$14340$17Rald)
                  (if ($fx=? g$k$14340$17Rald '0)
                    g$x$14339$17Rald
                    (if ($fx<? g$k$14340$17Rald '0)
                      ($fxarithmetic-shift-right
                        g$x$14339$17Rald
                        ($$fx- g$k$14340$17Rald))
                      ((case-lambda
                         ((g$i$14341$17Rald)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$14339$17Rald)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$14341$17Rald))
                              (g$overflow-error$13893$17Rald
                                'fxarithmetic-shift
                                g$x$14339$17Rald
                                g$k$14340$17Rald)
                              (void))
                            g$i$14341$17Rald)))
                       ($fxarithmetic-shift-left
                         g$x$14339$17Rald
                         g$k$14340$17Rald))))))
               g$x$14317$17Rald
               g$k$14318$17Rald))))))))
   (g$residual-fxbit-count*$13926$17Rald
     g$residual-fxbit-count*$16023$17Rald
     (case-lambda
       ((g$x$14362$17Rald)
        (if ($fx<=? g$x$14362$17Rald '0)
          ($fxnot
            (g$residual-fxbit-count*$13926$17Rald
              ($fxnot g$x$14362$17Rald)))
          ((letrec ((g$f$14363$17Rald
                      (case-lambda
                        ((g$count$14364$17Rald g$x$14365$17Rald)
                         (if ($fx<? '0 g$x$14365$17Rald)
                           (g$f$14363$17Rald
                             ($$fx+
                               g$count$14364$17Rald
                               ($fxand g$x$14365$17Rald '1))
                             ($fxarithmetic-shift-right
                               g$x$14365$17Rald
                               '1))
                           g$count$14364$17Rald)))))
             g$f$14363$17Rald)
           '0
           g$x$14362$17Rald)))))
   (g$fxbit-count$13927$17Rald
     g$fxbit-count$16024$17Rald
     (case-lambda
       ((g$x$14366$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x$14366$17Rald))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$14366$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14387$17Rald)
                  (if ($fx<=? g$x$14387$17Rald '0)
                    ($fxnot
                      (g$residual-fxbit-count*$13926$17Rald
                        ($fxnot g$x$14387$17Rald)))
                    ((letrec ((g$f$14388$17Rald
                                (case-lambda
                                  ((g$count$14389$17Rald
                                     g$x$14390$17Rald)
                                   (if ($fx<? '0 g$x$14390$17Rald)
                                     (g$f$14388$17Rald
                                       ($$fx+
                                         g$count$14389$17Rald
                                         ($fxand g$x$14390$17Rald '1))
                                       ($fxarithmetic-shift-right
                                         g$x$14390$17Rald
                                         '1))
                                     g$count$14389$17Rald)))))
                       g$f$14388$17Rald)
                     '0
                     g$x$14387$17Rald))))
               g$x$14366$17Rald))))))))
   (g$residual-fxlength*$13943$17Rald
     g$residual-fxlength*$16025$17Rald
     (case-lambda
       ((g$x$14411$17Rald)
        (if ($fx<? g$x$14411$17Rald '0)
          (g$residual-fxlength*$13943$17Rald ($fxnot g$x$14411$17Rald))
          ((letrec ((g$f$14412$17Rald
                      (case-lambda
                        ((g$count$14413$17Rald g$x$14414$17Rald)
                         (if ($fx<? '0 g$x$14414$17Rald)
                           (g$f$14412$17Rald
                             ($$fx+ g$count$14413$17Rald '1)
                             ($fxarithmetic-shift-right
                               g$x$14414$17Rald
                               '1))
                           g$count$14413$17Rald)))))
             g$f$14412$17Rald)
           '0
           g$x$14411$17Rald)))))
   (g$fxlength$13944$17Rald
     g$fxlength$16026$17Rald
     (case-lambda
       ((g$x$14415$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x$14415$17Rald))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$14415$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14436$17Rald)
                  (if ($fx<? g$x$14436$17Rald '0)
                    (g$residual-fxlength*$13943$17Rald
                      ($fxnot g$x$14436$17Rald))
                    ((letrec ((g$f$14437$17Rald
                                (case-lambda
                                  ((g$count$14438$17Rald
                                     g$x$14439$17Rald)
                                   (if ($fx<? '0 g$x$14439$17Rald)
                                     (g$f$14437$17Rald
                                       ($$fx+ g$count$14438$17Rald '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14439$17Rald
                                         '1))
                                     g$count$14438$17Rald)))))
                       g$f$14437$17Rald)
                     '0
                     g$x$14436$17Rald))))
               g$x$14415$17Rald))))))))
   (g$fxfirst-bit-set$13945$17Rald
     g$fxfirst-bit-set$16027$17Rald
     (case-lambda
       ((g$x$14440$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x$14440$17Rald))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$14440$17Rald)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$14440$17Rald '0)
                '-1
                ((letrec ((g$f$14441$17Rald
                            (case-lambda
                              ((g$count$14442$17Rald g$x$14443$17Rald)
                               (if (not ($fx=? '0 g$x$14443$17Rald))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$14443$17Rald))
                                   g$count$14442$17Rald
                                   (g$f$14441$17Rald
                                     ($$fx+ g$count$14442$17Rald '1)
                                     ($fxarithmetic-shift-right
                                       g$x$14443$17Rald
                                       '1)))
                                 g$count$14442$17Rald)))))
                   g$f$14441$17Rald)
                 '0
                 g$x$14440$17Rald)))))))))
   (g$fxbit-set?$13946$17Rald
     g$fxbit-set?$16028$17Rald
     (case-lambda
       ((g$x$14444$17Rald g$k$14445$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x$14444$17Rald))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$14444$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$k$14445$17Rald))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$14445$17Rald)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$14445$17Rald '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$14445$17Rald)
                  (void))
                (if ($fx>=? g$k$14445$17Rald '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$14445$17Rald)
                  (void))
                (if ($fx=? '0 g$x$14444$17Rald)
                  '#f
                  ((letrec ((g$f$14446$17Rald
                              (case-lambda
                                ((g$count$14447$17Rald g$x$14448$17Rald)
                                 (if (not ($fx=? '0 g$x$14448$17Rald))
                                   (if (if ($fx=?
                                             g$count$14447$17Rald
                                             g$k$14445$17Rald)
                                         (begin
                                           '#f
                                           ($fx=?
                                             '1
                                             ($fxand
                                               '1
                                               g$x$14448$17Rald)))
                                         '#f)
                                     '#t
                                     (g$f$14446$17Rald
                                       ($$fx+ g$count$14447$17Rald '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14448$17Rald
                                         '1)))
                                   '#f)))))
                     g$f$14446$17Rald)
                   '0
                   g$x$14444$17Rald))))))))))
   (g$fxnot$13947$17Rald
     g$fxnot$16029$17Rald
     (case-lambda
       ((g$x1$14449$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14449$17Rald))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$14449$17Rald)
            (void))
          ((case-lambda (() ($fxnot g$x1$14449$17Rald))))))))
   (g$fx=?$13998$17Rald
     g$fx=?$16030$17Rald
     (case-lambda
       ((g$x1$14450$17Rald g$x2$14451$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14450$17Rald))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$14450$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14451$17Rald))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$14451$17Rald)
            (void))
          ($fx=? g$x1$14450$17Rald g$x2$14451$17Rald)))
       ((g$x1$14452$17Rald g$x2$14453$17Rald . g$rest$14454$17Rald)
        ((letrec ((g$f$14455$17Rald
                    (case-lambda
                      ((g$a$14456$17Rald g$b$14457$17Rald)
                       (if (null? g$b$14457$17Rald)
                         '#t
                         (if (g$fx=?$13998$17Rald
                               g$a$14456$17Rald
                               ($car g$b$14457$17Rald))
                           (g$f$14455$17Rald
                             ($car g$b$14457$17Rald)
                             ($cdr g$b$14457$17Rald))
                           '#f))))))
           g$f$14455$17Rald)
         g$x1$14452$17Rald
         (cons g$x2$14453$17Rald g$rest$14454$17Rald)))))
   (g$fx<?$13999$17Rald
     g$fx<?$16031$17Rald
     (case-lambda
       ((g$x1$14458$17Rald g$x2$14459$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14458$17Rald))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$14458$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14459$17Rald))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$14459$17Rald)
            (void))
          ($fx<? g$x1$14458$17Rald g$x2$14459$17Rald)))
       ((g$x1$14460$17Rald g$x2$14461$17Rald . g$rest$14462$17Rald)
        ((letrec ((g$f$14463$17Rald
                    (case-lambda
                      ((g$a$14464$17Rald g$b$14465$17Rald)
                       (if (null? g$b$14465$17Rald)
                         '#t
                         (if (g$fx<?$13999$17Rald
                               g$a$14464$17Rald
                               ($car g$b$14465$17Rald))
                           (g$f$14463$17Rald
                             ($car g$b$14465$17Rald)
                             ($cdr g$b$14465$17Rald))
                           '#f))))))
           g$f$14463$17Rald)
         g$x1$14460$17Rald
         (cons g$x2$14461$17Rald g$rest$14462$17Rald)))))
   (g$fx<=?$14000$17Rald
     g$fx<=?$16032$17Rald
     (case-lambda
       ((g$x1$14466$17Rald g$x2$14467$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14466$17Rald))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$14466$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14467$17Rald))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$14467$17Rald)
            (void))
          ($fx<=? g$x1$14466$17Rald g$x2$14467$17Rald)))
       ((g$x1$14468$17Rald g$x2$14469$17Rald . g$rest$14470$17Rald)
        ((letrec ((g$f$14471$17Rald
                    (case-lambda
                      ((g$a$14472$17Rald g$b$14473$17Rald)
                       (if (null? g$b$14473$17Rald)
                         '#t
                         (if (g$fx<=?$14000$17Rald
                               g$a$14472$17Rald
                               ($car g$b$14473$17Rald))
                           (g$f$14471$17Rald
                             ($car g$b$14473$17Rald)
                             ($cdr g$b$14473$17Rald))
                           '#f))))))
           g$f$14471$17Rald)
         g$x1$14468$17Rald
         (cons g$x2$14469$17Rald g$rest$14470$17Rald)))))
   (g$fx>?$14001$17Rald
     g$fx>?$16033$17Rald
     (case-lambda
       ((g$x1$14474$17Rald g$x2$14475$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14474$17Rald))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$14474$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14475$17Rald))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$14475$17Rald)
            (void))
          ($fx>? g$x1$14474$17Rald g$x2$14475$17Rald)))
       ((g$x1$14476$17Rald g$x2$14477$17Rald . g$rest$14478$17Rald)
        ((letrec ((g$f$14479$17Rald
                    (case-lambda
                      ((g$a$14480$17Rald g$b$14481$17Rald)
                       (if (null? g$b$14481$17Rald)
                         '#t
                         (if (g$fx>?$14001$17Rald
                               g$a$14480$17Rald
                               ($car g$b$14481$17Rald))
                           (g$f$14479$17Rald
                             ($car g$b$14481$17Rald)
                             ($cdr g$b$14481$17Rald))
                           '#f))))))
           g$f$14479$17Rald)
         g$x1$14476$17Rald
         (cons g$x2$14477$17Rald g$rest$14478$17Rald)))))
   (g$fx>=?$14002$17Rald
     g$fx>=?$16034$17Rald
     (case-lambda
       ((g$x1$14482$17Rald g$x2$14483$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14482$17Rald))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$14482$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14483$17Rald))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$14483$17Rald)
            (void))
          ($fx>=? g$x1$14482$17Rald g$x2$14483$17Rald)))
       ((g$x1$14484$17Rald g$x2$14485$17Rald . g$rest$14486$17Rald)
        ((letrec ((g$f$14487$17Rald
                    (case-lambda
                      ((g$a$14488$17Rald g$b$14489$17Rald)
                       (if (null? g$b$14489$17Rald)
                         '#t
                         (if (g$fx>=?$14002$17Rald
                               g$a$14488$17Rald
                               ($car g$b$14489$17Rald))
                           (g$f$14487$17Rald
                             ($car g$b$14489$17Rald)
                             ($cdr g$b$14489$17Rald))
                           '#f))))))
           g$f$14487$17Rald)
         g$x1$14484$17Rald
         (cons g$x2$14485$17Rald g$rest$14486$17Rald)))))
   (g$fxand$14050$17Rald
     g$fxand$16035$17Rald
     (case-lambda
       (() '-1)
       ((g$x1$14490$17Rald g$x2$14491$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14490$17Rald))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$14490$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14491$17Rald))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$14491$17Rald)
            (void))
          ($fxand g$x1$14490$17Rald g$x2$14491$17Rald)))
       (g$args$14492$17Rald
        (g$fold-left$11838$17Rald
          g$fxand$14050$17Rald
          (g$fxand$14050$17Rald)
          g$args$14492$17Rald))))
   (g$fxior$14051$17Rald
     g$fxior$16036$17Rald
     (case-lambda
       (() '0)
       ((g$x1$14493$17Rald g$x2$14494$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14493$17Rald))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$14493$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14494$17Rald))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$14494$17Rald)
            (void))
          ($fxior g$x1$14493$17Rald g$x2$14494$17Rald)))
       (g$args$14495$17Rald
        (g$fold-left$11838$17Rald
          g$fxior$14051$17Rald
          (g$fxior$14051$17Rald)
          g$args$14495$17Rald))))
   (g$fxxor$14052$17Rald
     g$fxxor$16037$17Rald
     (case-lambda
       (() '0)
       ((g$x1$14496$17Rald g$x2$14497$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14496$17Rald))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$14496$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14497$17Rald))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$14497$17Rald)
            (void))
          ($fxxor g$x1$14496$17Rald g$x2$14497$17Rald)))
       (g$args$14498$17Rald
        (g$fold-left$11838$17Rald
          g$fxxor$14052$17Rald
          (g$fxxor$14052$17Rald)
          g$args$14498$17Rald))))
   (g$residual-fxdiv*$14068$17Rald
     g$residual-fxdiv*$16038$17Rald
     (case-lambda
       ((g$x1$14519$17Rald g$x2$14520$17Rald)
        (begin
          (if ($fx=? '0 g$x2$14520$17Rald)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$14519$17Rald
              g$x2$14520$17Rald)
            (void))
          (if (if ($fx=? '-1 g$x2$14520$17Rald)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$13784$17Rald)
                    g$x1$14519$17Rald))
                '#f)
            (g$overflow-error$13893$17Rald
              'fxdiv
              g$x1$14519$17Rald
              g$x2$14520$17Rald)
            (void))
          (if ($fx=? '0 g$x1$14519$17Rald)
            '0
            (if ($fx<? '0 g$x1$14519$17Rald)
              ((case-lambda
                 ((g$x1$14541$17Rald g$x2$14542$17Rald)
                  ($fxdiv0 g$x1$14541$17Rald g$x2$14542$17Rald)))
               g$x1$14519$17Rald
               g$x2$14520$17Rald)
              (if ($fx<? '0 g$x2$14520$17Rald)
                ((case-lambda
                   ((g$x1$14563$17Rald g$x2$14564$17Rald)
                    ($fxdiv0 g$x1$14563$17Rald g$x2$14564$17Rald)))
                 ($$fx- g$x1$14519$17Rald ($$fx- g$x2$14520$17Rald '1))
                 g$x2$14520$17Rald)
                ((case-lambda
                   ((g$x1$14585$17Rald g$x2$14586$17Rald)
                    ($fxdiv0 g$x1$14585$17Rald g$x2$14586$17Rald)))
                 ($$fx+ g$x1$14519$17Rald ($$fx+ g$x2$14520$17Rald '1))
                 g$x2$14520$17Rald))))))))
   (g$fxdiv$14069$17Rald
     g$fxdiv$16039$17Rald
     (case-lambda
       ((g$x1$14587$17Rald g$x2$14588$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14587$17Rald))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$14587$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14588$17Rald))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$14588$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14609$17Rald g$x2$14610$17Rald)
                  (begin
                    (if ($fx=? '0 g$x2$14610$17Rald)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$14609$17Rald
                        g$x2$14610$17Rald)
                      (void))
                    (if (if ($fx=? '-1 g$x2$14610$17Rald)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13784$17Rald)
                              g$x1$14609$17Rald))
                          '#f)
                      (g$overflow-error$13893$17Rald
                        'fxdiv
                        g$x1$14609$17Rald
                        g$x2$14610$17Rald)
                      (void))
                    (if ($fx=? '0 g$x1$14609$17Rald)
                      '0
                      (if ($fx<? '0 g$x1$14609$17Rald)
                        ((case-lambda
                           ((g$x1$14631$17Rald g$x2$14632$17Rald)
                            ($fxdiv0
                              g$x1$14631$17Rald
                              g$x2$14632$17Rald)))
                         g$x1$14609$17Rald
                         g$x2$14610$17Rald)
                        (if ($fx<? '0 g$x2$14610$17Rald)
                          ((case-lambda
                             ((g$x1$14653$17Rald g$x2$14654$17Rald)
                              ($fxdiv0
                                g$x1$14653$17Rald
                                g$x2$14654$17Rald)))
                           ($$fx-
                             g$x1$14609$17Rald
                             ($$fx- g$x2$14610$17Rald '1))
                           g$x2$14610$17Rald)
                          ((case-lambda
                             ((g$x1$14675$17Rald g$x2$14676$17Rald)
                              ($fxdiv0
                                g$x1$14675$17Rald
                                g$x2$14676$17Rald)))
                           ($$fx+
                             g$x1$14609$17Rald
                             ($$fx+ g$x2$14610$17Rald '1))
                           g$x2$14610$17Rald)))))))
               g$x1$14587$17Rald
               g$x2$14588$17Rald))))))))
   (g$residual-fxmod*$14085$17Rald
     g$residual-fxmod*$16040$17Rald
     (case-lambda
       ((g$x1$14697$17Rald g$x2$14698$17Rald)
        ($$fx-
          g$x1$14697$17Rald
          ($$fx*
            ((case-lambda
               ((g$x1$14719$17Rald g$x2$14720$17Rald)
                (begin
                  (if ($fx=? '0 g$x2$14720$17Rald)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$14719$17Rald
                      g$x2$14720$17Rald)
                    (void))
                  (if (if ($fx=? '-1 g$x2$14720$17Rald)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$13784$17Rald)
                            g$x1$14719$17Rald))
                        '#f)
                    (g$overflow-error$13893$17Rald
                      'fxdiv
                      g$x1$14719$17Rald
                      g$x2$14720$17Rald)
                    (void))
                  (if ($fx=? '0 g$x1$14719$17Rald)
                    '0
                    (if ($fx<? '0 g$x1$14719$17Rald)
                      ((case-lambda
                         ((g$x1$14741$17Rald g$x2$14742$17Rald)
                          ($fxdiv0
                            g$x1$14741$17Rald
                            g$x2$14742$17Rald)))
                       g$x1$14719$17Rald
                       g$x2$14720$17Rald)
                      (if ($fx<? '0 g$x2$14720$17Rald)
                        ((case-lambda
                           ((g$x1$14763$17Rald g$x2$14764$17Rald)
                            ($fxdiv0
                              g$x1$14763$17Rald
                              g$x2$14764$17Rald)))
                         ($$fx-
                           g$x1$14719$17Rald
                           ($$fx- g$x2$14720$17Rald '1))
                         g$x2$14720$17Rald)
                        ((case-lambda
                           ((g$x1$14785$17Rald g$x2$14786$17Rald)
                            ($fxdiv0
                              g$x1$14785$17Rald
                              g$x2$14786$17Rald)))
                         ($$fx+
                           g$x1$14719$17Rald
                           ($$fx+ g$x2$14720$17Rald '1))
                         g$x2$14720$17Rald)))))))
             g$x1$14697$17Rald
             g$x2$14698$17Rald)
            g$x2$14698$17Rald)))))
   (g$fxmod$14086$17Rald
     g$fxmod$16041$17Rald
     (case-lambda
       ((g$x1$14787$17Rald g$x2$14788$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14787$17Rald))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$14787$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14788$17Rald))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$14788$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14809$17Rald g$x2$14810$17Rald)
                  ($$fx-
                    g$x1$14809$17Rald
                    ($$fx*
                      ((case-lambda
                         ((g$x1$14831$17Rald g$x2$14832$17Rald)
                          (begin
                            (if ($fx=? '0 g$x2$14832$17Rald)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$14831$17Rald
                                g$x2$14832$17Rald)
                              (void))
                            (if (if ($fx=? '-1 g$x2$14832$17Rald)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$13784$17Rald)
                                      g$x1$14831$17Rald))
                                  '#f)
                              (g$overflow-error$13893$17Rald
                                'fxdiv
                                g$x1$14831$17Rald
                                g$x2$14832$17Rald)
                              (void))
                            (if ($fx=? '0 g$x1$14831$17Rald)
                              '0
                              (if ($fx<? '0 g$x1$14831$17Rald)
                                ((case-lambda
                                   ((g$x1$14853$17Rald
                                      g$x2$14854$17Rald)
                                    ($fxdiv0
                                      g$x1$14853$17Rald
                                      g$x2$14854$17Rald)))
                                 g$x1$14831$17Rald
                                 g$x2$14832$17Rald)
                                (if ($fx<? '0 g$x2$14832$17Rald)
                                  ((case-lambda
                                     ((g$x1$14875$17Rald
                                        g$x2$14876$17Rald)
                                      ($fxdiv0
                                        g$x1$14875$17Rald
                                        g$x2$14876$17Rald)))
                                   ($$fx-
                                     g$x1$14831$17Rald
                                     ($$fx- g$x2$14832$17Rald '1))
                                   g$x2$14832$17Rald)
                                  ((case-lambda
                                     ((g$x1$14897$17Rald
                                        g$x2$14898$17Rald)
                                      ($fxdiv0
                                        g$x1$14897$17Rald
                                        g$x2$14898$17Rald)))
                                   ($$fx+
                                     g$x1$14831$17Rald
                                     ($$fx+ g$x2$14832$17Rald '1))
                                   g$x2$14832$17Rald)))))))
                       g$x1$14809$17Rald
                       g$x2$14810$17Rald)
                      g$x2$14810$17Rald))))
               g$x1$14787$17Rald
               g$x2$14788$17Rald))))))))
   (g$fxmod0$14087$17Rald
     g$fxmod0$16042$17Rald
     (case-lambda
       ((g$x1$14899$17Rald g$x2$14900$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14899$17Rald))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$14899$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14900$17Rald))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$14900$17Rald)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$14900$17Rald)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$14899$17Rald
                    g$x2$14900$17Rald)
                  (void))
                (if (if ($fx=? '-1 g$x2$14900$17Rald)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$13784$17Rald)
                          g$x1$14899$17Rald))
                      '#f)
                  (g$overflow-error$13893$17Rald
                    'fxmod0
                    g$x1$14899$17Rald
                    g$x2$14900$17Rald)
                  (void))
                ($fxmod0 g$x1$14899$17Rald g$x2$14900$17Rald)))))))))
   (g$fxdiv-and-mod$14088$17Rald
     g$fxdiv-and-mod$16043$17Rald
     (case-lambda
       ((g$x1$14901$17Rald g$x2$14902$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$14901$17Rald))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$14901$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$14902$17Rald))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$14902$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$14903$17Rald)
                  (values
                    g$d$14903$17Rald
                    ($$fx-
                      g$x1$14901$17Rald
                      ($$fx* g$d$14903$17Rald g$x2$14902$17Rald)))))
               ((case-lambda
                  ((g$x1$14924$17Rald g$x2$14925$17Rald)
                   (begin
                     (if ($fx=? '0 g$x2$14925$17Rald)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$14924$17Rald
                         g$x2$14925$17Rald)
                       (void))
                     (if (if ($fx=? '-1 g$x2$14925$17Rald)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13784$17Rald)
                               g$x1$14924$17Rald))
                           '#f)
                       (g$overflow-error$13893$17Rald
                         'fxdiv
                         g$x1$14924$17Rald
                         g$x2$14925$17Rald)
                       (void))
                     (if ($fx=? '0 g$x1$14924$17Rald)
                       '0
                       (if ($fx<? '0 g$x1$14924$17Rald)
                         ((case-lambda
                            ((g$x1$14946$17Rald g$x2$14947$17Rald)
                             ($fxdiv0
                               g$x1$14946$17Rald
                               g$x2$14947$17Rald)))
                          g$x1$14924$17Rald
                          g$x2$14925$17Rald)
                         (if ($fx<? '0 g$x2$14925$17Rald)
                           ((case-lambda
                              ((g$x1$14968$17Rald g$x2$14969$17Rald)
                               ($fxdiv0
                                 g$x1$14968$17Rald
                                 g$x2$14969$17Rald)))
                            ($$fx-
                              g$x1$14924$17Rald
                              ($$fx- g$x2$14925$17Rald '1))
                            g$x2$14925$17Rald)
                           ((case-lambda
                              ((g$x1$14990$17Rald g$x2$14991$17Rald)
                               ($fxdiv0
                                 g$x1$14990$17Rald
                                 g$x2$14991$17Rald)))
                            ($$fx+
                              g$x1$14924$17Rald
                              ($$fx+ g$x2$14925$17Rald '1))
                            g$x2$14925$17Rald)))))))
                g$x1$14901$17Rald
                g$x2$14902$17Rald)))))))))
   (g$residual-fxdiv0*$14104$17Rald
     g$residual-fxdiv0*$16044$17Rald
     (case-lambda
       ((g$x1$15012$17Rald g$x2$15013$17Rald)
        (begin
          (if ($fx=? '0 g$x2$15013$17Rald)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$15012$17Rald
              g$x2$15013$17Rald)
            (void))
          (if (if ($fx=? '-1 g$x2$15013$17Rald)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$13784$17Rald)
                    g$x1$15012$17Rald))
                '#f)
            (g$overflow-error$13893$17Rald
              'fxdiv0
              g$x1$15012$17Rald
              g$x2$15013$17Rald)
            (void))
          ((case-lambda
             ((g$x1$15034$17Rald g$x2$15035$17Rald)
              ($fxdiv0 g$x1$15034$17Rald g$x2$15035$17Rald)))
           g$x1$15012$17Rald
           g$x2$15013$17Rald)))))
   (g$fxdiv0$14105$17Rald
     g$fxdiv0$16045$17Rald
     (case-lambda
       ((g$x1$15036$17Rald g$x2$15037$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$15036$17Rald))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$15036$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$15037$17Rald))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$15037$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15058$17Rald g$x2$15059$17Rald)
                  (begin
                    (if ($fx=? '0 g$x2$15059$17Rald)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$15058$17Rald
                        g$x2$15059$17Rald)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15059$17Rald)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13784$17Rald)
                              g$x1$15058$17Rald))
                          '#f)
                      (g$overflow-error$13893$17Rald
                        'fxdiv0
                        g$x1$15058$17Rald
                        g$x2$15059$17Rald)
                      (void))
                    ((case-lambda
                       ((g$x1$15080$17Rald g$x2$15081$17Rald)
                        ($fxdiv0 g$x1$15080$17Rald g$x2$15081$17Rald)))
                     g$x1$15058$17Rald
                     g$x2$15059$17Rald))))
               g$x1$15036$17Rald
               g$x2$15037$17Rald))))))))
   (g$residual-%%fxdiv0$14121$17Rald
     g$residual-%%fxdiv0$16046$17Rald
     (case-lambda
       ((g$x1$15102$17Rald g$x2$15103$17Rald)
        ($fxdiv0 g$x1$15102$17Rald g$x2$15103$17Rald))))
   (g$fxdiv0-and-mod0$14122$17Rald
     g$fxdiv0-and-mod0$16047$17Rald
     (case-lambda
       ((g$x1$15104$17Rald g$x2$15105$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$15104$17Rald))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$15104$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$x2$15105$17Rald))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$15105$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15106$17Rald)
                  (values
                    g$d$15106$17Rald
                    ($$fx-
                      g$x1$15104$17Rald
                      ($$fx* g$d$15106$17Rald g$x2$15105$17Rald)))))
               ((case-lambda
                  ((g$x1$15127$17Rald g$x2$15128$17Rald)
                   (begin
                     (if ($fx=? '0 g$x2$15128$17Rald)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$15127$17Rald
                         g$x2$15128$17Rald)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15128$17Rald)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13784$17Rald)
                               g$x1$15127$17Rald))
                           '#f)
                       (g$overflow-error$13893$17Rald
                         'fxdiv0
                         g$x1$15127$17Rald
                         g$x2$15128$17Rald)
                       (void))
                     ((case-lambda
                        ((g$x1$15149$17Rald g$x2$15150$17Rald)
                         ($fxdiv0 g$x1$15149$17Rald g$x2$15150$17Rald)))
                      g$x1$15127$17Rald
                      g$x2$15128$17Rald))))
                g$x1$15104$17Rald
                g$x2$15105$17Rald)))))))))
   (g$residual-fxpositive?*$14138$17Rald
     g$residual-fxpositive?*$16048$17Rald
     (case-lambda ((g$r$15171$17Rald) ($fx<? '0 g$r$15171$17Rald))))
   (g$fxpositive?$14139$17Rald
     g$fxpositive?$16049$17Rald
     (case-lambda
       ((g$r$15172$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$r$15172$17Rald))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$15172$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15193$17Rald) ($fx<? '0 g$r$15193$17Rald)))
               g$r$15172$17Rald))))))))
   (g$residual-fxnegative?*$14155$17Rald
     g$residual-fxnegative?*$16050$17Rald
     (case-lambda ((g$r$15214$17Rald) ($fx>? '0 g$r$15214$17Rald))))
   (g$fxnegative?$14156$17Rald
     g$fxnegative?$16051$17Rald
     (case-lambda
       ((g$r$15215$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$r$15215$17Rald))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$15215$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15236$17Rald) ($fx>? '0 g$r$15236$17Rald)))
               g$r$15215$17Rald))))))))
   (g$residual-fxzero?*$14172$17Rald
     g$residual-fxzero?*$16052$17Rald
     (case-lambda ((g$r$15257$17Rald) ($fx=? '0 g$r$15257$17Rald))))
   (g$fxzero?$14173$17Rald
     g$fxzero?$16053$17Rald
     (case-lambda
       ((g$r$15258$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$r$15258$17Rald))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$15258$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15279$17Rald) ($fx=? '0 g$r$15279$17Rald)))
               g$r$15258$17Rald))))))))
   (g$residual-fxeven?*$14189$17Rald
     g$residual-fxeven?*$16054$17Rald
     (case-lambda
       ((g$n$15300$17Rald) ($fx=? '0 ($fxand g$n$15300$17Rald '1)))))
   (g$fxeven?$14190$17Rald
     g$fxeven?$16055$17Rald
     (case-lambda
       ((g$n$15301$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$n$15301$17Rald))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$15301$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15322$17Rald)
                  ($fx=? '0 ($fxand g$n$15322$17Rald '1))))
               g$n$15301$17Rald))))))))
   (g$residual-fxodd?*$14206$17Rald
     g$residual-fxodd?*$16056$17Rald
     (case-lambda
       ((g$n$15343$17Rald) ($fx=? '1 ($fxand g$n$15343$17Rald '1)))))
   (g$fxodd?$14207$17Rald
     g$fxodd?$16057$17Rald
     (case-lambda
       ((g$n$15344$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$n$15344$17Rald))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$15344$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15365$17Rald)
                  ($fx=? '1 ($fxand g$n$15365$17Rald '1))))
               g$n$15344$17Rald))))))))
   (g$fxmax$14208$17Rald
     g$fxmax$16058$17Rald
     (case-lambda
       ((g$a$15366$17Rald . g$rest$15367$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$a$15366$17Rald))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$15366$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$15368$17Rald g$b$15369$17Rald)
               (if (g$fx<?$13999$17Rald
                     g$a$15368$17Rald
                     g$b$15369$17Rald)
                 g$b$15369$17Rald
                 g$a$15368$17Rald)))
            g$a$15366$17Rald
            g$rest$15367$17Rald)))))
   (g$fxmin$14209$17Rald
     g$fxmin$16059$17Rald
     (case-lambda
       ((g$a$15370$17Rald . g$rest$15371$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$a$15370$17Rald))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$15370$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$15372$17Rald g$b$15373$17Rald)
               (if (g$fx>?$14001$17Rald
                     g$a$15372$17Rald
                     g$b$15373$17Rald)
                 g$b$15373$17Rald
                 g$a$15372$17Rald)))
            g$a$15370$17Rald
            g$rest$15371$17Rald)))))
   (g$fx*/carry$14210$17Rald
     g$fx*/carry$16060$17Rald
     (case-lambda
       ((g$fx1$15374$17Rald g$fx2$15375$17Rald g$fx3$15376$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15374$17Rald))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$15374$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15375$17Rald))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$15375$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15376$17Rald))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$15376$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15377$17Rald g$e$15378$17Rald)
                  (values
                    (g$mod0$12617$17Rald
                      g$s$15377$17Rald
                      g$e$15378$17Rald)
                    (div0 g$s$15377$17Rald g$e$15378$17Rald))))
               (+ (* g$fx1$15374$17Rald g$fx2$15375$17Rald)
                  g$fx3$15376$17Rald)
               (expt '2 (g$fixnum-width$12615$17Rald))))))))))
   (g$fx-/carry$14211$17Rald
     g$fx-/carry$16061$17Rald
     (case-lambda
       ((g$fx1$15379$17Rald g$fx2$15380$17Rald g$fx3$15381$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15379$17Rald))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$15379$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15380$17Rald))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$15380$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15381$17Rald))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$15381$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15382$17Rald g$e$15383$17Rald)
                  (values
                    (g$mod0$12617$17Rald
                      g$s$15382$17Rald
                      g$e$15383$17Rald)
                    (div0 g$s$15382$17Rald g$e$15383$17Rald))))
               (- g$fx1$15379$17Rald
                  g$fx2$15380$17Rald
                  g$fx3$15381$17Rald)
               (expt '2 (g$fixnum-width$12615$17Rald))))))))))
   (g$fx+/carry$14212$17Rald
     g$fx+/carry$16062$17Rald
     (case-lambda
       ((g$fx1$15384$17Rald g$fx2$15385$17Rald g$fx3$15386$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15384$17Rald))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$15384$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15385$17Rald))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$15385$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15386$17Rald))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$15386$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15387$17Rald g$e$15388$17Rald)
                  (values
                    (g$mod0$12617$17Rald
                      g$s$15387$17Rald
                      g$e$15388$17Rald)
                    (div0 g$s$15387$17Rald g$e$15388$17Rald))))
               (+ g$fx1$15384$17Rald
                  g$fx2$15385$17Rald
                  g$fx3$15386$17Rald)
               (expt '2 (g$fixnum-width$12615$17Rald))))))))))
   (g$residual-fxif*$14228$17Rald
     g$residual-fxif*$16063$17Rald
     (case-lambda
       ((g$fx1$15409$17Rald g$fx2$15410$17Rald g$fx3$15411$17Rald)
        ($fxior
          ($fxand g$fx1$15409$17Rald g$fx2$15410$17Rald)
          ($fxand ($fxnot g$fx1$15409$17Rald) g$fx3$15411$17Rald)))))
   (g$fxif$14229$17Rald
     g$fxif$16064$17Rald
     (case-lambda
       ((g$fx1$15412$17Rald g$fx2$15413$17Rald g$fx3$15414$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15412$17Rald))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$15412$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15413$17Rald))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$15413$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15414$17Rald))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$15414$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15435$17Rald
                    g$fx2$15436$17Rald
                    g$fx3$15437$17Rald)
                  ($fxior
                    ($fxand g$fx1$15435$17Rald g$fx2$15436$17Rald)
                    ($fxand
                      ($fxnot g$fx1$15435$17Rald)
                      g$fx3$15437$17Rald))))
               g$fx1$15412$17Rald
               g$fx2$15413$17Rald
               g$fx3$15414$17Rald))))))))
   (g$residual-fxcopy-bit*$14245$17Rald
     g$residual-fxcopy-bit*$16065$17Rald
     (case-lambda
       ((g$fx1$15458$17Rald g$fx2$15459$17Rald g$fx3$15460$17Rald)
        ((case-lambda
           ((g$fx1$15481$17Rald g$fx2$15482$17Rald g$fx3$15483$17Rald)
            ($fxior
              ($fxand g$fx1$15481$17Rald g$fx2$15482$17Rald)
              ($fxand ($fxnot g$fx1$15481$17Rald) g$fx3$15483$17Rald))))
         ($fxarithmetic-shift-left '1 g$fx2$15459$17Rald)
         ($fxarithmetic-shift-left
           g$fx3$15460$17Rald
           g$fx2$15459$17Rald)
         g$fx1$15458$17Rald))))
   (g$fxcopy-bit$14246$17Rald
     g$fxcopy-bit$16066$17Rald
     (case-lambda
       ((g$fx1$15484$17Rald g$fx2$15485$17Rald g$fx3$15486$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15484$17Rald))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$15484$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15485$17Rald))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$15485$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15486$17Rald))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$15486$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15507$17Rald
                    g$fx2$15508$17Rald
                    g$fx3$15509$17Rald)
                  ((case-lambda
                     ((g$fx1$15530$17Rald
                        g$fx2$15531$17Rald
                        g$fx3$15532$17Rald)
                      ($fxior
                        ($fxand g$fx1$15530$17Rald g$fx2$15531$17Rald)
                        ($fxand
                          ($fxnot g$fx1$15530$17Rald)
                          g$fx3$15532$17Rald))))
                   ($fxarithmetic-shift-left '1 g$fx2$15508$17Rald)
                   ($fxarithmetic-shift-left
                     g$fx3$15509$17Rald
                     g$fx2$15508$17Rald)
                   g$fx1$15507$17Rald)))
               g$fx1$15484$17Rald
               g$fx2$15485$17Rald
               g$fx3$15486$17Rald))))))))
   (g$residual-fxbit-field*$14262$17Rald
     g$residual-fxbit-field*$16067$17Rald
     (case-lambda
       ((g$fx1$15553$17Rald g$fx2$15554$17Rald g$fx3$15555$17Rald)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$15553$17Rald
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$15555$17Rald)))
          g$fx2$15554$17Rald))))
   (g$fxbit-field$14263$17Rald
     g$fxbit-field$16068$17Rald
     (case-lambda
       ((g$fx1$15556$17Rald g$fx2$15557$17Rald g$fx3$15558$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15556$17Rald))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$15556$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15557$17Rald))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$15557$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx3$15558$17Rald))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$15558$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15579$17Rald
                    g$fx2$15580$17Rald
                    g$fx3$15581$17Rald)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$15579$17Rald
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$15581$17Rald)))
                    g$fx2$15580$17Rald)))
               g$fx1$15556$17Rald
               g$fx2$15557$17Rald
               g$fx3$15558$17Rald))))))))
   (g$residual-fxcopy-bit-field*$14279$17Rald
     g$residual-fxcopy-bit-field*$16069$17Rald
     (case-lambda
       ((g$to$15602$17Rald
          g$start$15603$17Rald
          g$end$15604$17Rald
          g$from$15605$17Rald)
        ((case-lambda
           ((g$fx1$15626$17Rald g$fx2$15627$17Rald g$fx3$15628$17Rald)
            ($fxior
              ($fxand g$fx1$15626$17Rald g$fx2$15627$17Rald)
              ($fxand ($fxnot g$fx1$15626$17Rald) g$fx3$15628$17Rald))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$15603$17Rald)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$15604$17Rald)))
         ($fxarithmetic-shift-left
           g$from$15605$17Rald
           g$start$15603$17Rald)
         g$to$15602$17Rald))))
   (g$fxcopy-bit-field$14280$17Rald
     g$fxcopy-bit-field$16070$17Rald
     (case-lambda
       ((g$to$15629$17Rald
          g$start$15630$17Rald
          g$end$15631$17Rald
          g$from$15632$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$to$15629$17Rald))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$15629$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$start$15630$17Rald))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$15630$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$end$15631$17Rald))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$15631$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$from$15632$17Rald))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$15632$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$15653$17Rald
                    g$start$15654$17Rald
                    g$end$15655$17Rald
                    g$from$15656$17Rald)
                  ((case-lambda
                     ((g$fx1$15677$17Rald
                        g$fx2$15678$17Rald
                        g$fx3$15679$17Rald)
                      ($fxior
                        ($fxand g$fx1$15677$17Rald g$fx2$15678$17Rald)
                        ($fxand
                          ($fxnot g$fx1$15677$17Rald)
                          g$fx3$15679$17Rald))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$15654$17Rald)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$15655$17Rald)))
                   ($fxarithmetic-shift-left
                     g$from$15656$17Rald
                     g$start$15654$17Rald)
                   g$to$15653$17Rald)))
               g$to$15629$17Rald
               g$start$15630$17Rald
               g$end$15631$17Rald
               g$from$15632$17Rald))))))))
   (g$fxarithmetic-shift-left$14281$17Rald
     g$fxarithmetic-shift-left$16071$17Rald
     (case-lambda
       ((g$fx1$15680$17Rald g$fx2$15681$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15680$17Rald))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$15680$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15681$17Rald))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$15681$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15702$17Rald g$k$15703$17Rald)
                  (if ($fx=? g$k$15703$17Rald '0)
                    g$x$15702$17Rald
                    (if ($fx<? g$k$15703$17Rald '0)
                      ($fxarithmetic-shift-right
                        g$x$15702$17Rald
                        ($$fx- g$k$15703$17Rald))
                      ((case-lambda
                         ((g$i$15704$17Rald)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$15702$17Rald)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$15704$17Rald))
                              (g$overflow-error$13893$17Rald
                                'fxarithmetic-shift
                                g$x$15702$17Rald
                                g$k$15703$17Rald)
                              (void))
                            g$i$15704$17Rald)))
                       ($fxarithmetic-shift-left
                         g$x$15702$17Rald
                         g$k$15703$17Rald))))))
               g$fx1$15680$17Rald
               g$fx2$15681$17Rald))))))))
   (g$fxarithmetic-shift-right$14282$17Rald
     g$fxarithmetic-shift-right$16072$17Rald
     (case-lambda
       ((g$fx1$15705$17Rald g$fx2$15706$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$fx1$15705$17Rald))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$15705$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$fx2$15706$17Rald))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$15706$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15727$17Rald g$k$15728$17Rald)
                  (if ($fx=? g$k$15728$17Rald '0)
                    g$x$15727$17Rald
                    (if ($fx<? g$k$15728$17Rald '0)
                      ($fxarithmetic-shift-right
                        g$x$15727$17Rald
                        ($$fx- g$k$15728$17Rald))
                      ((case-lambda
                         ((g$i$15729$17Rald)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$15727$17Rald)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$15729$17Rald))
                              (g$overflow-error$13893$17Rald
                                'fxarithmetic-shift
                                g$x$15727$17Rald
                                g$k$15728$17Rald)
                              (void))
                            g$i$15729$17Rald)))
                       ($fxarithmetic-shift-left
                         g$x$15727$17Rald
                         g$k$15728$17Rald))))))
               g$fx1$15705$17Rald
               ($$fx- g$fx2$15706$17Rald)))))))))
   (g$fxrotate-bit-field$14283$17Rald
     g$fxrotate-bit-field$16073$17Rald
     (case-lambda
       ((g$n$15730$17Rald
          g$start$15731$17Rald
          g$end$15732$17Rald
          g$count$15733$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$n$15730$17Rald))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$15730$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$start$15731$17Rald))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$15731$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$end$15732$17Rald))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$15732$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$count$15733$17Rald))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$15733$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$15734$17Rald)
                  (if ((case-lambda
                         ((g$r$15755$17Rald)
                          ($fx<? '0 g$r$15755$17Rald)))
                       g$width$15734$17Rald)
                    ((case-lambda
                       ((g$count$15756$17Rald g$field$15757$17Rald)
                        ((case-lambda
                           ((g$to$15778$17Rald
                              g$start$15779$17Rald
                              g$end$15780$17Rald
                              g$from$15781$17Rald)
                            ((case-lambda
                               ((g$fx1$15802$17Rald
                                  g$fx2$15803$17Rald
                                  g$fx3$15804$17Rald)
                                ($fxior
                                  ($fxand
                                    g$fx1$15802$17Rald
                                    g$fx2$15803$17Rald)
                                  ($fxand
                                    ($fxnot g$fx1$15802$17Rald)
                                    g$fx3$15804$17Rald))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$15779$17Rald)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$15780$17Rald)))
                             ($fxarithmetic-shift-left
                               g$from$15781$17Rald
                               g$start$15779$17Rald)
                             g$to$15778$17Rald)))
                         g$n$15730$17Rald
                         g$start$15731$17Rald
                         g$end$15732$17Rald
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$15757$17Rald
                             g$count$15756$17Rald)
                           ($fxarithmetic-shift-right
                             g$field$15757$17Rald
                             ($$fx-
                               g$width$15734$17Rald
                               g$count$15756$17Rald))))))
                     ((case-lambda
                        ((g$x1$15825$17Rald g$x2$15826$17Rald)
                         ($$fx-
                           g$x1$15825$17Rald
                           ($$fx*
                             ((case-lambda
                                ((g$x1$15847$17Rald g$x2$15848$17Rald)
                                 (begin
                                   (if ($fx=? '0 g$x2$15848$17Rald)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$15847$17Rald
                                       g$x2$15848$17Rald)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$15848$17Rald)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$13784$17Rald)
                                             g$x1$15847$17Rald))
                                         '#f)
                                     (g$overflow-error$13893$17Rald
                                       'fxdiv
                                       g$x1$15847$17Rald
                                       g$x2$15848$17Rald)
                                     (void))
                                   (if ($fx=? '0 g$x1$15847$17Rald)
                                     '0
                                     (if ($fx<? '0 g$x1$15847$17Rald)
                                       ((case-lambda
                                          ((g$x1$15869$17Rald
                                             g$x2$15870$17Rald)
                                           ($fxdiv0
                                             g$x1$15869$17Rald
                                             g$x2$15870$17Rald)))
                                        g$x1$15847$17Rald
                                        g$x2$15848$17Rald)
                                       (if ($fx<? '0 g$x2$15848$17Rald)
                                         ((case-lambda
                                            ((g$x1$15891$17Rald
                                               g$x2$15892$17Rald)
                                             ($fxdiv0
                                               g$x1$15891$17Rald
                                               g$x2$15892$17Rald)))
                                          ($$fx-
                                            g$x1$15847$17Rald
                                            ($$fx-
                                              g$x2$15848$17Rald
                                              '1))
                                          g$x2$15848$17Rald)
                                         ((case-lambda
                                            ((g$x1$15913$17Rald
                                               g$x2$15914$17Rald)
                                             ($fxdiv0
                                               g$x1$15913$17Rald
                                               g$x2$15914$17Rald)))
                                          ($$fx+
                                            g$x1$15847$17Rald
                                            ($$fx+
                                              g$x2$15848$17Rald
                                              '1))
                                          g$x2$15848$17Rald)))))))
                              g$x1$15825$17Rald
                              g$x2$15826$17Rald)
                             g$x2$15826$17Rald))))
                      g$count$15733$17Rald
                      g$width$15734$17Rald)
                     ((case-lambda
                        ((g$fx1$15935$17Rald
                           g$fx2$15936$17Rald
                           g$fx3$15937$17Rald)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$15935$17Rald
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$15937$17Rald)))
                           g$fx2$15936$17Rald)))
                      g$n$15730$17Rald
                      g$start$15731$17Rald
                      g$end$15732$17Rald))
                    g$n$15730$17Rald)))
               ($$fx- g$end$15732$17Rald g$start$15731$17Rald)))))))))
   (g$fxreverse-bit-field$14284$17Rald
     g$fxreverse-bit-field$16074$17Rald
     (case-lambda
       ((g$x1$15938$17Rald g$start$15939$17Rald g$end$15940$17Rald)
        (begin
          (if (not (g$fixnum?$12613$17Rald g$x1$15938$17Rald))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$15938$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$start$15939$17Rald))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$15939$17Rald)
            (void))
          (if (not (g$fixnum?$12613$17Rald g$end$15940$17Rald))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$15940$17Rald)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$15939$17Rald
                           g$end$15940$17Rald))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$15939$17Rald
                    g$end$15940$17Rald)
                  (void))
                (letrec ((g$loop$15941$17Rald
                           (case-lambda
                             ((g$width$15965$17Rald
                                g$bits$15966$17Rald
                                g$rbits$15967$17Rald)
                              (if ($fx=? g$width$15965$17Rald '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$15988$17Rald
                                        g$start$15989$17Rald
                                        g$end$15990$17Rald
                                        g$from$15991$17Rald)
                                      ((case-lambda
                                         ((g$fx1$16012$17Rald
                                            g$fx2$16013$17Rald
                                            g$fx3$16014$17Rald)
                                          ($fxior
                                            ($fxand
                                              g$fx1$16012$17Rald
                                              g$fx2$16013$17Rald)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$16012$17Rald)
                                              g$fx3$16014$17Rald))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$15989$17Rald)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$15990$17Rald)))
                                       ($fxarithmetic-shift-left
                                         g$from$15991$17Rald
                                         g$start$15989$17Rald)
                                       g$to$15988$17Rald)))
                                   g$x1$15938$17Rald
                                   g$start$15939$17Rald
                                   g$end$15940$17Rald
                                   g$rbits$15967$17Rald))
                                (g$loop$15941$17Rald
                                  ($$fx- g$width$15965$17Rald '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$15966$17Rald
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$15967$17Rald
                                      '1)
                                    ($fxand
                                      g$bits$15966$17Rald
                                      '1))))))))
                  (g$loop$15941$17Rald
                    ($$fx- g$end$15940$17Rald g$start$15939$17Rald)
                    ((case-lambda
                       ((g$fx1$15962$17Rald
                          g$fx2$15963$17Rald
                          g$fx3$15964$17Rald)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$15962$17Rald
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$15964$17Rald)))
                          g$fx2$15963$17Rald)))
                     g$x1$15938$17Rald
                     g$start$15939$17Rald
                     g$end$15940$17Rald)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$16253$17Rald
     g$fl+$17562$17Rald
     (case-lambda
       (() '0.0)
       ((g$x1$16374$17Rald g$x2$16375$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16374$17Rald))
            (assertion-violation 'fl+ '"not a flonum" g$x1$16374$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16375$17Rald))
            (assertion-violation 'fl+ '"not a flonum" g$x2$16375$17Rald)
            (void))
          ($fl+ g$x1$16374$17Rald g$x2$16375$17Rald)))
       (g$args$16376$17Rald
        (g$fold-left$11838$17Rald
          g$fl+$16253$17Rald
          (g$fl+$16253$17Rald)
          g$args$16376$17Rald))))
   (g$fl*$16254$17Rald
     g$fl*$17563$17Rald
     (case-lambda
       (() '1.0)
       ((g$x1$16377$17Rald g$x2$16378$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16377$17Rald))
            (assertion-violation 'fl* '"not a flonum" g$x1$16377$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16378$17Rald))
            (assertion-violation 'fl* '"not a flonum" g$x2$16378$17Rald)
            (void))
          ($fl* g$x1$16377$17Rald g$x2$16378$17Rald)))
       (g$args$16379$17Rald
        (g$fold-left$11838$17Rald
          g$fl*$16254$17Rald
          (g$fl*$16254$17Rald)
          g$args$16379$17Rald))))
   (g$fl-$16255$17Rald
     g$fl-$17564$17Rald
     (case-lambda
       ((g$x1$16380$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16380$17Rald))
            (assertion-violation 'fl- '"not a flonum" g$x1$16380$17Rald)
            (void))
          ($fl- g$x1$16380$17Rald)))
       ((g$x1$16381$17Rald g$x2$16382$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16381$17Rald))
            (assertion-violation 'fl- '"not a flonum" g$x1$16381$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16382$17Rald))
            (assertion-violation 'fl- '"not a flonum" g$x2$16382$17Rald)
            (void))
          ($fl- g$x1$16381$17Rald g$x2$16382$17Rald)))
       ((g$x1$16383$17Rald g$x2$16384$17Rald . g$rest$16385$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16383$17Rald))
            (assertion-violation 'fl- '"not a flonum" g$x1$16383$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            g$fl-$16255$17Rald
            g$x1$16383$17Rald
            (cons g$x2$16384$17Rald g$rest$16385$17Rald))))))
   (g$fl/$16256$17Rald
     g$fl/$17565$17Rald
     (case-lambda
       ((g$x1$16386$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16386$17Rald))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16386$17Rald)
            (void))
          ($fl/ '1.0 g$x1$16386$17Rald)))
       ((g$x1$16387$17Rald g$x2$16388$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16387$17Rald))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16387$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16388$17Rald))
            (assertion-violation 'fl/ '"not a flonum" g$x2$16388$17Rald)
            (void))
          ($fl/ g$x1$16387$17Rald g$x2$16388$17Rald)))
       ((g$x1$16389$17Rald g$x2$16390$17Rald . g$rest$16391$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16389$17Rald))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16389$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            g$fl/$16256$17Rald
            g$x1$16389$17Rald
            (cons g$x2$16390$17Rald g$rest$16391$17Rald))))))
   (g$fl=?$16257$17Rald
     g$fl=?$17566$17Rald
     (case-lambda
       ((g$x1$16392$17Rald g$x2$16393$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16392$17Rald))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$16392$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16393$17Rald))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$16393$17Rald)
            (void))
          ($fl=? g$x1$16392$17Rald g$x2$16393$17Rald)))
       ((g$x1$16394$17Rald g$x2$16395$17Rald . g$rest$16396$17Rald)
        ((letrec ((g$f$16397$17Rald
                    (case-lambda
                      ((g$a$16398$17Rald g$b$16399$17Rald)
                       (if (null? g$b$16399$17Rald)
                         '#t
                         (if (g$fl=?$16257$17Rald
                               g$a$16398$17Rald
                               ($car g$b$16399$17Rald))
                           (g$f$16397$17Rald
                             ($car g$b$16399$17Rald)
                             ($cdr g$b$16399$17Rald))
                           '#f))))))
           g$f$16397$17Rald)
         g$x1$16394$17Rald
         (cons g$x2$16395$17Rald g$rest$16396$17Rald)))))
   (g$fl<?$16258$17Rald
     g$fl<?$17567$17Rald
     (case-lambda
       ((g$x1$16400$17Rald g$x2$16401$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16400$17Rald))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$16400$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16401$17Rald))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$16401$17Rald)
            (void))
          ($fl<? g$x1$16400$17Rald g$x2$16401$17Rald)))
       ((g$x1$16402$17Rald g$x2$16403$17Rald . g$rest$16404$17Rald)
        ((letrec ((g$f$16405$17Rald
                    (case-lambda
                      ((g$a$16406$17Rald g$b$16407$17Rald)
                       (if (null? g$b$16407$17Rald)
                         '#t
                         (if (g$fl<?$16258$17Rald
                               g$a$16406$17Rald
                               ($car g$b$16407$17Rald))
                           (g$f$16405$17Rald
                             ($car g$b$16407$17Rald)
                             ($cdr g$b$16407$17Rald))
                           '#f))))))
           g$f$16405$17Rald)
         g$x1$16402$17Rald
         (cons g$x2$16403$17Rald g$rest$16404$17Rald)))))
   (g$fl<=?$16259$17Rald
     g$fl<=?$17568$17Rald
     (case-lambda
       ((g$x1$16408$17Rald g$x2$16409$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16408$17Rald))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$16408$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16409$17Rald))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$16409$17Rald)
            (void))
          ($fl<=? g$x1$16408$17Rald g$x2$16409$17Rald)))
       ((g$x1$16410$17Rald g$x2$16411$17Rald . g$rest$16412$17Rald)
        ((letrec ((g$f$16413$17Rald
                    (case-lambda
                      ((g$a$16414$17Rald g$b$16415$17Rald)
                       (if (null? g$b$16415$17Rald)
                         '#t
                         (if (g$fl<=?$16259$17Rald
                               g$a$16414$17Rald
                               ($car g$b$16415$17Rald))
                           (g$f$16413$17Rald
                             ($car g$b$16415$17Rald)
                             ($cdr g$b$16415$17Rald))
                           '#f))))))
           g$f$16413$17Rald)
         g$x1$16410$17Rald
         (cons g$x2$16411$17Rald g$rest$16412$17Rald)))))
   (g$fl>?$16260$17Rald
     g$fl>?$17569$17Rald
     (case-lambda
       ((g$x1$16416$17Rald g$x2$16417$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16416$17Rald))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$16416$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16417$17Rald))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$16417$17Rald)
            (void))
          ($fl>? g$x1$16416$17Rald g$x2$16417$17Rald)))
       ((g$x1$16418$17Rald g$x2$16419$17Rald . g$rest$16420$17Rald)
        ((letrec ((g$f$16421$17Rald
                    (case-lambda
                      ((g$a$16422$17Rald g$b$16423$17Rald)
                       (if (null? g$b$16423$17Rald)
                         '#t
                         (if (g$fl>?$16260$17Rald
                               g$a$16422$17Rald
                               ($car g$b$16423$17Rald))
                           (g$f$16421$17Rald
                             ($car g$b$16423$17Rald)
                             ($cdr g$b$16423$17Rald))
                           '#f))))))
           g$f$16421$17Rald)
         g$x1$16418$17Rald
         (cons g$x2$16419$17Rald g$rest$16420$17Rald)))))
   (g$fl>=?$16261$17Rald
     g$fl>=?$17570$17Rald
     (case-lambda
       ((g$x1$16424$17Rald g$x2$16425$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16424$17Rald))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$16424$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16425$17Rald))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$16425$17Rald)
            (void))
          ($fl>=? g$x1$16424$17Rald g$x2$16425$17Rald)))
       ((g$x1$16426$17Rald g$x2$16427$17Rald . g$rest$16428$17Rald)
        ((letrec ((g$f$16429$17Rald
                    (case-lambda
                      ((g$a$16430$17Rald g$b$16431$17Rald)
                       (if (null? g$b$16431$17Rald)
                         '#t
                         (if (g$fl>=?$16261$17Rald
                               g$a$16430$17Rald
                               ($car g$b$16431$17Rald))
                           (g$f$16429$17Rald
                             ($car g$b$16431$17Rald)
                             ($cdr g$b$16431$17Rald))
                           '#f))))))
           g$f$16429$17Rald)
         g$x1$16426$17Rald
         (cons g$x2$16427$17Rald g$rest$16428$17Rald)))))
   (g$residual-fldiv0*$16277$17Rald
     g$residual-fldiv0*$17571$17Rald
     (case-lambda
       ((g$x1$16452$17Rald g$x2$16453$17Rald)
        ((case-lambda
           ((g$d$16454$17Rald)
            ((case-lambda
               ((g$m$16455$17Rald)
                (if ($fl<?
                      g$m$16455$17Rald
                      (magnitude ($fl/ g$x2$16453$17Rald '2.0)))
                  g$d$16454$17Rald
                  (if ($fl<? '0.0 g$x2$16453$17Rald)
                    ($fl+ g$d$16454$17Rald '1.0)
                    ($fl- g$d$16454$17Rald '1.0)))))
             ($fl-
               g$x1$16452$17Rald
               ($fl* g$d$16454$17Rald g$x2$16453$17Rald)))))
         ((case-lambda
            ((g$x1$16476$17Rald g$x2$16477$17Rald)
             (if ($fl<? '0.0 g$x2$16477$17Rald)
               ((case-lambda
                  ((g$fl$16498$17Rald)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$16498$17Rald)))
                ($fl/ g$x1$16476$17Rald g$x2$16477$17Rald))
               ($fl-
                 ((case-lambda
                    ((g$fl$16519$17Rald)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$16519$17Rald)))
                  ($fl/ g$x1$16476$17Rald ($fl- g$x2$16477$17Rald)))))))
          g$x1$16452$17Rald
          g$x2$16453$17Rald)))))
   (g$fldiv0$16278$17Rald
     g$fldiv0$17572$17Rald
     (case-lambda
       ((g$x1$16520$17Rald g$x2$16521$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16520$17Rald))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$16520$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16521$17Rald))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$16521$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$16542$17Rald g$x2$16543$17Rald)
                  ((case-lambda
                     ((g$d$16544$17Rald)
                      ((case-lambda
                         ((g$m$16545$17Rald)
                          (if ($fl<?
                                g$m$16545$17Rald
                                (magnitude
                                  ($fl/ g$x2$16543$17Rald '2.0)))
                            g$d$16544$17Rald
                            (if ($fl<? '0.0 g$x2$16543$17Rald)
                              ($fl+ g$d$16544$17Rald '1.0)
                              ($fl- g$d$16544$17Rald '1.0)))))
                       ($fl-
                         g$x1$16542$17Rald
                         ($fl* g$d$16544$17Rald g$x2$16543$17Rald)))))
                   ((case-lambda
                      ((g$x1$16566$17Rald g$x2$16567$17Rald)
                       (if ($fl<? '0.0 g$x2$16567$17Rald)
                         ((case-lambda
                            ((g$fl$16588$17Rald)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$16588$17Rald)))
                          ($fl/ g$x1$16566$17Rald g$x2$16567$17Rald))
                         ($fl-
                           ((case-lambda
                              ((g$fl$16609$17Rald)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$16609$17Rald)))
                            ($fl/
                              g$x1$16566$17Rald
                              ($fl- g$x2$16567$17Rald)))))))
                    g$x1$16542$17Rald
                    g$x2$16543$17Rald))))
               g$x1$16520$17Rald
               g$x2$16521$17Rald))))))))
   (g$residual-flmod*$16294$17Rald
     g$residual-flmod*$17573$17Rald
     (case-lambda
       ((g$x1$16630$17Rald g$x2$16631$17Rald)
        ($fl-
          g$x1$16630$17Rald
          ($fl*
            ((case-lambda
               ((g$x1$16652$17Rald g$x2$16653$17Rald)
                (if ($fl<? '0.0 g$x2$16653$17Rald)
                  ((case-lambda
                     ((g$fl$16674$17Rald)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$16674$17Rald)))
                   ($fl/ g$x1$16652$17Rald g$x2$16653$17Rald))
                  ($fl-
                    ((case-lambda
                       ((g$fl$16695$17Rald)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$16695$17Rald)))
                     ($fl/
                       g$x1$16652$17Rald
                       ($fl- g$x2$16653$17Rald)))))))
             g$x1$16630$17Rald
             g$x2$16631$17Rald)
            g$x2$16631$17Rald)))))
   (g$flmod$16295$17Rald
     g$flmod$17574$17Rald
     (case-lambda
       ((g$x1$16696$17Rald g$x2$16697$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16696$17Rald))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$16696$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16697$17Rald))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$16697$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$16718$17Rald g$x2$16719$17Rald)
                  ($fl-
                    g$x1$16718$17Rald
                    ($fl*
                      ((case-lambda
                         ((g$x1$16740$17Rald g$x2$16741$17Rald)
                          (if ($fl<? '0.0 g$x2$16741$17Rald)
                            ((case-lambda
                               ((g$fl$16762$17Rald)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$16762$17Rald)))
                             ($fl/ g$x1$16740$17Rald g$x2$16741$17Rald))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$16783$17Rald)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$16783$17Rald)))
                               ($fl/
                                 g$x1$16740$17Rald
                                 ($fl- g$x2$16741$17Rald)))))))
                       g$x1$16718$17Rald
                       g$x2$16719$17Rald)
                      g$x2$16719$17Rald))))
               g$x1$16696$17Rald
               g$x2$16697$17Rald))))))))
   (g$flmod0$16296$17Rald
     g$flmod0$17575$17Rald
     (case-lambda
       ((g$x1$16784$17Rald g$x2$16785$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16784$17Rald))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$16784$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16785$17Rald))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$16785$17Rald)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$16784$17Rald
                ($fl*
                  ((case-lambda
                     ((g$x1$16806$17Rald g$x2$16807$17Rald)
                      ((case-lambda
                         ((g$d$16808$17Rald)
                          ((case-lambda
                             ((g$m$16809$17Rald)
                              (if ($fl<?
                                    g$m$16809$17Rald
                                    (magnitude
                                      ($fl/ g$x2$16807$17Rald '2.0)))
                                g$d$16808$17Rald
                                (if ($fl<? '0.0 g$x2$16807$17Rald)
                                  ($fl+ g$d$16808$17Rald '1.0)
                                  ($fl- g$d$16808$17Rald '1.0)))))
                           ($fl-
                             g$x1$16806$17Rald
                             ($fl*
                               g$d$16808$17Rald
                               g$x2$16807$17Rald)))))
                       ((case-lambda
                          ((g$x1$16830$17Rald g$x2$16831$17Rald)
                           (if ($fl<? '0.0 g$x2$16831$17Rald)
                             ((case-lambda
                                ((g$fl$16852$17Rald)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$16852$17Rald)))
                              ($fl/
                                g$x1$16830$17Rald
                                g$x2$16831$17Rald))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$16873$17Rald)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$16873$17Rald)))
                                ($fl/
                                  g$x1$16830$17Rald
                                  ($fl- g$x2$16831$17Rald)))))))
                        g$x1$16806$17Rald
                        g$x2$16807$17Rald))))
                   g$x1$16784$17Rald
                   g$x2$16785$17Rald)
                  g$x2$16785$17Rald)))))))))
   (g$fldiv-and-mod$16297$17Rald
     g$fldiv-and-mod$17576$17Rald
     (case-lambda
       ((g$x1$16874$17Rald g$x2$16875$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$16874$17Rald))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$16874$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$16875$17Rald))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$16875$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$16876$17Rald)
                  (values
                    g$d$16876$17Rald
                    ($fl-
                      g$x1$16874$17Rald
                      ($fl* g$d$16876$17Rald g$x2$16875$17Rald)))))
               ((case-lambda
                  ((g$x1$16897$17Rald g$x2$16898$17Rald)
                   (if ($fl<? '0.0 g$x2$16898$17Rald)
                     ((case-lambda
                        ((g$fl$16919$17Rald)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$16919$17Rald)))
                      ($fl/ g$x1$16897$17Rald g$x2$16898$17Rald))
                     ($fl-
                       ((case-lambda
                          ((g$fl$16940$17Rald)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$16940$17Rald)))
                        ($fl/
                          g$x1$16897$17Rald
                          ($fl- g$x2$16898$17Rald)))))))
                g$x1$16874$17Rald
                g$x2$16875$17Rald)))))))))
   (g$residual-fldiv*$16313$17Rald
     g$residual-fldiv*$17577$17Rald
     (case-lambda
       ((g$x1$16961$17Rald g$x2$16962$17Rald)
        (if ($fl<? '0.0 g$x2$16962$17Rald)
          ((case-lambda
             ((g$fl$16983$17Rald)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$16983$17Rald)))
           ($fl/ g$x1$16961$17Rald g$x2$16962$17Rald))
          ($fl-
            ((case-lambda
               ((g$fl$17004$17Rald)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$17004$17Rald)))
             ($fl/ g$x1$16961$17Rald ($fl- g$x2$16962$17Rald))))))))
   (g$fldiv$16314$17Rald
     g$fldiv$17578$17Rald
     (case-lambda
       ((g$x1$17005$17Rald g$x2$17006$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$17005$17Rald))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$17005$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$17006$17Rald))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$17006$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17027$17Rald g$x2$17028$17Rald)
                  (if ($fl<? '0.0 g$x2$17028$17Rald)
                    ((case-lambda
                       ((g$fl$17049$17Rald)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17049$17Rald)))
                     ($fl/ g$x1$17027$17Rald g$x2$17028$17Rald))
                    ($fl-
                      ((case-lambda
                         ((g$fl$17070$17Rald)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$17070$17Rald)))
                       ($fl/
                         g$x1$17027$17Rald
                         ($fl- g$x2$17028$17Rald)))))))
               g$x1$17005$17Rald
               g$x2$17006$17Rald))))))))
   (g$fldiv0-and-mod0$16315$17Rald
     g$fldiv0-and-mod0$17579$17Rald
     (case-lambda
       ((g$x1$17071$17Rald g$x2$17072$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$x1$17071$17Rald))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$17071$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$x2$17072$17Rald))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$17072$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17073$17Rald)
                  (values
                    g$d$17073$17Rald
                    ($fl-
                      g$x1$17071$17Rald
                      ($fl* g$d$17073$17Rald g$x2$17072$17Rald)))))
               ((case-lambda
                  ((g$x1$17094$17Rald g$x2$17095$17Rald)
                   ((case-lambda
                      ((g$d$17096$17Rald)
                       ((case-lambda
                          ((g$m$17097$17Rald)
                           (if ($fl<?
                                 g$m$17097$17Rald
                                 (magnitude
                                   ($fl/ g$x2$17095$17Rald '2.0)))
                             g$d$17096$17Rald
                             (if ($fl<? '0.0 g$x2$17095$17Rald)
                               ($fl+ g$d$17096$17Rald '1.0)
                               ($fl- g$d$17096$17Rald '1.0)))))
                        ($fl-
                          g$x1$17094$17Rald
                          ($fl* g$d$17096$17Rald g$x2$17095$17Rald)))))
                    ((case-lambda
                       ((g$x1$17118$17Rald g$x2$17119$17Rald)
                        (if ($fl<? '0.0 g$x2$17119$17Rald)
                          ((case-lambda
                             ((g$fl$17140$17Rald)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$17140$17Rald)))
                           ($fl/ g$x1$17118$17Rald g$x2$17119$17Rald))
                          ($fl-
                            ((case-lambda
                               ((g$fl$17161$17Rald)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17161$17Rald)))
                             ($fl/
                               g$x1$17118$17Rald
                               ($fl- g$x2$17119$17Rald)))))))
                     g$x1$17094$17Rald
                     g$x2$17095$17Rald))))
                g$x1$17071$17Rald
                g$x2$17072$17Rald)))))))))
   (g$flinteger?$16316$17Rald
     g$flinteger?$17580$17Rald
     (case-lambda
       ((g$fl$17162$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17162$17Rald))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$17162$17Rald)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$17183$17Rald g$x2$17184$17Rald)
                    ($fl-
                      g$x1$17183$17Rald
                      ($fl*
                        ((case-lambda
                           ((g$x1$17205$17Rald g$x2$17206$17Rald)
                            (if ($fl<? '0.0 g$x2$17206$17Rald)
                              ((case-lambda
                                 ((g$fl$17227$17Rald)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17227$17Rald)))
                               ($fl/
                                 g$x1$17205$17Rald
                                 g$x2$17206$17Rald))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$17248$17Rald)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17248$17Rald)))
                                 ($fl/
                                   g$x1$17205$17Rald
                                   ($fl- g$x2$17206$17Rald)))))))
                         g$x1$17183$17Rald
                         g$x2$17184$17Rald)
                        g$x2$17184$17Rald))))
                 g$fl$17162$17Rald
                 '1.0)))))))))
   (g$flfinite?$16317$17Rald
     g$flfinite?$17581$17Rald
     (case-lambda
       ((g$fl$17249$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17249$17Rald))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$17249$17Rald)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$17270$17Rald)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$17270$17Rald)))
                    g$fl$17249$17Rald)))))))))
   (g$residual-flinfinite?*$16333$17Rald
     g$residual-flinfinite?*$17582$17Rald
     (case-lambda
       ((g$fl$17291$17Rald)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$17291$17Rald))))
   (g$flinfinite?$16334$17Rald
     g$flinfinite?$17583$17Rald
     (case-lambda
       ((g$fl$17292$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17292$17Rald))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$17292$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17313$17Rald)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$17313$17Rald)))
               g$fl$17292$17Rald))))))))
   (g$flnan?$16335$17Rald
     g$flnan?$17584$17Rald
     (case-lambda
       ((g$fl$17314$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17314$17Rald))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$17314$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$17314$17Rald))))))))
   (g$flsin$16336$17Rald
     g$flsin$17585$17Rald
     (case-lambda
       ((g$fl$17315$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17315$17Rald))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$17315$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$17315$17Rald))))))))
   (g$flcos$16337$17Rald
     g$flcos$17586$17Rald
     (case-lambda
       ((g$fl$17316$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17316$17Rald))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$17316$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$17316$17Rald))))))))
   (g$fltan$16338$17Rald
     g$fltan$17587$17Rald
     (case-lambda
       ((g$fl$17317$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17317$17Rald))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$17317$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$17317$17Rald))))))))
   (g$flasin$16339$17Rald
     g$flasin$17588$17Rald
     (case-lambda
       ((g$fl$17318$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17318$17Rald))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$17318$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$17318$17Rald))))))))
   (g$flacos$16340$17Rald
     g$flacos$17589$17Rald
     (case-lambda
       ((g$fl$17319$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17319$17Rald))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$17319$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$17319$17Rald))))))))
   (g$flatan$16341$17Rald
     g$flatan$17590$17Rald
     (case-lambda
       ((g$fl$17320$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17320$17Rald))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$17320$17Rald)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$17320$17Rald)))
       ((g$fl1$17321$17Rald g$fl2$17322$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl1$17321$17Rald))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$17321$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$fl2$17322$17Rald))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$17322$17Rald)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$17321$17Rald
            g$fl2$17322$17Rald)))))
   (g$fllog$16342$17Rald
     g$fllog$17591$17Rald
     (case-lambda
       ((g$fl$17323$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17323$17Rald))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$17323$17Rald)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$17323$17Rald)))
       ((g$fl1$17324$17Rald g$fl2$17325$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl1$17324$17Rald))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$17324$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$fl2$17325$17Rald))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$17325$17Rald)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$17324$17Rald
            g$fl2$17325$17Rald)))))
   (g$flsqrt$16343$17Rald
     g$flsqrt$17592$17Rald
     (case-lambda
       ((g$fl$17326$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17326$17Rald))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$17326$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$17326$17Rald))))))))
   (g$flexp$16344$17Rald
     g$flexp$17593$17Rald
     (case-lambda
       ((g$fl$17327$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17327$17Rald))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$17327$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$17327$17Rald))))))))
   (g$flexpt$16345$17Rald
     g$flexpt$17594$17Rald
     (case-lambda
       ((g$fl$17328$17Rald g$n$17329$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17328$17Rald))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$17328$17Rald)
            (void))
          (if (not (g$flonum?$12614$17Rald g$n$17329$17Rald))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$17329$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$17328$17Rald
                g$n$17329$17Rald))))))))
   (g$flceiling$16346$17Rald
     g$flceiling$17595$17Rald
     (case-lambda
       ((g$fl$17330$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17330$17Rald))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$17330$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$17330$17Rald))))))))
   (g$residual-flfloor*$16362$17Rald
     g$residual-flfloor*$17596$17Rald
     (case-lambda
       ((g$fl$17351$17Rald)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$17351$17Rald))))
   (g$flfloor$16363$17Rald
     g$flfloor$17597$17Rald
     (case-lambda
       ((g$fl$17352$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17352$17Rald))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$17352$17Rald)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17373$17Rald)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$17373$17Rald)))
               g$fl$17352$17Rald))))))))
   (g$fltruncate$16364$17Rald
     g$fltruncate$17598$17Rald
     (case-lambda
       ((g$fl$17374$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17374$17Rald))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$17374$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$17374$17Rald))))))))
   (g$flround$16365$17Rald
     g$flround$17599$17Rald
     (case-lambda
       ((g$fl$17375$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17375$17Rald))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$17375$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$17375$17Rald))))))))
   (g$flabs$16366$17Rald
     g$flabs$17600$17Rald
     (case-lambda
       ((g$fl$17376$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$fl$17376$17Rald))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$17376$17Rald)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$17376$17Rald))))))))
   (g$flpositive?$16367$17Rald
     g$flpositive?$17601$17Rald
     (case-lambda
       ((g$r$17377$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$r$17377$17Rald))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$17377$17Rald)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$17377$17Rald))))))))
   (g$flnegative?$16368$17Rald
     g$flnegative?$17602$17Rald
     (case-lambda
       ((g$r$17378$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$r$17378$17Rald))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$17378$17Rald)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$17378$17Rald))))))))
   (g$flzero?$16369$17Rald
     g$flzero?$17603$17Rald
     (case-lambda
       ((g$r$17379$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$r$17379$17Rald))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$17379$17Rald)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$17379$17Rald))))))))
   (g$fleven?$16370$17Rald
     g$fleven?$17604$17Rald
     (case-lambda
       ((g$n$17380$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$n$17380$17Rald))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$17380$17Rald)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (integer-valued? g$n$17380$17Rald))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$17380$17Rald)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$17401$17Rald g$x2$17402$17Rald)
                      ($fl-
                        g$x1$17401$17Rald
                        ($fl*
                          ((case-lambda
                             ((g$x1$17423$17Rald g$x2$17424$17Rald)
                              (if ($fl<? '0.0 g$x2$17424$17Rald)
                                ((case-lambda
                                   ((g$fl$17445$17Rald)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17445$17Rald)))
                                 ($fl/
                                   g$x1$17423$17Rald
                                   g$x2$17424$17Rald))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$17466$17Rald)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$17466$17Rald)))
                                   ($fl/
                                     g$x1$17423$17Rald
                                     ($fl- g$x2$17424$17Rald)))))))
                           g$x1$17401$17Rald
                           g$x2$17402$17Rald)
                          g$x2$17402$17Rald))))
                   g$n$17380$17Rald
                   '2.0))))))))))
   (g$flodd?$16371$17Rald
     g$flodd?$17605$17Rald
     (case-lambda
       ((g$n$17467$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$n$17467$17Rald))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$17467$17Rald)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (integer-valued? g$n$17467$17Rald))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$17467$17Rald)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$17488$17Rald g$x2$17489$17Rald)
                      ($fl-
                        g$x1$17488$17Rald
                        ($fl*
                          ((case-lambda
                             ((g$x1$17510$17Rald g$x2$17511$17Rald)
                              (if ($fl<? '0.0 g$x2$17511$17Rald)
                                ((case-lambda
                                   ((g$fl$17532$17Rald)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17532$17Rald)))
                                 ($fl/
                                   g$x1$17510$17Rald
                                   g$x2$17511$17Rald))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$17553$17Rald)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$17553$17Rald)))
                                   ($fl/
                                     g$x1$17510$17Rald
                                     ($fl- g$x2$17511$17Rald)))))))
                           g$x1$17488$17Rald
                           g$x2$17489$17Rald)
                          g$x2$17489$17Rald))))
                   g$n$17467$17Rald
                   '2.0))))))))))
   (g$flmax$16372$17Rald
     g$flmax$17606$17Rald
     (case-lambda
       ((g$a$17554$17Rald . g$rest$17555$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$a$17554$17Rald))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$17554$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$17556$17Rald g$b$17557$17Rald)
               (if (g$fl<?$16258$17Rald
                     g$a$17556$17Rald
                     g$b$17557$17Rald)
                 g$b$17557$17Rald
                 g$a$17556$17Rald)))
            g$a$17554$17Rald
            g$rest$17555$17Rald)))))
   (g$flmin$16373$17Rald
     g$flmin$17607$17Rald
     (case-lambda
       ((g$a$17558$17Rald . g$rest$17559$17Rald)
        (begin
          (if (not (g$flonum?$12614$17Rald g$a$17558$17Rald))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$17558$17Rald)
            (void))
          (g$fold-left$11838$17Rald
            (case-lambda
              ((g$a$17560$17Rald g$b$17561$17Rald)
               (if (g$fl>?$16260$17Rald
                     g$a$17560$17Rald
                     g$b$17561$17Rald)
                 g$b$17561$17Rald
                 g$a$17560$17Rald)))
            g$a$17558$17Rald
            g$rest$17559$17Rald))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$17609$17Rald
     g$using$17629$17Rald
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$17610$17Rald
     g$put-datum$17630$17Rald
     (case-lambda
       ((g$p$17618$17Rald g$datum$17619$17Rald)
        (write g$datum$17619$17Rald g$p$17618$17Rald))))
   (g$get-datum$17611$17Rald g$get-datum$17631$17Rald read)
   (g$get-output-string$17612$17Rald
     g$get-output-string$17632$17Rald
     (case-lambda
       ((g$port$17620$17Rald)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$17620$17Rald))))
   (g$open-output-string$17613$17Rald
     g$open-output-string$17633$17Rald
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$17614$17Rald
     g$open-string-output-port$17634$17Rald
     (case-lambda
       (()
        ((case-lambda
           ((g$p$17621$17Rald)
            (values
              g$p$17621$17Rald
              (case-lambda
                (()
                 (g$get-output-string$17612$17Rald
                   g$p$17621$17Rald))))))
         (g$open-output-string$17613$17Rald)))))
   (g$port?$17615$17Rald
     g$port?$17635$17Rald
     (case-lambda
       ((g$obj$17622$17Rald)
        ((case-lambda
           ((g$t$17623$17Rald)
            (if g$t$17623$17Rald
              g$t$17623$17Rald
              (begin '#f (binary-port? g$obj$17622$17Rald)))))
         (textual-port? g$obj$17622$17Rald)))))
   (g$call-with-string-output-port$17616$17Rald
     g$call-with-string-output-port$17636$17Rald
     (case-lambda
       ((g$proc$17624$17Rald)
        ((case-lambda
           ((g$p$17625$17Rald)
            (begin
              (g$call-with-port$17617$17Rald
                g$p$17625$17Rald
                g$proc$17624$17Rald)
              (g$get-output-string$17612$17Rald g$p$17625$17Rald))))
         (g$open-output-string$17613$17Rald)))))
   (g$call-with-port$17617$17Rald
     g$call-with-port$17637$17Rald
     (case-lambda
       ((g$port$17626$17Rald g$proc$17627$17Rald)
        ((case-lambda
           ((g$r$17628$17Rald)
            (begin (close-port g$port$17626$17Rald) g$r$17628$17Rald)))
         (g$proc$17627$17Rald g$port$17626$17Rald))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$17638$17Rald
     g$peek-char$17693$17Rald
     (case-lambda
       (() (g$peek-char$17638$17Rald (current-input-port)))
       ((g$port$17665$17Rald) (lookahead-char g$port$17665$17Rald))))
   (g$read-char$17639$17Rald
     g$read-char$17694$17Rald
     (case-lambda
       (() (g$read-char$17639$17Rald (current-input-port)))
       ((g$port$17666$17Rald) (get-char g$port$17666$17Rald))))
   (g$write-char$17640$17Rald
     g$write-char$17695$17Rald
     (case-lambda
       ((g$chr$17667$17Rald)
        (g$write-char$17640$17Rald
          g$chr$17667$17Rald
          (current-output-port)))
       ((g$chr$17668$17Rald g$port$17669$17Rald)
        (put-char g$port$17669$17Rald g$chr$17668$17Rald))))
   (g$with-input-from-file$17660$17Rald
     g$with-input-from-file$17696$17Rald
     (case-lambda
       ((g$filename$17670$17Rald g$thunk$17671$17Rald)
        ((case-lambda
           ((g$current-input-port$17674$17Rald g$t$17675$17Rald)
            ((case-lambda
               ((g$swap$17676$17Rald)
                (dynamic-wind
                  g$swap$17676$17Rald
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$17671$17Rald)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$17676$17Rald)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$17677$17Rald)
                    (begin
                      (g$current-input-port$17674$17Rald
                        g$t$17675$17Rald)
                      (set! g$t$17675$17Rald g$t$17677$17Rald))))
                 (g$current-input-port$17674$17Rald)))))))
         current-input-port
         (open-input-file g$filename$17670$17Rald)))))
   (g$with-output-to-file$17661$17Rald
     g$with-output-to-file$17697$17Rald
     (case-lambda
       ((g$filename$17678$17Rald g$thunk$17679$17Rald)
        ((case-lambda
           ((g$current-output-port$17682$17Rald g$t$17683$17Rald)
            ((case-lambda
               ((g$swap$17684$17Rald)
                (dynamic-wind
                  g$swap$17684$17Rald
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$17679$17Rald)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$17684$17Rald)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$17685$17Rald)
                    (begin
                      (g$current-output-port$17682$17Rald
                        g$t$17683$17Rald)
                      (set! g$t$17683$17Rald g$t$17685$17Rald))))
                 (g$current-output-port$17682$17Rald)))))))
         current-output-port
         (open-output-file g$filename$17678$17Rald)))))
   (g$call-with-input-file$17662$17Rald
     g$call-with-input-file$17698$17Rald
     (case-lambda
       ((g$filename$17686$17Rald g$proc$17687$17Rald)
        ((case-lambda
           ((g$p$17688$17Rald)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$17687$17Rald g$p$17688$17Rald)))
              (case-lambda (() (close-input-port g$p$17688$17Rald))))))
         (open-input-file g$filename$17686$17Rald)))))
   (g$call-with-output-file$17663$17Rald
     g$call-with-output-file$17699$17Rald
     (case-lambda
       ((g$filename$17689$17Rald g$proc$17690$17Rald)
        ((case-lambda
           ((g$p$17691$17Rald)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$17690$17Rald g$p$17691$17Rald)))
              (case-lambda (() (close-output-port g$p$17691$17Rald))))))
         (open-output-file g$filename$17689$17Rald)))))
   (g$newline$17664$17Rald
     g$newline$17700$17Rald
     (case-lambda
       (() (g$newline$17664$17Rald (current-output-port)))
       ((g$port$17692$17Rald) (display '"
" g$port$17692$17Rald)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8164$17701$17Rald
     g$8164$17814$17Rald
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8166$17702$17Rald g$8166$17815$17Rald '#f)
   (g$8165$17703$17Rald
     g$8165$17816$17Rald
     (make-record-constructor-descriptor
       g$8164$17701$17Rald
       '#f
       g$8166$17702$17Rald))
   (g$enum?$17706$17Rald
     g$enum?$17817$17Rald
     (record-predicate g$8164$17701$17Rald))
   (g$make-enum$17707$17Rald
     g$make-enum$17818$17Rald
     (record-constructor g$8165$17703$17Rald))
   (g$enum-value$17708$17Rald
     g$enum-value$17819$17Rald
     (record-accessor g$8164$17701$17Rald '0))
   (g$enum-info$17709$17Rald
     g$enum-info$17820$17Rald
     (record-accessor g$8164$17701$17Rald '1))
   (g$8175$17710$17Rald
     g$8175$17821$17Rald
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8177$17711$17Rald g$8177$17822$17Rald '#f)
   (g$8176$17712$17Rald
     g$8176$17823$17Rald
     (make-record-constructor-descriptor
       g$8175$17710$17Rald
       '#f
       g$8177$17711$17Rald))
   (g$enum-universe?$17715$17Rald
     g$enum-universe?$17824$17Rald
     (record-predicate g$8175$17710$17Rald))
   (g$make-enum-universe$17716$17Rald
     g$make-enum-universe$17825$17Rald
     (record-constructor g$8176$17712$17Rald))
   (g$enum-universe-id$17717$17Rald
     g$enum-universe-id$17826$17Rald
     (record-accessor g$8175$17710$17Rald '0))
   (g$enum-universe-symbols$17718$17Rald
     g$enum-universe-symbols$17827$17Rald
     (record-accessor g$8175$17710$17Rald '1))
   (g$enum-universe-mapping$17719$17Rald
     g$enum-universe-mapping$17828$17Rald
     (record-accessor g$8175$17710$17Rald '2))
   (g$enum-universe-value$17720$17Rald
     g$enum-universe-value$17829$17Rald
     (record-accessor g$8175$17710$17Rald '3))
   (g$enum-type=?$17721$17Rald
     g$enum-type=?$17830$17Rald
     (case-lambda
       ((g$enumset1$17743$17Rald g$enumset2$17744$17Rald)
        (eq? (g$enum-universe-id$17717$17Rald
               (g$enum-info$17709$17Rald g$enumset1$17743$17Rald))
             (g$enum-universe-id$17717$17Rald
               (g$enum-info$17709$17Rald g$enumset2$17744$17Rald))))))
   (g$get-symbols$17722$17Rald
     g$get-symbols$17831$17Rald
     (case-lambda
       ((g$enumset$17745$17Rald)
        (g$enum-universe-symbols$17718$17Rald
          (g$enum-info$17709$17Rald g$enumset$17745$17Rald)))))
   (g$get-value$17723$17Rald
     g$get-value$17832$17Rald
     (case-lambda
       ((g$enumset$17746$17Rald g$s$17747$17Rald)
        (g$hashtable-ref$12722$17Rald
          (g$enum-universe-mapping$17719$17Rald
            (g$enum-info$17709$17Rald g$enumset$17746$17Rald))
          g$s$17747$17Rald
          '#f))))
   (g$assert-enum$17724$17Rald
     g$assert-enum$17833$17Rald
     (case-lambda
       ((g$who$17748$17Rald g$enumset$17749$17Rald)
        (if (not (g$enum?$17706$17Rald g$enumset$17749$17Rald))
          (assertion-violation
            g$who$17748$17Rald
            '"not an enumeration"
            g$enumset$17749$17Rald)
          (void)))))
   (g$make-info$17725$17Rald
     g$make-info$17834$17Rald
     (case-lambda
       ((g$symbols$17750$17Rald)
        ((case-lambda
           ((g$ht$17751$17Rald)
            ((letrec ((g$f$17752$17Rald
                        (case-lambda
                          ((g$s$17753$17Rald
                             g$a$17754$17Rald
                             g$mask$17755$17Rald)
                           (if (null? g$s$17753$17Rald)
                             (values
                               (reverse! g$a$17754$17Rald)
                               g$ht$17751$17Rald
                               (- g$mask$17755$17Rald '1))
                             ((case-lambda
                                ((g$n$17756$17Rald)
                                 (if (g$symbol?$12610$17Rald
                                       g$n$17756$17Rald)
                                   (if (g$hashtable-contains?$12725$17Rald
                                         g$ht$17751$17Rald
                                         g$n$17756$17Rald)
                                     (g$f$17752$17Rald
                                       (cdr g$s$17753$17Rald)
                                       g$a$17754$17Rald
                                       g$mask$17755$17Rald)
                                     (begin
                                       (g$hashtable-set!$12723$17Rald
                                         g$ht$17751$17Rald
                                         g$n$17756$17Rald
                                         g$mask$17755$17Rald)
                                       (g$f$17752$17Rald
                                         (cdr g$s$17753$17Rald)
                                         (cons
                                           g$n$17756$17Rald
                                           g$a$17754$17Rald)
                                         (g$bitwise-arithmetic-shift-left$13780$17Rald
                                           g$mask$17755$17Rald
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$17756$17Rald))))
                              (car g$s$17753$17Rald)))))))
               g$f$17752$17Rald)
             g$symbols$17750$17Rald
             '()
             '1)))
         (g$make-eq-hashtable$12719$17Rald)))))
   (g$make-name$17726$17Rald
     g$make-name$17835$17Rald
     (case-lambda
       ((g$symbols$17757$17Rald)
        (string->symbol
          (g$format$17874$17Rald '"~a" g$symbols$17757$17Rald)))))
   (g$make-enumeration$17727$17Rald
     g$make-enumeration$17836$17Rald
     (case-lambda
       ((g$symbols$17758$17Rald)
        (call-with-values
          (case-lambda
            (() (g$make-info$17725$17Rald g$symbols$17758$17Rald)))
          (case-lambda
            ((g$s$17762$17Rald
               g$mapping$17763$17Rald
               g$mask$17764$17Rald)
             ((case-lambda
                ((g$mask$17765$17Rald
                   g$mapping$17766$17Rald
                   g$s$17767$17Rald)
                 (g$make-enum$17707$17Rald
                   g$mask$17765$17Rald
                   (g$make-enum-universe$17716$17Rald
                     (g$make-name$17726$17Rald g$s$17767$17Rald)
                     g$s$17767$17Rald
                     g$mapping$17766$17Rald
                     g$mask$17765$17Rald))))
              g$mask$17764$17Rald
              g$mapping$17763$17Rald
              g$s$17762$17Rald)))))))
   (g$enum-set-universe$17728$17Rald
     g$enum-set-universe$17837$17Rald
     (case-lambda
       ((g$enumset$17768$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-universe
            g$enumset$17768$17Rald)
          ((case-lambda
             ((g$ei$17769$17Rald)
              (g$make-enum$17707$17Rald
                (g$enum-universe-value$17720$17Rald g$ei$17769$17Rald)
                g$ei$17769$17Rald)))
           (g$enum-info$17709$17Rald g$enumset$17768$17Rald))))))
   (g$enum-set-indexer$17729$17Rald
     g$enum-set-indexer$17838$17Rald
     (case-lambda
       ((g$enumset$17770$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-indexer
            g$enumset$17770$17Rald)
          (case-lambda
            ((g$symbol$17771$17Rald)
             (begin
               (if (not (g$symbol?$12610$17Rald g$symbol$17771$17Rald))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$17771$17Rald)
                 (void))
               ((case-lambda
                  ((g$v$17772$17Rald)
                   (if g$v$17772$17Rald
                     (- (bitwise-length g$v$17772$17Rald) '1)
                     '#f)))
                (g$get-value$17723$17Rald
                  g$enumset$17770$17Rald
                  g$symbol$17771$17Rald)))))))))
   (g$enum-set-constructor$17730$17Rald
     g$enum-set-constructor$17839$17Rald
     (case-lambda
       ((g$enumset$17773$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-constructor
            g$enumset$17773$17Rald)
          (case-lambda
            ((g$symbols$17774$17Rald)
             ((letrec ((g$f$17775$17Rald
                         (case-lambda
                           ((g$v$17776$17Rald g$s$17777$17Rald)
                            (if (null? g$s$17777$17Rald)
                              (g$make-enum$17707$17Rald
                                g$v$17776$17Rald
                                (g$enum-info$17709$17Rald
                                  g$enumset$17773$17Rald))
                              ((case-lambda
                                 ((g$n$17778$17Rald)
                                  (if (g$symbol?$12610$17Rald
                                        g$n$17778$17Rald)
                                    ((case-lambda
                                       ((g$v*$17779$17Rald)
                                        (if g$v*$17779$17Rald
                                          (g$f$17775$17Rald
                                            (bitwise-ior
                                              g$v$17776$17Rald
                                              g$v*$17779$17Rald)
                                            (cdr g$s$17777$17Rald))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$17778$17Rald))))
                                     (g$get-value$17723$17Rald
                                       g$enumset$17773$17Rald
                                       g$n$17778$17Rald))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$17778$17Rald))))
                               (car g$s$17777$17Rald)))))))
                g$f$17775$17Rald)
              '0
              g$symbols$17774$17Rald)))))))
   (g$enum-set->list$17731$17Rald
     g$enum-set->list$17840$17Rald
     (case-lambda
       ((g$enumset$17780$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set->list
            g$enumset$17780$17Rald)
          ((case-lambda
             ((g$value$17781$17Rald)
              ((letrec ((g$f$17782$17Rald
                          (case-lambda
                            ((g$s$17783$17Rald g$l$17784$17Rald)
                             (if (null? g$s$17783$17Rald)
                               (reverse! g$l$17784$17Rald)
                               (if (g$zero?$12657$17Rald
                                     (bitwise-and
                                       (g$get-value$17723$17Rald
                                         g$enumset$17780$17Rald
                                         (car g$s$17783$17Rald))
                                       g$value$17781$17Rald))
                                 (g$f$17782$17Rald
                                   (cdr g$s$17783$17Rald)
                                   g$l$17784$17Rald)
                                 (g$f$17782$17Rald
                                   (cdr g$s$17783$17Rald)
                                   (cons
                                     (car g$s$17783$17Rald)
                                     g$l$17784$17Rald))))))))
                 g$f$17782$17Rald)
               (g$get-symbols$17722$17Rald g$enumset$17780$17Rald)
               '())))
           (g$enum-value$17708$17Rald g$enumset$17780$17Rald))))))
   (g$enum-set-member?$17732$17Rald
     g$enum-set-member?$17841$17Rald
     (case-lambda
       ((g$symbol$17785$17Rald g$enumset$17786$17Rald)
        (begin
          (if (not (g$symbol?$12610$17Rald g$symbol$17785$17Rald))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$17785$17Rald)
            (void))
          (g$assert-enum$17724$17Rald
            'enum-set-member?
            g$enumset$17786$17Rald)
          ((case-lambda
             ((g$v$17787$17Rald)
              (if g$v$17787$17Rald
                (not (g$zero?$12657$17Rald
                       (bitwise-and
                         g$v$17787$17Rald
                         (g$enum-value$17708$17Rald
                           g$enumset$17786$17Rald))))
                '#f)))
           (g$get-value$17723$17Rald
             g$enumset$17786$17Rald
             g$symbol$17785$17Rald))))))
   (g$enum-set-subset?$17733$17Rald
     g$enum-set-subset?$17842$17Rald
     (case-lambda
       ((g$enumset1$17788$17Rald g$enumset2$17789$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-subset?
            g$enumset1$17788$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set-subset?
            g$enumset2$17789$17Rald)
          ((case-lambda
             ((g$v1$17790$17Rald g$v2$17791$17Rald)
              (if (g$enum-type=?$17721$17Rald
                    g$enumset1$17788$17Rald
                    g$enumset2$17789$17Rald)
                (= (bitwise-and g$v1$17790$17Rald g$v2$17791$17Rald)
                   g$v1$17790$17Rald)
                ((letrec ((g$f$17792$17Rald
                            (case-lambda
                              ((g$s$17793$17Rald)
                               (if (null? g$s$17793$17Rald)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$17794$17Rald
                                       g$v2*$17795$17Rald)
                                     (if g$v2*$17795$17Rald
                                       ((case-lambda
                                          ((g$has1$17796$17Rald
                                             g$has2$17797$17Rald)
                                           (if (if g$has1$17796$17Rald
                                                 (begin
                                                   '#f
                                                   (not g$has2$17797$17Rald))
                                                 '#f)
                                             '#f
                                             (g$f$17792$17Rald
                                               (cdr g$s$17793$17Rald)))))
                                        (not (g$zero?$12657$17Rald
                                               (bitwise-and
                                                 g$v1$17790$17Rald
                                                 g$v1*$17794$17Rald)))
                                        (not (g$zero?$12657$17Rald
                                               (bitwise-and
                                                 g$v2$17791$17Rald
                                                 g$v2*$17795$17Rald))))
                                       '#f)))
                                  (g$get-value$17723$17Rald
                                    g$enumset1$17788$17Rald
                                    (car g$s$17793$17Rald))
                                  (g$get-value$17723$17Rald
                                    g$enumset2$17789$17Rald
                                    (car g$s$17793$17Rald))))))))
                   g$f$17792$17Rald)
                 (g$get-symbols$17722$17Rald
                   g$enumset1$17788$17Rald)))))
           (g$enum-value$17708$17Rald g$enumset1$17788$17Rald)
           (g$enum-value$17708$17Rald g$enumset2$17789$17Rald))))))
   (g$enum-set=?$17734$17Rald
     g$enum-set=?$17843$17Rald
     (case-lambda
       ((g$enumset1$17798$17Rald g$enumset2$17799$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set=?
            g$enumset1$17798$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set=?
            g$enumset2$17799$17Rald)
          (if (g$enum-set-subset?$17733$17Rald
                g$enumset1$17798$17Rald
                g$enumset2$17799$17Rald)
            (begin
              '#f
              (g$enum-set-subset?$17733$17Rald
                g$enumset2$17799$17Rald
                g$enumset1$17798$17Rald))
            '#f)))))
   (g$enum-set-union$17735$17Rald
     g$enum-set-union$17844$17Rald
     (case-lambda
       ((g$enumset1$17800$17Rald g$enumset2$17801$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-union
            g$enumset1$17800$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set-union
            g$enumset2$17801$17Rald)
          (if (g$enum-type=?$17721$17Rald
                g$enumset1$17800$17Rald
                g$enumset2$17801$17Rald)
            (g$make-enum$17707$17Rald
              (bitwise-ior
                (g$enum-value$17708$17Rald g$enumset1$17800$17Rald)
                (g$enum-value$17708$17Rald g$enumset2$17801$17Rald))
              (g$enum-info$17709$17Rald g$enumset1$17800$17Rald))
            '#f)))))
   (g$enum-set-intersection$17736$17Rald
     g$enum-set-intersection$17845$17Rald
     (case-lambda
       ((g$enumset1$17802$17Rald g$enumset2$17803$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-intersection
            g$enumset1$17802$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set-intersection
            g$enumset2$17803$17Rald)
          (if (g$enum-type=?$17721$17Rald
                g$enumset1$17802$17Rald
                g$enumset2$17803$17Rald)
            (g$make-enum$17707$17Rald
              (bitwise-and
                (g$enum-value$17708$17Rald g$enumset1$17802$17Rald)
                (g$enum-value$17708$17Rald g$enumset2$17803$17Rald))
              (g$enum-info$17709$17Rald g$enumset1$17802$17Rald))
            '#f)))))
   (g$enum-set-difference$17737$17Rald
     g$enum-set-difference$17846$17Rald
     (case-lambda
       ((g$enumset1$17804$17Rald g$enumset2$17805$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-difference
            g$enumset1$17804$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set-difference
            g$enumset2$17805$17Rald)
          (if (g$enum-type=?$17721$17Rald
                g$enumset1$17804$17Rald
                g$enumset2$17805$17Rald)
            (g$make-enum$17707$17Rald
              (bitwise-and
                (g$enum-value$17708$17Rald g$enumset1$17804$17Rald)
                (bitwise-not
                  (g$enum-value$17708$17Rald g$enumset2$17805$17Rald)))
              (g$enum-info$17709$17Rald g$enumset1$17804$17Rald))
            '#f)))))
   (g$enum-set-complement$17738$17Rald
     g$enum-set-complement$17847$17Rald
     (case-lambda
       ((g$enumset$17806$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-complement
            g$enumset$17806$17Rald)
          (g$make-enum$17707$17Rald
            (bitwise-not
              (g$enum-value$17708$17Rald g$enumset$17806$17Rald))
            (g$enum-info$17709$17Rald g$enumset$17806$17Rald))))))
   (g$enum-set-projection$17739$17Rald
     g$enum-set-projection$17848$17Rald
     (case-lambda
       ((g$enumset1$17807$17Rald g$enumset2$17808$17Rald)
        (begin
          (g$assert-enum$17724$17Rald
            'enum-set-projection
            g$enumset1$17807$17Rald)
          (g$assert-enum$17724$17Rald
            'enum-set-projection
            g$enumset2$17808$17Rald)
          ((case-lambda
             ((g$v1$17809$17Rald)
              ((letrec ((g$f$17810$17Rald
                          (case-lambda
                            ((g$s$17811$17Rald g$v$17812$17Rald)
                             (if (null? g$s$17811$17Rald)
                               (g$make-enum$17707$17Rald
                                 g$v$17812$17Rald
                                 (g$enum-info$17709$17Rald
                                   g$enumset2$17808$17Rald))
                               (if (g$zero?$12657$17Rald
                                     (bitwise-and
                                       g$v1$17809$17Rald
                                       (g$get-value$17723$17Rald
                                         g$enumset1$17807$17Rald
                                         (car g$s$17811$17Rald))))
                                 (g$f$17810$17Rald
                                   (cdr g$s$17811$17Rald)
                                   g$v$17812$17Rald)
                                 ((case-lambda
                                    ((g$v2$17813$17Rald)
                                     (if g$v2$17813$17Rald
                                       (g$f$17810$17Rald
                                         (cdr g$s$17811$17Rald)
                                         (bitwise-ior
                                           g$v$17812$17Rald
                                           g$v2$17813$17Rald))
                                       (g$f$17810$17Rald
                                         (cdr g$s$17811$17Rald)
                                         g$v$17812$17Rald))))
                                  (g$get-value$17723$17Rald
                                    g$enumset2$17808$17Rald
                                    (car g$s$17811$17Rald)))))))))
                 g$f$17810$17Rald)
               (g$get-symbols$17722$17Rald g$enumset1$17807$17Rald)
               '0)))
           (g$enum-value$17708$17Rald g$enumset1$17807$17Rald)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$17740$17Rald g$p$17741$17Rald g$wr$17742$17Rald)
       (g$fprintf$17873$17Rald
         g$p$17741$17Rald
         '"#[enum-set ~a]"
         (g$enum-set->list$17731$17Rald g$x$17740$17Rald))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$17849$17Rald
     g$dofmt$17871$17Rald
     (case-lambda
       ((g$p$17853$17Rald g$cntl$17854$17Rald g$args$17855$17Rald)
        ((case-lambda
           ((g$nmax$17856$17Rald)
            ((letrec ((g$loop$17857$17Rald
                        (case-lambda
                          ((g$n$17858$17Rald g$a$17859$17Rald)
                           (if (g$fx<=?$16032$17Rald
                                 g$n$17858$17Rald
                                 g$nmax$17856$17Rald)
                             ((case-lambda
                                ((g$c$17860$17Rald)
                                 (if (if (g$char=?$12671$17Rald
                                           g$c$17860$17Rald
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$16031$17Rald
                                           g$n$17858$17Rald
                                           g$nmax$17856$17Rald))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$17861$17Rald)
                                       (if (eqv? g$t$17861$17Rald '#\a)
                                         (begin
                                           (display
                                             (car g$a$17859$17Rald)
                                             g$p$17853$17Rald)
                                           (g$loop$17857$17Rald
                                             (g$fx+$16017$17Rald
                                               g$n$17858$17Rald
                                               '2)
                                             (cdr g$a$17859$17Rald)))
                                         (if (eqv?
                                               g$t$17861$17Rald
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$17859$17Rald)
                                               g$p$17853$17Rald)
                                             (g$loop$17857$17Rald
                                               (g$fx+$16017$17Rald
                                                 g$n$17858$17Rald
                                                 '2)
                                               (cdr g$a$17859$17Rald)))
                                           (if (eqv?
                                                 g$t$17861$17Rald
                                                 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$17859$17Rald)
                                                   '2)
                                                 g$p$17853$17Rald)
                                               (g$loop$17857$17Rald
                                                 (g$fx+$16017$17Rald
                                                   g$n$17858$17Rald
                                                   '2)
                                                 (cdr g$a$17859$17Rald)))
                                             (if (eqv?
                                                   g$t$17861$17Rald
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$17859$17Rald)
                                                     '8)
                                                   g$p$17853$17Rald)
                                                 (g$loop$17857$17Rald
                                                   (g$fx+$16017$17Rald
                                                     g$n$17858$17Rald
                                                     '2)
                                                   (cdr g$a$17859$17Rald)))
                                               (if (eqv?
                                                     g$t$17861$17Rald
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$17859$17Rald)
                                                       '16)
                                                     g$p$17853$17Rald)
                                                   (g$loop$17857$17Rald
                                                     (g$fx+$16017$17Rald
                                                       g$n$17858$17Rald
                                                       '2)
                                                     (cdr g$a$17859$17Rald)))
                                                 (if (eqv?
                                                       g$t$17861$17Rald
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$17859$17Rald)
                                                         '10)
                                                       g$p$17853$17Rald)
                                                     (g$loop$17857$17Rald
                                                       (g$fx+$16017$17Rald
                                                         g$n$17858$17Rald
                                                         '2)
                                                       (cdr g$a$17859$17Rald)))
                                                   (if (eqv?
                                                         g$t$17861$17Rald
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$17695$17Rald
                                                         '#\~
                                                         g$p$17853$17Rald)
                                                       (g$loop$17857$17Rald
                                                         (g$fx+$16017$17Rald
                                                           g$n$17858$17Rald
                                                           '2)
                                                         g$a$17859$17Rald))
                                                     (begin
                                                       (g$write-char$17695$17Rald
                                                         g$c$17860$17Rald
                                                         g$p$17853$17Rald)
                                                       (g$loop$17857$17Rald
                                                         (g$fx+$16017$17Rald
                                                           g$n$17858$17Rald
                                                           '1)
                                                         g$a$17859$17Rald)))))))))))
                                    (string-ref
                                      g$cntl$17854$17Rald
                                      (g$fx+$16017$17Rald
                                        g$n$17858$17Rald
                                        '1)))
                                   (begin
                                     (g$write-char$17695$17Rald
                                       g$c$17860$17Rald
                                       g$p$17853$17Rald)
                                     (g$loop$17857$17Rald
                                       (g$fx+$16017$17Rald
                                         g$n$17858$17Rald
                                         '1)
                                       g$a$17859$17Rald)))))
                              (string-ref
                                g$cntl$17854$17Rald
                                g$n$17858$17Rald))
                             (void))))))
               g$loop$17857$17Rald)
             '0
             g$args$17855$17Rald)))
         (g$fx-$16019$17Rald (string-length g$cntl$17854$17Rald) '1)))))
   (g$printf$17850$17Rald
     g$printf$17872$17Rald
     (case-lambda
       ((g$control$17862$17Rald . g$args$17863$17Rald)
        (g$dofmt$17849$17Rald
          (current-output-port)
          g$control$17862$17Rald
          g$args$17863$17Rald))))
   (g$fprintf$17851$17Rald
     g$fprintf$17873$17Rald
     (case-lambda
       ((g$p$17864$17Rald g$control$17865$17Rald . g$args$17866$17Rald)
        (g$dofmt$17849$17Rald
          g$p$17864$17Rald
          g$control$17865$17Rald
          g$args$17866$17Rald))))
   (g$format$17852$17Rald
     g$format$17874$17Rald
     (case-lambda
       ((g$control$17867$17Rald . g$args$17868$17Rald)
        (call-with-values
          g$open-string-output-port$17634$17Rald
          (case-lambda
            ((g$p$17869$17Rald g$c$17870$17Rald)
             (begin
               (g$dofmt$17849$17Rald
                 g$p$17869$17Rald
                 g$control$17867$17Rald
                 g$args$17868$17Rald)
               (g$c$17870$17Rald)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$17875$17Rald
     g$make-traced-macro$17878$17Rald
     (case-lambda
       ((g$name$17876$17Rald g$x$17877$17Rald)
        (if (g$procedure?$12612$17Rald g$x$17877$17Rald)
          (make-traced-procedure
            g$name$17876$17Rald
            g$x$17877$17Rald
            g$syntax->datum$23432$17Rald)
          (if (g$variable-transformer?$23253$17Rald g$x$17877$17Rald)
            (g$make-variable-transformer$23251$17Rald
              (make-traced-procedure
                g$name$17876$17Rald
                (g$variable-transformer-procedure$23254$17Rald
                  g$x$17877$17Rald)
                g$syntax->datum$23432$17Rald))
            g$x$17877$17Rald))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$17879$17Rald
     g$library-version-mismatch-warning$18080$17Rald
     (case-lambda
       ((g$name$18052$17Rald
          g$depname$18053$17Rald
          g$filename$18054$17Rald)
        (g$fprintf$17873$17Rald
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$18052$17Rald
          g$depname$18053$17Rald
          g$filename$18054$17Rald))))
   (g$file-locator-resolution-error$17880$17Rald
     g$file-locator-resolution-error$18081$17Rald
     (case-lambda
       ((g$libname$18055$17Rald g$failed-list$18056$17Rald)
        (letrec* ((g$8353$18057$17Rald
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$13287$17Rald
                      'g$8356$17Rald
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8355$18058$17Rald '#f)
                  (g$8354$18059$17Rald
                    (make-record-constructor-descriptor
                      g$8353$18057$17Rald
                      g$&condition-rcd$13288$17Rald
                      g$8355$18058$17Rald))
                  (g$8352$18062$17Rald
                    (record-predicate g$8353$18057$17Rald))
                  (g$make-library-resolution-condition$18063$17Rald
                    (record-constructor g$8354$18059$17Rald))
                  (g$8350$18064$17Rald
                    (record-accessor g$8353$18057$17Rald '0))
                  (g$8351$18065$17Rald
                    (record-accessor g$8353$18057$17Rald '1))
                  (g$library-resolution-condition?$18066$17Rald
                    (condition-predicate g$8353$18057$17Rald))
                  (g$condition-library$18067$17Rald
                    (condition-accessor
                      g$8353$18057$17Rald
                      g$8350$18064$17Rald))
                  (g$condition-files$18068$17Rald
                    (condition-accessor
                      g$8353$18057$17Rald
                      g$8351$18065$17Rald)))
          (raise
            (condition
              (g$make-error$13319$17Rald)
              (g$make-who-condition$13353$17Rald 'expander)
              (g$make-message-condition$13293$17Rald
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$18063$17Rald
                g$libname$18055$17Rald
                g$failed-list$18056$17Rald)))))))
   (g$read-library-source-file$17881$17Rald
     g$read-library-source-file$18082$17Rald
     (case-lambda
       ((g$file-name$18069$17Rald)
        (g$with-input-from-file$17696$17Rald
          g$file-name$18069$17Rald
          read-annotated))))
   (g$make-parameter$17882$17Rald
     g$make-parameter$18083$17Rald
     (case-lambda
       ((g$x$18070$17Rald)
        (g$make-parameter$17882$17Rald
          g$x$18070$17Rald
          (case-lambda ((g$x$18071$17Rald) g$x$18071$17Rald))))
       ((g$x$18072$17Rald g$fender$18073$17Rald)
        (begin
          (if (not (g$procedure?$12612$17Rald g$fender$18073$17Rald))
            (g$assertion-error$23425$17Rald
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$18074$17Rald)
              (case-lambda
                (() g$x$18074$17Rald)
                ((g$v$18075$17Rald)
                 (set! g$x$18074$17Rald
                   (g$fender$18073$17Rald g$v$18075$17Rald))))))
           (g$fender$18073$17Rald g$x$18072$17Rald))))))
   (g$file-options-constructor$18048$17Rald
     g$file-options-constructor$18084$17Rald
     (g$make-parameter$17882$17Rald '#f))
   (g$file-options-spec$18049$17Rald
     g$file-options-spec$18085$17Rald
     (case-lambda
       ((g$x$18076$17Rald)
        ((g$file-options-constructor$18048$17Rald) g$x$18076$17Rald))))
   (g$set-label-binding!$18050$17Rald
     g$set-label-binding!$18086$17Rald
     (case-lambda
       ((g$label$18077$17Rald g$binding$18078$17Rald)
        (set-symbol-value!
          g$label$18077$17Rald
          g$binding$18078$17Rald))))
   (g$label-binding$18051$17Rald
     g$label-binding$18087$17Rald
     (case-lambda
       ((g$label$18079$17Rald)
        (if (symbol-bound? g$label$18079$17Rald)
          (begin '#f (symbol-value g$label$18079$17Rald))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$18088$17Rald
     g$genwrite:newline-str$18281$17Rald
     (make-string '1 '#\newline))
   (g$symbol->string$18089$17Rald
     g$symbol->string$18282$17Rald
     (case-lambda
       ((g$s$18101$17Rald)
        (symbol->string
          (if (g$pretty-gensyms$18098$17Rald)
            (ungensym g$s$18101$17Rald)
            g$s$18101$17Rald)))))
   (g$read-macro-body$18090$17Rald
     g$read-macro-body$18283$17Rald
     (case-lambda
       ((g$l$18102$17Rald) (g$cadr$12628$17Rald g$l$18102$17Rald))))
   (g$read-macro-prefix$18091$17Rald
     g$read-macro-prefix$18284$17Rald
     (case-lambda
       ((g$l$18103$17Rald)
        ((case-lambda
           ((g$head$18104$17Rald g$tail$18105$17Rald)
            ((case-lambda
               ((g$t$18106$17Rald)
                (if (eqv? g$t$18106$17Rald 'syntax)
                  '"#'"
                  (if (eqv? g$t$18106$17Rald 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$18106$17Rald 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$18106$17Rald 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$18106$17Rald 'quote)
                          '"'"
                          (if (eqv? g$t$18106$17Rald 'quasiquote)
                            '"`"
                            (if (eqv? g$t$18106$17Rald 'unquote)
                              '","
                              (if (eqv?
                                    g$t$18106$17Rald
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$18104$17Rald)))
         (car g$l$18103$17Rald)
         (cdr g$l$18103$17Rald)))))
   (g$length1?$18092$17Rald
     g$length1?$18285$17Rald
     (case-lambda
       ((g$l$18107$17Rald)
        (if (pair? g$l$18107$17Rald)
          (begin '#f (null? (cdr g$l$18107$17Rald)))
          '#f))))
   (g$read-macro?$18093$17Rald
     g$read-macro?$18286$17Rald
     (case-lambda
       ((g$l$18108$17Rald)
        ((case-lambda
           ((g$head$18109$17Rald g$tail$18110$17Rald)
            ((case-lambda
               ((g$t$18111$17Rald)
                (if (g$memv$11828$17Rald
                      g$t$18111$17Rald
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$18092$17Rald g$tail$18110$17Rald)
                  '#f)))
             g$head$18109$17Rald)))
         (car g$l$18108$17Rald)
         (cdr g$l$18108$17Rald)))))
   (g$generic-write$18094$17Rald
     g$generic-write$18287$17Rald
     (case-lambda
       ((g$obj$18112$17Rald
          g$display?$18113$17Rald
          g$width$18114$17Rald
          g$output$18115$17Rald)
        (letrec* ((g$out$18116$17Rald
                    (case-lambda
                      ((g$str$18265$17Rald g$col$18266$17Rald)
                       (if g$col$18266$17Rald
                         (if (g$output$18115$17Rald g$str$18265$17Rald)
                           (begin
                             '#f
                             (g$fx+$16017$17Rald
                               g$col$18266$17Rald
                               (string-length g$str$18265$17Rald)))
                           '#f)
                         '#f))))
                  (g$wr$18117$17Rald
                    (case-lambda
                      ((g$obj$18248$17Rald g$col$18249$17Rald)
                       (letrec* ((g$wr-expr$18250$17Rald
                                   (case-lambda
                                     ((g$expr$18263$17Rald
                                        g$col$18264$17Rald)
                                      (if (g$read-macro?$18093$17Rald
                                            g$expr$18263$17Rald)
                                        (g$wr$18117$17Rald
                                          (g$read-macro-body$18090$17Rald
                                            g$expr$18263$17Rald)
                                          (g$out$18116$17Rald
                                            (g$read-macro-prefix$18091$17Rald
                                              g$expr$18263$17Rald)
                                            g$col$18264$17Rald))
                                        (g$wr-lst$18251$17Rald
                                          g$expr$18263$17Rald
                                          g$col$18264$17Rald)))))
                                 (g$wr-lst$18251$17Rald
                                   (case-lambda
                                     ((g$l$18258$17Rald
                                        g$col$18259$17Rald)
                                      (if (pair? g$l$18258$17Rald)
                                        ((letrec ((g$loop$18260$17Rald
                                                    (case-lambda
                                                      ((g$l$18261$17Rald
                                                         g$col$18262$17Rald)
                                                       (if (not g$col$18262$17Rald)
                                                         g$col$18262$17Rald
                                                         (if (pair?
                                                               g$l$18261$17Rald)
                                                           (g$loop$18260$17Rald
                                                             (cdr g$l$18261$17Rald)
                                                             (g$wr$18117$17Rald
                                                               (car g$l$18261$17Rald)
                                                               (g$out$18116$17Rald
                                                                 '" "
                                                                 g$col$18262$17Rald)))
                                                           (if (null?
                                                                 g$l$18261$17Rald)
                                                             (g$out$18116$17Rald
                                                               '")"
                                                               g$col$18262$17Rald)
                                                             (g$out$18116$17Rald
                                                               '")"
                                                               (g$wr$18117$17Rald
                                                                 g$l$18261$17Rald
                                                                 (g$out$18116$17Rald
                                                                   '" . "
                                                                   g$col$18262$17Rald))))))))))
                                           g$loop$18260$17Rald)
                                         (cdr g$l$18258$17Rald)
                                         (if g$col$18259$17Rald
                                           (begin
                                             '#f
                                             (g$wr$18117$17Rald
                                               (car g$l$18258$17Rald)
                                               (g$out$18116$17Rald
                                                 '"("
                                                 g$col$18259$17Rald)))
                                           '#f))
                                        (g$out$18116$17Rald
                                          '"()"
                                          g$col$18259$17Rald))))))
                         (if (pair? g$obj$18248$17Rald)
                           (g$wr-expr$18250$17Rald
                             g$obj$18248$17Rald
                             g$col$18249$17Rald)
                           (if (null? g$obj$18248$17Rald)
                             (g$wr-lst$18251$17Rald
                               g$obj$18248$17Rald
                               g$col$18249$17Rald)
                             (if (g$vector?$12608$17Rald
                                   g$obj$18248$17Rald)
                               (g$wr-lst$18251$17Rald
                                 (vector->list g$obj$18248$17Rald)
                                 (g$out$18116$17Rald
                                   '"#"
                                   g$col$18249$17Rald))
                               (if (g$boolean?$12611$17Rald
                                     g$obj$18248$17Rald)
                                 (g$out$18116$17Rald
                                   (if g$obj$18248$17Rald '"#t" '"#f")
                                   g$col$18249$17Rald)
                                 (if (number? g$obj$18248$17Rald)
                                   (g$out$18116$17Rald
                                     (number->string g$obj$18248$17Rald)
                                     g$col$18249$17Rald)
                                   (if (g$symbol?$12610$17Rald
                                         g$obj$18248$17Rald)
                                     (g$out$18116$17Rald
                                       (g$symbol->string$18089$17Rald
                                         g$obj$18248$17Rald)
                                       g$col$18249$17Rald)
                                     (if (string? g$obj$18248$17Rald)
                                       (if g$display?$18113$17Rald
                                         (g$out$18116$17Rald
                                           g$obj$18248$17Rald
                                           g$col$18249$17Rald)
                                         ((letrec ((g$loop$18252$17Rald
                                                     (case-lambda
                                                       ((g$i$18253$17Rald
                                                          g$j$18254$17Rald
                                                          g$col$18255$17Rald)
                                                        (if (if g$col$18255$17Rald
                                                              (begin
                                                                '#f
                                                                (g$fx<?$16031$17Rald
                                                                  g$j$18254$17Rald
                                                                  (string-length
                                                                    g$obj$18248$17Rald)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$18256$17Rald)
                                                              (if ((case-lambda
                                                                     ((g$t$18257$17Rald)
                                                                      (if g$t$18257$17Rald
                                                                        g$t$18257$17Rald
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12671$17Rald
                                                                            g$c$18256$17Rald
                                                                            '#\")))))
                                                                   (g$char=?$12671$17Rald
                                                                     g$c$18256$17Rald
                                                                     '#\\))
                                                                (g$loop$18252$17Rald
                                                                  g$j$18254$17Rald
                                                                  (g$fx+$16017$17Rald
                                                                    g$j$18254$17Rald
                                                                    '1)
                                                                  (g$out$18116$17Rald
                                                                    '"\\"
                                                                    (g$out$18116$17Rald
                                                                      (substring
                                                                        g$obj$18248$17Rald
                                                                        g$i$18253$17Rald
                                                                        g$j$18254$17Rald)
                                                                      g$col$18255$17Rald)))
                                                                (g$loop$18252$17Rald
                                                                  g$i$18253$17Rald
                                                                  (g$fx+$16017$17Rald
                                                                    g$j$18254$17Rald
                                                                    '1)
                                                                  g$col$18255$17Rald))))
                                                           (string-ref
                                                             g$obj$18248$17Rald
                                                             g$j$18254$17Rald))
                                                          (g$out$18116$17Rald
                                                            '"\""
                                                            (g$out$18116$17Rald
                                                              (substring
                                                                g$obj$18248$17Rald
                                                                g$i$18253$17Rald
                                                                g$j$18254$17Rald)
                                                              g$col$18255$17Rald)))))))
                                            g$loop$18252$17Rald)
                                          '0
                                          '0
                                          (g$out$18116$17Rald
                                            '"\""
                                            g$col$18249$17Rald)))
                                       (g$out$18116$17Rald
                                         (g$format$17874$17Rald
                                           (if g$display?$18113$17Rald
                                             '"~a"
                                             '"~s")
                                           g$obj$18248$17Rald)
                                         g$col$18249$17Rald))))))))))))
                  (g$pp$18118$17Rald
                    (case-lambda
                      ((g$obj$18119$17Rald g$col$18120$17Rald)
                       (letrec* ((g$spaces$18121$17Rald
                                   (case-lambda
                                     ((g$n$18246$17Rald
                                        g$col$18247$17Rald)
                                      (if (g$fx>?$16033$17Rald
                                            g$n$18246$17Rald
                                            '0)
                                        (if (g$fx>?$16033$17Rald
                                              g$n$18246$17Rald
                                              '7)
                                          (g$spaces$18121$17Rald
                                            (g$fx-$16019$17Rald
                                              g$n$18246$17Rald
                                              '8)
                                            (g$out$18116$17Rald
                                              '"        "
                                              g$col$18247$17Rald))
                                          (g$out$18116$17Rald
                                            (substring
                                              '"        "
                                              '0
                                              g$n$18246$17Rald)
                                            g$col$18247$17Rald))
                                        g$col$18247$17Rald))))
                                 (g$indent$18122$17Rald
                                   (case-lambda
                                     ((g$to$18244$17Rald
                                        g$col$18245$17Rald)
                                      (if g$col$18245$17Rald
                                        (begin
                                          '#f
                                          (if (g$fx<?$16031$17Rald
                                                g$to$18244$17Rald
                                                g$col$18245$17Rald)
                                            (if (g$out$18116$17Rald
                                                  g$genwrite:newline-str$18088$17Rald
                                                  g$col$18245$17Rald)
                                              (begin
                                                '#f
                                                (g$spaces$18121$17Rald
                                                  g$to$18244$17Rald
                                                  '0))
                                              '#f)
                                            (g$spaces$18121$17Rald
                                              (g$fx-$16019$17Rald
                                                g$to$18244$17Rald
                                                g$col$18245$17Rald)
                                              g$col$18245$17Rald)))
                                        '#f))))
                                 (g$pr$18123$17Rald
                                   (case-lambda
                                     ((g$obj$18236$17Rald
                                        g$col$18237$17Rald
                                        g$extra$18238$17Rald
                                        g$pp-pair$18239$17Rald)
                                      (if ((case-lambda
                                             ((g$t$18240$17Rald)
                                              (if g$t$18240$17Rald
                                                g$t$18240$17Rald
                                                (begin
                                                  '#f
                                                  (g$vector?$12608$17Rald
                                                    g$obj$18236$17Rald)))))
                                           (pair? g$obj$18236$17Rald))
                                        ((case-lambda
                                           ((g$result$18241$17Rald
                                              g$left$18242$17Rald)
                                            (begin
                                              (g$generic-write$18094$17Rald
                                                g$obj$18236$17Rald
                                                g$display?$18113$17Rald
                                                '#f
                                                (case-lambda
                                                  ((g$str$18243$17Rald)
                                                   (begin
                                                     (set! g$result$18241$17Rald
                                                       (cons
                                                         g$str$18243$17Rald
                                                         g$result$18241$17Rald))
                                                     (set! g$left$18242$17Rald
                                                       (g$fx-$16019$17Rald
                                                         g$left$18242$17Rald
                                                         (string-length
                                                           g$str$18243$17Rald)))
                                                     (g$fx>?$16033$17Rald
                                                       g$left$18242$17Rald
                                                       '0)))))
                                              (if (g$fx>?$16033$17Rald
                                                    g$left$18242$17Rald
                                                    '0)
                                                (g$out$18116$17Rald
                                                  (g$reverse-string-append$18099$17Rald
                                                    g$result$18241$17Rald)
                                                  g$col$18237$17Rald)
                                                (if (pair?
                                                      g$obj$18236$17Rald)
                                                  (g$pp-pair$18239$17Rald
                                                    g$obj$18236$17Rald
                                                    g$col$18237$17Rald
                                                    g$extra$18238$17Rald)
                                                  (g$pp-list$18126$17Rald
                                                    (vector->list
                                                      g$obj$18236$17Rald)
                                                    (g$out$18116$17Rald
                                                      '"#"
                                                      g$col$18237$17Rald)
                                                    g$extra$18238$17Rald
                                                    g$pp-expr$18124$17Rald))))))
                                         '()
                                         (g$min$12661$17Rald
                                           (g$fx+$16017$17Rald
                                             (g$fx-$16019$17Rald
                                               (g$fx-$16019$17Rald
                                                 g$width$18114$17Rald
                                                 g$col$18237$17Rald)
                                               g$extra$18238$17Rald)
                                             '1)
                                           (g$pretty-width$18095$17Rald)))
                                        (g$wr$18117$17Rald
                                          g$obj$18236$17Rald
                                          g$col$18237$17Rald)))))
                                 (g$pp-expr$18124$17Rald
                                   (case-lambda
                                     ((g$expr$18231$17Rald
                                        g$col$18232$17Rald
                                        g$extra$18233$17Rald)
                                      (if (g$read-macro?$18093$17Rald
                                            g$expr$18231$17Rald)
                                        (g$pr$18123$17Rald
                                          (g$read-macro-body$18090$17Rald
                                            g$expr$18231$17Rald)
                                          (g$out$18116$17Rald
                                            (g$read-macro-prefix$18091$17Rald
                                              g$expr$18231$17Rald)
                                            g$col$18232$17Rald)
                                          g$extra$18233$17Rald
                                          g$pp-expr$18124$17Rald)
                                        ((case-lambda
                                           ((g$head$18234$17Rald)
                                            (if (g$symbol?$12610$17Rald
                                                  g$head$18234$17Rald)
                                              ((case-lambda
                                                 ((g$proc$18235$17Rald)
                                                  (if g$proc$18235$17Rald
                                                    (g$proc$18235$17Rald
                                                      g$expr$18231$17Rald
                                                      g$col$18232$17Rald
                                                      g$extra$18233$17Rald)
                                                    (if (g$fx>?$16033$17Rald
                                                          (string-length
                                                            (g$symbol->string$18089$17Rald
                                                              g$head$18234$17Rald))
                                                          (g$max-call-head-width$18097$17Rald))
                                                      (g$pp-general$18128$17Rald
                                                        g$expr$18231$17Rald
                                                        g$col$18232$17Rald
                                                        g$extra$18233$17Rald
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$18124$17Rald)
                                                      (g$pp-call$18125$17Rald
                                                        g$expr$18231$17Rald
                                                        g$col$18232$17Rald
                                                        g$extra$18233$17Rald
                                                        g$pp-expr$18124$17Rald)))))
                                               (g$style$18140$17Rald
                                                 g$head$18234$17Rald))
                                              (g$pp-list$18126$17Rald
                                                g$expr$18231$17Rald
                                                g$col$18232$17Rald
                                                g$extra$18233$17Rald
                                                g$pp-expr$18124$17Rald))))
                                         (car g$expr$18231$17Rald))))))
                                 (g$pp-call$18125$17Rald
                                   (case-lambda
                                     ((g$expr$18226$17Rald
                                        g$col$18227$17Rald
                                        g$extra$18228$17Rald
                                        g$pp-item$18229$17Rald)
                                      ((case-lambda
                                         ((g$col*$18230$17Rald)
                                          (if g$col$18227$17Rald
                                            (begin
                                              '#f
                                              (g$pp-down$18127$17Rald
                                                (cdr g$expr$18226$17Rald)
                                                g$col*$18230$17Rald
                                                (g$fx+$16017$17Rald
                                                  g$col*$18230$17Rald
                                                  '1)
                                                g$extra$18228$17Rald
                                                g$pp-item$18229$17Rald))
                                            '#f)))
                                       (g$wr$18117$17Rald
                                         (car g$expr$18226$17Rald)
                                         (g$out$18116$17Rald
                                           '"("
                                           g$col$18227$17Rald))))))
                                 (g$pp-list$18126$17Rald
                                   (case-lambda
                                     ((g$l$18221$17Rald
                                        g$col$18222$17Rald
                                        g$extra$18223$17Rald
                                        g$pp-item$18224$17Rald)
                                      ((case-lambda
                                         ((g$col$18225$17Rald)
                                          (g$pp-down$18127$17Rald
                                            g$l$18221$17Rald
                                            g$col$18225$17Rald
                                            g$col$18225$17Rald
                                            g$extra$18223$17Rald
                                            g$pp-item$18224$17Rald)))
                                       (g$out$18116$17Rald
                                         '"("
                                         g$col$18222$17Rald)))))
                                 (g$pp-down$18127$17Rald
                                   (case-lambda
                                     ((g$l$18211$17Rald
                                        g$col1$18212$17Rald
                                        g$col2$18213$17Rald
                                        g$extra$18214$17Rald
                                        g$pp-item$18215$17Rald)
                                      ((letrec ((g$loop$18216$17Rald
                                                  (case-lambda
                                                    ((g$l$18217$17Rald
                                                       g$col$18218$17Rald)
                                                     (if g$col$18218$17Rald
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$18217$17Rald)
                                                           ((case-lambda
                                                              ((g$rest$18219$17Rald)
                                                               ((case-lambda
                                                                  ((g$extra$18220$17Rald)
                                                                   (g$loop$18216$17Rald
                                                                     g$rest$18219$17Rald
                                                                     (g$pr$18123$17Rald
                                                                       (car g$l$18217$17Rald)
                                                                       (g$indent$18122$17Rald
                                                                         g$col2$18213$17Rald
                                                                         g$col$18218$17Rald)
                                                                       g$extra$18220$17Rald
                                                                       g$pp-item$18215$17Rald))))
                                                                (if (null?
                                                                      g$rest$18219$17Rald)
                                                                  (g$fx+$16017$17Rald
                                                                    g$extra$18214$17Rald
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$18217$17Rald))
                                                           (if (null?
                                                                 g$l$18217$17Rald)
                                                             (g$out$18116$17Rald
                                                               '")"
                                                               g$col$18218$17Rald)
                                                             (g$out$18116$17Rald
                                                               '")"
                                                               (g$pr$18123$17Rald
                                                                 g$l$18217$17Rald
                                                                 (g$indent$18122$17Rald
                                                                   g$col2$18213$17Rald
                                                                   (g$out$18116$17Rald
                                                                     '"."
                                                                     (g$indent$18122$17Rald
                                                                       g$col2$18213$17Rald
                                                                       g$col$18218$17Rald)))
                                                                 (g$fx+$16017$17Rald
                                                                   g$extra$18214$17Rald
                                                                   '1)
                                                                 g$pp-item$18215$17Rald)))))
                                                       '#f)))))
                                         g$loop$18216$17Rald)
                                       g$l$18211$17Rald
                                       g$col1$18212$17Rald))))
                                 (g$pp-general$18128$17Rald
                                   (case-lambda
                                     ((g$expr$18178$17Rald
                                        g$col$18179$17Rald
                                        g$extra$18180$17Rald
                                        g$named?$18181$17Rald
                                        g$pp-1$18182$17Rald
                                        g$pp-2$18183$17Rald
                                        g$pp-3$18184$17Rald)
                                      (letrec* ((g$tail1$18185$17Rald
                                                  (case-lambda
                                                    ((g$rest$18204$17Rald
                                                       g$col1$18205$17Rald
                                                       g$col2$18206$17Rald
                                                       g$col3$18207$17Rald)
                                                     (if (if g$pp-1$18182$17Rald
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18204$17Rald))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18208$17Rald)
                                                           ((case-lambda
                                                              ((g$rest$18209$17Rald)
                                                               ((case-lambda
                                                                  ((g$extra$18210$17Rald)
                                                                   (g$tail2$18186$17Rald
                                                                     g$rest$18209$17Rald
                                                                     g$col1$18205$17Rald
                                                                     (g$pr$18123$17Rald
                                                                       g$val1$18208$17Rald
                                                                       (g$indent$18122$17Rald
                                                                         g$col3$18207$17Rald
                                                                         g$col2$18206$17Rald)
                                                                       g$extra$18210$17Rald
                                                                       g$pp-1$18182$17Rald)
                                                                     g$col3$18207$17Rald)))
                                                                (if (null?
                                                                      g$rest$18209$17Rald)
                                                                  (g$fx+$16017$17Rald
                                                                    g$extra$18180$17Rald
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18204$17Rald))))
                                                        (car g$rest$18204$17Rald))
                                                       (g$tail2$18186$17Rald
                                                         g$rest$18204$17Rald
                                                         g$col1$18205$17Rald
                                                         g$col2$18206$17Rald
                                                         g$col3$18207$17Rald)))))
                                                (g$tail2$18186$17Rald
                                                  (case-lambda
                                                    ((g$rest$18197$17Rald
                                                       g$col1$18198$17Rald
                                                       g$col2$18199$17Rald
                                                       g$col3$18200$17Rald)
                                                     (if (if g$pp-2$18183$17Rald
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18197$17Rald))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18201$17Rald)
                                                           ((case-lambda
                                                              ((g$rest$18202$17Rald)
                                                               ((case-lambda
                                                                  ((g$extra$18203$17Rald)
                                                                   (g$tail3$18187$17Rald
                                                                     g$rest$18202$17Rald
                                                                     g$col1$18198$17Rald
                                                                     (g$pr$18123$17Rald
                                                                       g$val1$18201$17Rald
                                                                       (g$indent$18122$17Rald
                                                                         g$col3$18200$17Rald
                                                                         g$col2$18199$17Rald)
                                                                       g$extra$18203$17Rald
                                                                       g$pp-2$18183$17Rald))))
                                                                (if (null?
                                                                      g$rest$18202$17Rald)
                                                                  (g$fx+$16017$17Rald
                                                                    g$extra$18180$17Rald
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18197$17Rald))))
                                                        (car g$rest$18197$17Rald))
                                                       (g$tail3$18187$17Rald
                                                         g$rest$18197$17Rald
                                                         g$col1$18198$17Rald
                                                         g$col2$18199$17Rald)))))
                                                (g$tail3$18187$17Rald
                                                  (case-lambda
                                                    ((g$rest$18194$17Rald
                                                       g$col1$18195$17Rald
                                                       g$col2$18196$17Rald)
                                                     (g$pp-down$18127$17Rald
                                                       g$rest$18194$17Rald
                                                       g$col2$18196$17Rald
                                                       g$col1$18195$17Rald
                                                       g$extra$18180$17Rald
                                                       g$pp-3$18184$17Rald)))))
                                        ((case-lambda
                                           ((g$head$18188$17Rald)
                                            ((case-lambda
                                               ((g$rest$18189$17Rald)
                                                ((case-lambda
                                                   ((g$col*$18190$17Rald)
                                                    (if (if g$named?$18181$17Rald
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$18189$17Rald))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$18191$17Rald)
                                                          ((case-lambda
                                                             ((g$rest$18192$17Rald)
                                                              ((case-lambda
                                                                 ((g$col**$18193$17Rald)
                                                                  (g$tail1$18185$17Rald
                                                                    g$rest$18192$17Rald
                                                                    (g$fx+$16017$17Rald
                                                                      g$col$18179$17Rald
                                                                      (g$indent-general$18096$17Rald))
                                                                    g$col**$18193$17Rald
                                                                    (g$fx+$16017$17Rald
                                                                      g$col**$18193$17Rald
                                                                      '1))))
                                                               (g$wr$18117$17Rald
                                                                 g$name$18191$17Rald
                                                                 (g$out$18116$17Rald
                                                                   '" "
                                                                   g$col*$18190$17Rald)))))
                                                           (cdr g$rest$18189$17Rald))))
                                                       (car g$rest$18189$17Rald))
                                                      (g$tail1$18185$17Rald
                                                        g$rest$18189$17Rald
                                                        (g$fx+$16017$17Rald
                                                          g$col$18179$17Rald
                                                          (g$indent-general$18096$17Rald))
                                                        g$col*$18190$17Rald
                                                        (g$fx+$16017$17Rald
                                                          g$col*$18190$17Rald
                                                          '1)))))
                                                 (g$wr$18117$17Rald
                                                   g$head$18188$17Rald
                                                   (g$out$18116$17Rald
                                                     '"("
                                                     g$col$18179$17Rald)))))
                                             (cdr g$expr$18178$17Rald))))
                                         (car g$expr$18178$17Rald))))))
                                 (g$pp-expr-list$18129$17Rald
                                   (case-lambda
                                     ((g$l$18175$17Rald
                                        g$col$18176$17Rald
                                        g$extra$18177$17Rald)
                                      (g$pp-list$18126$17Rald
                                        g$l$18175$17Rald
                                        g$col$18176$17Rald
                                        g$extra$18177$17Rald
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-SYNTAX-CASE$18130$17Rald
                                   (case-lambda
                                     ((g$expr$18172$17Rald
                                        g$col$18173$17Rald
                                        g$extra$18174$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18172$17Rald
                                        g$col$18173$17Rald
                                        g$extra$18174$17Rald
                                        '#t
                                        g$pp-expr-list$18129$17Rald
                                        '#f
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-LAMBDA$18131$17Rald
                                   (case-lambda
                                     ((g$expr$18169$17Rald
                                        g$col$18170$17Rald
                                        g$extra$18171$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18169$17Rald
                                        g$col$18170$17Rald
                                        g$extra$18171$17Rald
                                        '#f
                                        g$pp-expr-list$18129$17Rald
                                        '#f
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-IF$18132$17Rald
                                   (case-lambda
                                     ((g$expr$18166$17Rald
                                        g$col$18167$17Rald
                                        g$extra$18168$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18166$17Rald
                                        g$col$18167$17Rald
                                        g$extra$18168$17Rald
                                        '#f
                                        g$pp-expr$18124$17Rald
                                        '#f
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-COND$18133$17Rald
                                   (case-lambda
                                     ((g$expr$18163$17Rald
                                        g$col$18164$17Rald
                                        g$extra$18165$17Rald)
                                      (g$pp-call$18125$17Rald
                                        g$expr$18163$17Rald
                                        g$col$18164$17Rald
                                        g$extra$18165$17Rald
                                        g$pp-expr-list$18129$17Rald))))
                                 (g$pp-CASE$18134$17Rald
                                   (case-lambda
                                     ((g$expr$18160$17Rald
                                        g$col$18161$17Rald
                                        g$extra$18162$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18160$17Rald
                                        g$col$18161$17Rald
                                        g$extra$18162$17Rald
                                        '#f
                                        g$pp-expr$18124$17Rald
                                        '#f
                                        g$pp-expr-list$18129$17Rald))))
                                 (g$pp-CASE-LAMBDA$18135$17Rald
                                   (case-lambda
                                     ((g$expr$18157$17Rald
                                        g$col$18158$17Rald
                                        g$extra$18159$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18157$17Rald
                                        g$col$18158$17Rald
                                        g$extra$18159$17Rald
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$18129$17Rald))))
                                 (g$pp-AND$18136$17Rald
                                   (case-lambda
                                     ((g$expr$18154$17Rald
                                        g$col$18155$17Rald
                                        g$extra$18156$17Rald)
                                      (g$pp-call$18125$17Rald
                                        g$expr$18154$17Rald
                                        g$col$18155$17Rald
                                        g$extra$18156$17Rald
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-LET$18137$17Rald
                                   (case-lambda
                                     ((g$expr$18149$17Rald
                                        g$col$18150$17Rald
                                        g$extra$18151$17Rald)
                                      ((case-lambda
                                         ((g$rest$18152$17Rald)
                                          ((case-lambda
                                             ((g$named?$18153$17Rald)
                                              (g$pp-general$18128$17Rald
                                                g$expr$18149$17Rald
                                                g$col$18150$17Rald
                                                g$extra$18151$17Rald
                                                g$named?$18153$17Rald
                                                g$pp-expr-list$18129$17Rald
                                                '#f
                                                g$pp-expr$18124$17Rald)))
                                           (if (pair?
                                                 g$rest$18152$17Rald)
                                             (begin
                                               '#f
                                               (g$symbol?$12610$17Rald
                                                 (car g$rest$18152$17Rald)))
                                             '#f))))
                                       (cdr g$expr$18149$17Rald)))))
                                 (g$pp-BEGIN$18138$17Rald
                                   (case-lambda
                                     ((g$expr$18146$17Rald
                                        g$col$18147$17Rald
                                        g$extra$18148$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18146$17Rald
                                        g$col$18147$17Rald
                                        g$extra$18148$17Rald
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$18124$17Rald))))
                                 (g$pp-DO$18139$17Rald
                                   (case-lambda
                                     ((g$expr$18143$17Rald
                                        g$col$18144$17Rald
                                        g$extra$18145$17Rald)
                                      (g$pp-general$18128$17Rald
                                        g$expr$18143$17Rald
                                        g$col$18144$17Rald
                                        g$extra$18145$17Rald
                                        '#f
                                        g$pp-expr-list$18129$17Rald
                                        g$pp-expr-list$18129$17Rald
                                        g$pp-expr$18124$17Rald))))
                                 (g$style$18140$17Rald
                                   (case-lambda
                                     ((g$head$18141$17Rald)
                                      ((case-lambda
                                         ((g$t$18142$17Rald)
                                          (if (g$memv$11828$17Rald
                                                g$t$18142$17Rald
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$18131$17Rald
                                            (if (eqv?
                                                  g$t$18142$17Rald
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$18130$17Rald
                                              (if (g$memv$11828$17Rald
                                                    g$t$18142$17Rald
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$18132$17Rald
                                                (if (eqv?
                                                      g$t$18142$17Rald
                                                      'cond)
                                                  g$pp-COND$18133$17Rald
                                                  (if (eqv?
                                                        g$t$18142$17Rald
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$18135$17Rald
                                                    (if (eqv?
                                                          g$t$18142$17Rald
                                                          'case)
                                                      g$pp-CASE$18134$17Rald
                                                      (if (g$memv$11828$17Rald
                                                            g$t$18142$17Rald
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$18136$17Rald
                                                        (if (eqv?
                                                              g$t$18142$17Rald
                                                              'let)
                                                          g$pp-LET$18137$17Rald
                                                          (if (eqv?
                                                                g$t$18142$17Rald
                                                                'begin)
                                                            g$pp-BEGIN$18138$17Rald
                                                            (if (eqv?
                                                                  g$t$18142$17Rald
                                                                  'do)
                                                              g$pp-DO$18139$17Rald
                                                              '#f))))))))))))
                                       g$head$18141$17Rald)))))
                         (g$pr$18123$17Rald
                           g$obj$18119$17Rald
                           g$col$18120$17Rald
                           '0
                           g$pp-expr$18124$17Rald))))))
          (if g$width$18114$17Rald
            (g$out$18116$17Rald
              g$genwrite:newline-str$18088$17Rald
              (g$pp$18118$17Rald g$obj$18112$17Rald '0))
            (g$wr$18117$17Rald g$obj$18112$17Rald '0))))))
   (g$pretty-width$18095$17Rald
     g$pretty-width$18288$17Rald
     (g$make-parameter$18083$17Rald '72))
   (g$indent-general$18096$17Rald
     g$indent-general$18289$17Rald
     (g$make-parameter$18083$17Rald '2))
   (g$max-call-head-width$18097$17Rald
     g$max-call-head-width$18290$17Rald
     (g$make-parameter$18083$17Rald '3))
   (g$pretty-gensyms$18098$17Rald
     g$pretty-gensyms$18291$17Rald
     (g$make-parameter$18083$17Rald '#f))
   (g$reverse-string-append$18099$17Rald
     g$reverse-string-append$18292$17Rald
     (case-lambda
       ((g$l$18267$17Rald)
        (letrec* ((g$rev-string-append$18268$17Rald
                    (case-lambda
                      ((g$l$18269$17Rald g$i$18270$17Rald)
                       (if (pair? g$l$18269$17Rald)
                         ((case-lambda
                            ((g$str$18271$17Rald)
                             ((case-lambda
                                ((g$len$18272$17Rald)
                                 ((case-lambda
                                    ((g$result$18273$17Rald)
                                     ((letrec ((g$loop$18274$17Rald
                                                 (case-lambda
                                                   ((g$j$18275$17Rald
                                                      g$k$18276$17Rald)
                                                    (if (g$fx<?$16031$17Rald
                                                          g$j$18275$17Rald
                                                          g$len$18272$17Rald)
                                                      (begin
                                                        (string-set!
                                                          g$result$18273$17Rald
                                                          g$k$18276$17Rald
                                                          (string-ref
                                                            g$str$18271$17Rald
                                                            g$j$18275$17Rald))
                                                        (g$loop$18274$17Rald
                                                          (g$fx+$16017$17Rald
                                                            g$j$18275$17Rald
                                                            '1)
                                                          (g$fx+$16017$17Rald
                                                            g$k$18276$17Rald
                                                            '1)))
                                                      g$result$18273$17Rald)))))
                                        g$loop$18274$17Rald)
                                      '0
                                      (g$fx-$16019$17Rald
                                        (g$fx-$16019$17Rald
                                          (string-length
                                            g$result$18273$17Rald)
                                          g$i$18270$17Rald)
                                        g$len$18272$17Rald))))
                                  (g$rev-string-append$18268$17Rald
                                    (cdr g$l$18269$17Rald)
                                    (g$fx+$16017$17Rald
                                      g$i$18270$17Rald
                                      g$len$18272$17Rald)))))
                              (string-length g$str$18271$17Rald))))
                          (car g$l$18269$17Rald))
                         (make-string g$i$18270$17Rald))))))
          (g$rev-string-append$18268$17Rald g$l$18267$17Rald '0)))))
   (g$pretty-print$18100$17Rald
     g$pretty-print$18293$17Rald
     (case-lambda
       ((g$obj$18277$17Rald . g$opt$18278$17Rald)
        ((case-lambda
           ((g$port$18279$17Rald)
            (g$generic-write$18094$17Rald
              g$obj$18277$17Rald
              '#f
              (g$pretty-width$18095$17Rald)
              (case-lambda
                ((g$s$18280$17Rald)
                 (begin
                   (display g$s$18280$17Rald g$port$18279$17Rald)
                   '#t))))))
         (if (pair? g$opt$18278$17Rald)
           (car g$opt$18278$17Rald)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$18294$17Rald
     g$cps/generate-reference$18559$17Rald
     (case-lambda
       ((g$variable$18347$17Rald)
        (g$cps/generate-operand$18298$17Rald
          (g$make-reference$18324$17Rald g$variable$18347$17Rald)))))
   (g$cps/generate-literal$18295$17Rald
     g$cps/generate-literal$18560$17Rald
     (case-lambda
       ((g$datum$18348$17Rald)
        (g$cps/generate-operand$18298$17Rald
          (g$make-literal$18323$17Rald g$datum$18348$17Rald)))))
   (g$cps/generate-abstraction$18296$17Rald
     g$cps/generate-abstraction$18561$17Rald
     (case-lambda
       ((g$bvl$18349$17Rald g$body-generator$18350$17Rald)
        (g$cps/generate-operand$18298$17Rald
          (g$make-user-abstraction$18325$17Rald
            g$bvl$18349$17Rald
            (case-lambda
              ((g$continuation-variable$18351$17Rald)
               (g$body-generator$18350$17Rald
                 (g$variable-continuator$18311$17Rald
                   g$continuation-variable$18351$17Rald)))))))))
   (g$cps/generate-abstractions$18297$17Rald
     g$cps/generate-abstractions$18562$17Rald
     (case-lambda
       ((g$bvls$18352$17Rald g$body-generators$18353$17Rald)
        (g$cps/generate-operand$18298$17Rald
          (g$make-user-abstractions$18326$17Rald
            g$bvls$18352$17Rald
            (g$map$11835$17Rald
              (case-lambda
                ((g$body-generator$18354$17Rald)
                 (case-lambda
                   ((g$continuation-variable$18355$17Rald)
                    (g$body-generator$18354$17Rald
                      (g$variable-continuator$18311$17Rald
                        g$continuation-variable$18355$17Rald))))))
              g$body-generators$18353$17Rald))))))
   (g$cps/generate-operand$18298$17Rald
     g$cps/generate-operand$18563$17Rald
     (case-lambda
       ((g$operand$18356$17Rald)
        (case-lambda
          ((g$continuator$18357$17Rald)
           (g$continue-with-operand$18314$17Rald
             g$continuator$18357$17Rald
             g$operand$18356$17Rald))))))
   (g$cps/generate-conditional$18299$17Rald
     g$cps/generate-conditional$18564$17Rald
     (case-lambda
       ((g$condition-generator$18358$17Rald
          g$consequent-generator$18359$17Rald
          g$alternative-generator$18360$17Rald)
        (case-lambda
          ((g$continuator$18361$17Rald)
           (letrec* ((g$if-variable$18362$17Rald
                       (case-lambda
                         ((g$continuation-variable$18364$17Rald)
                          ((case-lambda
                             ((g$continuator*$18365$17Rald)
                              (g$condition-generator$18358$17Rald
                                (g$conditional-continuator$18310$17Rald
                                  (case-lambda
                                    ((g$condition$18366$17Rald)
                                     (g$make-conditional$18333$17Rald
                                       g$condition$18366$17Rald
                                       (g$consequent-generator$18359$17Rald
                                         g$continuator*$18365$17Rald)
                                       (g$alternative-generator$18360$17Rald
                                         g$continuator*$18365$17Rald))))))))
                           (g$variable-continuator$18311$17Rald
                             g$continuation-variable$18364$17Rald))))))
             (g$reify-continuation*$18316$17Rald
               g$continuator$18361$17Rald
               g$if-variable$18362$17Rald
               (case-lambda
                 ((g$continuation-abstraction$18363$17Rald)
                  (g$make-conditional-join$18334$17Rald
                    g$continuation-abstraction$18363$17Rald
                    g$if-variable$18362$17Rald))))))))))
   (g$cps/generate-recursive-bind$18300$17Rald
     g$cps/generate-recursive-bind$18565$17Rald
     (case-lambda
       ((g$variables$18367$17Rald
          g$generators$18368$17Rald
          g$body-generator$18369$17Rald)
        (case-lambda
          ((g$continuator$18370$17Rald)
           (g$make-recursive-bind$18328$17Rald
             g$variables$18367$17Rald
             (g$map$11835$17Rald
               (case-lambda
                 ((g$generator$18371$17Rald)
                  (case-lambda
                    ((g$continuation-variable$18372$17Rald)
                     (g$generator$18371$17Rald
                       (g$variable-continuator$18311$17Rald
                         g$continuation-variable$18372$17Rald))))))
               g$generators$18368$17Rald)
             (g$body-generator$18369$17Rald
               (g$reified-continuator$18313$17Rald
                 g$continuator$18370$17Rald))))))))
   (g$cps/generate-recursive*-bind$18301$17Rald
     g$cps/generate-recursive*-bind$18566$17Rald
     (case-lambda
       ((g$variables$18373$17Rald
          g$generators$18374$17Rald
          g$body-generator$18375$17Rald)
        (case-lambda
          ((g$continuator$18376$17Rald)
           (g$make-recursive*-bind$18329$17Rald
             g$variables$18373$17Rald
             (g$map$11835$17Rald
               (case-lambda
                 ((g$generator$18377$17Rald)
                  (case-lambda
                    ((g$continuation-variable$18378$17Rald)
                     (g$generator$18377$17Rald
                       (g$variable-continuator$18311$17Rald
                         g$continuation-variable$18378$17Rald))))))
               g$generators$18374$17Rald)
             (g$body-generator$18375$17Rald
               (g$reified-continuator$18313$17Rald
                 g$continuator$18376$17Rald))))))))
   (g$cps/generate-recursive*-library-bind$18302$17Rald
     g$cps/generate-recursive*-library-bind$18567$17Rald
     (case-lambda
       ((g$name$18379$17Rald
          g$variables$18380$17Rald
          g$variables*$18381$17Rald
          g$generators$18382$17Rald
          g$body-generator$18383$17Rald)
        (case-lambda
          ((g$continuator$18384$17Rald)
           (g$make-recursive*-library-bind$18330$17Rald
             g$name$18379$17Rald
             g$variables$18380$17Rald
             g$variables*$18381$17Rald
             (g$map$11835$17Rald
               (case-lambda
                 ((g$generator$18385$17Rald)
                  (case-lambda
                    ((g$continuation-variable$18386$17Rald)
                     (g$generator$18385$17Rald
                       (g$variable-continuator$18311$17Rald
                         g$continuation-variable$18386$17Rald))))))
               g$generators$18382$17Rald)
             (g$body-generator$18383$17Rald
               (g$reified-continuator$18313$17Rald
                 g$continuator$18384$17Rald))))))))
   (g$cps/generate-sequence$18303$17Rald
     g$cps/generate-sequence$18568$17Rald
     (case-lambda
       ((g$generators$18387$17Rald)
        (case-lambda
          ((g$continuator$18388$17Rald)
           ((letrec ((g$recur$18389$17Rald
                       (case-lambda
                         ((g$generators$18390$17Rald)
                          ((car g$generators$18390$17Rald)
                           ((case-lambda
                              ((g$generators$18391$17Rald)
                               (if (pair? g$generators$18391$17Rald)
                                 (g$effect-continuator$18309$17Rald
                                   (case-lambda
                                     (()
                                      (g$recur$18389$17Rald
                                        g$generators$18391$17Rald))))
                                 g$continuator$18388$17Rald)))
                            (cdr g$generators$18390$17Rald)))))))
              g$recur$18389$17Rald)
            g$generators$18387$17Rald))))))
   (g$cps/generate-assignment$18304$17Rald
     g$cps/generate-assignment$18569$17Rald
     (case-lambda
       ((g$location$18392$17Rald g$expression-generator$18393$17Rald)
        (case-lambda
          ((g$continuator$18394$17Rald)
           (g$expression-generator$18393$17Rald
             (g$operand-continuator$18308$17Rald
               (case-lambda
                 ((g$operand$18395$17Rald)
                  (g$make-assignment$18336$17Rald
                    g$location$18392$17Rald
                    g$operand$18395$17Rald
                    (g$continue-with-operand$18314$17Rald
                      g$continuator$18394$17Rald
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$18305$17Rald
     g$cps/generate-declaration$18570$17Rald
     (case-lambda
       ((g$location$18396$17Rald g$expression-generator$18397$17Rald)
        (case-lambda
          ((g$continuator$18398$17Rald)
           (g$expression-generator$18397$17Rald
             (g$operand-continuator$18308$17Rald
               (case-lambda
                 ((g$operand$18399$17Rald)
                  (g$make-declaration$18337$17Rald
                    g$location$18396$17Rald
                    g$operand$18399$17Rald
                    (g$continue-with-operand$18314$17Rald
                      g$continuator$18398$17Rald
                      '(cps-void))))))))))))
   (g$cps/generate-combination$18306$17Rald
     g$cps/generate-combination$18571$17Rald
     (case-lambda
       ((g$operator-generator$18400$17Rald
          g$operand-generators$18401$17Rald)
        (g$cps/generate-subproblems$18307$17Rald
          (g$reverse$12626$17Rald
            (cons
              g$operator-generator$18400$17Rald
              g$operand-generators$18401$17Rald))
          (case-lambda
            ((g$operands$18402$17Rald g$continuator$18403$17Rald)
             (g$make-combination$18331$17Rald
               (car g$operands$18402$17Rald)
               (g$reify-continuation$18315$17Rald
                 g$continuator$18403$17Rald)
               (cdr g$operands$18402$17Rald))))))))
   (g$cps/generate-subproblems$18307$17Rald
     g$cps/generate-subproblems$18572$17Rald
     (case-lambda
       ((g$generators$18404$17Rald g$combiner$18405$17Rald)
        (case-lambda
          ((g$continuator$18406$17Rald)
           ((letrec ((g$recur$18407$17Rald
                       (case-lambda
                         ((g$generators$18408$17Rald
                            g$operands$18409$17Rald)
                          (if (pair? g$generators$18408$17Rald)
                            ((car g$generators$18408$17Rald)
                             ((case-lambda
                                ((g$generators$18410$17Rald)
                                 (g$operand-continuator$18308$17Rald
                                   (case-lambda
                                     ((g$operand$18411$17Rald)
                                      (g$recur$18407$17Rald
                                        g$generators$18410$17Rald
                                        (cons
                                          g$operand$18411$17Rald
                                          g$operands$18409$17Rald)))))))
                              (cdr g$generators$18408$17Rald)))
                            (g$combiner$18405$17Rald
                              g$operands$18409$17Rald
                              g$continuator$18406$17Rald))))))
              g$recur$18407$17Rald)
            g$generators$18404$17Rald
            '()))))))
   (g$operand-continuator$18308$17Rald
     g$operand-continuator$18573$17Rald
     (case-lambda
       ((g$generator$18412$17Rald)
        (case-lambda
          ((g$if-operand$18413$17Rald
             g$if-effect$18414$17Rald
             g$if-conditional$18415$17Rald
             g$if-variable$18416$17Rald
             g$if-inline$18417$17Rald)
           (begin
             g$if-effect$18414$17Rald
             g$if-conditional$18415$17Rald
             g$if-variable$18416$17Rald
             g$if-inline$18417$17Rald
             (g$if-operand$18413$17Rald g$generator$18412$17Rald)))))))
   (g$effect-continuator$18309$17Rald
     g$effect-continuator$18574$17Rald
     (case-lambda
       ((g$generator$18418$17Rald)
        (case-lambda
          ((g$if-operand$18419$17Rald
             g$if-effect$18420$17Rald
             g$if-conditional$18421$17Rald
             g$if-variable$18422$17Rald
             g$if-inline$18423$17Rald)
           (begin
             g$if-operand$18419$17Rald
             g$if-conditional$18421$17Rald
             g$if-variable$18422$17Rald
             g$if-inline$18423$17Rald
             (g$if-effect$18420$17Rald g$generator$18418$17Rald)))))))
   (g$conditional-continuator$18310$17Rald
     g$conditional-continuator$18575$17Rald
     (case-lambda
       ((g$generator$18424$17Rald)
        (case-lambda
          ((g$if-operand$18425$17Rald
             g$if-effect$18426$17Rald
             g$if-conditional$18427$17Rald
             g$if-variable$18428$17Rald
             g$if-inline$18429$17Rald)
           (begin
             g$if-operand$18425$17Rald
             g$if-effect$18426$17Rald
             g$if-variable$18428$17Rald
             g$if-inline$18429$17Rald
             (g$if-conditional$18427$17Rald
               g$generator$18424$17Rald)))))))
   (g$variable-continuator$18311$17Rald
     g$variable-continuator$18576$17Rald
     (case-lambda
       ((g$variable$18430$17Rald)
        (case-lambda
          ((g$if-operand$18431$17Rald
             g$if-effect$18432$17Rald
             g$if-conditional$18433$17Rald
             g$if-variable$18434$17Rald
             g$if-inline$18435$17Rald)
           (begin
             g$if-operand$18431$17Rald
             g$if-effect$18432$17Rald
             g$if-variable$18434$17Rald
             g$if-inline$18435$17Rald
             (g$if-variable$18434$17Rald g$variable$18430$17Rald)))))))
   (g$inline-continuator$18312$17Rald
     g$inline-continuator$18577$17Rald
     (case-lambda
       ((g$continuation$18436$17Rald)
        (case-lambda
          ((g$if-operand$18437$17Rald
             g$if-effect$18438$17Rald
             g$if-conditional$18439$17Rald
             g$if-variable$18440$17Rald
             g$if-inline$18441$17Rald)
           (begin
             g$if-operand$18437$17Rald
             g$if-effect$18438$17Rald
             g$if-conditional$18439$17Rald
             g$if-variable$18440$17Rald
             (g$if-inline$18441$17Rald
               g$continuation$18436$17Rald)))))))
   (g$reified-continuator$18313$17Rald
     g$reified-continuator$18578$17Rald
     (case-lambda
       ((g$continuator$18442$17Rald)
        (case-lambda
          ((g$if-operand$18443$17Rald
             g$if-effect$18444$17Rald
             g$if-conditional$18445$17Rald
             g$if-variable$18446$17Rald
             g$if-inline$18447$17Rald)
           (begin
             g$if-operand$18443$17Rald
             g$if-effect$18444$17Rald
             g$if-conditional$18445$17Rald
             (g$reify-continuation*$18316$17Rald
               g$continuator$18442$17Rald
               g$if-variable$18446$17Rald
               g$if-inline$18447$17Rald)))))))
   (g$continue-with-operand$18314$17Rald
     g$continue-with-operand$18579$17Rald
     (case-lambda
       ((g$continuator$18448$17Rald g$operand$18449$17Rald)
        (g$continuator$18448$17Rald
          (case-lambda
            ((g$generator$18450$17Rald)
             (g$generator$18450$17Rald g$operand$18449$17Rald)))
          (case-lambda
            ((g$generator$18451$17Rald) (g$generator$18451$17Rald)))
          (case-lambda
            ((g$generator$18452$17Rald)
             (g$generator$18452$17Rald
               (g$make-truth-test$18338$17Rald
                 g$operand$18449$17Rald))))
          (case-lambda
            ((g$continuation-variable$18453$17Rald)
             (g$make-return$18332$17Rald
               (g$make-reference$18324$17Rald
                 g$continuation-variable$18453$17Rald)
               (list g$operand$18449$17Rald))))
          (case-lambda
            ((g$continuation-abstraction$18454$17Rald)
             (g$make-return$18332$17Rald
               g$continuation-abstraction$18454$17Rald
               (list g$operand$18449$17Rald))))))))
   (g$reify-continuation$18315$17Rald
     g$reify-continuation$18580$17Rald
     (case-lambda
       ((g$continuator$18455$17Rald)
        (g$continuator$18455$17Rald
          g$operand-continuation-reifier$18318$17Rald
          g$effect-continuation-reifier$18320$17Rald
          g$conditional-continuation-reifier$18322$17Rald
          (case-lambda
            ((g$variable$18456$17Rald)
             (g$make-reference$18324$17Rald g$variable$18456$17Rald)))
          (case-lambda
            ((g$continuation$18457$17Rald)
             g$continuation$18457$17Rald))))))
   (g$reify-continuation*$18316$17Rald
     g$reify-continuation*$18581$17Rald
     (case-lambda
       ((g$continuator$18458$17Rald
          g$if-variable$18459$17Rald
          g$if-inline$18460$17Rald)
        (g$continuator$18458$17Rald
          (g$operand-continuation-reifier*$18317$17Rald
            g$if-inline$18460$17Rald)
          (g$effect-continuation-reifier*$18319$17Rald
            g$if-inline$18460$17Rald)
          (g$conditional-continuation-reifier*$18321$17Rald
            g$if-inline$18460$17Rald)
          g$if-variable$18459$17Rald
          g$if-inline$18460$17Rald))))
   (g$operand-continuation-reifier*$18317$17Rald
     g$operand-continuation-reifier*$18582$17Rald
     (case-lambda
       ((g$receiver$18461$17Rald)
        (case-lambda
          ((g$generator$18462$17Rald)
           (g$receiver$18461$17Rald
             ((case-lambda
                ((g$variable$18463$17Rald)
                 (g$make-continuation-abstraction$18327$17Rald
                   (list g$variable$18463$17Rald)
                   (g$generator$18462$17Rald
                     (g$make-reference$18324$17Rald
                       g$variable$18463$17Rald)))))
              (g$generate-variable$18339$17Rald 'V))))))))
   (g$operand-continuation-reifier$18318$17Rald
     g$operand-continuation-reifier$18583$17Rald
     (g$operand-continuation-reifier*$18317$17Rald values))
   (g$effect-continuation-reifier*$18319$17Rald
     g$effect-continuation-reifier*$18584$17Rald
     (case-lambda
       ((g$receiver$18464$17Rald)
        (case-lambda
          ((g$generator$18465$17Rald)
           (g$receiver$18464$17Rald
             ((case-lambda
                ((g$variable$18466$17Rald)
                 (g$make-continuation-abstraction$18327$17Rald
                   g$variable$18466$17Rald
                   (g$generator$18465$17Rald))))
              (g$generate-variable$18339$17Rald 'IGNORE))))))))
   (g$effect-continuation-reifier$18320$17Rald
     g$effect-continuation-reifier$18585$17Rald
     (g$effect-continuation-reifier*$18319$17Rald values))
   (g$conditional-continuation-reifier*$18321$17Rald
     g$conditional-continuation-reifier*$18586$17Rald
     (case-lambda
       ((g$receiver$18467$17Rald)
        (case-lambda
          ((g$generator$18468$17Rald)
           (g$receiver$18467$17Rald
             ((case-lambda
                ((g$variable$18469$17Rald)
                 (g$make-continuation-abstraction$18327$17Rald
                   (list g$variable$18469$17Rald)
                   (g$generator$18468$17Rald
                     (g$make-truth-test$18338$17Rald
                       (g$make-reference$18324$17Rald
                         g$variable$18469$17Rald))))))
              (g$generate-variable$18339$17Rald 'T))))))))
   (g$conditional-continuation-reifier$18322$17Rald
     g$conditional-continuation-reifier$18587$17Rald
     (g$conditional-continuation-reifier*$18321$17Rald values))
   (g$make-literal$18323$17Rald
     g$make-literal$18588$17Rald
     (case-lambda
       ((g$datum$18470$17Rald) (list 'quote g$datum$18470$17Rald))))
   (g$make-reference$18324$17Rald
     g$make-reference$18589$17Rald
     (case-lambda ((g$variable$18471$17Rald) g$variable$18471$17Rald)))
   (g$make-user-abstraction$18325$17Rald
     g$make-user-abstraction$18590$17Rald
     (case-lambda
       ((g$bvl$18472$17Rald g$body-constructor$18473$17Rald)
        ((case-lambda
           ((g$continuation$18474$17Rald)
            (list
              'case-lambda
              (list
                (cons g$continuation$18474$17Rald g$bvl$18472$17Rald)
                (g$body-constructor$18473$17Rald
                  g$continuation$18474$17Rald)))))
         (g$generate-variable$18339$17Rald 'C)))))
   (g$make-user-abstractions$18326$17Rald
     g$make-user-abstractions$18591$17Rald
     (case-lambda
       ((g$bvls$18475$17Rald g$body-constructors$18476$17Rald)
        ((case-lambda
           ((g$continuation$18477$17Rald)
            (cons
              'case-lambda
              (g$map$11835$17Rald
                (case-lambda
                  ((g$bvl$18478$17Rald g$body-constructor$18479$17Rald)
                   (list
                     (cons
                       g$continuation$18477$17Rald
                       g$bvl$18478$17Rald)
                     (g$body-constructor$18479$17Rald
                       g$continuation$18477$17Rald))))
                g$bvls$18475$17Rald
                g$body-constructors$18476$17Rald))))
         (g$generate-variable$18339$17Rald 'C)))))
   (g$make-continuation-abstraction$18327$17Rald
     g$make-continuation-abstraction$18592$17Rald
     (case-lambda
       ((g$bvl$18480$17Rald g$body$18481$17Rald)
        (list
          'case-lambda
          (list g$bvl$18480$17Rald g$body$18481$17Rald)))))
   (g$make-recursive-bind$18328$17Rald
     g$make-recursive-bind$18593$17Rald
     (case-lambda
       ((g$variables$18482$17Rald
          g$constructors$18483$17Rald
          g$body$18484$17Rald)
        (list
          'letrec
          (g$map$11835$17Rald
            (case-lambda
              ((g$variable$18485$17Rald g$constructor$18486$17Rald)
               (list
                 g$variable$18485$17Rald
                 (list
                   (g$make-user-abstraction$18325$17Rald
                     '()
                     g$constructor$18486$17Rald)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$18485$17Rald))))))
            g$variables$18482$17Rald
            g$constructors$18483$17Rald)
          g$body$18484$17Rald))))
   (g$make-recursive*-bind$18329$17Rald
     g$make-recursive*-bind$18594$17Rald
     (case-lambda
       ((g$variables$18487$17Rald
          g$constructors$18488$17Rald
          g$body$18489$17Rald)
        (list
          'letrec*
          (g$map$11835$17Rald
            (case-lambda
              ((g$variable$18490$17Rald g$constructor$18491$17Rald)
               (list
                 g$variable$18490$17Rald
                 (list
                   (g$make-user-abstraction$18325$17Rald
                     '()
                     g$constructor$18491$17Rald)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$18490$17Rald))))))
            g$variables$18487$17Rald
            g$constructors$18488$17Rald)
          g$body$18489$17Rald))))
   (g$make-recursive*-library-bind$18330$17Rald
     g$make-recursive*-library-bind$18595$17Rald
     (case-lambda
       ((g$name$18492$17Rald
          g$variables$18493$17Rald
          g$variables*$18494$17Rald
          g$constructors$18495$17Rald
          g$body$18496$17Rald)
        (list
          'library-letrec*
          g$name$18492$17Rald
          (g$map$11835$17Rald
            (case-lambda
              ((g$variable$18497$17Rald
                 g$variable*$18498$17Rald
                 g$constructor$18499$17Rald)
               (list
                 g$variable$18497$17Rald
                 g$variable*$18498$17Rald
                 (list
                   (g$make-user-abstraction$18325$17Rald
                     '()
                     g$constructor$18499$17Rald)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$18497$17Rald))))))
            g$variables$18493$17Rald
            g$variables*$18494$17Rald
            g$constructors$18495$17Rald)
          g$body$18496$17Rald))))
   (g$make-combination$18331$17Rald
     g$make-combination$18596$17Rald
     (case-lambda
       ((g$operator$18500$17Rald
          g$continuation$18501$17Rald
          g$operands$18502$17Rald)
        (cons
          g$operator$18500$17Rald
          (cons g$continuation$18501$17Rald g$operands$18502$17Rald)))))
   (g$make-return$18332$17Rald
     g$make-return$18597$17Rald
     (case-lambda
       ((g$continuation$18503$17Rald g$operands$18504$17Rald)
        (cons g$continuation$18503$17Rald g$operands$18504$17Rald))))
   (g$make-conditional$18333$17Rald
     g$make-conditional$18598$17Rald
     (case-lambda
       ((g$condition$18505$17Rald
          g$consequent$18506$17Rald
          g$alternative$18507$17Rald)
        (list
          'if
          g$condition$18505$17Rald
          g$consequent$18506$17Rald
          g$alternative$18507$17Rald))))
   (g$make-conditional-join$18334$17Rald
     g$make-conditional-join$18599$17Rald
     (case-lambda
       ((g$continuation$18508$17Rald g$constructor$18509$17Rald)
        ((case-lambda
           ((g$variable$18510$17Rald)
            (g$make-let$18335$17Rald
              (list g$variable$18510$17Rald)
              (list g$continuation$18508$17Rald)
              (g$constructor$18509$17Rald g$variable$18510$17Rald))))
         (g$generate-variable$18339$17Rald 'J)))))
   (g$make-let$18335$17Rald
     g$make-let$18600$17Rald
     (case-lambda
       ((g$variables$18511$17Rald
          g$expressions$18512$17Rald
          g$body$18513$17Rald)
        (cons
          (list
            'case-lambda
            (list g$variables$18511$17Rald g$body$18513$17Rald))
          g$expressions$18512$17Rald))))
   (g$make-assignment$18336$17Rald
     g$make-assignment$18601$17Rald
     (case-lambda
       ((g$location$18514$17Rald
          g$operand$18515$17Rald
          g$expression$18516$17Rald)
        (list
          'begin
          (list 'set! g$location$18514$17Rald g$operand$18515$17Rald)
          g$expression$18516$17Rald))))
   (g$make-declaration$18337$17Rald
     g$make-declaration$18602$17Rald
     (case-lambda
       ((g$location$18517$17Rald
          g$operand$18518$17Rald
          g$expression$18519$17Rald)
        (list
          'begin
          (list 'define g$location$18517$17Rald g$operand$18518$17Rald)
          g$expression$18519$17Rald))))
   (g$make-truth-test$18338$17Rald
     g$make-truth-test$18603$17Rald
     (case-lambda ((g$operand$18520$17Rald) g$operand$18520$17Rald)))
   (g$generate-variable$18339$17Rald
     g$generate-variable$18604$17Rald
     (case-lambda ((g$name$18521$17Rald) (gensym g$name$18521$17Rald))))
   (g$parse$18340$17Rald
     g$parse$18605$17Rald
     (case-lambda
       ((g$x$18522$17Rald)
        (if (pair? g$x$18522$17Rald)
          ((case-lambda
             ((g$t$18523$17Rald)
              (if (eqv? g$t$18523$17Rald 'quote)
                (g$cps/generate-literal$18295$17Rald
                  (g$cadr$12628$17Rald g$x$18522$17Rald))
                (if (eqv? g$t$18523$17Rald 'if)
                  (g$cps/generate-conditional$18299$17Rald
                    (g$parse$18340$17Rald
                      (g$cadr$12628$17Rald g$x$18522$17Rald))
                    (g$parse$18340$17Rald
                      (g$caddr$12634$17Rald g$x$18522$17Rald))
                    (g$parse$18340$17Rald
                      (g$cadddr$12646$17Rald g$x$18522$17Rald)))
                  (if (eqv? g$t$18523$17Rald 'case-lambda)
                    ((case-lambda
                       ((g$d$18524$17Rald)
                        (g$cps/generate-abstractions$18297$17Rald
                          (g$map$11835$17Rald car g$d$18524$17Rald)
                          (g$map$11835$17Rald
                            (case-lambda
                              ((g$e$18525$17Rald)
                               (g$cps/generate-sequence$18303$17Rald
                                 (g$map$11835$17Rald
                                   g$parse$18340$17Rald
                                   (cdr g$e$18525$17Rald)))))
                            g$d$18524$17Rald))))
                     (cdr g$x$18522$17Rald))
                    (if (eqv? g$t$18523$17Rald 'letrec)
                      ((case-lambda
                         ((g$bindings$18526$17Rald g$body*$18527$17Rald)
                          ((case-lambda
                             ((g$lhs*$18528$17Rald g$rhs*$18529$17Rald)
                              ((case-lambda
                                 ((g$t*$18530$17Rald
                                    g$tmps$18531$17Rald)
                                  ((case-lambda
                                     ((g$s*$18532$17Rald)
                                      (g$parse$18340$17Rald
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$18528$17Rald
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$18530$17Rald
                                                    (append
                                                      g$s*$18532$17Rald
                                                      g$body*$18527$17Rald)))
                                                g$rhs*$18529$17Rald)))
                                          g$tmps$18531$17Rald))))
                                   (g$map$11835$17Rald
                                     (case-lambda
                                       ((g$i$18533$17Rald
                                          g$t$18534$17Rald)
                                        (list
                                          'set!
                                          g$i$18533$17Rald
                                          g$t$18534$17Rald)))
                                     g$lhs*$18528$17Rald
                                     g$t*$18530$17Rald))))
                               (g$map$11835$17Rald
                                 gensym
                                 g$lhs*$18528$17Rald)
                               (g$map$11835$17Rald
                                 (case-lambda
                                   ((g$x$18535$17Rald) 'uninitialized))
                                 g$lhs*$18528$17Rald))))
                           (g$map$11835$17Rald
                             car
                             g$bindings$18526$17Rald)
                           (g$map$11835$17Rald
                             g$cadr$12628$17Rald
                             g$bindings$18526$17Rald))))
                       (g$cadr$12628$17Rald g$x$18522$17Rald)
                       (g$cddr$12630$17Rald g$x$18522$17Rald))
                      (if (eqv? g$t$18523$17Rald 'letrec*)
                        ((case-lambda
                           ((g$bindings$18536$17Rald
                              g$body*$18537$17Rald)
                            ((case-lambda
                               ((g$lhs*$18538$17Rald
                                  g$rhs*$18539$17Rald)
                                (g$cps/generate-recursive*-bind$18301$17Rald
                                  g$lhs*$18538$17Rald
                                  (g$map$11835$17Rald
                                    g$parse$18340$17Rald
                                    g$rhs*$18539$17Rald)
                                  (g$parse$18340$17Rald
                                    (cons
                                      'begin
                                      g$body*$18537$17Rald)))))
                             (g$map$11835$17Rald
                               car
                               g$bindings$18536$17Rald)
                             (g$map$11835$17Rald
                               g$cadr$12628$17Rald
                               g$bindings$18536$17Rald))))
                         (g$cadr$12628$17Rald g$x$18522$17Rald)
                         (g$cddr$12630$17Rald g$x$18522$17Rald))
                        (if (eqv? g$t$18523$17Rald 'library-letrec*)
                          ((case-lambda
                             ((g$name$18540$17Rald g$x$18541$17Rald)
                              ((case-lambda
                                 ((g$bindings$18542$17Rald
                                    g$body*$18543$17Rald)
                                  ((case-lambda
                                     ((g$lhs*$18544$17Rald
                                        g$lhs**$18545$17Rald
                                        g$rhs*$18546$17Rald)
                                      (g$cps/generate-recursive*-library-bind$18302$17Rald
                                        g$name$18540$17Rald
                                        g$lhs*$18544$17Rald
                                        g$lhs**$18545$17Rald
                                        (g$map$11835$17Rald
                                          g$parse$18340$17Rald
                                          g$rhs*$18546$17Rald)
                                        (g$parse$18340$17Rald
                                          (cons
                                            'begin
                                            g$body*$18543$17Rald)))))
                                   (g$map$11835$17Rald
                                     car
                                     g$bindings$18542$17Rald)
                                   (g$map$11835$17Rald
                                     g$cadr$12628$17Rald
                                     g$bindings$18542$17Rald)
                                   (g$map$11835$17Rald
                                     g$caddr$12634$17Rald
                                     g$bindings$18542$17Rald))))
                               (g$cadr$12628$17Rald g$x$18541$17Rald)
                               (g$cddr$12630$17Rald g$x$18541$17Rald))))
                           (g$cadr$12628$17Rald g$x$18522$17Rald)
                           (cdr g$x$18522$17Rald))
                          (if (eqv? g$t$18523$17Rald 'begin)
                            (g$cps/generate-sequence$18303$17Rald
                              (g$map$11835$17Rald
                                g$parse$18340$17Rald
                                (cdr g$x$18522$17Rald)))
                            (if (eqv? g$t$18523$17Rald 'set!)
                              (g$cps/generate-assignment$18304$17Rald
                                (g$cadr$12628$17Rald g$x$18522$17Rald)
                                (g$parse$18340$17Rald
                                  (g$caddr$12634$17Rald
                                    g$x$18522$17Rald)))
                              (if (eqv? g$t$18523$17Rald 'define)
                                (g$cps/generate-declaration$18305$17Rald
                                  (g$cadr$12628$17Rald g$x$18522$17Rald)
                                  (g$parse$18340$17Rald
                                    (g$caddr$12634$17Rald
                                      g$x$18522$17Rald)))
                                (if (list? g$x$18522$17Rald)
                                  (g$cps/generate-combination$18306$17Rald
                                    (g$parse$18340$17Rald
                                      (car g$x$18522$17Rald))
                                    (g$map$11835$17Rald
                                      g$parse$18340$17Rald
                                      (cdr g$x$18522$17Rald)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$18522$17Rald
                                    (list?
                                      g$x$18522$17Rald))))))))))))))
           (car g$x$18522$17Rald))
          (if (g$symbol?$12610$17Rald g$x$18522$17Rald)
            (g$cps/generate-reference$18294$17Rald g$x$18522$17Rald)
            (g$cps/generate-literal$18295$17Rald g$x$18522$17Rald))))))
   (g$starts-with?$18341$17Rald
     g$starts-with?$18606$17Rald
     (case-lambda
       ((g$str$18547$17Rald g$sub$18548$17Rald)
        (clr-call-internal
          'system.string
          'startswith
          g$str$18547$17Rald
          g$sub$18548$17Rald))))
   (g$ends-with?$18342$17Rald
     g$ends-with?$18607$17Rald
     (case-lambda
       ((g$str$18549$17Rald g$sub$18550$17Rald)
        (clr-call-internal
          'system.string
          'endswith
          g$str$18549$17Rald
          g$sub$18550$17Rald))))
   (g$clr-generator?$18343$17Rald
     g$clr-generator?$18608$17Rald
     (case-lambda
       ((g$o$18551$17Rald)
        (if (g$symbol?$12610$17Rald g$o$18551$17Rald)
          (begin
            '#f
            ((case-lambda
               ((g$o$18552$17Rald)
                (if (g$starts-with?$18341$17Rald
                      g$o$18552$17Rald
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$18342$17Rald
                      g$o$18552$17Rald
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$18551$17Rald)))
          '#f))))
   (g$fix-primitives$18344$17Rald
     g$fix-primitives$18609$17Rald
     (case-lambda
       ((g$e$18553$17Rald)
        (if (if (pair? g$e$18553$17Rald)
              (begin '#f (list? g$e$18553$17Rald))
              '#f)
          ((case-lambda
             ((g$o$18554$17Rald)
              (if (eq? g$o$18554$17Rald 'quote)
                g$e$18553$17Rald
                (if (begin
                      '#f
                      (g$clr-generator?$18343$17Rald g$o$18554$17Rald))
                  (if (pair? (cdr g$e$18553$17Rald))
                    (list
                      (g$fix-primitives$18344$17Rald
                        (g$cadr$12628$17Rald g$e$18553$17Rald))
                      (cons
                        g$o$18554$17Rald
                        (g$map$11835$17Rald
                          g$fix-primitives$18344$17Rald
                          (g$cddr$12630$17Rald g$e$18553$17Rald))))
                    g$e$18553$17Rald)
                  (cons
                    (g$fix-primitives$18344$17Rald g$o$18554$17Rald)
                    (g$map$11835$17Rald
                      g$fix-primitives$18344$17Rald
                      (cdr g$e$18553$17Rald)))))))
           (car g$e$18553$17Rald))
          g$e$18553$17Rald))))
   (g$parse->cps$18345$17Rald
     g$parse->cps$18610$17Rald
     (case-lambda
       ((g$e$18555$17Rald g$var$18556$17Rald)
        ((g$parse$18340$17Rald g$e$18555$17Rald)
         (g$variable-continuator$18311$17Rald g$var$18556$17Rald)))))
   (g$convert->cps$18346$17Rald
     g$convert->cps$18611$17Rald
     (case-lambda
       ((g$e$18557$17Rald g$var$18558$17Rald)
        (g$fix-primitives$18344$17Rald
          (g$parse->cps$18345$17Rald
            g$e$18557$17Rald
            g$var$18558$17Rald))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$18612$17Rald
     g$current-primitive-locations$18657$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda ((g$x$18618$17Rald) '#f))
       (case-lambda
         ((g$p$18619$17Rald)
          (begin
            (if (not (g$procedure?$12612$17Rald g$p$18619$17Rald))
              (g$assertion-error$23425$17Rald
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$18619$17Rald)))))
   (g$mutable?$18613$17Rald
     g$mutable?$18658$17Rald
     (case-lambda
       ((g$x$18620$17Rald)
        (letrec* ((g$simple?$18621$17Rald
                    (case-lambda
                      ((g$x$18622$17Rald)
                       ((case-lambda
                          ((g$t$18623$17Rald)
                           (if g$t$18623$17Rald
                             g$t$18623$17Rald
                             ((case-lambda
                                ((g$t$18624$17Rald)
                                 (if g$t$18624$17Rald
                                   g$t$18624$17Rald
                                   ((case-lambda
                                      ((g$t$18625$17Rald)
                                       (if g$t$18625$17Rald
                                         g$t$18625$17Rald
                                         ((case-lambda
                                            ((g$t$18626$17Rald)
                                             (if g$t$18626$17Rald
                                               g$t$18626$17Rald
                                               ((case-lambda
                                                  ((g$t$18627$17Rald)
                                                   (if g$t$18627$17Rald
                                                     g$t$18627$17Rald
                                                     ((case-lambda
                                                        ((g$t$18628$17Rald)
                                                         (if g$t$18628$17Rald
                                                           g$t$18628$17Rald
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$18622$17Rald)))))
                                                      (g$bytevector?$12609$17Rald
                                                        g$x$18622$17Rald)))))
                                                (string?
                                                  g$x$18622$17Rald)))))
                                          (g$boolean?$12611$17Rald
                                            g$x$18622$17Rald)))))
                                    (g$symbol?$12610$17Rald
                                      g$x$18622$17Rald)))))
                              (g$char?$12607$17Rald
                                g$x$18622$17Rald)))))
                        (null? g$x$18622$17Rald))))))
          (not (g$simple?$18621$17Rald g$x$18620$17Rald))))))
   (g$rewriter$18614$17Rald
     g$rewriter$18659$17Rald
     (case-lambda
       ((g$quote-hack?$18629$17Rald)
        (letrec* ((g$f$18630$17Rald
                    (case-lambda
                      ((g$x$18631$17Rald)
                       (if (pair? g$x$18631$17Rald)
                         ((case-lambda
                            ((g$t$18632$17Rald)
                             (if (eqv? g$t$18632$17Rald 'quote)
                               (if (if g$quote-hack?$18629$17Rald
                                     (begin
                                       '#f
                                       (g$mutable?$18613$17Rald
                                         (g$cadr$12628$17Rald
                                           g$x$18631$17Rald)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$18633$17Rald)
                                     (begin
                                       (set-symbol-value!
                                         g$g$18633$17Rald
                                         (g$cadr$12628$17Rald
                                           g$x$18631$17Rald))
                                       g$g$18633$17Rald)))
                                  (gensym 'weak-temp))
                                 g$x$18631$17Rald)
                               (if (eqv? g$t$18632$17Rald 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11835$17Rald
                                     (case-lambda
                                       ((g$x$18634$17Rald)
                                        (cons
                                          (car g$x$18634$17Rald)
                                          (g$map$11835$17Rald
                                            g$f$18630$17Rald
                                            (cdr g$x$18634$17Rald)))))
                                     (cdr g$x$18631$17Rald)))
                                 (if (eqv? g$t$18632$17Rald 'lambda)
                                   (g$cons*$11837$17Rald
                                     'lambda
                                     (g$cadr$12628$17Rald
                                       g$x$18631$17Rald)
                                     (g$map$11835$17Rald
                                       g$f$18630$17Rald
                                       (g$cddr$12630$17Rald
                                         g$x$18631$17Rald)))
                                   (if (eqv? g$t$18632$17Rald 'letrec)
                                     ((case-lambda
                                        ((g$bindings$18635$17Rald
                                           g$body*$18636$17Rald)
                                         ((case-lambda
                                            ((g$lhs*$18637$17Rald
                                               g$rhs*$18638$17Rald)
                                             (g$cons*$11837$17Rald
                                               'letrec
                                               (g$map$11835$17Rald
                                                 list
                                                 g$lhs*$18637$17Rald
                                                 (g$map$11835$17Rald
                                                   g$f$18630$17Rald
                                                   g$rhs*$18638$17Rald))
                                               (g$map$11835$17Rald
                                                 g$f$18630$17Rald
                                                 g$body*$18636$17Rald))))
                                          (g$map$11835$17Rald
                                            car
                                            g$bindings$18635$17Rald)
                                          (g$map$11835$17Rald
                                            g$cadr$12628$17Rald
                                            g$bindings$18635$17Rald))))
                                      (g$cadr$12628$17Rald
                                        g$x$18631$17Rald)
                                      (g$cddr$12630$17Rald
                                        g$x$18631$17Rald))
                                     (if (eqv?
                                           g$t$18632$17Rald
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$18639$17Rald
                                             g$body*$18640$17Rald)
                                           ((case-lambda
                                              ((g$lhs*$18641$17Rald
                                                 g$rhs*$18642$17Rald)
                                               (g$cons*$11837$17Rald
                                                 'letrec*
                                                 (g$map$11835$17Rald
                                                   list
                                                   g$lhs*$18641$17Rald
                                                   (g$map$11835$17Rald
                                                     g$f$18630$17Rald
                                                     g$rhs*$18642$17Rald))
                                                 (g$map$11835$17Rald
                                                   g$f$18630$17Rald
                                                   g$body*$18640$17Rald))))
                                            (g$map$11835$17Rald
                                              car
                                              g$bindings$18639$17Rald)
                                            (g$map$11835$17Rald
                                              g$cadr$12628$17Rald
                                              g$bindings$18639$17Rald))))
                                        (g$cadr$12628$17Rald
                                          g$x$18631$17Rald)
                                        (g$cddr$12630$17Rald
                                          g$x$18631$17Rald))
                                       (if (eqv?
                                             g$t$18632$17Rald
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$18643$17Rald
                                               g$x$18644$17Rald)
                                             ((case-lambda
                                                ((g$bindings$18645$17Rald
                                                   g$body*$18646$17Rald)
                                                 ((case-lambda
                                                    ((g$lhs*$18647$17Rald
                                                       g$lhs**$18648$17Rald
                                                       g$rhs*$18649$17Rald)
                                                     (g$cons*$11837$17Rald
                                                       'library-letrec*
                                                       g$name$18643$17Rald
                                                       (g$map$11835$17Rald
                                                         list
                                                         g$lhs*$18647$17Rald
                                                         g$lhs**$18648$17Rald
                                                         (g$map$11835$17Rald
                                                           g$f$18630$17Rald
                                                           g$rhs*$18649$17Rald))
                                                       (g$map$11835$17Rald
                                                         g$f$18630$17Rald
                                                         g$body*$18646$17Rald))))
                                                  (g$map$11835$17Rald
                                                    car
                                                    g$bindings$18645$17Rald)
                                                  (g$map$11835$17Rald
                                                    g$cadr$12628$17Rald
                                                    g$bindings$18645$17Rald)
                                                  (g$map$11835$17Rald
                                                    g$caddr$12634$17Rald
                                                    g$bindings$18645$17Rald))))
                                              (g$cadr$12628$17Rald
                                                g$x$18644$17Rald)
                                              (g$cddr$12630$17Rald
                                                g$x$18644$17Rald))))
                                          (g$cadr$12628$17Rald
                                            g$x$18631$17Rald)
                                          (cdr g$x$18631$17Rald))
                                         (if (eqv?
                                               g$t$18632$17Rald
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11835$17Rald
                                               g$f$18630$17Rald
                                               (cdr g$x$18631$17Rald)))
                                           (if (eqv?
                                                 g$t$18632$17Rald
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12628$17Rald
                                                 g$x$18631$17Rald)
                                               (g$f$18630$17Rald
                                                 (g$caddr$12634$17Rald
                                                   g$x$18631$17Rald)))
                                             (if (eqv?
                                                   g$t$18632$17Rald
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$18650$17Rald)
                                                   ((case-lambda
                                                      ((g$t$18651$17Rald)
                                                       (if g$t$18651$17Rald
                                                         ((case-lambda
                                                            ((g$loc$18652$17Rald)
                                                             g$loc$18652$17Rald))
                                                          g$t$18651$17Rald)
                                                         g$op$18650$17Rald)))
                                                    ((g$current-primitive-locations$18612$17Rald)
                                                     g$op$18650$17Rald))))
                                                (g$cadr$12628$17Rald
                                                  g$x$18631$17Rald))
                                               (if (eqv?
                                                     g$t$18632$17Rald
                                                     'define)
                                                 g$x$18631$17Rald
                                                 (if (list?
                                                       g$x$18631$17Rald)
                                                   (g$map$11835$17Rald
                                                     g$f$18630$17Rald
                                                     g$x$18631$17Rald)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$18631$17Rald
                                                     (list?
                                                       g$x$18631$17Rald)))))))))))))))
                          (car g$x$18631$17Rald))
                         g$x$18631$17Rald)))))
          g$f$18630$17Rald))))
   (g$expanded->core$18615$17Rald
     g$expanded->core$18660$17Rald
     (case-lambda
       ((g$x$18653$17Rald)
        ((g$rewriter$18614$17Rald '#t) g$x$18653$17Rald))))
   (g$compile-core-expr$18616$17Rald
     g$compile-core-expr$18661$17Rald
     (case-lambda
       ((g$x$18654$17Rald)
        ((g$rewriter$18614$17Rald '#f) g$x$18654$17Rald))))
   (g$compile-core-expr-to-port$18617$17Rald
     g$compile-core-expr-to-port$18662$17Rald
     (case-lambda
       ((g$x$18655$17Rald g$p$18656$17Rald)
        (g$pretty-print$18293$17Rald
          ((g$rewriter$18614$17Rald '#f) g$x$18655$17Rald)
          g$p$18656$17Rald)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$18663$17Rald
     g$make-collection$18872$17Rald
     (case-lambda
       (()
        ((case-lambda
           ((g$set$18726$17Rald)
            (letrec* ((g$set-cons$18727$17Rald
                        (case-lambda
                          ((g$x$18731$17Rald g$ls$18732$17Rald)
                           (if (g$memq$11827$17Rald
                                 g$x$18731$17Rald
                                 g$ls$18732$17Rald)
                             g$ls$18732$17Rald
                             (cons
                               g$x$18731$17Rald
                               g$ls$18732$17Rald))))))
              (case-lambda
                (() g$set$18726$17Rald)
                ((g$x$18728$17Rald)
                 (set! g$set$18726$17Rald
                   (g$set-cons$18727$17Rald
                     g$x$18728$17Rald
                     g$set$18726$17Rald)))
                ((g$x$18729$17Rald g$del?$18730$17Rald)
                 (if g$del?$18730$17Rald
                   (set! g$set$18726$17Rald
                     (g$remq$11842$17Rald
                       g$x$18729$17Rald
                       g$set$18726$17Rald))
                   (set! g$set$18726$17Rald
                     (g$set-cons$18727$17Rald
                       g$x$18729$17Rald
                       g$set$18726$17Rald))))))))
         '()))))
   (g$current-library-collection$18664$17Rald
     g$current-library-collection$18873$17Rald
     (g$make-parameter$18083$17Rald
       (g$make-collection$18663$17Rald)
       (case-lambda
         ((g$x$18733$17Rald)
          (begin
            (if (not (g$procedure?$12612$17Rald g$x$18733$17Rald))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$18733$17Rald)
              (void))
            g$x$18733$17Rald)))))
   (g$8890$18665$17Rald
     g$8890$18874$17Rald
     (make-record-type-descriptor
       'library
       '#f
       'g$8893$17Rald
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8892$18666$17Rald g$8892$18875$17Rald '#f)
   (g$8891$18667$17Rald
     g$8891$18876$17Rald
     (make-record-constructor-descriptor
       g$8890$18665$17Rald
       '#f
       g$8892$18666$17Rald))
   (g$library?$18670$17Rald
     g$library?$18877$17Rald
     (record-predicate g$8890$18665$17Rald))
   (g$make-library$18671$17Rald
     g$make-library$18878$17Rald
     (record-constructor g$8891$18667$17Rald))
   (g$library-id$18672$17Rald
     g$library-id$18879$17Rald
     (record-accessor g$8890$18665$17Rald '0))
   (g$library-name$18673$17Rald
     g$library-name$18880$17Rald
     (record-accessor g$8890$18665$17Rald '1))
   (g$library-version$18674$17Rald
     g$library-version$18881$17Rald
     (record-accessor g$8890$18665$17Rald '2))
   (g$library-imp*$18675$17Rald
     g$library-imp*$18882$17Rald
     (record-accessor g$8890$18665$17Rald '3))
   (g$library-vis*$18676$17Rald
     g$library-vis*$18883$17Rald
     (record-accessor g$8890$18665$17Rald '4))
   (g$library-inv*$18677$17Rald
     g$library-inv*$18884$17Rald
     (record-accessor g$8890$18665$17Rald '5))
   (g$library-subst$18678$17Rald
     g$library-subst$18885$17Rald
     (record-accessor g$8890$18665$17Rald '6))
   (g$library-env$18679$17Rald
     g$library-env$18886$17Rald
     (record-accessor g$8890$18665$17Rald '7))
   (g$library-visit-state$18680$17Rald
     g$library-visit-state$18887$17Rald
     (record-accessor g$8890$18665$17Rald '8))
   (g$library-invoke-state$18681$17Rald
     g$library-invoke-state$18888$17Rald
     (record-accessor g$8890$18665$17Rald '9))
   (g$library-visit-code$18682$17Rald
     g$library-visit-code$18889$17Rald
     (record-accessor g$8890$18665$17Rald '10))
   (g$library-invoke-code$18683$17Rald
     g$library-invoke-code$18890$17Rald
     (record-accessor g$8890$18665$17Rald '11))
   (g$library-visible?$18684$17Rald
     g$library-visible?$18891$17Rald
     (record-accessor g$8890$18665$17Rald '12))
   (g$library-source-file-name$18685$17Rald
     g$library-source-file-name$18892$17Rald
     (record-accessor g$8890$18665$17Rald '13))
   (g$set-library-id!$18686$17Rald
     g$set-library-id!$18893$17Rald
     (record-mutator g$8890$18665$17Rald '0))
   (g$set-library-name!$18687$17Rald
     g$set-library-name!$18894$17Rald
     (record-mutator g$8890$18665$17Rald '1))
   (g$set-library-version!$18688$17Rald
     g$set-library-version!$18895$17Rald
     (record-mutator g$8890$18665$17Rald '2))
   (g$set-library-imp*!$18689$17Rald
     g$set-library-imp*!$18896$17Rald
     (record-mutator g$8890$18665$17Rald '3))
   (g$set-library-vis*!$18690$17Rald
     g$set-library-vis*!$18897$17Rald
     (record-mutator g$8890$18665$17Rald '4))
   (g$set-library-inv*!$18691$17Rald
     g$set-library-inv*!$18898$17Rald
     (record-mutator g$8890$18665$17Rald '5))
   (g$set-library-subst!$18692$17Rald
     g$set-library-subst!$18899$17Rald
     (record-mutator g$8890$18665$17Rald '6))
   (g$set-library-env!$18693$17Rald
     g$set-library-env!$18900$17Rald
     (record-mutator g$8890$18665$17Rald '7))
   (g$set-library-visit-state!$18694$17Rald
     g$set-library-visit-state!$18901$17Rald
     (record-mutator g$8890$18665$17Rald '8))
   (g$set-library-invoke-state!$18695$17Rald
     g$set-library-invoke-state!$18902$17Rald
     (record-mutator g$8890$18665$17Rald '9))
   (g$set-library-visit-code!$18696$17Rald
     g$set-library-visit-code!$18903$17Rald
     (record-mutator g$8890$18665$17Rald '10))
   (g$set-library-invoke-code!$18697$17Rald
     g$set-library-invoke-code!$18904$17Rald
     (record-mutator g$8890$18665$17Rald '11))
   (g$set-library-visible?!$18698$17Rald
     g$set-library-visible?!$18905$17Rald
     (record-mutator g$8890$18665$17Rald '12))
   (g$set-library-source-file-name!$18699$17Rald
     g$set-library-source-file-name!$18906$17Rald
     (record-mutator g$8890$18665$17Rald '13))
   (g$rp$18700$17Rald
     g$rp$18907$17Rald
     (make-record-printer
       'library
       (case-lambda
         ((g$x$18734$17Rald g$p$18735$17Rald g$wr$18736$17Rald)
          (begin
            (if (not (g$library?$18670$17Rald g$x$18734$17Rald))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$17874$17Rald
                '"#<library ~s>"
                (if (null?
                      (g$library-version$18674$17Rald g$x$18734$17Rald))
                  (g$library-name$18673$17Rald g$x$18734$17Rald)
                  (append
                    (g$library-name$18673$17Rald g$x$18734$17Rald)
                    (list
                      (g$library-version$18674$17Rald
                        g$x$18734$17Rald)))))
              g$p$18735$17Rald))))))
   (g$find-dependencies$18701$17Rald
     g$find-dependencies$18908$17Rald
     (case-lambda
       ((g$ls$18737$17Rald)
        (if (null? g$ls$18737$17Rald)
          '()
          (assertion-violation
            'find-dependencies
            '"cannot handle deps yet")))))
   (g$find-library-by$18702$17Rald
     g$find-library-by$18909$17Rald
     (case-lambda
       ((g$pred$18738$17Rald)
        ((letrec ((g$f$18739$17Rald
                    (case-lambda
                      ((g$ls$18740$17Rald)
                       (if (null? g$ls$18740$17Rald)
                         '#f
                         (if (g$pred$18738$17Rald
                               (car g$ls$18740$17Rald))
                           (car g$ls$18740$17Rald)
                           (g$f$18739$17Rald
                             (cdr g$ls$18740$17Rald))))))))
           g$f$18739$17Rald)
         ((g$current-library-collection$18664$17Rald))))))
   (g$library-path$18703$17Rald
     g$library-path$18910$17Rald
     (g$make-parameter$18083$17Rald
       '(".")
       (case-lambda
         ((g$x$18741$17Rald)
          (if (if (list? g$x$18741$17Rald)
                (begin
                  '#f
                  (g$for-all$11833$17Rald string? g$x$18741$17Rald))
                '#f)
            (g$map$11835$17Rald
              (case-lambda ((g$x$18742$17Rald) g$x$18742$17Rald))
              g$x$18741$17Rald)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$18741$17Rald))))))
   (g$library-extensions$18704$17Rald
     g$library-extensions$18911$17Rald
     (g$make-parameter$18083$17Rald
       '(".sls" ".ss")
       (case-lambda
         ((g$x$18743$17Rald)
          (if (if (list? g$x$18743$17Rald)
                (begin
                  '#f
                  (g$for-all$11833$17Rald string? g$x$18743$17Rald))
                '#f)
            (g$map$11835$17Rald
              (case-lambda ((g$x$18744$17Rald) g$x$18744$17Rald))
              g$x$18743$17Rald)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$18743$17Rald))))))
   (g$library-name->file-name$18705$17Rald
     g$library-name->file-name$18912$17Rald
     (case-lambda
       ((g$x$18745$17Rald)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$17634$17Rald)))
          (case-lambda
            ((g$p$18748$17Rald g$extract$18749$17Rald)
             ((case-lambda
                ((g$extract$18750$17Rald g$p$18751$17Rald)
                 (letrec* ((g$display-hex$18752$17Rald
                             (case-lambda
                               ((g$n$18760$17Rald)
                                (if (<= '0 g$n$18760$17Rald '9)
                                  (display
                                    g$n$18760$17Rald
                                    g$p$18751$17Rald)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$18760$17Rald '10)))
                                    g$p$18751$17Rald))))))
                   (begin
                     ((letrec ((g$f$18753$17Rald
                                 (case-lambda
                                   ((g$ls$18754$17Rald)
                                    (if (not (null? g$ls$18754$17Rald))
                                      (begin
                                        (display '"/" g$p$18751$17Rald)
                                        (g$for-each$11836$17Rald
                                          (case-lambda
                                            ((g$c$18755$17Rald)
                                             (if ((case-lambda
                                                    ((g$t$18756$17Rald)
                                                     (if g$t$18756$17Rald
                                                       g$t$18756$17Rald
                                                       ((case-lambda
                                                          ((g$t$18757$17Rald)
                                                           (if g$t$18757$17Rald
                                                             g$t$18757$17Rald
                                                             ((case-lambda
                                                                ((g$t$18758$17Rald)
                                                                 (if g$t$18758$17Rald
                                                                   g$t$18758$17Rald
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11828$17Rald
                                                                       g$c$18755$17Rald
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12674$17Rald
                                                                '#\0
                                                                g$c$18755$17Rald
                                                                '#\9)))))
                                                        (g$char<=?$12674$17Rald
                                                          '#\A
                                                          g$c$18755$17Rald
                                                          '#\Z)))))
                                                  (g$char<=?$12674$17Rald
                                                    '#\a
                                                    g$c$18755$17Rald
                                                    '#\z))
                                               (display
                                                 g$c$18755$17Rald
                                                 g$p$18751$17Rald)
                                               (begin
                                                 (display
                                                   '"%"
                                                   g$p$18751$17Rald)
                                                 ((case-lambda
                                                    ((g$n$18759$17Rald)
                                                     (begin
                                                       (g$display-hex$18752$17Rald
                                                         (g$quotient$13553$17Rald
                                                           g$n$18759$17Rald
                                                           '16))
                                                       (g$display-hex$18752$17Rald
                                                         (g$remainder$13554$17Rald
                                                           g$n$18759$17Rald
                                                           '16)))))
                                                  (char->integer
                                                    g$c$18755$17Rald))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$18754$17Rald))))
                                        (g$f$18753$17Rald
                                          (cdr g$ls$18754$17Rald)))
                                      (void))))))
                        g$f$18753$17Rald)
                      g$x$18745$17Rald)
                     (g$extract$18750$17Rald)))))
              g$extract$18749$17Rald
              g$p$18748$17Rald)))))))
   (g$file-locator$18706$17Rald
     g$file-locator$18913$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         ((g$x$18761$17Rald)
          ((case-lambda
             ((g$str$18762$17Rald)
              ((letrec ((g$f$18763$17Rald
                          (case-lambda
                            ((g$ls$18764$17Rald
                               g$exts$18765$17Rald
                               g$failed-list$18766$17Rald)
                             (if (null? g$ls$18764$17Rald)
                               (g$file-locator-resolution-error$18081$17Rald
                                 g$x$18761$17Rald
                                 (g$reverse$12626$17Rald
                                   g$failed-list$18766$17Rald)
                                 ((case-lambda
                                    ((g$ls$18767$17Rald)
                                     (if (null? g$ls$18767$17Rald)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$18767$17Rald))))
                                  (g$external-pending-libraries$18712$17Rald)))
                               (if (null? g$exts$18765$17Rald)
                                 (g$f$18763$17Rald
                                   (cdr g$ls$18764$17Rald)
                                   (g$library-extensions$18704$17Rald)
                                   g$failed-list$18766$17Rald)
                                 ((case-lambda
                                    ((g$name$18768$17Rald)
                                     (if (g$file-exists?$12737$17Rald
                                           g$name$18768$17Rald)
                                       g$name$18768$17Rald
                                       (g$f$18763$17Rald
                                         g$ls$18764$17Rald
                                         (cdr g$exts$18765$17Rald)
                                         (cons
                                           g$name$18768$17Rald
                                           g$failed-list$18766$17Rald)))))
                                  (string-append
                                    (car g$ls$18764$17Rald)
                                    g$str$18762$17Rald
                                    (car g$exts$18765$17Rald)))))))))
                 g$f$18763$17Rald)
               (g$library-path$18703$17Rald)
               (g$library-extensions$18704$17Rald)
               '())))
           (g$library-name->file-name$18705$17Rald g$x$18761$17Rald))))
       (case-lambda
         ((g$f$18769$17Rald)
          (if (g$procedure?$12612$17Rald g$f$18769$17Rald)
            g$f$18769$17Rald
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$18769$17Rald))))))
   (g$serialize-all$18707$17Rald
     g$serialize-all$18914$17Rald
     (case-lambda
       ((g$serialize$18770$17Rald g$compile$18771$17Rald)
        (letrec* ((g$library-desc$18772$17Rald
                    (case-lambda
                      ((g$x$18774$17Rald)
                       (list
                         (g$library-id$18672$17Rald g$x$18774$17Rald)
                         (g$library-name$18673$17Rald
                           g$x$18774$17Rald))))))
          (g$for-each$11836$17Rald
            (case-lambda
              ((g$x$18773$17Rald)
               (if (g$library-source-file-name$18685$17Rald
                     g$x$18773$17Rald)
                 (g$serialize$18770$17Rald
                   (g$library-source-file-name$18685$17Rald
                     g$x$18773$17Rald)
                   (list
                     (g$library-id$18672$17Rald g$x$18773$17Rald)
                     (g$library-name$18673$17Rald g$x$18773$17Rald)
                     (g$library-version$18674$17Rald g$x$18773$17Rald)
                     (g$map$11835$17Rald
                       g$library-desc$18772$17Rald
                       (g$library-imp*$18675$17Rald g$x$18773$17Rald))
                     (g$map$11835$17Rald
                       g$library-desc$18772$17Rald
                       (g$library-vis*$18676$17Rald g$x$18773$17Rald))
                     (g$map$11835$17Rald
                       g$library-desc$18772$17Rald
                       (g$library-inv*$18677$17Rald g$x$18773$17Rald))
                     (g$library-subst$18678$17Rald g$x$18773$17Rald)
                     (g$library-env$18679$17Rald g$x$18773$17Rald)
                     (g$compile$18771$17Rald
                       (g$library-visit-code$18682$17Rald
                         g$x$18773$17Rald))
                     (g$compile$18771$17Rald
                       (g$library-invoke-code$18683$17Rald
                         g$x$18773$17Rald))
                     (g$library-visible?$18684$17Rald
                       g$x$18773$17Rald)))
                 (void))))
            ((g$current-library-collection$18664$17Rald)))))))
   (g$current-precompiled-library-loader$18708$17Rald
     g$current-precompiled-library-loader$18915$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda ((g$filename$18775$17Rald g$sk$18776$17Rald) '#f))))
   (g$try-load-from-file$18709$17Rald
     g$try-load-from-file$18916$17Rald
     (case-lambda
       ((g$filename$18777$17Rald)
        ((g$current-precompiled-library-loader$18708$17Rald)
         g$filename$18777$17Rald
         (case-lambda
           ((g$id$18778$17Rald
              g$name$18779$17Rald
              g$ver$18780$17Rald
              g$imp*$18781$17Rald
              g$vis*$18782$17Rald
              g$inv*$18783$17Rald
              g$exp-subst$18784$17Rald
              g$exp-env$18785$17Rald
              g$visit-proc$18786$17Rald
              g$invoke-proc$18787$17Rald
              g$visible?$18788$17Rald)
            ((letrec ((g$f$18789$17Rald
                        (case-lambda
                          ((g$deps$18790$17Rald)
                           (if (null? g$deps$18790$17Rald)
                             (begin
                               (g$install-library$18719$17Rald
                                 g$id$18778$17Rald
                                 g$name$18779$17Rald
                                 g$ver$18780$17Rald
                                 g$imp*$18781$17Rald
                                 g$vis*$18782$17Rald
                                 g$inv*$18783$17Rald
                                 g$exp-subst$18784$17Rald
                                 g$exp-env$18785$17Rald
                                 g$visit-proc$18786$17Rald
                                 g$invoke-proc$18787$17Rald
                                 '#f
                                 '#f
                                 g$visible?$18788$17Rald
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$18791$17Rald)
                                 ((case-lambda
                                    ((g$label$18792$17Rald
                                       g$dname$18793$17Rald)
                                     ((case-lambda
                                        ((g$l$18794$17Rald)
                                         (if (if (g$library?$18670$17Rald
                                                   g$l$18794$17Rald)
                                               (begin
                                                 '#f
                                                 (eq? g$label$18792$17Rald
                                                      (g$library-id$18672$17Rald
                                                        g$l$18794$17Rald)))
                                               '#f)
                                           (g$f$18789$17Rald
                                             (cdr g$deps$18790$17Rald))
                                           (begin
                                             (g$library-version-mismatch-warning$18080$17Rald
                                               g$name$18779$17Rald
                                               g$dname$18793$17Rald
                                               g$filename$18777$17Rald)
                                             '#f))))
                                      (g$find-library-by-name$18714$17Rald
                                        g$dname$18793$17Rald))))
                                  (car g$d$18791$17Rald)
                                  (g$cadr$12628$17Rald
                                    g$d$18791$17Rald))))
                              (car g$deps$18790$17Rald)))))))
               g$f$18789$17Rald)
             (append
               g$imp*$18781$17Rald
               g$vis*$18782$17Rald
               g$inv*$18783$17Rald)))
           (g$others$18795$17Rald '#f))))))
   (g$library-loader$18710$17Rald
     g$library-loader$18917$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         ((g$x$18796$17Rald)
          ((case-lambda
             ((g$file-name$18797$17Rald)
              (if (not g$file-name$18797$17Rald)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$18796$17Rald)
                ((case-lambda
                   ((g$t$18798$17Rald)
                    (if g$t$18798$17Rald
                      g$t$18798$17Rald
                      (begin
                        '#f
                        ((g$current-library-expander$18711$17Rald)
                         (g$read-library-source-file$18082$17Rald
                           g$file-name$18797$17Rald)
                         g$file-name$18797$17Rald
                         (case-lambda
                           ((g$name$18799$17Rald)
                            (if (not (equal?
                                       g$name$18799$17Rald
                                       g$x$18796$17Rald))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$17634$17Rald)))
                                  (case-lambda
                                    ((g$p$18802$17Rald g$e$18803$17Rald)
                                     ((case-lambda
                                        ((g$e$18804$17Rald
                                           g$p$18805$17Rald)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$18805$17Rald)
                                           (write
                                             g$x$18796$17Rald
                                             g$p$18805$17Rald)
                                           (display
                                             '" in file "
                                             g$p$18805$17Rald)
                                           (display
                                             g$file-name$18797$17Rald
                                             g$p$18805$17Rald)
                                           (display
                                             '", found "
                                             g$p$18805$17Rald)
                                           (write
                                             g$name$18799$17Rald
                                             g$p$18805$17Rald)
                                           (display
                                             '" instead"
                                             g$p$18805$17Rald)
                                           (g$e$18804$17Rald))))
                                      g$e$18803$17Rald
                                      g$p$18802$17Rald)))))
                              (void)))))))))
                 (g$try-load-from-file$18709$17Rald
                   g$file-name$18797$17Rald)))))
           ((g$file-locator$18706$17Rald) g$x$18796$17Rald))))
       (case-lambda
         ((g$f$18806$17Rald)
          (if (g$procedure?$12612$17Rald g$f$18806$17Rald)
            g$f$18806$17Rald
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$18806$17Rald))))))
   (g$current-library-expander$18711$17Rald
     g$current-library-expander$18918$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         ((g$x$18807$17Rald)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$18808$17Rald)
          (if (g$procedure?$12612$17Rald g$f$18808$17Rald)
            g$f$18808$17Rald
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$18808$17Rald))))))
   (g$external-pending-libraries$18712$17Rald
     g$external-pending-libraries$18919$17Rald
     (g$make-parameter$18083$17Rald '()))
   (g$find-external-library$18713$17Rald
     g$find-external-library$18920$17Rald
     (case-lambda
       ((g$name$18809$17Rald)
        (begin
          (if (g$member$11829$17Rald
                g$name$18809$17Rald
                (g$external-pending-libraries$18712$17Rald))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$18809$17Rald)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$18812$17Rald
                g$external-pending-libraries$18813$17Rald)
              ((case-lambda
                 ((g$swap$18814$17Rald)
                  (dynamic-wind
                    g$swap$18814$17Rald
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$18710$17Rald)
                          g$name$18809$17Rald)
                         ((case-lambda
                            ((g$t$18815$17Rald)
                             (if g$t$18815$17Rald
                               g$t$18815$17Rald
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$18809$17Rald)))))
                          (g$find-library-by$18702$17Rald
                            (case-lambda
                              ((g$x$18816$17Rald)
                               (equal?
                                 (g$library-name$18673$17Rald
                                   g$x$18816$17Rald)
                                 g$name$18809$17Rald))))))))
                    g$swap$18814$17Rald)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$18817$17Rald)
                      (begin
                        (g$external-pending-libraries$18812$17Rald
                          g$external-pending-libraries$18813$17Rald)
                        (set! g$external-pending-libraries$18813$17Rald
                          g$t$18817$17Rald))))
                   (g$external-pending-libraries$18812$17Rald)))))))
           g$external-pending-libraries$18712$17Rald
           (cons
             g$name$18809$17Rald
             (g$external-pending-libraries$18712$17Rald)))))))
   (g$find-library-by-name$18714$17Rald
     g$find-library-by-name$18921$17Rald
     (case-lambda
       ((g$name$18818$17Rald)
        ((case-lambda
           ((g$t$18819$17Rald)
            (if g$t$18819$17Rald
              g$t$18819$17Rald
              (begin
                '#f
                (g$find-external-library$18713$17Rald
                  g$name$18818$17Rald)))))
         (g$find-library-by$18702$17Rald
           (case-lambda
             ((g$x$18820$17Rald)
              (equal?
                (g$library-name$18673$17Rald g$x$18820$17Rald)
                g$name$18818$17Rald))))))))
   (g$uninstall-library$18715$17Rald
     g$uninstall-library$18922$17Rald
     (case-lambda
       ((g$name$18821$17Rald g$err?$18822$17Rald)
        (letrec* ((g$who$18823$17Rald 'uninstall-library))
          ((case-lambda
             ((g$lib$18824$17Rald)
              (begin
                (if (if g$err?$18822$17Rald
                      (begin '#f (not g$lib$18824$17Rald))
                      '#f)
                  (assertion-violation
                    g$who$18823$17Rald
                    '"library not installed"
                    g$name$18821$17Rald)
                  (void))
                ((g$current-library-collection$18664$17Rald)
                 g$lib$18824$17Rald
                 '#t)
                (g$for-each$11836$17Rald
                  (case-lambda
                    ((g$x$18825$17Rald)
                     ((case-lambda
                        ((g$label$18826$17Rald g$binding$18827$17Rald)
                         (begin
                           (remove-location g$label$18826$17Rald)
                           (if (g$memq$11827$17Rald
                                 (car g$binding$18827$17Rald)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$18827$17Rald))
                             (void)))))
                      (car g$x$18825$17Rald)
                      (cdr g$x$18825$17Rald))))
                  (g$library-env$18679$17Rald g$lib$18824$17Rald)))))
           (g$find-library-by$18702$17Rald
             (case-lambda
               ((g$x$18828$17Rald)
                (equal?
                  (g$library-name$18673$17Rald g$x$18828$17Rald)
                  g$name$18821$17Rald)))))))
       ((g$name$18829$17Rald)
        (g$uninstall-library$18715$17Rald g$name$18829$17Rald '#t))))
   (g$library-exists?$18716$17Rald
     g$library-exists?$18923$17Rald
     (case-lambda
       ((g$name$18830$17Rald)
        (if (g$find-library-by$18702$17Rald
              (case-lambda
                ((g$x$18831$17Rald)
                 (equal?
                   (g$library-name$18673$17Rald g$x$18831$17Rald)
                   g$name$18830$17Rald))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$18717$17Rald
     g$find-library-by-spec/die$18924$17Rald
     (case-lambda
       ((g$spec$18832$17Rald)
        ((case-lambda
           ((g$id$18833$17Rald)
            ((case-lambda
               ((g$t$18834$17Rald)
                (if g$t$18834$17Rald
                  g$t$18834$17Rald
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$18832$17Rald)))))
             (g$find-library-by$18702$17Rald
               (case-lambda
                 ((g$x$18835$17Rald)
                  (eq? g$id$18833$17Rald
                       (g$library-id$18672$17Rald
                         g$x$18835$17Rald))))))))
         (car g$spec$18832$17Rald)))))
   (g$install-library-record$18718$17Rald
     g$install-library-record$18925$17Rald
     (case-lambda
       ((g$lib$18836$17Rald)
        (begin
          ((case-lambda
             ((g$exp-env$18837$17Rald)
              (g$for-each$11836$17Rald
                (case-lambda
                  ((g$x$18838$17Rald)
                   ((case-lambda
                      ((g$label$18839$17Rald g$binding$18840$17Rald)
                       ((case-lambda
                          ((g$binding$18841$17Rald)
                           (g$set-label-binding!$18086$17Rald
                             g$label$18839$17Rald
                             g$binding$18841$17Rald)))
                        ((case-lambda
                           ((g$t$18842$17Rald)
                            (if (eqv? g$t$18842$17Rald 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$18836$17Rald
                                  (cdr g$binding$18840$17Rald)))
                              (if (eqv? g$t$18842$17Rald 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$18836$17Rald
                                    (cdr g$binding$18840$17Rald)))
                                (if (eqv?
                                      g$t$18842$17Rald
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$18836$17Rald
                                      (cdr g$binding$18840$17Rald)))
                                  (if (eqv?
                                        g$t$18842$17Rald
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$18836$17Rald
                                        (cdr g$binding$18840$17Rald)))
                                    g$binding$18840$17Rald))))))
                         (car g$binding$18840$17Rald)))))
                    (car g$x$18838$17Rald)
                    (cdr g$x$18838$17Rald))))
                g$exp-env$18837$17Rald)))
           (g$library-env$18679$17Rald g$lib$18836$17Rald))
          ((g$current-library-collection$18664$17Rald)
           g$lib$18836$17Rald)))))
   (g$install-library$18719$17Rald
     g$install-library$18926$17Rald
     (case-lambda
       ((g$id$18843$17Rald
          g$name$18844$17Rald
          g$ver$18845$17Rald
          g$imp*$18846$17Rald
          g$vis*$18847$17Rald
          g$inv*$18848$17Rald
          g$exp-subst$18849$17Rald
          g$exp-env$18850$17Rald
          g$visit-proc$18851$17Rald
          g$invoke-proc$18852$17Rald
          g$visit-code$18853$17Rald
          g$invoke-code$18854$17Rald
          g$visible?$18855$17Rald
          g$source-file-name$18856$17Rald)
        ((case-lambda
           ((g$imp-lib*$18857$17Rald
              g$vis-lib*$18858$17Rald
              g$inv-lib*$18859$17Rald)
            (begin
              (if (not (if (g$symbol?$12610$17Rald g$id$18843$17Rald)
                         (if (list? g$name$18844$17Rald)
                           (begin '#f (list? g$ver$18845$17Rald))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$18843$17Rald
                  g$name$18844$17Rald
                  g$ver$18845$17Rald)
                (void))
              (if (g$library-exists?$18716$17Rald g$name$18844$17Rald)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$18844$17Rald)
                (void))
              ((case-lambda
                 ((g$lib$18860$17Rald)
                  (g$install-library-record$18718$17Rald
                    g$lib$18860$17Rald)))
               (g$make-library$18671$17Rald
                 g$id$18843$17Rald
                 g$name$18844$17Rald
                 g$ver$18845$17Rald
                 g$imp-lib*$18857$17Rald
                 g$vis-lib*$18858$17Rald
                 g$inv-lib*$18859$17Rald
                 g$exp-subst$18849$17Rald
                 g$exp-env$18850$17Rald
                 g$visit-proc$18851$17Rald
                 g$invoke-proc$18852$17Rald
                 g$visit-code$18853$17Rald
                 g$invoke-code$18854$17Rald
                 g$visible?$18855$17Rald
                 g$source-file-name$18856$17Rald)))))
         (g$map$11835$17Rald
           g$find-library-by-spec/die$18717$17Rald
           g$imp*$18846$17Rald)
         (g$map$11835$17Rald
           g$find-library-by-spec/die$18717$17Rald
           g$vis*$18847$17Rald)
         (g$map$11835$17Rald
           g$find-library-by-spec/die$18717$17Rald
           g$inv*$18848$17Rald)))))
   (g$imported-label->binding$18720$17Rald
     g$imported-label->binding$18927$17Rald
     (case-lambda
       ((g$lab$18861$17Rald)
        (g$label-binding$18087$17Rald g$lab$18861$17Rald))))
   (g$invoke-library$18721$17Rald
     g$invoke-library$18928$17Rald
     (case-lambda
       ((g$lib$18862$17Rald)
        ((case-lambda
           ((g$invoke$18863$17Rald)
            (if (g$procedure?$12612$17Rald g$invoke$18863$17Rald)
              (begin
                (g$set-library-invoke-state!$18695$17Rald
                  g$lib$18862$17Rald
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$18862$17Rald))))
                (g$for-each$11836$17Rald
                  g$invoke-library$18721$17Rald
                  (g$library-inv*$18677$17Rald g$lib$18862$17Rald))
                (g$set-library-invoke-state!$18695$17Rald
                  g$lib$18862$17Rald
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$18862$17Rald))))
                (g$invoke$18863$17Rald)
                (g$set-library-invoke-state!$18695$17Rald
                  g$lib$18862$17Rald
                  '#t))
              (void))))
         (g$library-invoke-state$18681$17Rald g$lib$18862$17Rald)))))
   (g$visit-library$18722$17Rald
     g$visit-library$18929$17Rald
     (case-lambda
       ((g$lib$18864$17Rald)
        ((case-lambda
           ((g$visit$18865$17Rald)
            (if (g$procedure?$12612$17Rald g$visit$18865$17Rald)
              (begin
                (g$set-library-visit-state!$18694$17Rald
                  g$lib$18864$17Rald
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$18864$17Rald))))
                (g$for-each$11836$17Rald
                  g$invoke-library$18721$17Rald
                  (g$library-vis*$18676$17Rald g$lib$18864$17Rald))
                (g$set-library-visit-state!$18694$17Rald
                  g$lib$18864$17Rald
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$18864$17Rald))))
                (g$visit$18865$17Rald)
                (g$set-library-visit-state!$18694$17Rald
                  g$lib$18864$17Rald
                  '#t))
              (void))))
         (g$library-visit-state$18680$17Rald g$lib$18864$17Rald)))))
   (g$invoke-library-by-spec$18723$17Rald
     g$invoke-library-by-spec$18930$17Rald
     (case-lambda
       ((g$spec$18866$17Rald)
        (g$invoke-library$18721$17Rald
          (g$find-library-by-spec/die$18717$17Rald
            g$spec$18866$17Rald)))))
   (g$installed-libraries$18724$17Rald
     g$installed-libraries$18931$17Rald
     (case-lambda
       ((g$all?$18867$17Rald)
        ((letrec ((g$f$18868$17Rald
                    (case-lambda
                      ((g$ls$18869$17Rald)
                       (if (null? g$ls$18869$17Rald)
                         '()
                         (if ((case-lambda
                                ((g$t$18870$17Rald)
                                 (if g$t$18870$17Rald
                                   g$t$18870$17Rald
                                   (begin
                                     '#f
                                     (g$library-visible?$18684$17Rald
                                       (car g$ls$18869$17Rald))))))
                              g$all?$18867$17Rald)
                           (cons
                             (g$library-name$18673$17Rald
                               (car g$ls$18869$17Rald))
                             (g$f$18868$17Rald (cdr g$ls$18869$17Rald)))
                           (g$f$18868$17Rald
                             (cdr g$ls$18869$17Rald))))))))
           g$f$18868$17Rald)
         ((g$current-library-collection$18664$17Rald))))
       (() (g$installed-libraries$18724$17Rald '#f))))
   (g$library-spec$18725$17Rald
     g$library-spec$18932$17Rald
     (case-lambda
       ((g$x$18871$17Rald)
        (begin
          (if (not (g$library?$18670$17Rald g$x$18871$17Rald))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$18871$17Rald)
            (void))
          (list
            (g$library-id$18672$17Rald g$x$18871$17Rald)
            (g$library-name$18673$17Rald g$x$18871$17Rald)
            (g$library-version$18674$17Rald g$x$18871$17Rald)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$18933$17Rald
     g$build-global-define$19143$17Rald
     (case-lambda ((g$x$19114$17Rald) (g$build-void$19110$17Rald))))
   (g$build-lambda$19044$17Rald
     g$build-lambda$19144$17Rald
     (case-lambda
       ((g$ae$19115$17Rald g$vars$19116$17Rald g$exp$19117$17Rald)
        (list
          'case-lambda
          (list g$vars$19116$17Rald g$exp$19117$17Rald)))))
   (g$build-case-lambda$19045$17Rald
     g$build-case-lambda$19145$17Rald
     (case-lambda
       ((g$ae$19118$17Rald g$vars*$19119$17Rald g$exp*$19120$17Rald)
        (cons
          'case-lambda
          (g$map$11835$17Rald
            list
            g$vars*$19119$17Rald
            g$exp*$19120$17Rald)))))
   (g$build-let$19046$17Rald
     g$build-let$19146$17Rald
     (case-lambda
       ((g$ae$19121$17Rald
          g$lhs*$19122$17Rald
          g$rhs*$19123$17Rald
          g$body$19124$17Rald)
        (cons
          (g$build-lambda$19044$17Rald
            g$ae$19121$17Rald
            g$lhs*$19122$17Rald
            g$body$19124$17Rald)
          g$rhs*$19123$17Rald))))
   (g$build-sequence$19109$17Rald
     g$build-sequence$19147$17Rald
     (case-lambda
       ((g$ae$19125$17Rald g$exps$19126$17Rald)
        ((letrec ((g$loop$19127$17Rald
                    (case-lambda
                      ((g$exps$19128$17Rald)
                       (if (null? (cdr g$exps$19128$17Rald))
                         (car g$exps$19128$17Rald)
                         (if (equal?
                               (car g$exps$19128$17Rald)
                               (g$build-void$19110$17Rald))
                           (g$loop$19127$17Rald
                             (cdr g$exps$19128$17Rald))
                           (cons 'begin g$exps$19128$17Rald)))))))
           g$loop$19127$17Rald)
         g$exps$19126$17Rald))))
   (g$build-void$19110$17Rald
     g$build-void$19148$17Rald
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$19111$17Rald
     g$build-letrec$19149$17Rald
     (case-lambda
       ((g$ae$19129$17Rald
          g$vars$19130$17Rald
          g$val-exps$19131$17Rald
          g$body-exp$19132$17Rald)
        (if (null? g$vars$19130$17Rald)
          g$body-exp$19132$17Rald
          (list
            'letrec
            (g$map$11835$17Rald
              list
              g$vars$19130$17Rald
              g$val-exps$19131$17Rald)
            g$body-exp$19132$17Rald)))))
   (g$build-letrec*$19112$17Rald
     g$build-letrec*$19150$17Rald
     (case-lambda
       ((g$ae$19133$17Rald
          g$vars$19134$17Rald
          g$val-exps$19135$17Rald
          g$body-exp$19136$17Rald)
        (if (null? g$vars$19134$17Rald)
          g$body-exp$19136$17Rald
          (list
            'letrec*
            (g$map$11835$17Rald
              list
              g$vars$19134$17Rald
              g$val-exps$19135$17Rald)
            g$body-exp$19136$17Rald)))))
   (g$build-library-letrec*$19113$17Rald
     g$build-library-letrec*$19151$17Rald
     (case-lambda
       ((g$ae$19137$17Rald
          g$name$19138$17Rald
          g$vars$19139$17Rald
          g$locs$19140$17Rald
          g$val-exps$19141$17Rald
          g$body-exp$19142$17Rald)
        (list
          'library-letrec*
          g$name$19138$17Rald
          (g$map$11835$17Rald
            list
            g$vars$19139$17Rald
            g$locs$19140$17Rald
            g$val-exps$19141$17Rald)
          g$body-exp$19142$17Rald)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$19152$17Rald
     g$set-cons$23164$17Rald
     (case-lambda
       ((g$x$19848$17Rald g$ls$19849$17Rald)
        (if (g$memq$11827$17Rald g$x$19848$17Rald g$ls$19849$17Rald)
          g$ls$19849$17Rald
          (cons g$x$19848$17Rald g$ls$19849$17Rald)))))
   (g$set-union$19153$17Rald
     g$set-union$23165$17Rald
     (case-lambda
       ((g$ls1$19850$17Rald g$ls2$19851$17Rald)
        (if (null? g$ls1$19850$17Rald)
          g$ls2$19851$17Rald
          (if (g$memq$11827$17Rald
                (car g$ls1$19850$17Rald)
                g$ls2$19851$17Rald)
            (g$set-union$19153$17Rald
              (cdr g$ls1$19850$17Rald)
              g$ls2$19851$17Rald)
            (cons
              (car g$ls1$19850$17Rald)
              (g$set-union$19153$17Rald
                (cdr g$ls1$19850$17Rald)
                g$ls2$19851$17Rald)))))))
   (g$top-mark*$19155$17Rald g$top-mark*$23166$17Rald '(top))
   (g$top-marked?$19156$17Rald
     g$top-marked?$23167$17Rald
     (case-lambda
       ((g$m*$19852$17Rald)
        (g$memq$11827$17Rald 'top g$m*$19852$17Rald))))
   (g$gen-lexical$19157$17Rald
     g$gen-lexical$23168$17Rald
     (case-lambda
       ((g$sym$19853$17Rald)
        (if (g$symbol?$12610$17Rald g$sym$19853$17Rald)
          (gensym g$sym$19853$17Rald)
          (if (g$stx?$19194$17Rald g$sym$19853$17Rald)
            (g$gen-lexical$19157$17Rald
              (g$id->sym$19223$17Rald g$sym$19853$17Rald))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$19853$17Rald))))))
   (g$gen-global$19158$17Rald
     g$gen-global$23169$17Rald
     (case-lambda
       ((g$x$19854$17Rald)
        (g$gen-lexical$19157$17Rald g$x$19854$17Rald))))
   (g$gen-label$19159$17Rald
     g$gen-label$23170$17Rald
     (case-lambda ((g$_$19855$17Rald) (gensym))))
   (g$gen-top-level-label$19160$17Rald
     g$gen-top-level-label$23171$17Rald
     (case-lambda
       ((g$id$19856$17Rald g$rib$19857$17Rald)
        (letrec* ((g$find$19858$17Rald
                    (case-lambda
                      ((g$sym$19864$17Rald
                         g$mark*$19865$17Rald
                         g$sym*$19866$17Rald
                         g$mark**$19867$17Rald
                         g$label*$19868$17Rald)
                       (if (pair? g$sym*$19866$17Rald)
                         (begin
                           '#f
                           (if (if (eq? g$sym$19864$17Rald
                                        (car g$sym*$19866$17Rald))
                                 (begin
                                   '#f
                                   (g$same-marks?$19224$17Rald
                                     g$mark*$19865$17Rald
                                     (car g$mark**$19867$17Rald)))
                                 '#f)
                             (car g$label*$19868$17Rald)
                             (g$find$19858$17Rald
                               g$sym$19864$17Rald
                               g$mark*$19865$17Rald
                               (cdr g$sym*$19866$17Rald)
                               (cdr g$mark**$19867$17Rald)
                               (cdr g$label*$19868$17Rald))))
                         '#f)))))
          ((case-lambda
             ((g$sym$19859$17Rald g$mark*$19860$17Rald)
              ((case-lambda
                 ((g$sym*$19861$17Rald)
                  ((case-lambda
                     ((g$t$19862$17Rald)
                      (if g$t$19862$17Rald
                        ((case-lambda
                           ((g$label$19863$17Rald)
                            (if (g$imported-label->binding$18927$17Rald
                                  g$label$19863$17Rald)
                              (gensym)
                              g$label$19863$17Rald)))
                         g$t$19862$17Rald)
                        (gensym))))
                   (if (g$memq$11827$17Rald
                         g$sym$19859$17Rald
                         (g$rib-sym*$19170$17Rald g$rib$19857$17Rald))
                     (begin
                       '#f
                       (g$find$19858$17Rald
                         g$sym$19859$17Rald
                         g$mark*$19860$17Rald
                         g$sym*$19861$17Rald
                         (g$rib-mark**$19171$17Rald g$rib$19857$17Rald)
                         (g$rib-label*$19172$17Rald
                           g$rib$19857$17Rald)))
                     '#f))))
               (g$rib-sym*$19170$17Rald g$rib$19857$17Rald))))
           (g$id->sym$19223$17Rald g$id$19856$17Rald)
           (g$stx-mark*$19197$17Rald g$id$19856$17Rald))))))
   (g$gen-define-label+loc$19161$17Rald
     g$gen-define-label+loc$23172$17Rald
     (case-lambda
       ((g$id$19869$17Rald g$rib$19870$17Rald g$sd?$19871$17Rald)
        (if g$sd?$19871$17Rald
          (values
            (gensym)
            (g$gen-lexical$19157$17Rald g$id$19869$17Rald))
          ((case-lambda
             ((g$env$19872$17Rald)
              ((case-lambda
                 ((g$label$19873$17Rald g$locs$19874$17Rald)
                  (values
                    g$label$19873$17Rald
                    ((case-lambda
                       ((g$t$19875$17Rald)
                        (if g$t$19875$17Rald
                          (cdr g$t$19875$17Rald)
                          ((case-lambda
                             ((g$loc$19876$17Rald)
                              (begin
                                (g$set-interaction-env-locs!$19810$17Rald
                                  g$env$19872$17Rald
                                  (cons
                                    (cons
                                      g$label$19873$17Rald
                                      g$loc$19876$17Rald)
                                    g$locs$19874$17Rald))
                                g$loc$19876$17Rald)))
                           (g$gen-lexical$19157$17Rald
                             g$id$19869$17Rald)))))
                     (g$assq$11823$17Rald
                       g$label$19873$17Rald
                       g$locs$19874$17Rald)))))
               (g$gen-top-level-label$19160$17Rald
                 g$id$19869$17Rald
                 g$rib$19870$17Rald)
               (g$interaction-env-locs$19807$17Rald
                 g$env$19872$17Rald))))
           (g$top-level-context$19847$17Rald))))))
   (g$gen-define-label$19162$17Rald
     g$gen-define-label$23173$17Rald
     (case-lambda
       ((g$id$19877$17Rald g$rib$19878$17Rald g$sd?$19879$17Rald)
        (if g$sd?$19879$17Rald
          (gensym)
          (g$gen-top-level-label$19160$17Rald
            g$id$19877$17Rald
            g$rib$19878$17Rald)))))
   (g$9217$19163$17Rald
     g$9217$23174$17Rald
     (make-record-type-descriptor
       'rib
       '#f
       'g$9220$17Rald
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9219$19164$17Rald g$9219$23175$17Rald '#f)
   (g$9218$19165$17Rald
     g$9218$23176$17Rald
     (make-record-constructor-descriptor
       g$9217$19163$17Rald
       '#f
       g$9219$19164$17Rald))
   (g$rib?$19168$17Rald
     g$rib?$23177$17Rald
     (record-predicate g$9217$19163$17Rald))
   (g$make-rib$19169$17Rald
     g$make-rib$23178$17Rald
     (record-constructor g$9218$19165$17Rald))
   (g$rib-sym*$19170$17Rald
     g$rib-sym*$23179$17Rald
     (record-accessor g$9217$19163$17Rald '0))
   (g$rib-mark**$19171$17Rald
     g$rib-mark**$23180$17Rald
     (record-accessor g$9217$19163$17Rald '1))
   (g$rib-label*$19172$17Rald
     g$rib-label*$23181$17Rald
     (record-accessor g$9217$19163$17Rald '2))
   (g$rib-sealed/freq$19173$17Rald
     g$rib-sealed/freq$23182$17Rald
     (record-accessor g$9217$19163$17Rald '3))
   (g$rib-cache$19174$17Rald
     g$rib-cache$23183$17Rald
     (record-accessor g$9217$19163$17Rald '4))
   (g$set-rib-sym*!$19175$17Rald
     g$set-rib-sym*!$23184$17Rald
     (record-mutator g$9217$19163$17Rald '0))
   (g$set-rib-mark**!$19176$17Rald
     g$set-rib-mark**!$23185$17Rald
     (record-mutator g$9217$19163$17Rald '1))
   (g$set-rib-label*!$19177$17Rald
     g$set-rib-label*!$23186$17Rald
     (record-mutator g$9217$19163$17Rald '2))
   (g$set-rib-sealed/freq!$19178$17Rald
     g$set-rib-sealed/freq!$23187$17Rald
     (record-mutator g$9217$19163$17Rald '3))
   (g$set-rib-cache!$19179$17Rald
     g$set-rib-cache!$23188$17Rald
     (record-mutator g$9217$19163$17Rald '4))
   (g$make-empty-rib$19180$17Rald
     g$make-empty-rib$23189$17Rald
     (case-lambda (() (g$make-rib$19169$17Rald '() '() '() '#f '#f))))
   (g$make-cache-rib$19181$17Rald
     g$make-cache-rib$23190$17Rald
     (case-lambda
       (()
        (g$make-rib$19169$17Rald
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12719$17Rald)))))
   (g$find-label$19182$17Rald
     g$find-label$23191$17Rald
     (case-lambda
       ((g$rib$19880$17Rald g$sym$19881$17Rald g$mark*$19882$17Rald)
        ((case-lambda
           ((g$ht$19883$17Rald)
            (if g$ht$19883$17Rald
              (begin
                '#f
                ((case-lambda
                   ((g$cv$19884$17Rald)
                    ((case-lambda
                       ((g$t$19885$17Rald)
                        (if g$t$19885$17Rald
                          (cdr g$t$19885$17Rald)
                          '#f)))
                     (if g$cv$19884$17Rald
                       (begin
                         '#f
                         (g$assp$11826$17Rald
                           (case-lambda
                             ((g$m$19886$17Rald)
                              (g$same-marks?$19224$17Rald
                                g$mark*$19882$17Rald
                                g$m$19886$17Rald)))
                           g$cv$19884$17Rald))
                       '#f))))
                 (g$hashtable-ref$12722$17Rald
                   g$ht$19883$17Rald
                   g$sym$19881$17Rald
                   '#f)))
              '#f)))
         (g$rib-cache$19174$17Rald g$rib$19880$17Rald)))))
   (g$extend-rib!$19183$17Rald
     g$extend-rib!$23192$17Rald
     (case-lambda
       ((g$rib$19887$17Rald
          g$id$19888$17Rald
          g$label$19889$17Rald
          g$sd?$19890$17Rald)
        (letrec* ((g$find$19891$17Rald
                    (case-lambda
                      ((g$sym$19900$17Rald
                         g$mark*$19901$17Rald
                         g$sym*$19902$17Rald
                         g$mark**$19903$17Rald
                         g$label*$19904$17Rald)
                       (if (pair? g$sym*$19902$17Rald)
                         (begin
                           '#f
                           (if (if (eq? g$sym$19900$17Rald
                                        (car g$sym*$19902$17Rald))
                                 (begin
                                   '#f
                                   (g$same-marks?$19224$17Rald
                                     g$mark*$19901$17Rald
                                     (car g$mark**$19903$17Rald)))
                                 '#f)
                             g$label*$19904$17Rald
                             (g$find$19891$17Rald
                               g$sym$19900$17Rald
                               g$mark*$19901$17Rald
                               (cdr g$sym*$19902$17Rald)
                               (cdr g$mark**$19903$17Rald)
                               (cdr g$label*$19904$17Rald))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$19173$17Rald g$rib$19887$17Rald)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$19887$17Rald)
              (void))
            ((case-lambda
               ((g$sym$19892$17Rald g$mark*$19893$17Rald)
                ((case-lambda
                   ((g$sym*$19894$17Rald)
                    ((case-lambda
                       ((g$t$19895$17Rald)
                        (if g$t$19895$17Rald
                          ((case-lambda
                             ((g$p$19896$17Rald)
                              (if (not (eq? g$label$19889$17Rald
                                            g$p$19896$17Rald))
                                (g$syntax-violation$19839$17Rald
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$19888$17Rald)
                                (void))))
                           g$t$19895$17Rald)
                          ((case-lambda
                             ((g$t$19897$17Rald)
                              (if g$t$19897$17Rald
                                ((case-lambda
                                   ((g$p$19898$17Rald)
                                    (if (not (eq? g$label$19889$17Rald
                                                  (car g$p$19898$17Rald)))
                                      (if (not g$sd?$19890$17Rald)
                                        (set-car!
                                          g$p$19898$17Rald
                                          g$label$19889$17Rald)
                                        (g$syntax-violation$19839$17Rald
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$19888$17Rald))
                                      (void))))
                                 g$t$19897$17Rald)
                                (begin
                                  (if (g$rib-cache$19174$17Rald
                                        g$rib$19887$17Rald)
                                    (g$hashtable-update!$12726$17Rald
                                      (g$rib-cache$19174$17Rald
                                        g$rib$19887$17Rald)
                                      g$sym$19892$17Rald
                                      (case-lambda
                                        ((g$e$19899$17Rald)
                                         (cons
                                           (cons
                                             g$mark*$19893$17Rald
                                             g$label$19889$17Rald)
                                           g$e$19899$17Rald)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$19175$17Rald
                                    g$rib$19887$17Rald
                                    (cons
                                      g$sym$19892$17Rald
                                      g$sym*$19894$17Rald))
                                  (g$set-rib-mark**!$19176$17Rald
                                    g$rib$19887$17Rald
                                    (cons
                                      g$mark*$19893$17Rald
                                      (g$rib-mark**$19171$17Rald
                                        g$rib$19887$17Rald)))
                                  (g$set-rib-label*!$19177$17Rald
                                    g$rib$19887$17Rald
                                    (cons
                                      g$label$19889$17Rald
                                      (g$rib-label*$19172$17Rald
                                        g$rib$19887$17Rald)))))))
                           (if (g$memq$11827$17Rald
                                 g$sym$19892$17Rald
                                 (g$rib-sym*$19170$17Rald
                                   g$rib$19887$17Rald))
                             (begin
                               '#f
                               (g$find$19891$17Rald
                                 g$sym$19892$17Rald
                                 g$mark*$19893$17Rald
                                 g$sym*$19894$17Rald
                                 (g$rib-mark**$19171$17Rald
                                   g$rib$19887$17Rald)
                                 (g$rib-label*$19172$17Rald
                                   g$rib$19887$17Rald)))
                             '#f)))))
                     (g$find-label$19182$17Rald
                       g$rib$19887$17Rald
                       g$sym$19892$17Rald
                       g$mark*$19893$17Rald))))
                 (g$rib-sym*$19170$17Rald g$rib$19887$17Rald))))
             (g$id->sym$19223$17Rald g$id$19888$17Rald)
             (g$stx-mark*$19197$17Rald g$id$19888$17Rald)))))))
   (g$extend-rib/nc!$19184$17Rald
     g$extend-rib/nc!$23193$17Rald
     (case-lambda
       ((g$rib$19905$17Rald g$id$19906$17Rald g$label$19907$17Rald)
        ((case-lambda
           ((g$sym$19908$17Rald g$mark*$19909$17Rald)
            ((case-lambda
               ((g$sym*$19910$17Rald)
                (begin
                  (if (g$rib-cache$19174$17Rald g$rib$19905$17Rald)
                    (g$hashtable-update!$12726$17Rald
                      (g$rib-cache$19174$17Rald g$rib$19905$17Rald)
                      g$sym$19908$17Rald
                      (case-lambda
                        ((g$e$19911$17Rald)
                         (cons
                           (cons
                             g$mark*$19909$17Rald
                             g$label$19907$17Rald)
                           g$e$19911$17Rald)))
                      '())
                    (void))
                  (g$set-rib-sym*!$19175$17Rald
                    g$rib$19905$17Rald
                    (cons g$sym$19908$17Rald g$sym*$19910$17Rald))
                  (g$set-rib-mark**!$19176$17Rald
                    g$rib$19905$17Rald
                    (cons
                      g$mark*$19909$17Rald
                      (g$rib-mark**$19171$17Rald g$rib$19905$17Rald)))
                  (g$set-rib-label*!$19177$17Rald
                    g$rib$19905$17Rald
                    (cons
                      g$label$19907$17Rald
                      (g$rib-label*$19172$17Rald
                        g$rib$19905$17Rald))))))
             (g$rib-sym*$19170$17Rald g$rib$19905$17Rald))))
         (g$id->sym$19223$17Rald g$id$19906$17Rald)
         (g$stx-mark*$19197$17Rald g$id$19906$17Rald)))))
   (g$make-rib-map$19185$17Rald
     g$make-rib-map$23194$17Rald
     (case-lambda
       ((g$sym*$19912$17Rald)
        ((case-lambda
           ((g$ht$19913$17Rald)
            ((letrec ((g$f$19914$17Rald
                        (case-lambda
                          ((g$i$19915$17Rald g$sym*$19916$17Rald)
                           (if (null? g$sym*$19916$17Rald)
                             g$ht$19913$17Rald
                             (begin
                               (g$hashtable-update!$12726$17Rald
                                 g$ht$19913$17Rald
                                 (car g$sym*$19916$17Rald)
                                 (case-lambda
                                   ((g$x$19917$17Rald)
                                    (cons
                                      g$i$19915$17Rald
                                      g$x$19917$17Rald)))
                                 '())
                               (g$f$19914$17Rald
                                 (+ g$i$19915$17Rald '1)
                                 (cdr g$sym*$19916$17Rald))))))))
               g$f$19914$17Rald)
             '0
             g$sym*$19912$17Rald)))
         (g$make-eq-hashtable$12719$17Rald)))))
   (g$seal-rib!$19186$17Rald
     g$seal-rib!$23195$17Rald
     (case-lambda
       ((g$rib$19918$17Rald)
        ((case-lambda
           ((g$sym*$19919$17Rald)
            (if (not (null? g$sym*$19919$17Rald))
              (begin
                (g$set-rib-sym*!$19175$17Rald
                  g$rib$19918$17Rald
                  (g$list->vector$12620$17Rald g$sym*$19919$17Rald))
                (g$set-rib-mark**!$19176$17Rald
                  g$rib$19918$17Rald
                  (g$list->vector$12620$17Rald
                    (g$rib-mark**$19171$17Rald g$rib$19918$17Rald)))
                (g$set-rib-label*!$19177$17Rald
                  g$rib$19918$17Rald
                  (g$list->vector$12620$17Rald
                    (g$rib-label*$19172$17Rald g$rib$19918$17Rald)))
                (g$set-rib-sealed/freq!$19178$17Rald
                  g$rib$19918$17Rald
                  (g$make-rib-map$19185$17Rald g$sym*$19919$17Rald)))
              (void))))
         (g$rib-sym*$19170$17Rald g$rib$19918$17Rald)))))
   (g$unseal-rib!$19187$17Rald
     g$unseal-rib!$23196$17Rald
     (case-lambda
       ((g$rib$19920$17Rald)
        (if (g$rib-sealed/freq$19173$17Rald g$rib$19920$17Rald)
          (begin
            (g$set-rib-sealed/freq!$19178$17Rald g$rib$19920$17Rald '#f)
            (g$set-rib-sym*!$19175$17Rald
              g$rib$19920$17Rald
              (vector->list
                (g$rib-sym*$19170$17Rald g$rib$19920$17Rald)))
            (g$set-rib-mark**!$19176$17Rald
              g$rib$19920$17Rald
              (vector->list
                (g$rib-mark**$19171$17Rald g$rib$19920$17Rald)))
            (g$set-rib-label*!$19177$17Rald
              g$rib$19920$17Rald
              (vector->list
                (g$rib-label*$19172$17Rald g$rib$19920$17Rald))))
          (void)))))
   (g$make-full-rib$19188$17Rald
     g$make-full-rib$23197$17Rald
     (case-lambda
       ((g$id*$19921$17Rald g$label*$19922$17Rald)
        ((case-lambda
           ((g$r$19923$17Rald)
            (begin
              (g$seal-rib!$19186$17Rald g$r$19923$17Rald)
              g$r$19923$17Rald)))
         (g$make-rib$19169$17Rald
           (g$map$11835$17Rald
             g$id->sym$19223$17Rald
             g$id*$19921$17Rald)
           (g$map$11835$17Rald
             g$stx-mark*$19197$17Rald
             g$id*$19921$17Rald)
           g$label*$19922$17Rald
           '#f
           '#f)))))
   (g$9246$19189$17Rald
     g$9246$23198$17Rald
     (make-record-type-descriptor
       'stx
       '#f
       'g$9249$17Rald
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$9248$19190$17Rald g$9248$23199$17Rald '#f)
   (g$9247$19191$17Rald
     g$9247$23200$17Rald
     (make-record-constructor-descriptor
       g$9246$19189$17Rald
       '#f
       g$9248$19190$17Rald))
   (g$stx?$19194$17Rald
     g$stx?$23201$17Rald
     (record-predicate g$9246$19189$17Rald))
   (g$make-stx$19195$17Rald
     g$make-stx$23202$17Rald
     (record-constructor g$9247$19191$17Rald))
   (g$stx-expr$19196$17Rald
     g$stx-expr$23203$17Rald
     (record-accessor g$9246$19189$17Rald '0))
   (g$stx-mark*$19197$17Rald
     g$stx-mark*$23204$17Rald
     (record-accessor g$9246$19189$17Rald '1))
   (g$stx-subst*$19198$17Rald
     g$stx-subst*$23205$17Rald
     (record-accessor g$9246$19189$17Rald '2))
   (g$stx-ae*$19199$17Rald
     g$stx-ae*$23206$17Rald
     (record-accessor g$9246$19189$17Rald '3))
   (g$set-stx-expr!$19200$17Rald
     g$set-stx-expr!$23207$17Rald
     (record-mutator g$9246$19189$17Rald '0))
   (g$set-stx-mark*!$19201$17Rald
     g$set-stx-mark*!$23208$17Rald
     (record-mutator g$9246$19189$17Rald '1))
   (g$set-stx-subst*!$19202$17Rald
     g$set-stx-subst*!$23209$17Rald
     (record-mutator g$9246$19189$17Rald '2))
   (g$set-stx-ae*!$19203$17Rald
     g$set-stx-ae*!$23210$17Rald
     (record-mutator g$9246$19189$17Rald '3))
   (g$rp$19204$17Rald
     g$rp$23211$17Rald
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$19924$17Rald g$p$19925$17Rald g$wr$19926$17Rald)
          (begin
            (display '"#<syntax " g$p$19925$17Rald)
            (write
              (g$stx->datum$19233$17Rald g$x$19924$17Rald)
              g$p$19925$17Rald)
            ((case-lambda
               ((g$expr$19927$17Rald)
                (if (annotation? g$expr$19927$17Rald)
                  ((case-lambda
                     ((g$src$19928$17Rald)
                      (if (pair? g$src$19928$17Rald)
                        (begin
                          (display '" (" g$p$19925$17Rald)
                          (display
                            (cdr g$src$19928$17Rald)
                            g$p$19925$17Rald)
                          (display '" of " g$p$19925$17Rald)
                          (display
                            (car g$src$19928$17Rald)
                            g$p$19925$17Rald)
                          (display '")" g$p$19925$17Rald))
                        (void))))
                   (annotation-source g$expr$19927$17Rald))
                  (void))))
             (g$stx-expr$19196$17Rald g$x$19924$17Rald))
            (display '">" g$p$19925$17Rald))))))
   (g$datum->stx$19205$17Rald
     g$datum->stx$23212$17Rald
     (case-lambda
       ((g$id$19929$17Rald g$datum$19930$17Rald)
        (g$make-stx$19195$17Rald
          g$datum$19930$17Rald
          (g$stx-mark*$19197$17Rald g$id$19929$17Rald)
          (g$stx-subst*$19198$17Rald g$id$19929$17Rald)
          (g$stx-ae*$19199$17Rald g$id$19929$17Rald)))))
   (g$gen-mark$19206$17Rald
     g$gen-mark$23213$17Rald
     (case-lambda (() (string '#\m))))
   (g$anti-mark$19207$17Rald g$anti-mark$23214$17Rald '#f)
   (g$anti-mark?$19208$17Rald g$anti-mark?$23215$17Rald not)
   (g$join-wraps$19209$17Rald
     g$join-wraps$23216$17Rald
     (case-lambda
       ((g$m1*$19931$17Rald
          g$s1*$19932$17Rald
          g$ae1*$19933$17Rald
          g$e$19934$17Rald)
        (letrec* ((g$cancel$19935$17Rald
                    (case-lambda
                      ((g$ls1$19939$17Rald g$ls2$19940$17Rald)
                       ((letrec ((g$f$19941$17Rald
                                   (case-lambda
                                     ((g$x$19942$17Rald
                                        g$ls1$19943$17Rald)
                                      (if (null? g$ls1$19943$17Rald)
                                        (cdr g$ls2$19940$17Rald)
                                        (cons
                                          g$x$19942$17Rald
                                          (g$f$19941$17Rald
                                            (car g$ls1$19943$17Rald)
                                            (cdr g$ls1$19943$17Rald))))))))
                          g$f$19941$17Rald)
                        (car g$ls1$19939$17Rald)
                        (cdr g$ls1$19939$17Rald))))))
          ((case-lambda
             ((g$m2*$19936$17Rald
                g$s2*$19937$17Rald
                g$ae2*$19938$17Rald)
              (if (if (not (null? g$m1*$19931$17Rald))
                    (if (not (null? g$m2*$19936$17Rald))
                      (begin
                        '#f
                        (g$anti-mark?$19208$17Rald
                          (car g$m2*$19936$17Rald)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$19935$17Rald
                    g$m1*$19931$17Rald
                    g$m2*$19936$17Rald)
                  (g$cancel$19935$17Rald
                    g$s1*$19932$17Rald
                    g$s2*$19937$17Rald)
                  (g$cancel$19935$17Rald
                    g$ae1*$19933$17Rald
                    g$ae2*$19938$17Rald))
                (values
                  (append g$m1*$19931$17Rald g$m2*$19936$17Rald)
                  (append g$s1*$19932$17Rald g$s2*$19937$17Rald)
                  (append g$ae1*$19933$17Rald g$ae2*$19938$17Rald)))))
           (g$stx-mark*$19197$17Rald g$e$19934$17Rald)
           (g$stx-subst*$19198$17Rald g$e$19934$17Rald)
           (g$stx-ae*$19199$17Rald g$e$19934$17Rald))))))
   (g$mkstx$19210$17Rald
     g$mkstx$23217$17Rald
     (case-lambda
       ((g$e$19944$17Rald
          g$m*$19945$17Rald
          g$s*$19946$17Rald
          g$ae*$19947$17Rald)
        (if (if (g$stx?$19194$17Rald g$e$19944$17Rald)
              (begin
                '#f
                (not (g$top-marked?$19156$17Rald g$m*$19945$17Rald)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$19209$17Rald
                 g$m*$19945$17Rald
                 g$s*$19946$17Rald
                 g$ae*$19947$17Rald
                 g$e$19944$17Rald)))
            (case-lambda
              ((g$m*$19951$17Rald g$s*$19952$17Rald g$ae*$19953$17Rald)
               ((case-lambda
                  ((g$ae*$19954$17Rald
                     g$s*$19955$17Rald
                     g$m*$19956$17Rald)
                   (g$make-stx$19195$17Rald
                     (g$stx-expr$19196$17Rald g$e$19944$17Rald)
                     g$m*$19956$17Rald
                     g$s*$19955$17Rald
                     g$ae*$19954$17Rald)))
                g$ae*$19953$17Rald
                g$s*$19952$17Rald
                g$m*$19951$17Rald))))
          (g$make-stx$19195$17Rald
            g$e$19944$17Rald
            g$m*$19945$17Rald
            g$s*$19946$17Rald
            g$ae*$19947$17Rald)))))
   (g$add-mark$19211$17Rald
     g$add-mark$23218$17Rald
     (case-lambda
       ((g$m$19957$17Rald g$e$19958$17Rald g$ae$19959$17Rald)
        (g$mkstx$19210$17Rald
          g$e$19958$17Rald
          (list g$m$19957$17Rald)
          '(shift)
          (list g$ae$19959$17Rald)))))
   (g$add-subst$19212$17Rald
     g$add-subst$23219$17Rald
     (case-lambda
       ((g$subst$19960$17Rald g$e$19961$17Rald)
        (g$mkstx$19210$17Rald
          g$e$19961$17Rald
          '()
          (list g$subst$19960$17Rald)
          '()))))
   (g$syntax-kind?$19213$17Rald
     g$syntax-kind?$23220$17Rald
     (case-lambda
       ((g$x$19962$17Rald g$p?$19963$17Rald)
        (if (g$stx?$19194$17Rald g$x$19962$17Rald)
          (g$syntax-kind?$19213$17Rald
            (g$stx-expr$19196$17Rald g$x$19962$17Rald)
            g$p?$19963$17Rald)
          (if (annotation? g$x$19962$17Rald)
            (g$syntax-kind?$19213$17Rald
              (annotation-expression g$x$19962$17Rald)
              g$p?$19963$17Rald)
            (g$p?$19963$17Rald g$x$19962$17Rald))))))
   (g$syntax-vector->list$19214$17Rald
     g$syntax-vector->list$23221$17Rald
     (case-lambda
       ((g$x$19964$17Rald)
        (if (g$stx?$19194$17Rald g$x$19964$17Rald)
          ((case-lambda
             ((g$ls$19965$17Rald
                g$m*$19966$17Rald
                g$s*$19967$17Rald
                g$ae*$19968$17Rald)
              (g$map$11835$17Rald
                (case-lambda
                  ((g$x$19969$17Rald)
                   (g$mkstx$19210$17Rald
                     g$x$19969$17Rald
                     g$m*$19966$17Rald
                     g$s*$19967$17Rald
                     g$ae*$19968$17Rald)))
                g$ls$19965$17Rald)))
           (g$syntax-vector->list$19214$17Rald
             (g$stx-expr$19196$17Rald g$x$19964$17Rald))
           (g$stx-mark*$19197$17Rald g$x$19964$17Rald)
           (g$stx-subst*$19198$17Rald g$x$19964$17Rald)
           (g$stx-ae*$19199$17Rald g$x$19964$17Rald))
          (if (annotation? g$x$19964$17Rald)
            (g$syntax-vector->list$19214$17Rald
              (annotation-expression g$x$19964$17Rald))
            (if (g$vector?$12608$17Rald g$x$19964$17Rald)
              (vector->list g$x$19964$17Rald)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$19964$17Rald)))))))
   (g$syntax-pair?$19215$17Rald
     g$syntax-pair?$23222$17Rald
     (case-lambda
       ((g$x$19970$17Rald)
        (g$syntax-kind?$19213$17Rald g$x$19970$17Rald pair?))))
   (g$syntax-vector?$19216$17Rald
     g$syntax-vector?$23223$17Rald
     (case-lambda
       ((g$x$19971$17Rald)
        (g$syntax-kind?$19213$17Rald
          g$x$19971$17Rald
          g$vector?$12608$17Rald))))
   (g$syntax-null?$19217$17Rald
     g$syntax-null?$23224$17Rald
     (case-lambda
       ((g$x$19972$17Rald)
        (g$syntax-kind?$19213$17Rald g$x$19972$17Rald null?))))
   (g$syntax-list?$19218$17Rald
     g$syntax-list?$23225$17Rald
     (case-lambda
       ((g$x$19973$17Rald)
        ((case-lambda
           ((g$t$19974$17Rald)
            (if g$t$19974$17Rald
              g$t$19974$17Rald
              (begin
                '#f
                (if (g$syntax-pair?$19215$17Rald g$x$19973$17Rald)
                  (begin
                    '#f
                    (g$syntax-list?$19218$17Rald
                      (g$syntax-cdr$19220$17Rald g$x$19973$17Rald)))
                  '#f)))))
         (g$syntax-null?$19217$17Rald g$x$19973$17Rald)))))
   (g$syntax-car$19219$17Rald
     g$syntax-car$23226$17Rald
     (case-lambda
       ((g$x$19975$17Rald)
        (if (g$stx?$19194$17Rald g$x$19975$17Rald)
          (g$mkstx$19210$17Rald
            (g$syntax-car$19219$17Rald
              (g$stx-expr$19196$17Rald g$x$19975$17Rald))
            (g$stx-mark*$19197$17Rald g$x$19975$17Rald)
            (g$stx-subst*$19198$17Rald g$x$19975$17Rald)
            (g$stx-ae*$19199$17Rald g$x$19975$17Rald))
          (if (annotation? g$x$19975$17Rald)
            (g$syntax-car$19219$17Rald
              (annotation-expression g$x$19975$17Rald))
            (if (pair? g$x$19975$17Rald)
              (car g$x$19975$17Rald)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$19975$17Rald)))))))
   (g$syntax-cdr$19220$17Rald
     g$syntax-cdr$23227$17Rald
     (case-lambda
       ((g$x$19976$17Rald)
        (if (g$stx?$19194$17Rald g$x$19976$17Rald)
          (g$mkstx$19210$17Rald
            (g$syntax-cdr$19220$17Rald
              (g$stx-expr$19196$17Rald g$x$19976$17Rald))
            (g$stx-mark*$19197$17Rald g$x$19976$17Rald)
            (g$stx-subst*$19198$17Rald g$x$19976$17Rald)
            (g$stx-ae*$19199$17Rald g$x$19976$17Rald))
          (if (annotation? g$x$19976$17Rald)
            (g$syntax-cdr$19220$17Rald
              (annotation-expression g$x$19976$17Rald))
            (if (pair? g$x$19976$17Rald)
              (cdr g$x$19976$17Rald)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$19976$17Rald)))))))
   (g$syntax->list$19221$17Rald
     g$syntax->list$23228$17Rald
     (case-lambda
       ((g$x$19977$17Rald)
        (if (g$syntax-pair?$19215$17Rald g$x$19977$17Rald)
          (cons
            (g$syntax-car$19219$17Rald g$x$19977$17Rald)
            (g$syntax->list$19221$17Rald
              (g$syntax-cdr$19220$17Rald g$x$19977$17Rald)))
          (if (g$syntax-null?$19217$17Rald g$x$19977$17Rald)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$19977$17Rald))))))
   (g$id?$19222$17Rald
     g$id?$23229$17Rald
     (case-lambda
       ((g$x$19978$17Rald)
        (if (g$stx?$19194$17Rald g$x$19978$17Rald)
          (begin
            '#f
            ((case-lambda
               ((g$expr$19979$17Rald)
                (g$symbol?$12610$17Rald
                  (if (annotation? g$expr$19979$17Rald)
                    (annotation-stripped g$expr$19979$17Rald)
                    g$expr$19979$17Rald))))
             (g$stx-expr$19196$17Rald g$x$19978$17Rald)))
          '#f))))
   (g$id->sym$19223$17Rald
     g$id->sym$23230$17Rald
     (case-lambda
       ((g$x$19980$17Rald)
        (begin
          (if (not (g$stx?$19194$17Rald g$x$19980$17Rald))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$19980$17Rald)
            (void))
          ((case-lambda
             ((g$expr$19981$17Rald)
              ((case-lambda
                 ((g$sym$19982$17Rald)
                  (if (g$symbol?$12610$17Rald g$sym$19982$17Rald)
                    g$sym$19982$17Rald
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$19980$17Rald))))
               (if (annotation? g$expr$19981$17Rald)
                 (annotation-stripped g$expr$19981$17Rald)
                 g$expr$19981$17Rald))))
           (g$stx-expr$19196$17Rald g$x$19980$17Rald))))))
   (g$same-marks?$19224$17Rald
     g$same-marks?$23231$17Rald
     (case-lambda
       ((g$x$19983$17Rald g$y$19984$17Rald)
        ((case-lambda
           ((g$t$19985$17Rald)
            (if g$t$19985$17Rald
              g$t$19985$17Rald
              (begin
                '#f
                (if (pair? g$x$19983$17Rald)
                  (if (pair? g$y$19984$17Rald)
                    (if (eq? (car g$x$19983$17Rald)
                             (car g$y$19984$17Rald))
                      (begin
                        '#f
                        (g$same-marks?$19224$17Rald
                          (cdr g$x$19983$17Rald)
                          (cdr g$y$19984$17Rald)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$19983$17Rald)
           (begin '#f (null? g$y$19984$17Rald))
           '#f)))))
   (g$bound-id=?$19225$17Rald
     g$bound-id=?$23232$17Rald
     (case-lambda
       ((g$x$19986$17Rald g$y$19987$17Rald)
        (if (eq? (g$id->sym$19223$17Rald g$x$19986$17Rald)
                 (g$id->sym$19223$17Rald g$y$19987$17Rald))
          (begin
            '#f
            (g$same-marks?$19224$17Rald
              (g$stx-mark*$19197$17Rald g$x$19986$17Rald)
              (g$stx-mark*$19197$17Rald g$y$19987$17Rald)))
          '#f))))
   (g$free-id=?$19226$17Rald
     g$free-id=?$23233$17Rald
     (case-lambda
       ((g$i$19988$17Rald g$j$19989$17Rald)
        ((case-lambda
           ((g$t0$19990$17Rald g$t1$19991$17Rald)
            (if ((case-lambda
                   ((g$t$19992$17Rald)
                    (if g$t$19992$17Rald
                      g$t$19992$17Rald
                      (begin '#f g$t1$19991$17Rald))))
                 g$t0$19990$17Rald)
              (eq? g$t0$19990$17Rald g$t1$19991$17Rald)
              (eq? (g$id->sym$19223$17Rald g$i$19988$17Rald)
                   (g$id->sym$19223$17Rald g$j$19989$17Rald)))))
         (g$id->real-label$19236$17Rald g$i$19988$17Rald)
         (g$id->real-label$19236$17Rald g$j$19989$17Rald)))))
   (g$valid-bound-ids?$19227$17Rald
     g$valid-bound-ids?$23234$17Rald
     (case-lambda
       ((g$id*$19993$17Rald)
        (if (g$for-all$11833$17Rald
              g$id?$19222$17Rald
              g$id*$19993$17Rald)
          (begin
            '#f
            (g$distinct-bound-ids?$19228$17Rald g$id*$19993$17Rald))
          '#f))))
   (g$distinct-bound-ids?$19228$17Rald
     g$distinct-bound-ids?$23235$17Rald
     (case-lambda
       ((g$id*$19994$17Rald)
        ((case-lambda
           ((g$t$19995$17Rald)
            (if g$t$19995$17Rald
              g$t$19995$17Rald
              (begin
                '#f
                (if (not (g$bound-id-member?$19229$17Rald
                           (car g$id*$19994$17Rald)
                           (cdr g$id*$19994$17Rald)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$19228$17Rald
                      (cdr g$id*$19994$17Rald)))
                  '#f)))))
         (null? g$id*$19994$17Rald)))))
   (g$bound-id-member?$19229$17Rald
     g$bound-id-member?$23236$17Rald
     (case-lambda
       ((g$id$19996$17Rald g$id*$19997$17Rald)
        (if (pair? g$id*$19997$17Rald)
          (begin
            '#f
            ((case-lambda
               ((g$t$19998$17Rald)
                (if g$t$19998$17Rald
                  g$t$19998$17Rald
                  (begin
                    '#f
                    (g$bound-id-member?$19229$17Rald
                      g$id$19996$17Rald
                      (cdr g$id*$19997$17Rald))))))
             (g$bound-id=?$19225$17Rald
               g$id$19996$17Rald
               (car g$id*$19997$17Rald))))
          '#f))))
   (g$self-evaluating?$19230$17Rald
     g$self-evaluating?$23237$17Rald
     (case-lambda
       ((g$x$19999$17Rald)
        ((case-lambda
           ((g$t$20000$17Rald)
            (if g$t$20000$17Rald
              g$t$20000$17Rald
              ((case-lambda
                 ((g$t$20001$17Rald)
                  (if g$t$20001$17Rald
                    g$t$20001$17Rald
                    ((case-lambda
                       ((g$t$20002$17Rald)
                        (if g$t$20002$17Rald
                          g$t$20002$17Rald
                          ((case-lambda
                             ((g$t$20003$17Rald)
                              (if g$t$20003$17Rald
                                g$t$20003$17Rald
                                (begin
                                  '#f
                                  (g$bytevector?$12609$17Rald
                                    g$x$19999$17Rald)))))
                           (g$boolean?$12611$17Rald
                             g$x$19999$17Rald)))))
                     (g$char?$12607$17Rald g$x$19999$17Rald)))))
               (string? g$x$19999$17Rald)))))
         (number? g$x$19999$17Rald)))))
   (g$strip-annotations$19231$17Rald
     g$strip-annotations$23238$17Rald
     (case-lambda
       ((g$x$20004$17Rald)
        (if (pair? g$x$20004$17Rald)
          (cons
            (g$strip-annotations$19231$17Rald (car g$x$20004$17Rald))
            (g$strip-annotations$19231$17Rald (cdr g$x$20004$17Rald)))
          (if (g$vector?$12608$17Rald g$x$20004$17Rald)
            (g$vector-map$12679$17Rald
              g$strip-annotations$19231$17Rald
              g$x$20004$17Rald)
            (if (annotation? g$x$20004$17Rald)
              (annotation-stripped g$x$20004$17Rald)
              g$x$20004$17Rald))))))
   (g$strip$19232$17Rald
     g$strip$23239$17Rald
     (case-lambda
       ((g$x$20005$17Rald g$m*$20006$17Rald)
        (if (g$top-marked?$19156$17Rald g$m*$20006$17Rald)
          (if ((case-lambda
                 ((g$t$20007$17Rald)
                  (if g$t$20007$17Rald
                    g$t$20007$17Rald
                    ((case-lambda
                       ((g$t$20008$17Rald)
                        (if g$t$20008$17Rald
                          g$t$20008$17Rald
                          (begin
                            '#f
                            (if (g$vector?$12608$17Rald
                                  g$x$20005$17Rald)
                              (if (> (vector-length g$x$20005$17Rald)
                                     '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$12622$17Rald
                                      g$x$20005$17Rald
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$20005$17Rald)
                       (begin '#f (annotation? (car g$x$20005$17Rald)))
                       '#f)))))
               (annotation? g$x$20005$17Rald))
            (g$strip-annotations$19231$17Rald g$x$20005$17Rald)
            g$x$20005$17Rald)
          ((letrec ((g$f$20009$17Rald
                      (case-lambda
                        ((g$x$20010$17Rald)
                         (if (g$stx?$19194$17Rald g$x$20010$17Rald)
                           (g$strip$19232$17Rald
                             (g$stx-expr$19196$17Rald g$x$20010$17Rald)
                             (g$stx-mark*$19197$17Rald
                               g$x$20010$17Rald))
                           (if (annotation? g$x$20010$17Rald)
                             (annotation-stripped g$x$20010$17Rald)
                             (if (pair? g$x$20010$17Rald)
                               ((case-lambda
                                  ((g$a$20011$17Rald g$d$20012$17Rald)
                                   (if (if (eq? g$a$20011$17Rald
                                                (car g$x$20010$17Rald))
                                         (begin
                                           '#f
                                           (eq? g$d$20012$17Rald
                                                (cdr g$x$20010$17Rald)))
                                         '#f)
                                     g$x$20010$17Rald
                                     (cons
                                       g$a$20011$17Rald
                                       g$d$20012$17Rald))))
                                (g$f$20009$17Rald
                                  (car g$x$20010$17Rald))
                                (g$f$20009$17Rald
                                  (cdr g$x$20010$17Rald)))
                               (if (g$vector?$12608$17Rald
                                     g$x$20010$17Rald)
                                 ((case-lambda
                                    ((g$old$20013$17Rald)
                                     ((case-lambda
                                        ((g$new$20014$17Rald)
                                         (if (g$for-all$11833$17Rald
                                               eq?
                                               g$old$20013$17Rald
                                               g$new$20014$17Rald)
                                           g$x$20010$17Rald
                                           (g$list->vector$12620$17Rald
                                             g$new$20014$17Rald))))
                                      (g$map$11835$17Rald
                                        g$f$20009$17Rald
                                        g$old$20013$17Rald))))
                                  (vector->list g$x$20010$17Rald))
                                 g$x$20010$17Rald))))))))
             g$f$20009$17Rald)
           g$x$20005$17Rald)))))
   (g$stx->datum$19233$17Rald
     g$stx->datum$23240$17Rald
     (case-lambda
       ((g$x$20015$17Rald)
        (g$strip$19232$17Rald g$x$20015$17Rald '()))))
   (g$same-marks*?$19234$17Rald
     g$same-marks*?$23241$17Rald
     (case-lambda
       ((g$mark*$20016$17Rald g$mark**$20017$17Rald g$si$20018$17Rald)
        (if (null? g$si$20018$17Rald)
          '#f
          (if (g$same-marks?$19224$17Rald
                g$mark*$20016$17Rald
                (g$vector-ref$12622$17Rald
                  g$mark**$20017$17Rald
                  (car g$si$20018$17Rald)))
            (car g$si$20018$17Rald)
            (g$same-marks*?$19234$17Rald
              g$mark*$20016$17Rald
              g$mark**$20017$17Rald
              (cdr g$si$20018$17Rald)))))))
   (g$id->label$19235$17Rald
     g$id->label$23242$17Rald
     (case-lambda
       ((g$id$20019$17Rald)
        ((case-lambda
           ((g$t$20020$17Rald)
            (if g$t$20020$17Rald
              g$t$20020$17Rald
              (begin
                '#f
                ((case-lambda
                   ((g$t$20021$17Rald)
                    (if g$t$20021$17Rald
                      ((case-lambda
                         ((g$env$20022$17Rald)
                          ((case-lambda
                             ((g$rib$20023$17Rald)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$19161$17Rald
                                     g$id$20019$17Rald
                                     g$rib$20023$17Rald
                                     '#f)))
                                (case-lambda
                                  ((g$lab$20026$17Rald
                                     g$_loc$20027$17Rald)
                                   ((case-lambda
                                      ((g$_loc$20028$17Rald
                                         g$lab$20029$17Rald)
                                       (begin
                                         (g$extend-rib!$19183$17Rald
                                           g$rib$20023$17Rald
                                           g$id$20019$17Rald
                                           g$lab$20029$17Rald
                                           '#t)
                                         g$lab$20029$17Rald)))
                                    g$_loc$20027$17Rald
                                    g$lab$20026$17Rald))))))
                           (g$interaction-env-rib$19805$17Rald
                             g$env$20022$17Rald))))
                       g$t$20021$17Rald)
                      '#f)))
                 (g$top-level-context$19847$17Rald))))))
         (g$id->real-label$19236$17Rald g$id$20019$17Rald)))))
   (g$id->real-label$19236$17Rald
     g$id->real-label$23243$17Rald
     (case-lambda
       ((g$id$20030$17Rald)
        ((case-lambda
           ((g$sym$20031$17Rald)
            ((letrec ((g$search$20032$17Rald
                        (case-lambda
                          ((g$subst*$20033$17Rald g$mark*$20034$17Rald)
                           (if (null? g$subst*$20033$17Rald)
                             '#f
                             (if (eq? (car g$subst*$20033$17Rald)
                                      'shift)
                               (g$search$20032$17Rald
                                 (cdr g$subst*$20033$17Rald)
                                 (cdr g$mark*$20034$17Rald))
                               ((case-lambda
                                  ((g$rib$20035$17Rald)
                                   ((case-lambda
                                      ((g$t$20036$17Rald)
                                       (if g$t$20036$17Rald
                                         ((case-lambda
                                            ((g$ht$20037$17Rald)
                                             ((case-lambda
                                                ((g$si$20038$17Rald)
                                                 ((case-lambda
                                                    ((g$i$20039$17Rald)
                                                     (if g$i$20039$17Rald
                                                       (g$vector-ref$12622$17Rald
                                                         (g$rib-label*$19172$17Rald
                                                           g$rib$20035$17Rald)
                                                         g$i$20039$17Rald)
                                                       (g$search$20032$17Rald
                                                         (cdr g$subst*$20033$17Rald)
                                                         g$mark*$20034$17Rald))))
                                                  (if g$si$20038$17Rald
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$19234$17Rald
                                                        g$mark*$20034$17Rald
                                                        (g$rib-mark**$19171$17Rald
                                                          g$rib$20035$17Rald)
                                                        (g$reverse$12626$17Rald
                                                          g$si$20038$17Rald)))
                                                    '#f))))
                                              (g$hashtable-ref$12722$17Rald
                                                g$ht$20037$17Rald
                                                g$sym$20031$17Rald
                                                '#f))))
                                          g$t$20036$17Rald)
                                         ((case-lambda
                                            ((g$t$20040$17Rald)
                                             (if g$t$20040$17Rald
                                               g$t$20040$17Rald
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$20041$17Rald
                                                             (case-lambda
                                                               ((g$sym*$20042$17Rald
                                                                  g$mark**$20043$17Rald
                                                                  g$label*$20044$17Rald)
                                                                (if (null?
                                                                      g$sym*$20042$17Rald)
                                                                  (g$search$20032$17Rald
                                                                    (cdr g$subst*$20033$17Rald)
                                                                    g$mark*$20034$17Rald)
                                                                  (if (if (eq? (car g$sym*$20042$17Rald)
                                                                               g$sym$20031$17Rald)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$19224$17Rald
                                                                            (car g$mark**$20043$17Rald)
                                                                            g$mark*$20034$17Rald))
                                                                        '#f)
                                                                    (car g$label*$20044$17Rald)
                                                                    (g$f$20041$17Rald
                                                                      (cdr g$sym*$20042$17Rald)
                                                                      (cdr g$mark**$20043$17Rald)
                                                                      (cdr g$label*$20044$17Rald))))))))
                                                    g$f$20041$17Rald)
                                                  (g$rib-sym*$19170$17Rald
                                                    g$rib$20035$17Rald)
                                                  (g$rib-mark**$19171$17Rald
                                                    g$rib$20035$17Rald)
                                                  (g$rib-label*$19172$17Rald
                                                    g$rib$20035$17Rald))))))
                                          (g$find-label$19182$17Rald
                                            g$rib$20035$17Rald
                                            g$sym$20031$17Rald
                                            g$mark*$20034$17Rald)))))
                                    (g$rib-sealed/freq$19173$17Rald
                                      g$rib$20035$17Rald))))
                                (car g$subst*$20033$17Rald))))))))
               g$search$20032$17Rald)
             (g$stx-subst*$19198$17Rald g$id$20030$17Rald)
             (g$stx-mark*$19197$17Rald g$id$20030$17Rald))))
         (g$id->sym$19223$17Rald g$id$20030$17Rald)))))
   (g$label->binding$19237$17Rald
     g$label->binding$23244$17Rald
     (case-lambda
       ((g$x$20045$17Rald g$r$20046$17Rald)
        (if (not g$x$20045$17Rald)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$20047$17Rald)
              (if g$t$20047$17Rald
                ((case-lambda
                   ((g$b$20048$17Rald)
                    (if (if (pair? g$b$20048$17Rald)
                          (begin
                            '#f
                            (eq? (car g$b$20048$17Rald) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11835$17Rald
                          g$bless$19683$17Rald
                          (cdr g$b$20048$17Rald)))
                      (if (if (pair? g$b$20048$17Rald)
                            (begin
                              '#f
                              (eq? (car g$b$20048$17Rald) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$20049$17Rald g$loc$20050$17Rald)
                            (cons
                              '$rtd
                              (symbol-value g$loc$20050$17Rald))))
                         (g$cadr$12628$17Rald g$b$20048$17Rald)
                         (g$cddr$12630$17Rald g$b$20048$17Rald))
                        g$b$20048$17Rald))))
                 g$t$20047$17Rald)
                ((case-lambda
                   ((g$t$20051$17Rald)
                    (if g$t$20051$17Rald
                      (cdr g$t$20051$17Rald)
                      ((case-lambda
                         ((g$t$20052$17Rald)
                          (if g$t$20052$17Rald
                            ((case-lambda
                               ((g$env$20053$17Rald)
                                ((case-lambda
                                   ((g$t$20054$17Rald)
                                    (if g$t$20054$17Rald
                                      ((case-lambda
                                         ((g$p$20055$17Rald)
                                          (g$cons*$11837$17Rald
                                            'lexical
                                            (cdr g$p$20055$17Rald)
                                            '#f)))
                                       g$t$20054$17Rald)
                                      '(displaced-lexical . #f))))
                                 (g$assq$11823$17Rald
                                   g$x$20045$17Rald
                                   (g$interaction-env-locs$19807$17Rald
                                     g$env$20053$17Rald)))))
                             g$t$20052$17Rald)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$19847$17Rald)))))
                 (g$assq$11823$17Rald
                   g$x$20045$17Rald
                   g$r$20046$17Rald)))))
           (g$imported-label->binding$18927$17Rald
             g$x$20045$17Rald))))))
   (g$make-binding$19238$17Rald g$make-binding$23245$17Rald cons)
   (g$binding-type$19239$17Rald g$binding-type$23246$17Rald car)
   (g$binding-value$19240$17Rald g$binding-value$23247$17Rald cdr)
   (g$raise-unbound-error$19241$17Rald
     g$raise-unbound-error$23248$17Rald
     (case-lambda
       ((g$id$20056$17Rald)
        (g$syntax-violation*$19838$17Rald
          '#f
          '"unbound identifier"
          g$id$20056$17Rald
          (g$make-undefined-violation$13399$17Rald)))))
   (g$syntax-type$19242$17Rald
     g$syntax-type$23249$17Rald
     (case-lambda
       ((g$e$20057$17Rald g$r$20058$17Rald)
        (if (g$id?$19222$17Rald g$e$20057$17Rald)
          ((case-lambda
             ((g$id$20059$17Rald)
              ((case-lambda
                 ((g$label$20060$17Rald)
                  ((case-lambda
                     ((g$b$20061$17Rald)
                      ((case-lambda
                         ((g$type$20062$17Rald)
                          (begin
                            (if (not g$label$20060$17Rald)
                              (g$raise-unbound-error$19241$17Rald
                                g$id$20059$17Rald)
                              (void))
                            ((case-lambda
                               ((g$t$20063$17Rald)
                                (if (g$memv$11828$17Rald
                                      g$t$20063$17Rald
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$20062$17Rald
                                    (g$binding-value$19240$17Rald
                                      g$b$20061$17Rald)
                                    g$id$20059$17Rald)
                                  (values 'other '#f '#f))))
                             g$type$20062$17Rald))))
                       (g$binding-type$19239$17Rald g$b$20061$17Rald))))
                   (g$label->binding$19237$17Rald
                     g$label$20060$17Rald
                     g$r$20058$17Rald))))
               (g$id->label$19235$17Rald g$id$20059$17Rald))))
           g$e$20057$17Rald)
          (if (g$syntax-pair?$19215$17Rald g$e$20057$17Rald)
            ((case-lambda
               ((g$id$20064$17Rald)
                (if (g$id?$19222$17Rald g$id$20064$17Rald)
                  ((case-lambda
                     ((g$label$20065$17Rald)
                      ((case-lambda
                         ((g$b$20066$17Rald)
                          ((case-lambda
                             ((g$type$20067$17Rald)
                              (begin
                                (if (not g$label$20065$17Rald)
                                  (g$raise-unbound-error$19241$17Rald
                                    g$id$20064$17Rald)
                                  (void))
                                ((case-lambda
                                   ((g$t$20068$17Rald)
                                    (if (g$memv$11828$17Rald
                                          g$t$20068$17Rald
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$20067$17Rald
                                        (g$binding-value$19240$17Rald
                                          g$b$20066$17Rald)
                                        g$id$20064$17Rald)
                                      (values 'call '#f '#f))))
                                 g$type$20067$17Rald))))
                           (g$binding-type$19239$17Rald
                             g$b$20066$17Rald))))
                       (g$label->binding$19237$17Rald
                         g$label$20065$17Rald
                         g$r$20058$17Rald))))
                   (g$id->label$19235$17Rald g$id$20064$17Rald))
                  (values 'call '#f '#f))))
             (g$syntax-car$19219$17Rald g$e$20057$17Rald))
            ((case-lambda
               ((g$d$20069$17Rald)
                (if (g$self-evaluating?$19230$17Rald g$d$20069$17Rald)
                  (values 'constant g$d$20069$17Rald '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$19233$17Rald g$e$20057$17Rald)))))))
   (g$sanitize-binding$19265$17Rald
     g$sanitize-binding$23250$17Rald
     (case-lambda
       ((g$x$20070$17Rald g$src$20071$17Rald)
        (if (g$procedure?$12612$17Rald g$x$20070$17Rald)
          (g$cons*$11837$17Rald
            'local-macro
            g$x$20070$17Rald
            g$src$20071$17Rald)
          (if (if (pair? g$x$20070$17Rald)
                (if (eq? (car g$x$20070$17Rald) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12612$17Rald (cdr g$x$20070$17Rald)))
                  '#f)
                '#f)
            (g$cons*$11837$17Rald
              'local-macro!
              (cdr g$x$20070$17Rald)
              g$src$20071$17Rald)
            (if (if (pair? g$x$20070$17Rald)
                  (begin '#f (eq? (car g$x$20070$17Rald) '$rtd))
                  '#f)
              g$x$20070$17Rald
              (if (if (pair? g$x$20070$17Rald)
                    (begin '#f (eq? (car g$x$20070$17Rald) 'ctv))
                    '#f)
                (g$cons*$11837$17Rald
                  'local-ctv
                  (cdr g$x$20070$17Rald)
                  g$src$20071$17Rald)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$20070$17Rald))))))))
   (g$make-variable-transformer$19266$17Rald
     g$make-variable-transformer$23251$17Rald
     (case-lambda
       ((g$x$20072$17Rald)
        (if (g$procedure?$12612$17Rald g$x$20072$17Rald)
          (cons 'macro! g$x$20072$17Rald)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$20072$17Rald)))))
   (g$make-compile-time-value$19267$17Rald
     g$make-compile-time-value$23252$17Rald
     (case-lambda ((g$x$20073$17Rald) (cons 'ctv g$x$20073$17Rald))))
   (g$variable-transformer?$19268$17Rald
     g$variable-transformer?$23253$17Rald
     (case-lambda
       ((g$x$20074$17Rald)
        (if (pair? g$x$20074$17Rald)
          (if (eq? (car g$x$20074$17Rald) 'macro!)
            (begin
              '#f
              (g$procedure?$12612$17Rald (cdr g$x$20074$17Rald)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$19269$17Rald
     g$variable-transformer-procedure$23254$17Rald
     (case-lambda
       ((g$x$20075$17Rald)
        (if (g$variable-transformer?$19268$17Rald g$x$20075$17Rald)
          (cdr g$x$20075$17Rald)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$20075$17Rald)))))
   (g$make-eval-transformer$19270$17Rald
     g$make-eval-transformer$23255$17Rald
     (case-lambda
       ((g$x$20076$17Rald)
        (g$sanitize-binding$19265$17Rald
          (eval-core (g$expanded->core$18660$17Rald g$x$20076$17Rald))
          g$x$20076$17Rald))))
   (g$parse-define$19660$17Rald
     g$parse-define$23256$17Rald
     (case-lambda
       ((g$x$20077$17Rald)
        ((case-lambda
           ((g$t$20078$17Rald)
            ((case-lambda
               ((g$ls/false$20079$17Rald)
                (if (if g$ls/false$20079$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20080$17Rald
                               g$fmls$20081$17Rald
                               g$b$20082$17Rald
                               g$b*$20083$17Rald)
                             (g$id?$19222$17Rald g$id$20080$17Rald)))
                          g$ls/false$20079$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20084$17Rald
                         g$fmls$20085$17Rald
                         g$b$20086$17Rald
                         g$b*$20087$17Rald)
                       (begin
                         (g$verify-formals$19740$17Rald
                           g$fmls$20085$17Rald
                           g$x$20077$17Rald)
                         (values
                           g$id$20084$17Rald
                           (cons
                             'defun
                             (cons
                               g$fmls$20085$17Rald
                               (cons
                                 g$b$20086$17Rald
                                 g$b*$20087$17Rald)))))))
                    g$ls/false$20079$17Rald)
                  ((case-lambda
                     ((g$t$20088$17Rald)
                      ((case-lambda
                         ((g$ls/false$20089$17Rald)
                          (if (if g$ls/false$20089$17Rald
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$20090$17Rald
                                         g$val$20091$17Rald)
                                       (g$id?$19222$17Rald
                                         g$id$20090$17Rald)))
                                    g$ls/false$20089$17Rald))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$20092$17Rald g$val$20093$17Rald)
                                 (values
                                   g$id$20092$17Rald
                                   (cons 'expr g$val$20093$17Rald))))
                              g$ls/false$20089$17Rald)
                            ((case-lambda
                               ((g$t$20094$17Rald)
                                ((case-lambda
                                   ((g$ls/false$20095$17Rald)
                                    (if (if g$ls/false$20095$17Rald
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$20096$17Rald)
                                                 (g$id?$19222$17Rald
                                                   g$id$20096$17Rald)))
                                              g$ls/false$20095$17Rald))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$20097$17Rald)
                                           (values
                                             g$id$20097$17Rald
                                             (cons
                                               'expr
                                               (g$bless$19683$17Rald
                                                 '(void))))))
                                        g$ls/false$20095$17Rald)
                                      (g$syntax-violation$19839$17Rald
                                        '#f
                                        '"invalid syntax"
                                        g$t$20094$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$20094$17Rald
                                   '(_ any)))))
                             g$t$20088$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20088$17Rald
                         '(_ any any)))))
                   g$t$20078$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20078$17Rald
               '(_ (any . any) any . each-any)))))
         g$x$20077$17Rald))))
   (g$parse-define-syntax$19661$17Rald
     g$parse-define-syntax$23257$17Rald
     (case-lambda
       ((g$x$20098$17Rald)
        ((case-lambda
           ((g$t$20099$17Rald)
            ((case-lambda
               ((g$ls/false$20100$17Rald)
                (if (if g$ls/false$20100$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20101$17Rald g$val$20102$17Rald)
                             (g$id?$19222$17Rald g$id$20101$17Rald)))
                          g$ls/false$20100$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20103$17Rald g$val$20104$17Rald)
                       (values g$id$20103$17Rald g$val$20104$17Rald)))
                    g$ls/false$20100$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20099$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20099$17Rald
               '(_ any any)))))
         g$x$20098$17Rald))))
   (g$scheme-stx-hashtable$19662$17Rald
     g$scheme-stx-hashtable$23258$17Rald
     (g$make-eq-hashtable$12719$17Rald))
   (g$scheme-stx$19663$17Rald
     g$scheme-stx$23259$17Rald
     (case-lambda
       ((g$sym$20105$17Rald)
        ((case-lambda
           ((g$t$20106$17Rald)
            (if g$t$20106$17Rald
              g$t$20106$17Rald
              (begin
                '#f
                ((case-lambda
                   ((g$subst$20107$17Rald)
                    ((case-lambda
                       ((g$stx$20108$17Rald)
                        ((case-lambda
                           ((g$stx$20109$17Rald)
                            (begin
                              (g$hashtable-set!$12723$17Rald
                                g$scheme-stx-hashtable$19662$17Rald
                                g$sym$20105$17Rald
                                g$stx$20109$17Rald)
                              g$stx$20109$17Rald)))
                         ((case-lambda
                            ((g$t$20110$17Rald)
                             (if g$t$20110$17Rald
                               ((case-lambda
                                  ((g$x$20111$17Rald)
                                   ((case-lambda
                                      ((g$name$20112$17Rald
                                         g$label$20113$17Rald)
                                       (g$add-subst$19212$17Rald
                                         (g$make-rib$19169$17Rald
                                           (list g$name$20112$17Rald)
                                           (list
                                             g$top-mark*$19155$17Rald)
                                           (list g$label$20113$17Rald)
                                           '#f
                                           '#f)
                                         g$stx$20108$17Rald)))
                                    (car g$x$20111$17Rald)
                                    (cdr g$x$20111$17Rald))))
                                g$t$20110$17Rald)
                               g$stx$20108$17Rald)))
                          (g$assq$11823$17Rald
                            g$sym$20105$17Rald
                            g$subst$20107$17Rald)))))
                     (g$make-stx$19195$17Rald
                       g$sym$20105$17Rald
                       g$top-mark*$19155$17Rald
                       '()
                       '()))))
                 (g$library-subst$18885$17Rald
                   (g$find-library-by-name$18921$17Rald
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12722$17Rald
           g$scheme-stx-hashtable$19662$17Rald
           g$sym$20105$17Rald
           '#f)))))
   (g$lexical-var$19664$17Rald g$lexical-var$23260$17Rald car)
   (g$lexical-mutable?$19665$17Rald g$lexical-mutable?$23261$17Rald cdr)
   (g$set-lexical-mutable!$19666$17Rald
     g$set-lexical-mutable!$23262$17Rald
     set-cdr!)
   (g$add-lexical$19667$17Rald
     g$add-lexical$23263$17Rald
     (case-lambda
       ((g$lab$20114$17Rald g$lex$20115$17Rald g$r$20116$17Rald)
        (cons
          (g$cons*$11837$17Rald
            g$lab$20114$17Rald
            'lexical
            g$lex$20115$17Rald
            '#f)
          g$r$20116$17Rald))))
   (g$add-lexicals$19668$17Rald
     g$add-lexicals$23264$17Rald
     (case-lambda
       ((g$lab*$20117$17Rald g$lex*$20118$17Rald g$r$20119$17Rald)
        (if (null? g$lab*$20117$17Rald)
          g$r$20119$17Rald
          (g$add-lexicals$19668$17Rald
            (cdr g$lab*$20117$17Rald)
            (cdr g$lex*$20118$17Rald)
            (g$add-lexical$19667$17Rald
              (car g$lab*$20117$17Rald)
              (car g$lex*$20118$17Rald)
              g$r$20119$17Rald))))))
   (g$letrec-helper$19669$17Rald
     g$letrec-helper$23265$17Rald
     (case-lambda
       ((g$e$20120$17Rald
          g$r$20121$17Rald
          g$mr$20122$17Rald
          g$build$20123$17Rald)
        ((case-lambda
           ((g$t$20124$17Rald)
            ((case-lambda
               ((g$ls/false$20125$17Rald)
                (if g$ls/false$20125$17Rald
                  (apply
                    (case-lambda
                      ((g$lhs*$20126$17Rald
                         g$rhs*$20127$17Rald
                         g$b$20128$17Rald
                         g$b*$20129$17Rald)
                       (if (not (g$valid-bound-ids?$19227$17Rald
                                  g$lhs*$20126$17Rald))
                         (g$invalid-fmls-error$19685$17Rald
                           g$e$20120$17Rald
                           g$lhs*$20126$17Rald)
                         ((case-lambda
                            ((g$lex*$20130$17Rald g$lab*$20131$17Rald)
                             ((case-lambda
                                ((g$rib$20132$17Rald g$r$20133$17Rald)
                                 ((case-lambda
                                    ((g$body$20134$17Rald
                                       g$rhs*$20135$17Rald)
                                     (g$build$20123$17Rald
                                       '#f
                                       g$lex*$20130$17Rald
                                       g$rhs*$20135$17Rald
                                       g$body$20134$17Rald)))
                                  (g$chi-internal$19749$17Rald
                                    (g$add-subst$19212$17Rald
                                      g$rib$20132$17Rald
                                      (cons
                                        g$b$20128$17Rald
                                        g$b*$20129$17Rald))
                                    g$r$20133$17Rald
                                    g$mr$20122$17Rald)
                                  (g$chi-expr*$19736$17Rald
                                    (g$map$11835$17Rald
                                      (case-lambda
                                        ((g$x$20136$17Rald)
                                         (g$add-subst$19212$17Rald
                                           g$rib$20132$17Rald
                                           g$x$20136$17Rald)))
                                      g$rhs*$20127$17Rald)
                                    g$r$20133$17Rald
                                    g$mr$20122$17Rald))))
                              (g$make-full-rib$19188$17Rald
                                g$lhs*$20126$17Rald
                                g$lab*$20131$17Rald)
                              (g$add-lexicals$19668$17Rald
                                g$lab*$20131$17Rald
                                g$lex*$20130$17Rald
                                g$r$20121$17Rald))))
                          (g$map$11835$17Rald
                            g$gen-lexical$19157$17Rald
                            g$lhs*$20126$17Rald)
                          (g$map$11835$17Rald
                            g$gen-label$19159$17Rald
                            g$lhs*$20126$17Rald)))))
                    g$ls/false$20125$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20124$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20124$17Rald
               '(_ #(each (any any)) any . each-any)))))
         g$e$20120$17Rald))))
   (g$letrec-transformer$19670$17Rald
     g$letrec-transformer$23266$17Rald
     (case-lambda
       ((g$e$20137$17Rald g$r$20138$17Rald g$mr$20139$17Rald)
        (g$letrec-helper$19669$17Rald
          g$e$20137$17Rald
          g$r$20138$17Rald
          g$mr$20139$17Rald
          g$build-letrec$19149$17Rald))))
   (g$letrec*-transformer$19671$17Rald
     g$letrec*-transformer$23267$17Rald
     (case-lambda
       ((g$e$20140$17Rald g$r$20141$17Rald g$mr$20142$17Rald)
        (g$letrec-helper$19669$17Rald
          g$e$20140$17Rald
          g$r$20141$17Rald
          g$mr$20142$17Rald
          g$build-letrec*$19150$17Rald))))
   (g$fluid-let-syntax-transformer$19672$17Rald
     g$fluid-let-syntax-transformer$23268$17Rald
     (case-lambda
       ((g$e$20143$17Rald g$r$20144$17Rald g$mr$20145$17Rald)
        (letrec* ((g$lookup$20146$17Rald
                    (case-lambda
                      ((g$x$20156$17Rald)
                       ((case-lambda
                          ((g$t$20157$17Rald)
                           (if g$t$20157$17Rald
                             g$t$20157$17Rald
                             (begin
                               '#f
                               (g$syntax-violation$19839$17Rald
                                 '#f
                                 '"unbound identifier"
                                 g$e$20143$17Rald
                                 g$x$20156$17Rald)))))
                        (g$id->label$19235$17Rald g$x$20156$17Rald))))))
          ((case-lambda
             ((g$t$20147$17Rald)
              ((case-lambda
                 ((g$ls/false$20148$17Rald)
                  (if g$ls/false$20148$17Rald
                    (apply
                      (case-lambda
                        ((g$lhs*$20149$17Rald
                           g$rhs*$20150$17Rald
                           g$b$20151$17Rald
                           g$b*$20152$17Rald)
                         (if (not (g$valid-bound-ids?$19227$17Rald
                                    g$lhs*$20149$17Rald))
                           (g$invalid-fmls-error$19685$17Rald
                             g$e$20143$17Rald
                             g$lhs*$20149$17Rald)
                           ((case-lambda
                              ((g$lab*$20153$17Rald g$rhs*$20154$17Rald)
                               (g$chi-internal$19749$17Rald
                                 (cons
                                   g$b$20151$17Rald
                                   g$b*$20152$17Rald)
                                 (append
                                   (g$map$11835$17Rald
                                     cons
                                     g$lab*$20153$17Rald
                                     g$rhs*$20154$17Rald)
                                   g$r$20144$17Rald)
                                 (append
                                   (g$map$11835$17Rald
                                     cons
                                     g$lab*$20153$17Rald
                                     g$rhs*$20154$17Rald)
                                   g$mr$20145$17Rald))))
                            (g$map$11835$17Rald
                              g$lookup$20146$17Rald
                              g$lhs*$20149$17Rald)
                            (g$map$11835$17Rald
                              (case-lambda
                                ((g$x$20155$17Rald)
                                 (g$make-eval-transformer$19270$17Rald
                                   (g$expand-transformer$19768$17Rald
                                     g$x$20155$17Rald
                                     g$mr$20145$17Rald))))
                              g$rhs*$20150$17Rald)))))
                      g$ls/false$20148$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$20147$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20147$17Rald
                 '(_ #(each (any any)) any . each-any)))))
           g$e$20143$17Rald)))))
   (g$type-descriptor-transformer$19673$17Rald
     g$type-descriptor-transformer$23269$17Rald
     (case-lambda
       ((g$e$20158$17Rald g$r$20159$17Rald g$mr$20160$17Rald)
        ((case-lambda
           ((g$t$20161$17Rald)
            ((case-lambda
               ((g$ls/false$20162$17Rald)
                (if (if g$ls/false$20162$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20163$17Rald)
                             (g$id?$19222$17Rald g$id$20163$17Rald)))
                          g$ls/false$20162$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20164$17Rald)
                       ((case-lambda
                          ((g$lab$20165$17Rald)
                           ((case-lambda
                              ((g$b$20166$17Rald)
                               ((case-lambda
                                  ((g$type$20167$17Rald)
                                   (begin
                                     (if (not g$lab$20165$17Rald)
                                       (g$raise-unbound-error$19241$17Rald
                                         g$id$20164$17Rald)
                                       (void))
                                     (if (not (if (eq? g$type$20167$17Rald
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$19240$17Rald
                                                           g$b$20166$17Rald))))
                                                '#f))
                                       (g$syntax-violation$19839$17Rald
                                         '#f
                                         '"not a record type"
                                         g$e$20158$17Rald)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$19240$17Rald
                                         g$b$20166$17Rald)))))
                                (g$binding-type$19239$17Rald
                                  g$b$20166$17Rald))))
                            (g$label->binding$19237$17Rald
                              g$lab$20165$17Rald
                              g$r$20159$17Rald))))
                        (g$id->label$19235$17Rald g$id$20164$17Rald))))
                    g$ls/false$20162$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20161$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20161$17Rald
               '(_ any)))))
         g$e$20158$17Rald))))
   (g$record-type-descriptor-transformer$19674$17Rald
     g$record-type-descriptor-transformer$23270$17Rald
     (case-lambda
       ((g$e$20168$17Rald g$r$20169$17Rald g$mr$20170$17Rald)
        ((case-lambda
           ((g$t$20171$17Rald)
            ((case-lambda
               ((g$ls/false$20172$17Rald)
                (if (if g$ls/false$20172$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20173$17Rald)
                             (g$id?$19222$17Rald g$id$20173$17Rald)))
                          g$ls/false$20172$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20174$17Rald)
                       ((case-lambda
                          ((g$lab$20175$17Rald)
                           ((case-lambda
                              ((g$b$20176$17Rald)
                               ((case-lambda
                                  ((g$type$20177$17Rald)
                                   (begin
                                     (if (not g$lab$20175$17Rald)
                                       (g$raise-unbound-error$19241$17Rald
                                         g$id$20174$17Rald)
                                       (void))
                                     (if (not (if (eq? g$type$20177$17Rald
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19240$17Rald
                                                      g$b$20176$17Rald)))
                                                '#f))
                                       (g$syntax-violation$19839$17Rald
                                         '#f
                                         '"not a record type"
                                         g$e$20168$17Rald)
                                       (void))
                                     (g$chi-expr$19738$17Rald
                                       (car (g$binding-value$19240$17Rald
                                              g$b$20176$17Rald))
                                       g$r$20169$17Rald
                                       g$mr$20170$17Rald))))
                                (g$binding-type$19239$17Rald
                                  g$b$20176$17Rald))))
                            (g$label->binding$19237$17Rald
                              g$lab$20175$17Rald
                              g$r$20169$17Rald))))
                        (g$id->label$19235$17Rald g$id$20174$17Rald))))
                    g$ls/false$20172$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20171$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20171$17Rald
               '(_ any)))))
         g$e$20168$17Rald))))
   (g$record-constructor-descriptor-transformer$19675$17Rald
     g$record-constructor-descriptor-transformer$23271$17Rald
     (case-lambda
       ((g$e$20178$17Rald g$r$20179$17Rald g$mr$20180$17Rald)
        ((case-lambda
           ((g$t$20181$17Rald)
            ((case-lambda
               ((g$ls/false$20182$17Rald)
                (if (if g$ls/false$20182$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20183$17Rald)
                             (g$id?$19222$17Rald g$id$20183$17Rald)))
                          g$ls/false$20182$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20184$17Rald)
                       ((case-lambda
                          ((g$lab$20185$17Rald)
                           ((case-lambda
                              ((g$b$20186$17Rald)
                               ((case-lambda
                                  ((g$type$20187$17Rald)
                                   (begin
                                     (if (not g$lab$20185$17Rald)
                                       (g$raise-unbound-error$19241$17Rald
                                         g$id$20184$17Rald)
                                       (void))
                                     (if (not (if (eq? g$type$20187$17Rald
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19240$17Rald
                                                      g$b$20186$17Rald)))
                                                '#f))
                                       (g$syntax-violation$19839$17Rald
                                         '#f
                                         '"invalid type"
                                         g$e$20178$17Rald)
                                       (void))
                                     (g$chi-expr$19738$17Rald
                                       (g$cadr$12628$17Rald
                                         (g$binding-value$19240$17Rald
                                           g$b$20186$17Rald))
                                       g$r$20179$17Rald
                                       g$mr$20180$17Rald))))
                                (g$binding-type$19239$17Rald
                                  g$b$20186$17Rald))))
                            (g$label->binding$19237$17Rald
                              g$lab$20185$17Rald
                              g$r$20179$17Rald))))
                        (g$id->label$19235$17Rald g$id$20184$17Rald))))
                    g$ls/false$20182$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20181$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20181$17Rald
               '(_ any)))))
         g$e$20178$17Rald))))
   (g$when-macro$19676$17Rald
     g$when-macro$23272$17Rald
     (case-lambda
       ((g$e$20188$17Rald)
        ((case-lambda
           ((g$t$20189$17Rald)
            ((case-lambda
               ((g$ls/false$20190$17Rald)
                (if g$ls/false$20190$17Rald
                  (apply
                    (case-lambda
                      ((g$test$20191$17Rald
                         g$e$20192$17Rald
                         g$e*$20193$17Rald)
                       (g$bless$19683$17Rald
                         (list
                           'if
                           g$test$20191$17Rald
                           (cons
                             'begin
                             (cons
                               g$e$20192$17Rald
                               g$e*$20193$17Rald))))))
                    g$ls/false$20190$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20189$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20189$17Rald
               '(_ any any . each-any)))))
         g$e$20188$17Rald))))
   (g$unless-macro$19677$17Rald
     g$unless-macro$23273$17Rald
     (case-lambda
       ((g$e$20194$17Rald)
        ((case-lambda
           ((g$t$20195$17Rald)
            ((case-lambda
               ((g$ls/false$20196$17Rald)
                (if g$ls/false$20196$17Rald
                  (apply
                    (case-lambda
                      ((g$test$20197$17Rald
                         g$e$20198$17Rald
                         g$e*$20199$17Rald)
                       (g$bless$19683$17Rald
                         (list
                           'if
                           (list 'not g$test$20197$17Rald)
                           (cons
                             'begin
                             (cons
                               g$e$20198$17Rald
                               g$e*$20199$17Rald))))))
                    g$ls/false$20196$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20195$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20195$17Rald
               '(_ any any . each-any)))))
         g$e$20194$17Rald))))
   (g$if-transformer$19678$17Rald
     g$if-transformer$23274$17Rald
     (case-lambda
       ((g$e$20200$17Rald g$r$20201$17Rald g$mr$20202$17Rald)
        ((case-lambda
           ((g$t$20203$17Rald)
            ((case-lambda
               ((g$ls/false$20204$17Rald)
                (if g$ls/false$20204$17Rald
                  (apply
                    (case-lambda
                      ((g$e0$20205$17Rald
                         g$e1$20206$17Rald
                         g$e2$20207$17Rald)
                       (list
                         'if
                         (g$chi-expr$19738$17Rald
                           g$e0$20205$17Rald
                           g$r$20201$17Rald
                           g$mr$20202$17Rald)
                         (g$chi-expr$19738$17Rald
                           g$e1$20206$17Rald
                           g$r$20201$17Rald
                           g$mr$20202$17Rald)
                         (g$chi-expr$19738$17Rald
                           g$e2$20207$17Rald
                           g$r$20201$17Rald
                           g$mr$20202$17Rald))))
                    g$ls/false$20204$17Rald)
                  ((case-lambda
                     ((g$t$20208$17Rald)
                      ((case-lambda
                         ((g$ls/false$20209$17Rald)
                          (if g$ls/false$20209$17Rald
                            (apply
                              (case-lambda
                                ((g$e0$20210$17Rald g$e1$20211$17Rald)
                                 (list
                                   'if
                                   (g$chi-expr$19738$17Rald
                                     g$e0$20210$17Rald
                                     g$r$20201$17Rald
                                     g$mr$20202$17Rald)
                                   (g$chi-expr$19738$17Rald
                                     g$e1$20211$17Rald
                                     g$r$20201$17Rald
                                     g$mr$20202$17Rald)
                                   (g$build-void$19148$17Rald))))
                              g$ls/false$20209$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20208$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20208$17Rald
                         '(_ any any)))))
                   g$t$20203$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20203$17Rald
               '(_ any any any)))))
         g$e$20200$17Rald))))
   (g$case-macro$19679$17Rald
     g$case-macro$23275$17Rald
     (case-lambda
       ((g$e$20212$17Rald)
        (letrec* ((g$build-last$20213$17Rald
                    (case-lambda
                      ((g$cls$20233$17Rald)
                       ((case-lambda
                          ((g$t$20234$17Rald)
                           ((case-lambda
                              ((g$ls/false$20235$17Rald)
                               (if g$ls/false$20235$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$e$20236$17Rald
                                        g$e*$20237$17Rald)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$20236$17Rald
                                          g$e*$20237$17Rald))))
                                   g$ls/false$20235$17Rald)
                                 ((case-lambda
                                    ((g$t$20238$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$20239$17Rald)
                                         (if g$ls/false$20239$17Rald
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$20214$17Rald
                                                  g$cls$20233$17Rald
                                                  '(if #f #f))))
                                             g$ls/false$20239$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$20238$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$20238$17Rald
                                        '_))))
                                  g$t$20234$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$20234$17Rald
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$20233$17Rald))))
                  (g$build-one$20214$17Rald
                    (case-lambda
                      ((g$cls$20226$17Rald g$k$20227$17Rald)
                       ((case-lambda
                          ((g$t$20228$17Rald)
                           ((case-lambda
                              ((g$ls/false$20229$17Rald)
                               (if g$ls/false$20229$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$d*$20230$17Rald
                                        g$e$20231$17Rald
                                        g$e*$20232$17Rald)
                                      (if (= '1
                                             (length g$d*$20230$17Rald))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$20230$17Rald)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20231$17Rald
                                              g$e*$20232$17Rald))
                                          g$k$20227$17Rald)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$20230$17Rald))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20231$17Rald
                                              g$e*$20232$17Rald))
                                          g$k$20227$17Rald))))
                                   g$ls/false$20229$17Rald)
                                 (g$syntax-violation$19839$17Rald
                                   '#f
                                   '"invalid syntax"
                                   g$t$20228$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$20228$17Rald
                              '(each-any any . each-any)))))
                        g$cls$20226$17Rald)))))
          ((case-lambda
             ((g$t$20215$17Rald)
              ((case-lambda
                 ((g$ls/false$20216$17Rald)
                  (if g$ls/false$20216$17Rald
                    (apply
                      (case-lambda
                        ((g$expr$20217$17Rald)
                         (g$bless$19683$17Rald
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$20217$17Rald))
                               '((if #f #f)))))))
                      g$ls/false$20216$17Rald)
                    ((case-lambda
                       ((g$t$20218$17Rald)
                        ((case-lambda
                           ((g$ls/false$20219$17Rald)
                            (if g$ls/false$20219$17Rald
                              (apply
                                (case-lambda
                                  ((g$expr$20220$17Rald
                                     g$cls$20221$17Rald
                                     g$cls*$20222$17Rald)
                                   (g$bless$19683$17Rald
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$20220$17Rald))
                                       ((letrec ((g$f$20223$17Rald
                                                   (case-lambda
                                                     ((g$cls$20224$17Rald
                                                        g$cls*$20225$17Rald)
                                                      (if (null?
                                                            g$cls*$20225$17Rald)
                                                        (g$build-last$20213$17Rald
                                                          g$cls$20224$17Rald)
                                                        (g$build-one$20214$17Rald
                                                          g$cls$20224$17Rald
                                                          (g$f$20223$17Rald
                                                            (car g$cls*$20225$17Rald)
                                                            (cdr g$cls*$20225$17Rald))))))))
                                          g$f$20223$17Rald)
                                        g$cls$20221$17Rald
                                        g$cls*$20222$17Rald)))))
                                g$ls/false$20219$17Rald)
                              (g$syntax-violation$19839$17Rald
                                '#f
                                '"invalid syntax"
                                g$t$20218$17Rald))))
                         (g$syntax-dispatch$19720$17Rald
                           g$t$20218$17Rald
                           '(_ any any . each-any)))))
                     g$t$20215$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20215$17Rald
                 '(_ any)))))
           g$e$20212$17Rald)))))
   (g$quote-transformer$19680$17Rald
     g$quote-transformer$23276$17Rald
     (case-lambda
       ((g$e$20240$17Rald g$r$20241$17Rald g$mr$20242$17Rald)
        ((case-lambda
           ((g$t$20243$17Rald)
            ((case-lambda
               ((g$ls/false$20244$17Rald)
                (if g$ls/false$20244$17Rald
                  (apply
                    (case-lambda
                      ((g$datum$20245$17Rald)
                       (list
                         'quote
                         (g$stx->datum$19233$17Rald
                           g$datum$20245$17Rald))))
                    g$ls/false$20244$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20243$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20243$17Rald
               '(_ any)))))
         g$e$20240$17Rald))))
   (g$case-lambda-transformer$19681$17Rald
     g$case-lambda-transformer$23277$17Rald
     (case-lambda
       ((g$e$20246$17Rald g$r$20247$17Rald g$mr$20248$17Rald)
        ((case-lambda
           ((g$t$20249$17Rald)
            ((case-lambda
               ((g$ls/false$20250$17Rald)
                (if g$ls/false$20250$17Rald
                  (apply
                    (case-lambda
                      ((g$fmls*$20251$17Rald
                         g$b*$20252$17Rald
                         g$b**$20253$17Rald)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$19742$17Rald
                              g$e$20246$17Rald
                              g$fmls*$20251$17Rald
                              (g$map$11835$17Rald
                                cons
                                g$b*$20252$17Rald
                                g$b**$20253$17Rald)
                              g$r$20247$17Rald
                              g$mr$20248$17Rald)))
                         (case-lambda
                           ((g$fmls*$20256$17Rald g$body*$20257$17Rald)
                            ((case-lambda
                               ((g$body*$20258$17Rald
                                  g$fmls*$20259$17Rald)
                                (g$build-case-lambda$19145$17Rald
                                  '#f
                                  g$fmls*$20259$17Rald
                                  g$body*$20258$17Rald)))
                             g$body*$20257$17Rald
                             g$fmls*$20256$17Rald))))))
                    g$ls/false$20250$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20249$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20249$17Rald
               '(_ . #(each (any any . each-any)))))))
         g$e$20246$17Rald))))
   (g$lambda-transformer$19682$17Rald
     g$lambda-transformer$23278$17Rald
     (case-lambda
       ((g$e$20260$17Rald g$r$20261$17Rald g$mr$20262$17Rald)
        ((case-lambda
           ((g$t$20263$17Rald)
            ((case-lambda
               ((g$ls/false$20264$17Rald)
                (if g$ls/false$20264$17Rald
                  (apply
                    (case-lambda
                      ((g$fmls$20265$17Rald
                         g$b$20266$17Rald
                         g$b*$20267$17Rald)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$19741$17Rald
                              g$e$20260$17Rald
                              g$fmls$20265$17Rald
                              (cons g$b$20266$17Rald g$b*$20267$17Rald)
                              g$r$20261$17Rald
                              g$mr$20262$17Rald)))
                         (case-lambda
                           ((g$fmls$20270$17Rald g$body$20271$17Rald)
                            ((case-lambda
                               ((g$body$20272$17Rald
                                  g$fmls$20273$17Rald)
                                (g$build-lambda$19144$17Rald
                                  '#f
                                  g$fmls$20273$17Rald
                                  g$body$20272$17Rald)))
                             g$body$20271$17Rald
                             g$fmls$20270$17Rald))))))
                    g$ls/false$20264$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20263$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20263$17Rald
               '(_ any any . each-any)))))
         g$e$20260$17Rald))))
   (g$bless$19683$17Rald
     g$bless$23279$17Rald
     (case-lambda
       ((g$x$20274$17Rald)
        (g$mkstx$19210$17Rald
          ((letrec ((g$f$20275$17Rald
                      (case-lambda
                        ((g$x$20276$17Rald)
                         (if (g$stx?$19194$17Rald g$x$20276$17Rald)
                           g$x$20276$17Rald
                           (if (pair? g$x$20276$17Rald)
                             (cons
                               (g$f$20275$17Rald (car g$x$20276$17Rald))
                               (g$f$20275$17Rald
                                 (cdr g$x$20276$17Rald)))
                             (if (g$symbol?$12610$17Rald
                                   g$x$20276$17Rald)
                               (g$scheme-stx$19663$17Rald
                                 g$x$20276$17Rald)
                               (if (g$vector?$12608$17Rald
                                     g$x$20276$17Rald)
                                 (g$vector-map$12679$17Rald
                                   g$f$20275$17Rald
                                   g$x$20276$17Rald)
                                 g$x$20276$17Rald))))))))
             g$f$20275$17Rald)
           g$x$20274$17Rald)
          '()
          '()
          '()))))
   (g$with-syntax-macro$19684$17Rald
     g$with-syntax-macro$23280$17Rald
     (case-lambda
       ((g$e$20277$17Rald)
        ((case-lambda
           ((g$t$20278$17Rald)
            ((case-lambda
               ((g$ls/false$20279$17Rald)
                (if g$ls/false$20279$17Rald
                  (apply
                    (case-lambda
                      ((g$pat*$20280$17Rald
                         g$expr*$20281$17Rald
                         g$b$20282$17Rald
                         g$b*$20283$17Rald)
                       ((case-lambda
                          ((g$idn*$20284$17Rald)
                           (begin
                             (g$verify-formals$19740$17Rald
                               (g$map$11835$17Rald
                                 car
                                 g$idn*$20284$17Rald)
                               g$e$20277$17Rald)
                             ((case-lambda
                                ((g$t*$20285$17Rald)
                                 (g$bless$19683$17Rald
                                   (list
                                     'let
                                     (g$map$11835$17Rald
                                       list
                                       g$t*$20285$17Rald
                                       g$expr*$20281$17Rald)
                                     ((letrec ((g$f$20286$17Rald
                                                 (case-lambda
                                                   ((g$pat*$20287$17Rald
                                                      g$t*$20288$17Rald)
                                                    (if (null?
                                                          g$pat*$20287$17Rald)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$20282$17Rald
                                                            g$b*$20283$17Rald)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$20288$17Rald)
                                                        '()
                                                        (list
                                                          (car g$pat*$20287$17Rald)
                                                          (g$f$20286$17Rald
                                                            (cdr g$pat*$20287$17Rald)
                                                            (cdr g$t*$20288$17Rald)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$20287$17Rald))
                                                            (car g$t*$20288$17Rald)))))))))
                                        g$f$20286$17Rald)
                                      g$pat*$20280$17Rald
                                      g$t*$20285$17Rald)))))
                              (g$generate-temporaries$19829$17Rald
                                g$expr*$20281$17Rald)))))
                        ((letrec ((g$f$20289$17Rald
                                    (case-lambda
                                      ((g$pat*$20290$17Rald)
                                       (if (null? g$pat*$20290$17Rald)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$19719$17Rald
                                                (car g$pat*$20290$17Rald)
                                                '())))
                                           (case-lambda
                                             ((g$pat$20293$17Rald
                                                g$idn*$20294$17Rald)
                                              ((case-lambda
                                                 ((g$idn*$20295$17Rald
                                                    g$pat$20296$17Rald)
                                                  (append
                                                    g$idn*$20295$17Rald
                                                    (g$f$20289$17Rald
                                                      (cdr g$pat*$20290$17Rald)))))
                                               g$idn*$20294$17Rald
                                               g$pat$20293$17Rald)))))))))
                           g$f$20289$17Rald)
                         g$pat*$20280$17Rald))))
                    g$ls/false$20279$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20278$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20278$17Rald
               '(_ #(each (any any)) any . each-any)))))
         g$e$20277$17Rald))))
   (g$invalid-fmls-error$19685$17Rald
     g$invalid-fmls-error$23281$17Rald
     (case-lambda
       ((g$stx$20297$17Rald g$fmls$20298$17Rald)
        ((case-lambda
           ((g$t$20299$17Rald)
            ((case-lambda
               ((g$ls/false$20300$17Rald)
                (if g$ls/false$20300$17Rald
                  (apply
                    (case-lambda
                      ((g$id*$20301$17Rald g$last$20302$17Rald)
                       ((letrec ((g$f$20303$17Rald
                                   (case-lambda
                                     ((g$id*$20304$17Rald)
                                      (if (null? g$id*$20304$17Rald)
                                        (values)
                                        (if (not (g$id?$19222$17Rald
                                                   (car g$id*$20304$17Rald)))
                                          (g$syntax-violation$19839$17Rald
                                            '#f
                                            '"not an identifier"
                                            g$stx$20297$17Rald
                                            (car g$id*$20304$17Rald))
                                          (begin
                                            (g$f$20303$17Rald
                                              (cdr g$id*$20304$17Rald))
                                            (if (g$bound-id-member?$19229$17Rald
                                                  (car g$id*$20304$17Rald)
                                                  (cdr g$id*$20304$17Rald))
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"duplicate binding"
                                                g$stx$20297$17Rald
                                                (car g$id*$20304$17Rald))
                                              (void)))))))))
                          g$f$20303$17Rald)
                        (if (g$id?$19222$17Rald g$last$20302$17Rald)
                          (cons g$last$20302$17Rald g$id*$20301$17Rald)
                          (if (g$syntax-null?$19217$17Rald
                                g$last$20302$17Rald)
                            g$id*$20301$17Rald
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"not an identifier"
                              g$stx$20297$17Rald
                              g$last$20302$17Rald))))))
                    g$ls/false$20300$17Rald)
                  ((case-lambda
                     ((g$t$20305$17Rald)
                      ((case-lambda
                         ((g$ls/false$20306$17Rald)
                          (if g$ls/false$20306$17Rald
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$19839$17Rald
                                   '#f
                                   '"malformed binding form"
                                   g$stx$20297$17Rald
                                   g$fmls$20298$17Rald)))
                              g$ls/false$20306$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20305$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20305$17Rald
                         '_))))
                   g$t$20299$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20299$17Rald
               '#(each+ any () any)))))
         g$fmls$20298$17Rald))))
   (g$let-macro$19686$17Rald
     g$let-macro$23282$17Rald
     (case-lambda
       ((g$stx$20307$17Rald)
        ((case-lambda
           ((g$t$20308$17Rald)
            ((case-lambda
               ((g$ls/false$20309$17Rald)
                (if g$ls/false$20309$17Rald
                  (apply
                    (case-lambda
                      ((g$lhs*$20310$17Rald
                         g$rhs*$20311$17Rald
                         g$b$20312$17Rald
                         g$b*$20313$17Rald)
                       (if (g$valid-bound-ids?$19227$17Rald
                             g$lhs*$20310$17Rald)
                         (g$bless$19683$17Rald
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$20310$17Rald
                                 (cons
                                   g$b$20312$17Rald
                                   g$b*$20313$17Rald)))
                             g$rhs*$20311$17Rald))
                         (g$invalid-fmls-error$19685$17Rald
                           g$stx$20307$17Rald
                           g$lhs*$20310$17Rald))))
                    g$ls/false$20309$17Rald)
                  ((case-lambda
                     ((g$t$20314$17Rald)
                      ((case-lambda
                         ((g$ls/false$20315$17Rald)
                          (if (if g$ls/false$20315$17Rald
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$20316$17Rald
                                         g$lhs*$20317$17Rald
                                         g$rhs*$20318$17Rald
                                         g$b$20319$17Rald
                                         g$b*$20320$17Rald)
                                       (g$id?$19222$17Rald
                                         g$f$20316$17Rald)))
                                    g$ls/false$20315$17Rald))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$20321$17Rald
                                   g$lhs*$20322$17Rald
                                   g$rhs*$20323$17Rald
                                   g$b$20324$17Rald
                                   g$b*$20325$17Rald)
                                 (if (g$valid-bound-ids?$19227$17Rald
                                       g$lhs*$20322$17Rald)
                                   (g$bless$19683$17Rald
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$20321$17Rald
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$20322$17Rald
                                                 (cons
                                                   g$b$20324$17Rald
                                                   g$b*$20325$17Rald)))))
                                         g$f$20321$17Rald)
                                       g$rhs*$20323$17Rald))
                                   (g$invalid-fmls-error$19685$17Rald
                                     g$stx$20307$17Rald
                                     g$lhs*$20322$17Rald))))
                              g$ls/false$20315$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20314$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20314$17Rald
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$20308$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20308$17Rald
               '(_ #(each (any any)) any . each-any)))))
         g$stx$20307$17Rald))))
   (g$let-values-macro$19687$17Rald
     g$let-values-macro$23283$17Rald
     (case-lambda
       ((g$stx$20326$17Rald)
        (letrec* ((g$rename$20327$17Rald
                    (case-lambda
                      ((g$x$20378$17Rald
                         g$old*$20379$17Rald
                         g$new*$20380$17Rald)
                       (begin
                         (if (not (g$id?$19222$17Rald g$x$20378$17Rald))
                           (g$syntax-violation$19839$17Rald
                             '#f
                             '"not an indentifier"
                             g$stx$20326$17Rald
                             g$x$20378$17Rald)
                           (void))
                         (if (g$bound-id-member?$19229$17Rald
                               g$x$20378$17Rald
                               g$old*$20379$17Rald)
                           (g$syntax-violation$19839$17Rald
                             '#f
                             '"duplicate binding"
                             g$stx$20326$17Rald
                             g$x$20378$17Rald)
                           (void))
                         ((case-lambda
                            ((g$y$20381$17Rald)
                             (values
                               g$y$20381$17Rald
                               (cons
                                 g$x$20378$17Rald
                                 g$old*$20379$17Rald)
                               (cons
                                 g$y$20381$17Rald
                                 g$new*$20380$17Rald))))
                          (gensym
                            (g$syntax->datum$19842$17Rald
                              g$x$20378$17Rald)))))))
                  (g$rename*$20328$17Rald
                    (case-lambda
                      ((g$x*$20369$17Rald
                         g$old*$20370$17Rald
                         g$new*$20371$17Rald)
                       (if (null? g$x*$20369$17Rald)
                         (values
                           '()
                           g$old*$20370$17Rald
                           g$new*$20371$17Rald)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$20327$17Rald
                                (car g$x*$20369$17Rald)
                                g$old*$20370$17Rald
                                g$new*$20371$17Rald)))
                           (case-lambda
                             ((g$x$20372$17Rald
                                g$old*$20373$17Rald
                                g$new*$20374$17Rald)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$20328$17Rald
                                     (cdr g$x*$20369$17Rald)
                                     g$old*$20373$17Rald
                                     g$new*$20374$17Rald)))
                                (case-lambda
                                  ((g$x*$20375$17Rald
                                     g$old*$20376$17Rald
                                     g$new*$20377$17Rald)
                                   (values
                                     (cons
                                       g$x$20372$17Rald
                                       g$x*$20375$17Rald)
                                     g$old*$20376$17Rald
                                     g$new*$20377$17Rald))))))))))))
          ((case-lambda
             ((g$t$20329$17Rald)
              ((case-lambda
                 ((g$ls/false$20330$17Rald)
                  (if g$ls/false$20330$17Rald
                    (apply
                      (case-lambda
                        ((g$b$20331$17Rald g$b*$20332$17Rald)
                         (g$cons*$11837$17Rald
                           (g$bless$19683$17Rald 'let)
                           '()
                           g$b$20331$17Rald
                           g$b*$20332$17Rald)))
                      g$ls/false$20330$17Rald)
                    ((case-lambda
                       ((g$t$20333$17Rald)
                        ((case-lambda
                           ((g$ls/false$20334$17Rald)
                            (if g$ls/false$20334$17Rald
                              (apply
                                (case-lambda
                                  ((g$lhs*$20335$17Rald
                                     g$rhs*$20336$17Rald
                                     g$b$20337$17Rald
                                     g$b*$20338$17Rald)
                                   (g$bless$19683$17Rald
                                     ((letrec ((g$f$20339$17Rald
                                                 (case-lambda
                                                   ((g$lhs*$20340$17Rald
                                                      g$rhs*$20341$17Rald
                                                      g$old*$20342$17Rald
                                                      g$new*$20343$17Rald)
                                                    (if (null?
                                                          g$lhs*$20340$17Rald)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11835$17Rald
                                                            list
                                                            g$old*$20342$17Rald
                                                            g$new*$20343$17Rald)
                                                          (cons
                                                            g$b$20337$17Rald
                                                            g$b*$20338$17Rald)))
                                                      ((case-lambda
                                                         ((g$t$20344$17Rald)
                                                          ((case-lambda
                                                             ((g$ls/false$20345$17Rald)
                                                              (if g$ls/false$20345$17Rald
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$20346$17Rald)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$20328$17Rald
                                                                            g$x*$20346$17Rald
                                                                            g$old*$20342$17Rald
                                                                            g$new*$20343$17Rald)))
                                                                       (case-lambda
                                                                         ((g$y*$20350$17Rald
                                                                            g$old*$20351$17Rald
                                                                            g$new*$20352$17Rald)
                                                                          ((case-lambda
                                                                             ((g$new*$20353$17Rald
                                                                                g$old*$20354$17Rald
                                                                                g$y*$20355$17Rald)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$20341$17Rald))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$20355$17Rald
                                                                                  (g$f$20339$17Rald
                                                                                    (cdr g$lhs*$20340$17Rald)
                                                                                    (cdr g$rhs*$20341$17Rald)
                                                                                    g$old*$20354$17Rald
                                                                                    g$new*$20353$17Rald)))))
                                                                           g$new*$20352$17Rald
                                                                           g$old*$20351$17Rald
                                                                           g$y*$20350$17Rald))))))
                                                                  g$ls/false$20345$17Rald)
                                                                ((case-lambda
                                                                   ((g$t$20356$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20357$17Rald)
                                                                        (if g$ls/false$20357$17Rald
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$20358$17Rald
                                                                                 g$x$20359$17Rald)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$20327$17Rald
                                                                                      g$x$20359$17Rald
                                                                                      g$old*$20342$17Rald
                                                                                      g$new*$20343$17Rald)))
                                                                                 (case-lambda
                                                                                   ((g$y$20360$17Rald
                                                                                      g$old*$20361$17Rald
                                                                                      g$new*$20362$17Rald)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$20328$17Rald
                                                                                           g$x*$20358$17Rald
                                                                                           g$old*$20361$17Rald
                                                                                           g$new*$20362$17Rald)))
                                                                                      (case-lambda
                                                                                        ((g$y*$20363$17Rald
                                                                                           g$old*$20364$17Rald
                                                                                           g$new*$20365$17Rald)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$20341$17Rald))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$20363$17Rald
                                                                                               g$y$20360$17Rald)
                                                                                             (g$f$20339$17Rald
                                                                                               (cdr g$lhs*$20340$17Rald)
                                                                                               (cdr g$rhs*$20341$17Rald)
                                                                                               g$old*$20364$17Rald
                                                                                               g$new*$20365$17Rald)))))))))))
                                                                            g$ls/false$20357$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$20366$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20367$17Rald)
                                                                                  (if g$ls/false$20367$17Rald
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$20368$17Rald)
                                                                                         (g$syntax-violation$19839$17Rald
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$20326$17Rald
                                                                                           g$others$20368$17Rald)))
                                                                                      g$ls/false$20367$17Rald)
                                                                                    (g$syntax-violation$19839$17Rald
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20366$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$20366$17Rald
                                                                                 'any))))
                                                                           g$t$20356$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$20356$17Rald
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$20344$17Rald))))
                                                           (g$syntax-dispatch$19720$17Rald
                                                             g$t$20344$17Rald
                                                             'each-any))))
                                                       (car g$lhs*$20340$17Rald)))))))
                                        g$f$20339$17Rald)
                                      g$lhs*$20335$17Rald
                                      g$rhs*$20336$17Rald
                                      '()
                                      '()))))
                                g$ls/false$20334$17Rald)
                              (g$syntax-violation$19839$17Rald
                                '#f
                                '"invalid syntax"
                                g$t$20333$17Rald))))
                         (g$syntax-dispatch$19720$17Rald
                           g$t$20333$17Rald
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20329$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20329$17Rald
                 '(_ () any . each-any)))))
           g$stx$20326$17Rald)))))
   (g$let*-values-macro$19688$17Rald
     g$let*-values-macro$23284$17Rald
     (case-lambda
       ((g$stx$20382$17Rald)
        (letrec* ((g$check$20383$17Rald
                    (case-lambda
                      ((g$x*$20407$17Rald)
                       (if (not (null? g$x*$20407$17Rald))
                         ((case-lambda
                            ((g$x$20408$17Rald)
                             (begin
                               (if (not (g$id?$19222$17Rald
                                          g$x$20408$17Rald))
                                 (g$syntax-violation$19839$17Rald
                                   '#f
                                   '"not an identifier"
                                   g$stx$20382$17Rald
                                   g$x$20408$17Rald)
                                 (void))
                               (g$check$20383$17Rald
                                 (cdr g$x*$20407$17Rald))
                               (if (g$bound-id-member?$19229$17Rald
                                     g$x$20408$17Rald
                                     (cdr g$x*$20407$17Rald))
                                 (g$syntax-violation$19839$17Rald
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$20382$17Rald
                                   g$x$20408$17Rald)
                                 (void)))))
                          (car g$x*$20407$17Rald))
                         (void))))))
          ((case-lambda
             ((g$t$20384$17Rald)
              ((case-lambda
                 ((g$ls/false$20385$17Rald)
                  (if g$ls/false$20385$17Rald
                    (apply
                      (case-lambda
                        ((g$b$20386$17Rald g$b*$20387$17Rald)
                         (g$cons*$11837$17Rald
                           (g$bless$19683$17Rald 'let)
                           '()
                           g$b$20386$17Rald
                           g$b*$20387$17Rald)))
                      g$ls/false$20385$17Rald)
                    ((case-lambda
                       ((g$t$20388$17Rald)
                        ((case-lambda
                           ((g$ls/false$20389$17Rald)
                            (if g$ls/false$20389$17Rald
                              (apply
                                (case-lambda
                                  ((g$lhs*$20390$17Rald
                                     g$rhs*$20391$17Rald
                                     g$b$20392$17Rald
                                     g$b*$20393$17Rald)
                                   (g$bless$19683$17Rald
                                     ((letrec ((g$f$20394$17Rald
                                                 (case-lambda
                                                   ((g$lhs*$20395$17Rald
                                                      g$rhs*$20396$17Rald)
                                                    (if (null?
                                                          g$lhs*$20395$17Rald)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$20392$17Rald
                                                          g$b*$20393$17Rald))
                                                      ((case-lambda
                                                         ((g$t$20397$17Rald)
                                                          ((case-lambda
                                                             ((g$ls/false$20398$17Rald)
                                                              (if g$ls/false$20398$17Rald
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$20399$17Rald)
                                                                     (begin
                                                                       (g$check$20383$17Rald
                                                                         g$x*$20399$17Rald)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$20396$17Rald))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$20399$17Rald
                                                                           (g$f$20394$17Rald
                                                                             (cdr g$lhs*$20395$17Rald)
                                                                             (cdr g$rhs*$20396$17Rald)))))))
                                                                  g$ls/false$20398$17Rald)
                                                                ((case-lambda
                                                                   ((g$t$20400$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20401$17Rald)
                                                                        (if g$ls/false$20401$17Rald
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$20402$17Rald
                                                                                 g$x$20403$17Rald)
                                                                               (begin
                                                                                 (g$check$20383$17Rald
                                                                                   (cons
                                                                                     g$x$20403$17Rald
                                                                                     g$x*$20402$17Rald))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$20396$17Rald))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$20402$17Rald
                                                                                       g$x$20403$17Rald)
                                                                                     (g$f$20394$17Rald
                                                                                       (cdr g$lhs*$20395$17Rald)
                                                                                       (cdr g$rhs*$20396$17Rald)))))))
                                                                            g$ls/false$20401$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$20404$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20405$17Rald)
                                                                                  (if g$ls/false$20405$17Rald
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$20406$17Rald)
                                                                                         (g$syntax-violation$19839$17Rald
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$20382$17Rald
                                                                                           g$others$20406$17Rald)))
                                                                                      g$ls/false$20405$17Rald)
                                                                                    (g$syntax-violation$19839$17Rald
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20404$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$20404$17Rald
                                                                                 'any))))
                                                                           g$t$20400$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$20400$17Rald
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$20397$17Rald))))
                                                           (g$syntax-dispatch$19720$17Rald
                                                             g$t$20397$17Rald
                                                             'each-any))))
                                                       (car g$lhs*$20395$17Rald)))))))
                                        g$f$20394$17Rald)
                                      g$lhs*$20390$17Rald
                                      g$rhs*$20391$17Rald))))
                                g$ls/false$20389$17Rald)
                              (g$syntax-violation$19839$17Rald
                                '#f
                                '"invalid syntax"
                                g$t$20388$17Rald))))
                         (g$syntax-dispatch$19720$17Rald
                           g$t$20388$17Rald
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20384$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20384$17Rald
                 '(_ () any . each-any)))))
           g$stx$20382$17Rald)))))
   (g$trace-lambda-macro$19689$17Rald
     g$trace-lambda-macro$23285$17Rald
     (case-lambda
       ((g$stx$20409$17Rald)
        ((case-lambda
           ((g$t$20410$17Rald)
            ((case-lambda
               ((g$ls/false$20411$17Rald)
                (if g$ls/false$20411$17Rald
                  (apply
                    (case-lambda
                      ((g$who$20412$17Rald
                         g$fmls$20413$17Rald
                         g$b$20414$17Rald
                         g$b*$20415$17Rald)
                       (if (g$valid-bound-ids?$19227$17Rald
                             g$fmls$20413$17Rald)
                         (g$bless$19683$17Rald
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$20412$17Rald)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$20413$17Rald
                                 (cons
                                   g$b$20414$17Rald
                                   g$b*$20415$17Rald)))))
                         (g$invalid-fmls-error$19685$17Rald
                           g$stx$20409$17Rald
                           g$fmls$20413$17Rald))))
                    g$ls/false$20411$17Rald)
                  ((case-lambda
                     ((g$t$20416$17Rald)
                      ((case-lambda
                         ((g$ls/false$20417$17Rald)
                          (if g$ls/false$20417$17Rald
                            (apply
                              (case-lambda
                                ((g$who$20418$17Rald
                                   g$fmls$20419$17Rald
                                   g$last$20420$17Rald
                                   g$b$20421$17Rald
                                   g$b*$20422$17Rald)
                                 (if (g$valid-bound-ids?$19227$17Rald
                                       (cons
                                         g$last$20420$17Rald
                                         g$fmls$20419$17Rald))
                                   (g$bless$19683$17Rald
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$20418$17Rald)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$20419$17Rald
                                             g$last$20420$17Rald)
                                           (cons
                                             g$b$20421$17Rald
                                             g$b*$20422$17Rald)))))
                                   (g$invalid-fmls-error$19685$17Rald
                                     g$stx$20409$17Rald
                                     (append
                                       g$fmls$20419$17Rald
                                       g$last$20420$17Rald)))))
                              g$ls/false$20417$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20416$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20416$17Rald
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$20410$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20410$17Rald
               '(_ any each-any any . each-any)))))
         g$stx$20409$17Rald))))
   (g$trace-define-macro$19690$17Rald
     g$trace-define-macro$23286$17Rald
     (case-lambda
       ((g$stx$20423$17Rald)
        ((case-lambda
           ((g$t$20424$17Rald)
            ((case-lambda
               ((g$ls/false$20425$17Rald)
                (if g$ls/false$20425$17Rald
                  (apply
                    (case-lambda
                      ((g$who$20426$17Rald
                         g$fmls$20427$17Rald
                         g$b$20428$17Rald
                         g$b*$20429$17Rald)
                       (if (g$valid-bound-ids?$19227$17Rald
                             g$fmls$20427$17Rald)
                         (g$bless$19683$17Rald
                           (list
                             'define
                             g$who$20426$17Rald
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$20426$17Rald)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$20427$17Rald
                                   (cons
                                     g$b$20428$17Rald
                                     g$b*$20429$17Rald))))))
                         (g$invalid-fmls-error$19685$17Rald
                           g$stx$20423$17Rald
                           g$fmls$20427$17Rald))))
                    g$ls/false$20425$17Rald)
                  ((case-lambda
                     ((g$t$20430$17Rald)
                      ((case-lambda
                         ((g$ls/false$20431$17Rald)
                          (if g$ls/false$20431$17Rald
                            (apply
                              (case-lambda
                                ((g$who$20432$17Rald
                                   g$fmls$20433$17Rald
                                   g$last$20434$17Rald
                                   g$b$20435$17Rald
                                   g$b*$20436$17Rald)
                                 (if (g$valid-bound-ids?$19227$17Rald
                                       (cons
                                         g$last$20434$17Rald
                                         g$fmls$20433$17Rald))
                                   (g$bless$19683$17Rald
                                     (list
                                       'define
                                       g$who$20432$17Rald
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$20432$17Rald)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$20433$17Rald
                                               g$last$20434$17Rald)
                                             (cons
                                               g$b$20435$17Rald
                                               g$b*$20436$17Rald))))))
                                   (g$invalid-fmls-error$19685$17Rald
                                     g$stx$20423$17Rald
                                     (append
                                       g$fmls$20433$17Rald
                                       g$last$20434$17Rald)))))
                              g$ls/false$20431$17Rald)
                            ((case-lambda
                               ((g$t$20437$17Rald)
                                ((case-lambda
                                   ((g$ls/false$20438$17Rald)
                                    (if g$ls/false$20438$17Rald
                                      (apply
                                        (case-lambda
                                          ((g$who$20439$17Rald
                                             g$expr$20440$17Rald)
                                           (if (g$id?$19222$17Rald
                                                 g$who$20439$17Rald)
                                             (g$bless$19683$17Rald
                                               (list
                                                 'define
                                                 g$who$20439$17Rald
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$20440$17Rald))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$20439$17Rald)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$19839$17Rald
                                               '#f
                                               '"invalid name"
                                               g$stx$20423$17Rald))))
                                        g$ls/false$20438$17Rald)
                                      (g$syntax-violation$19839$17Rald
                                        '#f
                                        '"invalid syntax"
                                        g$t$20437$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$20437$17Rald
                                   '(_ any any)))))
                             g$t$20430$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20430$17Rald
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$20424$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20424$17Rald
               '(_ (any . each-any) any . each-any)))))
         g$stx$20423$17Rald))))
   (g$trace-define-syntax-macro$19691$17Rald
     g$trace-define-syntax-macro$23287$17Rald
     (case-lambda
       ((g$stx$20441$17Rald)
        ((case-lambda
           ((g$t$20442$17Rald)
            ((case-lambda
               ((g$ls/false$20443$17Rald)
                (if g$ls/false$20443$17Rald
                  (apply
                    (case-lambda
                      ((g$who$20444$17Rald g$expr$20445$17Rald)
                       (if (g$id?$19222$17Rald g$who$20444$17Rald)
                         (g$bless$19683$17Rald
                           (list
                             'define-syntax
                             g$who$20444$17Rald
                             (list
                               'make-traced-macro
                               (list 'quote g$who$20444$17Rald)
                               g$expr$20445$17Rald)))
                         (g$syntax-violation$19839$17Rald
                           '#f
                           '"invalid name"
                           g$stx$20441$17Rald))))
                    g$ls/false$20443$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20442$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20442$17Rald
               '(_ any any)))))
         g$stx$20441$17Rald))))
   (g$trace-let/rec-syntax$19692$17Rald
     g$trace-let/rec-syntax$23288$17Rald
     (case-lambda
       ((g$who$20446$17Rald)
        (case-lambda
          ((g$stx$20447$17Rald)
           ((case-lambda
              ((g$t$20448$17Rald)
               ((case-lambda
                  ((g$ls/false$20449$17Rald)
                   (if g$ls/false$20449$17Rald
                     (apply
                       (case-lambda
                         ((g$lhs*$20450$17Rald
                            g$rhs*$20451$17Rald
                            g$b$20452$17Rald
                            g$b*$20453$17Rald)
                          (if (g$valid-bound-ids?$19227$17Rald
                                g$lhs*$20450$17Rald)
                            ((case-lambda
                               ((g$rhs*$20454$17Rald)
                                (g$bless$19683$17Rald
                                  (cons
                                    g$who$20446$17Rald
                                    (cons
                                      (g$map$11835$17Rald
                                        list
                                        g$lhs*$20450$17Rald
                                        g$rhs*$20454$17Rald)
                                      (cons
                                        g$b$20452$17Rald
                                        g$b*$20453$17Rald))))))
                             (g$map$11835$17Rald
                               (case-lambda
                                 ((g$lhs$20455$17Rald
                                    g$rhs$20456$17Rald)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$20455$17Rald)
                                    g$rhs$20456$17Rald)))
                               g$lhs*$20450$17Rald
                               g$rhs*$20451$17Rald))
                            (g$invalid-fmls-error$19685$17Rald
                              g$stx$20447$17Rald
                              g$lhs*$20450$17Rald))))
                       g$ls/false$20449$17Rald)
                     (g$syntax-violation$19839$17Rald
                       '#f
                       '"invalid syntax"
                       g$t$20448$17Rald))))
                (g$syntax-dispatch$19720$17Rald
                  g$t$20448$17Rald
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$20447$17Rald))))))
   (g$trace-let-syntax-macro$19693$17Rald
     g$trace-let-syntax-macro$23289$17Rald
     (g$trace-let/rec-syntax$19692$17Rald 'let-syntax))
   (g$trace-letrec-syntax-macro$19694$17Rald
     g$trace-letrec-syntax-macro$23290$17Rald
     (g$trace-let/rec-syntax$19692$17Rald 'letrec-syntax))
   (g$guard-macro$19695$17Rald
     g$guard-macro$23291$17Rald
     (case-lambda
       ((g$x$20457$17Rald)
        (letrec* ((g$gen-clauses$20458$17Rald
                    (case-lambda
                      ((g$con$20470$17Rald
                         g$outerk$20471$17Rald
                         g$clause*$20472$17Rald)
                       (letrec* ((g$f$20473$17Rald
                                   (case-lambda
                                     ((g$x$20501$17Rald
                                        g$k$20502$17Rald)
                                      ((case-lambda
                                         ((g$t$20503$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$20504$17Rald)
                                              (if g$ls/false$20504$17Rald
                                                (apply
                                                  (case-lambda
                                                    ((g$e$20505$17Rald
                                                       g$p$20506$17Rald)
                                                     ((case-lambda
                                                        ((g$t$20507$17Rald)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$20507$17Rald
                                                               g$e$20505$17Rald))
                                                           (list
                                                             'if
                                                             g$t$20507$17Rald
                                                             (list
                                                               g$p$20506$17Rald
                                                               g$t$20507$17Rald)
                                                             g$k$20502$17Rald))))
                                                      (gensym))))
                                                  g$ls/false$20504$17Rald)
                                                ((case-lambda
                                                   ((g$t$20508$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$20509$17Rald)
                                                        (if g$ls/false$20509$17Rald
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$20510$17Rald)
                                                               ((case-lambda
                                                                  ((g$t$20511$17Rald)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$20511$17Rald
                                                                         g$e$20510$17Rald))
                                                                     (list
                                                                       'if
                                                                       g$t$20511$17Rald
                                                                       g$t$20511$17Rald
                                                                       g$k$20502$17Rald))))
                                                                (gensym))))
                                                            g$ls/false$20509$17Rald)
                                                          ((case-lambda
                                                             ((g$t$20512$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$20513$17Rald)
                                                                  (if g$ls/false$20513$17Rald
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$20514$17Rald
                                                                           g$v$20515$17Rald
                                                                           g$v*$20516$17Rald)
                                                                         (list
                                                                           'if
                                                                           g$e$20514$17Rald
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$20515$17Rald
                                                                               g$v*$20516$17Rald))
                                                                           g$k$20502$17Rald)))
                                                                      g$ls/false$20513$17Rald)
                                                                    ((case-lambda
                                                                       ((g$t$20517$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20518$17Rald)
                                                                            (if g$ls/false$20518$17Rald
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$19839$17Rald
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$20501$17Rald)))
                                                                                g$ls/false$20518$17Rald)
                                                                              (g$syntax-violation$19839$17Rald
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$20517$17Rald))))
                                                                         (g$syntax-dispatch$19720$17Rald
                                                                           g$t$20517$17Rald
                                                                           '_))))
                                                                     g$t$20512$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$20512$17Rald
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$20508$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$20508$17Rald
                                                       '(any)))))
                                                 g$t$20503$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$20503$17Rald
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$20501$17Rald))))
                                 (g$f*$20474$17Rald
                                   (case-lambda
                                     ((g$x*$20481$17Rald)
                                      ((case-lambda
                                         ((g$t$20482$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$20483$17Rald)
                                              (if g$ls/false$20483$17Rald
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$20470$17Rald)
                                                       '#t)))
                                                  g$ls/false$20483$17Rald)
                                                ((case-lambda
                                                   ((g$t$20484$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$20485$17Rald)
                                                        (if g$ls/false$20485$17Rald
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$20486$17Rald
                                                                 g$e*$20487$17Rald)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$20486$17Rald
                                                                     g$e*$20487$17Rald))
                                                                 '#f)))
                                                            g$ls/false$20485$17Rald)
                                                          ((case-lambda
                                                             ((g$t$20488$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$20489$17Rald)
                                                                  (if g$ls/false$20489$17Rald
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$20490$17Rald
                                                                           g$cls*$20491$17Rald)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$20474$17Rald
                                                                                g$cls*$20491$17Rald)))
                                                                           (case-lambda
                                                                             ((g$e$20494$17Rald
                                                                                g$g$20495$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$g$20496$17Rald
                                                                                    g$e$20497$17Rald)
                                                                                  (values
                                                                                    (g$f$20473$17Rald
                                                                                      g$cls$20490$17Rald
                                                                                      g$e$20497$17Rald)
                                                                                    g$g$20496$17Rald)))
                                                                               g$g$20495$17Rald
                                                                               g$e$20494$17Rald))))))
                                                                      g$ls/false$20489$17Rald)
                                                                    ((case-lambda
                                                                       ((g$t$20498$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20499$17Rald)
                                                                            (if g$ls/false$20499$17Rald
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$20500$17Rald)
                                                                                   (g$syntax-violation$19839$17Rald
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$20500$17Rald)))
                                                                                g$ls/false$20499$17Rald)
                                                                              (g$syntax-violation$19839$17Rald
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$20498$17Rald))))
                                                                         (g$syntax-dispatch$19720$17Rald
                                                                           g$t$20498$17Rald
                                                                           'any))))
                                                                     g$t$20488$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$20488$17Rald
                                                                 '(any .
                                                                       any)))))
                                                           g$t$20484$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$20484$17Rald
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$20482$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$20482$17Rald
                                             '()))))
                                       g$x*$20481$17Rald)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$20474$17Rald
                                g$clause*$20472$17Rald)))
                           (case-lambda
                             ((g$code$20477$17Rald
                                g$raisek$20478$17Rald)
                              ((case-lambda
                                 ((g$raisek$20479$17Rald
                                    g$code$20480$17Rald)
                                  (if g$raisek$20479$17Rald
                                    (list
                                      g$outerk$20471$17Rald
                                      g$code$20480$17Rald)
                                    g$code$20480$17Rald)))
                               g$raisek$20478$17Rald
                               g$code$20477$17Rald)))))))))
          ((case-lambda
             ((g$t$20459$17Rald)
              ((case-lambda
                 ((g$ls/false$20460$17Rald)
                  (if (if g$ls/false$20460$17Rald
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$20461$17Rald
                                 g$clause*$20462$17Rald
                                 g$b$20463$17Rald
                                 g$b*$20464$17Rald)
                               (g$id?$19222$17Rald g$con$20461$17Rald)))
                            g$ls/false$20460$17Rald))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$20465$17Rald
                           g$clause*$20466$17Rald
                           g$b$20467$17Rald
                           g$b*$20468$17Rald)
                         ((case-lambda
                            ((g$outerk$20469$17Rald)
                             (g$bless$19683$17Rald
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$20469$17Rald)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$20465$17Rald)
                                           (g$gen-clauses$20458$17Rald
                                             g$con$20465$17Rald
                                             g$outerk$20469$17Rald
                                             g$clause*$20466$17Rald))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$20467$17Rald
                                               g$b*$20468$17Rald)))))))))))
                          (gensym))))
                      g$ls/false$20460$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$20459$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20459$17Rald
                 '(_ (any . each-any) any . each-any)))))
           g$x$20457$17Rald)))))
   (g$define-enumeration-macro$19696$17Rald
     g$define-enumeration-macro$23292$17Rald
     (case-lambda
       ((g$stx$20519$17Rald)
        (letrec* ((g$set?$20520$17Rald
                    (case-lambda
                      ((g$x$20533$17Rald)
                       ((case-lambda
                          ((g$t$20534$17Rald)
                           (if g$t$20534$17Rald
                             g$t$20534$17Rald
                             (begin
                               '#f
                               (if (not (g$memq$11827$17Rald
                                          (car g$x$20533$17Rald)
                                          (cdr g$x$20533$17Rald)))
                                 (begin
                                   '#f
                                   (g$set?$20520$17Rald
                                     (cdr g$x$20533$17Rald)))
                                 '#f)))))
                        (null? g$x$20533$17Rald)))))
                  (g$remove-dups$20521$17Rald
                    (case-lambda
                      ((g$ls$20532$17Rald)
                       (if (null? g$ls$20532$17Rald)
                         '()
                         (cons
                           (car g$ls$20532$17Rald)
                           (g$remove-dups$20521$17Rald
                             (g$remq$11842$17Rald
                               (car g$ls$20532$17Rald)
                               (cdr g$ls$20532$17Rald)))))))))
          ((case-lambda
             ((g$t$20522$17Rald)
              ((case-lambda
                 ((g$ls/false$20523$17Rald)
                  (if (if g$ls/false$20523$17Rald
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$20524$17Rald
                                 g$id*$20525$17Rald
                                 g$maker$20526$17Rald)
                               (if (g$id?$19222$17Rald
                                     g$name$20524$17Rald)
                                 (if (g$id?$19222$17Rald
                                       g$maker$20526$17Rald)
                                   (begin
                                     '#f
                                     (g$for-all$11833$17Rald
                                       g$id?$19222$17Rald
                                       g$id*$20525$17Rald))
                                   '#f)
                                 '#f)))
                            g$ls/false$20523$17Rald))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$20527$17Rald
                           g$id*$20528$17Rald
                           g$maker$20529$17Rald)
                         ((case-lambda
                            ((g$name*$20530$17Rald g$mk$20531$17Rald)
                             (g$bless$19683$17Rald
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$20531$17Rald
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$20530$17Rald))))
                                 (list
                                   'define-syntax
                                   g$name$20527$17Rald
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$20530$17Rald))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$20527$17Rald)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$20529$17Rald
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$20529$17Rald)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$20530$17Rald))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$20529$17Rald)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$20531$17Rald
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$20521$17Rald
                            (g$syntax->datum$19842$17Rald
                              g$id*$20528$17Rald))
                          (gensym))))
                      g$ls/false$20523$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$20522$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20522$17Rald
                 '(_ any each-any any)))))
           g$stx$20519$17Rald)))))
   (g$time-macro$19697$17Rald
     g$time-macro$23293$17Rald
     (case-lambda
       ((g$stx$20535$17Rald)
        ((case-lambda
           ((g$t$20536$17Rald)
            ((case-lambda
               ((g$ls/false$20537$17Rald)
                (if g$ls/false$20537$17Rald
                  (apply
                    (case-lambda
                      ((g$expr$20538$17Rald)
                       ((case-lambda
                          ((g$str$20539$17Rald)
                           (g$bless$19683$17Rald
                             (list
                               'time-it
                               g$str$20539$17Rald
                               (list
                                 'lambda
                                 '()
                                 g$expr$20538$17Rald)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$17634$17Rald)))
                          (case-lambda
                            ((g$p$20542$17Rald g$e$20543$17Rald)
                             ((case-lambda
                                ((g$e$20544$17Rald g$p$20545$17Rald)
                                 (begin
                                   (write
                                     (g$syntax->datum$19842$17Rald
                                       g$expr$20538$17Rald)
                                     g$p$20545$17Rald)
                                   (g$e$20544$17Rald))))
                              g$e$20543$17Rald
                              g$p$20542$17Rald)))))))
                    g$ls/false$20537$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20536$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20536$17Rald
               '(_ any)))))
         g$stx$20535$17Rald))))
   (g$delay-macro$19698$17Rald
     g$delay-macro$23294$17Rald
     (case-lambda
       ((g$stx$20546$17Rald)
        ((case-lambda
           ((g$t$20547$17Rald)
            ((case-lambda
               ((g$ls/false$20548$17Rald)
                (if g$ls/false$20548$17Rald
                  (apply
                    (case-lambda
                      ((g$expr$20549$17Rald)
                       (g$bless$19683$17Rald
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$20549$17Rald)))))
                    g$ls/false$20548$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20547$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20547$17Rald
               '(_ any)))))
         g$stx$20546$17Rald))))
   (g$assert-macro$19699$17Rald
     g$assert-macro$23295$17Rald
     (case-lambda
       ((g$stx$20550$17Rald)
        ((case-lambda
           ((g$t$20551$17Rald)
            ((case-lambda
               ((g$ls/false$20552$17Rald)
                (if g$ls/false$20552$17Rald
                  (apply
                    (case-lambda
                      ((g$expr$20553$17Rald)
                       ((case-lambda
                          ((g$pos$20554$17Rald)
                           (g$bless$19683$17Rald
                             (list
                               'unless
                               g$expr$20553$17Rald
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$20553$17Rald)
                                 (list 'quote g$pos$20554$17Rald))))))
                        ((case-lambda
                           ((g$t$20555$17Rald)
                            (if g$t$20555$17Rald
                              g$t$20555$17Rald
                              (begin
                                '#f
                                (g$expression-position$19834$17Rald
                                  g$expr$20553$17Rald)))))
                         (g$expression-position$19834$17Rald
                           g$stx$20550$17Rald)))))
                    g$ls/false$20552$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20551$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20551$17Rald
               '(_ any)))))
         g$stx$20550$17Rald))))
   (g$endianness-macro$19700$17Rald
     g$endianness-macro$23296$17Rald
     (case-lambda
       ((g$stx$20556$17Rald)
        ((case-lambda
           ((g$t$20557$17Rald)
            ((case-lambda
               ((g$ls/false$20558$17Rald)
                (if g$ls/false$20558$17Rald
                  (apply
                    (case-lambda
                      ((g$e$20559$17Rald)
                       ((case-lambda
                          ((g$t$20560$17Rald)
                           (if (eqv? g$t$20560$17Rald 'little)
                             (g$bless$19683$17Rald ''little)
                             (if (eqv? g$t$20560$17Rald 'big)
                               (g$bless$19683$17Rald ''big)
                               (g$syntax-violation$19839$17Rald
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$20556$17Rald)))))
                        (g$syntax->datum$19842$17Rald
                          g$e$20559$17Rald))))
                    g$ls/false$20558$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20557$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20557$17Rald
               '(_ any)))))
         g$stx$20556$17Rald))))
   (g$identifier-syntax-macro$19701$17Rald
     g$identifier-syntax-macro$23297$17Rald
     (case-lambda
       ((g$stx$20561$17Rald)
        ((case-lambda
           ((g$t$20562$17Rald)
            ((case-lambda
               ((g$ls/false$20563$17Rald)
                (if g$ls/false$20563$17Rald
                  (apply
                    (case-lambda
                      ((g$expr$20564$17Rald)
                       (g$bless$19683$17Rald
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$20564$17Rald))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$20564$17Rald)
                                   '(#'(e* ...))))))))))
                    g$ls/false$20563$17Rald)
                  ((case-lambda
                     ((g$t$20565$17Rald)
                      ((case-lambda
                         ((g$ls/false$20566$17Rald)
                          (if (if g$ls/false$20566$17Rald
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$20567$17Rald
                                         g$expr1$20568$17Rald
                                         g$id2$20569$17Rald
                                         g$expr2$20570$17Rald
                                         g$expr3$20571$17Rald)
                                       (if (g$id?$19222$17Rald
                                             g$id1$20567$17Rald)
                                         (if (g$id?$19222$17Rald
                                               g$id2$20569$17Rald)
                                           (begin
                                             '#f
                                             (g$id?$19222$17Rald
                                               g$expr2$20570$17Rald))
                                           '#f)
                                         '#f)))
                                    g$ls/false$20566$17Rald))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$20572$17Rald
                                   g$expr1$20573$17Rald
                                   g$id2$20574$17Rald
                                   g$expr2$20575$17Rald
                                   g$expr3$20576$17Rald)
                                 (g$bless$19683$17Rald
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$20573$17Rald))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$20575$17Rald)
                                           (list
                                             'syntax
                                             g$expr3$20576$17Rald))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$20573$17Rald
                                               '(e* ...))))))))))
                              g$ls/false$20566$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20565$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20565$17Rald
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$20562$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20562$17Rald
               '(_ any)))))
         g$stx$20561$17Rald))))
   (g$do-macro$19702$17Rald
     g$do-macro$23298$17Rald
     (case-lambda
       ((g$stx$20577$17Rald)
        (letrec* ((g$bind$20578$17Rald
                    (case-lambda
                      ((g$x$20590$17Rald)
                       ((case-lambda
                          ((g$t$20591$17Rald)
                           ((case-lambda
                              ((g$ls/false$20592$17Rald)
                               (if g$ls/false$20592$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$x$20593$17Rald
                                        g$init$20594$17Rald)
                                      (list
                                        g$x$20593$17Rald
                                        g$init$20594$17Rald
                                        g$x$20593$17Rald)))
                                   g$ls/false$20592$17Rald)
                                 ((case-lambda
                                    ((g$t$20595$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$20596$17Rald)
                                         (if g$ls/false$20596$17Rald
                                           (apply
                                             (case-lambda
                                               ((g$x$20597$17Rald
                                                  g$init$20598$17Rald
                                                  g$step$20599$17Rald)
                                                (list
                                                  g$x$20597$17Rald
                                                  g$init$20598$17Rald
                                                  g$step$20599$17Rald)))
                                             g$ls/false$20596$17Rald)
                                           ((case-lambda
                                              ((g$t$20600$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$20601$17Rald)
                                                   (if g$ls/false$20601$17Rald
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$19839$17Rald
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$20577$17Rald)))
                                                       g$ls/false$20601$17Rald)
                                                     (g$syntax-violation$19839$17Rald
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$20600$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$20600$17Rald
                                                  '_))))
                                            g$t$20595$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$20595$17Rald
                                        '(any any any)))))
                                  g$t$20591$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$20591$17Rald
                              '(any any)))))
                        g$x$20590$17Rald)))))
          ((case-lambda
             ((g$t$20579$17Rald)
              ((case-lambda
                 ((g$ls/false$20580$17Rald)
                  (if g$ls/false$20580$17Rald
                    (apply
                      (case-lambda
                        ((g$binding*$20581$17Rald
                           g$test$20582$17Rald
                           g$expr*$20583$17Rald
                           g$command*$20584$17Rald)
                         ((case-lambda
                            ((g$t$20585$17Rald)
                             ((case-lambda
                                ((g$ls/false$20586$17Rald)
                                 (if g$ls/false$20586$17Rald
                                   (apply
                                     (case-lambda
                                       ((g$x*$20587$17Rald
                                          g$init*$20588$17Rald
                                          g$step*$20589$17Rald)
                                        (if (g$valid-bound-ids?$19227$17Rald
                                              g$x*$20587$17Rald)
                                          (g$bless$19683$17Rald
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$20587$17Rald
                                                    (list
                                                      'if
                                                      g$test$20582$17Rald
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$20583$17Rald))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$20584$17Rald
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$20589$17Rald))))))))
                                              (cons
                                                'loop
                                                g$init*$20588$17Rald)))
                                          (g$syntax-violation$19839$17Rald
                                            '#f
                                            '"invalid bindings"
                                            g$stx$20577$17Rald))))
                                     g$ls/false$20586$17Rald)
                                   (g$syntax-violation$19839$17Rald
                                     '#f
                                     '"invalid syntax"
                                     g$t$20585$17Rald))))
                              (g$syntax-dispatch$19720$17Rald
                                g$t$20585$17Rald
                                '#(each (any any any))))))
                          (g$map$11835$17Rald
                            g$bind$20578$17Rald
                            g$binding*$20581$17Rald))))
                      g$ls/false$20580$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$20579$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$20579$17Rald
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$20577$17Rald)))))
   (g$let*-macro$19703$17Rald
     g$let*-macro$23299$17Rald
     (case-lambda
       ((g$stx$20602$17Rald)
        ((case-lambda
           ((g$t$20603$17Rald)
            ((case-lambda
               ((g$ls/false$20604$17Rald)
                (if (if g$ls/false$20604$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$20605$17Rald
                               g$rhs*$20606$17Rald
                               g$b$20607$17Rald
                               g$b*$20608$17Rald)
                             (g$for-all$11833$17Rald
                               g$id?$19222$17Rald
                               g$lhs*$20605$17Rald)))
                          g$ls/false$20604$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$20609$17Rald
                         g$rhs*$20610$17Rald
                         g$b$20611$17Rald
                         g$b*$20612$17Rald)
                       (g$bless$19683$17Rald
                         ((letrec ((g$f$20613$17Rald
                                     (case-lambda
                                       ((g$x*$20614$17Rald)
                                        (if (null? g$x*$20614$17Rald)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$20611$17Rald
                                                g$b*$20612$17Rald)))
                                          (if (null?
                                                (cdr g$x*$20614$17Rald))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$20614$17Rald))
                                                (cons
                                                  g$b$20611$17Rald
                                                  g$b*$20612$17Rald)))
                                            (list
                                              'let
                                              (list
                                                (car g$x*$20614$17Rald))
                                              (g$f$20613$17Rald
                                                (cdr g$x*$20614$17Rald)))))))))
                            g$f$20613$17Rald)
                          (g$map$11835$17Rald
                            list
                            g$lhs*$20609$17Rald
                            g$rhs*$20610$17Rald)))))
                    g$ls/false$20604$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20603$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20603$17Rald
               '(_ #(each (any any)) any . each-any)))))
         g$stx$20602$17Rald))))
   (g$or-macro$19704$17Rald
     g$or-macro$23300$17Rald
     (case-lambda
       ((g$stx$20615$17Rald)
        ((case-lambda
           ((g$t$20616$17Rald)
            ((case-lambda
               ((g$ls/false$20617$17Rald)
                (if g$ls/false$20617$17Rald
                  (apply (case-lambda (() '#f)) g$ls/false$20617$17Rald)
                  ((case-lambda
                     ((g$t$20618$17Rald)
                      ((case-lambda
                         ((g$ls/false$20619$17Rald)
                          (if g$ls/false$20619$17Rald
                            (apply
                              (case-lambda
                                ((g$e$20620$17Rald g$e*$20621$17Rald)
                                 (g$bless$19683$17Rald
                                   ((letrec ((g$f$20622$17Rald
                                               (case-lambda
                                                 ((g$e$20623$17Rald
                                                    g$e*$20624$17Rald)
                                                  (if (null?
                                                        g$e*$20624$17Rald)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$20623$17Rald)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$20623$17Rald))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$20622$17Rald
                                                          (car g$e*$20624$17Rald)
                                                          (cdr g$e*$20624$17Rald)))))))))
                                      g$f$20622$17Rald)
                                    g$e$20620$17Rald
                                    g$e*$20621$17Rald))))
                              g$ls/false$20619$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20618$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20618$17Rald
                         '(_ any . each-any)))))
                   g$t$20616$17Rald))))
             (g$syntax-dispatch$19720$17Rald g$t$20616$17Rald '(_)))))
         g$stx$20615$17Rald))))
   (g$and-macro$19705$17Rald
     g$and-macro$23301$17Rald
     (case-lambda
       ((g$stx$20625$17Rald)
        ((case-lambda
           ((g$t$20626$17Rald)
            ((case-lambda
               ((g$ls/false$20627$17Rald)
                (if g$ls/false$20627$17Rald
                  (apply (case-lambda (() '#t)) g$ls/false$20627$17Rald)
                  ((case-lambda
                     ((g$t$20628$17Rald)
                      ((case-lambda
                         ((g$ls/false$20629$17Rald)
                          (if g$ls/false$20629$17Rald
                            (apply
                              (case-lambda
                                ((g$e$20630$17Rald g$e*$20631$17Rald)
                                 (g$bless$19683$17Rald
                                   ((letrec ((g$f$20632$17Rald
                                               (case-lambda
                                                 ((g$e$20633$17Rald
                                                    g$e*$20634$17Rald)
                                                  (if (null?
                                                        g$e*$20634$17Rald)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$20633$17Rald)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$20633$17Rald
                                                        (cons
                                                          (g$f$20632$17Rald
                                                            (car g$e*$20634$17Rald)
                                                            (cdr g$e*$20634$17Rald))
                                                          '(#f)))))))))
                                      g$f$20632$17Rald)
                                    g$e$20630$17Rald
                                    g$e*$20631$17Rald))))
                              g$ls/false$20629$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$20628$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$20628$17Rald
                         '(_ any . each-any)))))
                   g$t$20626$17Rald))))
             (g$syntax-dispatch$19720$17Rald g$t$20626$17Rald '(_)))))
         g$stx$20625$17Rald))))
   (g$cond-macro$19706$17Rald
     g$cond-macro$23302$17Rald
     (case-lambda
       ((g$stx$20635$17Rald)
        ((case-lambda
           ((g$t$20636$17Rald)
            ((case-lambda
               ((g$ls/false$20637$17Rald)
                (if g$ls/false$20637$17Rald
                  (apply
                    (case-lambda
                      ((g$cls$20638$17Rald g$cls*$20639$17Rald)
                       (g$bless$19683$17Rald
                         ((letrec ((g$f$20640$17Rald
                                     (case-lambda
                                       ((g$cls$20641$17Rald
                                          g$cls*$20642$17Rald)
                                        (if (null? g$cls*$20642$17Rald)
                                          ((case-lambda
                                             ((g$t$20643$17Rald)
                                              ((case-lambda
                                                 ((g$ls/false$20644$17Rald)
                                                  (if g$ls/false$20644$17Rald
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$20645$17Rald
                                                           g$e*$20646$17Rald)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$20645$17Rald
                                                             g$e*$20646$17Rald))))
                                                      g$ls/false$20644$17Rald)
                                                    ((case-lambda
                                                       ((g$t$20647$17Rald)
                                                        ((case-lambda
                                                           ((g$ls/false$20648$17Rald)
                                                            (if g$ls/false$20648$17Rald
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$20649$17Rald
                                                                     g$p$20650$17Rald)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$20649$17Rald))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$20650$17Rald
                                                                         '(t))))))
                                                                g$ls/false$20648$17Rald)
                                                              ((case-lambda
                                                                 ((g$t$20651$17Rald)
                                                                  ((case-lambda
                                                                     ((g$ls/false$20652$17Rald)
                                                                      (if g$ls/false$20652$17Rald
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$20653$17Rald)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$20653$17Rald
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$20652$17Rald)
                                                                        ((case-lambda
                                                                           ((g$t$20654$17Rald)
                                                                            ((case-lambda
                                                                               ((g$ls/false$20655$17Rald)
                                                                                (if g$ls/false$20655$17Rald
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$20656$17Rald
                                                                                         g$e*$20657$17Rald)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$20656$17Rald
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$20657$17Rald))))
                                                                                    g$ls/false$20655$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$t$20658$17Rald)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$20659$17Rald)
                                                                                          (if g$ls/false$20659$17Rald
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19839$17Rald
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$20635$17Rald)))
                                                                                              g$ls/false$20659$17Rald)
                                                                                            (g$syntax-violation$19839$17Rald
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$20658$17Rald))))
                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                         g$t$20658$17Rald
                                                                                         '_))))
                                                                                   g$t$20654$17Rald))))
                                                                             (g$syntax-dispatch$19720$17Rald
                                                                               g$t$20654$17Rald
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$20651$17Rald))))
                                                                   (g$syntax-dispatch$19720$17Rald
                                                                     g$t$20651$17Rald
                                                                     '(any)))))
                                                               g$t$20647$17Rald))))
                                                         (g$syntax-dispatch$19720$17Rald
                                                           g$t$20647$17Rald
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$20643$17Rald))))
                                               (g$syntax-dispatch$19720$17Rald
                                                 g$t$20643$17Rald
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$20641$17Rald)
                                          ((case-lambda
                                             ((g$t$20660$17Rald)
                                              ((case-lambda
                                                 ((g$ls/false$20661$17Rald)
                                                  (if g$ls/false$20661$17Rald
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$20662$17Rald
                                                           g$e*$20663$17Rald)
                                                         (g$syntax-violation$19839$17Rald
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$20635$17Rald)))
                                                      g$ls/false$20661$17Rald)
                                                    ((case-lambda
                                                       ((g$t$20664$17Rald)
                                                        ((case-lambda
                                                           ((g$ls/false$20665$17Rald)
                                                            (if g$ls/false$20665$17Rald
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$20666$17Rald
                                                                     g$p$20667$17Rald)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$20666$17Rald))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$20667$17Rald
                                                                         '(t))
                                                                       (g$f$20640$17Rald
                                                                         (car g$cls*$20642$17Rald)
                                                                         (cdr g$cls*$20642$17Rald))))))
                                                                g$ls/false$20665$17Rald)
                                                              ((case-lambda
                                                                 ((g$t$20668$17Rald)
                                                                  ((case-lambda
                                                                     ((g$ls/false$20669$17Rald)
                                                                      (if g$ls/false$20669$17Rald
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$20670$17Rald)
                                                                             (list
                                                                               'or
                                                                               g$e$20670$17Rald
                                                                               (g$f$20640$17Rald
                                                                                 (car g$cls*$20642$17Rald)
                                                                                 (cdr g$cls*$20642$17Rald)))))
                                                                          g$ls/false$20669$17Rald)
                                                                        ((case-lambda
                                                                           ((g$t$20671$17Rald)
                                                                            ((case-lambda
                                                                               ((g$ls/false$20672$17Rald)
                                                                                (if g$ls/false$20672$17Rald
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$20673$17Rald
                                                                                         g$e*$20674$17Rald)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$20673$17Rald
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$20674$17Rald)
                                                                                         (g$f$20640$17Rald
                                                                                           (car g$cls*$20642$17Rald)
                                                                                           (cdr g$cls*$20642$17Rald)))))
                                                                                    g$ls/false$20672$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$t$20675$17Rald)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$20676$17Rald)
                                                                                          (if g$ls/false$20676$17Rald
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19839$17Rald
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$20635$17Rald)))
                                                                                              g$ls/false$20676$17Rald)
                                                                                            (g$syntax-violation$19839$17Rald
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$20675$17Rald))))
                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                         g$t$20675$17Rald
                                                                                         '_))))
                                                                                   g$t$20671$17Rald))))
                                                                             (g$syntax-dispatch$19720$17Rald
                                                                               g$t$20671$17Rald
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$20668$17Rald))))
                                                                   (g$syntax-dispatch$19720$17Rald
                                                                     g$t$20668$17Rald
                                                                     '(any)))))
                                                               g$t$20664$17Rald))))
                                                         (g$syntax-dispatch$19720$17Rald
                                                           g$t$20664$17Rald
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$20660$17Rald))))
                                               (g$syntax-dispatch$19720$17Rald
                                                 g$t$20660$17Rald
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$20641$17Rald))))))
                            g$f$20640$17Rald)
                          g$cls$20638$17Rald
                          g$cls*$20639$17Rald))))
                    g$ls/false$20637$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20636$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20636$17Rald
               '(_ any . each-any)))))
         g$stx$20635$17Rald))))
   (g$do-include$19707$17Rald
     g$do-include$23303$17Rald
     (case-lambda
       ((g$stx$20677$17Rald g$id$20678$17Rald g$filename$20679$17Rald)
        ((case-lambda
           ((g$filename$20680$17Rald)
            (begin
              (if (not (if (string? g$filename$20680$17Rald)
                         (begin
                           '#f
                           (g$id?$19222$17Rald g$id$20678$17Rald))
                         '#f))
                (g$syntax-violation$19839$17Rald
                  '#f
                  '"invalid syntax"
                  g$stx$20677$17Rald)
                (void))
              (cons
                (g$bless$19683$17Rald 'begin)
                (g$with-input-from-file$17696$17Rald
                  g$filename$20680$17Rald
                  (case-lambda
                    (()
                     ((letrec ((g$f$20681$17Rald
                                 (case-lambda
                                   ((g$ls$20682$17Rald)
                                    ((case-lambda
                                       ((g$x$20683$17Rald)
                                        (if (eof-object?
                                              g$x$20683$17Rald)
                                          (g$reverse$12626$17Rald
                                            g$ls$20682$17Rald)
                                          (g$f$20681$17Rald
                                            (cons
                                              (g$datum->stx$19205$17Rald
                                                g$id$20678$17Rald
                                                g$x$20683$17Rald)
                                              g$ls$20682$17Rald)))))
                                     (read-annotated))))))
                        g$f$20681$17Rald)
                      '()))))))))
         (g$stx->datum$19233$17Rald g$filename$20679$17Rald)))))
   (g$include-macro$19708$17Rald
     g$include-macro$23304$17Rald
     (case-lambda
       ((g$e$20684$17Rald)
        ((case-lambda
           ((g$t$20685$17Rald)
            ((case-lambda
               ((g$ls/false$20686$17Rald)
                (if g$ls/false$20686$17Rald
                  (apply
                    (case-lambda
                      ((g$id$20687$17Rald g$filename$20688$17Rald)
                       (g$do-include$19707$17Rald
                         g$e$20684$17Rald
                         g$id$20687$17Rald
                         g$filename$20688$17Rald)))
                    g$ls/false$20686$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20685$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20685$17Rald
               '(any any)))))
         g$e$20684$17Rald))))
   (g$include-into-macro$19709$17Rald
     g$include-into-macro$23305$17Rald
     (case-lambda
       ((g$e$20689$17Rald)
        ((case-lambda
           ((g$t$20690$17Rald)
            ((case-lambda
               ((g$ls/false$20691$17Rald)
                (if g$ls/false$20691$17Rald
                  (apply
                    (case-lambda
                      ((g$id$20692$17Rald g$filename$20693$17Rald)
                       (g$do-include$19707$17Rald
                         g$e$20689$17Rald
                         g$id$20692$17Rald
                         g$filename$20693$17Rald)))
                    g$ls/false$20691$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20690$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20690$17Rald
               '(_ any any)))))
         g$e$20689$17Rald))))
   (g$syntax-rules-macro$19710$17Rald
     g$syntax-rules-macro$23306$17Rald
     (case-lambda
       ((g$e$20694$17Rald)
        ((case-lambda
           ((g$t$20695$17Rald)
            ((case-lambda
               ((g$ls/false$20696$17Rald)
                (if g$ls/false$20696$17Rald
                  (apply
                    (case-lambda
                      ((g$lits$20697$17Rald
                         g$pat*$20698$17Rald
                         g$tmp*$20699$17Rald)
                       (begin
                         (g$verify-literals$19723$17Rald
                           g$lits$20697$17Rald
                           g$e$20694$17Rald)
                         (g$bless$19683$17Rald
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$20697$17Rald
                                   (g$map$11835$17Rald
                                     (case-lambda
                                       ((g$pat$20700$17Rald
                                          g$tmp$20701$17Rald)
                                        ((case-lambda
                                           ((g$t$20702$17Rald)
                                            ((case-lambda
                                               ((g$ls/false$20703$17Rald)
                                                (if g$ls/false$20703$17Rald
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$20704$17Rald)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$20704$17Rald)
                                                         (list
                                                           'syntax
                                                           g$tmp$20701$17Rald))))
                                                    g$ls/false$20703$17Rald)
                                                  ((case-lambda
                                                     ((g$t$20705$17Rald)
                                                      ((case-lambda
                                                         ((g$ls/false$20706$17Rald)
                                                          (if g$ls/false$20706$17Rald
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$19839$17Rald
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$20694$17Rald
                                                                   g$pat$20700$17Rald)))
                                                              g$ls/false$20706$17Rald)
                                                            (g$syntax-violation$19839$17Rald
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$20705$17Rald))))
                                                       (g$syntax-dispatch$19720$17Rald
                                                         g$t$20705$17Rald
                                                         '_))))
                                                   g$t$20702$17Rald))))
                                             (g$syntax-dispatch$19720$17Rald
                                               g$t$20702$17Rald
                                               '(_ . any)))))
                                         g$pat$20700$17Rald)))
                                     g$pat*$20698$17Rald
                                     g$tmp*$20699$17Rald)))))))))
                    g$ls/false$20696$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$20695$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$20695$17Rald
               '(_ each-any . #(each (any any)))))))
         g$e$20694$17Rald))))
   (g$quasiquote-macro$19711$17Rald
     g$quasiquote-macro$23307$17Rald
     ((case-lambda
        (()
         (letrec* ((g$datum$20707$17Rald
                     (case-lambda
                       ((g$x$20857$17Rald)
                        (list
                          (g$scheme-stx$19663$17Rald 'quote)
                          (g$mkstx$19210$17Rald
                            g$x$20857$17Rald
                            '()
                            '()
                            '())))))
                   (g$quasicons*$20742$17Rald
                     (case-lambda
                       ((g$x$20853$17Rald g$y$20854$17Rald)
                        ((letrec ((g$f$20855$17Rald
                                    (case-lambda
                                      ((g$x$20856$17Rald)
                                       (if (null? g$x$20856$17Rald)
                                         g$y$20854$17Rald
                                         (g$quasicons$20743$17Rald
                                           (car g$x$20856$17Rald)
                                           (g$f$20855$17Rald
                                             (cdr g$x$20856$17Rald))))))))
                           g$f$20855$17Rald)
                         g$x$20853$17Rald))))
                   (g$quasicons$20743$17Rald
                     (case-lambda
                       ((g$x$20834$17Rald g$y$20835$17Rald)
                        ((case-lambda
                           ((g$t$20836$17Rald)
                            ((case-lambda
                               ((g$ls/false$20837$17Rald)
                                (if g$ls/false$20837$17Rald
                                  (apply
                                    (case-lambda
                                      ((g$dy$20838$17Rald)
                                       ((case-lambda
                                          ((g$t$20839$17Rald)
                                           ((case-lambda
                                              ((g$ls/false$20840$17Rald)
                                               (if g$ls/false$20840$17Rald
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$20841$17Rald)
                                                      (list
                                                        (g$scheme-stx$19663$17Rald
                                                          'quote)
                                                        (cons
                                                          g$dx$20841$17Rald
                                                          g$dy$20838$17Rald))))
                                                   g$ls/false$20840$17Rald)
                                                 ((case-lambda
                                                    ((g$t$20842$17Rald)
                                                     ((case-lambda
                                                        ((g$ls/false$20843$17Rald)
                                                         (if g$ls/false$20843$17Rald
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$20844$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20845$17Rald)
                                                                        (if g$ls/false$20845$17Rald
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$19663$17Rald
                                                                                   'list)
                                                                                 g$x$20834$17Rald)))
                                                                            g$ls/false$20845$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$20846$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20847$17Rald)
                                                                                  (if g$ls/false$20847$17Rald
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$19663$17Rald
                                                                                             'cons)
                                                                                           g$x$20834$17Rald
                                                                                           g$y$20835$17Rald)))
                                                                                      g$ls/false$20847$17Rald)
                                                                                    (g$syntax-violation$19839$17Rald
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20846$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$20846$17Rald
                                                                                 '_))))
                                                                           g$t$20844$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$20844$17Rald
                                                                       '()))))
                                                                 g$dy$20838$17Rald)))
                                                             g$ls/false$20843$17Rald)
                                                           (g$syntax-violation$19839$17Rald
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$20842$17Rald))))
                                                      (g$syntax-dispatch$19720$17Rald
                                                        g$t$20842$17Rald
                                                        '_))))
                                                  g$t$20839$17Rald))))
                                            (g$syntax-dispatch$19720$17Rald
                                              g$t$20839$17Rald
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$20834$17Rald)))
                                    g$ls/false$20837$17Rald)
                                  ((case-lambda
                                     ((g$t$20848$17Rald)
                                      ((case-lambda
                                         ((g$ls/false$20849$17Rald)
                                          (if g$ls/false$20849$17Rald
                                            (apply
                                              (case-lambda
                                                ((g$stuff$20850$17Rald)
                                                 (g$cons*$11837$17Rald
                                                   (g$scheme-stx$19663$17Rald
                                                     'list)
                                                   g$x$20834$17Rald
                                                   g$stuff$20850$17Rald)))
                                              g$ls/false$20849$17Rald)
                                            ((case-lambda
                                               ((g$t$20851$17Rald)
                                                ((case-lambda
                                                   ((g$ls/false$20852$17Rald)
                                                    (if g$ls/false$20852$17Rald
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$19663$17Rald
                                                               'cons)
                                                             g$x$20834$17Rald
                                                             g$y$20835$17Rald)))
                                                        g$ls/false$20852$17Rald)
                                                      (g$syntax-violation$19839$17Rald
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$20851$17Rald))))
                                                 (g$syntax-dispatch$19720$17Rald
                                                   g$t$20851$17Rald
                                                   '_))))
                                             g$t$20848$17Rald))))
                                       (g$syntax-dispatch$19720$17Rald
                                         g$t$20848$17Rald
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$20836$17Rald))))
                             (g$syntax-dispatch$19720$17Rald
                               g$t$20836$17Rald
                               '(#(scheme-id quote) any)))))
                         g$y$20835$17Rald))))
                   (g$quasiappend$20744$17Rald
                     (case-lambda
                       ((g$x$20821$17Rald g$y$20822$17Rald)
                        ((case-lambda
                           ((g$ls$20823$17Rald)
                            (if (null? g$ls$20823$17Rald)
                              (list
                                (g$scheme-stx$19663$17Rald 'quote)
                                '())
                              (if (null? (cdr g$ls$20823$17Rald))
                                (car g$ls$20823$17Rald)
                                (g$cons*$11837$17Rald
                                  (g$scheme-stx$19663$17Rald 'append)
                                  g$ls$20823$17Rald)))))
                         ((letrec ((g$f$20824$17Rald
                                     (case-lambda
                                       ((g$x$20825$17Rald)
                                        (if (null? g$x$20825$17Rald)
                                          ((case-lambda
                                             ((g$t$20826$17Rald)
                                              ((case-lambda
                                                 ((g$ls/false$20827$17Rald)
                                                  (if g$ls/false$20827$17Rald
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$20827$17Rald)
                                                    ((case-lambda
                                                       ((g$t$20828$17Rald)
                                                        ((case-lambda
                                                           ((g$ls/false$20829$17Rald)
                                                            (if g$ls/false$20829$17Rald
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$20822$17Rald)))
                                                                g$ls/false$20829$17Rald)
                                                              (g$syntax-violation$19839$17Rald
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$20828$17Rald))))
                                                         (g$syntax-dispatch$19720$17Rald
                                                           g$t$20828$17Rald
                                                           '_))))
                                                     g$t$20826$17Rald))))
                                               (g$syntax-dispatch$19720$17Rald
                                                 g$t$20826$17Rald
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$20822$17Rald)
                                          ((case-lambda
                                             ((g$t$20830$17Rald)
                                              ((case-lambda
                                                 ((g$ls/false$20831$17Rald)
                                                  (if g$ls/false$20831$17Rald
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$20824$17Rald
                                                           (cdr g$x$20825$17Rald))))
                                                      g$ls/false$20831$17Rald)
                                                    ((case-lambda
                                                       ((g$t$20832$17Rald)
                                                        ((case-lambda
                                                           ((g$ls/false$20833$17Rald)
                                                            (if g$ls/false$20833$17Rald
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$20825$17Rald)
                                                                     (g$f$20824$17Rald
                                                                       (cdr g$x$20825$17Rald)))))
                                                                g$ls/false$20833$17Rald)
                                                              (g$syntax-violation$19839$17Rald
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$20832$17Rald))))
                                                         (g$syntax-dispatch$19720$17Rald
                                                           g$t$20832$17Rald
                                                           '_))))
                                                     g$t$20830$17Rald))))
                                               (g$syntax-dispatch$19720$17Rald
                                                 g$t$20830$17Rald
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$20825$17Rald)))))))
                            g$f$20824$17Rald)
                          g$x$20821$17Rald)))))
                   (g$quasivector$20745$17Rald
                     (case-lambda
                       ((g$x$20796$17Rald)
                        ((case-lambda
                           ((g$pat-x$20797$17Rald)
                            ((case-lambda
                               ((g$t$20798$17Rald)
                                ((case-lambda
                                   ((g$ls/false$20799$17Rald)
                                    (if g$ls/false$20799$17Rald
                                      (apply
                                        (case-lambda
                                          ((g$x*$20800$17Rald)
                                           (list
                                             (g$scheme-stx$19663$17Rald
                                               'quote)
                                             (g$list->vector$12620$17Rald
                                               g$x*$20800$17Rald))))
                                        g$ls/false$20799$17Rald)
                                      ((case-lambda
                                         ((g$t$20801$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$20802$17Rald)
                                              (if g$ls/false$20802$17Rald
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$20803$17Rald
                                                                 (case-lambda
                                                                   ((g$x$20804$17Rald
                                                                      g$k$20805$17Rald)
                                                                    ((case-lambda
                                                                       ((g$t$20806$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20807$17Rald)
                                                                            (if g$ls/false$20807$17Rald
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$20808$17Rald)
                                                                                   (g$k$20805$17Rald
                                                                                     (g$map$11835$17Rald
                                                                                       (case-lambda
                                                                                         ((g$x$20809$17Rald)
                                                                                          (list
                                                                                            (g$scheme-stx$19663$17Rald
                                                                                              'quote)
                                                                                            g$x$20809$17Rald)))
                                                                                       g$x*$20808$17Rald))))
                                                                                g$ls/false$20807$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$t$20810$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$20811$17Rald)
                                                                                      (if g$ls/false$20811$17Rald
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$20812$17Rald)
                                                                                             (g$k$20805$17Rald
                                                                                               g$x*$20812$17Rald)))
                                                                                          g$ls/false$20811$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$t$20813$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$20814$17Rald)
                                                                                                (if g$ls/false$20814$17Rald
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$20815$17Rald
                                                                                                         g$y$20816$17Rald)
                                                                                                       (g$f$20803$17Rald
                                                                                                         g$y$20816$17Rald
                                                                                                         (case-lambda
                                                                                                           ((g$ls$20817$17Rald)
                                                                                                            (g$k$20805$17Rald
                                                                                                              (cons
                                                                                                                g$x$20815$17Rald
                                                                                                                g$ls$20817$17Rald)))))))
                                                                                                    g$ls/false$20814$17Rald)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$20818$17Rald)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$20819$17Rald)
                                                                                                          (if g$ls/false$20819$17Rald
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$19663$17Rald
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$20797$17Rald)))
                                                                                                              g$ls/false$20819$17Rald)
                                                                                                            (g$syntax-violation$19839$17Rald
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$20818$17Rald))))
                                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                                         g$t$20818$17Rald
                                                                                                         '_))))
                                                                                                   g$t$20813$17Rald))))
                                                                                             (g$syntax-dispatch$19720$17Rald
                                                                                               g$t$20813$17Rald
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$20810$17Rald))))
                                                                                   (g$syntax-dispatch$19720$17Rald
                                                                                     g$t$20810$17Rald
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$20806$17Rald))))
                                                                         (g$syntax-dispatch$19720$17Rald
                                                                           g$t$20806$17Rald
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$20804$17Rald)))))
                                                        g$f$20803$17Rald)
                                                      g$x$20796$17Rald
                                                      (case-lambda
                                                        ((g$ls$20820$17Rald)
                                                         (g$cons*$11837$17Rald
                                                           (g$scheme-stx$19663$17Rald
                                                             'vector)
                                                           g$ls$20820$17Rald))))))
                                                  g$ls/false$20802$17Rald)
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$20801$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$20801$17Rald
                                             '_))))
                                       g$t$20798$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$20798$17Rald
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$20797$17Rald)))
                         g$x$20796$17Rald))))
                   (g$vquasi$20746$17Rald
                     (case-lambda
                       ((g$p$20779$17Rald g$lev$20780$17Rald)
                        ((case-lambda
                           ((g$t$20781$17Rald)
                            ((case-lambda
                               ((g$ls/false$20782$17Rald)
                                (if g$ls/false$20782$17Rald
                                  (apply
                                    (case-lambda
                                      ((g$p$20783$17Rald
                                         g$q$20784$17Rald)
                                       ((case-lambda
                                          ((g$t$20785$17Rald)
                                           ((case-lambda
                                              ((g$ls/false$20786$17Rald)
                                               (if g$ls/false$20786$17Rald
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$20787$17Rald)
                                                      (if (= g$lev$20780$17Rald
                                                             '0)
                                                        (g$quasicons*$20742$17Rald
                                                          g$p$20787$17Rald
                                                          (g$vquasi$20746$17Rald
                                                            g$q$20784$17Rald
                                                            g$lev$20780$17Rald))
                                                        (g$quasicons$20743$17Rald
                                                          (g$quasicons$20743$17Rald
                                                            (g$datum$20707$17Rald
                                                              'unquote)
                                                            (g$quasi$20747$17Rald
                                                              g$p$20787$17Rald
                                                              (- g$lev$20780$17Rald
                                                                 '1)))
                                                          (g$vquasi$20746$17Rald
                                                            g$q$20784$17Rald
                                                            g$lev$20780$17Rald)))))
                                                   g$ls/false$20786$17Rald)
                                                 ((case-lambda
                                                    ((g$t$20788$17Rald)
                                                     ((case-lambda
                                                        ((g$ls/false$20789$17Rald)
                                                         (if g$ls/false$20789$17Rald
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$20790$17Rald)
                                                                (if (= g$lev$20780$17Rald
                                                                       '0)
                                                                  (g$quasiappend$20744$17Rald
                                                                    g$p$20790$17Rald
                                                                    (g$vquasi$20746$17Rald
                                                                      g$q$20784$17Rald
                                                                      g$lev$20780$17Rald))
                                                                  (g$quasicons$20743$17Rald
                                                                    (g$quasicons$20743$17Rald
                                                                      (g$datum$20707$17Rald
                                                                        'unquote-splicing)
                                                                      (g$quasi$20747$17Rald
                                                                        g$p$20790$17Rald
                                                                        (- g$lev$20780$17Rald
                                                                           '1)))
                                                                    (g$vquasi$20746$17Rald
                                                                      g$q$20784$17Rald
                                                                      g$lev$20780$17Rald)))))
                                                             g$ls/false$20789$17Rald)
                                                           ((case-lambda
                                                              ((g$t$20791$17Rald)
                                                               ((case-lambda
                                                                  ((g$ls/false$20792$17Rald)
                                                                   (if g$ls/false$20792$17Rald
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$20793$17Rald)
                                                                          (g$quasicons$20743$17Rald
                                                                            (g$quasi$20747$17Rald
                                                                              g$p$20793$17Rald
                                                                              g$lev$20780$17Rald)
                                                                            (g$vquasi$20746$17Rald
                                                                              g$q$20784$17Rald
                                                                              g$lev$20780$17Rald))))
                                                                       g$ls/false$20792$17Rald)
                                                                     (g$syntax-violation$19839$17Rald
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$20791$17Rald))))
                                                                (g$syntax-dispatch$19720$17Rald
                                                                  g$t$20791$17Rald
                                                                  'any))))
                                                            g$t$20788$17Rald))))
                                                      (g$syntax-dispatch$19720$17Rald
                                                        g$t$20788$17Rald
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$20785$17Rald))))
                                            (g$syntax-dispatch$19720$17Rald
                                              g$t$20785$17Rald
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$20783$17Rald)))
                                    g$ls/false$20782$17Rald)
                                  ((case-lambda
                                     ((g$t$20794$17Rald)
                                      ((case-lambda
                                         ((g$ls/false$20795$17Rald)
                                          (if g$ls/false$20795$17Rald
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$19663$17Rald
                                                     'quote)
                                                   '())))
                                              g$ls/false$20795$17Rald)
                                            (g$syntax-violation$19839$17Rald
                                              '#f
                                              '"invalid syntax"
                                              g$t$20794$17Rald))))
                                       (g$syntax-dispatch$19720$17Rald
                                         g$t$20794$17Rald
                                         '()))))
                                   g$t$20781$17Rald))))
                             (g$syntax-dispatch$19720$17Rald
                               g$t$20781$17Rald
                               '(any . any)))))
                         g$p$20779$17Rald))))
                   (g$quasi$20747$17Rald
                     (case-lambda
                       ((g$p$20752$17Rald g$lev$20753$17Rald)
                        ((case-lambda
                           ((g$t$20754$17Rald)
                            ((case-lambda
                               ((g$ls/false$20755$17Rald)
                                (if g$ls/false$20755$17Rald
                                  (apply
                                    (case-lambda
                                      ((g$p$20756$17Rald)
                                       (if (= g$lev$20753$17Rald '0)
                                         g$p$20756$17Rald
                                         (g$quasicons$20743$17Rald
                                           (g$datum$20707$17Rald
                                             'unquote)
                                           (g$quasi$20747$17Rald
                                             (list g$p$20756$17Rald)
                                             (- g$lev$20753$17Rald
                                                '1))))))
                                    g$ls/false$20755$17Rald)
                                  ((case-lambda
                                     ((g$t$20757$17Rald)
                                      ((case-lambda
                                         ((g$ls/false$20758$17Rald)
                                          (if g$ls/false$20758$17Rald
                                            (apply
                                              (case-lambda
                                                ((g$p$20759$17Rald
                                                   g$q$20760$17Rald)
                                                 (if (= g$lev$20753$17Rald
                                                        '0)
                                                   (g$quasicons*$20742$17Rald
                                                     g$p$20759$17Rald
                                                     (g$quasi$20747$17Rald
                                                       g$q$20760$17Rald
                                                       g$lev$20753$17Rald))
                                                   (g$quasicons$20743$17Rald
                                                     (g$quasicons$20743$17Rald
                                                       (g$datum$20707$17Rald
                                                         'unquote)
                                                       (g$quasi$20747$17Rald
                                                         g$p$20759$17Rald
                                                         (- g$lev$20753$17Rald
                                                            '1)))
                                                     (g$quasi$20747$17Rald
                                                       g$q$20760$17Rald
                                                       g$lev$20753$17Rald)))))
                                              g$ls/false$20758$17Rald)
                                            ((case-lambda
                                               ((g$t$20761$17Rald)
                                                ((case-lambda
                                                   ((g$ls/false$20762$17Rald)
                                                    (if g$ls/false$20762$17Rald
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$20763$17Rald
                                                             g$q$20764$17Rald)
                                                           (if (= g$lev$20753$17Rald
                                                                  '0)
                                                             (g$quasiappend$20744$17Rald
                                                               g$p$20763$17Rald
                                                               (g$quasi$20747$17Rald
                                                                 g$q$20764$17Rald
                                                                 g$lev$20753$17Rald))
                                                             (g$quasicons$20743$17Rald
                                                               (g$quasicons$20743$17Rald
                                                                 (g$datum$20707$17Rald
                                                                   'unquote-splicing)
                                                                 (g$quasi$20747$17Rald
                                                                   g$p$20763$17Rald
                                                                   (- g$lev$20753$17Rald
                                                                      '1)))
                                                               (g$quasi$20747$17Rald
                                                                 g$q$20764$17Rald
                                                                 g$lev$20753$17Rald)))))
                                                        g$ls/false$20762$17Rald)
                                                      ((case-lambda
                                                         ((g$t$20765$17Rald)
                                                          ((case-lambda
                                                             ((g$ls/false$20766$17Rald)
                                                              (if g$ls/false$20766$17Rald
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$20767$17Rald)
                                                                     (g$quasicons$20743$17Rald
                                                                       (g$datum$20707$17Rald
                                                                         'quasiquote)
                                                                       (g$quasi$20747$17Rald
                                                                         (list
                                                                           g$p$20767$17Rald)
                                                                         (+ g$lev$20753$17Rald
                                                                            '1)))))
                                                                  g$ls/false$20766$17Rald)
                                                                ((case-lambda
                                                                   ((g$t$20768$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20769$17Rald)
                                                                        (if g$ls/false$20769$17Rald
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$20770$17Rald
                                                                                 g$q$20771$17Rald)
                                                                               (g$quasicons$20743$17Rald
                                                                                 (g$quasi$20747$17Rald
                                                                                   g$p$20770$17Rald
                                                                                   g$lev$20753$17Rald)
                                                                                 (g$quasi$20747$17Rald
                                                                                   g$q$20771$17Rald
                                                                                   g$lev$20753$17Rald))))
                                                                            g$ls/false$20769$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$20772$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20773$17Rald)
                                                                                  (if (if g$ls/false$20773$17Rald
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$20774$17Rald)
                                                                                               (not (g$stx?$19194$17Rald
                                                                                                      g$x$20774$17Rald))))
                                                                                            g$ls/false$20773$17Rald))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$20775$17Rald)
                                                                                         (g$quasivector$20745$17Rald
                                                                                           (g$vquasi$20746$17Rald
                                                                                             g$x$20775$17Rald
                                                                                             g$lev$20753$17Rald))))
                                                                                      g$ls/false$20773$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$t$20776$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$20777$17Rald)
                                                                                            (if g$ls/false$20777$17Rald
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$20778$17Rald)
                                                                                                   (list
                                                                                                     (g$scheme-stx$19663$17Rald
                                                                                                       'quote)
                                                                                                     g$p$20778$17Rald)))
                                                                                                g$ls/false$20777$17Rald)
                                                                                              (g$syntax-violation$19839$17Rald
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$20776$17Rald))))
                                                                                         (g$syntax-dispatch$19720$17Rald
                                                                                           g$t$20776$17Rald
                                                                                           'any))))
                                                                                     g$t$20772$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$20772$17Rald
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$20768$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$20768$17Rald
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$20765$17Rald))))
                                                           (g$syntax-dispatch$19720$17Rald
                                                             g$t$20765$17Rald
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$20761$17Rald))))
                                                 (g$syntax-dispatch$19720$17Rald
                                                   g$t$20761$17Rald
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$20757$17Rald))))
                                       (g$syntax-dispatch$19720$17Rald
                                         g$t$20757$17Rald
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$20754$17Rald))))
                             (g$syntax-dispatch$19720$17Rald
                               g$t$20754$17Rald
                               '(#(scheme-id unquote) any)))))
                         g$p$20752$17Rald)))))
           (case-lambda
             ((g$x$20748$17Rald)
              ((case-lambda
                 ((g$t$20749$17Rald)
                  ((case-lambda
                     ((g$ls/false$20750$17Rald)
                      (if g$ls/false$20750$17Rald
                        (apply
                          (case-lambda
                            ((g$e$20751$17Rald)
                             (g$quasi$20747$17Rald
                               g$e$20751$17Rald
                               '0)))
                          g$ls/false$20750$17Rald)
                        (g$syntax-violation$19839$17Rald
                          '#f
                          '"invalid syntax"
                          g$t$20749$17Rald))))
                   (g$syntax-dispatch$19720$17Rald
                     g$t$20749$17Rald
                     '(_ any)))))
               g$x$20748$17Rald))))))))
   (g$quasisyntax-macro$19712$17Rald
     g$quasisyntax-macro$23308$17Rald
     ((case-lambda
        (()
         (letrec* ((g$quasi$20858$17Rald
                     (case-lambda
                       ((g$p$20872$17Rald g$lev$20873$17Rald)
                        ((case-lambda
                           ((g$t$20874$17Rald)
                            ((case-lambda
                               ((g$ls/false$20875$17Rald)
                                (if g$ls/false$20875$17Rald
                                  (apply
                                    (case-lambda
                                      ((g$p$20876$17Rald)
                                       (if (= g$lev$20873$17Rald '0)
                                         ((case-lambda
                                            ((g$g$20877$17Rald)
                                             (values
                                               (list g$g$20877$17Rald)
                                               (list g$p$20876$17Rald)
                                               g$g$20877$17Rald)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$20858$17Rald
                                                g$p$20876$17Rald
                                                (- g$lev$20873$17Rald
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$20881$17Rald
                                                g$rhs*$20882$17Rald
                                                g$p$20883$17Rald)
                                              ((case-lambda
                                                 ((g$p$20884$17Rald
                                                    g$rhs*$20885$17Rald
                                                    g$lhs*$20886$17Rald)
                                                  (values
                                                    g$lhs*$20886$17Rald
                                                    g$rhs*$20885$17Rald
                                                    (list
                                                      'unsyntax
                                                      g$p$20884$17Rald))))
                                               g$p$20883$17Rald
                                               g$rhs*$20882$17Rald
                                               g$lhs*$20881$17Rald)))))))
                                    g$ls/false$20875$17Rald)
                                  ((case-lambda
                                     ((g$t$20887$17Rald)
                                      ((case-lambda
                                         ((g$ls/false$20888$17Rald)
                                          (if (if g$ls/false$20888$17Rald
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$20873$17Rald
                                                          '0)))
                                                    g$ls/false$20888$17Rald))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$19839$17Rald
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$20872$17Rald)))
                                              g$ls/false$20888$17Rald)
                                            ((case-lambda
                                               ((g$t$20889$17Rald)
                                                ((case-lambda
                                                   ((g$ls/false$20890$17Rald)
                                                    (if g$ls/false$20890$17Rald
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$20891$17Rald
                                                             g$q$20892$17Rald)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$20858$17Rald
                                                                  g$q$20892$17Rald
                                                                  g$lev$20873$17Rald)))
                                                             (case-lambda
                                                               ((g$lhs*$20896$17Rald
                                                                  g$rhs*$20897$17Rald
                                                                  g$q$20898$17Rald)
                                                                ((case-lambda
                                                                   ((g$q$20899$17Rald
                                                                      g$rhs*$20900$17Rald
                                                                      g$lhs*$20901$17Rald)
                                                                    (if (= g$lev$20873$17Rald
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$20902$17Rald)
                                                                          (values
                                                                            (append
                                                                              g$g*$20902$17Rald
                                                                              g$lhs*$20901$17Rald)
                                                                            (append
                                                                              g$p*$20891$17Rald
                                                                              g$rhs*$20900$17Rald)
                                                                            (append
                                                                              g$g*$20902$17Rald
                                                                              g$q$20899$17Rald))))
                                                                       (g$map$11835$17Rald
                                                                         (case-lambda
                                                                           ((g$x$20903$17Rald)
                                                                            (gensym)))
                                                                         g$p*$20891$17Rald))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$20858$17Rald
                                                                             g$p*$20891$17Rald
                                                                             (- g$lev$20873$17Rald
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$20907$17Rald
                                                                             g$rhs2*$20908$17Rald
                                                                             g$p*$20909$17Rald)
                                                                           ((case-lambda
                                                                              ((g$p*$20910$17Rald
                                                                                 g$rhs2*$20911$17Rald
                                                                                 g$lhs2*$20912$17Rald)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$20912$17Rald
                                                                                   g$lhs*$20901$17Rald)
                                                                                 (append
                                                                                   g$rhs2*$20911$17Rald
                                                                                   g$rhs*$20900$17Rald)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$20910$17Rald)
                                                                                   g$q$20899$17Rald))))
                                                                            g$p*$20909$17Rald
                                                                            g$rhs2*$20908$17Rald
                                                                            g$lhs2*$20907$17Rald)))))))
                                                                 g$q$20898$17Rald
                                                                 g$rhs*$20897$17Rald
                                                                 g$lhs*$20896$17Rald))))))
                                                        g$ls/false$20890$17Rald)
                                                      ((case-lambda
                                                         ((g$t$20913$17Rald)
                                                          ((case-lambda
                                                             ((g$ls/false$20914$17Rald)
                                                              (if g$ls/false$20914$17Rald
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$20915$17Rald
                                                                       g$q$20916$17Rald)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$20858$17Rald
                                                                            g$q$20916$17Rald
                                                                            g$lev$20873$17Rald)))
                                                                       (case-lambda
                                                                         ((g$lhs*$20920$17Rald
                                                                            g$rhs*$20921$17Rald
                                                                            g$q$20922$17Rald)
                                                                          ((case-lambda
                                                                             ((g$q$20923$17Rald
                                                                                g$rhs*$20924$17Rald
                                                                                g$lhs*$20925$17Rald)
                                                                              (if (= g$lev$20873$17Rald
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$20926$17Rald)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11835$17Rald
                                                                                          (case-lambda
                                                                                            ((g$g$20927$17Rald)
                                                                                             (cons
                                                                                               g$g$20927$17Rald
                                                                                               '(...))))
                                                                                          g$g*$20926$17Rald)
                                                                                        g$lhs*$20925$17Rald)
                                                                                      (append
                                                                                        g$p*$20915$17Rald
                                                                                        g$rhs*$20924$17Rald)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11835$17Rald
                                                                                            (case-lambda
                                                                                              ((g$g$20928$17Rald)
                                                                                               (cons
                                                                                                 g$g$20928$17Rald
                                                                                                 '(...))))
                                                                                            g$g*$20926$17Rald))
                                                                                        g$q$20923$17Rald))))
                                                                                 (g$map$11835$17Rald
                                                                                   (case-lambda
                                                                                     ((g$x$20929$17Rald)
                                                                                      (gensym)))
                                                                                   g$p*$20915$17Rald))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$20858$17Rald
                                                                                       g$p*$20915$17Rald
                                                                                       (- g$lev$20873$17Rald
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$20933$17Rald
                                                                                       g$rhs2*$20934$17Rald
                                                                                       g$p*$20935$17Rald)
                                                                                     ((case-lambda
                                                                                        ((g$p*$20936$17Rald
                                                                                           g$rhs2*$20937$17Rald
                                                                                           g$lhs2*$20938$17Rald)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$20938$17Rald
                                                                                             g$lhs*$20925$17Rald)
                                                                                           (append
                                                                                             g$rhs2*$20937$17Rald
                                                                                             g$rhs*$20924$17Rald)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$20936$17Rald)
                                                                                             g$q$20923$17Rald))))
                                                                                      g$p*$20935$17Rald
                                                                                      g$rhs2*$20934$17Rald
                                                                                      g$lhs2*$20933$17Rald)))))))
                                                                           g$q$20922$17Rald
                                                                           g$rhs*$20921$17Rald
                                                                           g$lhs*$20920$17Rald))))))
                                                                  g$ls/false$20914$17Rald)
                                                                ((case-lambda
                                                                   ((g$t$20939$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20940$17Rald)
                                                                        (if (if g$ls/false$20940$17Rald
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$20873$17Rald
                                                                                        '0)))
                                                                                  g$ls/false$20940$17Rald))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$19839$17Rald
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$20872$17Rald)))
                                                                            g$ls/false$20940$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$20941$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20942$17Rald)
                                                                                  (if g$ls/false$20942$17Rald
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$20943$17Rald)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$20858$17Rald
                                                                                                g$p$20943$17Rald
                                                                                                (+ g$lev$20873$17Rald
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$20947$17Rald
                                                                                                g$rhs*$20948$17Rald
                                                                                                g$p$20949$17Rald)
                                                                                              ((case-lambda
                                                                                                 ((g$p$20950$17Rald
                                                                                                    g$rhs*$20951$17Rald
                                                                                                    g$lhs*$20952$17Rald)
                                                                                                  (values
                                                                                                    g$lhs*$20952$17Rald
                                                                                                    g$rhs*$20951$17Rald
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$20950$17Rald))))
                                                                                               g$p$20949$17Rald
                                                                                               g$rhs*$20948$17Rald
                                                                                               g$lhs*$20947$17Rald))))))
                                                                                      g$ls/false$20942$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$t$20953$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$20954$17Rald)
                                                                                            (if g$ls/false$20954$17Rald
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$20955$17Rald
                                                                                                     g$q$20956$17Rald)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$20858$17Rald
                                                                                                          g$p$20955$17Rald
                                                                                                          g$lev$20873$17Rald)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$20963$17Rald
                                                                                                          g$rhs*$20964$17Rald
                                                                                                          g$p$20965$17Rald)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$20858$17Rald
                                                                                                               g$q$20956$17Rald
                                                                                                               g$lev$20873$17Rald)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$20966$17Rald
                                                                                                               g$rhs2*$20967$17Rald
                                                                                                               g$q$20968$17Rald)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$20969$17Rald
                                                                                                                   g$rhs2*$20970$17Rald
                                                                                                                   g$lhs2*$20971$17Rald
                                                                                                                   g$p$20972$17Rald
                                                                                                                   g$rhs*$20973$17Rald
                                                                                                                   g$lhs*$20974$17Rald)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$20971$17Rald
                                                                                                                     g$lhs*$20974$17Rald)
                                                                                                                   (append
                                                                                                                     g$rhs2*$20970$17Rald
                                                                                                                     g$rhs*$20973$17Rald)
                                                                                                                   (cons
                                                                                                                     g$p$20972$17Rald
                                                                                                                     g$q$20969$17Rald))))
                                                                                                              g$q$20968$17Rald
                                                                                                              g$rhs2*$20967$17Rald
                                                                                                              g$lhs2*$20966$17Rald
                                                                                                              g$p$20965$17Rald
                                                                                                              g$rhs*$20964$17Rald
                                                                                                              g$lhs*$20963$17Rald)))))))))
                                                                                                g$ls/false$20954$17Rald)
                                                                                              ((case-lambda
                                                                                                 ((g$t$20975$17Rald)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$20976$17Rald)
                                                                                                      (if g$ls/false$20976$17Rald
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$20977$17Rald)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$20858$17Rald
                                                                                                                    g$x*$20977$17Rald
                                                                                                                    g$lev$20873$17Rald)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$20981$17Rald
                                                                                                                    g$rhs*$20982$17Rald
                                                                                                                    g$x*$20983$17Rald)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$20984$17Rald
                                                                                                                        g$rhs*$20985$17Rald
                                                                                                                        g$lhs*$20986$17Rald)
                                                                                                                      (values
                                                                                                                        g$lhs*$20986$17Rald
                                                                                                                        g$rhs*$20985$17Rald
                                                                                                                        (g$list->vector$12620$17Rald
                                                                                                                          g$x*$20984$17Rald))))
                                                                                                                   g$x*$20983$17Rald
                                                                                                                   g$rhs*$20982$17Rald
                                                                                                                   g$lhs*$20981$17Rald))))))
                                                                                                          g$ls/false$20976$17Rald)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$20987$17Rald)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$20988$17Rald)
                                                                                                                (if g$ls/false$20988$17Rald
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$20872$17Rald)))
                                                                                                                    g$ls/false$20988$17Rald)
                                                                                                                  (g$syntax-violation$19839$17Rald
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$20987$17Rald))))
                                                                                                             (g$syntax-dispatch$19720$17Rald
                                                                                                               g$t$20987$17Rald
                                                                                                               '_))))
                                                                                                         g$t$20975$17Rald))))
                                                                                                   (g$syntax-dispatch$19720$17Rald
                                                                                                     g$t$20975$17Rald
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$20953$17Rald))))
                                                                                         (g$syntax-dispatch$19720$17Rald
                                                                                           g$t$20953$17Rald
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$20941$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$20941$17Rald
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$20939$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$20939$17Rald
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$20913$17Rald))))
                                                           (g$syntax-dispatch$19720$17Rald
                                                             g$t$20913$17Rald
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$20889$17Rald))))
                                                 (g$syntax-dispatch$19720$17Rald
                                                   g$t$20889$17Rald
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$20887$17Rald))))
                                       (g$syntax-dispatch$19720$17Rald
                                         g$t$20887$17Rald
                                         '#(scheme-id unsyntax)))))
                                   g$t$20874$17Rald))))
                             (g$syntax-dispatch$19720$17Rald
                               g$t$20874$17Rald
                               '(#(scheme-id unsyntax) any)))))
                         g$p$20872$17Rald)))))
           (case-lambda
             ((g$x$20859$17Rald)
              ((case-lambda
                 ((g$t$20860$17Rald)
                  ((case-lambda
                     ((g$ls/false$20861$17Rald)
                      (if g$ls/false$20861$17Rald
                        (apply
                          (case-lambda
                            ((g$e$20862$17Rald)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$20858$17Rald
                                    g$e$20862$17Rald
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$20866$17Rald
                                    g$rhs*$20867$17Rald
                                    g$v$20868$17Rald)
                                  ((case-lambda
                                     ((g$v$20869$17Rald
                                        g$rhs*$20870$17Rald
                                        g$lhs*$20871$17Rald)
                                      (g$bless$19683$17Rald
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$20870$17Rald)
                                          '()
                                          (list
                                            g$lhs*$20871$17Rald
                                            (list
                                              'syntax
                                              g$v$20869$17Rald))))))
                                   g$v$20868$17Rald
                                   g$rhs*$20867$17Rald
                                   g$lhs*$20866$17Rald))))))
                          g$ls/false$20861$17Rald)
                        (g$syntax-violation$19839$17Rald
                          '#f
                          '"invalid syntax"
                          g$t$20860$17Rald))))
                   (g$syntax-dispatch$19720$17Rald
                     g$t$20860$17Rald
                     '(_ any)))))
               g$x$20859$17Rald))))))))
   (g$define-struct-macro$19713$17Rald
     g$define-struct-macro$23309$17Rald
     (case-lambda
       ((g$stx$20989$17Rald)
        (g$syntax-violation$19839$17Rald
          '#f
          '"define-struct not supported"
          g$stx$20989$17Rald))))
   (g$define-record-type-macro$19714$17Rald
     g$define-record-type-macro$23310$17Rald
     (case-lambda
       ((g$x$20990$17Rald)
        (letrec* ((g$id$20991$17Rald
                    (case-lambda
                      ((g$ctxt$21243$17Rald . g$str*$21244$17Rald)
                       (g$datum->syntax$19841$17Rald
                         g$ctxt$21243$17Rald
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11835$17Rald
                               (case-lambda
                                 ((g$x$21245$17Rald)
                                  (if (g$symbol?$12610$17Rald
                                        g$x$21245$17Rald)
                                    (symbol->string g$x$21245$17Rald)
                                    (if (string? g$x$21245$17Rald)
                                      g$x$21245$17Rald
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$21244$17Rald)))))))
                  (g$get-record-name$20992$17Rald
                    (case-lambda
                      ((g$spec$21234$17Rald)
                       ((case-lambda
                          ((g$t$21235$17Rald)
                           ((case-lambda
                              ((g$ls/false$21236$17Rald)
                               (if g$ls/false$21236$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$foo$21237$17Rald
                                        g$make-foo$21238$17Rald
                                        g$foo?$21239$17Rald)
                                      g$foo$21237$17Rald))
                                   g$ls/false$21236$17Rald)
                                 ((case-lambda
                                    ((g$t$21240$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21241$17Rald)
                                         (if g$ls/false$21241$17Rald
                                           (apply
                                             (case-lambda
                                               ((g$foo$21242$17Rald)
                                                g$foo$21242$17Rald))
                                             g$ls/false$21241$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21240$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21240$17Rald
                                        'any))))
                                  g$t$21235$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21235$17Rald
                              '(any any any)))))
                        g$spec$21234$17Rald))))
                  (g$get-record-constructor-name$20993$17Rald
                    (case-lambda
                      ((g$spec$21224$17Rald)
                       ((case-lambda
                          ((g$t$21225$17Rald)
                           ((case-lambda
                              ((g$ls/false$21226$17Rald)
                               (if g$ls/false$21226$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$foo$21227$17Rald
                                        g$make-foo$21228$17Rald
                                        g$foo?$21229$17Rald)
                                      g$make-foo$21228$17Rald))
                                   g$ls/false$21226$17Rald)
                                 ((case-lambda
                                    ((g$t$21230$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21231$17Rald)
                                         (if (if g$ls/false$21231$17Rald
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21232$17Rald)
                                                      (g$id?$19222$17Rald
                                                        g$foo$21232$17Rald)))
                                                   g$ls/false$21231$17Rald))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21233$17Rald)
                                                (g$id$20991$17Rald
                                                  g$foo$21233$17Rald
                                                  '"make-"
                                                  (g$stx->datum$19233$17Rald
                                                    g$foo$21233$17Rald))))
                                             g$ls/false$21231$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21230$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21230$17Rald
                                        'any))))
                                  g$t$21225$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21225$17Rald
                              '(any any any)))))
                        g$spec$21224$17Rald))))
                  (g$get-record-predicate-name$20994$17Rald
                    (case-lambda
                      ((g$spec$21214$17Rald)
                       ((case-lambda
                          ((g$t$21215$17Rald)
                           ((case-lambda
                              ((g$ls/false$21216$17Rald)
                               (if g$ls/false$21216$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$foo$21217$17Rald
                                        g$make-foo$21218$17Rald
                                        g$foo?$21219$17Rald)
                                      g$foo?$21219$17Rald))
                                   g$ls/false$21216$17Rald)
                                 ((case-lambda
                                    ((g$t$21220$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21221$17Rald)
                                         (if (if g$ls/false$21221$17Rald
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21222$17Rald)
                                                      (g$id?$19222$17Rald
                                                        g$foo$21222$17Rald)))
                                                   g$ls/false$21221$17Rald))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21223$17Rald)
                                                (g$id$20991$17Rald
                                                  g$foo$21223$17Rald
                                                  (g$stx->datum$19233$17Rald
                                                    g$foo$21223$17Rald)
                                                  '"?")))
                                             g$ls/false$21221$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21220$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21220$17Rald
                                        'any))))
                                  g$t$21215$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21215$17Rald
                              '(any any any)))))
                        g$spec$21214$17Rald))))
                  (g$get-clause$20995$17Rald
                    (case-lambda
                      ((g$id$21205$17Rald g$ls$21206$17Rald)
                       ((case-lambda
                          ((g$t$21207$17Rald)
                           ((case-lambda
                              ((g$ls/false$21208$17Rald)
                               (if g$ls/false$21208$17Rald
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$21208$17Rald)
                                 ((case-lambda
                                    ((g$t$21209$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21210$17Rald)
                                         (if g$ls/false$21210$17Rald
                                           (apply
                                             (case-lambda
                                               ((g$x$21211$17Rald
                                                  g$rest$21212$17Rald
                                                  g$ls$21213$17Rald)
                                                (if (g$free-id=?$19226$17Rald
                                                      (g$bless$19683$17Rald
                                                        g$id$21205$17Rald)
                                                      g$x$21211$17Rald)
                                                  (cons
                                                    g$x$21211$17Rald
                                                    g$rest$21212$17Rald)
                                                  (g$get-clause$20995$17Rald
                                                    g$id$21205$17Rald
                                                    g$ls$21213$17Rald))))
                                             g$ls/false$21210$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21209$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21209$17Rald
                                        '((any . any) . any)))))
                                  g$t$21207$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21207$17Rald
                              '()))))
                        g$ls$21206$17Rald))))
                  (g$foo-rtd-code$20996$17Rald
                    (case-lambda
                      ((g$name$21164$17Rald
                         g$clause*$21165$17Rald
                         g$parent-rtd-code$21166$17Rald)
                       (letrec* ((g$convert-field-spec*$21167$17Rald
                                   (case-lambda
                                     ((g$ls$21192$17Rald)
                                      (g$list->vector$12620$17Rald
                                        (g$map$11835$17Rald
                                          (case-lambda
                                            ((g$x$21193$17Rald)
                                             ((case-lambda
                                                ((g$t$21194$17Rald)
                                                 ((case-lambda
                                                    ((g$ls/false$21195$17Rald)
                                                     (if g$ls/false$21195$17Rald
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$21196$17Rald
                                                              g$rest$21197$17Rald)
                                                            (list
                                                              'mutable
                                                              g$name$21196$17Rald)))
                                                         g$ls/false$21195$17Rald)
                                                       ((case-lambda
                                                          ((g$t$21198$17Rald)
                                                           ((case-lambda
                                                              ((g$ls/false$21199$17Rald)
                                                               (if g$ls/false$21199$17Rald
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$21200$17Rald
                                                                        g$rest$21201$17Rald)
                                                                      (list
                                                                        'immutable
                                                                        g$name$21200$17Rald)))
                                                                   g$ls/false$21199$17Rald)
                                                                 ((case-lambda
                                                                    ((g$t$21202$17Rald)
                                                                     ((case-lambda
                                                                        ((g$ls/false$21203$17Rald)
                                                                         (if g$ls/false$21203$17Rald
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$21204$17Rald)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$21204$17Rald)))
                                                                             g$ls/false$21203$17Rald)
                                                                           (g$syntax-violation$19839$17Rald
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$21202$17Rald))))
                                                                      (g$syntax-dispatch$19720$17Rald
                                                                        g$t$21202$17Rald
                                                                        'any))))
                                                                  g$t$21198$17Rald))))
                                                            (g$syntax-dispatch$19720$17Rald
                                                              g$t$21198$17Rald
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$21194$17Rald))))
                                                  (g$syntax-dispatch$19720$17Rald
                                                    g$t$21194$17Rald
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$21193$17Rald)))
                                          g$ls$21192$17Rald))))))
                         ((case-lambda
                            ((g$uid-code$21168$17Rald
                               g$sealed?$21169$17Rald
                               g$opaque?$21170$17Rald
                               g$fields$21171$17Rald)
                             (g$bless$19683$17Rald
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$21164$17Rald)
                                 g$parent-rtd-code$21166$17Rald
                                 g$uid-code$21168$17Rald
                                 g$sealed?$21169$17Rald
                                 g$opaque?$21170$17Rald
                                 g$fields$21171$17Rald))))
                          ((case-lambda
                             ((g$t$21172$17Rald)
                              ((case-lambda
                                 ((g$ls/false$21173$17Rald)
                                  (if g$ls/false$21173$17Rald
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$21173$17Rald)
                                    ((case-lambda
                                       ((g$t$21174$17Rald)
                                        ((case-lambda
                                           ((g$ls/false$21175$17Rald)
                                            (if g$ls/false$21175$17Rald
                                              (apply
                                                (case-lambda
                                                  ((g$uid$21176$17Rald)
                                                   (list
                                                     'quote
                                                     g$uid$21176$17Rald)))
                                                g$ls/false$21175$17Rald)
                                              ((case-lambda
                                                 ((g$t$21177$17Rald)
                                                  ((case-lambda
                                                     ((g$ls/false$21178$17Rald)
                                                      (if g$ls/false$21178$17Rald
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$21178$17Rald)
                                                        (g$syntax-violation$19839$17Rald
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$21177$17Rald))))
                                                   (g$syntax-dispatch$19720$17Rald
                                                     g$t$21177$17Rald
                                                     '_))))
                                               g$t$21174$17Rald))))
                                         (g$syntax-dispatch$19720$17Rald
                                           g$t$21174$17Rald
                                           '(_ any)))))
                                     g$t$21172$17Rald))))
                               (g$syntax-dispatch$19720$17Rald
                                 g$t$21172$17Rald
                                 '(_)))))
                           (g$get-clause$20995$17Rald
                             'nongenerative
                             g$clause*$21165$17Rald))
                          ((case-lambda
                             ((g$t$21179$17Rald)
                              ((case-lambda
                                 ((g$ls/false$21180$17Rald)
                                  (if g$ls/false$21180$17Rald
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21180$17Rald)
                                    ((case-lambda
                                       ((g$t$21181$17Rald)
                                        ((case-lambda
                                           ((g$ls/false$21182$17Rald)
                                            (if g$ls/false$21182$17Rald
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21182$17Rald)
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"invalid syntax"
                                                g$t$21181$17Rald))))
                                         (g$syntax-dispatch$19720$17Rald
                                           g$t$21181$17Rald
                                           '_))))
                                     g$t$21179$17Rald))))
                               (g$syntax-dispatch$19720$17Rald
                                 g$t$21179$17Rald
                                 '(_ #(atom #t))))))
                           (g$get-clause$20995$17Rald
                             'sealed
                             g$clause*$21165$17Rald))
                          ((case-lambda
                             ((g$t$21183$17Rald)
                              ((case-lambda
                                 ((g$ls/false$21184$17Rald)
                                  (if g$ls/false$21184$17Rald
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21184$17Rald)
                                    ((case-lambda
                                       ((g$t$21185$17Rald)
                                        ((case-lambda
                                           ((g$ls/false$21186$17Rald)
                                            (if g$ls/false$21186$17Rald
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21186$17Rald)
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"invalid syntax"
                                                g$t$21185$17Rald))))
                                         (g$syntax-dispatch$19720$17Rald
                                           g$t$21185$17Rald
                                           '_))))
                                     g$t$21183$17Rald))))
                               (g$syntax-dispatch$19720$17Rald
                                 g$t$21183$17Rald
                                 '(_ #(atom #t))))))
                           (g$get-clause$20995$17Rald
                             'opaque
                             g$clause*$21165$17Rald))
                          ((case-lambda
                             ((g$t$21187$17Rald)
                              ((case-lambda
                                 ((g$ls/false$21188$17Rald)
                                  (if g$ls/false$21188$17Rald
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$21189$17Rald)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$21167$17Rald
                                             g$field-spec*$21189$17Rald))))
                                      g$ls/false$21188$17Rald)
                                    ((case-lambda
                                       ((g$t$21190$17Rald)
                                        ((case-lambda
                                           ((g$ls/false$21191$17Rald)
                                            (if g$ls/false$21191$17Rald
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$21191$17Rald)
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"invalid syntax"
                                                g$t$21190$17Rald))))
                                         (g$syntax-dispatch$19720$17Rald
                                           g$t$21190$17Rald
                                           '_))))
                                     g$t$21187$17Rald))))
                               (g$syntax-dispatch$19720$17Rald
                                 g$t$21187$17Rald
                                 '(_ . each-any)))))
                           (g$get-clause$20995$17Rald
                             'fields
                             g$clause*$21165$17Rald)))))))
                  (g$parent-rtd-code$20997$17Rald
                    (case-lambda
                      ((g$clause*$21152$17Rald)
                       ((case-lambda
                          ((g$t$21153$17Rald)
                           ((case-lambda
                              ((g$ls/false$21154$17Rald)
                               (if g$ls/false$21154$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$name$21155$17Rald)
                                      (list
                                        'record-type-descriptor
                                        g$name$21155$17Rald)))
                                   g$ls/false$21154$17Rald)
                                 ((case-lambda
                                    ((g$t$21156$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21157$17Rald)
                                         (if g$ls/false$21157$17Rald
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21158$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$21159$17Rald)
                                                        (if g$ls/false$21159$17Rald
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21160$17Rald
                                                                 g$rcd$21161$17Rald)
                                                               g$rtd$21160$17Rald))
                                                            g$ls/false$21159$17Rald)
                                                          ((case-lambda
                                                             ((g$t$21162$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$21163$17Rald)
                                                                  (if g$ls/false$21163$17Rald
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21163$17Rald)
                                                                    (g$syntax-violation$19839$17Rald
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21162$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$21162$17Rald
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21158$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$21158$17Rald
                                                       '(_ any any)))))
                                                 (g$get-clause$20995$17Rald
                                                   'parent-rtd
                                                   g$clause*$21152$17Rald))))
                                             g$ls/false$21157$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21156$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21156$17Rald
                                        '#(atom #f)))))
                                  g$t$21153$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21153$17Rald
                              '(_ any)))))
                        (g$get-clause$20995$17Rald
                          'parent
                          g$clause*$21152$17Rald)))))
                  (g$parent-rcd-code$20998$17Rald
                    (case-lambda
                      ((g$clause*$21140$17Rald)
                       ((case-lambda
                          ((g$t$21141$17Rald)
                           ((case-lambda
                              ((g$ls/false$21142$17Rald)
                               (if g$ls/false$21142$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$name$21143$17Rald)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$21143$17Rald)))
                                   g$ls/false$21142$17Rald)
                                 ((case-lambda
                                    ((g$t$21144$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21145$17Rald)
                                         (if g$ls/false$21145$17Rald
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21146$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$21147$17Rald)
                                                        (if g$ls/false$21147$17Rald
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21148$17Rald
                                                                 g$rcd$21149$17Rald)
                                                               g$rcd$21149$17Rald))
                                                            g$ls/false$21147$17Rald)
                                                          ((case-lambda
                                                             ((g$t$21150$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$21151$17Rald)
                                                                  (if g$ls/false$21151$17Rald
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21151$17Rald)
                                                                    (g$syntax-violation$19839$17Rald
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21150$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$21150$17Rald
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21146$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$21146$17Rald
                                                       '(_ any any)))))
                                                 (g$get-clause$20995$17Rald
                                                   'parent-rtd
                                                   g$clause*$21140$17Rald))))
                                             g$ls/false$21145$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21144$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21144$17Rald
                                        '#(atom #f)))))
                                  g$t$21141$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21141$17Rald
                              '(_ any)))))
                        (g$get-clause$20995$17Rald
                          'parent
                          g$clause*$21140$17Rald)))))
                  (g$foo-rcd-code$20999$17Rald
                    (case-lambda
                      ((g$clause*$21136$17Rald
                         g$foo-rtd$21137$17Rald
                         g$protocol$21138$17Rald
                         g$parent-rcd-code$21139$17Rald)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$21137$17Rald
                         g$parent-rcd-code$21139$17Rald
                         g$protocol$21138$17Rald))))
                  (g$get-protocol-code$21000$17Rald
                    (case-lambda
                      ((g$clause*$21130$17Rald)
                       ((case-lambda
                          ((g$t$21131$17Rald)
                           ((case-lambda
                              ((g$ls/false$21132$17Rald)
                               (if g$ls/false$21132$17Rald
                                 (apply
                                   (case-lambda
                                     ((g$expr$21133$17Rald)
                                      g$expr$21133$17Rald))
                                   g$ls/false$21132$17Rald)
                                 ((case-lambda
                                    ((g$t$21134$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21135$17Rald)
                                         (if g$ls/false$21135$17Rald
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$21135$17Rald)
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$t$21134$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21134$17Rald
                                        '_))))
                                  g$t$21131$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21131$17Rald
                              '(_ any)))))
                        (g$get-clause$20995$17Rald
                          'protocol
                          g$clause*$21130$17Rald)))))
                  (g$get-fields$21001$17Rald
                    (case-lambda
                      ((g$clause*$21121$17Rald)
                       ((case-lambda
                          ((g$t$21122$17Rald)
                           ((case-lambda
                              ((g$ls/false$21123$17Rald)
                               (if g$ls/false$21123$17Rald
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$21123$17Rald)
                                 ((case-lambda
                                    ((g$t$21124$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21125$17Rald)
                                         (if g$ls/false$21125$17Rald
                                           (apply
                                             (case-lambda
                                               ((g$f*$21126$17Rald)
                                                g$f*$21126$17Rald))
                                             g$ls/false$21125$17Rald)
                                           ((case-lambda
                                              ((g$t$21127$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$21128$17Rald)
                                                   (if g$ls/false$21128$17Rald
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$21129$17Rald)
                                                          (g$get-fields$21001$17Rald
                                                            g$rest$21129$17Rald)))
                                                       g$ls/false$21128$17Rald)
                                                     (g$syntax-violation$19839$17Rald
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21127$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$21127$17Rald
                                                  '(_ . any)))))
                                            g$t$21124$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21124$17Rald
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$21122$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21122$17Rald
                              '()))))
                        g$clause*$21121$17Rald))))
                  (g$get-mutator-indices$21002$17Rald
                    (case-lambda
                      ((g$fields$21109$17Rald)
                       ((letrec ((g$f$21110$17Rald
                                   (case-lambda
                                     ((g$fields$21111$17Rald
                                        g$i$21112$17Rald)
                                      ((case-lambda
                                         ((g$t$21113$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$21114$17Rald)
                                              (if g$ls/false$21114$17Rald
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$21114$17Rald)
                                                ((case-lambda
                                                   ((g$t$21115$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$21116$17Rald)
                                                        (if g$ls/false$21116$17Rald
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$21117$17Rald)
                                                               (cons
                                                                 g$i$21112$17Rald
                                                                 (g$f$21110$17Rald
                                                                   g$rest$21117$17Rald
                                                                   (+ g$i$21112$17Rald
                                                                      '1)))))
                                                            g$ls/false$21116$17Rald)
                                                          ((case-lambda
                                                             ((g$t$21118$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$21119$17Rald)
                                                                  (if g$ls/false$21119$17Rald
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$21120$17Rald)
                                                                         (g$f$21110$17Rald
                                                                           g$rest$21120$17Rald
                                                                           (+ g$i$21112$17Rald
                                                                              '1))))
                                                                      g$ls/false$21119$17Rald)
                                                                    (g$syntax-violation$19839$17Rald
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21118$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$21118$17Rald
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$21115$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$21115$17Rald
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$21113$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$21113$17Rald
                                             '()))))
                                       g$fields$21111$17Rald)))))
                          g$f$21110$17Rald)
                        g$fields$21109$17Rald
                        '0))))
                  (g$get-mutators$21003$17Rald
                    (case-lambda
                      ((g$foo$21088$17Rald g$fields$21089$17Rald)
                       (letrec* ((g$gen-name$21090$17Rald
                                   (case-lambda
                                     ((g$x$21108$17Rald)
                                      (g$datum->syntax$19841$17Rald
                                        g$foo$21088$17Rald
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$19842$17Rald
                                                g$foo$21088$17Rald))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$19842$17Rald
                                                g$x$21108$17Rald))
                                            '"-set!")))))))
                         ((letrec ((g$f$21091$17Rald
                                     (case-lambda
                                       ((g$fields$21092$17Rald)
                                        ((case-lambda
                                           ((g$t$21093$17Rald)
                                            ((case-lambda
                                               ((g$ls/false$21094$17Rald)
                                                (if g$ls/false$21094$17Rald
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$21094$17Rald)
                                                  ((case-lambda
                                                     ((g$t$21095$17Rald)
                                                      ((case-lambda
                                                         ((g$ls/false$21096$17Rald)
                                                          (if g$ls/false$21096$17Rald
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21097$17Rald
                                                                   g$accessor$21098$17Rald
                                                                   g$mutator$21099$17Rald
                                                                   g$rest$21100$17Rald)
                                                                 (cons
                                                                   g$mutator$21099$17Rald
                                                                   (g$f$21091$17Rald
                                                                     g$rest$21100$17Rald))))
                                                              g$ls/false$21096$17Rald)
                                                            ((case-lambda
                                                               ((g$t$21101$17Rald)
                                                                ((case-lambda
                                                                   ((g$ls/false$21102$17Rald)
                                                                    (if g$ls/false$21102$17Rald
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21103$17Rald
                                                                             g$rest$21104$17Rald)
                                                                           (cons
                                                                             (g$gen-name$21090$17Rald
                                                                               g$name$21103$17Rald)
                                                                             (g$f$21091$17Rald
                                                                               g$rest$21104$17Rald))))
                                                                        g$ls/false$21102$17Rald)
                                                                      ((case-lambda
                                                                         ((g$t$21105$17Rald)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21106$17Rald)
                                                                              (if g$ls/false$21106$17Rald
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$21107$17Rald)
                                                                                     (g$f$21091$17Rald
                                                                                       g$rest$21107$17Rald)))
                                                                                  g$ls/false$21106$17Rald)
                                                                                (g$syntax-violation$19839$17Rald
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$21105$17Rald))))
                                                                           (g$syntax-dispatch$19720$17Rald
                                                                             g$t$21105$17Rald
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$21101$17Rald))))
                                                                 (g$syntax-dispatch$19720$17Rald
                                                                   g$t$21101$17Rald
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$21095$17Rald))))
                                                       (g$syntax-dispatch$19720$17Rald
                                                         g$t$21095$17Rald
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$21093$17Rald))))
                                             (g$syntax-dispatch$19720$17Rald
                                               g$t$21093$17Rald
                                               '()))))
                                         g$fields$21092$17Rald)))))
                            g$f$21091$17Rald)
                          g$fields$21089$17Rald)))))
                  (g$get-accessors$21004$17Rald
                    (case-lambda
                      ((g$foo$21054$17Rald g$fields$21055$17Rald)
                       (letrec* ((g$gen-name$21056$17Rald
                                   (case-lambda
                                     ((g$x$21087$17Rald)
                                      (g$datum->syntax$19841$17Rald
                                        g$foo$21054$17Rald
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$19842$17Rald
                                                g$foo$21054$17Rald))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$19842$17Rald
                                                g$x$21087$17Rald)))))))))
                         (g$map$11835$17Rald
                           (case-lambda
                             ((g$field$21057$17Rald)
                              ((case-lambda
                                 ((g$t$21058$17Rald)
                                  ((case-lambda
                                     ((g$ls/false$21059$17Rald)
                                      (if (if g$ls/false$21059$17Rald
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$21060$17Rald
                                                     g$accessor$21061$17Rald
                                                     g$mutator$21062$17Rald)
                                                   (g$id?$19222$17Rald
                                                     g$accessor$21061$17Rald)))
                                                g$ls/false$21059$17Rald))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$21063$17Rald
                                               g$accessor$21064$17Rald
                                               g$mutator$21065$17Rald)
                                             g$accessor$21064$17Rald))
                                          g$ls/false$21059$17Rald)
                                        ((case-lambda
                                           ((g$t$21066$17Rald)
                                            ((case-lambda
                                               ((g$ls/false$21067$17Rald)
                                                (if (if g$ls/false$21067$17Rald
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$21068$17Rald
                                                               g$accessor$21069$17Rald)
                                                             (g$id?$19222$17Rald
                                                               g$accessor$21069$17Rald)))
                                                          g$ls/false$21067$17Rald))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$21070$17Rald
                                                         g$accessor$21071$17Rald)
                                                       g$accessor$21071$17Rald))
                                                    g$ls/false$21067$17Rald)
                                                  ((case-lambda
                                                     ((g$t$21072$17Rald)
                                                      ((case-lambda
                                                         ((g$ls/false$21073$17Rald)
                                                          (if (if g$ls/false$21073$17Rald
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$21074$17Rald)
                                                                       (g$id?$19222$17Rald
                                                                         g$name$21074$17Rald)))
                                                                    g$ls/false$21073$17Rald))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21075$17Rald)
                                                                 (g$gen-name$21056$17Rald
                                                                   g$name$21075$17Rald)))
                                                              g$ls/false$21073$17Rald)
                                                            ((case-lambda
                                                               ((g$t$21076$17Rald)
                                                                ((case-lambda
                                                                   ((g$ls/false$21077$17Rald)
                                                                    (if (if g$ls/false$21077$17Rald
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$21078$17Rald)
                                                                                 (g$id?$19222$17Rald
                                                                                   g$name$21078$17Rald)))
                                                                              g$ls/false$21077$17Rald))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21079$17Rald)
                                                                           (g$gen-name$21056$17Rald
                                                                             g$name$21079$17Rald)))
                                                                        g$ls/false$21077$17Rald)
                                                                      ((case-lambda
                                                                         ((g$t$21080$17Rald)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21081$17Rald)
                                                                              (if (if g$ls/false$21081$17Rald
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$21082$17Rald)
                                                                                           (g$id?$19222$17Rald
                                                                                             g$name$21082$17Rald)))
                                                                                        g$ls/false$21081$17Rald))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$21083$17Rald)
                                                                                     (g$gen-name$21056$17Rald
                                                                                       g$name$21083$17Rald)))
                                                                                  g$ls/false$21081$17Rald)
                                                                                ((case-lambda
                                                                                   ((g$t$21084$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21085$17Rald)
                                                                                        (if g$ls/false$21085$17Rald
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21086$17Rald)
                                                                                               (g$syntax-violation$19839$17Rald
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$21057$17Rald)))
                                                                                            g$ls/false$21085$17Rald)
                                                                                          (g$syntax-violation$19839$17Rald
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21084$17Rald))))
                                                                                     (g$syntax-dispatch$19720$17Rald
                                                                                       g$t$21084$17Rald
                                                                                       'any))))
                                                                                 g$t$21080$17Rald))))
                                                                           (g$syntax-dispatch$19720$17Rald
                                                                             g$t$21080$17Rald
                                                                             'any))))
                                                                       g$t$21076$17Rald))))
                                                                 (g$syntax-dispatch$19720$17Rald
                                                                   g$t$21076$17Rald
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$21072$17Rald))))
                                                       (g$syntax-dispatch$19720$17Rald
                                                         g$t$21072$17Rald
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$21066$17Rald))))
                                             (g$syntax-dispatch$19720$17Rald
                                               g$t$21066$17Rald
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$21058$17Rald))))
                                   (g$syntax-dispatch$19720$17Rald
                                     g$t$21058$17Rald
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$21057$17Rald)))
                           g$fields$21055$17Rald)))))
                  (g$enumerate$21005$17Rald
                    (case-lambda
                      ((g$ls$21050$17Rald)
                       ((letrec ((g$f$21051$17Rald
                                   (case-lambda
                                     ((g$ls$21052$17Rald
                                        g$i$21053$17Rald)
                                      (if (null? g$ls$21052$17Rald)
                                        '()
                                        (cons
                                          g$i$21053$17Rald
                                          (g$f$21051$17Rald
                                            (cdr g$ls$21052$17Rald)
                                            (+ g$i$21053$17Rald
                                               '1))))))))
                          g$f$21051$17Rald)
                        g$ls$21050$17Rald
                        '0))))
                  (g$do-define-record$21006$17Rald
                    (case-lambda
                      ((g$namespec$21030$17Rald g$clause*$21031$17Rald)
                       ((case-lambda
                          ((g$foo$21032$17Rald)
                           ((case-lambda
                              ((g$foo-rtd$21033$17Rald)
                               ((case-lambda
                                  ((g$foo-rcd$21034$17Rald)
                                   ((case-lambda
                                      ((g$protocol$21035$17Rald)
                                       ((case-lambda
                                          ((g$make-foo$21036$17Rald)
                                           ((case-lambda
                                              ((g$fields$21037$17Rald)
                                               ((case-lambda
                                                  ((g$idx*$21038$17Rald)
                                                   ((case-lambda
                                                      ((g$foo-x*$21039$17Rald)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$21040$17Rald)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$21041$17Rald)
                                                               ((case-lambda
                                                                  ((g$foo?$21042$17Rald)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$21043$17Rald)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$21044$17Rald)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$21045$17Rald)
                                                                               (g$bless$19683$17Rald
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$21033$17Rald
                                                                                       g$foo-rtd-code$21043$17Rald)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$21035$17Rald
                                                                                         g$protocol-code$21045$17Rald)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$21034$17Rald
                                                                                           g$foo-rcd-code$21044$17Rald)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$21032$17Rald
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$21033$17Rald)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$21034$17Rald)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$21042$17Rald
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$21033$17Rald))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$21036$17Rald
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$21034$17Rald))
                                                                                               (append
                                                                                                 (g$map$11835$17Rald
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$21046$17Rald
                                                                                                        g$idx$21047$17Rald)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$21046$17Rald
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$21033$17Rald
                                                                                                          g$idx$21047$17Rald))))
                                                                                                   g$foo-x*$21039$17Rald
                                                                                                   g$idx*$21038$17Rald)
                                                                                                 (g$map$11835$17Rald
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$21048$17Rald
                                                                                                        g$idx$21049$17Rald)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$21048$17Rald
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$21033$17Rald
                                                                                                          g$idx$21049$17Rald))))
                                                                                                   g$set-foo-x!*$21040$17Rald
                                                                                                   g$set-foo-idx*$21041$17Rald))))))))))))
                                                                            (g$get-protocol-code$21000$17Rald
                                                                              g$clause*$21031$17Rald))))
                                                                        (g$foo-rcd-code$20999$17Rald
                                                                          g$clause*$21031$17Rald
                                                                          g$foo-rtd$21033$17Rald
                                                                          g$protocol$21035$17Rald
                                                                          (g$parent-rcd-code$20998$17Rald
                                                                            g$clause*$21031$17Rald)))))
                                                                    (g$foo-rtd-code$20996$17Rald
                                                                      g$foo$21032$17Rald
                                                                      g$clause*$21031$17Rald
                                                                      (g$parent-rtd-code$20997$17Rald
                                                                        g$clause*$21031$17Rald)))))
                                                                (g$get-record-predicate-name$20994$17Rald
                                                                  g$namespec$21030$17Rald))))
                                                            (g$get-mutator-indices$21002$17Rald
                                                              g$fields$21037$17Rald))))
                                                        (g$get-mutators$21003$17Rald
                                                          g$foo$21032$17Rald
                                                          g$fields$21037$17Rald))))
                                                    (g$get-accessors$21004$17Rald
                                                      g$foo$21032$17Rald
                                                      g$fields$21037$17Rald))))
                                                (g$enumerate$21005$17Rald
                                                  g$fields$21037$17Rald))))
                                            (g$get-fields$21001$17Rald
                                              g$clause*$21031$17Rald))))
                                        (g$get-record-constructor-name$20993$17Rald
                                          g$namespec$21030$17Rald))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$20992$17Rald
                          g$namespec$21030$17Rald)))))
                  (g$verify-clauses$21007$17Rald
                    (case-lambda
                      ((g$x$21012$17Rald g$cls*$21013$17Rald)
                       (letrec* ((g$valid-kwds$21014$17Rald
                                   (g$map$11835$17Rald
                                     g$bless$19683$17Rald
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$21015$17Rald
                                   (case-lambda
                                     ((g$x$21027$17Rald
                                        g$ls$21028$17Rald)
                                      (if (pair? g$ls$21028$17Rald)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$21029$17Rald)
                                              (if g$t$21029$17Rald
                                                g$t$21029$17Rald
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$21015$17Rald
                                                    g$x$21027$17Rald
                                                    (cdr g$ls$21028$17Rald))))))
                                           (g$free-id=?$19226$17Rald
                                             g$x$21027$17Rald
                                             (car g$ls$21028$17Rald))))
                                        '#f)))))
                         ((letrec ((g$f$21016$17Rald
                                     (case-lambda
                                       ((g$cls*$21017$17Rald
                                          g$seen*$21018$17Rald)
                                        (if (not (null?
                                                   g$cls*$21017$17Rald))
                                          ((case-lambda
                                             ((g$t$21019$17Rald)
                                              ((case-lambda
                                                 ((g$ls/false$21020$17Rald)
                                                  (if g$ls/false$21020$17Rald
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$21021$17Rald
                                                           g$rest$21022$17Rald)
                                                         (if ((case-lambda
                                                                ((g$t$21023$17Rald)
                                                                 (if g$t$21023$17Rald
                                                                   g$t$21023$17Rald
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$21015$17Rald
                                                                            g$kwd$21021$17Rald
                                                                            g$valid-kwds$21014$17Rald))))))
                                                              (not (g$id?$19222$17Rald
                                                                     g$kwd$21021$17Rald)))
                                                           (g$syntax-violation$19839$17Rald
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$21021$17Rald)
                                                           (if (g$bound-id-member?$19229$17Rald
                                                                 g$kwd$21021$17Rald
                                                                 g$seen*$21018$17Rald)
                                                             (g$syntax-violation$19839$17Rald
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$21012$17Rald
                                                               g$kwd$21021$17Rald)
                                                             (g$f$21016$17Rald
                                                               (cdr g$cls*$21017$17Rald)
                                                               (cons
                                                                 g$kwd$21021$17Rald
                                                                 g$seen*$21018$17Rald))))))
                                                      g$ls/false$21020$17Rald)
                                                    ((case-lambda
                                                       ((g$t$21024$17Rald)
                                                        ((case-lambda
                                                           ((g$ls/false$21025$17Rald)
                                                            (if g$ls/false$21025$17Rald
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$21026$17Rald)
                                                                   (g$syntax-violation$19839$17Rald
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$21026$17Rald)))
                                                                g$ls/false$21025$17Rald)
                                                              (g$syntax-violation$19839$17Rald
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21024$17Rald))))
                                                         (g$syntax-dispatch$19720$17Rald
                                                           g$t$21024$17Rald
                                                           'any))))
                                                     g$t$21019$17Rald))))
                                               (g$syntax-dispatch$19720$17Rald
                                                 g$t$21019$17Rald
                                                 '(any . any)))))
                                           (car g$cls*$21017$17Rald))
                                          (void))))))
                            g$f$21016$17Rald)
                          g$cls*$21013$17Rald
                          '()))))))
          ((case-lambda
             ((g$t$21008$17Rald)
              ((case-lambda
                 ((g$ls/false$21009$17Rald)
                  (if g$ls/false$21009$17Rald
                    (apply
                      (case-lambda
                        ((g$namespec$21010$17Rald
                           g$clause*$21011$17Rald)
                         (begin
                           (g$verify-clauses$21007$17Rald
                             g$x$20990$17Rald
                             g$clause*$21011$17Rald)
                           (g$do-define-record$21006$17Rald
                             g$namespec$21010$17Rald
                             g$clause*$21011$17Rald))))
                      g$ls/false$21009$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$21008$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$21008$17Rald
                 '(_ any . each-any)))))
           g$x$20990$17Rald)))))
   (g$define-condition-type-macro$19715$17Rald
     g$define-condition-type-macro$23311$17Rald
     (case-lambda
       ((g$x$21246$17Rald)
        (letrec* ((g$mkname$21247$17Rald
                    (case-lambda
                      ((g$name$21270$17Rald g$suffix$21271$17Rald)
                       (g$datum->syntax$19841$17Rald
                         g$name$21270$17Rald
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$19842$17Rald
                                 g$name$21270$17Rald))
                             g$suffix$21271$17Rald)))))))
          ((case-lambda
             ((g$t$21248$17Rald)
              ((case-lambda
                 ((g$ls/false$21249$17Rald)
                  (if (if g$ls/false$21249$17Rald
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$21250$17Rald
                                 g$name$21251$17Rald
                                 g$super$21252$17Rald
                                 g$constructor$21253$17Rald
                                 g$predicate$21254$17Rald
                                 g$field*$21255$17Rald
                                 g$accessor*$21256$17Rald)
                               (if (g$id?$19222$17Rald
                                     g$name$21251$17Rald)
                                 (if (g$id?$19222$17Rald
                                       g$super$21252$17Rald)
                                   (if (g$id?$19222$17Rald
                                         g$constructor$21253$17Rald)
                                     (if (g$id?$19222$17Rald
                                           g$predicate$21254$17Rald)
                                       (if (g$for-all$11833$17Rald
                                             g$id?$19222$17Rald
                                             g$field*$21255$17Rald)
                                         (begin
                                           '#f
                                           (g$for-all$11833$17Rald
                                             g$id?$19222$17Rald
                                             g$accessor*$21256$17Rald))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$21249$17Rald))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$21257$17Rald
                           g$name$21258$17Rald
                           g$super$21259$17Rald
                           g$constructor$21260$17Rald
                           g$predicate$21261$17Rald
                           g$field*$21262$17Rald
                           g$accessor*$21263$17Rald)
                         ((case-lambda
                            ((g$aux-accessor*$21264$17Rald)
                             (g$bless$19683$17Rald
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$21258$17Rald
                                         g$constructor$21260$17Rald
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$21259$17Rald)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11835$17Rald
                                               (case-lambda
                                                 ((g$field$21265$17Rald
                                                    g$aux$21266$17Rald)
                                                  (list
                                                    'immutable
                                                    g$field$21265$17Rald
                                                    g$aux$21266$17Rald)))
                                               g$field*$21262$17Rald
                                               g$aux-accessor*$21264$17Rald))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$21261$17Rald
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$21258$17Rald)))
                                     (g$map$11835$17Rald
                                       (case-lambda
                                         ((g$accessor$21267$17Rald
                                            g$aux$21268$17Rald)
                                          (list
                                            'define
                                            g$accessor$21267$17Rald
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$21258$17Rald)
                                              g$aux$21268$17Rald))))
                                       g$accessor*$21263$17Rald
                                       g$aux-accessor*$21264$17Rald)))))))
                          (g$map$11835$17Rald
                            (case-lambda ((g$x$21269$17Rald) (gensym)))
                            g$accessor*$21263$17Rald))))
                      g$ls/false$21249$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$21248$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$21248$17Rald
                 '(any any any any any . #(each (any any)))))))
           g$x$21246$17Rald)))))
   (g$incorrect-usage-macro$19716$17Rald
     g$incorrect-usage-macro$23312$17Rald
     (case-lambda
       ((g$e$21272$17Rald)
        (g$syntax-violation$19839$17Rald
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$21272$17Rald))))
   (g$parameterize-macro$19717$17Rald
     g$parameterize-macro$23313$17Rald
     (case-lambda
       ((g$e$21273$17Rald)
        ((case-lambda
           ((g$t$21274$17Rald)
            ((case-lambda
               ((g$ls/false$21275$17Rald)
                (if g$ls/false$21275$17Rald
                  (apply
                    (case-lambda
                      ((g$b$21276$17Rald g$b*$21277$17Rald)
                       (g$bless$19683$17Rald
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$21276$17Rald
                               g$b*$21277$17Rald))))))
                    g$ls/false$21275$17Rald)
                  ((case-lambda
                     ((g$t$21278$17Rald)
                      ((case-lambda
                         ((g$ls/false$21279$17Rald)
                          (if g$ls/false$21279$17Rald
                            (apply
                              (case-lambda
                                ((g$olhs*$21280$17Rald
                                   g$orhs*$21281$17Rald
                                   g$b$21282$17Rald
                                   g$b*$21283$17Rald)
                                 ((case-lambda
                                    ((g$lhs*$21284$17Rald
                                       g$rhs*$21285$17Rald)
                                     (g$bless$19683$17Rald
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$21284$17Rald
                                             g$rhs*$21285$17Rald)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11835$17Rald
                                                       (case-lambda
                                                         ((g$lhs$21286$17Rald
                                                            g$rhs$21287$17Rald)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$21286$17Rald)))
                                                            (list
                                                              g$lhs$21286$17Rald
                                                              g$rhs$21287$17Rald)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$21287$17Rald
                                                                '(t))))))
                                                       g$lhs*$21284$17Rald
                                                       g$rhs*$21285$17Rald)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$21282$17Rald
                                                         g$b*$21283$17Rald)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$21280$17Rald
                                           g$orhs*$21281$17Rald)))))
                                  (g$generate-temporaries$19829$17Rald
                                    g$olhs*$21280$17Rald)
                                  (g$generate-temporaries$19829$17Rald
                                    g$orhs*$21281$17Rald))))
                              g$ls/false$21279$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$21278$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$21278$17Rald
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$21274$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21274$17Rald
               '(_ () any . each-any)))))
         g$e$21273$17Rald))))
   (g$foreign-call-transformer$19718$17Rald
     g$foreign-call-transformer$23314$17Rald
     (case-lambda
       ((g$e$21288$17Rald g$r$21289$17Rald g$mr$21290$17Rald)
        ((case-lambda
           ((g$t$21291$17Rald)
            ((case-lambda
               ((g$ls/false$21292$17Rald)
                (if g$ls/false$21292$17Rald
                  (apply
                    (case-lambda
                      ((g$name$21293$17Rald g$arg*$21294$17Rald)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$19738$17Rald
                             g$name$21293$17Rald
                             g$r$21289$17Rald
                             g$mr$21290$17Rald)
                           (g$chi-expr*$19736$17Rald
                             g$arg*$21294$17Rald
                             g$r$21289$17Rald
                             g$mr$21290$17Rald)))))
                    g$ls/false$21292$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$21291$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21291$17Rald
               '(_ any . each-any)))))
         g$e$21288$17Rald))))
   (g$convert-pattern$19719$17Rald
     g$convert-pattern$23315$17Rald
     (case-lambda
       ((g$pattern$21295$17Rald g$keys$21296$17Rald)
        (letrec* ((g$cvt*$21297$17Rald
                    (case-lambda
                      ((g$p*$21377$17Rald
                         g$n$21378$17Rald
                         g$ids$21379$17Rald)
                       (if (null? g$p*$21377$17Rald)
                         (values '() g$ids$21379$17Rald)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$21297$17Rald
                                (cdr g$p*$21377$17Rald)
                                g$n$21378$17Rald
                                g$ids$21379$17Rald)))
                           (case-lambda
                             ((g$y$21382$17Rald g$ids$21383$17Rald)
                              ((case-lambda
                                 ((g$ids$21384$17Rald g$y$21385$17Rald)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$21298$17Rald
                                         (car g$p*$21377$17Rald)
                                         g$n$21378$17Rald
                                         g$ids$21384$17Rald)))
                                    (case-lambda
                                      ((g$x$21388$17Rald
                                         g$ids$21389$17Rald)
                                       ((case-lambda
                                          ((g$ids$21390$17Rald
                                             g$x$21391$17Rald)
                                           (values
                                             (cons
                                               g$x$21391$17Rald
                                               g$y$21385$17Rald)
                                             g$ids$21390$17Rald)))
                                        g$ids$21389$17Rald
                                        g$x$21388$17Rald))))))
                               g$ids$21383$17Rald
                               g$y$21382$17Rald))))))))
                  (g$cvt$21298$17Rald
                    (case-lambda
                      ((g$p$21299$17Rald
                         g$n$21300$17Rald
                         g$ids$21301$17Rald)
                       ((case-lambda
                          ((g$t$21302$17Rald)
                           ((case-lambda
                              ((g$ls/false$21303$17Rald)
                               (if (if g$ls/false$21303$17Rald
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$21304$17Rald)
                                            (g$id?$19222$17Rald
                                              g$id$21304$17Rald)))
                                         g$ls/false$21303$17Rald))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$21305$17Rald)
                                      (if (g$bound-id-member?$19229$17Rald
                                            g$p$21299$17Rald
                                            g$keys$21296$17Rald)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$21299$17Rald)
                                          g$ids$21301$17Rald)
                                        (if (g$free-id=?$19226$17Rald
                                              g$p$21299$17Rald
                                              (g$scheme-stx$19663$17Rald
                                                '_))
                                          (values '_ g$ids$21301$17Rald)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$21299$17Rald
                                                g$n$21300$17Rald)
                                              g$ids$21301$17Rald))))))
                                   g$ls/false$21303$17Rald)
                                 ((case-lambda
                                    ((g$t$21306$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$21307$17Rald)
                                         (if (if g$ls/false$21307$17Rald
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21308$17Rald
                                                        g$dots$21309$17Rald)
                                                      (g$ellipsis?$19721$17Rald
                                                        g$dots$21309$17Rald)))
                                                   g$ls/false$21307$17Rald))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$21310$17Rald
                                                  g$dots$21311$17Rald)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$21298$17Rald
                                                       g$p$21310$17Rald
                                                       (+ g$n$21300$17Rald
                                                          '1)
                                                       g$ids$21301$17Rald)))
                                                  (case-lambda
                                                    ((g$p$21314$17Rald
                                                       g$ids$21315$17Rald)
                                                     ((case-lambda
                                                        ((g$ids$21316$17Rald
                                                           g$p$21317$17Rald)
                                                         (values
                                                           (if (eq? g$p$21317$17Rald
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$21317$17Rald))
                                                           g$ids$21316$17Rald)))
                                                      g$ids$21315$17Rald
                                                      g$p$21314$17Rald))))))
                                             g$ls/false$21307$17Rald)
                                           ((case-lambda
                                              ((g$t$21318$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$21319$17Rald)
                                                   (if (if g$ls/false$21319$17Rald
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$21320$17Rald
                                                                  g$dots$21321$17Rald
                                                                  g$ys$21322$17Rald
                                                                  g$z$21323$17Rald)
                                                                (g$ellipsis?$19721$17Rald
                                                                  g$dots$21321$17Rald)))
                                                             g$ls/false$21319$17Rald))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$21324$17Rald
                                                            g$dots$21325$17Rald
                                                            g$ys$21326$17Rald
                                                            g$z$21327$17Rald)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$21298$17Rald
                                                                 g$z$21327$17Rald
                                                                 g$n$21300$17Rald
                                                                 g$ids$21301$17Rald)))
                                                            (case-lambda
                                                              ((g$z$21330$17Rald
                                                                 g$ids$21331$17Rald)
                                                               ((case-lambda
                                                                  ((g$ids$21332$17Rald
                                                                     g$z$21333$17Rald)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$21297$17Rald
                                                                          g$ys$21326$17Rald
                                                                          g$n$21300$17Rald
                                                                          g$ids$21332$17Rald)))
                                                                     (case-lambda
                                                                       ((g$ys$21336$17Rald
                                                                          g$ids$21337$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ids$21338$17Rald
                                                                              g$ys$21339$17Rald)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$21298$17Rald
                                                                                   g$x$21324$17Rald
                                                                                   (+ g$n$21300$17Rald
                                                                                      '1)
                                                                                   g$ids$21338$17Rald)))
                                                                              (case-lambda
                                                                                ((g$x$21342$17Rald
                                                                                   g$ids$21343$17Rald)
                                                                                 ((case-lambda
                                                                                    ((g$ids$21344$17Rald
                                                                                       g$x$21345$17Rald)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$21345$17Rald
                                                                                         (g$reverse$12626$17Rald
                                                                                           g$ys$21339$17Rald)
                                                                                         g$z$21333$17Rald)
                                                                                       g$ids$21344$17Rald)))
                                                                                  g$ids$21343$17Rald
                                                                                  g$x$21342$17Rald))))))
                                                                         g$ids$21337$17Rald
                                                                         g$ys$21336$17Rald))))))
                                                                g$ids$21331$17Rald
                                                                g$z$21330$17Rald))))))
                                                       g$ls/false$21319$17Rald)
                                                     ((case-lambda
                                                        ((g$t$21346$17Rald)
                                                         ((case-lambda
                                                            ((g$ls/false$21347$17Rald)
                                                             (if g$ls/false$21347$17Rald
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$21348$17Rald
                                                                      g$y$21349$17Rald)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$21298$17Rald
                                                                           g$y$21349$17Rald
                                                                           g$n$21300$17Rald
                                                                           g$ids$21301$17Rald)))
                                                                      (case-lambda
                                                                        ((g$y$21352$17Rald
                                                                           g$ids$21353$17Rald)
                                                                         ((case-lambda
                                                                            ((g$ids$21354$17Rald
                                                                               g$y$21355$17Rald)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$21298$17Rald
                                                                                    g$x$21348$17Rald
                                                                                    g$n$21300$17Rald
                                                                                    g$ids$21354$17Rald)))
                                                                               (case-lambda
                                                                                 ((g$x$21358$17Rald
                                                                                    g$ids$21359$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$ids$21360$17Rald
                                                                                        g$x$21361$17Rald)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$21361$17Rald
                                                                                          g$y$21355$17Rald)
                                                                                        g$ids$21360$17Rald)))
                                                                                   g$ids$21359$17Rald
                                                                                   g$x$21358$17Rald))))))
                                                                          g$ids$21353$17Rald
                                                                          g$y$21352$17Rald))))))
                                                                 g$ls/false$21347$17Rald)
                                                               ((case-lambda
                                                                  ((g$t$21362$17Rald)
                                                                   ((case-lambda
                                                                      ((g$ls/false$21363$17Rald)
                                                                       (if g$ls/false$21363$17Rald
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$21301$17Rald)))
                                                                           g$ls/false$21363$17Rald)
                                                                         ((case-lambda
                                                                            ((g$t$21364$17Rald)
                                                                             ((case-lambda
                                                                                ((g$ls/false$21365$17Rald)
                                                                                 (if (if g$ls/false$21365$17Rald
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$21366$17Rald)
                                                                                              (not (g$stx?$19194$17Rald
                                                                                                     g$p$21366$17Rald))))
                                                                                           g$ls/false$21365$17Rald))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$21367$17Rald)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$21298$17Rald
                                                                                               g$p$21367$17Rald
                                                                                               g$n$21300$17Rald
                                                                                               g$ids$21301$17Rald)))
                                                                                          (case-lambda
                                                                                            ((g$p$21370$17Rald
                                                                                               g$ids$21371$17Rald)
                                                                                             ((case-lambda
                                                                                                ((g$ids$21372$17Rald
                                                                                                   g$p$21373$17Rald)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$21373$17Rald)
                                                                                                   g$ids$21372$17Rald)))
                                                                                              g$ids$21371$17Rald
                                                                                              g$p$21370$17Rald))))))
                                                                                     g$ls/false$21365$17Rald)
                                                                                   ((case-lambda
                                                                                      ((g$t$21374$17Rald)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$21375$17Rald)
                                                                                           (if g$ls/false$21375$17Rald
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$21376$17Rald)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$19233$17Rald
                                                                                                        g$datum$21376$17Rald))
                                                                                                    g$ids$21301$17Rald)))
                                                                                               g$ls/false$21375$17Rald)
                                                                                             (g$syntax-violation$19839$17Rald
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$21374$17Rald))))
                                                                                        (g$syntax-dispatch$19720$17Rald
                                                                                          g$t$21374$17Rald
                                                                                          'any))))
                                                                                    g$t$21364$17Rald))))
                                                                              (g$syntax-dispatch$19720$17Rald
                                                                                g$t$21364$17Rald
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$21362$17Rald))))
                                                                    (g$syntax-dispatch$19720$17Rald
                                                                      g$t$21362$17Rald
                                                                      '()))))
                                                                g$t$21346$17Rald))))
                                                          (g$syntax-dispatch$19720$17Rald
                                                            g$t$21346$17Rald
                                                            '(any .
                                                                  any)))))
                                                      g$t$21318$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$21318$17Rald
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$21306$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$21306$17Rald
                                        '(any any)))))
                                  g$t$21302$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$21302$17Rald
                              'any))))
                        g$p$21299$17Rald)))))
          (g$cvt$21298$17Rald g$pattern$21295$17Rald '0 '())))))
   (g$syntax-dispatch$19720$17Rald
     g$syntax-dispatch$23316$17Rald
     (case-lambda
       ((g$e$21392$17Rald g$p$21393$17Rald)
        (letrec* ((g$stx^$21394$17Rald
                    (case-lambda
                      ((g$e$21502$17Rald
                         g$m*$21503$17Rald
                         g$s*$21504$17Rald
                         g$ae*$21505$17Rald)
                       (if (if (null? g$m*$21503$17Rald)
                             (if (null? g$s*$21504$17Rald)
                               (begin '#f (null? g$ae*$21505$17Rald))
                               '#f)
                             '#f)
                         g$e$21502$17Rald
                         (g$mkstx$19210$17Rald
                           g$e$21502$17Rald
                           g$m*$21503$17Rald
                           g$s*$21504$17Rald
                           g$ae*$21505$17Rald)))))
                  (g$match-each$21395$17Rald
                    (case-lambda
                      ((g$e$21486$17Rald
                         g$p$21487$17Rald
                         g$m*$21488$17Rald
                         g$s*$21489$17Rald
                         g$ae*$21490$17Rald)
                       (if (pair? g$e$21486$17Rald)
                         ((case-lambda
                            ((g$first$21491$17Rald)
                             (if g$first$21491$17Rald
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$21492$17Rald)
                                     (if g$rest$21492$17Rald
                                       (begin
                                         '#f
                                         (cons
                                           g$first$21491$17Rald
                                           g$rest$21492$17Rald))
                                       '#f)))
                                  (g$match-each$21395$17Rald
                                    (cdr g$e$21486$17Rald)
                                    g$p$21487$17Rald
                                    g$m*$21488$17Rald
                                    g$s*$21489$17Rald
                                    g$ae*$21490$17Rald)))
                               '#f)))
                          (g$match$21401$17Rald
                            (car g$e$21486$17Rald)
                            g$p$21487$17Rald
                            g$m*$21488$17Rald
                            g$s*$21489$17Rald
                            g$ae*$21490$17Rald
                            '()))
                         (if (null? g$e$21486$17Rald)
                           '()
                           (if (g$stx?$19194$17Rald g$e$21486$17Rald)
                             (if (not (g$top-marked?$19156$17Rald
                                        g$m*$21488$17Rald))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19209$17Rald
                                        g$m*$21488$17Rald
                                        g$s*$21489$17Rald
                                        g$ae*$21490$17Rald
                                        g$e$21486$17Rald)))
                                   (case-lambda
                                     ((g$m*$21496$17Rald
                                        g$s*$21497$17Rald
                                        g$ae*$21498$17Rald)
                                      ((case-lambda
                                         ((g$ae*$21499$17Rald
                                            g$s*$21500$17Rald
                                            g$m*$21501$17Rald)
                                          (g$match-each$21395$17Rald
                                            (g$stx-expr$19196$17Rald
                                              g$e$21486$17Rald)
                                            g$p$21487$17Rald
                                            g$m*$21501$17Rald
                                            g$s*$21500$17Rald
                                            g$ae*$21499$17Rald)))
                                       g$ae*$21498$17Rald
                                       g$s*$21497$17Rald
                                       g$m*$21496$17Rald)))))
                               '#f)
                             (if (annotation? g$e$21486$17Rald)
                               (g$match-each$21395$17Rald
                                 (annotation-expression
                                   g$e$21486$17Rald)
                                 g$p$21487$17Rald
                                 g$m*$21488$17Rald
                                 g$s*$21489$17Rald
                                 g$ae*$21490$17Rald)
                               '#f)))))))
                  (g$match-each+$21396$17Rald
                    (case-lambda
                      ((g$e$21454$17Rald
                         g$x-pat$21455$17Rald
                         g$y-pat$21456$17Rald
                         g$z-pat$21457$17Rald
                         g$m*$21458$17Rald
                         g$s*$21459$17Rald
                         g$ae*$21460$17Rald
                         g$r$21461$17Rald)
                       ((letrec ((g$f$21462$17Rald
                                   (case-lambda
                                     ((g$e$21463$17Rald
                                        g$m*$21464$17Rald
                                        g$s*$21465$17Rald
                                        g$ae*$21466$17Rald)
                                      (if (pair? g$e$21463$17Rald)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$21462$17Rald
                                               (cdr g$e$21463$17Rald)
                                               g$m*$21464$17Rald
                                               g$s*$21465$17Rald
                                               g$ae*$21466$17Rald)))
                                          (case-lambda
                                            ((g$xr*$21470$17Rald
                                               g$y-pat$21471$17Rald
                                               g$r$21472$17Rald)
                                             ((case-lambda
                                                ((g$r$21473$17Rald
                                                   g$y-pat$21474$17Rald
                                                   g$xr*$21475$17Rald)
                                                 (if g$r$21473$17Rald
                                                   (if (null?
                                                         g$y-pat$21474$17Rald)
                                                     ((case-lambda
                                                        ((g$xr$21476$17Rald)
                                                         (if g$xr$21476$17Rald
                                                           (values
                                                             (cons
                                                               g$xr$21476$17Rald
                                                               g$xr*$21475$17Rald)
                                                             g$y-pat$21474$17Rald
                                                             g$r$21473$17Rald)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$21401$17Rald
                                                        (car g$e$21463$17Rald)
                                                        g$x-pat$21455$17Rald
                                                        g$m*$21464$17Rald
                                                        g$s*$21465$17Rald
                                                        g$ae*$21466$17Rald
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$21474$17Rald)
                                                       (g$match$21401$17Rald
                                                         (car g$e$21463$17Rald)
                                                         (car g$y-pat$21474$17Rald)
                                                         g$m*$21464$17Rald
                                                         g$s*$21465$17Rald
                                                         g$ae*$21466$17Rald
                                                         g$r$21473$17Rald)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$21472$17Rald
                                              g$y-pat$21471$17Rald
                                              g$xr*$21470$17Rald))))
                                        (if (g$stx?$19194$17Rald
                                              g$e$21463$17Rald)
                                          (if (g$top-marked?$19156$17Rald
                                                g$m*$21464$17Rald)
                                            (values
                                              '()
                                              g$y-pat$21456$17Rald
                                              (g$match$21401$17Rald
                                                g$e$21463$17Rald
                                                g$z-pat$21457$17Rald
                                                g$m*$21464$17Rald
                                                g$s*$21465$17Rald
                                                g$ae*$21466$17Rald
                                                g$r$21461$17Rald))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$19209$17Rald
                                                   g$m*$21464$17Rald
                                                   g$s*$21465$17Rald
                                                   g$ae*$21466$17Rald
                                                   g$e$21463$17Rald)))
                                              (case-lambda
                                                ((g$m*$21480$17Rald
                                                   g$s*$21481$17Rald
                                                   g$ae*$21482$17Rald)
                                                 ((case-lambda
                                                    ((g$ae*$21483$17Rald
                                                       g$s*$21484$17Rald
                                                       g$m*$21485$17Rald)
                                                     (g$f$21462$17Rald
                                                       (g$stx-expr$19196$17Rald
                                                         g$e$21463$17Rald)
                                                       g$m*$21485$17Rald
                                                       g$s*$21484$17Rald
                                                       g$ae*$21483$17Rald)))
                                                  g$ae*$21482$17Rald
                                                  g$s*$21481$17Rald
                                                  g$m*$21480$17Rald)))))
                                          (if (annotation?
                                                g$e$21463$17Rald)
                                            (g$f$21462$17Rald
                                              (annotation-expression
                                                g$e$21463$17Rald)
                                              g$m*$21464$17Rald
                                              g$s*$21465$17Rald
                                              g$ae*$21466$17Rald)
                                            (values
                                              '()
                                              g$y-pat$21456$17Rald
                                              (g$match$21401$17Rald
                                                g$e$21463$17Rald
                                                g$z-pat$21457$17Rald
                                                g$m*$21464$17Rald
                                                g$s*$21465$17Rald
                                                g$ae*$21466$17Rald
                                                g$r$21461$17Rald)))))))))
                          g$f$21462$17Rald)
                        g$e$21454$17Rald
                        g$m*$21458$17Rald
                        g$s*$21459$17Rald
                        g$ae*$21460$17Rald))))
                  (g$match-each-any$21397$17Rald
                    (case-lambda
                      ((g$e$21440$17Rald
                         g$m*$21441$17Rald
                         g$s*$21442$17Rald
                         g$ae*$21443$17Rald)
                       (if (pair? g$e$21440$17Rald)
                         ((case-lambda
                            ((g$l$21444$17Rald)
                             (if g$l$21444$17Rald
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$21394$17Rald
                                     (car g$e$21440$17Rald)
                                     g$m*$21441$17Rald
                                     g$s*$21442$17Rald
                                     g$ae*$21443$17Rald)
                                   g$l$21444$17Rald))
                               '#f)))
                          (g$match-each-any$21397$17Rald
                            (cdr g$e$21440$17Rald)
                            g$m*$21441$17Rald
                            g$s*$21442$17Rald
                            g$ae*$21443$17Rald))
                         (if (null? g$e$21440$17Rald)
                           '()
                           (if (g$stx?$19194$17Rald g$e$21440$17Rald)
                             (if (not (g$top-marked?$19156$17Rald
                                        g$m*$21441$17Rald))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19209$17Rald
                                        g$m*$21441$17Rald
                                        g$s*$21442$17Rald
                                        g$ae*$21443$17Rald
                                        g$e$21440$17Rald)))
                                   (case-lambda
                                     ((g$m*$21448$17Rald
                                        g$s*$21449$17Rald
                                        g$ae*$21450$17Rald)
                                      ((case-lambda
                                         ((g$ae*$21451$17Rald
                                            g$s*$21452$17Rald
                                            g$m*$21453$17Rald)
                                          (g$match-each-any$21397$17Rald
                                            (g$stx-expr$19196$17Rald
                                              g$e$21440$17Rald)
                                            g$m*$21453$17Rald
                                            g$s*$21452$17Rald
                                            g$ae*$21451$17Rald)))
                                       g$ae*$21450$17Rald
                                       g$s*$21449$17Rald
                                       g$m*$21448$17Rald)))))
                               '#f)
                             (if (annotation? g$e$21440$17Rald)
                               (g$match-each-any$21397$17Rald
                                 (annotation-expression
                                   g$e$21440$17Rald)
                                 g$m*$21441$17Rald
                                 g$s*$21442$17Rald
                                 g$ae*$21443$17Rald)
                               '#f)))))))
                  (g$match-empty$21398$17Rald
                    (case-lambda
                      ((g$p$21437$17Rald g$r$21438$17Rald)
                       (if (null? g$p$21437$17Rald)
                         g$r$21438$17Rald
                         (if (eq? g$p$21437$17Rald '_)
                           g$r$21438$17Rald
                           (if (eq? g$p$21437$17Rald 'any)
                             (cons '() g$r$21438$17Rald)
                             (if (pair? g$p$21437$17Rald)
                               (g$match-empty$21398$17Rald
                                 (car g$p$21437$17Rald)
                                 (g$match-empty$21398$17Rald
                                   (cdr g$p$21437$17Rald)
                                   g$r$21438$17Rald))
                               (if (eq? g$p$21437$17Rald 'each-any)
                                 (cons '() g$r$21438$17Rald)
                                 ((case-lambda
                                    ((g$t$21439$17Rald)
                                     (if (eqv? g$t$21439$17Rald 'each)
                                       (g$match-empty$21398$17Rald
                                         (g$vector-ref$12622$17Rald
                                           g$p$21437$17Rald
                                           '1)
                                         g$r$21438$17Rald)
                                       (if (eqv?
                                             g$t$21439$17Rald
                                             'each+)
                                         (g$match-empty$21398$17Rald
                                           (g$vector-ref$12622$17Rald
                                             g$p$21437$17Rald
                                             '1)
                                           (g$match-empty$21398$17Rald
                                             (g$reverse$12626$17Rald
                                               (g$vector-ref$12622$17Rald
                                                 g$p$21437$17Rald
                                                 '2))
                                             (g$match-empty$21398$17Rald
                                               (g$vector-ref$12622$17Rald
                                                 g$p$21437$17Rald
                                                 '3)
                                               g$r$21438$17Rald)))
                                         (if (g$memv$11828$17Rald
                                               g$t$21439$17Rald
                                               '(free-id atom))
                                           g$r$21438$17Rald
                                           (if (g$memv$11828$17Rald
                                                 g$t$21439$17Rald
                                                 '(scheme-id atom))
                                             g$r$21438$17Rald
                                             (if (eqv?
                                                   g$t$21439$17Rald
                                                   'vector)
                                               (g$match-empty$21398$17Rald
                                                 (g$vector-ref$12622$17Rald
                                                   g$p$21437$17Rald
                                                   '1)
                                                 g$r$21438$17Rald)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$21437$17Rald))))))))
                                  (g$vector-ref$12622$17Rald
                                    g$p$21437$17Rald
                                    '0))))))))))
                  (g$combine$21399$17Rald
                    (case-lambda
                      ((g$r*$21435$17Rald g$r$21436$17Rald)
                       (if (null? (car g$r*$21435$17Rald))
                         g$r$21436$17Rald
                         (cons
                           (g$map$11835$17Rald car g$r*$21435$17Rald)
                           (g$combine$21399$17Rald
                             (g$map$11835$17Rald cdr g$r*$21435$17Rald)
                             g$r$21436$17Rald))))))
                  (g$match*$21400$17Rald
                    (case-lambda
                      ((g$e$21417$17Rald
                         g$p$21418$17Rald
                         g$m*$21419$17Rald
                         g$s*$21420$17Rald
                         g$ae*$21421$17Rald
                         g$r$21422$17Rald)
                       (if (null? g$p$21418$17Rald)
                         (if (null? g$e$21417$17Rald)
                           (begin '#f g$r$21422$17Rald)
                           '#f)
                         (if (pair? g$p$21418$17Rald)
                           (if (pair? g$e$21417$17Rald)
                             (begin
                               '#f
                               (g$match$21401$17Rald
                                 (car g$e$21417$17Rald)
                                 (car g$p$21418$17Rald)
                                 g$m*$21419$17Rald
                                 g$s*$21420$17Rald
                                 g$ae*$21421$17Rald
                                 (g$match$21401$17Rald
                                   (cdr g$e$21417$17Rald)
                                   (cdr g$p$21418$17Rald)
                                   g$m*$21419$17Rald
                                   g$s*$21420$17Rald
                                   g$ae*$21421$17Rald
                                   g$r$21422$17Rald)))
                             '#f)
                           (if (eq? g$p$21418$17Rald 'each-any)
                             ((case-lambda
                                ((g$l$21423$17Rald)
                                 (if g$l$21423$17Rald
                                   (begin
                                     '#f
                                     (cons
                                       g$l$21423$17Rald
                                       g$r$21422$17Rald))
                                   '#f)))
                              (g$match-each-any$21397$17Rald
                                g$e$21417$17Rald
                                g$m*$21419$17Rald
                                g$s*$21420$17Rald
                                g$ae*$21421$17Rald))
                             ((case-lambda
                                ((g$t$21424$17Rald)
                                 (if (eqv? g$t$21424$17Rald 'each)
                                   (if (null? g$e$21417$17Rald)
                                     (g$match-empty$21398$17Rald
                                       (g$vector-ref$12622$17Rald
                                         g$p$21418$17Rald
                                         '1)
                                       g$r$21422$17Rald)
                                     ((case-lambda
                                        ((g$r*$21425$17Rald)
                                         (if g$r*$21425$17Rald
                                           (begin
                                             '#f
                                             (g$combine$21399$17Rald
                                               g$r*$21425$17Rald
                                               g$r$21422$17Rald))
                                           '#f)))
                                      (g$match-each$21395$17Rald
                                        g$e$21417$17Rald
                                        (g$vector-ref$12622$17Rald
                                          g$p$21418$17Rald
                                          '1)
                                        g$m*$21419$17Rald
                                        g$s*$21420$17Rald
                                        g$ae*$21421$17Rald)))
                                   (if (eqv? g$t$21424$17Rald 'free-id)
                                     (if (g$symbol?$12610$17Rald
                                           g$e$21417$17Rald)
                                       (if (g$top-marked?$19156$17Rald
                                             g$m*$21419$17Rald)
                                         (if (g$free-id=?$19226$17Rald
                                               (g$stx^$21394$17Rald
                                                 g$e$21417$17Rald
                                                 g$m*$21419$17Rald
                                                 g$s*$21420$17Rald
                                                 g$ae*$21421$17Rald)
                                               (g$vector-ref$12622$17Rald
                                                 g$p$21418$17Rald
                                                 '1))
                                           (begin '#f g$r$21422$17Rald)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv?
                                           g$t$21424$17Rald
                                           'scheme-id)
                                       (if (g$symbol?$12610$17Rald
                                             g$e$21417$17Rald)
                                         (if (g$top-marked?$19156$17Rald
                                               g$m*$21419$17Rald)
                                           (if (g$free-id=?$19226$17Rald
                                                 (g$stx^$21394$17Rald
                                                   g$e$21417$17Rald
                                                   g$m*$21419$17Rald
                                                   g$s*$21420$17Rald
                                                   g$ae*$21421$17Rald)
                                                 (g$scheme-stx$19663$17Rald
                                                   (g$vector-ref$12622$17Rald
                                                     g$p$21418$17Rald
                                                     '1)))
                                             (begin
                                               '#f
                                               g$r$21422$17Rald)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$21424$17Rald
                                             'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$21396$17Rald
                                                g$e$21417$17Rald
                                                (g$vector-ref$12622$17Rald
                                                  g$p$21418$17Rald
                                                  '1)
                                                (g$vector-ref$12622$17Rald
                                                  g$p$21418$17Rald
                                                  '2)
                                                (g$vector-ref$12622$17Rald
                                                  g$p$21418$17Rald
                                                  '3)
                                                g$m*$21419$17Rald
                                                g$s*$21420$17Rald
                                                g$ae*$21421$17Rald
                                                g$r$21422$17Rald)))
                                           (case-lambda
                                             ((g$xr*$21429$17Rald
                                                g$y-pat$21430$17Rald
                                                g$r$21431$17Rald)
                                              ((case-lambda
                                                 ((g$r$21432$17Rald
                                                    g$y-pat$21433$17Rald
                                                    g$xr*$21434$17Rald)
                                                  (if g$r$21432$17Rald
                                                    (if (null?
                                                          g$y-pat$21433$17Rald)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$21434$17Rald)
                                                          (g$match-empty$21398$17Rald
                                                            (g$vector-ref$12622$17Rald
                                                              g$p$21418$17Rald
                                                              '1)
                                                            g$r$21432$17Rald)
                                                          (g$combine$21399$17Rald
                                                            g$xr*$21434$17Rald
                                                            g$r$21432$17Rald)))
                                                      '#f)
                                                    '#f)))
                                               g$r$21431$17Rald
                                               g$y-pat$21430$17Rald
                                               g$xr*$21429$17Rald))))
                                         (if (eqv?
                                               g$t$21424$17Rald
                                               'atom)
                                           (if (equal?
                                                 (g$vector-ref$12622$17Rald
                                                   g$p$21418$17Rald
                                                   '1)
                                                 (g$strip$19232$17Rald
                                                   g$e$21417$17Rald
                                                   g$m*$21419$17Rald))
                                             (begin
                                               '#f
                                               g$r$21422$17Rald)
                                             '#f)
                                           (if (eqv?
                                                 g$t$21424$17Rald
                                                 'vector)
                                             (if (g$vector?$12608$17Rald
                                                   g$e$21417$17Rald)
                                               (begin
                                                 '#f
                                                 (g$match$21401$17Rald
                                                   (vector->list
                                                     g$e$21417$17Rald)
                                                   (g$vector-ref$12622$17Rald
                                                     g$p$21418$17Rald
                                                     '1)
                                                   g$m*$21419$17Rald
                                                   g$s*$21420$17Rald
                                                   g$ae*$21421$17Rald
                                                   g$r$21422$17Rald))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$21418$17Rald)))))))))
                              (g$vector-ref$12622$17Rald
                                g$p$21418$17Rald
                                '0))))))))
                  (g$match$21401$17Rald
                    (case-lambda
                      ((g$e$21402$17Rald
                         g$p$21403$17Rald
                         g$m*$21404$17Rald
                         g$s*$21405$17Rald
                         g$ae*$21406$17Rald
                         g$r$21407$17Rald)
                       (if (not g$r$21407$17Rald)
                         '#f
                         (if (eq? g$p$21403$17Rald '_)
                           g$r$21407$17Rald
                           (if (eq? g$p$21403$17Rald 'any)
                             (cons
                               (g$stx^$21394$17Rald
                                 g$e$21402$17Rald
                                 g$m*$21404$17Rald
                                 g$s*$21405$17Rald
                                 g$ae*$21406$17Rald)
                               g$r$21407$17Rald)
                             (if (g$stx?$19194$17Rald g$e$21402$17Rald)
                               (if (not (g$top-marked?$19156$17Rald
                                          g$m*$21404$17Rald))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$19209$17Rald
                                          g$m*$21404$17Rald
                                          g$s*$21405$17Rald
                                          g$ae*$21406$17Rald
                                          g$e$21402$17Rald)))
                                     (case-lambda
                                       ((g$m*$21411$17Rald
                                          g$s*$21412$17Rald
                                          g$ae*$21413$17Rald)
                                        ((case-lambda
                                           ((g$ae*$21414$17Rald
                                              g$s*$21415$17Rald
                                              g$m*$21416$17Rald)
                                            (g$match$21401$17Rald
                                              (g$stx-expr$19196$17Rald
                                                g$e$21402$17Rald)
                                              g$p$21403$17Rald
                                              g$m*$21416$17Rald
                                              g$s*$21415$17Rald
                                              g$ae*$21414$17Rald
                                              g$r$21407$17Rald)))
                                         g$ae*$21413$17Rald
                                         g$s*$21412$17Rald
                                         g$m*$21411$17Rald)))))
                                 '#f)
                               (if (annotation? g$e$21402$17Rald)
                                 (g$match$21401$17Rald
                                   (annotation-expression
                                     g$e$21402$17Rald)
                                   g$p$21403$17Rald
                                   g$m*$21404$17Rald
                                   g$s*$21405$17Rald
                                   g$ae*$21406$17Rald
                                   g$r$21407$17Rald)
                                 (g$match*$21400$17Rald
                                   g$e$21402$17Rald
                                   g$p$21403$17Rald
                                   g$m*$21404$17Rald
                                   g$s*$21405$17Rald
                                   g$ae*$21406$17Rald
                                   g$r$21407$17Rald))))))))))
          (g$match$21401$17Rald
            g$e$21392$17Rald
            g$p$21393$17Rald
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$19721$17Rald
     g$ellipsis?$23317$17Rald
     (case-lambda
       ((g$x$21506$17Rald)
        (if (g$id?$19222$17Rald g$x$21506$17Rald)
          (begin
            '#f
            (g$free-id=?$19226$17Rald
              g$x$21506$17Rald
              (g$scheme-stx$19663$17Rald '...)))
          '#f))))
   (g$underscore?$19722$17Rald
     g$underscore?$23318$17Rald
     (case-lambda
       ((g$x$21507$17Rald)
        (if (g$id?$19222$17Rald g$x$21507$17Rald)
          (begin
            '#f
            (g$free-id=?$19226$17Rald
              g$x$21507$17Rald
              (g$scheme-stx$19663$17Rald '_)))
          '#f))))
   (g$verify-literals$19723$17Rald
     g$verify-literals$23319$17Rald
     (case-lambda
       ((g$lits$21508$17Rald g$expr$21509$17Rald)
        (g$for-each$11836$17Rald
          (case-lambda
            ((g$x$21510$17Rald)
             (if ((case-lambda
                    ((g$t$21511$17Rald)
                     (if g$t$21511$17Rald
                       g$t$21511$17Rald
                       ((case-lambda
                          ((g$t$21512$17Rald)
                           (if g$t$21512$17Rald
                             g$t$21512$17Rald
                             (begin
                               '#f
                               (g$underscore?$19722$17Rald
                                 g$x$21510$17Rald)))))
                        (g$ellipsis?$19721$17Rald g$x$21510$17Rald)))))
                  (not (g$id?$19222$17Rald g$x$21510$17Rald)))
               (g$syntax-violation$19839$17Rald
                 '#f
                 '"invalid literal"
                 g$expr$21509$17Rald
                 g$x$21510$17Rald)
               (void))))
          g$lits$21508$17Rald))))
   (g$syntax-case-transformer$19724$17Rald
     g$syntax-case-transformer$23320$17Rald
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$21513$17Rald
                     (case-lambda
                       ((g$pvars$21570$17Rald
                          g$expr$21571$17Rald
                          g$y$21572$17Rald
                          g$r$21573$17Rald
                          g$mr$21574$17Rald)
                        ((case-lambda
                           ((g$ids$21575$17Rald g$levels$21576$17Rald)
                            ((case-lambda
                               ((g$labels$21577$17Rald
                                  g$new-vars$21578$17Rald)
                                ((case-lambda
                                   ((g$body$21579$17Rald)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$19144$17Rald
                                        '#f
                                        g$new-vars$21578$17Rald
                                        g$body$21579$17Rald)
                                      g$y$21572$17Rald)))
                                 (g$chi-expr$19738$17Rald
                                   (g$add-subst$19212$17Rald
                                     (g$make-full-rib$19188$17Rald
                                       g$ids$21575$17Rald
                                       g$labels$21577$17Rald)
                                     g$expr$21571$17Rald)
                                   (append
                                     (g$map$11835$17Rald
                                       (case-lambda
                                         ((g$label$21580$17Rald
                                            g$var$21581$17Rald
                                            g$level$21582$17Rald)
                                          (cons
                                            g$label$21580$17Rald
                                            (g$make-binding$19238$17Rald
                                              'syntax
                                              (cons
                                                g$var$21581$17Rald
                                                g$level$21582$17Rald)))))
                                       g$labels$21577$17Rald
                                       g$new-vars$21578$17Rald
                                       (g$map$11835$17Rald
                                         cdr
                                         g$pvars$21570$17Rald))
                                     g$r$21573$17Rald)
                                   g$mr$21574$17Rald))))
                             (g$map$11835$17Rald
                               g$gen-label$19159$17Rald
                               g$ids$21575$17Rald)
                             (g$map$11835$17Rald
                               g$gen-lexical$19157$17Rald
                               g$ids$21575$17Rald))))
                         (g$map$11835$17Rald car g$pvars$21570$17Rald)
                         (g$map$11835$17Rald
                           cdr
                           g$pvars$21570$17Rald)))))
                   (g$invalid-ids-error$21514$17Rald
                     (case-lambda
                       ((g$id*$21564$17Rald
                          g$e$21565$17Rald
                          g$class$21566$17Rald)
                        ((letrec ((g$find$21567$17Rald
                                    (case-lambda
                                      ((g$id*$21568$17Rald
                                         g$ok*$21569$17Rald)
                                       (if (null? g$id*$21568$17Rald)
                                         (g$syntax-violation$19839$17Rald
                                           '#f
                                           '"invalid syntax"
                                           g$e$21565$17Rald)
                                         (if (g$id?$19222$17Rald
                                               (car g$id*$21568$17Rald))
                                           (if (g$bound-id-member?$19229$17Rald
                                                 (car g$id*$21568$17Rald)
                                                 g$ok*$21569$17Rald)
                                             (g$syntax-error$19836$17Rald
                                               (car g$id*$21568$17Rald)
                                               '"duplicate "
                                               g$class$21566$17Rald)
                                             (g$find$21567$17Rald
                                               (cdr g$id*$21568$17Rald)
                                               (cons
                                                 (car g$id*$21568$17Rald)
                                                 g$ok*$21569$17Rald)))
                                           (g$syntax-error$19836$17Rald
                                             (car g$id*$21568$17Rald)
                                             '"invalid "
                                             g$class$21566$17Rald)))))))
                           g$find$21567$17Rald)
                         g$id*$21564$17Rald
                         '()))))
                   (g$gen-clause$21515$17Rald
                     (case-lambda
                       ((g$x$21544$17Rald
                          g$keys$21545$17Rald
                          g$clauses$21546$17Rald
                          g$r$21547$17Rald
                          g$mr$21548$17Rald
                          g$pat$21549$17Rald
                          g$fender$21550$17Rald
                          g$expr$21551$17Rald)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$19719$17Rald
                               g$pat$21549$17Rald
                               g$keys$21545$17Rald)))
                          (case-lambda
                            ((g$p$21554$17Rald g$pvars$21555$17Rald)
                             ((case-lambda
                                ((g$pvars$21556$17Rald g$p$21557$17Rald)
                                 (if (not (g$distinct-bound-ids?$19228$17Rald
                                            (g$map$11835$17Rald
                                              car
                                              g$pvars$21556$17Rald)))
                                   (g$invalid-ids-error$21514$17Rald
                                     (g$map$11835$17Rald
                                       car
                                       g$pvars$21556$17Rald)
                                     g$pat$21549$17Rald
                                     '"pattern variable")
                                   (if (not (g$for-all$11833$17Rald
                                              (case-lambda
                                                ((g$x$21558$17Rald)
                                                 (not (g$ellipsis?$19721$17Rald
                                                        (car g$x$21558$17Rald)))))
                                              g$pvars$21556$17Rald))
                                     (g$syntax-violation$19839$17Rald
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$21549$17Rald)
                                     ((case-lambda
                                        ((g$y$21559$17Rald)
                                         ((case-lambda
                                            ((g$test$21560$17Rald)
                                             ((case-lambda
                                                ((g$conseq$21561$17Rald)
                                                 ((case-lambda
                                                    ((g$altern$21562$17Rald)
                                                     (list
                                                       (g$build-lambda$19144$17Rald
                                                         '#f
                                                         (list
                                                           g$y$21559$17Rald)
                                                         (list
                                                           'if
                                                           g$test$21560$17Rald
                                                           g$conseq$21561$17Rald
                                                           g$altern$21562$17Rald))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$21544$17Rald
                                                         (list
                                                           'quote
                                                           g$p$21557$17Rald)))))
                                                  (g$gen-syntax-case$21516$17Rald
                                                    g$x$21544$17Rald
                                                    g$keys$21545$17Rald
                                                    g$clauses$21546$17Rald
                                                    g$r$21547$17Rald
                                                    g$mr$21548$17Rald))))
                                              (g$build-dispatch-call$21513$17Rald
                                                g$pvars$21556$17Rald
                                                g$expr$21551$17Rald
                                                g$y$21559$17Rald
                                                g$r$21547$17Rald
                                                g$mr$21548$17Rald))))
                                          (if (eq? g$fender$21550$17Rald
                                                   '#t)
                                            g$y$21559$17Rald
                                            ((case-lambda
                                               ((g$call$21563$17Rald)
                                                (list
                                                  'if
                                                  g$y$21559$17Rald
                                                  g$call$21563$17Rald
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$21513$17Rald
                                               g$pvars$21556$17Rald
                                               g$fender$21550$17Rald
                                               g$y$21559$17Rald
                                               g$r$21547$17Rald
                                               g$mr$21548$17Rald))))))
                                      (g$gen-lexical$19157$17Rald
                                        'tmp))))))
                              g$pvars$21555$17Rald
                              g$p$21554$17Rald)))))))
                   (g$gen-syntax-case$21516$17Rald
                     (case-lambda
                       ((g$x$21527$17Rald
                          g$keys$21528$17Rald
                          g$clauses$21529$17Rald
                          g$r$21530$17Rald
                          g$mr$21531$17Rald)
                        (if (null? g$clauses$21529$17Rald)
                          (list
                            '(primitive syntax-error)
                            g$x$21527$17Rald)
                          ((case-lambda
                             ((g$t$21532$17Rald)
                              ((case-lambda
                                 ((g$ls/false$21533$17Rald)
                                  (if g$ls/false$21533$17Rald
                                    (apply
                                      (case-lambda
                                        ((g$pat$21534$17Rald
                                           g$expr$21535$17Rald)
                                         (if (if (g$id?$19222$17Rald
                                                   g$pat$21534$17Rald)
                                               (if (not (g$bound-id-member?$19229$17Rald
                                                          g$pat$21534$17Rald
                                                          g$keys$21528$17Rald))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$19721$17Rald
                                                          g$pat$21534$17Rald)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$19226$17Rald
                                                 g$pat$21534$17Rald
                                                 (g$scheme-stx$19663$17Rald
                                                   '_))
                                             (g$chi-expr$19738$17Rald
                                               g$expr$21535$17Rald
                                               g$r$21530$17Rald
                                               g$mr$21531$17Rald)
                                             ((case-lambda
                                                ((g$lab$21536$17Rald
                                                   g$lex$21537$17Rald)
                                                 ((case-lambda
                                                    ((g$body$21538$17Rald)
                                                     (list
                                                       (g$build-lambda$19144$17Rald
                                                         '#f
                                                         (list
                                                           g$lex$21537$17Rald)
                                                         g$body$21538$17Rald)
                                                       g$x$21527$17Rald)))
                                                  (g$chi-expr$19738$17Rald
                                                    (g$add-subst$19212$17Rald
                                                      (g$make-full-rib$19188$17Rald
                                                        (list
                                                          g$pat$21534$17Rald)
                                                        (list
                                                          g$lab$21536$17Rald))
                                                      g$expr$21535$17Rald)
                                                    (cons
                                                      (cons
                                                        g$lab$21536$17Rald
                                                        (g$make-binding$19238$17Rald
                                                          'syntax
                                                          (cons
                                                            g$lex$21537$17Rald
                                                            '0)))
                                                      g$r$21530$17Rald)
                                                    g$mr$21531$17Rald))))
                                              (g$gen-label$19159$17Rald
                                                g$pat$21534$17Rald)
                                              (g$gen-lexical$19157$17Rald
                                                g$pat$21534$17Rald)))
                                           (g$gen-clause$21515$17Rald
                                             g$x$21527$17Rald
                                             g$keys$21528$17Rald
                                             (cdr g$clauses$21529$17Rald)
                                             g$r$21530$17Rald
                                             g$mr$21531$17Rald
                                             g$pat$21534$17Rald
                                             '#t
                                             g$expr$21535$17Rald))))
                                      g$ls/false$21533$17Rald)
                                    ((case-lambda
                                       ((g$t$21539$17Rald)
                                        ((case-lambda
                                           ((g$ls/false$21540$17Rald)
                                            (if g$ls/false$21540$17Rald
                                              (apply
                                                (case-lambda
                                                  ((g$pat$21541$17Rald
                                                     g$fender$21542$17Rald
                                                     g$expr$21543$17Rald)
                                                   (g$gen-clause$21515$17Rald
                                                     g$x$21527$17Rald
                                                     g$keys$21528$17Rald
                                                     (cdr g$clauses$21529$17Rald)
                                                     g$r$21530$17Rald
                                                     g$mr$21531$17Rald
                                                     g$pat$21541$17Rald
                                                     g$fender$21542$17Rald
                                                     g$expr$21543$17Rald)))
                                                g$ls/false$21540$17Rald)
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"invalid syntax"
                                                g$t$21539$17Rald))))
                                         (g$syntax-dispatch$19720$17Rald
                                           g$t$21539$17Rald
                                           '(any any any)))))
                                     g$t$21532$17Rald))))
                               (g$syntax-dispatch$19720$17Rald
                                 g$t$21532$17Rald
                                 '(any any)))))
                           (car g$clauses$21529$17Rald)))))))
           (case-lambda
             ((g$e$21517$17Rald g$r$21518$17Rald g$mr$21519$17Rald)
              ((case-lambda
                 ((g$t$21520$17Rald)
                  ((case-lambda
                     ((g$ls/false$21521$17Rald)
                      (if g$ls/false$21521$17Rald
                        (apply
                          (case-lambda
                            ((g$expr$21522$17Rald
                               g$keys$21523$17Rald
                               g$clauses$21524$17Rald)
                             (begin
                               (g$verify-literals$19723$17Rald
                                 g$keys$21523$17Rald
                                 g$e$21517$17Rald)
                               ((case-lambda
                                  ((g$x$21525$17Rald)
                                   ((case-lambda
                                      ((g$body$21526$17Rald)
                                       (list
                                         (g$build-lambda$19144$17Rald
                                           '#f
                                           (list g$x$21525$17Rald)
                                           g$body$21526$17Rald)
                                         (g$chi-expr$19738$17Rald
                                           g$expr$21522$17Rald
                                           g$r$21518$17Rald
                                           g$mr$21519$17Rald))))
                                    (g$gen-syntax-case$21516$17Rald
                                      g$x$21525$17Rald
                                      g$keys$21523$17Rald
                                      g$clauses$21524$17Rald
                                      g$r$21518$17Rald
                                      g$mr$21519$17Rald))))
                                (g$gen-lexical$19157$17Rald 'tmp)))))
                          g$ls/false$21521$17Rald)
                        (g$syntax-violation$19839$17Rald
                          '#f
                          '"invalid syntax"
                          g$t$21520$17Rald))))
                   (g$syntax-dispatch$19720$17Rald
                     g$t$21520$17Rald
                     '(_ any each-any . each-any)))))
               g$e$21517$17Rald))))))))
   (g$ellipsis-map$19725$17Rald
     g$ellipsis-map$23321$17Rald
     (case-lambda
       ((g$proc$21583$17Rald g$ls$21584$17Rald . g$ls*$21585$17Rald)
        (letrec* ((g$who$21586$17Rald '...))
          (begin
            (if (not (list? g$ls$21584$17Rald))
              (assertion-violation
                g$who$21586$17Rald
                '"not a list"
                g$ls$21584$17Rald)
              (void))
            (if (not (null? g$ls*$21585$17Rald))
              ((case-lambda
                 ((g$n$21587$17Rald)
                  (g$for-each$11836$17Rald
                    (case-lambda
                      ((g$x$21588$17Rald)
                       (begin
                         (if (not (list? g$x$21588$17Rald))
                           (assertion-violation
                             g$who$21586$17Rald
                             '"not a list"
                             g$x$21588$17Rald)
                           (void))
                         (if (not (= (length g$x$21588$17Rald)
                                     g$n$21587$17Rald))
                           (assertion-violation
                             g$who$21586$17Rald
                             '"length mismatch"
                             g$ls$21584$17Rald
                             g$x$21588$17Rald)
                           (void)))))
                    g$ls*$21585$17Rald)))
               (length g$ls$21584$17Rald))
              (void))
            (apply
              g$map$11835$17Rald
              g$proc$21583$17Rald
              g$ls$21584$17Rald
              g$ls*$21585$17Rald))))))
   (g$syntax-transformer$19726$17Rald
     g$syntax-transformer$23322$17Rald
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$21589$17Rald
                     (case-lambda
                       ((g$src$21649$17Rald
                          g$e$21650$17Rald
                          g$r$21651$17Rald
                          g$maps$21652$17Rald
                          g$ellipsis?$21653$17Rald
                          g$vec?$21654$17Rald)
                        ((case-lambda
                           ((g$t$21655$17Rald)
                            ((case-lambda
                               ((g$ls/false$21656$17Rald)
                                (if (if g$ls/false$21656$17Rald
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$21657$17Rald)
                                             (g$ellipsis?$21653$17Rald
                                               g$dots$21657$17Rald)))
                                          g$ls/false$21656$17Rald))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$21658$17Rald)
                                       (g$syntax-violation$19839$17Rald
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$21649$17Rald)))
                                    g$ls/false$21656$17Rald)
                                  ((case-lambda
                                     ((g$t$21659$17Rald)
                                      ((case-lambda
                                         ((g$ls/false$21660$17Rald)
                                          (if (if g$ls/false$21660$17Rald
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$21661$17Rald)
                                                       (g$id?$19222$17Rald
                                                         g$id$21661$17Rald)))
                                                    g$ls/false$21660$17Rald))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$21662$17Rald)
                                                 ((case-lambda
                                                    ((g$label$21663$17Rald)
                                                     ((case-lambda
                                                        ((g$b$21664$17Rald)
                                                         (if (eq? (g$binding-type$19239$17Rald
                                                                    g$b$21664$17Rald)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$21667$17Rald)
                                                                    (g$gen-ref$21590$17Rald
                                                                      g$src$21649$17Rald
                                                                      (car g$var.lev$21667$17Rald)
                                                                      (cdr g$var.lev$21667$17Rald)
                                                                      g$maps$21652$17Rald)))
                                                                 (g$binding-value$19240$17Rald
                                                                   g$b$21664$17Rald))))
                                                             (case-lambda
                                                               ((g$var$21668$17Rald
                                                                  g$maps$21669$17Rald)
                                                                ((case-lambda
                                                                   ((g$maps$21670$17Rald
                                                                      g$var$21671$17Rald)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$21671$17Rald)
                                                                      g$maps$21670$17Rald)))
                                                                 g$maps$21669$17Rald
                                                                 g$var$21668$17Rald))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$21650$17Rald)
                                                             g$maps$21652$17Rald))))
                                                      (g$label->binding$19237$17Rald
                                                        g$label$21663$17Rald
                                                        g$r$21651$17Rald))))
                                                  (g$id->label$19235$17Rald
                                                    g$e$21650$17Rald))))
                                              g$ls/false$21660$17Rald)
                                            ((case-lambda
                                               ((g$t$21672$17Rald)
                                                ((case-lambda
                                                   ((g$ls/false$21673$17Rald)
                                                    (if (if g$ls/false$21673$17Rald
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$21674$17Rald
                                                                   g$e$21675$17Rald)
                                                                 (g$ellipsis?$21653$17Rald
                                                                   g$dots$21674$17Rald)))
                                                              g$ls/false$21673$17Rald))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$21676$17Rald
                                                             g$e$21677$17Rald)
                                                           (if g$vec?$21654$17Rald
                                                             (g$syntax-violation$19839$17Rald
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$21649$17Rald)
                                                             (g$gen-syntax$21589$17Rald
                                                               g$src$21649$17Rald
                                                               g$e$21677$17Rald
                                                               g$r$21651$17Rald
                                                               g$maps$21652$17Rald
                                                               (case-lambda
                                                                 ((g$x$21678$17Rald)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$21673$17Rald)
                                                      ((case-lambda
                                                         ((g$t$21679$17Rald)
                                                          ((case-lambda
                                                             ((g$ls/false$21680$17Rald)
                                                              (if (if g$ls/false$21680$17Rald
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$21681$17Rald
                                                                             g$dots$21682$17Rald
                                                                             g$y$21683$17Rald)
                                                                           (g$ellipsis?$21653$17Rald
                                                                             g$dots$21682$17Rald)))
                                                                        g$ls/false$21680$17Rald))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$21684$17Rald
                                                                       g$dots$21685$17Rald
                                                                       g$y$21686$17Rald)
                                                                     ((letrec ((g$f$21687$17Rald
                                                                                 (case-lambda
                                                                                   ((g$y$21688$17Rald
                                                                                      g$k$21689$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$t$21690$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21691$17Rald)
                                                                                            (if g$ls/false$21691$17Rald
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$21689$17Rald
                                                                                                     g$maps$21652$17Rald)))
                                                                                                g$ls/false$21691$17Rald)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21692$17Rald)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21693$17Rald)
                                                                                                      (if (if g$ls/false$21693$17Rald
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$21694$17Rald
                                                                                                                     g$y$21695$17Rald)
                                                                                                                   (g$ellipsis?$21653$17Rald
                                                                                                                     g$dots$21694$17Rald)))
                                                                                                                g$ls/false$21693$17Rald))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$21696$17Rald
                                                                                                               g$y$21697$17Rald)
                                                                                                             (g$f$21687$17Rald
                                                                                                               g$y$21697$17Rald
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$21698$17Rald)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$21689$17Rald
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$21698$17Rald))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$21701$17Rald
                                                                                                                         g$maps$21702$17Rald)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$21703$17Rald
                                                                                                                             g$x$21704$17Rald)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$21703$17Rald))
                                                                                                                             (g$syntax-violation$19839$17Rald
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$21649$17Rald)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$21592$17Rald
                                                                                                                                 g$x$21704$17Rald
                                                                                                                                 (car g$maps$21703$17Rald))
                                                                                                                               (cdr g$maps$21703$17Rald)))))
                                                                                                                        g$maps$21702$17Rald
                                                                                                                        g$x$21701$17Rald)))))))))
                                                                                                          g$ls/false$21693$17Rald)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21705$17Rald)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21706$17Rald)
                                                                                                                (if g$ls/false$21706$17Rald
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$21589$17Rald
                                                                                                                              g$src$21649$17Rald
                                                                                                                              g$y$21688$17Rald
                                                                                                                              g$r$21651$17Rald
                                                                                                                              g$maps$21652$17Rald
                                                                                                                              g$ellipsis?$21653$17Rald
                                                                                                                              g$vec?$21654$17Rald)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$21709$17Rald
                                                                                                                              g$maps$21710$17Rald)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$21711$17Rald
                                                                                                                                  g$y$21712$17Rald)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$21689$17Rald
                                                                                                                                       g$maps$21711$17Rald)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$21715$17Rald
                                                                                                                                       g$maps$21716$17Rald)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$21717$17Rald
                                                                                                                                           g$x$21718$17Rald)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$21591$17Rald
                                                                                                                                             g$x$21718$17Rald
                                                                                                                                             g$y$21712$17Rald)
                                                                                                                                           g$maps$21717$17Rald)))
                                                                                                                                      g$maps$21716$17Rald
                                                                                                                                      g$x$21715$17Rald))))))
                                                                                                                             g$maps$21710$17Rald
                                                                                                                             g$y$21709$17Rald))))))
                                                                                                                    g$ls/false$21706$17Rald)
                                                                                                                  (g$syntax-violation$19839$17Rald
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21705$17Rald))))
                                                                                                             (g$syntax-dispatch$19720$17Rald
                                                                                                               g$t$21705$17Rald
                                                                                                               '_))))
                                                                                                         g$t$21692$17Rald))))
                                                                                                   (g$syntax-dispatch$19720$17Rald
                                                                                                     g$t$21692$17Rald
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$21690$17Rald))))
                                                                                         (g$syntax-dispatch$19720$17Rald
                                                                                           g$t$21690$17Rald
                                                                                           '()))))
                                                                                     g$y$21688$17Rald)))))
                                                                        g$f$21687$17Rald)
                                                                      g$y$21686$17Rald
                                                                      (case-lambda
                                                                        ((g$maps$21719$17Rald)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$21589$17Rald
                                                                                g$src$21649$17Rald
                                                                                g$x$21684$17Rald
                                                                                g$r$21651$17Rald
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$21719$17Rald)
                                                                                g$ellipsis?$21653$17Rald
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$21722$17Rald
                                                                                g$maps$21723$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$maps$21724$17Rald
                                                                                    g$x$21725$17Rald)
                                                                                  (if (null?
                                                                                        (car g$maps$21724$17Rald))
                                                                                    (g$syntax-violation$19839$17Rald
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$21649$17Rald)
                                                                                    (values
                                                                                      (g$gen-map$21593$17Rald
                                                                                        g$x$21725$17Rald
                                                                                        (car g$maps$21724$17Rald))
                                                                                      (cdr g$maps$21724$17Rald)))))
                                                                               g$maps$21723$17Rald
                                                                               g$x$21722$17Rald)))))))))
                                                                  g$ls/false$21680$17Rald)
                                                                ((case-lambda
                                                                   ((g$t$21726$17Rald)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21727$17Rald)
                                                                        (if g$ls/false$21727$17Rald
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$21728$17Rald
                                                                                 g$y$21729$17Rald)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$21589$17Rald
                                                                                      g$src$21649$17Rald
                                                                                      g$x$21728$17Rald
                                                                                      g$r$21651$17Rald
                                                                                      g$maps$21652$17Rald
                                                                                      g$ellipsis?$21653$17Rald
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$21732$17Rald
                                                                                      g$maps$21733$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$maps$21734$17Rald
                                                                                          g$xnew$21735$17Rald)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$21589$17Rald
                                                                                               g$src$21649$17Rald
                                                                                               g$y$21729$17Rald
                                                                                               g$r$21651$17Rald
                                                                                               g$maps$21734$17Rald
                                                                                               g$ellipsis?$21653$17Rald
                                                                                               g$vec?$21654$17Rald)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$21738$17Rald
                                                                                               g$maps$21739$17Rald)
                                                                                             ((case-lambda
                                                                                                ((g$maps$21740$17Rald
                                                                                                   g$ynew$21741$17Rald)
                                                                                                 (values
                                                                                                   (g$gen-cons$21594$17Rald
                                                                                                     g$e$21650$17Rald
                                                                                                     g$x$21728$17Rald
                                                                                                     g$y$21729$17Rald
                                                                                                     g$xnew$21735$17Rald
                                                                                                     g$ynew$21741$17Rald)
                                                                                                   g$maps$21740$17Rald)))
                                                                                              g$maps$21739$17Rald
                                                                                              g$ynew$21738$17Rald))))))
                                                                                     g$maps$21733$17Rald
                                                                                     g$xnew$21732$17Rald))))))
                                                                            g$ls/false$21727$17Rald)
                                                                          ((case-lambda
                                                                             ((g$t$21742$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21743$17Rald)
                                                                                  (if g$ls/false$21743$17Rald
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$21744$17Rald)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$21589$17Rald
                                                                                                g$src$21649$17Rald
                                                                                                g$ls$21744$17Rald
                                                                                                g$r$21651$17Rald
                                                                                                g$maps$21652$17Rald
                                                                                                g$ellipsis?$21653$17Rald
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$21747$17Rald
                                                                                                g$maps$21748$17Rald)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$21749$17Rald
                                                                                                    g$lsnew$21750$17Rald)
                                                                                                  (values
                                                                                                    (g$gen-vector$21595$17Rald
                                                                                                      g$e$21650$17Rald
                                                                                                      g$ls$21744$17Rald
                                                                                                      g$lsnew$21750$17Rald)
                                                                                                    g$maps$21749$17Rald)))
                                                                                               g$maps$21748$17Rald
                                                                                               g$lsnew$21747$17Rald))))))
                                                                                      g$ls/false$21743$17Rald)
                                                                                    ((case-lambda
                                                                                       ((g$t$21751$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21752$17Rald)
                                                                                            (if g$ls/false$21752$17Rald
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$21650$17Rald)
                                                                                                     g$maps$21652$17Rald)))
                                                                                                g$ls/false$21752$17Rald)
                                                                                              (g$syntax-violation$19839$17Rald
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21751$17Rald))))
                                                                                         (g$syntax-dispatch$19720$17Rald
                                                                                           g$t$21751$17Rald
                                                                                           '_))))
                                                                                     g$t$21742$17Rald))))
                                                                               (g$syntax-dispatch$19720$17Rald
                                                                                 g$t$21742$17Rald
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$21726$17Rald))))
                                                                     (g$syntax-dispatch$19720$17Rald
                                                                       g$t$21726$17Rald
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$21679$17Rald))))
                                                           (g$syntax-dispatch$19720$17Rald
                                                             g$t$21679$17Rald
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$21672$17Rald))))
                                                 (g$syntax-dispatch$19720$17Rald
                                                   g$t$21672$17Rald
                                                   '(any any)))))
                                             g$t$21659$17Rald))))
                                       (g$syntax-dispatch$19720$17Rald
                                         g$t$21659$17Rald
                                         'any))))
                                   g$t$21655$17Rald))))
                             (g$syntax-dispatch$19720$17Rald
                               g$t$21655$17Rald
                               'any))))
                         g$e$21650$17Rald))))
                   (g$gen-ref$21590$17Rald
                     (case-lambda
                       ((g$src$21636$17Rald
                          g$var$21637$17Rald
                          g$level$21638$17Rald
                          g$maps$21639$17Rald)
                        (if (= g$level$21638$17Rald '0)
                          (values
                            g$var$21637$17Rald
                            g$maps$21639$17Rald)
                          (if (null? g$maps$21639$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$21636$17Rald)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$21590$17Rald
                                   g$src$21636$17Rald
                                   g$var$21637$17Rald
                                   (- g$level$21638$17Rald '1)
                                   (cdr g$maps$21639$17Rald))))
                              (case-lambda
                                ((g$outer-var$21642$17Rald
                                   g$outer-maps$21643$17Rald)
                                 ((case-lambda
                                    ((g$outer-maps$21644$17Rald
                                       g$outer-var$21645$17Rald)
                                     ((case-lambda
                                        ((g$t$21646$17Rald)
                                         (if g$t$21646$17Rald
                                           ((case-lambda
                                              ((g$b$21647$17Rald)
                                               (values
                                                 (cdr g$b$21647$17Rald)
                                                 g$maps$21639$17Rald)))
                                            g$t$21646$17Rald)
                                           ((case-lambda
                                              ((g$inner-var$21648$17Rald)
                                               (values
                                                 g$inner-var$21648$17Rald
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$21645$17Rald
                                                       g$inner-var$21648$17Rald)
                                                     (car g$maps$21639$17Rald))
                                                   g$outer-maps$21644$17Rald))))
                                            (g$gen-lexical$19157$17Rald
                                              'tmp)))))
                                      (g$assq$11823$17Rald
                                        g$outer-var$21645$17Rald
                                        (car g$maps$21639$17Rald)))))
                                  g$outer-maps$21643$17Rald
                                  g$outer-var$21642$17Rald)))))))))
                   (g$gen-append$21591$17Rald
                     (case-lambda
                       ((g$x$21634$17Rald g$y$21635$17Rald)
                        (if (equal? g$y$21635$17Rald ''())
                          g$x$21634$17Rald
                          (list
                            'append
                            g$x$21634$17Rald
                            g$y$21635$17Rald)))))
                   (g$gen-mappend$21592$17Rald
                     (case-lambda
                       ((g$e$21632$17Rald g$map-env$21633$17Rald)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$21593$17Rald
                            g$e$21632$17Rald
                            g$map-env$21633$17Rald)))))
                   (g$gen-map$21593$17Rald
                     (case-lambda
                       ((g$e$21623$17Rald g$map-env$21624$17Rald)
                        ((case-lambda
                           ((g$formals$21625$17Rald
                              g$actuals$21626$17Rald)
                            (if (eq? (car g$e$21623$17Rald) 'ref)
                              (car g$actuals$21626$17Rald)
                              (if (g$for-all$11833$17Rald
                                    (case-lambda
                                      ((g$x$21627$17Rald)
                                       (if (eq? (car g$x$21627$17Rald)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11827$17Rald
                                             (g$cadr$12628$17Rald
                                               g$x$21627$17Rald)
                                             g$formals$21625$17Rald))
                                         '#f)))
                                    (cdr g$e$21623$17Rald))
                                ((case-lambda
                                   ((g$args$21628$17Rald)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$21623$17Rald))
                                        g$args$21628$17Rald))))
                                 (g$map$11835$17Rald
                                   ((case-lambda
                                      ((g$r$21629$17Rald)
                                       (case-lambda
                                         ((g$x$21630$17Rald)
                                          (cdr (g$assq$11823$17Rald
                                                 (g$cadr$12628$17Rald
                                                   g$x$21630$17Rald)
                                                 g$r$21629$17Rald))))))
                                    (g$map$11835$17Rald
                                      cons
                                      g$formals$21625$17Rald
                                      g$actuals$21626$17Rald))
                                   (cdr g$e$21623$17Rald)))
                                (g$cons*$11837$17Rald
                                  'map
                                  (list
                                    'lambda
                                    g$formals$21625$17Rald
                                    g$e$21623$17Rald)
                                  g$actuals$21626$17Rald)))))
                         (g$map$11835$17Rald cdr g$map-env$21624$17Rald)
                         (g$map$11835$17Rald
                           (case-lambda
                             ((g$x$21631$17Rald)
                              (list 'ref (car g$x$21631$17Rald))))
                           g$map-env$21624$17Rald)))))
                   (g$gen-cons$21594$17Rald
                     (case-lambda
                       ((g$e$21615$17Rald
                          g$x$21616$17Rald
                          g$y$21617$17Rald
                          g$xnew$21618$17Rald
                          g$ynew$21619$17Rald)
                        ((case-lambda
                           ((g$t$21620$17Rald)
                            (if (eqv? g$t$21620$17Rald 'quote)
                              (if (eq? (car g$xnew$21618$17Rald) 'quote)
                                ((case-lambda
                                   ((g$xnew$21621$17Rald
                                      g$ynew$21622$17Rald)
                                    (if (if (eq? g$xnew$21621$17Rald
                                                 g$x$21616$17Rald)
                                          (begin
                                            '#f
                                            (eq? g$ynew$21622$17Rald
                                                 g$y$21617$17Rald))
                                          '#f)
                                      (list 'quote g$e$21615$17Rald)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$21621$17Rald
                                          g$ynew$21622$17Rald)))))
                                 (g$cadr$12628$17Rald
                                   g$xnew$21618$17Rald)
                                 (g$cadr$12628$17Rald
                                   g$ynew$21619$17Rald))
                                (if (null?
                                      (g$cadr$12628$17Rald
                                        g$ynew$21619$17Rald))
                                  (list 'list g$xnew$21618$17Rald)
                                  (list
                                    'cons
                                    g$xnew$21618$17Rald
                                    g$ynew$21619$17Rald)))
                              (if (eqv? g$t$21620$17Rald 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$21618$17Rald
                                    (cdr g$ynew$21619$17Rald)))
                                (list
                                  'cons
                                  g$xnew$21618$17Rald
                                  g$ynew$21619$17Rald)))))
                         (car g$ynew$21619$17Rald)))))
                   (g$gen-vector$21595$17Rald
                     (case-lambda
                       ((g$e$21612$17Rald
                          g$ls$21613$17Rald
                          g$lsnew$21614$17Rald)
                        (if (eq? (car g$lsnew$21614$17Rald) 'quote)
                          (if (eq? (g$cadr$12628$17Rald
                                     g$lsnew$21614$17Rald)
                                   g$ls$21613$17Rald)
                            (list 'quote g$e$21612$17Rald)
                            (list
                              'quote
                              (g$list->vector$12620$17Rald
                                (g$cadr$12628$17Rald
                                  g$lsnew$21614$17Rald))))
                          (if (eq? (car g$lsnew$21614$17Rald) 'list)
                            (cons 'vector (cdr g$lsnew$21614$17Rald))
                            (list
                              'list->vector
                              g$lsnew$21614$17Rald))))))
                   (g$regen$21596$17Rald
                     (case-lambda
                       ((g$x$21609$17Rald)
                        ((case-lambda
                           ((g$t$21610$17Rald)
                            (if (eqv? g$t$21610$17Rald 'ref)
                              (g$cadr$12628$17Rald g$x$21609$17Rald)
                              (if (eqv? g$t$21610$17Rald 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12628$17Rald
                                    g$x$21609$17Rald))
                                (if (eqv? g$t$21610$17Rald 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12628$17Rald
                                      g$x$21609$17Rald))
                                  (if (eqv? g$t$21610$17Rald 'lambda)
                                    (g$build-lambda$19144$17Rald
                                      '#f
                                      (g$cadr$12628$17Rald
                                        g$x$21609$17Rald)
                                      (g$regen$21596$17Rald
                                        (g$caddr$12634$17Rald
                                          g$x$21609$17Rald)))
                                    (if (eqv? g$t$21610$17Rald 'map)
                                      ((case-lambda
                                         ((g$ls$21611$17Rald)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$21611$17Rald)))
                                       (g$map$11835$17Rald
                                         g$regen$21596$17Rald
                                         (cdr g$x$21609$17Rald)))
                                      (cons
                                        (list
                                          'primitive
                                          (car g$x$21609$17Rald))
                                        (g$map$11835$17Rald
                                          g$regen$21596$17Rald
                                          (cdr g$x$21609$17Rald))))))))))
                         (car g$x$21609$17Rald))))))
           (case-lambda
             ((g$e$21597$17Rald g$r$21598$17Rald g$mr$21599$17Rald)
              ((case-lambda
                 ((g$t$21600$17Rald)
                  ((case-lambda
                     ((g$ls/false$21601$17Rald)
                      (if g$ls/false$21601$17Rald
                        (apply
                          (case-lambda
                            ((g$x$21602$17Rald)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$21589$17Rald
                                    g$e$21597$17Rald
                                    g$x$21602$17Rald
                                    g$r$21598$17Rald
                                    '()
                                    g$ellipsis?$19721$17Rald
                                    '#f)))
                               (case-lambda
                                 ((g$e$21605$17Rald g$maps$21606$17Rald)
                                  ((case-lambda
                                     ((g$maps$21607$17Rald
                                        g$e$21608$17Rald)
                                      (g$regen$21596$17Rald
                                        g$e$21608$17Rald)))
                                   g$maps$21606$17Rald
                                   g$e$21605$17Rald))))))
                          g$ls/false$21601$17Rald)
                        (g$syntax-violation$19839$17Rald
                          '#f
                          '"invalid syntax"
                          g$t$21600$17Rald))))
                   (g$syntax-dispatch$19720$17Rald
                     g$t$21600$17Rald
                     '(_ any)))))
               g$e$21597$17Rald))))))))
   (g$core-macro-transformer$19727$17Rald
     g$core-macro-transformer$23323$17Rald
     (case-lambda
       ((g$name$21753$17Rald)
        ((case-lambda
           ((g$t$21754$17Rald)
            (if (eqv? g$t$21754$17Rald 'quote)
              g$quote-transformer$19680$17Rald
              (if (eqv? g$t$21754$17Rald 'lambda)
                g$lambda-transformer$19682$17Rald
                (if (eqv? g$t$21754$17Rald 'case-lambda)
                  g$case-lambda-transformer$19681$17Rald
                  (if (eqv? g$t$21754$17Rald 'letrec)
                    g$letrec-transformer$19670$17Rald
                    (if (eqv? g$t$21754$17Rald 'letrec*)
                      g$letrec*-transformer$19671$17Rald
                      (if (eqv? g$t$21754$17Rald 'if)
                        g$if-transformer$19678$17Rald
                        (if (eqv? g$t$21754$17Rald 'foreign-call)
                          g$foreign-call-transformer$19718$17Rald
                          (if (eqv? g$t$21754$17Rald 'syntax-case)
                            g$syntax-case-transformer$19724$17Rald
                            (if (eqv? g$t$21754$17Rald 'syntax)
                              g$syntax-transformer$19726$17Rald
                              (if (eqv?
                                    g$t$21754$17Rald
                                    'type-descriptor)
                                g$type-descriptor-transformer$19673$17Rald
                                (if (eqv?
                                      g$t$21754$17Rald
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$19674$17Rald
                                  (if (eqv?
                                        g$t$21754$17Rald
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$19675$17Rald
                                    (if (eqv?
                                          g$t$21754$17Rald
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$19672$17Rald
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$21753$17Rald))))))))))))))))
         g$name$21753$17Rald))))
   (g$file-options-macro$19728$17Rald
     g$file-options-macro$23324$17Rald
     (case-lambda
       ((g$x$21755$17Rald)
        (letrec* ((g$valid-option?$21756$17Rald
                    (case-lambda
                      ((g$x$21761$17Rald)
                       (if (g$id?$19222$17Rald g$x$21761$17Rald)
                         (begin
                           '#f
                           (g$memq$11827$17Rald
                             (g$id->sym$19223$17Rald g$x$21761$17Rald)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$21757$17Rald)
              ((case-lambda
                 ((g$ls/false$21758$17Rald)
                  (if (if g$ls/false$21758$17Rald
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$21759$17Rald)
                               (if (g$for-all$11833$17Rald
                                     g$valid-option?$21756$17Rald
                                     g$opt*$21759$17Rald)
                                 (begin
                                   '#f
                                   (g$file-options-spec$18085$17Rald
                                     (g$map$11835$17Rald
                                       g$id->sym$19223$17Rald
                                       g$opt*$21759$17Rald)))
                                 '#f)))
                            g$ls/false$21758$17Rald))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$21760$17Rald)
                         (g$bless$19683$17Rald
                           (list
                             'quote
                             (g$file-options-spec$18085$17Rald
                               (g$map$11835$17Rald
                                 g$id->sym$19223$17Rald
                                 g$opt*$21760$17Rald))))))
                      g$ls/false$21758$17Rald)
                    (g$syntax-violation$19839$17Rald
                      '#f
                      '"invalid syntax"
                      g$t$21757$17Rald))))
               (g$syntax-dispatch$19720$17Rald
                 g$t$21757$17Rald
                 '(_ . each-any)))))
           g$x$21755$17Rald)))))
   (g$symbol-macro$19729$17Rald
     g$symbol-macro$23325$17Rald
     (case-lambda
       ((g$x$21762$17Rald g$set$21763$17Rald)
        ((case-lambda
           ((g$t$21764$17Rald)
            ((case-lambda
               ((g$ls/false$21765$17Rald)
                (if (if g$ls/false$21765$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$21766$17Rald)
                             (if (g$id?$19222$17Rald
                                   g$name$21766$17Rald)
                               (begin
                                 '#f
                                 (g$memq$11827$17Rald
                                   (g$id->sym$19223$17Rald
                                     g$name$21766$17Rald)
                                   g$set$21763$17Rald))
                               '#f)))
                          g$ls/false$21765$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$21767$17Rald)
                       (g$bless$19683$17Rald
                         (list 'quote g$name$21767$17Rald))))
                    g$ls/false$21765$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$21764$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21764$17Rald
               '(_ any)))))
         g$x$21762$17Rald))))
   (g$macro-transformer$19730$17Rald
     g$macro-transformer$23326$17Rald
     (case-lambda
       ((g$x$21768$17Rald)
        (if (g$procedure?$12612$17Rald g$x$21768$17Rald)
          g$x$21768$17Rald
          (if (g$symbol?$12610$17Rald g$x$21768$17Rald)
            ((case-lambda
               ((g$t$21769$17Rald)
                (if (eqv? g$t$21769$17Rald 'define-record-type)
                  g$define-record-type-macro$19714$17Rald
                  (if (eqv? g$t$21769$17Rald 'define-struct)
                    g$define-struct-macro$19713$17Rald
                    (if (eqv? g$t$21769$17Rald 'include)
                      g$include-macro$19708$17Rald
                      (if (eqv? g$t$21769$17Rald 'cond)
                        g$cond-macro$19706$17Rald
                        (if (eqv? g$t$21769$17Rald 'let)
                          g$let-macro$19686$17Rald
                          (if (eqv? g$t$21769$17Rald 'do)
                            g$do-macro$19702$17Rald
                            (if (eqv? g$t$21769$17Rald 'or)
                              g$or-macro$19704$17Rald
                              (if (eqv? g$t$21769$17Rald 'and)
                                g$and-macro$19705$17Rald
                                (if (eqv? g$t$21769$17Rald 'let*)
                                  g$let*-macro$19703$17Rald
                                  (if (eqv?
                                        g$t$21769$17Rald
                                        'let-values)
                                    g$let-values-macro$19687$17Rald
                                    (if (eqv?
                                          g$t$21769$17Rald
                                          'let*-values)
                                      g$let*-values-macro$19688$17Rald
                                      (if (eqv?
                                            g$t$21769$17Rald
                                            'syntax-rules)
                                        g$syntax-rules-macro$19710$17Rald
                                        (if (eqv?
                                              g$t$21769$17Rald
                                              'quasiquote)
                                          g$quasiquote-macro$19711$17Rald
                                          (if (eqv?
                                                g$t$21769$17Rald
                                                'quasisyntax)
                                            g$quasisyntax-macro$19712$17Rald
                                            (if (eqv?
                                                  g$t$21769$17Rald
                                                  'with-syntax)
                                              g$with-syntax-macro$19684$17Rald
                                              (if (eqv?
                                                    g$t$21769$17Rald
                                                    'when)
                                                g$when-macro$19676$17Rald
                                                (if (eqv?
                                                      g$t$21769$17Rald
                                                      'unless)
                                                  g$unless-macro$19677$17Rald
                                                  (if (eqv?
                                                        g$t$21769$17Rald
                                                        'case)
                                                    g$case-macro$19679$17Rald
                                                    (if (eqv?
                                                          g$t$21769$17Rald
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$19701$17Rald
                                                      (if (eqv?
                                                            g$t$21769$17Rald
                                                            'time)
                                                        g$time-macro$19697$17Rald
                                                        (if (eqv?
                                                              g$t$21769$17Rald
                                                              'delay)
                                                          g$delay-macro$19698$17Rald
                                                          (if (eqv?
                                                                g$t$21769$17Rald
                                                                'assert)
                                                            g$assert-macro$19699$17Rald
                                                            (if (eqv?
                                                                  g$t$21769$17Rald
                                                                  'endianness)
                                                              g$endianness-macro$19700$17Rald
                                                              (if (eqv?
                                                                    g$t$21769$17Rald
                                                                    'guard)
                                                                g$guard-macro$19695$17Rald
                                                                (if (eqv?
                                                                      g$t$21769$17Rald
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$19696$17Rald
                                                                  (if (eqv?
                                                                        g$t$21769$17Rald
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$19689$17Rald
                                                                    (if (eqv?
                                                                          g$t$21769$17Rald
                                                                          'trace-define)
                                                                      g$trace-define-macro$19690$17Rald
                                                                      (if (eqv?
                                                                            g$t$21769$17Rald
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$19691$17Rald
                                                                        (if (eqv?
                                                                              g$t$21769$17Rald
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$19693$17Rald
                                                                          (if (eqv?
                                                                                g$t$21769$17Rald
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$19694$17Rald
                                                                            (if (eqv?
                                                                                  g$t$21769$17Rald
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$19715$17Rald
                                                                              (if (eqv?
                                                                                    g$t$21769$17Rald
                                                                                    'parameterize)
                                                                                g$parameterize-macro$19717$17Rald
                                                                                (if (eqv?
                                                                                      g$t$21769$17Rald
                                                                                      'include-into)
                                                                                  g$include-into-macro$19709$17Rald
                                                                                  (if (eqv?
                                                                                        g$t$21769$17Rald
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$21770$17Rald)
                                                                                       (g$symbol-macro$19729$17Rald
                                                                                         g$x$21770$17Rald
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$21769$17Rald
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$21771$17Rald)
                                                                                         (g$symbol-macro$19729$17Rald
                                                                                           g$x$21771$17Rald
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$21769$17Rald
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$21772$17Rald)
                                                                                           (g$symbol-macro$19729$17Rald
                                                                                             g$x$21772$17Rald
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$21769$17Rald
                                                                                              'file-options)
                                                                                          g$file-options-macro$19728$17Rald
                                                                                          (if (g$memv$11828$17Rald
                                                                                                g$t$21769$17Rald
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$19716$17Rald
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$21768$17Rald)))))))))))))))))))))))))))))))))))))))))
             g$x$21768$17Rald)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$21768$17Rald))))))
   (g$local-macro-transformer$19731$17Rald
     g$local-macro-transformer$23327$17Rald
     (case-lambda ((g$x$21773$17Rald) (car g$x$21773$17Rald))))
   (g$do-macro-call$19732$17Rald
     g$do-macro-call$23328$17Rald
     (case-lambda
       ((g$transformer$21774$17Rald
          g$expr$21775$17Rald
          g$r$21776$17Rald)
        (letrec* ((g$return$21777$17Rald
                    (case-lambda
                      ((g$x$21785$17Rald)
                       (begin
                         ((letrec ((g$f$21786$17Rald
                                     (case-lambda
                                       ((g$x$21787$17Rald)
                                        (if (not (g$stx?$19194$17Rald
                                                   g$x$21787$17Rald))
                                          (if (pair? g$x$21787$17Rald)
                                            (begin
                                              (g$f$21786$17Rald
                                                (car g$x$21787$17Rald))
                                              (g$f$21786$17Rald
                                                (cdr g$x$21787$17Rald)))
                                            (if (g$vector?$12608$17Rald
                                                  g$x$21787$17Rald)
                                              (g$vector-for-each$12680$17Rald
                                                g$f$21786$17Rald
                                                g$x$21787$17Rald)
                                              (if (g$symbol?$12610$17Rald
                                                    g$x$21787$17Rald)
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$21775$17Rald
                                                  g$x$21787$17Rald)
                                                (void))))
                                          (void))))))
                            g$f$21786$17Rald)
                          g$x$21785$17Rald)
                         (g$add-mark$19211$17Rald
                           (g$gen-mark$19206$17Rald)
                           g$x$21785$17Rald
                           g$expr$21775$17Rald))))))
          ((case-lambda
             ((g$x$21778$17Rald)
              (if (g$procedure?$12612$17Rald g$x$21778$17Rald)
                (g$return$21777$17Rald
                  (g$x$21778$17Rald
                    (case-lambda
                      ((g$id$21779$17Rald)
                       (begin
                         (if (not (g$id?$19222$17Rald
                                    g$id$21779$17Rald))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$21779$17Rald)
                           (void))
                         ((case-lambda
                            ((g$label$21780$17Rald)
                             ((case-lambda
                                ((g$binding$21781$17Rald)
                                 ((case-lambda
                                    ((g$t$21782$17Rald)
                                     (if (eqv?
                                           g$t$21782$17Rald
                                           'local-ctv)
                                       (g$cadr$12628$17Rald
                                         g$binding$21781$17Rald)
                                       (if (eqv?
                                             g$t$21782$17Rald
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$21783$17Rald
                                               g$loc$21784$17Rald)
                                             (begin
                                               (g$visit-library$18929$17Rald
                                                 g$lib$21783$17Rald)
                                               (symbol-value
                                                 g$loc$21784$17Rald))))
                                          (g$cadr$12628$17Rald
                                            g$binding$21781$17Rald)
                                          (g$cddr$12630$17Rald
                                            g$binding$21781$17Rald))
                                         '#f))))
                                  (car g$binding$21781$17Rald))))
                              (g$label->binding$19237$17Rald
                                g$label$21780$17Rald
                                g$r$21776$17Rald))))
                          (g$id->label$19235$17Rald
                            g$id$21779$17Rald)))))))
                (g$return$21777$17Rald g$x$21778$17Rald))))
           (g$transformer$21774$17Rald
             (g$add-mark$19211$17Rald
               g$anti-mark$19207$17Rald
               g$expr$21775$17Rald
               '#f)))))))
   (g$chi-macro$19733$17Rald
     g$chi-macro$23329$17Rald
     (case-lambda
       ((g$p$21788$17Rald g$e$21789$17Rald g$r$21790$17Rald)
        (g$do-macro-call$19732$17Rald
          (g$macro-transformer$19730$17Rald g$p$21788$17Rald)
          g$e$21789$17Rald
          g$r$21790$17Rald))))
   (g$chi-local-macro$19734$17Rald
     g$chi-local-macro$23330$17Rald
     (case-lambda
       ((g$p$21791$17Rald g$e$21792$17Rald g$r$21793$17Rald)
        (g$do-macro-call$19732$17Rald
          (g$local-macro-transformer$19731$17Rald g$p$21791$17Rald)
          g$e$21792$17Rald
          g$r$21793$17Rald))))
   (g$chi-global-macro$19735$17Rald
     g$chi-global-macro$23331$17Rald
     (case-lambda
       ((g$p$21794$17Rald g$e$21795$17Rald g$r$21796$17Rald)
        ((case-lambda
           ((g$lib$21797$17Rald g$loc$21798$17Rald)
            (begin
              (g$visit-library$18929$17Rald g$lib$21797$17Rald)
              ((case-lambda
                 ((g$x$21799$17Rald)
                  ((case-lambda
                     ((g$transformer$21800$17Rald)
                      (g$do-macro-call$19732$17Rald
                        g$transformer$21800$17Rald
                        g$e$21795$17Rald
                        g$r$21796$17Rald)))
                   (if (g$procedure?$12612$17Rald g$x$21799$17Rald)
                     g$x$21799$17Rald
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$21799$17Rald)))))
               (symbol-value g$loc$21798$17Rald)))))
         (car g$p$21794$17Rald)
         (cdr g$p$21794$17Rald)))))
   (g$chi-expr*$19736$17Rald
     g$chi-expr*$23332$17Rald
     (case-lambda
       ((g$e*$21801$17Rald g$r$21802$17Rald g$mr$21803$17Rald)
        (if (null? g$e*$21801$17Rald)
          '()
          ((case-lambda
             ((g$e$21804$17Rald)
              (cons
                g$e$21804$17Rald
                (g$chi-expr*$19736$17Rald
                  (cdr g$e*$21801$17Rald)
                  g$r$21802$17Rald
                  g$mr$21803$17Rald))))
           (g$chi-expr$19738$17Rald
             (car g$e*$21801$17Rald)
             g$r$21802$17Rald
             g$mr$21803$17Rald))))))
   (g$chi-application$19737$17Rald
     g$chi-application$23333$17Rald
     (case-lambda
       ((g$e$21805$17Rald g$r$21806$17Rald g$mr$21807$17Rald)
        ((case-lambda
           ((g$t$21808$17Rald)
            ((case-lambda
               ((g$ls/false$21809$17Rald)
                (if g$ls/false$21809$17Rald
                  (apply
                    (case-lambda
                      ((g$rator$21810$17Rald g$rands$21811$17Rald)
                       ((case-lambda
                          ((g$rator$21812$17Rald)
                           (cons
                             g$rator$21812$17Rald
                             (g$chi-expr*$19736$17Rald
                               g$rands$21811$17Rald
                               g$r$21806$17Rald
                               g$mr$21807$17Rald))))
                        (g$chi-expr$19738$17Rald
                          g$rator$21810$17Rald
                          g$r$21806$17Rald
                          g$mr$21807$17Rald))))
                    g$ls/false$21809$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$21808$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21808$17Rald
               '(any . each-any)))))
         g$e$21805$17Rald))))
   (g$chi-expr$19738$17Rald
     g$chi-expr$23334$17Rald
     (case-lambda
       ((g$e$21813$17Rald g$r$21814$17Rald g$mr$21815$17Rald)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$19242$17Rald
               g$e$21813$17Rald
               g$r$21814$17Rald)))
          (case-lambda
            ((g$type$21819$17Rald
               g$value$21820$17Rald
               g$kwd$21821$17Rald)
             ((case-lambda
                ((g$kwd$21822$17Rald
                   g$value$21823$17Rald
                   g$type$21824$17Rald)
                 ((case-lambda
                    ((g$t$21825$17Rald)
                     (if (eqv? g$t$21825$17Rald 'core-macro)
                       ((case-lambda
                          ((g$transformer$21826$17Rald)
                           (g$transformer$21826$17Rald
                             g$e$21813$17Rald
                             g$r$21814$17Rald
                             g$mr$21815$17Rald)))
                        (g$core-macro-transformer$19727$17Rald
                          g$value$21823$17Rald))
                       (if (eqv? g$t$21825$17Rald 'global)
                         ((case-lambda
                            ((g$lib$21827$17Rald)
                             ((case-lambda
                                ((g$loc$21828$17Rald)
                                 (begin
                                   ((g$inv-collector$19775$17Rald)
                                    g$lib$21827$17Rald)
                                   g$loc$21828$17Rald)))
                              (cdr g$value$21823$17Rald))))
                          (car g$value$21823$17Rald))
                         (if (eqv? g$t$21825$17Rald 'core-prim)
                           ((case-lambda
                              ((g$name$21829$17Rald)
                               (list 'primitive g$name$21829$17Rald)))
                            g$value$21823$17Rald)
                           (if (eqv? g$t$21825$17Rald 'call)
                             (g$chi-application$19737$17Rald
                               g$e$21813$17Rald
                               g$r$21814$17Rald
                               g$mr$21815$17Rald)
                             (if (eqv? g$t$21825$17Rald 'lexical)
                               ((case-lambda
                                  ((g$lex$21830$17Rald)
                                   g$lex$21830$17Rald))
                                (g$lexical-var$19664$17Rald
                                  g$value$21823$17Rald))
                               (if (g$memv$11828$17Rald
                                     g$t$21825$17Rald
                                     '(global-macro global-macro!))
                                 (g$chi-expr$19738$17Rald
                                   (g$chi-global-macro$19735$17Rald
                                     g$value$21823$17Rald
                                     g$e$21813$17Rald
                                     g$r$21814$17Rald)
                                   g$r$21814$17Rald
                                   g$mr$21815$17Rald)
                                 (if (g$memv$11828$17Rald
                                       g$t$21825$17Rald
                                       '(local-macro local-macro!))
                                   (g$chi-expr$19738$17Rald
                                     (g$chi-local-macro$19734$17Rald
                                       g$value$21823$17Rald
                                       g$e$21813$17Rald
                                       g$r$21814$17Rald)
                                     g$r$21814$17Rald
                                     g$mr$21815$17Rald)
                                   (if (g$memv$11828$17Rald
                                         g$t$21825$17Rald
                                         '(macro macro!))
                                     (g$chi-expr$19738$17Rald
                                       (g$chi-macro$19733$17Rald
                                         g$value$21823$17Rald
                                         g$e$21813$17Rald
                                         g$r$21814$17Rald)
                                       g$r$21814$17Rald
                                       g$mr$21815$17Rald)
                                     (if (eqv?
                                           g$t$21825$17Rald
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$21831$17Rald)
                                           (list
                                             'quote
                                             g$datum$21831$17Rald)))
                                        g$value$21823$17Rald)
                                       (if (eqv? g$t$21825$17Rald 'set!)
                                         (g$chi-set!$19739$17Rald
                                           g$e$21813$17Rald
                                           g$r$21814$17Rald
                                           g$mr$21815$17Rald)
                                         (if (eqv?
                                               g$t$21825$17Rald
                                               'begin)
                                           ((case-lambda
                                              ((g$t$21832$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$21833$17Rald)
                                                   (if g$ls/false$21833$17Rald
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$21834$17Rald
                                                            g$x*$21835$17Rald)
                                                          (g$build-sequence$19147$17Rald
                                                            '#f
                                                            (g$chi-expr*$19736$17Rald
                                                              (cons
                                                                g$x$21834$17Rald
                                                                g$x*$21835$17Rald)
                                                              g$r$21814$17Rald
                                                              g$mr$21815$17Rald))))
                                                       g$ls/false$21833$17Rald)
                                                     (g$syntax-violation$19839$17Rald
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21832$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$21832$17Rald
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$21813$17Rald)
                                           (if (g$memv$11828$17Rald
                                                 g$t$21825$17Rald
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$21836$17Rald)
                                                 ((case-lambda
                                                    ((g$ls/false$21837$17Rald)
                                                     (if (if g$ls/false$21837$17Rald
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$21838$17Rald
                                                                    g$xrhs*$21839$17Rald
                                                                    g$xbody$21840$17Rald
                                                                    g$xbody*$21841$17Rald)
                                                                  (if (not (g$valid-bound-ids?$19227$17Rald
                                                                             g$xlhs*$21838$17Rald))
                                                                    (g$syntax-violation$19839$17Rald
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$21813$17Rald)
                                                                    (void))))
                                                               g$ls/false$21837$17Rald))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$21842$17Rald
                                                              g$xrhs*$21843$17Rald
                                                              g$xbody$21844$17Rald
                                                              g$xbody*$21845$17Rald)
                                                            ((case-lambda
                                                               ((g$xlab*$21846$17Rald)
                                                                ((case-lambda
                                                                   ((g$xrib$21847$17Rald)
                                                                    ((case-lambda
                                                                       ((g$xb*$21848$17Rald)
                                                                        (g$build-sequence$19147$17Rald
                                                                          '#f
                                                                          (g$chi-expr*$19736$17Rald
                                                                            (g$map$11835$17Rald
                                                                              (case-lambda
                                                                                ((g$x$21849$17Rald)
                                                                                 (g$add-subst$19212$17Rald
                                                                                   g$xrib$21847$17Rald
                                                                                   g$x$21849$17Rald)))
                                                                              (cons
                                                                                g$xbody$21844$17Rald
                                                                                g$xbody*$21845$17Rald))
                                                                            (append
                                                                              (g$map$11835$17Rald
                                                                                cons
                                                                                g$xlab*$21846$17Rald
                                                                                g$xb*$21848$17Rald)
                                                                              g$r$21814$17Rald)
                                                                            (append
                                                                              (g$map$11835$17Rald
                                                                                cons
                                                                                g$xlab*$21846$17Rald
                                                                                g$xb*$21848$17Rald)
                                                                              g$mr$21815$17Rald)))))
                                                                     (g$map$11835$17Rald
                                                                       (case-lambda
                                                                         ((g$x$21850$17Rald)
                                                                          (g$make-eval-transformer$19270$17Rald
                                                                            (g$expand-transformer$19768$17Rald
                                                                              (if (eq? g$type$21824$17Rald
                                                                                       'let-syntax)
                                                                                g$x$21850$17Rald
                                                                                (g$add-subst$19212$17Rald
                                                                                  g$xrib$21847$17Rald
                                                                                  g$x$21850$17Rald))
                                                                              g$mr$21815$17Rald))))
                                                                       g$xrhs*$21843$17Rald))))
                                                                 (g$make-full-rib$19188$17Rald
                                                                   g$xlhs*$21842$17Rald
                                                                   g$xlab*$21846$17Rald))))
                                                             (g$map$11835$17Rald
                                                               g$gen-label$19159$17Rald
                                                               g$xlhs*$21842$17Rald))))
                                                         g$ls/false$21837$17Rald)
                                                       (g$syntax-violation$19839$17Rald
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$21836$17Rald))))
                                                  (g$syntax-dispatch$19720$17Rald
                                                    g$t$21836$17Rald
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$21813$17Rald)
                                             (if (eqv?
                                                   g$t$21825$17Rald
                                                   'displaced-lexical)
                                               (g$syntax-violation$19839$17Rald
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$21813$17Rald)
                                               (if (eqv?
                                                     g$t$21825$17Rald
                                                     'syntax)
                                                 (g$syntax-violation$19839$17Rald
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$21813$17Rald)
                                                 (if (g$memv$11828$17Rald
                                                       g$t$21825$17Rald
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$19839$17Rald
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$21851$17Rald)
                                                           (if (eqv?
                                                                 g$t$21851$17Rald
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$21851$17Rald
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$21851$17Rald
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$21851$17Rald
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$21851$17Rald
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$21851$17Rald
                                                                           'export)
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$21824$17Rald)
                                                       '" was found where an expression was expected")
                                                     g$e$21813$17Rald)
                                                   (if (eqv?
                                                         g$t$21825$17Rald
                                                         'mutable)
                                                     (g$syntax-violation$19839$17Rald
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$21813$17Rald)
                                                     (g$syntax-violation$19839$17Rald
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$21813$17Rald)))))))))))))))))))
                  g$type$21824$17Rald)))
              g$kwd$21821$17Rald
              g$value$21820$17Rald
              g$type$21819$17Rald)))))))
   (g$chi-set!$19739$17Rald
     g$chi-set!$23335$17Rald
     (case-lambda
       ((g$e$21852$17Rald g$r$21853$17Rald g$mr$21854$17Rald)
        ((case-lambda
           ((g$t$21855$17Rald)
            ((case-lambda
               ((g$ls/false$21856$17Rald)
                (if (if g$ls/false$21856$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$21857$17Rald g$v$21858$17Rald)
                             (g$id?$19222$17Rald g$x$21857$17Rald)))
                          g$ls/false$21856$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$21859$17Rald g$v$21860$17Rald)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$19242$17Rald
                              g$x$21859$17Rald
                              g$r$21853$17Rald)))
                         (case-lambda
                           ((g$type$21864$17Rald
                              g$value$21865$17Rald
                              g$kwd$21866$17Rald)
                            ((case-lambda
                               ((g$kwd$21867$17Rald
                                  g$value$21868$17Rald
                                  g$type$21869$17Rald)
                                ((case-lambda
                                   ((g$t$21870$17Rald)
                                    (if (eqv? g$t$21870$17Rald 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$19666$17Rald
                                          g$value$21868$17Rald
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$19664$17Rald
                                            g$value$21868$17Rald)
                                          (g$chi-expr$19738$17Rald
                                            g$v$21860$17Rald
                                            g$r$21853$17Rald
                                            g$mr$21854$17Rald)))
                                      (if (eqv?
                                            g$t$21870$17Rald
                                            'core-prim)
                                        (g$syntax-violation$19839$17Rald
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$21852$17Rald)
                                        (if (eqv?
                                              g$t$21870$17Rald
                                              'global)
                                          (g$syntax-violation$19839$17Rald
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$21852$17Rald)
                                          (if (eqv?
                                                g$t$21870$17Rald
                                                'global-macro!)
                                            (g$chi-expr$19738$17Rald
                                              (g$chi-global-macro$19735$17Rald
                                                g$value$21868$17Rald
                                                g$e$21852$17Rald
                                                g$r$21853$17Rald)
                                              g$r$21853$17Rald
                                              g$mr$21854$17Rald)
                                            (if (eqv?
                                                  g$t$21870$17Rald
                                                  'local-macro!)
                                              (g$chi-expr$19738$17Rald
                                                (g$chi-local-macro$19734$17Rald
                                                  g$value$21868$17Rald
                                                  g$e$21852$17Rald
                                                  g$r$21853$17Rald)
                                                g$r$21853$17Rald
                                                g$mr$21854$17Rald)
                                              (if (eqv?
                                                    g$t$21870$17Rald
                                                    'mutable)
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$21852$17Rald)
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$21852$17Rald)))))))))
                                 g$type$21869$17Rald)))
                             g$kwd$21866$17Rald
                             g$value$21865$17Rald
                             g$type$21864$17Rald))))))
                    g$ls/false$21856$17Rald)
                  (g$syntax-violation$19839$17Rald
                    '#f
                    '"invalid syntax"
                    g$t$21855$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21855$17Rald
               '(_ any any)))))
         g$e$21852$17Rald))))
   (g$verify-formals$19740$17Rald
     g$verify-formals$23336$17Rald
     (case-lambda
       ((g$fmls$21871$17Rald g$stx$21872$17Rald)
        ((case-lambda
           ((g$t$21873$17Rald)
            ((case-lambda
               ((g$ls/false$21874$17Rald)
                (if g$ls/false$21874$17Rald
                  (apply
                    (case-lambda
                      ((g$x*$21875$17Rald)
                       (if (not (g$valid-bound-ids?$19227$17Rald
                                  g$x*$21875$17Rald))
                         (g$invalid-fmls-error$19685$17Rald
                           g$stx$21872$17Rald
                           g$fmls$21871$17Rald)
                         (void))))
                    g$ls/false$21874$17Rald)
                  ((case-lambda
                     ((g$t$21876$17Rald)
                      ((case-lambda
                         ((g$ls/false$21877$17Rald)
                          (if g$ls/false$21877$17Rald
                            (apply
                              (case-lambda
                                ((g$x*$21878$17Rald g$x$21879$17Rald)
                                 (if (not (g$valid-bound-ids?$19227$17Rald
                                            (cons
                                              g$x$21879$17Rald
                                              g$x*$21878$17Rald)))
                                   (g$invalid-fmls-error$19685$17Rald
                                     g$stx$21872$17Rald
                                     g$fmls$21871$17Rald)
                                   (void))))
                              g$ls/false$21877$17Rald)
                            ((case-lambda
                               ((g$t$21880$17Rald)
                                ((case-lambda
                                   ((g$ls/false$21881$17Rald)
                                    (if g$ls/false$21881$17Rald
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$stx$21872$17Rald)))
                                        g$ls/false$21881$17Rald)
                                      (g$syntax-violation$19839$17Rald
                                        '#f
                                        '"invalid syntax"
                                        g$t$21880$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$21880$17Rald
                                   '_))))
                             g$t$21876$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$21876$17Rald
                         '#(each+ any () any)))))
                   g$t$21873$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21873$17Rald
               'each-any))))
         g$fmls$21871$17Rald))))
   (g$chi-lambda-clause$19741$17Rald
     g$chi-lambda-clause$23337$17Rald
     (case-lambda
       ((g$stx$21882$17Rald
          g$fmls$21883$17Rald
          g$body*$21884$17Rald
          g$r$21885$17Rald
          g$mr$21886$17Rald)
        ((case-lambda
           ((g$t$21887$17Rald)
            ((case-lambda
               ((g$ls/false$21888$17Rald)
                (if g$ls/false$21888$17Rald
                  (apply
                    (case-lambda
                      ((g$x*$21889$17Rald)
                       (begin
                         (g$verify-formals$19740$17Rald
                           g$fmls$21883$17Rald
                           g$stx$21882$17Rald)
                         ((case-lambda
                            ((g$lex*$21890$17Rald g$lab*$21891$17Rald)
                             (values
                               g$lex*$21890$17Rald
                               (g$chi-internal$19749$17Rald
                                 (g$add-subst$19212$17Rald
                                   (g$make-full-rib$19188$17Rald
                                     g$x*$21889$17Rald
                                     g$lab*$21891$17Rald)
                                   g$body*$21884$17Rald)
                                 (g$add-lexicals$19668$17Rald
                                   g$lab*$21891$17Rald
                                   g$lex*$21890$17Rald
                                   g$r$21885$17Rald)
                                 g$mr$21886$17Rald))))
                          (g$map$11835$17Rald
                            g$gen-lexical$19157$17Rald
                            g$x*$21889$17Rald)
                          (g$map$11835$17Rald
                            g$gen-label$19159$17Rald
                            g$x*$21889$17Rald)))))
                    g$ls/false$21888$17Rald)
                  ((case-lambda
                     ((g$t$21892$17Rald)
                      ((case-lambda
                         ((g$ls/false$21893$17Rald)
                          (if g$ls/false$21893$17Rald
                            (apply
                              (case-lambda
                                ((g$x*$21894$17Rald g$x$21895$17Rald)
                                 (begin
                                   (g$verify-formals$19740$17Rald
                                     g$fmls$21883$17Rald
                                     g$stx$21882$17Rald)
                                   ((case-lambda
                                      ((g$lex*$21896$17Rald
                                         g$lab*$21897$17Rald
                                         g$lex$21898$17Rald
                                         g$lab$21899$17Rald)
                                       (values
                                         (append
                                           g$lex*$21896$17Rald
                                           g$lex$21898$17Rald)
                                         (g$chi-internal$19749$17Rald
                                           (g$add-subst$19212$17Rald
                                             (g$make-full-rib$19188$17Rald
                                               (cons
                                                 g$x$21895$17Rald
                                                 g$x*$21894$17Rald)
                                               (cons
                                                 g$lab$21899$17Rald
                                                 g$lab*$21897$17Rald))
                                             g$body*$21884$17Rald)
                                           (g$add-lexicals$19668$17Rald
                                             (cons
                                               g$lab$21899$17Rald
                                               g$lab*$21897$17Rald)
                                             (cons
                                               g$lex$21898$17Rald
                                               g$lex*$21896$17Rald)
                                             g$r$21885$17Rald)
                                           g$mr$21886$17Rald))))
                                    (g$map$11835$17Rald
                                      g$gen-lexical$19157$17Rald
                                      g$x*$21894$17Rald)
                                    (g$map$11835$17Rald
                                      g$gen-label$19159$17Rald
                                      g$x*$21894$17Rald)
                                    (g$gen-lexical$19157$17Rald
                                      g$x$21895$17Rald)
                                    (g$gen-label$19159$17Rald
                                      g$x$21895$17Rald)))))
                              g$ls/false$21893$17Rald)
                            ((case-lambda
                               ((g$t$21900$17Rald)
                                ((case-lambda
                                   ((g$ls/false$21901$17Rald)
                                    (if g$ls/false$21901$17Rald
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$19839$17Rald
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$21883$17Rald)))
                                        g$ls/false$21901$17Rald)
                                      (g$syntax-violation$19839$17Rald
                                        '#f
                                        '"invalid syntax"
                                        g$t$21900$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$21900$17Rald
                                   '_))))
                             g$t$21892$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$21892$17Rald
                         '#(each+ any () any)))))
                   g$t$21887$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21887$17Rald
               'each-any))))
         g$fmls$21883$17Rald))))
   (g$chi-lambda-clause*$19742$17Rald
     g$chi-lambda-clause*$23338$17Rald
     (case-lambda
       ((g$stx$21902$17Rald
          g$fmls*$21903$17Rald
          g$body**$21904$17Rald
          g$r$21905$17Rald
          g$mr$21906$17Rald)
        (if (null? g$fmls*$21903$17Rald)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$19741$17Rald
                 g$stx$21902$17Rald
                 (car g$fmls*$21903$17Rald)
                 (car g$body**$21904$17Rald)
                 g$r$21905$17Rald
                 g$mr$21906$17Rald)))
            (case-lambda
              ((g$a$21909$17Rald g$b$21910$17Rald)
               ((case-lambda
                  ((g$b$21911$17Rald g$a$21912$17Rald)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$19742$17Rald
                          g$stx$21902$17Rald
                          (cdr g$fmls*$21903$17Rald)
                          (cdr g$body**$21904$17Rald)
                          g$r$21905$17Rald
                          g$mr$21906$17Rald)))
                     (case-lambda
                       ((g$a*$21915$17Rald g$b*$21916$17Rald)
                        ((case-lambda
                           ((g$b*$21917$17Rald g$a*$21918$17Rald)
                            (values
                              (cons g$a$21912$17Rald g$a*$21918$17Rald)
                              (cons
                                g$b$21911$17Rald
                                g$b*$21917$17Rald))))
                         g$b*$21916$17Rald
                         g$a*$21915$17Rald))))))
                g$b$21910$17Rald
                g$a$21909$17Rald))))))))
   (g$chi-defun$19743$17Rald
     g$chi-defun$23339$17Rald
     (case-lambda
       ((g$x$21919$17Rald g$r$21920$17Rald g$mr$21921$17Rald)
        ((case-lambda
           ((g$fmls$21922$17Rald g$body*$21923$17Rald)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$19741$17Rald
                   g$fmls$21922$17Rald
                   g$fmls$21922$17Rald
                   g$body*$21923$17Rald
                   g$r$21920$17Rald
                   g$mr$21921$17Rald)))
              (case-lambda
                ((g$fmls$21926$17Rald g$body$21927$17Rald)
                 ((case-lambda
                    ((g$body$21928$17Rald g$fmls$21929$17Rald)
                     (g$build-lambda$19144$17Rald
                       '#f
                       g$fmls$21929$17Rald
                       g$body$21928$17Rald)))
                  g$body$21927$17Rald
                  g$fmls$21926$17Rald))))))
         (car g$x$21919$17Rald)
         (cdr g$x$21919$17Rald)))))
   (g$chi-rhs$19744$17Rald
     g$chi-rhs$23340$17Rald
     (case-lambda
       ((g$rhs$21930$17Rald g$r$21931$17Rald g$mr$21932$17Rald)
        ((case-lambda
           ((g$t$21933$17Rald)
            (if (eqv? g$t$21933$17Rald 'defun)
              (g$chi-defun$19743$17Rald
                (cdr g$rhs$21930$17Rald)
                g$r$21931$17Rald
                g$mr$21932$17Rald)
              (if (eqv? g$t$21933$17Rald 'expr)
                ((case-lambda
                   ((g$expr$21934$17Rald)
                    (g$chi-expr$19738$17Rald
                      g$expr$21934$17Rald
                      g$r$21931$17Rald
                      g$mr$21932$17Rald)))
                 (cdr g$rhs$21930$17Rald))
                (if (eqv? g$t$21933$17Rald 'top-expr)
                  ((case-lambda
                     ((g$expr$21935$17Rald)
                      (g$build-sequence$19147$17Rald
                        '#f
                        (list
                          (g$chi-expr$19738$17Rald
                            g$expr$21935$17Rald
                            g$r$21931$17Rald
                            g$mr$21932$17Rald)
                          (g$build-void$19148$17Rald)))))
                   (cdr g$rhs$21930$17Rald))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$21930$17Rald))))))
         (car g$rhs$21930$17Rald)))))
   (g$expand-interaction-rhs*/init*$19745$17Rald
     g$expand-interaction-rhs*/init*$23341$17Rald
     (case-lambda
       ((g$lhs*$21936$17Rald
          g$rhs*$21937$17Rald
          g$init*$21938$17Rald
          g$r$21939$17Rald
          g$mr$21940$17Rald)
        ((letrec ((g$f$21941$17Rald
                    (case-lambda
                      ((g$lhs*$21942$17Rald g$rhs*$21943$17Rald)
                       (if (null? g$lhs*$21942$17Rald)
                         (g$map$11835$17Rald
                           (case-lambda
                             ((g$x$21944$17Rald)
                              (g$chi-expr$19738$17Rald
                                g$x$21944$17Rald
                                g$r$21939$17Rald
                                g$mr$21940$17Rald)))
                           g$init*$21938$17Rald)
                         ((case-lambda
                            ((g$lhs$21945$17Rald g$rhs$21946$17Rald)
                             ((case-lambda
                                ((g$t$21947$17Rald)
                                 (if (eqv? g$t$21947$17Rald 'defun)
                                   ((case-lambda
                                      ((g$rhs$21948$17Rald)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$21945$17Rald
                                           g$rhs$21948$17Rald)
                                         (g$f$21941$17Rald
                                           (cdr g$lhs*$21942$17Rald)
                                           (cdr g$rhs*$21943$17Rald)))))
                                    (g$chi-defun$19743$17Rald
                                      (cdr g$rhs$21946$17Rald)
                                      g$r$21939$17Rald
                                      g$mr$21940$17Rald))
                                   (if (eqv? g$t$21947$17Rald 'expr)
                                     ((case-lambda
                                        ((g$rhs$21949$17Rald)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$21945$17Rald
                                             g$rhs$21949$17Rald)
                                           (g$f$21941$17Rald
                                             (cdr g$lhs*$21942$17Rald)
                                             (cdr g$rhs*$21943$17Rald)))))
                                      (g$chi-expr$19738$17Rald
                                        (cdr g$rhs$21946$17Rald)
                                        g$r$21939$17Rald
                                        g$mr$21940$17Rald))
                                     (if (eqv?
                                           g$t$21947$17Rald
                                           'top-expr)
                                       ((case-lambda
                                          ((g$e$21950$17Rald)
                                           (cons
                                             g$e$21950$17Rald
                                             (g$f$21941$17Rald
                                               (cdr g$lhs*$21942$17Rald)
                                               (cdr g$rhs*$21943$17Rald)))))
                                        (g$chi-expr$19738$17Rald
                                          (cdr g$rhs$21946$17Rald)
                                          g$r$21939$17Rald
                                          g$mr$21940$17Rald))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$21946$17Rald))))))
                              (car g$rhs$21946$17Rald))))
                          (car g$lhs*$21942$17Rald)
                          (car g$rhs*$21943$17Rald)))))))
           g$f$21941$17Rald)
         g$lhs*$21936$17Rald
         g$rhs*$21937$17Rald))))
   (g$chi-rhs*$19746$17Rald
     g$chi-rhs*$23342$17Rald
     (case-lambda
       ((g$rhs*$21951$17Rald g$r$21952$17Rald g$mr$21953$17Rald)
        ((letrec ((g$f$21954$17Rald
                    (case-lambda
                      ((g$ls$21955$17Rald)
                       (if (null? g$ls$21955$17Rald)
                         '()
                         ((case-lambda
                            ((g$a$21956$17Rald)
                             (cons
                               g$a$21956$17Rald
                               (g$f$21954$17Rald
                                 (cdr g$ls$21955$17Rald)))))
                          (g$chi-rhs$19744$17Rald
                            (car g$ls$21955$17Rald)
                            g$r$21952$17Rald
                            g$mr$21953$17Rald)))))))
           g$f$21954$17Rald)
         g$rhs*$21951$17Rald))))
   (g$find-bound=?$19747$17Rald
     g$find-bound=?$23343$17Rald
     (case-lambda
       ((g$x$21957$17Rald g$lhs*$21958$17Rald g$rhs*$21959$17Rald)
        (if (null? g$lhs*$21958$17Rald)
          '#f
          (if (g$bound-id=?$19225$17Rald
                g$x$21957$17Rald
                (car g$lhs*$21958$17Rald))
            (car g$rhs*$21959$17Rald)
            (g$find-bound=?$19747$17Rald
              g$x$21957$17Rald
              (cdr g$lhs*$21958$17Rald)
              (cdr g$rhs*$21959$17Rald)))))))
   (g$find-dups$19748$17Rald
     g$find-dups$23344$17Rald
     (case-lambda
       ((g$ls$21960$17Rald)
        ((letrec ((g$f$21961$17Rald
                    (case-lambda
                      ((g$ls$21962$17Rald g$dups$21963$17Rald)
                       (if (null? g$ls$21962$17Rald)
                         g$dups$21963$17Rald
                         ((case-lambda
                            ((g$t$21964$17Rald)
                             (if g$t$21964$17Rald
                               ((case-lambda
                                  ((g$x$21965$17Rald)
                                   (g$f$21961$17Rald
                                     (cdr g$ls$21962$17Rald)
                                     (cons
                                       (list
                                         (car g$ls$21962$17Rald)
                                         g$x$21965$17Rald)
                                       g$dups$21963$17Rald))))
                                g$t$21964$17Rald)
                               (g$f$21961$17Rald
                                 (cdr g$ls$21962$17Rald)
                                 g$dups$21963$17Rald))))
                          (g$find-bound=?$19747$17Rald
                            (car g$ls$21962$17Rald)
                            (cdr g$ls$21962$17Rald)
                            (cdr g$ls$21962$17Rald))))))))
           g$f$21961$17Rald)
         g$ls$21960$17Rald
         '()))))
   (g$chi-internal$19749$17Rald
     g$chi-internal$23345$17Rald
     (case-lambda
       ((g$e*$21966$17Rald g$r$21967$17Rald g$mr$21968$17Rald)
        ((case-lambda
           ((g$rib$21969$17Rald)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$19767$17Rald
                   (g$map$11835$17Rald
                     (case-lambda
                       ((g$x$21978$17Rald)
                        (g$add-subst$19212$17Rald
                          g$rib$21969$17Rald
                          g$x$21978$17Rald)))
                     (g$syntax->list$19221$17Rald g$e*$21966$17Rald))
                   g$r$21967$17Rald
                   g$mr$21968$17Rald
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$21969$17Rald
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$21979$17Rald
                   g$r$21980$17Rald
                   g$mr$21981$17Rald
                   g$lex*$21982$17Rald
                   g$rhs*$21983$17Rald
                   g$mod**$21984$17Rald
                   g$kwd*$21985$17Rald
                   g$_exp*$21986$17Rald)
                 ((case-lambda
                    ((g$_exp*$21987$17Rald
                       g$kwd*$21988$17Rald
                       g$mod**$21989$17Rald
                       g$rhs*$21990$17Rald
                       g$lex*$21991$17Rald
                       g$mr$21992$17Rald
                       g$r$21993$17Rald
                       g$e*$21994$17Rald)
                     (begin
                       (if (null? g$e*$21994$17Rald)
                         (g$syntax-violation$19839$17Rald
                           '#f
                           '"no expression in body"
                           g$e*$21994$17Rald)
                         (void))
                       ((case-lambda
                          ((g$init*$21995$17Rald)
                           ((case-lambda
                              ((g$rhs*$21996$17Rald)
                               (g$build-letrec*$19150$17Rald
                                 '#f
                                 (g$reverse$12626$17Rald
                                   g$lex*$21991$17Rald)
                                 (g$reverse$12626$17Rald
                                   g$rhs*$21996$17Rald)
                                 (g$build-sequence$19147$17Rald
                                   '#f
                                   g$init*$21995$17Rald))))
                            (g$chi-rhs*$19746$17Rald
                              g$rhs*$21990$17Rald
                              g$r$21993$17Rald
                              g$mr$21992$17Rald))))
                        (g$chi-expr*$19736$17Rald
                          (append
                            (apply
                              append
                              (g$reverse$12626$17Rald
                                g$mod**$21989$17Rald))
                            g$e*$21994$17Rald)
                          g$r$21993$17Rald
                          g$mr$21992$17Rald)))))
                  g$_exp*$21986$17Rald
                  g$kwd*$21985$17Rald
                  g$mod**$21984$17Rald
                  g$rhs*$21983$17Rald
                  g$lex*$21982$17Rald
                  g$mr$21981$17Rald
                  g$r$21980$17Rald
                  g$e*$21979$17Rald))))))
         (g$make-empty-rib$19180$17Rald)))))
   (g$parse-module$19750$17Rald
     g$parse-module$23346$17Rald
     (case-lambda
       ((g$e$21997$17Rald)
        ((case-lambda
           ((g$t$21998$17Rald)
            ((case-lambda
               ((g$ls/false$21999$17Rald)
                (if g$ls/false$21999$17Rald
                  (apply
                    (case-lambda
                      ((g$export*$22000$17Rald g$b*$22001$17Rald)
                       (begin
                         (if (not (g$for-all$11833$17Rald
                                    g$id?$19222$17Rald
                                    g$export*$22000$17Rald))
                           (g$syntax-violation$19839$17Rald
                             '#f
                             '"module exports must be identifiers"
                             g$e$21997$17Rald)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12620$17Rald
                             g$export*$22000$17Rald)
                           g$b*$22001$17Rald))))
                    g$ls/false$21999$17Rald)
                  ((case-lambda
                     ((g$t$22002$17Rald)
                      ((case-lambda
                         ((g$ls/false$22003$17Rald)
                          (if g$ls/false$22003$17Rald
                            (apply
                              (case-lambda
                                ((g$name$22004$17Rald
                                   g$export*$22005$17Rald
                                   g$b*$22006$17Rald)
                                 (begin
                                   (if (not (g$id?$19222$17Rald
                                              g$name$22004$17Rald))
                                     (g$syntax-violation$19839$17Rald
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$21997$17Rald)
                                     (void))
                                   (if (not (g$for-all$11833$17Rald
                                              g$id?$19222$17Rald
                                              g$export*$22005$17Rald))
                                     (g$syntax-violation$19839$17Rald
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$21997$17Rald)
                                     (void))
                                   (values
                                     g$name$22004$17Rald
                                     (g$list->vector$12620$17Rald
                                       g$export*$22005$17Rald)
                                     g$b*$22006$17Rald))))
                              g$ls/false$22003$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$22002$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$22002$17Rald
                         '(_ any each-any . each-any)))))
                   g$t$21998$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$21998$17Rald
               '(_ each-any . each-any)))))
         g$e$21997$17Rald))))
   (g$9531$19751$17Rald
     g$9531$23347$17Rald
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9534$17Rald
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$9533$19752$17Rald g$9533$23348$17Rald '#f)
   (g$9532$19753$17Rald
     g$9532$23349$17Rald
     (make-record-constructor-descriptor
       g$9531$19751$17Rald
       '#f
       g$9533$19752$17Rald))
   (g$module-interface?$19756$17Rald
     g$module-interface?$23350$17Rald
     (record-predicate g$9531$19751$17Rald))
   (g$make-module-interface$19757$17Rald
     g$make-module-interface$23351$17Rald
     (record-constructor g$9532$19753$17Rald))
   (g$module-interface-first-mark$19758$17Rald
     g$module-interface-first-mark$23352$17Rald
     (record-accessor g$9531$19751$17Rald '0))
   (g$module-interface-exp-id-vec$19759$17Rald
     g$module-interface-exp-id-vec$23353$17Rald
     (record-accessor g$9531$19751$17Rald '1))
   (g$module-interface-exp-lab-vec$19760$17Rald
     g$module-interface-exp-lab-vec$23354$17Rald
     (record-accessor g$9531$19751$17Rald '2))
   (g$set-module-interface-first-mark!$19761$17Rald
     g$set-module-interface-first-mark!$23355$17Rald
     (record-mutator g$9531$19751$17Rald '0))
   (g$set-module-interface-exp-id-vec!$19762$17Rald
     g$set-module-interface-exp-id-vec!$23356$17Rald
     (record-mutator g$9531$19751$17Rald '1))
   (g$set-module-interface-exp-lab-vec!$19763$17Rald
     g$set-module-interface-exp-lab-vec!$23357$17Rald
     (record-mutator g$9531$19751$17Rald '2))
   (g$module-interface-exp-id*$19764$17Rald
     g$module-interface-exp-id*$23358$17Rald
     (case-lambda
       ((g$iface$22007$17Rald g$id$22008$17Rald)
        (letrec* ((g$diff-marks$22009$17Rald
                    (case-lambda
                      ((g$ls$22013$17Rald g$x$22014$17Rald)
                       (begin
                         (if (null? g$ls$22013$17Rald)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$22015$17Rald)
                             (if (eq? g$a$22015$17Rald g$x$22014$17Rald)
                               '()
                               (cons
                                 g$a$22015$17Rald
                                 (g$diff-marks$22009$17Rald
                                   (cdr g$ls$22013$17Rald)
                                   g$x$22014$17Rald)))))
                          (car g$ls$22013$17Rald)))))))
          ((case-lambda
             ((g$diff$22010$17Rald g$id-vec$22011$17Rald)
              (if (null? g$diff$22010$17Rald)
                g$id-vec$22011$17Rald
                (g$vector-map$12679$17Rald
                  (case-lambda
                    ((g$x$22012$17Rald)
                     (g$make-stx$19195$17Rald
                       (g$stx-expr$19196$17Rald g$x$22012$17Rald)
                       (append
                         g$diff$22010$17Rald
                         (g$stx-mark*$19197$17Rald g$x$22012$17Rald))
                       '()
                       '())))
                  g$id-vec$22011$17Rald))))
           (g$diff-marks$22009$17Rald
             (g$stx-mark*$19197$17Rald g$id$22008$17Rald)
             (g$module-interface-first-mark$19758$17Rald
               g$iface$22007$17Rald))
           (g$module-interface-exp-id-vec$19759$17Rald
             g$iface$22007$17Rald))))))
   (g$syntax-transpose$19765$17Rald
     g$syntax-transpose$23359$17Rald
     (case-lambda
       ((g$object$22016$17Rald
          g$base-id$22017$17Rald
          g$new-id$22018$17Rald)
        (letrec* ((g$who$22019$17Rald 'syntax-transpose)
                  (g$err$22020$17Rald
                    (case-lambda
                      ((g$msg$22062$17Rald . g$args$22063$17Rald)
                       (apply
                         assertion-violation
                         g$who$22019$17Rald
                         g$msg$22062$17Rald
                         g$args$22063$17Rald))))
                  (g$split$22021$17Rald
                    (case-lambda
                      ((g$s*$22055$17Rald)
                       (if (eq? (car g$s*$22055$17Rald) 'shift)
                         (values (list 'shift) (cdr g$s*$22055$17Rald))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$22021$17Rald
                                (cdr g$s*$22055$17Rald))))
                           (case-lambda
                             ((g$s1*$22058$17Rald g$s2*$22059$17Rald)
                              ((case-lambda
                                 ((g$s2*$22060$17Rald
                                    g$s1*$22061$17Rald)
                                  (values
                                    (cons
                                      (car g$s*$22055$17Rald)
                                      g$s1*$22061$17Rald)
                                    g$s2*$22060$17Rald)))
                               g$s2*$22059$17Rald
                               g$s1*$22058$17Rald))))))))
                  (g$final$22022$17Rald
                    (case-lambda
                      ((g$s*$22053$17Rald)
                       (if ((case-lambda
                              ((g$t$22054$17Rald)
                               (if g$t$22054$17Rald
                                 g$t$22054$17Rald
                                 (begin
                                   '#f
                                   (eq? (car g$s*$22053$17Rald)
                                        'shift)))))
                            (null? g$s*$22053$17Rald))
                         '()
                         (cons
                           (car g$s*$22053$17Rald)
                           (g$final$22022$17Rald
                             (cdr g$s*$22053$17Rald)))))))
                  (g$diff$22023$17Rald
                    (case-lambda
                      ((g$m$22033$17Rald
                         g$m*$22034$17Rald
                         g$s*$22035$17Rald
                         g$ae*$22036$17Rald)
                       (if (null? g$m*$22034$17Rald)
                         (g$err$22020$17Rald
                           '"unmatched identifiers"
                           g$base-id$22017$17Rald
                           g$new-id$22018$17Rald)
                         ((case-lambda
                            ((g$m1$22037$17Rald)
                             (if (eq? g$m$22033$17Rald
                                      g$m1$22037$17Rald)
                               (values
                                 '()
                                 (g$final$22022$17Rald
                                   g$s*$22035$17Rald)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$22021$17Rald
                                      g$s*$22035$17Rald)))
                                 (case-lambda
                                   ((g$s1*$22040$17Rald
                                      g$s2*$22041$17Rald)
                                    ((case-lambda
                                       ((g$s2*$22042$17Rald
                                          g$s1*$22043$17Rald)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$22023$17Rald
                                               g$m$22033$17Rald
                                               (cdr g$m*$22034$17Rald)
                                               g$s2*$22042$17Rald
                                               (cdr g$ae*$22036$17Rald))))
                                          (case-lambda
                                            ((g$nm*$22047$17Rald
                                               g$ns*$22048$17Rald
                                               g$nae*$22049$17Rald)
                                             ((case-lambda
                                                ((g$nae*$22050$17Rald
                                                   g$ns*$22051$17Rald
                                                   g$nm*$22052$17Rald)
                                                 (values
                                                   (cons
                                                     g$m1$22037$17Rald
                                                     g$nm*$22052$17Rald)
                                                   (append
                                                     g$s1*$22043$17Rald
                                                     g$ns*$22051$17Rald)
                                                   (cons
                                                     (car g$ae*$22036$17Rald)
                                                     g$nae*$22050$17Rald))))
                                              g$nae*$22049$17Rald
                                              g$ns*$22048$17Rald
                                              g$nm*$22047$17Rald))))))
                                     g$s2*$22041$17Rald
                                     g$s1*$22040$17Rald)))))))
                          (car g$m*$22034$17Rald)))))))
          (begin
            (if (not (g$id?$19222$17Rald g$base-id$22017$17Rald))
              (g$err$22020$17Rald
                '"not an identifier"
                g$base-id$22017$17Rald)
              (void))
            (if (not (g$id?$19222$17Rald g$new-id$22018$17Rald))
              (g$err$22020$17Rald
                '"not an identifier"
                g$new-id$22018$17Rald)
              (void))
            (if (not (g$free-identifier=?$19830$17Rald
                       g$base-id$22017$17Rald
                       g$new-id$22018$17Rald))
              (g$err$22020$17Rald
                '"not the same identifier"
                g$base-id$22017$17Rald
                g$new-id$22018$17Rald)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$22023$17Rald
                   (car (g$stx-mark*$19197$17Rald
                          g$base-id$22017$17Rald))
                   (g$stx-mark*$19197$17Rald g$new-id$22018$17Rald)
                   (g$stx-subst*$19198$17Rald g$new-id$22018$17Rald)
                   (g$stx-ae*$19199$17Rald g$new-id$22018$17Rald))))
              (case-lambda
                ((g$m*$22027$17Rald
                   g$s*$22028$17Rald
                   g$ae*$22029$17Rald)
                 ((case-lambda
                    ((g$ae*$22030$17Rald
                       g$s*$22031$17Rald
                       g$m*$22032$17Rald)
                     (if (if (null? g$m*$22032$17Rald)
                           (begin '#f (null? g$s*$22031$17Rald))
                           '#f)
                       g$object$22016$17Rald
                       (g$mkstx$19210$17Rald
                         g$object$22016$17Rald
                         g$m*$22032$17Rald
                         g$s*$22031$17Rald
                         g$ae*$22030$17Rald))))
                  g$ae*$22029$17Rald
                  g$s*$22028$17Rald
                  g$m*$22027$17Rald)))))))))
   (g$chi-internal-module$19766$17Rald
     g$chi-internal-module$23360$17Rald
     (case-lambda
       ((g$e$22064$17Rald
          g$r$22065$17Rald
          g$mr$22066$17Rald
          g$lex*$22067$17Rald
          g$rhs*$22068$17Rald
          g$mod**$22069$17Rald
          g$kwd*$22070$17Rald)
        (call-with-values
          (case-lambda
            (() (g$parse-module$19750$17Rald g$e$22064$17Rald)))
          (case-lambda
            ((g$name$22074$17Rald
               g$exp-id*$22075$17Rald
               g$e*$22076$17Rald)
             ((case-lambda
                ((g$e*$22077$17Rald
                   g$exp-id*$22078$17Rald
                   g$name$22079$17Rald)
                 ((case-lambda
                    ((g$rib$22080$17Rald)
                     ((case-lambda
                        ((g$e*$22081$17Rald)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$19767$17Rald
                                g$e*$22081$17Rald
                                g$r$22065$17Rald
                                g$mr$22066$17Rald
                                g$lex*$22067$17Rald
                                g$rhs*$22068$17Rald
                                g$mod**$22069$17Rald
                                g$kwd*$22070$17Rald
                                '()
                                g$rib$22080$17Rald
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$22090$17Rald
                                g$r$22091$17Rald
                                g$mr$22092$17Rald
                                g$lex*$22093$17Rald
                                g$rhs*$22094$17Rald
                                g$mod**$22095$17Rald
                                g$kwd*$22096$17Rald
                                g$_exp*$22097$17Rald)
                              ((case-lambda
                                 ((g$_exp*$22098$17Rald
                                    g$kwd*$22099$17Rald
                                    g$mod**$22100$17Rald
                                    g$rhs*$22101$17Rald
                                    g$lex*$22102$17Rald
                                    g$mr$22103$17Rald
                                    g$r$22104$17Rald
                                    g$e*$22105$17Rald)
                                  ((case-lambda
                                     ((g$exp-lab*$22106$17Rald
                                        g$mod**$22107$17Rald)
                                      (if (not g$name$22079$17Rald)
                                        (values
                                          g$lex*$22102$17Rald
                                          g$rhs*$22101$17Rald
                                          g$exp-id*$22078$17Rald
                                          g$exp-lab*$22106$17Rald
                                          g$r$22104$17Rald
                                          g$mr$22103$17Rald
                                          g$mod**$22107$17Rald
                                          g$kwd*$22099$17Rald)
                                        ((case-lambda
                                           ((g$lab$22108$17Rald
                                              g$iface$22109$17Rald)
                                            (values
                                              g$lex*$22102$17Rald
                                              g$rhs*$22101$17Rald
                                              (vector
                                                g$name$22079$17Rald)
                                              (vector
                                                g$lab$22108$17Rald)
                                              (cons
                                                (cons
                                                  g$lab$22108$17Rald
                                                  (cons
                                                    '$module
                                                    g$iface$22109$17Rald))
                                                g$r$22104$17Rald)
                                              (cons
                                                (cons
                                                  g$lab$22108$17Rald
                                                  (cons
                                                    '$module
                                                    g$iface$22109$17Rald))
                                                g$mr$22103$17Rald)
                                              g$mod**$22107$17Rald
                                              g$kwd*$22099$17Rald)))
                                         (g$gen-label$19159$17Rald
                                           'module)
                                         (g$make-module-interface$19757$17Rald
                                           (car (g$stx-mark*$19197$17Rald
                                                  g$name$22079$17Rald))
                                           (g$vector-map$12679$17Rald
                                             (case-lambda
                                               ((g$x$22110$17Rald)
                                                (g$make-stx$19195$17Rald
                                                  (g$stx-expr$19196$17Rald
                                                    g$x$22110$17Rald)
                                                  (g$stx-mark*$19197$17Rald
                                                    g$x$22110$17Rald)
                                                  '()
                                                  '())))
                                             g$exp-id*$22078$17Rald)
                                           g$exp-lab*$22106$17Rald)))))
                                   (g$vector-map$12679$17Rald
                                     (case-lambda
                                       ((g$x$22111$17Rald)
                                        ((case-lambda
                                           ((g$t$22112$17Rald)
                                            (if g$t$22112$17Rald
                                              g$t$22112$17Rald
                                              (begin
                                                '#f
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$22111$17Rald)))))
                                         (g$id->label$19235$17Rald
                                           (g$make-stx$19195$17Rald
                                             (g$id->sym$19223$17Rald
                                               g$x$22111$17Rald)
                                             (g$stx-mark*$19197$17Rald
                                               g$x$22111$17Rald)
                                             (list g$rib$22080$17Rald)
                                             '())))))
                                     g$exp-id*$22078$17Rald)
                                   (cons
                                     g$e*$22105$17Rald
                                     g$mod**$22100$17Rald))))
                               g$_exp*$22097$17Rald
                               g$kwd*$22096$17Rald
                               g$mod**$22095$17Rald
                               g$rhs*$22094$17Rald
                               g$lex*$22093$17Rald
                               g$mr$22092$17Rald
                               g$r$22091$17Rald
                               g$e*$22090$17Rald))))))
                      (g$map$11835$17Rald
                        (case-lambda
                          ((g$x$22113$17Rald)
                           (g$add-subst$19212$17Rald
                             g$rib$22080$17Rald
                             g$x$22113$17Rald)))
                        (g$syntax->list$19221$17Rald
                          g$e*$22077$17Rald)))))
                  (g$make-empty-rib$19180$17Rald))))
              g$e*$22076$17Rald
              g$exp-id*$22075$17Rald
              g$name$22074$17Rald)))))))
   (g$chi-body*$19767$17Rald
     g$chi-body*$23361$17Rald
     (case-lambda
       ((g$e*$22114$17Rald
          g$r$22115$17Rald
          g$mr$22116$17Rald
          g$lex*$22117$17Rald
          g$rhs*$22118$17Rald
          g$mod**$22119$17Rald
          g$kwd*$22120$17Rald
          g$exp*$22121$17Rald
          g$rib$22122$17Rald
          g$mix?$22123$17Rald
          g$sd?$22124$17Rald)
        (if (null? g$e*$22114$17Rald)
          (values
            g$e*$22114$17Rald
            g$r$22115$17Rald
            g$mr$22116$17Rald
            g$lex*$22117$17Rald
            g$rhs*$22118$17Rald
            g$mod**$22119$17Rald
            g$kwd*$22120$17Rald
            g$exp*$22121$17Rald)
          ((case-lambda
             ((g$e$22125$17Rald)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$19242$17Rald
                     g$e$22125$17Rald
                     g$r$22115$17Rald)))
                (case-lambda
                  ((g$type$22129$17Rald
                     g$value$22130$17Rald
                     g$kwd$22131$17Rald)
                   ((case-lambda
                      ((g$kwd$22132$17Rald
                         g$value$22133$17Rald
                         g$type$22134$17Rald)
                       ((case-lambda
                          ((g$kwd*$22135$17Rald)
                           ((case-lambda
                              ((g$t$22136$17Rald)
                               (if (eqv? g$t$22136$17Rald 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$19660$17Rald
                                        g$e$22125$17Rald)))
                                   (case-lambda
                                     ((g$id$22139$17Rald
                                        g$rhs$22140$17Rald)
                                      ((case-lambda
                                         ((g$rhs$22141$17Rald
                                            g$id$22142$17Rald)
                                          (begin
                                            (if (g$bound-id-member?$19229$17Rald
                                                  g$id$22142$17Rald
                                                  g$kwd*$22135$17Rald)
                                              (g$syntax-violation$19839$17Rald
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$22125$17Rald)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$19161$17Rald
                                                   g$id$22142$17Rald
                                                   g$rib$22122$17Rald
                                                   g$sd?$22124$17Rald)))
                                              (case-lambda
                                                ((g$lab$22145$17Rald
                                                   g$lex$22146$17Rald)
                                                 ((case-lambda
                                                    ((g$lex$22147$17Rald
                                                       g$lab$22148$17Rald)
                                                     (begin
                                                       (g$extend-rib!$19183$17Rald
                                                         g$rib$22122$17Rald
                                                         g$id$22142$17Rald
                                                         g$lab$22148$17Rald
                                                         g$sd?$22124$17Rald)
                                                       (g$chi-body*$19767$17Rald
                                                         (cdr g$e*$22114$17Rald)
                                                         (g$add-lexical$19667$17Rald
                                                           g$lab$22148$17Rald
                                                           g$lex$22147$17Rald
                                                           g$r$22115$17Rald)
                                                         g$mr$22116$17Rald
                                                         (cons
                                                           g$lex$22147$17Rald
                                                           g$lex*$22117$17Rald)
                                                         (cons
                                                           g$rhs$22141$17Rald
                                                           g$rhs*$22118$17Rald)
                                                         g$mod**$22119$17Rald
                                                         g$kwd*$22135$17Rald
                                                         g$exp*$22121$17Rald
                                                         g$rib$22122$17Rald
                                                         g$mix?$22123$17Rald
                                                         g$sd?$22124$17Rald))))
                                                  g$lex$22146$17Rald
                                                  g$lab$22145$17Rald)))))))
                                       g$rhs$22140$17Rald
                                       g$id$22139$17Rald))))
                                 (if (eqv?
                                       g$t$22136$17Rald
                                       'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$19661$17Rald
                                          g$e$22125$17Rald)))
                                     (case-lambda
                                       ((g$id$22151$17Rald
                                          g$rhs$22152$17Rald)
                                        ((case-lambda
                                           ((g$rhs$22153$17Rald
                                              g$id$22154$17Rald)
                                            (begin
                                              (if (g$bound-id-member?$19229$17Rald
                                                    g$id$22154$17Rald
                                                    g$kwd*$22135$17Rald)
                                                (g$syntax-violation$19839$17Rald
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$22125$17Rald)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$22155$17Rald)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$22156$17Rald)
                                                      (begin
                                                        (g$extend-rib!$19183$17Rald
                                                          g$rib$22122$17Rald
                                                          g$id$22154$17Rald
                                                          g$lab$22155$17Rald
                                                          g$sd?$22124$17Rald)
                                                        ((case-lambda
                                                           ((g$b$22157$17Rald)
                                                            (g$chi-body*$19767$17Rald
                                                              (cdr g$e*$22114$17Rald)
                                                              (cons
                                                                (cons
                                                                  g$lab$22155$17Rald
                                                                  g$b$22157$17Rald)
                                                                g$r$22115$17Rald)
                                                              (cons
                                                                (cons
                                                                  g$lab$22155$17Rald
                                                                  g$b$22157$17Rald)
                                                                g$mr$22116$17Rald)
                                                              g$lex*$22117$17Rald
                                                              g$rhs*$22118$17Rald
                                                              g$mod**$22119$17Rald
                                                              g$kwd*$22135$17Rald
                                                              g$exp*$22121$17Rald
                                                              g$rib$22122$17Rald
                                                              g$mix?$22123$17Rald
                                                              g$sd?$22124$17Rald)))
                                                         (g$make-eval-transformer$19270$17Rald
                                                           g$expanded-rhs$22156$17Rald)))))
                                                   (g$expand-transformer$19768$17Rald
                                                     g$rhs$22153$17Rald
                                                     g$mr$22116$17Rald))))
                                               (g$gen-define-label$19162$17Rald
                                                 g$id$22154$17Rald
                                                 g$rib$22122$17Rald
                                                 g$sd?$22124$17Rald)))))
                                         g$rhs$22152$17Rald
                                         g$id$22151$17Rald))))
                                   (if (g$memv$11828$17Rald
                                         g$t$22136$17Rald
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$22158$17Rald)
                                         ((case-lambda
                                            ((g$ls/false$22159$17Rald)
                                             (if (if g$ls/false$22159$17Rald
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$22160$17Rald
                                                            g$xrhs*$22161$17Rald
                                                            g$xbody*$22162$17Rald)
                                                          (if (not (g$valid-bound-ids?$19227$17Rald
                                                                     g$xlhs*$22160$17Rald))
                                                            (g$syntax-violation$19839$17Rald
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$22125$17Rald)
                                                            (void))))
                                                       g$ls/false$22159$17Rald))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$22163$17Rald
                                                      g$xrhs*$22164$17Rald
                                                      g$xbody*$22165$17Rald)
                                                    ((case-lambda
                                                       ((g$xlab*$22166$17Rald)
                                                        ((case-lambda
                                                           ((g$xrib$22167$17Rald)
                                                            ((case-lambda
                                                               ((g$xb*$22168$17Rald)
                                                                (g$chi-body*$19767$17Rald
                                                                  (append
                                                                    (g$map$11835$17Rald
                                                                      (case-lambda
                                                                        ((g$x$22169$17Rald)
                                                                         (g$add-subst$19212$17Rald
                                                                           g$xrib$22167$17Rald
                                                                           g$x$22169$17Rald)))
                                                                      g$xbody*$22165$17Rald)
                                                                    (cdr g$e*$22114$17Rald))
                                                                  (append
                                                                    (g$map$11835$17Rald
                                                                      cons
                                                                      g$xlab*$22166$17Rald
                                                                      g$xb*$22168$17Rald)
                                                                    g$r$22115$17Rald)
                                                                  (append
                                                                    (g$map$11835$17Rald
                                                                      cons
                                                                      g$xlab*$22166$17Rald
                                                                      g$xb*$22168$17Rald)
                                                                    g$mr$22116$17Rald)
                                                                  g$lex*$22117$17Rald
                                                                  g$rhs*$22118$17Rald
                                                                  g$mod**$22119$17Rald
                                                                  g$kwd*$22135$17Rald
                                                                  g$exp*$22121$17Rald
                                                                  g$rib$22122$17Rald
                                                                  g$mix?$22123$17Rald
                                                                  g$sd?$22124$17Rald)))
                                                             (g$map$11835$17Rald
                                                               (case-lambda
                                                                 ((g$x$22170$17Rald)
                                                                  (g$make-eval-transformer$19270$17Rald
                                                                    (g$expand-transformer$19768$17Rald
                                                                      (if (eq? g$type$22134$17Rald
                                                                               'let-syntax)
                                                                        g$x$22170$17Rald
                                                                        (g$add-subst$19212$17Rald
                                                                          g$xrib$22167$17Rald
                                                                          g$x$22170$17Rald))
                                                                      g$mr$22116$17Rald))))
                                                               g$xrhs*$22164$17Rald))))
                                                         (g$make-full-rib$19188$17Rald
                                                           g$xlhs*$22163$17Rald
                                                           g$xlab*$22166$17Rald))))
                                                     (g$map$11835$17Rald
                                                       g$gen-label$19159$17Rald
                                                       g$xlhs*$22163$17Rald))))
                                                 g$ls/false$22159$17Rald)
                                               (g$syntax-violation$19839$17Rald
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$22158$17Rald))))
                                          (g$syntax-dispatch$19720$17Rald
                                            g$t$22158$17Rald
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$22125$17Rald)
                                     (if (eqv? g$t$22136$17Rald 'begin)
                                       ((case-lambda
                                          ((g$t$22171$17Rald)
                                           ((case-lambda
                                              ((g$ls/false$22172$17Rald)
                                               (if g$ls/false$22172$17Rald
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$22173$17Rald)
                                                      (g$chi-body*$19767$17Rald
                                                        (append
                                                          g$x*$22173$17Rald
                                                          (cdr g$e*$22114$17Rald))
                                                        g$r$22115$17Rald
                                                        g$mr$22116$17Rald
                                                        g$lex*$22117$17Rald
                                                        g$rhs*$22118$17Rald
                                                        g$mod**$22119$17Rald
                                                        g$kwd*$22135$17Rald
                                                        g$exp*$22121$17Rald
                                                        g$rib$22122$17Rald
                                                        g$mix?$22123$17Rald
                                                        g$sd?$22124$17Rald)))
                                                   g$ls/false$22172$17Rald)
                                                 (g$syntax-violation$19839$17Rald
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$22171$17Rald))))
                                            (g$syntax-dispatch$19720$17Rald
                                              g$t$22171$17Rald
                                              '(_ . each-any)))))
                                        g$e$22125$17Rald)
                                       (if (g$memv$11828$17Rald
                                             g$t$22136$17Rald
                                             '(global-macro
                                                global-macro!))
                                         (g$chi-body*$19767$17Rald
                                           (cons
                                             (g$add-subst$19212$17Rald
                                               g$rib$22122$17Rald
                                               (g$chi-global-macro$19735$17Rald
                                                 g$value$22133$17Rald
                                                 g$e$22125$17Rald
                                                 g$r$22115$17Rald))
                                             (cdr g$e*$22114$17Rald))
                                           g$r$22115$17Rald
                                           g$mr$22116$17Rald
                                           g$lex*$22117$17Rald
                                           g$rhs*$22118$17Rald
                                           g$mod**$22119$17Rald
                                           g$kwd*$22135$17Rald
                                           g$exp*$22121$17Rald
                                           g$rib$22122$17Rald
                                           g$mix?$22123$17Rald
                                           g$sd?$22124$17Rald)
                                         (if (g$memv$11828$17Rald
                                               g$t$22136$17Rald
                                               '(local-macro
                                                  local-macro!))
                                           (g$chi-body*$19767$17Rald
                                             (cons
                                               (g$add-subst$19212$17Rald
                                                 g$rib$22122$17Rald
                                                 (g$chi-local-macro$19734$17Rald
                                                   g$value$22133$17Rald
                                                   g$e$22125$17Rald
                                                   g$r$22115$17Rald))
                                               (cdr g$e*$22114$17Rald))
                                             g$r$22115$17Rald
                                             g$mr$22116$17Rald
                                             g$lex*$22117$17Rald
                                             g$rhs*$22118$17Rald
                                             g$mod**$22119$17Rald
                                             g$kwd*$22135$17Rald
                                             g$exp*$22121$17Rald
                                             g$rib$22122$17Rald
                                             g$mix?$22123$17Rald
                                             g$sd?$22124$17Rald)
                                           (if (g$memv$11828$17Rald
                                                 g$t$22136$17Rald
                                                 '(macro macro!))
                                             (g$chi-body*$19767$17Rald
                                               (cons
                                                 (g$add-subst$19212$17Rald
                                                   g$rib$22122$17Rald
                                                   (g$chi-macro$19733$17Rald
                                                     g$value$22133$17Rald
                                                     g$e$22125$17Rald
                                                     g$r$22115$17Rald))
                                                 (cdr g$e*$22114$17Rald))
                                               g$r$22115$17Rald
                                               g$mr$22116$17Rald
                                               g$lex*$22117$17Rald
                                               g$rhs*$22118$17Rald
                                               g$mod**$22119$17Rald
                                               g$kwd*$22135$17Rald
                                               g$exp*$22121$17Rald
                                               g$rib$22122$17Rald
                                               g$mix?$22123$17Rald
                                               g$sd?$22124$17Rald)
                                             (if (eqv?
                                                   g$t$22136$17Rald
                                                   'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$19766$17Rald
                                                      g$e$22125$17Rald
                                                      g$r$22115$17Rald
                                                      g$mr$22116$17Rald
                                                      g$lex*$22117$17Rald
                                                      g$rhs*$22118$17Rald
                                                      g$mod**$22119$17Rald
                                                      g$kwd*$22135$17Rald)))
                                                 (case-lambda
                                                   ((g$lex*$22182$17Rald
                                                      g$rhs*$22183$17Rald
                                                      g$m-exp-id*$22184$17Rald
                                                      g$m-exp-lab*$22185$17Rald
                                                      g$r$22186$17Rald
                                                      g$mr$22187$17Rald
                                                      g$mod**$22188$17Rald
                                                      g$kwd*$22189$17Rald)
                                                    ((case-lambda
                                                       ((g$kwd*$22190$17Rald
                                                          g$mod**$22191$17Rald
                                                          g$mr$22192$17Rald
                                                          g$r$22193$17Rald
                                                          g$m-exp-lab*$22194$17Rald
                                                          g$m-exp-id*$22195$17Rald
                                                          g$rhs*$22196$17Rald
                                                          g$lex*$22197$17Rald)
                                                        (begin
                                                          (g$vector-for-each$12680$17Rald
                                                            (case-lambda
                                                              ((g$id$22198$17Rald
                                                                 g$lab$22199$17Rald)
                                                               (g$extend-rib!$19183$17Rald
                                                                 g$rib$22122$17Rald
                                                                 g$id$22198$17Rald
                                                                 g$lab$22199$17Rald
                                                                 g$sd?$22124$17Rald)))
                                                            g$m-exp-id*$22195$17Rald
                                                            g$m-exp-lab*$22194$17Rald)
                                                          (g$chi-body*$19767$17Rald
                                                            (cdr g$e*$22114$17Rald)
                                                            g$r$22193$17Rald
                                                            g$mr$22192$17Rald
                                                            g$lex*$22197$17Rald
                                                            g$rhs*$22196$17Rald
                                                            g$mod**$22191$17Rald
                                                            g$kwd*$22190$17Rald
                                                            g$exp*$22121$17Rald
                                                            g$rib$22122$17Rald
                                                            g$mix?$22123$17Rald
                                                            g$sd?$22124$17Rald))))
                                                     g$kwd*$22189$17Rald
                                                     g$mod**$22188$17Rald
                                                     g$mr$22187$17Rald
                                                     g$r$22186$17Rald
                                                     g$m-exp-lab*$22185$17Rald
                                                     g$m-exp-id*$22184$17Rald
                                                     g$rhs*$22183$17Rald
                                                     g$lex*$22182$17Rald))))
                                               (if (eqv?
                                                     g$t$22136$17Rald
                                                     'library)
                                                 (begin
                                                   (g$library-expander$19823$17Rald
                                                     (g$stx->datum$19233$17Rald
                                                       g$e$22125$17Rald))
                                                   (g$chi-body*$19767$17Rald
                                                     (cdr g$e*$22114$17Rald)
                                                     g$r$22115$17Rald
                                                     g$mr$22116$17Rald
                                                     g$lex*$22117$17Rald
                                                     g$rhs*$22118$17Rald
                                                     g$mod**$22119$17Rald
                                                     g$kwd*$22135$17Rald
                                                     g$exp*$22121$17Rald
                                                     g$rib$22122$17Rald
                                                     g$mix?$22123$17Rald
                                                     g$sd?$22124$17Rald))
                                                 (if (eqv?
                                                       g$t$22136$17Rald
                                                       'export)
                                                   ((case-lambda
                                                      ((g$t$22200$17Rald)
                                                       ((case-lambda
                                                          ((g$ls/false$22201$17Rald)
                                                           (if g$ls/false$22201$17Rald
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$22202$17Rald)
                                                                  (g$chi-body*$19767$17Rald
                                                                    (cdr g$e*$22114$17Rald)
                                                                    g$r$22115$17Rald
                                                                    g$mr$22116$17Rald
                                                                    g$lex*$22117$17Rald
                                                                    g$rhs*$22118$17Rald
                                                                    g$mod**$22119$17Rald
                                                                    g$kwd*$22135$17Rald
                                                                    (append
                                                                      g$exp-decl*$22202$17Rald
                                                                      g$exp*$22121$17Rald)
                                                                    g$rib$22122$17Rald
                                                                    g$mix?$22123$17Rald
                                                                    g$sd?$22124$17Rald)))
                                                               g$ls/false$22201$17Rald)
                                                             (g$syntax-violation$19839$17Rald
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$22200$17Rald))))
                                                        (g$syntax-dispatch$19720$17Rald
                                                          g$t$22200$17Rald
                                                          '(_ .
                                                              each-any)))))
                                                    g$e$22125$17Rald)
                                                   (if (eqv?
                                                         g$t$22136$17Rald
                                                         'import)
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$22203$17Rald
                                                                     (case-lambda
                                                                       ((g$e$22245$17Rald)
                                                                        ((case-lambda
                                                                           ((g$t$22246$17Rald)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22247$17Rald)
                                                                                (if (if g$ls/false$22247$17Rald
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$22248$17Rald)
                                                                                             (g$id?$19222$17Rald
                                                                                               g$id$22248$17Rald)))
                                                                                          g$ls/false$22247$17Rald))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$22249$17Rald)
                                                                                       '#t))
                                                                                    g$ls/false$22247$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$t$22250$17Rald)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$22251$17Rald)
                                                                                          (if g$ls/false$22251$17Rald
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$22252$17Rald)
                                                                                                 '#f))
                                                                                              g$ls/false$22251$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$t$22253$17Rald)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$22254$17Rald)
                                                                                                    (if g$ls/false$22254$17Rald
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$19839$17Rald
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$22245$17Rald)))
                                                                                                        g$ls/false$22254$17Rald)
                                                                                                      (g$syntax-violation$19839$17Rald
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$22253$17Rald))))
                                                                                                 (g$syntax-dispatch$19720$17Rald
                                                                                                   g$t$22253$17Rald
                                                                                                   '_))))
                                                                                             g$t$22250$17Rald))))
                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                         g$t$22250$17Rald
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$22246$17Rald))))
                                                                             (g$syntax-dispatch$19720$17Rald
                                                                               g$t$22246$17Rald
                                                                               '(_ any)))))
                                                                         g$e$22245$17Rald))))
                                                                   (g$module-import$22204$17Rald
                                                                     (case-lambda
                                                                       ((g$e$22228$17Rald
                                                                          g$r$22229$17Rald)
                                                                        ((case-lambda
                                                                           ((g$t$22230$17Rald)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22231$17Rald)
                                                                                (if (if g$ls/false$22231$17Rald
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$22232$17Rald)
                                                                                             (g$id?$19222$17Rald
                                                                                               g$id$22232$17Rald)))
                                                                                          g$ls/false$22231$17Rald))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$22233$17Rald)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$19242$17Rald
                                                                                              g$id$22233$17Rald
                                                                                              g$r$22229$17Rald)))
                                                                                         (case-lambda
                                                                                           ((g$type$22237$17Rald
                                                                                              g$value$22238$17Rald
                                                                                              g$kwd$22239$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$22240$17Rald
                                                                                                  g$value$22241$17Rald
                                                                                                  g$type$22242$17Rald)
                                                                                                ((case-lambda
                                                                                                   ((g$t$22243$17Rald)
                                                                                                    (if (eqv?
                                                                                                          g$t$22243$17Rald
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$22244$17Rald)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$19764$17Rald
                                                                                                              g$iface$22244$17Rald
                                                                                                              g$id$22233$17Rald)
                                                                                                            (g$module-interface-exp-lab-vec$19760$17Rald
                                                                                                              g$iface$22244$17Rald))))
                                                                                                       g$value$22241$17Rald)
                                                                                                      (g$syntax-violation$19839$17Rald
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$22228$17Rald))))
                                                                                                 g$type$22242$17Rald)))
                                                                                             g$kwd$22239$17Rald
                                                                                             g$value$22238$17Rald
                                                                                             g$type$22237$17Rald))))))
                                                                                    g$ls/false$22231$17Rald)
                                                                                  (g$syntax-violation$19839$17Rald
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$22230$17Rald))))
                                                                             (g$syntax-dispatch$19720$17Rald
                                                                               g$t$22230$17Rald
                                                                               '(_ any)))))
                                                                         g$e$22228$17Rald))))
                                                                   (g$library-import$22205$17Rald
                                                                     (case-lambda
                                                                       ((g$e$22214$17Rald)
                                                                        ((case-lambda
                                                                           ((g$t$22215$17Rald)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22216$17Rald)
                                                                                (if g$ls/false$22216$17Rald
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$22217$17Rald
                                                                                         g$imp*$22218$17Rald)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$19772$17Rald
                                                                                              (g$syntax->datum$19842$17Rald
                                                                                                g$imp*$22218$17Rald))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$22221$17Rald
                                                                                              g$subst-labels$22222$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$22223$17Rald
                                                                                                  g$subst-names$22224$17Rald)
                                                                                                (values
                                                                                                  (g$vector-map$12679$17Rald
                                                                                                    (case-lambda
                                                                                                      ((g$name$22225$17Rald)
                                                                                                       (g$datum->stx$19205$17Rald
                                                                                                         g$ctxt$22217$17Rald
                                                                                                         g$name$22225$17Rald)))
                                                                                                    g$subst-names$22224$17Rald)
                                                                                                  g$subst-labels$22223$17Rald)))
                                                                                             g$subst-labels$22222$17Rald
                                                                                             g$subst-names$22221$17Rald))))))
                                                                                    g$ls/false$22216$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$t$22226$17Rald)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$22227$17Rald)
                                                                                          (if g$ls/false$22227$17Rald
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19839$17Rald
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$22214$17Rald)))
                                                                                              g$ls/false$22227$17Rald)
                                                                                            (g$syntax-violation$19839$17Rald
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$22226$17Rald))))
                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                         g$t$22226$17Rald
                                                                                         '_))))
                                                                                   g$t$22215$17Rald))))
                                                                             (g$syntax-dispatch$19720$17Rald
                                                                               g$t$22215$17Rald
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$22214$17Rald)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$22203$17Rald
                                                                        g$e$22125$17Rald)
                                                                    (g$module-import$22204$17Rald
                                                                      g$e$22125$17Rald
                                                                      g$r$22115$17Rald)
                                                                    (g$library-import$22205$17Rald
                                                                      g$e$22125$17Rald))))
                                                               (case-lambda
                                                                 ((g$id*$22208$17Rald
                                                                    g$lab*$22209$17Rald)
                                                                  ((case-lambda
                                                                     ((g$lab*$22210$17Rald
                                                                        g$id*$22211$17Rald)
                                                                      (g$vector-for-each$12680$17Rald
                                                                        (case-lambda
                                                                          ((g$id$22212$17Rald
                                                                             g$lab$22213$17Rald)
                                                                           (g$extend-rib!$19183$17Rald
                                                                             g$rib$22122$17Rald
                                                                             g$id$22212$17Rald
                                                                             g$lab$22213$17Rald
                                                                             g$sd?$22124$17Rald)))
                                                                        g$id*$22211$17Rald
                                                                        g$lab*$22210$17Rald)))
                                                                   g$lab*$22209$17Rald
                                                                   g$id*$22208$17Rald))))
                                                             (g$chi-body*$19767$17Rald
                                                               (cdr g$e*$22114$17Rald)
                                                               g$r$22115$17Rald
                                                               g$mr$22116$17Rald
                                                               g$lex*$22117$17Rald
                                                               g$rhs*$22118$17Rald
                                                               g$mod**$22119$17Rald
                                                               g$kwd*$22135$17Rald
                                                               g$exp*$22121$17Rald
                                                               g$rib$22122$17Rald
                                                               g$mix?$22123$17Rald
                                                               g$sd?$22124$17Rald))))))
                                                     (if g$mix?$22123$17Rald
                                                       (g$chi-body*$19767$17Rald
                                                         (cdr g$e*$22114$17Rald)
                                                         g$r$22115$17Rald
                                                         g$mr$22116$17Rald
                                                         (cons
                                                           (g$gen-lexical$19157$17Rald
                                                             'dummy)
                                                           g$lex*$22117$17Rald)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$22125$17Rald)
                                                           g$rhs*$22118$17Rald)
                                                         g$mod**$22119$17Rald
                                                         g$kwd*$22135$17Rald
                                                         g$exp*$22121$17Rald
                                                         g$rib$22122$17Rald
                                                         '#t
                                                         g$sd?$22124$17Rald)
                                                       (values
                                                         g$e*$22114$17Rald
                                                         g$r$22115$17Rald
                                                         g$mr$22116$17Rald
                                                         g$lex*$22117$17Rald
                                                         g$rhs*$22118$17Rald
                                                         g$mod**$22119$17Rald
                                                         g$kwd*$22135$17Rald
                                                         g$exp*$22121$17Rald)))))))))))))))
                            g$type$22134$17Rald)))
                        (if (g$id?$19222$17Rald g$kwd$22132$17Rald)
                          (cons g$kwd$22132$17Rald g$kwd*$22120$17Rald)
                          g$kwd*$22120$17Rald))))
                    g$kwd$22131$17Rald
                    g$value$22130$17Rald
                    g$type$22129$17Rald))))))
           (car g$e*$22114$17Rald))))))
   (g$expand-transformer$19768$17Rald
     g$expand-transformer$23362$17Rald
     (case-lambda
       ((g$expr$22255$17Rald g$r$22256$17Rald)
        ((case-lambda
           ((g$rtc$22257$17Rald)
            ((case-lambda
               ((g$expanded-rhs$22258$17Rald)
                (begin
                  (g$for-each$11836$17Rald
                    ((case-lambda
                       ((g$mark-visit$22259$17Rald)
                        (case-lambda
                          ((g$x$22260$17Rald)
                           (begin
                             (g$invoke-library$18928$17Rald
                               g$x$22260$17Rald)
                             (g$mark-visit$22259$17Rald
                               g$x$22260$17Rald))))))
                     (g$vis-collector$19776$17Rald))
                    (g$rtc$22257$17Rald))
                  g$expanded-rhs$22258$17Rald)))
             ((case-lambda
                ((g$inv-collector$22265$17Rald
                   g$vis-collector$22266$17Rald
                   g$inv-collector$22267$17Rald
                   g$vis-collector$22268$17Rald)
                 ((case-lambda
                    ((g$swap$22269$17Rald)
                     (dynamic-wind
                       g$swap$22269$17Rald
                       (case-lambda
                         (()
                          (g$chi-expr$19738$17Rald
                            g$expr$22255$17Rald
                            g$r$22256$17Rald
                            g$r$22256$17Rald)))
                       g$swap$22269$17Rald)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$22270$17Rald)
                           (begin
                             (g$inv-collector$22265$17Rald
                               g$inv-collector$22267$17Rald)
                             (set! g$inv-collector$22267$17Rald
                               g$t$22270$17Rald))))
                        (g$inv-collector$22265$17Rald))
                       ((case-lambda
                          ((g$t$22271$17Rald)
                           (begin
                             (g$vis-collector$22266$17Rald
                               g$vis-collector$22268$17Rald)
                             (set! g$vis-collector$22268$17Rald
                               g$t$22271$17Rald))))
                        (g$vis-collector$22266$17Rald))))))))
              g$inv-collector$19775$17Rald
              g$vis-collector$19776$17Rald
              g$rtc$22257$17Rald
              (case-lambda ((g$x$22272$17Rald) (values)))))))
         (g$make-collector$19774$17Rald)))))
   (g$parse-exports$19769$17Rald
     g$parse-exports$23363$17Rald
     (case-lambda
       ((g$exp*$22273$17Rald)
        ((letrec ((g$f$22274$17Rald
                    (case-lambda
                      ((g$exp*$22275$17Rald
                         g$int*$22276$17Rald
                         g$ext*$22277$17Rald)
                       (if (null? g$exp*$22275$17Rald)
                         (begin
                           (if (not (g$valid-bound-ids?$19227$17Rald
                                      g$ext*$22277$17Rald))
                             (g$syntax-violation$19839$17Rald
                               'export
                               '"invalid exports"
                               (g$find-dups$19748$17Rald
                                 g$ext*$22277$17Rald))
                             (void))
                           (values
                             (g$map$11835$17Rald
                               g$syntax->datum$19842$17Rald
                               g$ext*$22277$17Rald)
                             g$int*$22276$17Rald))
                         ((case-lambda
                            ((g$t$22278$17Rald)
                             ((case-lambda
                                ((g$ls/false$22279$17Rald)
                                 (if g$ls/false$22279$17Rald
                                   (apply
                                     (case-lambda
                                       ((g$rename$22280$17Rald
                                          g$i*$22281$17Rald
                                          g$e*$22282$17Rald)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$19842$17Rald
                                                              g$rename$22280$17Rald)
                                                            'rename)
                                                     (if (g$for-all$11833$17Rald
                                                           g$id?$19222$17Rald
                                                           g$i*$22281$17Rald)
                                                       (begin
                                                         '#f
                                                         (g$for-all$11833$17Rald
                                                           g$id?$19222$17Rald
                                                           g$e*$22282$17Rald))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$19839$17Rald
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$22275$17Rald))
                                            (void))
                                          (g$f$22274$17Rald
                                            (cdr g$exp*$22275$17Rald)
                                            (append
                                              g$i*$22281$17Rald
                                              g$int*$22276$17Rald)
                                            (append
                                              g$e*$22282$17Rald
                                              g$ext*$22277$17Rald)))))
                                     g$ls/false$22279$17Rald)
                                   ((case-lambda
                                      ((g$t$22283$17Rald)
                                       ((case-lambda
                                          ((g$ls/false$22284$17Rald)
                                           (if g$ls/false$22284$17Rald
                                             (apply
                                               (case-lambda
                                                 ((g$ie$22285$17Rald)
                                                  (begin
                                                    (if (not (g$id?$19222$17Rald
                                                               g$ie$22285$17Rald))
                                                      (g$syntax-violation$19839$17Rald
                                                        'export
                                                        '"invalid export"
                                                        g$ie$22285$17Rald)
                                                      (void))
                                                    (g$f$22274$17Rald
                                                      (cdr g$exp*$22275$17Rald)
                                                      (cons
                                                        g$ie$22285$17Rald
                                                        g$int*$22276$17Rald)
                                                      (cons
                                                        g$ie$22285$17Rald
                                                        g$ext*$22277$17Rald)))))
                                               g$ls/false$22284$17Rald)
                                             (g$syntax-violation$19839$17Rald
                                               '#f
                                               '"invalid syntax"
                                               g$t$22283$17Rald))))
                                        (g$syntax-dispatch$19720$17Rald
                                          g$t$22283$17Rald
                                          'any))))
                                    g$t$22278$17Rald))))
                              (g$syntax-dispatch$19720$17Rald
                                g$t$22278$17Rald
                                '(any . #(each (any any)))))))
                          (car g$exp*$22275$17Rald)))))))
           g$f$22274$17Rald)
         g$exp*$22273$17Rald
         '()
         '()))))
   (g$parse-library-name$19770$17Rald
     g$parse-library-name$23364$17Rald
     (case-lambda
       ((g$spec$22286$17Rald)
        (letrec* ((g$parse$22287$17Rald
                    (case-lambda
                      ((g$x$22294$17Rald)
                       ((case-lambda
                          ((g$t$22295$17Rald)
                           ((case-lambda
                              ((g$ls/false$22296$17Rald)
                               (if (if g$ls/false$22296$17Rald
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$22297$17Rald)
                                            (g$for-all$11833$17Rald
                                              (case-lambda
                                                ((g$x$22298$17Rald)
                                                 ((case-lambda
                                                    ((g$x$22299$17Rald)
                                                     (if (integer?
                                                           g$x$22299$17Rald)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$22299$17Rald))
                                                       '#f)))
                                                  (g$syntax->datum$19842$17Rald
                                                    g$x$22298$17Rald))))
                                              g$v*$22297$17Rald)))
                                         g$ls/false$22296$17Rald))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$22300$17Rald)
                                      (values
                                        '()
                                        (g$map$11835$17Rald
                                          g$syntax->datum$19842$17Rald
                                          g$v*$22300$17Rald))))
                                   g$ls/false$22296$17Rald)
                                 ((case-lambda
                                    ((g$t$22301$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$22302$17Rald)
                                         (if (if g$ls/false$22302$17Rald
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$22303$17Rald
                                                        g$rest$22304$17Rald)
                                                      (g$symbol?$12610$17Rald
                                                        (g$syntax->datum$19842$17Rald
                                                          g$x$22303$17Rald))))
                                                   g$ls/false$22302$17Rald))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$22305$17Rald
                                                  g$rest$22306$17Rald)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$22287$17Rald
                                                       g$rest$22306$17Rald)))
                                                  (case-lambda
                                                    ((g$x*$22309$17Rald
                                                       g$v*$22310$17Rald)
                                                     ((case-lambda
                                                        ((g$v*$22311$17Rald
                                                           g$x*$22312$17Rald)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$19842$17Rald
                                                               g$x$22305$17Rald)
                                                             g$x*$22312$17Rald)
                                                           g$v*$22311$17Rald)))
                                                      g$v*$22310$17Rald
                                                      g$x*$22309$17Rald))))))
                                             g$ls/false$22302$17Rald)
                                           ((case-lambda
                                              ((g$t$22313$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$22314$17Rald)
                                                   (if g$ls/false$22314$17Rald
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$22314$17Rald)
                                                     ((case-lambda
                                                        ((g$t$22315$17Rald)
                                                         ((case-lambda
                                                            ((g$ls/false$22316$17Rald)
                                                             (if g$ls/false$22316$17Rald
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$19839$17Rald
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$22286$17Rald)))
                                                                 g$ls/false$22316$17Rald)
                                                               (g$syntax-violation$19839$17Rald
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$22315$17Rald))))
                                                          (g$syntax-dispatch$19720$17Rald
                                                            g$t$22315$17Rald
                                                            '_))))
                                                      g$t$22313$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$22313$17Rald
                                                  '()))))
                                            g$t$22301$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$22301$17Rald
                                        '(any . any)))))
                                  g$t$22295$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$22295$17Rald
                              '(each-any)))))
                        g$x$22294$17Rald)))))
          (call-with-values
            (case-lambda
              (() (g$parse$22287$17Rald g$spec$22286$17Rald)))
            (case-lambda
              ((g$name*$22290$17Rald g$ver*$22291$17Rald)
               ((case-lambda
                  ((g$ver*$22292$17Rald g$name*$22293$17Rald)
                   (begin
                     (if (null? g$name*$22293$17Rald)
                       (g$syntax-violation$19839$17Rald
                         '#f
                         '"empty library name"
                         g$spec$22286$17Rald)
                       (void))
                     (values
                       g$name*$22293$17Rald
                       g$ver*$22292$17Rald))))
                g$ver*$22291$17Rald
                g$name*$22290$17Rald))))))))
   (g$parse-library$19771$17Rald
     g$parse-library$23365$17Rald
     (case-lambda
       ((g$e$22317$17Rald)
        ((case-lambda
           ((g$t$22318$17Rald)
            ((case-lambda
               ((g$ls/false$22319$17Rald)
                (if (if g$ls/false$22319$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$22320$17Rald
                               g$name*$22321$17Rald
                               g$export$22322$17Rald
                               g$exp*$22323$17Rald
                               g$import$22324$17Rald
                               g$imp*$22325$17Rald
                               g$b*$22326$17Rald)
                             (if (eq? (g$syntax->datum$19842$17Rald
                                        g$export$22322$17Rald)
                                      'export)
                               (if (eq? (g$syntax->datum$19842$17Rald
                                          g$import$22324$17Rald)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$19842$17Rald
                                          g$library$22320$17Rald)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$22319$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$22327$17Rald
                         g$name*$22328$17Rald
                         g$export$22329$17Rald
                         g$exp*$22330$17Rald
                         g$import$22331$17Rald
                         g$imp*$22332$17Rald
                         g$b*$22333$17Rald)
                       (values
                         g$name*$22328$17Rald
                         g$exp*$22330$17Rald
                         g$imp*$22332$17Rald
                         g$b*$22333$17Rald)))
                    g$ls/false$22319$17Rald)
                  ((case-lambda
                     ((g$t$22334$17Rald)
                      ((case-lambda
                         ((g$ls/false$22335$17Rald)
                          (if g$ls/false$22335$17Rald
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$19839$17Rald
                                   '#f
                                   '"malformed library"
                                   g$e$22317$17Rald)))
                              g$ls/false$22335$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$22334$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$22334$17Rald
                         '_))))
                   g$t$22318$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$22318$17Rald
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$22317$17Rald))))
   (g$parse-import-spec*$19772$17Rald
     g$parse-import-spec*$23366$17Rald
     (case-lambda
       ((g$imp*$22336$17Rald)
        (letrec* ((g$idsyn?$22337$17Rald
                    (case-lambda
                      ((g$x$22597$17Rald)
                       (g$symbol?$12610$17Rald
                         (g$syntax->datum$19842$17Rald
                           g$x$22597$17Rald)))))
                  (g$dup-error$22338$17Rald
                    (case-lambda
                      ((g$name$22596$17Rald)
                       (g$syntax-violation$19839$17Rald
                         'import
                         '"two imports with different bindings"
                         g$name$22596$17Rald))))
                  (g$merge-substs$22339$17Rald
                    (case-lambda
                      ((g$s$22587$17Rald g$subst$22588$17Rald)
                       (letrec* ((g$insert-to-subst$22589$17Rald
                                   (case-lambda
                                     ((g$a$22590$17Rald
                                        g$subst$22591$17Rald)
                                      ((case-lambda
                                         ((g$name$22592$17Rald
                                            g$label$22593$17Rald)
                                          ((case-lambda
                                             ((g$t$22594$17Rald)
                                              (if g$t$22594$17Rald
                                                ((case-lambda
                                                   ((g$x$22595$17Rald)
                                                    (if (eq? (cdr g$x$22595$17Rald)
                                                             g$label$22593$17Rald)
                                                      g$subst$22591$17Rald
                                                      (g$dup-error$22338$17Rald
                                                        g$name$22592$17Rald))))
                                                 g$t$22594$17Rald)
                                                (cons
                                                  g$a$22590$17Rald
                                                  g$subst$22591$17Rald))))
                                           (g$assq$11823$17Rald
                                             g$name$22592$17Rald
                                             g$subst$22591$17Rald))))
                                       (car g$a$22590$17Rald)
                                       (cdr g$a$22590$17Rald))))))
                         (if (null? g$s$22587$17Rald)
                           g$subst$22588$17Rald
                           (g$insert-to-subst$22589$17Rald
                             (car g$s$22587$17Rald)
                             (g$merge-substs$22339$17Rald
                               (cdr g$s$22587$17Rald)
                               g$subst$22588$17Rald)))))))
                  (g$exclude*$22340$17Rald
                    (case-lambda
                      ((g$sym*$22563$17Rald g$subst$22564$17Rald)
                       (letrec* ((g$exclude$22565$17Rald
                                   (case-lambda
                                     ((g$sym$22578$17Rald
                                        g$subst$22579$17Rald)
                                      (if (null? g$subst$22579$17Rald)
                                        (g$syntax-violation$19839$17Rald
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$22578$17Rald)
                                        (if (eq? g$sym$22578$17Rald
                                                 (g$caar$12627$17Rald
                                                   g$subst$22579$17Rald))
                                          (values
                                            (g$cdar$12629$17Rald
                                              g$subst$22579$17Rald)
                                            (cdr g$subst$22579$17Rald))
                                          ((case-lambda
                                             ((g$a$22580$17Rald)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$22565$17Rald
                                                     g$sym$22578$17Rald
                                                     (cdr g$subst$22579$17Rald))))
                                                (case-lambda
                                                  ((g$old$22583$17Rald
                                                     g$subst$22584$17Rald)
                                                   ((case-lambda
                                                      ((g$subst$22585$17Rald
                                                         g$old$22586$17Rald)
                                                       (values
                                                         g$old$22586$17Rald
                                                         (cons
                                                           g$a$22580$17Rald
                                                           g$subst$22585$17Rald))))
                                                    g$subst$22584$17Rald
                                                    g$old$22583$17Rald))))))
                                           (car g$subst$22579$17Rald))))))))
                         (if (null? g$sym*$22563$17Rald)
                           (values '() g$subst$22564$17Rald)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$22565$17Rald
                                  (car g$sym*$22563$17Rald)
                                  g$subst$22564$17Rald)))
                             (case-lambda
                               ((g$old$22568$17Rald
                                  g$subst$22569$17Rald)
                                ((case-lambda
                                   ((g$subst$22570$17Rald
                                      g$old$22571$17Rald)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$22340$17Rald
                                           (cdr g$sym*$22563$17Rald)
                                           g$subst$22570$17Rald)))
                                      (case-lambda
                                        ((g$old*$22574$17Rald
                                           g$subst$22575$17Rald)
                                         ((case-lambda
                                            ((g$subst$22576$17Rald
                                               g$old*$22577$17Rald)
                                             (values
                                               (cons
                                                 g$old$22571$17Rald
                                                 g$old*$22577$17Rald)
                                               g$subst$22576$17Rald)))
                                          g$subst$22575$17Rald
                                          g$old*$22574$17Rald))))))
                                 g$subst$22569$17Rald
                                 g$old$22568$17Rald)))))))))
                  (g$find*$22341$17Rald
                    (case-lambda
                      ((g$sym*$22559$17Rald g$subst$22560$17Rald)
                       (g$map$11835$17Rald
                         (case-lambda
                           ((g$x$22561$17Rald)
                            ((case-lambda
                               ((g$t$22562$17Rald)
                                (if g$t$22562$17Rald
                                  (cdr g$t$22562$17Rald)
                                  (g$syntax-violation$19839$17Rald
                                    'import
                                    '"cannot find identifier"
                                    g$x$22561$17Rald))))
                             (g$assq$11823$17Rald
                               g$x$22561$17Rald
                               g$subst$22560$17Rald))))
                         g$sym*$22559$17Rald))))
                  (g$rem*$22342$17Rald
                    (case-lambda
                      ((g$sym*$22555$17Rald g$subst$22556$17Rald)
                       ((letrec ((g$f$22557$17Rald
                                   (case-lambda
                                     ((g$subst$22558$17Rald)
                                      (if (null? g$subst$22558$17Rald)
                                        '()
                                        (if (g$memq$11827$17Rald
                                              (g$caar$12627$17Rald
                                                g$subst$22558$17Rald)
                                              g$sym*$22555$17Rald)
                                          (g$f$22557$17Rald
                                            (cdr g$subst$22558$17Rald))
                                          (cons
                                            (car g$subst$22558$17Rald)
                                            (g$f$22557$17Rald
                                              (cdr g$subst$22558$17Rald)))))))))
                          g$f$22557$17Rald)
                        g$subst$22556$17Rald))))
                  (g$remove-dups$22343$17Rald
                    (case-lambda
                      ((g$ls$22554$17Rald)
                       (if (null? g$ls$22554$17Rald)
                         '()
                         (if (g$memq$11827$17Rald
                               (car g$ls$22554$17Rald)
                               (cdr g$ls$22554$17Rald))
                           (g$remove-dups$22343$17Rald
                             (cdr g$ls$22554$17Rald))
                           (cons
                             (car g$ls$22554$17Rald)
                             (g$remove-dups$22343$17Rald
                               (cdr g$ls$22554$17Rald))))))))
                  (g$parse-library-name$22344$17Rald
                    (case-lambda
                      ((g$spec$22438$17Rald)
                       (letrec* ((g$subversion?$22439$17Rald
                                   (case-lambda
                                     ((g$x$22552$17Rald)
                                      ((case-lambda
                                         ((g$x$22553$17Rald)
                                          (if (integer?
                                                g$x$22553$17Rald)
                                            (if (exact?
                                                  g$x$22553$17Rald)
                                              (begin
                                                '#f
                                                (>= g$x$22553$17Rald
                                                    '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$19842$17Rald
                                         g$x$22552$17Rald)))))
                                 (g$subversion-pred$22440$17Rald
                                   (case-lambda
                                     ((g$x*$22504$17Rald)
                                      ((case-lambda
                                         ((g$t$22505$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$22506$17Rald)
                                              (if (if g$ls/false$22506$17Rald
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$22507$17Rald)
                                                           (g$subversion?$22439$17Rald
                                                             g$n$22507$17Rald)))
                                                        g$ls/false$22506$17Rald))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$22508$17Rald)
                                                     (case-lambda
                                                       ((g$x$22509$17Rald)
                                                        (= g$x$22509$17Rald
                                                           (g$syntax->datum$19842$17Rald
                                                             g$n$22508$17Rald))))))
                                                  g$ls/false$22506$17Rald)
                                                ((case-lambda
                                                   ((g$t$22510$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$22511$17Rald)
                                                        (if (if g$ls/false$22511$17Rald
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$22512$17Rald
                                                                       g$sub*$22513$17Rald)
                                                                     (eq? (g$syntax->datum$19842$17Rald
                                                                            g$p?$22512$17Rald)
                                                                          'and)))
                                                                  g$ls/false$22511$17Rald))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$22514$17Rald
                                                                 g$sub*$22515$17Rald)
                                                               ((case-lambda
                                                                  ((g$p*$22516$17Rald)
                                                                   (case-lambda
                                                                     ((g$x$22517$17Rald)
                                                                      (g$for-all$11833$17Rald
                                                                        (case-lambda
                                                                          ((g$p$22518$17Rald)
                                                                           (g$p$22518$17Rald
                                                                             g$x$22517$17Rald)))
                                                                        g$p*$22516$17Rald)))))
                                                                (g$map$11835$17Rald
                                                                  g$subversion-pred$22440$17Rald
                                                                  g$sub*$22515$17Rald))))
                                                            g$ls/false$22511$17Rald)
                                                          ((case-lambda
                                                             ((g$t$22519$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$22520$17Rald)
                                                                  (if (if g$ls/false$22520$17Rald
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$22521$17Rald
                                                                                 g$sub*$22522$17Rald)
                                                                               (eq? (g$syntax->datum$19842$17Rald
                                                                                      g$p?$22521$17Rald)
                                                                                    'or)))
                                                                            g$ls/false$22520$17Rald))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$22523$17Rald
                                                                           g$sub*$22524$17Rald)
                                                                         ((case-lambda
                                                                            ((g$p*$22525$17Rald)
                                                                             (case-lambda
                                                                               ((g$x$22526$17Rald)
                                                                                (g$exists$11834$17Rald
                                                                                  (case-lambda
                                                                                    ((g$p$22527$17Rald)
                                                                                     (g$p$22527$17Rald
                                                                                       g$x$22526$17Rald)))
                                                                                  g$p*$22525$17Rald)))))
                                                                          (g$map$11835$17Rald
                                                                            g$subversion-pred$22440$17Rald
                                                                            g$sub*$22524$17Rald))))
                                                                      g$ls/false$22520$17Rald)
                                                                    ((case-lambda
                                                                       ((g$t$22528$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22529$17Rald)
                                                                            (if (if g$ls/false$22529$17Rald
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$22530$17Rald
                                                                                           g$sub$22531$17Rald)
                                                                                         (eq? (g$syntax->datum$19842$17Rald
                                                                                                g$p?$22530$17Rald)
                                                                                              'not)))
                                                                                      g$ls/false$22529$17Rald))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$22532$17Rald
                                                                                     g$sub$22533$17Rald)
                                                                                   ((case-lambda
                                                                                      ((g$p$22534$17Rald)
                                                                                       (case-lambda
                                                                                         ((g$x$22535$17Rald)
                                                                                          (not (g$p$22534$17Rald
                                                                                                 g$x$22535$17Rald))))))
                                                                                    (g$subversion-pred$22440$17Rald
                                                                                      g$sub$22533$17Rald))))
                                                                                g$ls/false$22529$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$t$22536$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22537$17Rald)
                                                                                      (if (if g$ls/false$22537$17Rald
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$22538$17Rald
                                                                                                     g$n$22539$17Rald)
                                                                                                   (if (eq? (g$syntax->datum$19842$17Rald
                                                                                                              g$p?$22538$17Rald)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$22439$17Rald
                                                                                                         g$n$22539$17Rald))
                                                                                                     '#f)))
                                                                                                g$ls/false$22537$17Rald))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$22540$17Rald
                                                                                               g$n$22541$17Rald)
                                                                                             (case-lambda
                                                                                               ((g$x$22542$17Rald)
                                                                                                (<= g$x$22542$17Rald
                                                                                                    (g$syntax->datum$19842$17Rald
                                                                                                      g$n$22541$17Rald))))))
                                                                                          g$ls/false$22537$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$t$22543$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22544$17Rald)
                                                                                                (if (if g$ls/false$22544$17Rald
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$22545$17Rald
                                                                                                               g$n$22546$17Rald)
                                                                                                             (if (eq? (g$syntax->datum$19842$17Rald
                                                                                                                        g$p?$22545$17Rald)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$22439$17Rald
                                                                                                                   g$n$22546$17Rald))
                                                                                                               '#f)))
                                                                                                          g$ls/false$22544$17Rald))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$22547$17Rald
                                                                                                         g$n$22548$17Rald)
                                                                                                       (case-lambda
                                                                                                         ((g$x$22549$17Rald)
                                                                                                          (>= g$x$22549$17Rald
                                                                                                              (g$syntax->datum$19842$17Rald
                                                                                                                g$n$22548$17Rald))))))
                                                                                                    g$ls/false$22544$17Rald)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$22550$17Rald)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$22551$17Rald)
                                                                                                          (if g$ls/false$22551$17Rald
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$19839$17Rald
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$22438$17Rald
                                                                                                                   g$x*$22504$17Rald)))
                                                                                                              g$ls/false$22551$17Rald)
                                                                                                            (g$syntax-violation$19839$17Rald
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$22550$17Rald))))
                                                                                                       (g$syntax-dispatch$19720$17Rald
                                                                                                         g$t$22550$17Rald
                                                                                                         '_))))
                                                                                                   g$t$22543$17Rald))))
                                                                                             (g$syntax-dispatch$19720$17Rald
                                                                                               g$t$22543$17Rald
                                                                                               '(any any)))))
                                                                                         g$t$22536$17Rald))))
                                                                                   (g$syntax-dispatch$19720$17Rald
                                                                                     g$t$22536$17Rald
                                                                                     '(any any)))))
                                                                               g$t$22528$17Rald))))
                                                                         (g$syntax-dispatch$19720$17Rald
                                                                           g$t$22528$17Rald
                                                                           '(any any)))))
                                                                     g$t$22519$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$22519$17Rald
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$22510$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$22510$17Rald
                                                       '(any .
                                                             each-any)))))
                                                 g$t$22505$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$22505$17Rald
                                             'any))))
                                       g$x*$22504$17Rald))))
                                 (g$version-pred$22441$17Rald
                                   (case-lambda
                                     ((g$x*$22464$17Rald)
                                      ((case-lambda
                                         ((g$t$22465$17Rald)
                                          ((case-lambda
                                             ((g$ls/false$22466$17Rald)
                                              (if g$ls/false$22466$17Rald
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$22467$17Rald)
                                                        '#t))))
                                                  g$ls/false$22466$17Rald)
                                                ((case-lambda
                                                   ((g$t$22468$17Rald)
                                                    ((case-lambda
                                                       ((g$ls/false$22469$17Rald)
                                                        (if (if g$ls/false$22469$17Rald
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$22470$17Rald
                                                                       g$ver*$22471$17Rald)
                                                                     (eq? (g$syntax->datum$19842$17Rald
                                                                            g$c$22470$17Rald)
                                                                          'and)))
                                                                  g$ls/false$22469$17Rald))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$22472$17Rald
                                                                 g$ver*$22473$17Rald)
                                                               ((case-lambda
                                                                  ((g$p*$22474$17Rald)
                                                                   (case-lambda
                                                                     ((g$x$22475$17Rald)
                                                                      (g$for-all$11833$17Rald
                                                                        (case-lambda
                                                                          ((g$p$22476$17Rald)
                                                                           (g$p$22476$17Rald
                                                                             g$x$22475$17Rald)))
                                                                        g$p*$22474$17Rald)))))
                                                                (g$map$11835$17Rald
                                                                  g$version-pred$22441$17Rald
                                                                  g$ver*$22473$17Rald))))
                                                            g$ls/false$22469$17Rald)
                                                          ((case-lambda
                                                             ((g$t$22477$17Rald)
                                                              ((case-lambda
                                                                 ((g$ls/false$22478$17Rald)
                                                                  (if (if g$ls/false$22478$17Rald
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$22479$17Rald
                                                                                 g$ver*$22480$17Rald)
                                                                               (eq? (g$syntax->datum$19842$17Rald
                                                                                      g$c$22479$17Rald)
                                                                                    'or)))
                                                                            g$ls/false$22478$17Rald))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$22481$17Rald
                                                                           g$ver*$22482$17Rald)
                                                                         ((case-lambda
                                                                            ((g$p*$22483$17Rald)
                                                                             (case-lambda
                                                                               ((g$x$22484$17Rald)
                                                                                (g$exists$11834$17Rald
                                                                                  (case-lambda
                                                                                    ((g$p$22485$17Rald)
                                                                                     (g$p$22485$17Rald
                                                                                       g$x$22484$17Rald)))
                                                                                  g$p*$22483$17Rald)))))
                                                                          (g$map$11835$17Rald
                                                                            g$version-pred$22441$17Rald
                                                                            g$ver*$22482$17Rald))))
                                                                      g$ls/false$22478$17Rald)
                                                                    ((case-lambda
                                                                       ((g$t$22486$17Rald)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22487$17Rald)
                                                                            (if (if g$ls/false$22487$17Rald
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$22488$17Rald
                                                                                           g$ver$22489$17Rald)
                                                                                         (eq? (g$syntax->datum$19842$17Rald
                                                                                                g$c$22488$17Rald)
                                                                                              'not)))
                                                                                      g$ls/false$22487$17Rald))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$22490$17Rald
                                                                                     g$ver$22491$17Rald)
                                                                                   ((case-lambda
                                                                                      ((g$p$22492$17Rald)
                                                                                       (case-lambda
                                                                                         ((g$x$22493$17Rald)
                                                                                          (not (g$p$22492$17Rald
                                                                                                 g$x$22493$17Rald))))))
                                                                                    (g$version-pred$22441$17Rald
                                                                                      g$ver$22491$17Rald))))
                                                                                g$ls/false$22487$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$t$22494$17Rald)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22495$17Rald)
                                                                                      (if g$ls/false$22495$17Rald
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$22496$17Rald)
                                                                                             ((case-lambda
                                                                                                ((g$p*$22497$17Rald)
                                                                                                 (case-lambda
                                                                                                   ((g$x$22498$17Rald)
                                                                                                    ((letrec ((g$f$22499$17Rald
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$22500$17Rald
                                                                                                                     g$x$22501$17Rald)
                                                                                                                   (if (null?
                                                                                                                         g$p*$22500$17Rald)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$22501$17Rald)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$22500$17Rald)
                                                                                                                            (car g$x$22501$17Rald))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$22499$17Rald
                                                                                                                             (cdr g$p*$22500$17Rald)
                                                                                                                             (cdr g$x$22501$17Rald)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$22499$17Rald)
                                                                                                     g$p*$22497$17Rald
                                                                                                     g$x$22498$17Rald)))))
                                                                                              (g$map$11835$17Rald
                                                                                                g$subversion-pred$22440$17Rald
                                                                                                g$sub*$22496$17Rald))))
                                                                                          g$ls/false$22495$17Rald)
                                                                                        ((case-lambda
                                                                                           ((g$t$22502$17Rald)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22503$17Rald)
                                                                                                (if g$ls/false$22503$17Rald
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$19839$17Rald
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$22438$17Rald
                                                                                                         g$x*$22464$17Rald)))
                                                                                                    g$ls/false$22503$17Rald)
                                                                                                  (g$syntax-violation$19839$17Rald
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$22502$17Rald))))
                                                                                             (g$syntax-dispatch$19720$17Rald
                                                                                               g$t$22502$17Rald
                                                                                               '_))))
                                                                                         g$t$22494$17Rald))))
                                                                                   (g$syntax-dispatch$19720$17Rald
                                                                                     g$t$22494$17Rald
                                                                                     'each-any))))
                                                                               g$t$22486$17Rald))))
                                                                         (g$syntax-dispatch$19720$17Rald
                                                                           g$t$22486$17Rald
                                                                           '(any any)))))
                                                                     g$t$22477$17Rald))))
                                                               (g$syntax-dispatch$19720$17Rald
                                                                 g$t$22477$17Rald
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$22468$17Rald))))
                                                     (g$syntax-dispatch$19720$17Rald
                                                       g$t$22468$17Rald
                                                       '(any .
                                                             each-any)))))
                                                 g$t$22465$17Rald))))
                                           (g$syntax-dispatch$19720$17Rald
                                             g$t$22465$17Rald
                                             '()))))
                                       g$x*$22464$17Rald)))))
                         ((letrec ((g$f$22442$17Rald
                                     (case-lambda
                                       ((g$x$22443$17Rald)
                                        ((case-lambda
                                           ((g$t$22444$17Rald)
                                            ((case-lambda
                                               ((g$ls/false$22445$17Rald)
                                                (if g$ls/false$22445$17Rald
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$22446$17Rald)
                                                       (values
                                                         '()
                                                         (g$version-pred$22441$17Rald
                                                           g$version-spec*$22446$17Rald))))
                                                    g$ls/false$22445$17Rald)
                                                  ((case-lambda
                                                     ((g$t$22447$17Rald)
                                                      ((case-lambda
                                                         ((g$ls/false$22448$17Rald)
                                                          (if (if g$ls/false$22448$17Rald
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$22449$17Rald
                                                                         g$x*$22450$17Rald)
                                                                       (g$idsyn?$22337$17Rald
                                                                         g$x$22449$17Rald)))
                                                                    g$ls/false$22448$17Rald))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$22451$17Rald
                                                                   g$x*$22452$17Rald)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$22442$17Rald
                                                                        g$x*$22452$17Rald)))
                                                                   (case-lambda
                                                                     ((g$name$22455$17Rald
                                                                        g$pred$22456$17Rald)
                                                                      ((case-lambda
                                                                         ((g$pred$22457$17Rald
                                                                            g$name$22458$17Rald)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$19842$17Rald
                                                                                g$x$22451$17Rald)
                                                                              g$name$22458$17Rald)
                                                                            g$pred$22457$17Rald)))
                                                                       g$pred$22456$17Rald
                                                                       g$name$22455$17Rald))))))
                                                              g$ls/false$22448$17Rald)
                                                            ((case-lambda
                                                               ((g$t$22459$17Rald)
                                                                ((case-lambda
                                                                   ((g$ls/false$22460$17Rald)
                                                                    (if g$ls/false$22460$17Rald
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$22461$17Rald)
                                                                                '#t)))))
                                                                        g$ls/false$22460$17Rald)
                                                                      ((case-lambda
                                                                         ((g$t$22462$17Rald)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22463$17Rald)
                                                                              (if g$ls/false$22463$17Rald
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$19839$17Rald
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$22438$17Rald)))
                                                                                  g$ls/false$22463$17Rald)
                                                                                (g$syntax-violation$19839$17Rald
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$22462$17Rald))))
                                                                           (g$syntax-dispatch$19720$17Rald
                                                                             g$t$22462$17Rald
                                                                             '_))))
                                                                       g$t$22459$17Rald))))
                                                                 (g$syntax-dispatch$19720$17Rald
                                                                   g$t$22459$17Rald
                                                                   '()))))
                                                             g$t$22447$17Rald))))
                                                       (g$syntax-dispatch$19720$17Rald
                                                         g$t$22447$17Rald
                                                         '(any .
                                                               any)))))
                                                   g$t$22444$17Rald))))
                                             (g$syntax-dispatch$19720$17Rald
                                               g$t$22444$17Rald
                                               '(each-any)))))
                                         g$x$22443$17Rald)))))
                            g$f$22442$17Rald)
                          g$spec$22438$17Rald)))))
                  (g$import-library$22345$17Rald
                    (case-lambda
                      ((g$spec*$22430$17Rald)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$22344$17Rald
                              g$spec*$22430$17Rald)))
                         (case-lambda
                           ((g$name$22433$17Rald g$pred$22434$17Rald)
                            ((case-lambda
                               ((g$pred$22435$17Rald
                                  g$name$22436$17Rald)
                                (begin
                                  (if (null? g$name$22436$17Rald)
                                    (g$syntax-violation$19839$17Rald
                                      'import
                                      '"empty library name"
                                      g$spec*$22430$17Rald)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$22437$17Rald)
                                      (begin
                                        (if (not g$lib$22437$17Rald)
                                          (g$syntax-violation$19839$17Rald
                                            'import
                                            '"cannot find library with required name"
                                            g$name$22436$17Rald)
                                          (void))
                                        (if (not (g$pred$22435$17Rald
                                                   (g$library-version$18881$17Rald
                                                     g$lib$22437$17Rald)))
                                          (g$syntax-violation$19839$17Rald
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$22430$17Rald
                                            g$lib$22437$17Rald)
                                          (void))
                                        ((g$imp-collector$19777$17Rald)
                                         g$lib$22437$17Rald)
                                        (g$library-subst$18885$17Rald
                                          g$lib$22437$17Rald))))
                                   (g$find-library-by-name$18921$17Rald
                                     g$name$22436$17Rald)))))
                             g$pred$22434$17Rald
                             g$name$22433$17Rald)))))))
                  (g$get-import$22346$17Rald
                    (case-lambda
                      ((g$spec$22359$17Rald)
                       ((case-lambda
                          ((g$t$22360$17Rald)
                           ((case-lambda
                              ((g$ls/false$22361$17Rald)
                               (if (if g$ls/false$22361$17Rald
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$22362$17Rald
                                              g$x*$22363$17Rald)
                                            (not (g$memq$11827$17Rald
                                                   (g$syntax->datum$19842$17Rald
                                                     g$x$22362$17Rald)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$22361$17Rald))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$22364$17Rald
                                        g$x*$22365$17Rald)
                                      (g$import-library$22345$17Rald
                                        (cons
                                          g$x$22364$17Rald
                                          g$x*$22365$17Rald))))
                                   g$ls/false$22361$17Rald)
                                 ((case-lambda
                                    ((g$t$22366$17Rald)
                                     ((case-lambda
                                        ((g$ls/false$22367$17Rald)
                                         (if (if g$ls/false$22367$17Rald
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$22368$17Rald
                                                        g$isp$22369$17Rald
                                                        g$old*$22370$17Rald
                                                        g$new*$22371$17Rald)
                                                      (if (eq? (g$syntax->datum$19842$17Rald
                                                                 g$rename$22368$17Rald)
                                                               'rename)
                                                        (if (g$for-all$11833$17Rald
                                                              g$idsyn?$22337$17Rald
                                                              g$old*$22370$17Rald)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11833$17Rald
                                                              g$idsyn?$22337$17Rald
                                                              g$new*$22371$17Rald))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$22367$17Rald))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$22372$17Rald
                                                  g$isp$22373$17Rald
                                                  g$old*$22374$17Rald
                                                  g$new*$22375$17Rald)
                                                ((case-lambda
                                                   ((g$subst$22376$17Rald
                                                      g$old*$22377$17Rald
                                                      g$new*$22378$17Rald)
                                                    ((case-lambda
                                                       ((g$old-label*$22379$17Rald)
                                                        ((case-lambda
                                                           ((g$subst$22380$17Rald)
                                                            (g$merge-substs$22339$17Rald
                                                              (g$map$11835$17Rald
                                                                cons
                                                                g$new*$22378$17Rald
                                                                g$old-label*$22379$17Rald)
                                                              g$subst$22380$17Rald)))
                                                         (g$rem*$22342$17Rald
                                                           g$old*$22377$17Rald
                                                           g$subst$22376$17Rald))))
                                                     (g$find*$22341$17Rald
                                                       g$old*$22377$17Rald
                                                       g$subst$22376$17Rald))))
                                                 (g$get-import$22346$17Rald
                                                   g$isp$22373$17Rald)
                                                 (g$map$11835$17Rald
                                                   g$syntax->datum$19842$17Rald
                                                   g$old*$22374$17Rald)
                                                 (g$map$11835$17Rald
                                                   g$syntax->datum$19842$17Rald
                                                   g$new*$22375$17Rald))))
                                             g$ls/false$22367$17Rald)
                                           ((case-lambda
                                              ((g$t$22381$17Rald)
                                               ((case-lambda
                                                  ((g$ls/false$22382$17Rald)
                                                   (if (if g$ls/false$22382$17Rald
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$22383$17Rald
                                                                  g$isp$22384$17Rald
                                                                  g$sym*$22385$17Rald)
                                                                (if (eq? (g$syntax->datum$19842$17Rald
                                                                           g$except$22383$17Rald)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11833$17Rald
                                                                      g$idsyn?$22337$17Rald
                                                                      g$sym*$22385$17Rald))
                                                                  '#f)))
                                                             g$ls/false$22382$17Rald))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$22386$17Rald
                                                            g$isp$22387$17Rald
                                                            g$sym*$22388$17Rald)
                                                          ((case-lambda
                                                             ((g$subst$22389$17Rald)
                                                              (g$rem*$22342$17Rald
                                                                (g$map$11835$17Rald
                                                                  g$syntax->datum$19842$17Rald
                                                                  g$sym*$22388$17Rald)
                                                                g$subst$22389$17Rald)))
                                                           (g$get-import$22346$17Rald
                                                             g$isp$22387$17Rald))))
                                                       g$ls/false$22382$17Rald)
                                                     ((case-lambda
                                                        ((g$t$22390$17Rald)
                                                         ((case-lambda
                                                            ((g$ls/false$22391$17Rald)
                                                             (if (if g$ls/false$22391$17Rald
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$22392$17Rald
                                                                            g$isp$22393$17Rald
                                                                            g$sym*$22394$17Rald)
                                                                          (if (eq? (g$syntax->datum$19842$17Rald
                                                                                     g$only$22392$17Rald)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11833$17Rald
                                                                                g$idsyn?$22337$17Rald
                                                                                g$sym*$22394$17Rald))
                                                                            '#f)))
                                                                       g$ls/false$22391$17Rald))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$22395$17Rald
                                                                      g$isp$22396$17Rald
                                                                      g$sym*$22397$17Rald)
                                                                    ((case-lambda
                                                                       ((g$subst$22398$17Rald
                                                                          g$sym*$22399$17Rald)
                                                                        ((case-lambda
                                                                           ((g$sym*$22400$17Rald)
                                                                            ((case-lambda
                                                                               ((g$lab*$22401$17Rald)
                                                                                (g$map$11835$17Rald
                                                                                  cons
                                                                                  g$sym*$22400$17Rald
                                                                                  g$lab*$22401$17Rald)))
                                                                             (g$find*$22341$17Rald
                                                                               g$sym*$22400$17Rald
                                                                               g$subst$22398$17Rald))))
                                                                         (g$remove-dups$22343$17Rald
                                                                           g$sym*$22399$17Rald))))
                                                                     (g$get-import$22346$17Rald
                                                                       g$isp$22396$17Rald)
                                                                     (g$map$11835$17Rald
                                                                       g$syntax->datum$19842$17Rald
                                                                       g$sym*$22397$17Rald))))
                                                                 g$ls/false$22391$17Rald)
                                                               ((case-lambda
                                                                  ((g$t$22402$17Rald)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22403$17Rald)
                                                                       (if (if g$ls/false$22403$17Rald
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$22404$17Rald
                                                                                      g$isp$22405$17Rald
                                                                                      g$p$22406$17Rald)
                                                                                    (if (eq? (g$syntax->datum$19842$17Rald
                                                                                               g$prefix$22404$17Rald)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$22337$17Rald
                                                                                          g$p$22406$17Rald))
                                                                                      '#f)))
                                                                                 g$ls/false$22403$17Rald))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$22407$17Rald
                                                                                g$isp$22408$17Rald
                                                                                g$p$22409$17Rald)
                                                                              ((case-lambda
                                                                                 ((g$subst$22410$17Rald
                                                                                    g$prefix$22411$17Rald)
                                                                                  (g$map$11835$17Rald
                                                                                    (case-lambda
                                                                                      ((g$x$22412$17Rald)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$22411$17Rald
                                                                                             (symbol->string
                                                                                               (car g$x$22412$17Rald))))
                                                                                         (cdr g$x$22412$17Rald))))
                                                                                    g$subst$22410$17Rald)))
                                                                               (g$get-import$22346$17Rald
                                                                                 g$isp$22408$17Rald)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$19842$17Rald
                                                                                   g$p$22409$17Rald)))))
                                                                           g$ls/false$22403$17Rald)
                                                                         ((case-lambda
                                                                            ((g$t$22413$17Rald)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22414$17Rald)
                                                                                 (if (if g$ls/false$22414$17Rald
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$22415$17Rald
                                                                                                g$spec*$22416$17Rald)
                                                                                              (eq? (g$syntax->datum$19842$17Rald
                                                                                                     g$library$22415$17Rald)
                                                                                                   'library)))
                                                                                           g$ls/false$22414$17Rald))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$22417$17Rald
                                                                                          g$spec*$22418$17Rald)
                                                                                        (g$import-library$22345$17Rald
                                                                                          g$spec*$22418$17Rald)))
                                                                                     g$ls/false$22414$17Rald)
                                                                                   ((case-lambda
                                                                                      ((g$t$22419$17Rald)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22420$17Rald)
                                                                                           (if (if g$ls/false$22420$17Rald
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$22421$17Rald
                                                                                                          g$isp$22422$17Rald
                                                                                                          g$rest$22423$17Rald)
                                                                                                        (eq? (g$syntax->datum$19842$17Rald
                                                                                                               g$for$22421$17Rald)
                                                                                                             'for)))
                                                                                                     g$ls/false$22420$17Rald))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$22424$17Rald
                                                                                                    g$isp$22425$17Rald
                                                                                                    g$rest$22426$17Rald)
                                                                                                  (g$get-import$22346$17Rald
                                                                                                    g$isp$22425$17Rald)))
                                                                                               g$ls/false$22420$17Rald)
                                                                                             ((case-lambda
                                                                                                ((g$t$22427$17Rald)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$22428$17Rald)
                                                                                                     (if g$ls/false$22428$17Rald
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$22429$17Rald)
                                                                                                            (g$syntax-violation$19839$17Rald
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$22429$17Rald)))
                                                                                                         g$ls/false$22428$17Rald)
                                                                                                       (g$syntax-violation$19839$17Rald
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$22427$17Rald))))
                                                                                                  (g$syntax-dispatch$19720$17Rald
                                                                                                    g$t$22427$17Rald
                                                                                                    'any))))
                                                                                              g$t$22419$17Rald))))
                                                                                        (g$syntax-dispatch$19720$17Rald
                                                                                          g$t$22419$17Rald
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$22413$17Rald))))
                                                                              (g$syntax-dispatch$19720$17Rald
                                                                                g$t$22413$17Rald
                                                                                '(any each-any)))))
                                                                          g$t$22402$17Rald))))
                                                                    (g$syntax-dispatch$19720$17Rald
                                                                      g$t$22402$17Rald
                                                                      '(any any
                                                                            any)))))
                                                                g$t$22390$17Rald))))
                                                          (g$syntax-dispatch$19720$17Rald
                                                            g$t$22390$17Rald
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$22381$17Rald))))
                                                (g$syntax-dispatch$19720$17Rald
                                                  g$t$22381$17Rald
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$22366$17Rald))))
                                      (g$syntax-dispatch$19720$17Rald
                                        g$t$22366$17Rald
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$22360$17Rald))))
                            (g$syntax-dispatch$19720$17Rald
                              g$t$22360$17Rald
                              '(any . each-any)))))
                        g$spec$22359$17Rald))))
                  (g$add-imports!$22347$17Rald
                    (case-lambda
                      ((g$imp$22351$17Rald g$h$22352$17Rald)
                       ((case-lambda
                          ((g$subst$22353$17Rald)
                           (g$for-each$11836$17Rald
                             (case-lambda
                               ((g$x$22354$17Rald)
                                ((case-lambda
                                   ((g$name$22355$17Rald
                                      g$label$22356$17Rald)
                                    ((case-lambda
                                       ((g$t$22357$17Rald)
                                        (if g$t$22357$17Rald
                                          ((case-lambda
                                             ((g$l$22358$17Rald)
                                              (if (not (eq? g$l$22358$17Rald
                                                            g$label$22356$17Rald))
                                                (g$dup-error$22338$17Rald
                                                  g$name$22355$17Rald)
                                                (void))))
                                           g$t$22357$17Rald)
                                          (g$hashtable-set!$12723$17Rald
                                            g$h$22352$17Rald
                                            g$name$22355$17Rald
                                            g$label$22356$17Rald))))
                                     (g$hashtable-ref$12722$17Rald
                                       g$h$22352$17Rald
                                       g$name$22355$17Rald
                                       '#f))))
                                 (car g$x$22354$17Rald)
                                 (cdr g$x$22354$17Rald))))
                             g$subst$22353$17Rald)))
                        (g$get-import$22346$17Rald
                          g$imp$22351$17Rald))))))
          ((letrec ((g$f$22348$17Rald
                      (case-lambda
                        ((g$imp*$22349$17Rald g$h$22350$17Rald)
                         (if (null? g$imp*$22349$17Rald)
                           (hashtable-entries g$h$22350$17Rald)
                           (begin
                             (g$add-imports!$22347$17Rald
                               (car g$imp*$22349$17Rald)
                               g$h$22350$17Rald)
                             (g$f$22348$17Rald
                               (cdr g$imp*$22349$17Rald)
                               g$h$22350$17Rald)))))))
             g$f$22348$17Rald)
           g$imp*$22336$17Rald
           (g$make-eq-hashtable$12719$17Rald))))))
   (g$make-top-rib$19773$17Rald
     g$make-top-rib$23367$17Rald
     (case-lambda
       ((g$names$22598$17Rald g$labels$22599$17Rald)
        ((case-lambda
           ((g$rib$22600$17Rald)
            (begin
              (g$vector-for-each$12680$17Rald
                (case-lambda
                  ((g$name$22601$17Rald g$label$22602$17Rald)
                   (begin
                     (if (not (g$symbol?$12610$17Rald
                                g$name$22601$17Rald))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$22601$17Rald)
                       (void))
                     (g$extend-rib/nc!$19184$17Rald
                       g$rib$22600$17Rald
                       (g$make-stx$19195$17Rald
                         g$name$22601$17Rald
                         g$top-mark*$19155$17Rald
                         '()
                         '())
                       g$label$22602$17Rald))))
                g$names$22598$17Rald
                g$labels$22599$17Rald)
              g$rib$22600$17Rald)))
         (g$make-cache-rib$19181$17Rald)))))
   (g$make-collector$19774$17Rald
     g$make-collector$23368$17Rald
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$22603$17Rald)
            (case-lambda
              (() g$ls$22603$17Rald)
              ((g$x$22604$17Rald)
               (set! g$ls$22603$17Rald
                 (g$set-cons$19152$17Rald
                   g$x$22604$17Rald
                   g$ls$22603$17Rald))))))
         '()))))
   (g$inv-collector$19775$17Rald
     g$inv-collector$23369$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         (g$args$22605$17Rald
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22606$17Rald)
          (begin
            (if (not (g$procedure?$12612$17Rald g$x$22606$17Rald))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$22606$17Rald)
              (void))
            g$x$22606$17Rald)))))
   (g$vis-collector$19776$17Rald
     g$vis-collector$23370$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         (g$args$22607$17Rald
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22608$17Rald)
          (begin
            (if (not (g$procedure?$12612$17Rald g$x$22608$17Rald))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$22608$17Rald)
              (void))
            g$x$22608$17Rald)))))
   (g$imp-collector$19777$17Rald
     g$imp-collector$23371$17Rald
     (g$make-parameter$18083$17Rald
       (case-lambda
         (g$args$22609$17Rald
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22610$17Rald)
          (begin
            (if (not (g$procedure?$12612$17Rald g$x$22610$17Rald))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$22610$17Rald)
              (void))
            g$x$22610$17Rald)))))
   (g$chi-library-internal$19778$17Rald
     g$chi-library-internal$23372$17Rald
     (case-lambda
       ((g$e*$22611$17Rald g$rib$22612$17Rald g$mix?$22613$17Rald)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$19767$17Rald
               g$e*$22611$17Rald
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$22612$17Rald
               g$mix?$22613$17Rald
               '#t)))
          (case-lambda
            ((g$e*$22622$17Rald
               g$r$22623$17Rald
               g$mr$22624$17Rald
               g$lex*$22625$17Rald
               g$rhs*$22626$17Rald
               g$mod**$22627$17Rald
               g$_kwd*$22628$17Rald
               g$exp*$22629$17Rald)
             ((case-lambda
                ((g$exp*$22630$17Rald
                   g$_kwd*$22631$17Rald
                   g$mod**$22632$17Rald
                   g$rhs*$22633$17Rald
                   g$lex*$22634$17Rald
                   g$mr$22635$17Rald
                   g$r$22636$17Rald
                   g$e*$22637$17Rald)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12626$17Rald g$mod**$22632$17Rald))
                     g$e*$22637$17Rald)
                   g$r$22636$17Rald
                   g$mr$22635$17Rald
                   (g$reverse$12626$17Rald g$lex*$22634$17Rald)
                   (g$reverse$12626$17Rald g$rhs*$22633$17Rald)
                   g$exp*$22630$17Rald)))
              g$exp*$22629$17Rald
              g$_kwd*$22628$17Rald
              g$mod**$22627$17Rald
              g$rhs*$22626$17Rald
              g$lex*$22625$17Rald
              g$mr$22624$17Rald
              g$r$22623$17Rald
              g$e*$22622$17Rald)))))))
   (g$chi-interaction-expr$19779$17Rald
     g$chi-interaction-expr$23373$17Rald
     (case-lambda
       ((g$e$22638$17Rald g$rib$22639$17Rald g$r$22640$17Rald)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$19767$17Rald
               (list g$e$22638$17Rald)
               g$r$22640$17Rald
               g$r$22640$17Rald
               '()
               '()
               '()
               '()
               '()
               g$rib$22639$17Rald
               '#t
               '#f)))
          (case-lambda
            ((g$e*$22649$17Rald
               g$r$22650$17Rald
               g$mr$22651$17Rald
               g$lex*$22652$17Rald
               g$rhs*$22653$17Rald
               g$mod**$22654$17Rald
               g$_kwd*$22655$17Rald
               g$_exp*$22656$17Rald)
             ((case-lambda
                ((g$_exp*$22657$17Rald
                   g$_kwd*$22658$17Rald
                   g$mod**$22659$17Rald
                   g$rhs*$22660$17Rald
                   g$lex*$22661$17Rald
                   g$mr$22662$17Rald
                   g$r$22663$17Rald
                   g$e*$22664$17Rald)
                 ((case-lambda
                    ((g$e*$22665$17Rald)
                     ((case-lambda
                        ((g$e$22666$17Rald)
                         (values g$e$22666$17Rald g$r$22663$17Rald)))
                      (if (null? g$e*$22665$17Rald)
                        (g$build-void$19148$17Rald)
                        (if (null? (cdr g$e*$22665$17Rald))
                          (car g$e*$22665$17Rald)
                          (g$build-sequence$19147$17Rald
                            '#f
                            g$e*$22665$17Rald))))))
                  (g$expand-interaction-rhs*/init*$19745$17Rald
                    (g$reverse$12626$17Rald g$lex*$22661$17Rald)
                    (g$reverse$12626$17Rald g$rhs*$22660$17Rald)
                    (append
                      (apply
                        append
                        (g$reverse$12626$17Rald g$mod**$22659$17Rald))
                      g$e*$22664$17Rald)
                    g$r$22663$17Rald
                    g$mr$22662$17Rald))))
              g$_exp*$22656$17Rald
              g$_kwd*$22655$17Rald
              g$mod**$22654$17Rald
              g$rhs*$22653$17Rald
              g$lex*$22652$17Rald
              g$mr$22651$17Rald
              g$r$22650$17Rald
              g$e*$22649$17Rald)))))))
   (g$library-body-expander$19780$17Rald
     g$library-body-expander$23374$17Rald
     (case-lambda
       ((g$name$22667$17Rald
          g$main-exp*$22668$17Rald
          g$imp*$22669$17Rald
          g$b*$22670$17Rald
          g$mix?$22671$17Rald)
        (letrec* ((g$itc$22672$17Rald (g$make-collector$19774$17Rald)))
          ((case-lambda
             ((g$imp-collector$22677$17Rald
                g$top-level-context$22678$17Rald
                g$imp-collector$22679$17Rald
                g$top-level-context$22680$17Rald)
              ((case-lambda
                 ((g$swap$22681$17Rald)
                  (dynamic-wind
                    g$swap$22681$17Rald
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$19772$17Rald
                              g$imp*$22669$17Rald)))
                         (case-lambda
                           ((g$subst-names$22684$17Rald
                              g$subst-labels$22685$17Rald)
                            ((case-lambda
                               ((g$subst-labels$22686$17Rald
                                  g$subst-names$22687$17Rald)
                                ((case-lambda
                                   ((g$rib$22688$17Rald)
                                    (letrec* ((g$wrap$22689$17Rald
                                                (case-lambda
                                                  ((g$x$22751$17Rald)
                                                   (g$make-stx$19195$17Rald
                                                     g$x$22751$17Rald
                                                     g$top-mark*$19155$17Rald
                                                     (list
                                                       g$rib$22688$17Rald)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$22690$17Rald
                                            g$main-exp*$22691$17Rald
                                            g$rtc$22692$17Rald
                                            g$vtc$22693$17Rald)
                                          ((case-lambda
                                             ((g$inv-collector$22698$17Rald
                                                g$vis-collector$22699$17Rald
                                                g$inv-collector$22700$17Rald
                                                g$vis-collector$22701$17Rald)
                                              ((case-lambda
                                                 ((g$swap$22702$17Rald)
                                                  (dynamic-wind
                                                    g$swap$22702$17Rald
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$19778$17Rald
                                                              g$b*$22690$17Rald
                                                              g$rib$22688$17Rald
                                                              g$mix?$22671$17Rald)))
                                                         (case-lambda
                                                           ((g$init*$22709$17Rald
                                                              g$r$22710$17Rald
                                                              g$mr$22711$17Rald
                                                              g$lex*$22712$17Rald
                                                              g$rhs*$22713$17Rald
                                                              g$internal-exp*$22714$17Rald)
                                                            ((case-lambda
                                                               ((g$internal-exp*$22715$17Rald
                                                                  g$rhs*$22716$17Rald
                                                                  g$lex*$22717$17Rald
                                                                  g$mr$22718$17Rald
                                                                  g$r$22719$17Rald
                                                                  g$init*$22720$17Rald)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$19769$17Rald
                                                                       (append
                                                                         g$main-exp*$22691$17Rald
                                                                         g$internal-exp*$22715$17Rald))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$22723$17Rald
                                                                       g$exp-id*$22724$17Rald)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$22725$17Rald
                                                                           g$exp-name*$22726$17Rald)
                                                                         (begin
                                                                           (g$seal-rib!$19186$17Rald
                                                                             g$rib$22688$17Rald)
                                                                           ((case-lambda
                                                                              ((g$init*$22727$17Rald)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$22728$17Rald)
                                                                                   (begin
                                                                                     (g$unseal-rib!$19187$17Rald
                                                                                       g$rib$22688$17Rald)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$22729$17Rald
                                                                                           g$export-subst$22730$17Rald)
                                                                                         (letrec* ((g$errstr$22731$17Rald
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$19828$17Rald
                                                                                                  g$lex*$22717$17Rald
                                                                                                  g$loc*$22729$17Rald
                                                                                                  g$r$22719$17Rald)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$22735$17Rald
                                                                                                  g$global*$22736$17Rald
                                                                                                  g$macro*$22737$17Rald)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$22738$17Rald
                                                                                                      g$global*$22739$17Rald
                                                                                                      g$export-env$22740$17Rald)
                                                                                                    (begin
                                                                                                      (g$for-each$11836$17Rald
                                                                                                        (case-lambda
                                                                                                          ((g$s$22741$17Rald)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$22742$17Rald
                                                                                                                 g$label$22743$17Rald)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$22744$17Rald)
                                                                                                                   (if g$p$22744$17Rald
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$22745$17Rald)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$22746$17Rald)
                                                                                                                             (if (eq? g$type$22746$17Rald
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$19839$17Rald
                                                                                                                                 'export
                                                                                                                                 g$errstr$22731$17Rald
                                                                                                                                 g$name$22742$17Rald)
                                                                                                                               (void))))
                                                                                                                          (car g$b$22745$17Rald))))
                                                                                                                      (cdr g$p$22744$17Rald))
                                                                                                                     (void))))
                                                                                                                (g$assq$11823$17Rald
                                                                                                                  g$label$22743$17Rald
                                                                                                                  g$export-env$22740$17Rald))))
                                                                                                            (car g$s$22741$17Rald)
                                                                                                            (cdr g$s$22741$17Rald))))
                                                                                                        g$export-subst$22730$17Rald)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$22747$17Rald
                                                                                                            g$invoke-definitions$22748$17Rald)
                                                                                                          (values
                                                                                                            (g$itc$22672$17Rald)
                                                                                                            (g$rtc$22692$17Rald)
                                                                                                            (g$vtc$22693$17Rald)
                                                                                                            (g$build-sequence$19147$17Rald
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$22748$17Rald
                                                                                                                (list
                                                                                                                  g$invoke-body$22747$17Rald)))
                                                                                                            g$macro*$22738$17Rald
                                                                                                            g$export-subst$22730$17Rald
                                                                                                            g$export-env$22740$17Rald)))
                                                                                                       (g$build-library-letrec*$19151$17Rald
                                                                                                         '#f
                                                                                                         g$name$22667$17Rald
                                                                                                         g$lex*$22717$17Rald
                                                                                                         g$loc*$22729$17Rald
                                                                                                         g$rhs*$22728$17Rald
                                                                                                         (if (null?
                                                                                                               g$init*$22727$17Rald)
                                                                                                           (g$build-void$19148$17Rald)
                                                                                                           (g$build-sequence$19147$17Rald
                                                                                                             '#f
                                                                                                             g$init*$22727$17Rald)))
                                                                                                       (g$map$11835$17Rald
                                                                                                         g$build-global-define$19143$17Rald
                                                                                                         (g$map$11835$17Rald
                                                                                                           cdr
                                                                                                           g$global*$22739$17Rald))))))
                                                                                                 g$macro*$22737$17Rald
                                                                                                 g$global*$22736$17Rald
                                                                                                 g$export-env$22735$17Rald)))))))
                                                                                      (g$map$11835$17Rald
                                                                                        g$gen-global$19158$17Rald
                                                                                        g$lex*$22717$17Rald)
                                                                                      (g$make-export-subst$19827$17Rald
                                                                                        g$exp-name*$22726$17Rald
                                                                                        g$exp-id*$22725$17Rald)))))
                                                                                (g$chi-rhs*$19746$17Rald
                                                                                  g$rhs*$22716$17Rald
                                                                                  g$r$22719$17Rald
                                                                                  g$mr$22718$17Rald))))
                                                                            (g$chi-expr*$19736$17Rald
                                                                              g$init*$22720$17Rald
                                                                              g$r$22719$17Rald
                                                                              g$mr$22718$17Rald)))))
                                                                      g$exp-id*$22724$17Rald
                                                                      g$exp-name*$22723$17Rald))))))
                                                             g$internal-exp*$22714$17Rald
                                                             g$rhs*$22713$17Rald
                                                             g$lex*$22712$17Rald
                                                             g$mr$22711$17Rald
                                                             g$r$22710$17Rald
                                                             g$init*$22709$17Rald))))))
                                                    g$swap$22702$17Rald)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$22749$17Rald)
                                                        (begin
                                                          (g$inv-collector$22698$17Rald
                                                            g$inv-collector$22700$17Rald)
                                                          (set! g$inv-collector$22700$17Rald
                                                            g$t$22749$17Rald))))
                                                     (g$inv-collector$22698$17Rald))
                                                    ((case-lambda
                                                       ((g$t$22750$17Rald)
                                                        (begin
                                                          (g$vis-collector$22699$17Rald
                                                            g$vis-collector$22701$17Rald)
                                                          (set! g$vis-collector$22701$17Rald
                                                            g$t$22750$17Rald))))
                                                     (g$vis-collector$22699$17Rald))))))))
                                           g$inv-collector$19775$17Rald
                                           g$vis-collector$19776$17Rald
                                           g$rtc$22692$17Rald
                                           g$vtc$22693$17Rald)))
                                       (g$map$11835$17Rald
                                         g$wrap$22689$17Rald
                                         g$b*$22670$17Rald)
                                       (g$map$11835$17Rald
                                         g$wrap$22689$17Rald
                                         g$main-exp*$22668$17Rald)
                                       (g$make-collector$19774$17Rald)
                                       (g$make-collector$19774$17Rald)))))
                                 (g$make-top-rib$19773$17Rald
                                   g$subst-names$22687$17Rald
                                   g$subst-labels$22686$17Rald))))
                             g$subst-labels$22685$17Rald
                             g$subst-names$22684$17Rald))))))
                    g$swap$22681$17Rald)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$22752$17Rald)
                        (begin
                          (g$imp-collector$22677$17Rald
                            g$imp-collector$22679$17Rald)
                          (set! g$imp-collector$22679$17Rald
                            g$t$22752$17Rald))))
                     (g$imp-collector$22677$17Rald))
                    ((case-lambda
                       ((g$t$22753$17Rald)
                        (begin
                          (g$top-level-context$22678$17Rald
                            g$top-level-context$22680$17Rald)
                          (set! g$top-level-context$22680$17Rald
                            g$t$22753$17Rald))))
                     (g$top-level-context$22678$17Rald))))))))
           g$imp-collector$19777$17Rald
           g$top-level-context$19847$17Rald
           g$itc$22672$17Rald
           '#f)))))
   (g$core-library-expander$19781$17Rald
     g$core-library-expander$23375$17Rald
     (case-lambda
       ((g$e$22754$17Rald g$verify-name$22755$17Rald)
        (call-with-values
          (case-lambda
            (() (g$parse-library$19771$17Rald g$e$22754$17Rald)))
          (case-lambda
            ((g$name*$22760$17Rald
               g$exp*$22761$17Rald
               g$imp*$22762$17Rald
               g$b*$22763$17Rald)
             ((case-lambda
                ((g$b*$22764$17Rald
                   g$imp*$22765$17Rald
                   g$exp*$22766$17Rald
                   g$name*$22767$17Rald)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$19770$17Rald
                        g$name*$22767$17Rald)))
                   (case-lambda
                     ((g$name$22770$17Rald g$ver$22771$17Rald)
                      ((case-lambda
                         ((g$ver$22772$17Rald g$name$22773$17Rald)
                          (begin
                            (g$verify-name$22755$17Rald
                              g$name$22773$17Rald)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$19780$17Rald
                                   g$name$22773$17Rald
                                   g$exp*$22766$17Rald
                                   g$imp*$22765$17Rald
                                   g$b*$22764$17Rald
                                   '#f)))
                              (case-lambda
                                ((g$imp*$22781$17Rald
                                   g$invoke-req*$22782$17Rald
                                   g$visit-req*$22783$17Rald
                                   g$invoke-code$22784$17Rald
                                   g$visit-code$22785$17Rald
                                   g$export-subst$22786$17Rald
                                   g$export-env$22787$17Rald)
                                 ((case-lambda
                                    ((g$export-env$22788$17Rald
                                       g$export-subst$22789$17Rald
                                       g$visit-code$22790$17Rald
                                       g$invoke-code$22791$17Rald
                                       g$visit-req*$22792$17Rald
                                       g$invoke-req*$22793$17Rald
                                       g$imp*$22794$17Rald)
                                     (values
                                       g$name$22773$17Rald
                                       g$ver$22772$17Rald
                                       g$imp*$22794$17Rald
                                       g$invoke-req*$22793$17Rald
                                       g$visit-req*$22792$17Rald
                                       g$invoke-code$22791$17Rald
                                       g$visit-code$22790$17Rald
                                       g$export-subst$22789$17Rald
                                       g$export-env$22788$17Rald)))
                                  g$export-env$22787$17Rald
                                  g$export-subst$22786$17Rald
                                  g$visit-code$22785$17Rald
                                  g$invoke-code$22784$17Rald
                                  g$visit-req*$22783$17Rald
                                  g$invoke-req*$22782$17Rald
                                  g$imp*$22781$17Rald)))))))
                       g$ver$22771$17Rald
                       g$name$22770$17Rald))))))
              g$b*$22763$17Rald
              g$imp*$22762$17Rald
              g$exp*$22761$17Rald
              g$name*$22760$17Rald)))))))
   (g$parse-top-level-program$19782$17Rald
     g$parse-top-level-program$23376$17Rald
     (case-lambda
       ((g$e*$22795$17Rald)
        ((case-lambda
           ((g$t$22796$17Rald)
            ((case-lambda
               ((g$ls/false$22797$17Rald)
                (if (if g$ls/false$22797$17Rald
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$22798$17Rald
                               g$imp*$22799$17Rald
                               g$b*$22800$17Rald)
                             (eq? (g$syntax->datum$19842$17Rald
                                    g$import$22798$17Rald)
                                  'import)))
                          g$ls/false$22797$17Rald))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$22801$17Rald
                         g$imp*$22802$17Rald
                         g$b*$22803$17Rald)
                       (values g$imp*$22802$17Rald g$b*$22803$17Rald)))
                    g$ls/false$22797$17Rald)
                  ((case-lambda
                     ((g$t$22804$17Rald)
                      ((case-lambda
                         ((g$ls/false$22805$17Rald)
                          (if (if g$ls/false$22805$17Rald
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$22806$17Rald
                                         g$x$22807$17Rald
                                         g$y$22808$17Rald)
                                       (eq? (g$syntax->datum$19842$17Rald
                                              g$import$22806$17Rald)
                                            'import)))
                                    g$ls/false$22805$17Rald))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$22809$17Rald
                                   g$x$22810$17Rald
                                   g$y$22811$17Rald)
                                 (g$syntax-violation$19839$17Rald
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$19219$17Rald
                                     g$e*$22795$17Rald))))
                              g$ls/false$22805$17Rald)
                            ((case-lambda
                               ((g$t$22812$17Rald)
                                ((case-lambda
                                   ((g$ls/false$22813$17Rald)
                                    (if g$ls/false$22813$17Rald
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$22813$17Rald)
                                      (g$syntax-violation$19839$17Rald
                                        '#f
                                        '"invalid syntax"
                                        g$t$22812$17Rald))))
                                 (g$syntax-dispatch$19720$17Rald
                                   g$t$22812$17Rald
                                   '_))))
                             g$t$22804$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$22804$17Rald
                         '((any . any) . any)))))
                   g$t$22796$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$22796$17Rald
               '((any . each-any) . each-any)))))
         g$e*$22795$17Rald))))
   (g$top-level-expander$19783$17Rald
     g$top-level-expander$23377$17Rald
     (case-lambda
       ((g$e*$22814$17Rald)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$19782$17Rald
               g$e*$22814$17Rald)))
          (case-lambda
            ((g$imp*$22817$17Rald g$b*$22818$17Rald)
             ((case-lambda
                ((g$b*$22819$17Rald g$imp*$22820$17Rald)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$19780$17Rald
                        '()
                        '()
                        g$imp*$22820$17Rald
                        g$b*$22819$17Rald
                        '#t)))
                   (case-lambda
                     ((g$imp*$22828$17Rald
                        g$invoke-req*$22829$17Rald
                        g$visit-req*$22830$17Rald
                        g$invoke-code$22831$17Rald
                        g$visit-code$22832$17Rald
                        g$export-subst$22833$17Rald
                        g$export-env$22834$17Rald)
                      ((case-lambda
                         ((g$export-env$22835$17Rald
                            g$export-subst$22836$17Rald
                            g$visit-code$22837$17Rald
                            g$invoke-code$22838$17Rald
                            g$visit-req*$22839$17Rald
                            g$invoke-req*$22840$17Rald
                            g$imp*$22841$17Rald)
                          (values
                            g$invoke-req*$22840$17Rald
                            g$invoke-code$22838$17Rald)))
                       g$export-env$22834$17Rald
                       g$export-subst$22833$17Rald
                       g$visit-code$22832$17Rald
                       g$invoke-code$22831$17Rald
                       g$visit-req*$22830$17Rald
                       g$invoke-req*$22829$17Rald
                       g$imp*$22828$17Rald))))))
              g$b*$22818$17Rald
              g$imp*$22817$17Rald)))))))
   (g$9567$19784$17Rald
     g$9567$23378$17Rald
     (make-record-type-descriptor
       'env
       '#f
       'g$9570$17Rald
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9569$19785$17Rald g$9569$23379$17Rald '#f)
   (g$9568$19786$17Rald
     g$9568$23380$17Rald
     (make-record-constructor-descriptor
       g$9567$19784$17Rald
       '#f
       g$9569$19785$17Rald))
   (g$env?$19789$17Rald
     g$env?$23381$17Rald
     (record-predicate g$9567$19784$17Rald))
   (g$make-env$19790$17Rald
     g$make-env$23382$17Rald
     (record-constructor g$9568$19786$17Rald))
   (g$env-names$19791$17Rald
     g$env-names$23383$17Rald
     (record-accessor g$9567$19784$17Rald '0))
   (g$env-labels$19792$17Rald
     g$env-labels$23384$17Rald
     (record-accessor g$9567$19784$17Rald '1))
   (g$env-itc$19793$17Rald
     g$env-itc$23385$17Rald
     (record-accessor g$9567$19784$17Rald '2))
   (g$set-env-names!$19794$17Rald
     g$set-env-names!$23386$17Rald
     (record-mutator g$9567$19784$17Rald '0))
   (g$set-env-labels!$19795$17Rald
     g$set-env-labels!$23387$17Rald
     (record-mutator g$9567$19784$17Rald '1))
   (g$set-env-itc!$19796$17Rald
     g$set-env-itc!$23388$17Rald
     (record-mutator g$9567$19784$17Rald '2))
   (g$rp$19797$17Rald
     g$rp$23389$17Rald
     (make-record-printer
       'env
       (case-lambda
         ((g$x$22842$17Rald g$p$22843$17Rald g$wr$22844$17Rald)
          (display '"#<environment>" g$p$22843$17Rald)))))
   (g$9584$19798$17Rald
     g$9584$23390$17Rald
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9587$17Rald
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9586$19799$17Rald g$9586$23391$17Rald '#f)
   (g$9585$19800$17Rald
     g$9585$23392$17Rald
     (make-record-constructor-descriptor
       g$9584$19798$17Rald
       '#f
       g$9586$19799$17Rald))
   (g$interaction-env?$19803$17Rald
     g$interaction-env?$23393$17Rald
     (record-predicate g$9584$19798$17Rald))
   (g$make-interaction-env$19804$17Rald
     g$make-interaction-env$23394$17Rald
     (record-constructor g$9585$19800$17Rald))
   (g$interaction-env-rib$19805$17Rald
     g$interaction-env-rib$23395$17Rald
     (record-accessor g$9584$19798$17Rald '0))
   (g$interaction-env-r$19806$17Rald
     g$interaction-env-r$23396$17Rald
     (record-accessor g$9584$19798$17Rald '1))
   (g$interaction-env-locs$19807$17Rald
     g$interaction-env-locs$23397$17Rald
     (record-accessor g$9584$19798$17Rald '2))
   (g$set-interaction-env-rib!$19808$17Rald
     g$set-interaction-env-rib!$23398$17Rald
     (record-mutator g$9584$19798$17Rald '0))
   (g$set-interaction-env-r!$19809$17Rald
     g$set-interaction-env-r!$23399$17Rald
     (record-mutator g$9584$19798$17Rald '1))
   (g$set-interaction-env-locs!$19810$17Rald
     g$set-interaction-env-locs!$23400$17Rald
     (record-mutator g$9584$19798$17Rald '2))
   (g$rp$19811$17Rald
     g$rp$23401$17Rald
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$22845$17Rald g$p$22846$17Rald g$wr$22847$17Rald)
          (display '"#<environment>" g$p$22846$17Rald)))))
   (g$interaction-environment-symbols$19812$17Rald
     g$interaction-environment-symbols$23402$17Rald
     (case-lambda
       (()
        (g$environment-symbols$19816$17Rald
          (g$interaction-environment$19846$17Rald)))))
   (g$environment-bindings$19813$17Rald
     g$environment-bindings$23403$17Rald
     (case-lambda
       ((g$e$22848$17Rald)
        (vector->list
          (g$vector-map$12679$17Rald
            (case-lambda
              ((g$name$22849$17Rald g$label$22850$17Rald)
               (g$parse-binding$19814$17Rald
                 (cons
                   g$name$22849$17Rald
                   (g$imported-label->binding$18927$17Rald
                     g$label$22850$17Rald)))))
            (g$env-names$19791$17Rald g$e$22848$17Rald)
            (g$env-labels$19792$17Rald g$e$22848$17Rald))))))
   (g$parse-binding$19814$17Rald
     g$parse-binding$23404$17Rald
     (case-lambda
       ((g$b$22851$17Rald)
        (cons
          (car g$b$22851$17Rald)
          ((case-lambda
             ((g$t$22852$17Rald)
              (if (g$memv$11828$17Rald
                    g$t$22852$17Rald
                    '(core-prim global))
                'procedure
                (if (g$memv$11828$17Rald
                      g$t$22852$17Rald
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$22852$17Rald '$core-rtd)
                    'record
                    (if (eq? (car g$b$22851$17Rald)
                             (g$cadr$12628$17Rald g$b$22851$17Rald))
                      'syntax
                      'unknown))))))
           (g$cadr$12628$17Rald g$b$22851$17Rald))))))
   (g$environment?$19815$17Rald
     g$environment?$23405$17Rald
     (case-lambda
       ((g$x$22853$17Rald)
        ((case-lambda
           ((g$t$22854$17Rald)
            (if g$t$22854$17Rald
              g$t$22854$17Rald
              (begin
                '#f
                (g$interaction-env?$19803$17Rald g$x$22853$17Rald)))))
         (g$env?$19789$17Rald g$x$22853$17Rald)))))
   (g$environment-symbols$19816$17Rald
     g$environment-symbols$23406$17Rald
     (case-lambda
       ((g$x$22855$17Rald)
        (if (g$env?$19789$17Rald g$x$22855$17Rald)
          (vector->list (g$env-names$19791$17Rald g$x$22855$17Rald))
          (if (g$interaction-env?$19803$17Rald g$x$22855$17Rald)
            (g$map$11835$17Rald
              values
              (g$rib-sym*$19170$17Rald
                (g$interaction-env-rib$19805$17Rald g$x$22855$17Rald)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$22855$17Rald))))))
   (g$environment$19817$17Rald
     g$environment$23407$17Rald
     (case-lambda
       (g$imp*$22856$17Rald
        ((case-lambda
           ((g$itc$22857$17Rald)
            ((case-lambda
               ((g$imp-collector$22860$17Rald
                  g$imp-collector$22861$17Rald)
                ((case-lambda
                   ((g$swap$22862$17Rald)
                    (dynamic-wind
                      g$swap$22862$17Rald
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$19772$17Rald
                                g$imp*$22856$17Rald)))
                           (case-lambda
                             ((g$subst-names$22865$17Rald
                                g$subst-labels$22866$17Rald)
                              ((case-lambda
                                 ((g$subst-labels$22867$17Rald
                                    g$subst-names$22868$17Rald)
                                  (g$make-env$19790$17Rald
                                    g$subst-names$22868$17Rald
                                    g$subst-labels$22867$17Rald
                                    g$itc$22857$17Rald)))
                               g$subst-labels$22866$17Rald
                               g$subst-names$22865$17Rald))))))
                      g$swap$22862$17Rald)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$22869$17Rald)
                        (begin
                          (g$imp-collector$22860$17Rald
                            g$imp-collector$22861$17Rald)
                          (set! g$imp-collector$22861$17Rald
                            g$t$22869$17Rald))))
                     (g$imp-collector$22860$17Rald)))))))
             g$imp-collector$19777$17Rald
             g$itc$22857$17Rald)))
         (g$make-collector$19774$17Rald)))))
   (g$null-environment$19818$17Rald
     g$null-environment$23408$17Rald
     (case-lambda
       ((g$n$22870$17Rald)
        (begin
          (if (not (eqv? g$n$22870$17Rald '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$22870$17Rald)
            (void))
          (g$environment$19817$17Rald '(psyntax null-environment-5))))))
   (g$scheme-report-environment$19819$17Rald
     g$scheme-report-environment$23409$17Rald
     (case-lambda
       ((g$n$22871$17Rald)
        (begin
          (if (not (eqv? g$n$22871$17Rald '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$22871$17Rald)
            (void))
          (g$environment$19817$17Rald
            '(psyntax scheme-report-environment-5))))))
   (g$expand$19820$17Rald
     g$expand$23410$17Rald
     (case-lambda
       ((g$x$22872$17Rald g$env$22873$17Rald)
        (if (g$env?$19789$17Rald g$env$22873$17Rald)
          ((case-lambda
             ((g$rib$22874$17Rald)
              ((case-lambda
                 ((g$x$22875$17Rald
                    g$itc$22876$17Rald
                    g$rtc$22877$17Rald
                    g$vtc$22878$17Rald)
                  ((case-lambda
                     ((g$x$22879$17Rald)
                      (begin
                        (g$seal-rib!$19186$17Rald g$rib$22874$17Rald)
                        (values
                          g$x$22879$17Rald
                          (g$rtc$22877$17Rald)))))
                   ((case-lambda
                      ((g$top-level-context$22888$17Rald
                         g$inv-collector$22889$17Rald
                         g$vis-collector$22890$17Rald
                         g$imp-collector$22891$17Rald
                         g$top-level-context$22892$17Rald
                         g$inv-collector$22893$17Rald
                         g$vis-collector$22894$17Rald
                         g$imp-collector$22895$17Rald)
                       ((case-lambda
                          ((g$swap$22896$17Rald)
                           (dynamic-wind
                             g$swap$22896$17Rald
                             (case-lambda
                               (()
                                (g$chi-expr$19738$17Rald
                                  g$x$22875$17Rald
                                  '()
                                  '())))
                             g$swap$22896$17Rald)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$22897$17Rald)
                                 (begin
                                   (g$top-level-context$22888$17Rald
                                     g$top-level-context$22892$17Rald)
                                   (set! g$top-level-context$22892$17Rald
                                     g$t$22897$17Rald))))
                              (g$top-level-context$22888$17Rald))
                             ((case-lambda
                                ((g$t$22898$17Rald)
                                 (begin
                                   (g$inv-collector$22889$17Rald
                                     g$inv-collector$22893$17Rald)
                                   (set! g$inv-collector$22893$17Rald
                                     g$t$22898$17Rald))))
                              (g$inv-collector$22889$17Rald))
                             ((case-lambda
                                ((g$t$22899$17Rald)
                                 (begin
                                   (g$vis-collector$22890$17Rald
                                     g$vis-collector$22894$17Rald)
                                   (set! g$vis-collector$22894$17Rald
                                     g$t$22899$17Rald))))
                              (g$vis-collector$22890$17Rald))
                             ((case-lambda
                                ((g$t$22900$17Rald)
                                 (begin
                                   (g$imp-collector$22891$17Rald
                                     g$imp-collector$22895$17Rald)
                                   (set! g$imp-collector$22895$17Rald
                                     g$t$22900$17Rald))))
                              (g$imp-collector$22891$17Rald))))))))
                    g$top-level-context$19847$17Rald
                    g$inv-collector$19775$17Rald
                    g$vis-collector$19776$17Rald
                    g$imp-collector$19777$17Rald
                    '#f
                    g$rtc$22877$17Rald
                    g$vtc$22878$17Rald
                    g$itc$22876$17Rald))))
               (g$make-stx$19195$17Rald
                 g$x$22872$17Rald
                 g$top-mark*$19155$17Rald
                 (list g$rib$22874$17Rald)
                 '())
               (g$env-itc$19793$17Rald g$env$22873$17Rald)
               (g$make-collector$19774$17Rald)
               (g$make-collector$19774$17Rald))))
           (g$make-top-rib$19773$17Rald
             (g$env-names$19791$17Rald g$env$22873$17Rald)
             (g$env-labels$19792$17Rald g$env$22873$17Rald)))
          (if (g$interaction-env?$19803$17Rald g$env$22873$17Rald)
            ((case-lambda
               ((g$rib$22901$17Rald g$r$22902$17Rald g$rtc$22903$17Rald)
                ((case-lambda
                   ((g$x$22904$17Rald)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$22915$17Rald
                               g$inv-collector$22916$17Rald
                               g$vis-collector$22917$17Rald
                               g$imp-collector$22918$17Rald
                               g$top-level-context$22919$17Rald
                               g$inv-collector$22920$17Rald
                               g$vis-collector$22921$17Rald
                               g$imp-collector$22922$17Rald)
                             ((case-lambda
                                ((g$swap$22923$17Rald)
                                 (dynamic-wind
                                   g$swap$22923$17Rald
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$19779$17Rald
                                        g$x$22904$17Rald
                                        g$rib$22901$17Rald
                                        g$r$22902$17Rald)))
                                   g$swap$22923$17Rald)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$22924$17Rald)
                                       (begin
                                         (g$top-level-context$22915$17Rald
                                           g$top-level-context$22919$17Rald)
                                         (set! g$top-level-context$22919$17Rald
                                           g$t$22924$17Rald))))
                                    (g$top-level-context$22915$17Rald))
                                   ((case-lambda
                                      ((g$t$22925$17Rald)
                                       (begin
                                         (g$inv-collector$22916$17Rald
                                           g$inv-collector$22920$17Rald)
                                         (set! g$inv-collector$22920$17Rald
                                           g$t$22925$17Rald))))
                                    (g$inv-collector$22916$17Rald))
                                   ((case-lambda
                                      ((g$t$22926$17Rald)
                                       (begin
                                         (g$vis-collector$22917$17Rald
                                           g$vis-collector$22921$17Rald)
                                         (set! g$vis-collector$22921$17Rald
                                           g$t$22926$17Rald))))
                                    (g$vis-collector$22917$17Rald))
                                   ((case-lambda
                                      ((g$t$22927$17Rald)
                                       (begin
                                         (g$imp-collector$22918$17Rald
                                           g$imp-collector$22922$17Rald)
                                         (set! g$imp-collector$22922$17Rald
                                           g$t$22927$17Rald))))
                                    (g$imp-collector$22918$17Rald))))))))
                          g$top-level-context$19847$17Rald
                          g$inv-collector$19775$17Rald
                          g$vis-collector$19776$17Rald
                          g$imp-collector$19777$17Rald
                          g$env$22873$17Rald
                          g$rtc$22903$17Rald
                          (g$make-collector$19774$17Rald)
                          (g$make-collector$19774$17Rald))))
                      (case-lambda
                        ((g$e$22928$17Rald g$r^$22929$17Rald)
                         ((case-lambda
                            ((g$r^$22930$17Rald g$e$22931$17Rald)
                             (begin
                               (g$set-interaction-env-r!$19809$17Rald
                                 g$env$22873$17Rald
                                 g$r^$22930$17Rald)
                               (values
                                 g$e$22931$17Rald
                                 (g$rtc$22903$17Rald)))))
                          g$r^$22929$17Rald
                          g$e$22928$17Rald))))))
                 (g$make-stx$19195$17Rald
                   g$x$22872$17Rald
                   g$top-mark*$19155$17Rald
                   (list g$rib$22901$17Rald)
                   '()))))
             (g$interaction-env-rib$19805$17Rald g$env$22873$17Rald)
             (g$interaction-env-r$19806$17Rald g$env$22873$17Rald)
             (g$make-collector$19774$17Rald))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$22873$17Rald))))))
   (g$eval$19821$17Rald
     g$eval$23411$17Rald
     (case-lambda
       ((g$x$22932$17Rald g$env$22933$17Rald)
        (begin
          (if (not (g$environment?$19815$17Rald g$env$22933$17Rald))
            (error 'eval '"not an environment" g$env$22933$17Rald)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$19820$17Rald
                 g$x$22932$17Rald
                 g$env$22933$17Rald)))
            (case-lambda
              ((g$x$22936$17Rald g$invoke-req*$22937$17Rald)
               ((case-lambda
                  ((g$invoke-req*$22938$17Rald g$x$22939$17Rald)
                   (begin
                     (g$for-each$11836$17Rald
                       g$invoke-library$18928$17Rald
                       g$invoke-req*$22938$17Rald)
                     (eval-core
                       (g$expanded->core$18660$17Rald
                         g$x$22939$17Rald)))))
                g$invoke-req*$22937$17Rald
                g$x$22936$17Rald))))))))
   (g$expand->core$19822$17Rald
     g$expand->core$23412$17Rald
     (case-lambda
       ((g$x$22940$17Rald g$env$22941$17Rald)
        (begin
          (if (not (g$environment?$19815$17Rald g$env$22941$17Rald))
            (error 'eval '"not an environment" g$env$22941$17Rald)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$19820$17Rald
                 g$x$22940$17Rald
                 g$env$22941$17Rald)))
            (case-lambda
              ((g$x$22944$17Rald g$invoke-req*$22945$17Rald)
               ((case-lambda
                  ((g$invoke-req*$22946$17Rald g$x$22947$17Rald)
                   (begin
                     (g$for-each$11836$17Rald
                       g$invoke-library$18928$17Rald
                       g$invoke-req*$22946$17Rald)
                     (g$expanded->core$18660$17Rald g$x$22947$17Rald))))
                g$invoke-req*$22945$17Rald
                g$x$22944$17Rald))))))))
   (g$library-expander$19823$17Rald
     g$library-expander$23413$17Rald
     (case-lambda
       ((g$x$22948$17Rald
          g$filename$22949$17Rald
          g$verify-name$22950$17Rald)
        (letrec* ((g$build-visit-code$22951$17Rald
                    (case-lambda
                      ((g$macro*$22994$17Rald)
                       (if (null? g$macro*$22994$17Rald)
                         (g$build-void$19148$17Rald)
                         (g$build-sequence$19147$17Rald
                           '#f
                           (g$map$11835$17Rald
                             (case-lambda
                               ((g$x$22995$17Rald)
                                ((case-lambda
                                   ((g$loc$22996$17Rald
                                      g$src$22997$17Rald)
                                    (list
                                      'set!
                                      g$loc$22996$17Rald
                                      g$src$22997$17Rald)))
                                 (car g$x$22995$17Rald)
                                 (g$cddr$12630$17Rald
                                   g$x$22995$17Rald))))
                             g$macro*$22994$17Rald))))))
                  (g$visit!$22952$17Rald
                    (case-lambda
                      ((g$macro*$22990$17Rald)
                       (g$for-each$11836$17Rald
                         (case-lambda
                           ((g$x$22991$17Rald)
                            ((case-lambda
                               ((g$loc$22992$17Rald g$proc$22993$17Rald)
                                (set-symbol-value!
                                  g$loc$22992$17Rald
                                  g$proc$22993$17Rald)))
                             (car g$x$22991$17Rald)
                             (g$cadr$12628$17Rald g$x$22991$17Rald))))
                         g$macro*$22990$17Rald)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$19781$17Rald
                 g$x$22948$17Rald
                 g$verify-name$22950$17Rald)))
            (case-lambda
              ((g$name$22962$17Rald
                 g$ver$22963$17Rald
                 g$imp*$22964$17Rald
                 g$inv*$22965$17Rald
                 g$vis*$22966$17Rald
                 g$invoke-code$22967$17Rald
                 g$macro*$22968$17Rald
                 g$export-subst$22969$17Rald
                 g$export-env$22970$17Rald)
               ((case-lambda
                  ((g$export-env$22971$17Rald
                     g$export-subst$22972$17Rald
                     g$macro*$22973$17Rald
                     g$invoke-code$22974$17Rald
                     g$vis*$22975$17Rald
                     g$inv*$22976$17Rald
                     g$imp*$22977$17Rald
                     g$ver$22978$17Rald
                     g$name$22979$17Rald)
                   ((case-lambda
                      ((g$id$22980$17Rald
                         g$name$22981$17Rald
                         g$ver$22982$17Rald
                         g$imp*$22983$17Rald
                         g$vis*$22984$17Rald
                         g$inv*$22985$17Rald
                         g$visit-proc$22986$17Rald
                         g$invoke-proc$22987$17Rald
                         g$visit-code$22988$17Rald
                         g$invoke-code$22989$17Rald)
                       (begin
                         (g$install-library$18926$17Rald
                           g$id$22980$17Rald
                           g$name$22981$17Rald
                           g$ver$22982$17Rald
                           g$imp*$22983$17Rald
                           g$vis*$22984$17Rald
                           g$inv*$22985$17Rald
                           g$export-subst$22972$17Rald
                           g$export-env$22971$17Rald
                           g$visit-proc$22986$17Rald
                           g$invoke-proc$22987$17Rald
                           g$visit-code$22988$17Rald
                           g$invoke-code$22989$17Rald
                           '#t
                           g$filename$22949$17Rald)
                         (values
                           g$id$22980$17Rald
                           g$name$22981$17Rald
                           g$ver$22982$17Rald
                           g$imp*$22983$17Rald
                           g$vis*$22984$17Rald
                           g$inv*$22985$17Rald
                           g$invoke-code$22989$17Rald
                           g$visit-code$22988$17Rald
                           g$export-subst$22972$17Rald
                           g$export-env$22971$17Rald))))
                    (gensym)
                    g$name$22979$17Rald
                    g$ver$22978$17Rald
                    (g$map$11835$17Rald
                      g$library-spec$18932$17Rald
                      g$imp*$22977$17Rald)
                    (g$map$11835$17Rald
                      g$library-spec$18932$17Rald
                      g$vis*$22975$17Rald)
                    (g$map$11835$17Rald
                      g$library-spec$18932$17Rald
                      g$inv*$22976$17Rald)
                    (case-lambda
                      (()
                       (g$visit!$22952$17Rald g$macro*$22973$17Rald)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$18660$17Rald
                           g$invoke-code$22974$17Rald))))
                    (g$build-visit-code$22951$17Rald
                      g$macro*$22973$17Rald)
                    g$invoke-code$22974$17Rald)))
                g$export-env$22970$17Rald
                g$export-subst$22969$17Rald
                g$macro*$22968$17Rald
                g$invoke-code$22967$17Rald
                g$vis*$22966$17Rald
                g$inv*$22965$17Rald
                g$imp*$22964$17Rald
                g$ver$22963$17Rald
                g$name$22962$17Rald))))))
       ((g$x$22998$17Rald g$filename$22999$17Rald)
        (g$library-expander$19823$17Rald
          g$x$22998$17Rald
          g$filename$22999$17Rald
          (case-lambda ((g$x$23000$17Rald) (values)))))
       ((g$x$23001$17Rald)
        (g$library-expander$19823$17Rald
          g$x$23001$17Rald
          '#f
          (case-lambda ((g$x$23002$17Rald) (values)))))))
   (g$boot-library-expand$19824$17Rald
     g$boot-library-expand$23414$17Rald
     (case-lambda
       ((g$x$23003$17Rald)
        (call-with-values
          (case-lambda
            (() (g$library-expander$19823$17Rald g$x$23003$17Rald)))
          (case-lambda
            ((g$id$23014$17Rald
               g$name$23015$17Rald
               g$ver$23016$17Rald
               g$imp*$23017$17Rald
               g$vis*$23018$17Rald
               g$inv*$23019$17Rald
               g$invoke-code$23020$17Rald
               g$visit-code$23021$17Rald
               g$export-subst$23022$17Rald
               g$export-env$23023$17Rald)
             ((case-lambda
                ((g$export-env$23024$17Rald
                   g$export-subst$23025$17Rald
                   g$visit-code$23026$17Rald
                   g$invoke-code$23027$17Rald
                   g$inv*$23028$17Rald
                   g$vis*$23029$17Rald
                   g$imp*$23030$17Rald
                   g$ver$23031$17Rald
                   g$name$23032$17Rald
                   g$id$23033$17Rald)
                 (values
                   g$name$23032$17Rald
                   g$invoke-code$23027$17Rald
                   g$export-subst$23025$17Rald
                   g$export-env$23024$17Rald)))
              g$export-env$23023$17Rald
              g$export-subst$23022$17Rald
              g$visit-code$23021$17Rald
              g$invoke-code$23020$17Rald
              g$inv*$23019$17Rald
              g$vis*$23018$17Rald
              g$imp*$23017$17Rald
              g$ver$23016$17Rald
              g$name$23015$17Rald
              g$id$23014$17Rald)))))))
   (g$rev-map-append$19825$17Rald
     g$rev-map-append$23415$17Rald
     (case-lambda
       ((g$f$23034$17Rald g$ls$23035$17Rald g$ac$23036$17Rald)
        (if (null? g$ls$23035$17Rald)
          g$ac$23036$17Rald
          (g$rev-map-append$19825$17Rald
            g$f$23034$17Rald
            (cdr g$ls$23035$17Rald)
            (cons
              (g$f$23034$17Rald (car g$ls$23035$17Rald))
              g$ac$23036$17Rald))))))
   (g$build-exports$19826$17Rald
     g$build-exports$23416$17Rald
     (case-lambda
       ((g$lex*+loc*$23037$17Rald g$init*$23038$17Rald)
        (g$build-sequence$19147$17Rald
          '#f
          (cons
            (g$build-void$19148$17Rald)
            (g$rev-map-append$19825$17Rald
              (case-lambda
                ((g$x$23039$17Rald)
                 (list
                   'set!
                   (cdr g$x$23039$17Rald)
                   (car g$x$23039$17Rald))))
              g$lex*+loc*$23037$17Rald
              g$init*$23038$17Rald))))))
   (g$make-export-subst$19827$17Rald
     g$make-export-subst$23417$17Rald
     (case-lambda
       ((g$name*$23040$17Rald g$id*$23041$17Rald)
        (g$map$11835$17Rald
          (case-lambda
            ((g$name$23042$17Rald g$id$23043$17Rald)
             ((case-lambda
                ((g$label$23044$17Rald)
                 (begin
                   (if (not g$label$23044$17Rald)
                     (g$syntax-violation$19839$17Rald
                       '#f
                       '"cannot export unbound identifier"
                       g$id$23043$17Rald)
                     (void))
                   (cons g$name$23042$17Rald g$label$23044$17Rald))))
              (g$id->label$19235$17Rald g$id$23043$17Rald))))
          g$name*$23040$17Rald
          g$id*$23041$17Rald))))
   (g$make-export-env/macros$19828$17Rald
     g$make-export-env/macros$23418$17Rald
     (case-lambda
       ((g$lex*$23045$17Rald g$loc*$23046$17Rald g$r$23047$17Rald)
        (letrec* ((g$lookup$23048$17Rald
                    (case-lambda
                      ((g$x$23064$17Rald)
                       ((letrec ((g$f$23065$17Rald
                                   (case-lambda
                                     ((g$x$23066$17Rald
                                        g$lex*$23067$17Rald
                                        g$loc*$23068$17Rald)
                                      (if (pair? g$lex*$23067$17Rald)
                                        (if (eq? g$x$23066$17Rald
                                                 (car g$lex*$23067$17Rald))
                                          (car g$loc*$23068$17Rald)
                                          (g$f$23065$17Rald
                                            g$x$23066$17Rald
                                            (cdr g$lex*$23067$17Rald)
                                            (cdr g$loc*$23068$17Rald)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$23065$17Rald)
                        g$x$23064$17Rald
                        g$lex*$23045$17Rald
                        g$loc*$23046$17Rald)))))
          ((letrec ((g$f$23049$17Rald
                      (case-lambda
                        ((g$r$23050$17Rald
                           g$env$23051$17Rald
                           g$global*$23052$17Rald
                           g$macro*$23053$17Rald)
                         (if (null? g$r$23050$17Rald)
                           (values
                             g$env$23051$17Rald
                             g$global*$23052$17Rald
                             g$macro*$23053$17Rald)
                           ((case-lambda
                              ((g$x$23054$17Rald)
                               ((case-lambda
                                  ((g$label$23055$17Rald
                                     g$b$23056$17Rald)
                                   ((case-lambda
                                      ((g$t$23057$17Rald)
                                       (if (eqv?
                                             g$t$23057$17Rald
                                             'lexical)
                                         ((case-lambda
                                            ((g$v$23058$17Rald)
                                             ((case-lambda
                                                ((g$loc$23059$17Rald
                                                   g$type$23060$17Rald)
                                                 (g$f$23049$17Rald
                                                   (cdr g$r$23050$17Rald)
                                                   (cons
                                                     (g$cons*$11837$17Rald
                                                       g$label$23055$17Rald
                                                       g$type$23060$17Rald
                                                       g$loc$23059$17Rald)
                                                     g$env$23051$17Rald)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$19664$17Rald
                                                         g$v$23058$17Rald)
                                                       g$loc$23059$17Rald)
                                                     g$global*$23052$17Rald)
                                                   g$macro*$23053$17Rald)))
                                              (g$lookup$23048$17Rald
                                                (g$lexical-var$19664$17Rald
                                                  g$v$23058$17Rald))
                                              (if (g$lexical-mutable?$19665$17Rald
                                                    g$v$23058$17Rald)
                                                'mutable
                                                'global))))
                                          (g$binding-value$19240$17Rald
                                            g$b$23056$17Rald))
                                         (if (eqv?
                                               g$t$23057$17Rald
                                               'local-macro)
                                           ((case-lambda
                                              ((g$loc$23061$17Rald)
                                               (g$f$23049$17Rald
                                                 (cdr g$r$23050$17Rald)
                                                 (cons
                                                   (g$cons*$11837$17Rald
                                                     g$label$23055$17Rald
                                                     'global-macro
                                                     g$loc$23061$17Rald)
                                                   g$env$23051$17Rald)
                                                 g$global*$23052$17Rald
                                                 (cons
                                                   (cons
                                                     g$loc$23061$17Rald
                                                     (g$binding-value$19240$17Rald
                                                       g$b$23056$17Rald))
                                                   g$macro*$23053$17Rald))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$23057$17Rald
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$23062$17Rald)
                                                 (g$f$23049$17Rald
                                                   (cdr g$r$23050$17Rald)
                                                   (cons
                                                     (g$cons*$11837$17Rald
                                                       g$label$23055$17Rald
                                                       'global-macro!
                                                       g$loc$23062$17Rald)
                                                     g$env$23051$17Rald)
                                                   g$global*$23052$17Rald
                                                   (cons
                                                     (cons
                                                       g$loc$23062$17Rald
                                                       (g$binding-value$19240$17Rald
                                                         g$b$23056$17Rald))
                                                     g$macro*$23053$17Rald))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$23057$17Rald
                                                   'local-ctv)
                                               ((case-lambda
                                                  ((g$loc$23063$17Rald)
                                                   (g$f$23049$17Rald
                                                     (cdr g$r$23050$17Rald)
                                                     (cons
                                                       (g$cons*$11837$17Rald
                                                         g$label$23055$17Rald
                                                         'global-ctv
                                                         g$loc$23063$17Rald)
                                                       g$env$23051$17Rald)
                                                     g$global*$23052$17Rald
                                                     (cons
                                                       (cons
                                                         g$loc$23063$17Rald
                                                         (g$binding-value$19240$17Rald
                                                           g$b$23056$17Rald))
                                                       g$macro*$23053$17Rald))))
                                                (gensym))
                                               (if (g$memv$11828$17Rald
                                                     g$t$23057$17Rald
                                                     '($rtd $module))
                                                 (g$f$23049$17Rald
                                                   (cdr g$r$23050$17Rald)
                                                   (cons
                                                     g$x$23054$17Rald
                                                     g$env$23051$17Rald)
                                                   g$global*$23052$17Rald
                                                   g$macro*$23053$17Rald)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$19239$17Rald
                                                     g$b$23056$17Rald)
                                                   (g$binding-value$19240$17Rald
                                                     g$b$23056$17Rald)))))))))
                                    (g$binding-type$19239$17Rald
                                      g$b$23056$17Rald))))
                                (car g$x$23054$17Rald)
                                (cdr g$x$23054$17Rald))))
                            (car g$r$23050$17Rald)))))))
             g$f$23049$17Rald)
           g$r$23047$17Rald
           '()
           '()
           '())))))
   (g$generate-temporaries$19829$17Rald
     g$generate-temporaries$23419$17Rald
     (case-lambda
       ((g$ls$23069$17Rald)
        ((case-lambda
           ((g$t$23070$17Rald)
            ((case-lambda
               ((g$ls/false$23071$17Rald)
                (if g$ls/false$23071$17Rald
                  (apply
                    (case-lambda
                      ((g$ls$23072$17Rald)
                       (g$map$11835$17Rald
                         (case-lambda
                           ((g$x$23073$17Rald)
                            (g$make-stx$19195$17Rald
                              ((case-lambda
                                 ((g$x$23074$17Rald)
                                  (if ((case-lambda
                                         ((g$t$23075$17Rald)
                                          (if g$t$23075$17Rald
                                            g$t$23075$17Rald
                                            (begin
                                              '#f
                                              (string?
                                                g$x$23074$17Rald)))))
                                       (g$symbol?$12610$17Rald
                                         g$x$23074$17Rald))
                                    (gensym g$x$23074$17Rald)
                                    (gensym 't))))
                               (g$syntax->datum$19842$17Rald
                                 g$x$23073$17Rald))
                              g$top-mark*$19155$17Rald
                              '()
                              '())))
                         g$ls$23072$17Rald)))
                    g$ls/false$23071$17Rald)
                  ((case-lambda
                     ((g$t$23076$17Rald)
                      ((case-lambda
                         ((g$ls/false$23077$17Rald)
                          (if g$ls/false$23077$17Rald
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$23077$17Rald)
                            (g$syntax-violation$19839$17Rald
                              '#f
                              '"invalid syntax"
                              g$t$23076$17Rald))))
                       (g$syntax-dispatch$19720$17Rald
                         g$t$23076$17Rald
                         '_))))
                   g$t$23070$17Rald))))
             (g$syntax-dispatch$19720$17Rald
               g$t$23070$17Rald
               'each-any))))
         g$ls$23069$17Rald))))
   (g$free-identifier=?$19830$17Rald
     g$free-identifier=?$23420$17Rald
     (case-lambda
       ((g$x$23078$17Rald g$y$23079$17Rald)
        (if (g$id?$19222$17Rald g$x$23078$17Rald)
          (if (g$id?$19222$17Rald g$y$23079$17Rald)
            (g$free-id=?$19226$17Rald g$x$23078$17Rald g$y$23079$17Rald)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$23079$17Rald))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$23078$17Rald)))))
   (g$bound-identifier=?$19831$17Rald
     g$bound-identifier=?$23421$17Rald
     (case-lambda
       ((g$x$23080$17Rald g$y$23081$17Rald)
        (if (g$id?$19222$17Rald g$x$23080$17Rald)
          (if (g$id?$19222$17Rald g$y$23081$17Rald)
            (g$bound-id=?$19225$17Rald
              g$x$23080$17Rald
              g$y$23081$17Rald)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$23081$17Rald))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$23080$17Rald)))))
   (g$make-source-condition$19832$17Rald
     g$make-source-condition$23422$17Rald
     (case-lambda
       ((g$x$23082$17Rald)
        (letrec* ((g$12557$23083$17Rald
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$13287$17Rald
                      'g$12560$17Rald
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12559$23084$17Rald '#f)
                  (g$12558$23085$17Rald
                    (make-record-constructor-descriptor
                      g$12557$23083$17Rald
                      g$&condition-rcd$13288$17Rald
                      g$12559$23084$17Rald))
                  (g$12556$23088$17Rald
                    (record-predicate g$12557$23083$17Rald))
                  (g$make-source-condition$23089$17Rald
                    (record-constructor g$12558$23085$17Rald))
                  (g$12554$23090$17Rald
                    (record-accessor g$12557$23083$17Rald '0))
                  (g$12555$23091$17Rald
                    (record-accessor g$12557$23083$17Rald '1))
                  (g$source-condition?$23092$17Rald
                    (condition-predicate g$12557$23083$17Rald))
                  (g$source-filename$23093$17Rald
                    (condition-accessor
                      g$12557$23083$17Rald
                      g$12554$23090$17Rald))
                  (g$source-character$23094$17Rald
                    (condition-accessor
                      g$12557$23083$17Rald
                      g$12555$23091$17Rald)))
          (if (pair? g$x$23082$17Rald)
            (g$make-source-condition$23089$17Rald
              (car g$x$23082$17Rald)
              (cdr g$x$23082$17Rald))
            (condition))))))
   (g$extract-position-condition$19833$17Rald
     g$extract-position-condition$23423$17Rald
     (case-lambda
       ((g$x$23095$17Rald)
        (g$make-source-condition$19832$17Rald
          (g$expression-position$19834$17Rald g$x$23095$17Rald)))))
   (g$expression-position$19834$17Rald
     g$expression-position$23424$17Rald
     (case-lambda
       ((g$x$23096$17Rald)
        (if (g$stx?$19194$17Rald g$x$23096$17Rald)
          (begin
            '#f
            ((case-lambda
               ((g$x$23097$17Rald)
                (if (annotation? g$x$23097$17Rald)
                  (begin '#f (annotation-source g$x$23097$17Rald))
                  '#f)))
             (g$stx-expr$19196$17Rald g$x$23096$17Rald)))
          '#f))))
   (g$assertion-error$19835$17Rald
     g$assertion-error$23425$17Rald
     (case-lambda
       ((g$expr$23098$17Rald g$pos$23099$17Rald)
        (raise
          (condition
            (g$make-assertion-violation$13335$17Rald)
            (g$make-who-condition$13353$17Rald 'assert)
            (g$make-message-condition$13293$17Rald '"assertion failed")
            (g$make-irritants-condition$13343$17Rald
              (list g$expr$23098$17Rald))
            (g$make-source-condition$19832$17Rald
              g$pos$23099$17Rald))))))
   (g$syntax-error$19836$17Rald
     g$syntax-error$23426$17Rald
     (case-lambda
       ((g$x$23100$17Rald . g$args$23101$17Rald)
        (begin
          (if (not (g$for-all$11833$17Rald string? g$args$23101$17Rald))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$23101$17Rald)
            (void))
          (raise
            (condition
              (g$make-message-condition$13293$17Rald
                (if (null? g$args$23101$17Rald)
                  '"invalid syntax"
                  (apply string-append g$args$23101$17Rald)))
              (g$make-syntax-violation$13387$17Rald
                (g$syntax->datum$19842$17Rald g$x$23100$17Rald)
                '#f)
              (g$extract-position-condition$19833$17Rald
                g$x$23100$17Rald)
              (g$extract-trace$19837$17Rald g$x$23100$17Rald)))))))
   (g$extract-trace$19837$17Rald
     g$extract-trace$23427$17Rald
     (case-lambda
       ((g$x$23102$17Rald)
        (letrec* ((g$12582$23103$17Rald
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$13287$17Rald
                      'g$12585$17Rald
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12584$23104$17Rald '#f)
                  (g$12583$23105$17Rald
                    (make-record-constructor-descriptor
                      g$12582$23103$17Rald
                      g$&condition-rcd$13288$17Rald
                      g$12584$23104$17Rald))
                  (g$12581$23108$17Rald
                    (record-predicate g$12582$23103$17Rald))
                  (g$make-trace$23109$17Rald
                    (record-constructor g$12583$23105$17Rald))
                  (g$12580$23110$17Rald
                    (record-accessor g$12582$23103$17Rald '0))
                  (g$trace?$23111$17Rald
                    (condition-predicate g$12582$23103$17Rald))
                  (g$trace-form$23112$17Rald
                    (condition-accessor
                      g$12582$23103$17Rald
                      g$12580$23110$17Rald)))
          ((letrec ((g$f$23113$17Rald
                      (case-lambda
                        ((g$x$23114$17Rald)
                         (if (g$stx?$19194$17Rald g$x$23114$17Rald)
                           (apply
                             condition
                             (g$make-trace$23109$17Rald
                               g$x$23114$17Rald)
                             (g$map$11835$17Rald
                               g$f$23113$17Rald
                               (g$stx-ae*$19199$17Rald
                                 g$x$23114$17Rald)))
                           (if (annotation? g$x$23114$17Rald)
                             (g$make-trace$23109$17Rald
                               (g$make-stx$19195$17Rald
                                 g$x$23114$17Rald
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$23113$17Rald)
           g$x$23102$17Rald)))))
   (g$syntax-violation*$19838$17Rald
     g$syntax-violation*$23428$17Rald
     (case-lambda
       ((g$who$23115$17Rald
          g$msg$23116$17Rald
          g$form$23117$17Rald
          g$condition-object$23118$17Rald)
        (begin
          (if (not (string? g$msg$23116$17Rald))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$23116$17Rald)
            (void))
          ((case-lambda
             ((g$who$23119$17Rald)
              (raise
                (condition
                  (if g$who$23119$17Rald
                    (g$make-who-condition$13353$17Rald
                      g$who$23119$17Rald)
                    (condition))
                  (g$make-message-condition$13293$17Rald
                    g$msg$23116$17Rald)
                  g$condition-object$23118$17Rald
                  (g$extract-position-condition$19833$17Rald
                    g$form$23117$17Rald)
                  (g$extract-trace$19837$17Rald g$form$23117$17Rald)))))
           (if ((case-lambda
                  ((g$t$23120$17Rald)
                   (if g$t$23120$17Rald
                     g$t$23120$17Rald
                     (begin
                       '#f
                       (g$symbol?$12610$17Rald g$who$23115$17Rald)))))
                (string? g$who$23115$17Rald))
             g$who$23115$17Rald
             (if (not g$who$23115$17Rald)
               ((case-lambda
                  ((g$t$23121$17Rald)
                   ((case-lambda
                      ((g$ls/false$23122$17Rald)
                       (if (if g$ls/false$23122$17Rald
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$23123$17Rald)
                                    (g$id?$19222$17Rald
                                      g$id$23123$17Rald)))
                                 g$ls/false$23122$17Rald))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$23124$17Rald)
                              (g$syntax->datum$19842$17Rald
                                g$id$23124$17Rald)))
                           g$ls/false$23122$17Rald)
                         ((case-lambda
                            ((g$t$23125$17Rald)
                             ((case-lambda
                                ((g$ls/false$23126$17Rald)
                                 (if (if g$ls/false$23126$17Rald
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$23127$17Rald
                                                g$rest$23128$17Rald)
                                              (g$id?$19222$17Rald
                                                g$id$23127$17Rald)))
                                           g$ls/false$23126$17Rald))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$23129$17Rald
                                          g$rest$23130$17Rald)
                                        (g$syntax->datum$19842$17Rald
                                          g$id$23129$17Rald)))
                                     g$ls/false$23126$17Rald)
                                   ((case-lambda
                                      ((g$t$23131$17Rald)
                                       ((case-lambda
                                          ((g$ls/false$23132$17Rald)
                                           (if g$ls/false$23132$17Rald
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$23132$17Rald)
                                             (g$syntax-violation$19839$17Rald
                                               '#f
                                               '"invalid syntax"
                                               g$t$23131$17Rald))))
                                        (g$syntax-dispatch$19720$17Rald
                                          g$t$23131$17Rald
                                          '_))))
                                    g$t$23125$17Rald))))
                              (g$syntax-dispatch$19720$17Rald
                                g$t$23125$17Rald
                                '(any . any)))))
                          g$t$23121$17Rald))))
                    (g$syntax-dispatch$19720$17Rald
                      g$t$23121$17Rald
                      'any))))
                g$form$23117$17Rald)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$23115$17Rald))))))))
   (g$syntax-violation$19839$17Rald
     g$syntax-violation$23429$17Rald
     (case-lambda
       ((g$who$23133$17Rald g$msg$23134$17Rald g$form$23135$17Rald)
        (g$syntax-violation$19839$17Rald
          g$who$23133$17Rald
          g$msg$23134$17Rald
          g$form$23135$17Rald
          '#f))
       ((g$who$23136$17Rald
          g$msg$23137$17Rald
          g$form$23138$17Rald
          g$subform$23139$17Rald)
        (g$syntax-violation*$19838$17Rald
          g$who$23136$17Rald
          g$msg$23137$17Rald
          g$form$23138$17Rald
          (g$make-syntax-violation$13387$17Rald
            (g$syntax->datum$19842$17Rald g$form$23138$17Rald)
            (g$syntax->datum$19842$17Rald g$subform$23139$17Rald))))))
   (g$identifier?$19840$17Rald
     g$identifier?$23430$17Rald
     (case-lambda
       ((g$x$23140$17Rald) (g$id?$19222$17Rald g$x$23140$17Rald))))
   (g$datum->syntax$19841$17Rald
     g$datum->syntax$23431$17Rald
     (case-lambda
       ((g$id$23141$17Rald g$datum$23142$17Rald)
        (if (g$id?$19222$17Rald g$id$23141$17Rald)
          (g$datum->stx$19205$17Rald
            g$id$23141$17Rald
            g$datum$23142$17Rald)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$23141$17Rald)))))
   (g$syntax->datum$19842$17Rald
     g$syntax->datum$23432$17Rald
     (case-lambda
       ((g$x$23143$17Rald)
        (g$stx->datum$19233$17Rald g$x$23143$17Rald))))
   (g$compile-r6rs-top-level$19843$17Rald
     g$compile-r6rs-top-level$23433$17Rald
     (case-lambda
       ((g$x*$23144$17Rald)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$19783$17Rald g$x*$23144$17Rald)))
          (case-lambda
            ((g$lib*$23147$17Rald g$invoke-code$23148$17Rald)
             ((case-lambda
                ((g$invoke-code$23149$17Rald g$lib*$23150$17Rald)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11836$17Rald
                        g$invoke-library$18928$17Rald
                        g$lib*$23150$17Rald)
                      (eval-core
                        (g$expanded->core$18660$17Rald
                          g$invoke-code$23149$17Rald)))))))
              g$invoke-code$23148$17Rald
              g$lib*$23147$17Rald)))))))
   (g$pre-compile-r6rs-top-level$19844$17Rald
     g$pre-compile-r6rs-top-level$23434$17Rald
     (case-lambda
       ((g$x*$23151$17Rald)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$19783$17Rald g$x*$23151$17Rald)))
          (case-lambda
            ((g$lib*$23154$17Rald g$invoke-code$23155$17Rald)
             ((case-lambda
                ((g$invoke-code$23156$17Rald g$lib*$23157$17Rald)
                 (begin
                   (g$for-each$11836$17Rald
                     g$invoke-library$18928$17Rald
                     g$lib*$23157$17Rald)
                   (compile-core
                     (g$expanded->core$18660$17Rald
                       g$invoke-code$23156$17Rald)))))
              g$invoke-code$23155$17Rald
              g$lib*$23154$17Rald)))))))
   (g$new-interaction-environment$19845$17Rald
     g$new-interaction-environment$23435$17Rald
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$23158$17Rald g$rib$23159$17Rald)
            (begin
              ((case-lambda
                 ((g$subst$23160$17Rald)
                  (begin
                    (g$set-rib-sym*!$19175$17Rald
                      g$rib$23159$17Rald
                      (g$map$11835$17Rald car g$subst$23160$17Rald))
                    (g$set-rib-mark**!$19176$17Rald
                      g$rib$23159$17Rald
                      (g$map$11835$17Rald
                        (case-lambda
                          ((g$x$23161$17Rald) g$top-mark*$19155$17Rald))
                        g$subst$23160$17Rald))
                    (g$set-rib-label*!$19177$17Rald
                      g$rib$23159$17Rald
                      (g$map$11835$17Rald cdr g$subst$23160$17Rald)))))
               (g$library-subst$18885$17Rald g$lib$23158$17Rald))
              (g$make-interaction-env$19804$17Rald
                g$rib$23159$17Rald
                '()
                '()))))
         (g$find-library-by-name$18921$17Rald '(ironscheme))
         (g$make-empty-rib$19180$17Rald)))))
   (g$interaction-environment$19846$17Rald
     g$interaction-environment$23436$17Rald
     ((case-lambda
        ((g$e$23162$17Rald)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$23163$17Rald)
                (if g$t$23163$17Rald
                  g$t$23163$17Rald
                  (begin
                    '#f
                    (begin
                      (set! g$e$23162$17Rald
                        (g$new-interaction-environment$19845$17Rald))
                      g$e$23162$17Rald)))))
             g$e$23162$17Rald)))))
      '#f))
   (g$top-level-context$19847$17Rald
     g$top-level-context$23437$17Rald
     (g$make-parameter$18083$17Rald '#f)))
  (g$current-library-expander$18918$17Rald
    g$library-expander$19823$17Rald))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$18657$17Rald
      (case-lambda
        ((g$x$23518$17Rald)
         ((case-lambda
            ((g$t$23519$17Rald)
             (if g$t$23519$17Rald (cdr g$t$23519$17Rald) '#f)))
          (g$assq$11823$17Rald
            g$x$23518$17Rald
            '((ellipsis-map . g$ellipsis-map$23321$17Rald)
              (&no-nans-rcd . g$&no-nans-rcd$13522$17Rald)
              (&no-nans-rtd . g$&no-nans-rtd$13521$17Rald)
              (&no-infinities-rcd . g$&no-infinities-rcd$13514$17Rald)
              (&no-infinities-rtd . g$&no-infinities-rtd$13513$17Rald)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$13506$17Rald)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$13505$17Rald)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$13496$17Rald)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$13495$17Rald)
              (&i/o-port-rcd . g$&i/o-port-rcd$13488$17Rald)
              (&i/o-port-rtd . g$&i/o-port-rtd$13487$17Rald)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$13478$17Rald)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$13477$17Rald)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$13470$17Rald)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$13469$17Rald)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$13462$17Rald)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$13461$17Rald)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$13454$17Rald)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$13453$17Rald)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$13446$17Rald)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$13445$17Rald)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$13436$17Rald)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$13435$17Rald)
              (&i/o-write-rcd . g$&i/o-write-rcd$13426$17Rald)
              (&i/o-write-rtd . g$&i/o-write-rtd$13425$17Rald)
              (&i/o-read-rcd . g$&i/o-read-rcd$13418$17Rald)
              (&i/o-read-rtd . g$&i/o-read-rtd$13417$17Rald)
              (&i/o-rcd . g$&i/o-rcd$13410$17Rald)
              (&i/o-rtd . g$&i/o-rtd$13409$17Rald)
              (&undefined-rcd . g$&undefined-rcd$13402$17Rald)
              (&undefined-rtd . g$&undefined-rtd$13401$17Rald)
              (&syntax-rcd . g$&syntax-rcd$13394$17Rald)
              (&syntax-rtd . g$&syntax-rtd$13393$17Rald)
              (&lexical-rcd . g$&lexical-rcd$13382$17Rald)
              (&lexical-rtd . g$&lexical-rtd$13381$17Rald)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$13374$17Rald)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$13373$17Rald)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$13366$17Rald)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$13365$17Rald)
              (&who-rcd . g$&who-rcd$13358$17Rald)
              (&who-rtd . g$&who-rtd$13357$17Rald)
              (&irritants-rcd . g$&irritants-rcd$13348$17Rald)
              (&irritants-rtd . g$&irritants-rtd$13347$17Rald)
              (&assertion-rcd . g$&assertion-rcd$13338$17Rald)
              (&assertion-rtd . g$&assertion-rtd$13337$17Rald)
              (&violation-rcd . g$&violation-rcd$13330$17Rald)
              (&violation-rtd . g$&violation-rtd$13329$17Rald)
              (&error-rcd . g$&error-rcd$13322$17Rald)
              (&error-rtd . g$&error-rtd$13321$17Rald)
              (&serious-rcd . g$&serious-rcd$13314$17Rald)
              (&serious-rtd . g$&serious-rtd$13313$17Rald)
              (&warning-rcd . g$&warning-rcd$13306$17Rald)
              (&warning-rtd . g$&warning-rtd$13305$17Rald)
              (&message-rcd . g$&message-rcd$13298$17Rald)
              (&message-rtd . g$&message-rtd$13297$17Rald)
              (&condition-rcd . g$&condition-rcd$13288$17Rald)
              (&condition-rtd . g$&condition-rtd$13287$17Rald)
              (make-list . g$make-list$11818$17Rald)
              (last-pair . g$last-pair$11817$17Rald)
              (ironscheme-build . g$ironscheme-build$23509$17Rald)
              (syntax-error . g$syntax-error$23426$17Rald)
              (syntax-dispatch . g$syntax-dispatch$23316$17Rald)
              (compile-system-libraries
                .
                g$compile-system-libraries$23513$17Rald)
              (compile->closure . g$compile->closure$23515$17Rald)
              (compile . g$compile$23514$17Rald)
              (load . g$load$23508$17Rald)
              (interaction-environment
                .
                g$interaction-environment$23436$17Rald)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$13744$17Rald)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$13743$17Rald)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$13742$17Rald)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$13741$17Rald)
              (string-ci>? . g$string-ci>?$13733$17Rald)
              (string-ci>=? . g$string-ci>=?$13735$17Rald)
              (string-ci=? . g$string-ci=?$13731$17Rald)
              (string-ci<? . g$string-ci<?$13732$17Rald)
              (string-ci<=? . g$string-ci<=?$13734$17Rald)
              (char-ci>? . g$char-ci>?$13738$17Rald)
              (char-ci>=? . g$char-ci>=?$13740$17Rald)
              (char-ci=? . g$char-ci=?$13736$17Rald)
              (char-ci<? . g$char-ci<?$13737$17Rald)
              (char-ci<=? . g$char-ci<=?$13739$17Rald)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$23254$17Rald)
              (variable-transformer?
                .
                g$variable-transformer?$23253$17Rald)
              (make-variable-transformer
                .
                g$make-variable-transformer$23251$17Rald)
              (identifier? . g$identifier?$23430$17Rald)
              (generate-temporaries
                .
                g$generate-temporaries$23419$17Rald)
              (free-identifier=? . g$free-identifier=?$23420$17Rald)
              (syntax->datum . g$syntax->datum$23432$17Rald)
              (datum->syntax . g$datum->syntax$23431$17Rald)
              (bound-identifier=? . g$bound-identifier=?$23421$17Rald)
              (delete-file . g$delete-file$12738$17Rald)
              (file-exists? . g$file-exists?$12737$17Rald)
              (list-sort . g$list-sort$13586$17Rald)
              (make-eqv-hashtable . g$make-eqv-hashtable$12720$17Rald)
              (make-eq-hashtable . g$make-eq-hashtable$12719$17Rald)
              (hashtable-update! . g$hashtable-update!$12726$17Rald)
              (hashtable-size . g$hashtable-size$12721$17Rald)
              (hashtable-set! . g$hashtable-set!$12723$17Rald)
              (hashtable-ref . g$hashtable-ref$12722$17Rald)
              (hashtable-delete! . g$hashtable-delete!$12724$17Rald)
              (hashtable-contains? . g$hashtable-contains?$12725$17Rald)
              (hashtable-clear! . g$hashtable-clear!$12727$17Rald)
              (call-with-output-file
                .
                g$call-with-output-file$17699$17Rald)
              (call-with-input-file
                .
                g$call-with-input-file$17698$17Rald)
              (write-char . g$write-char$17695$17Rald)
              (with-output-to-file . g$with-output-to-file$17697$17Rald)
              (with-input-from-file
                .
                g$with-input-from-file$17696$17Rald)
              (read-char . g$read-char$17694$17Rald)
              (peek-char . g$peek-char$17693$17Rald)
              (newline . g$newline$17700$17Rald)
              (put-datum . g$put-datum$17630$17Rald)
              (port? . g$port?$17635$17Rald)
              (open-string-output-port
                .
                g$open-string-output-port$17634$17Rald)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$13423$17Rald)
              (make-i/o-read-error . g$make-i/o-read-error$13415$17Rald)
              (make-i/o-port-error . g$make-i/o-port-error$13483$17Rald)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$13431$17Rald)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$13441$17Rald)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$13451$17Rald)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$13459$17Rald)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$13475$17Rald)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$13467$17Rald)
              (make-i/o-error . g$make-i/o-error$13407$17Rald)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$13501$17Rald)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$13493$17Rald)
              (i/o-write-error? . g$i/o-write-error?$13424$17Rald)
              (i/o-read-error? . g$i/o-read-error?$13416$17Rald)
              (i/o-port-error? . g$i/o-port-error?$13485$17Rald)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$13433$17Rald)
              (i/o-error-position . g$i/o-error-position$13434$17Rald)
              (i/o-filename-error? . g$i/o-filename-error?$13443$17Rald)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$13452$17Rald)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$13460$17Rald)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$13476$17Rald)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$13468$17Rald)
              (i/o-error? . g$i/o-error?$13408$17Rald)
              (i/o-error-port . g$i/o-error-port$13486$17Rald)
              (i/o-error-filename . g$i/o-error-filename$13444$17Rald)
              (i/o-encoding-error? . g$i/o-encoding-error?$13503$17Rald)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$13504$17Rald)
              (i/o-decoding-error? . g$i/o-decoding-error?$13494$17Rald)
              (get-datum . g$get-datum$17631$17Rald)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$17636$17Rald)
              (call-with-port . g$call-with-port$17637$17Rald)
              (scheme-report-environment
                .
                g$scheme-report-environment$23409$17Rald)
              (quotient . g$quotient$13553$17Rald)
              (null-environment . g$null-environment$23408$17Rald)
              (remainder . g$remainder$13554$17Rald)
              (modulo . g$modulo$13555$17Rald)
              (inexact->exact . g$inexact->exact$13550$17Rald)
              (force . g$force$13557$17Rald)
              (exact->inexact . g$exact->inexact$13551$17Rald)
              (command-line . g$command-line$23504$17Rald)
              (remove . g$remove$11840$17Rald)
              (remv . g$remv$11841$17Rald)
              (remp . g$remp$11821$17Rald)
              (remq . g$remq$11842$17Rald)
              (partition . g$partition$11820$17Rald)
              (memv . g$memv$11828$17Rald)
              (memq . g$memq$11827$17Rald)
              (memp . g$memp$11830$17Rald)
              (member . g$member$11829$17Rald)
              (exists . g$exists$11834$17Rald)
              (for-all . g$for-all$11833$17Rald)
              (fold-right . g$fold-right$11839$17Rald)
              (fold-left . g$fold-left$11838$17Rald)
              (find . g$find$11819$17Rald)
              (filter . g$filter$11822$17Rald)
              (cons* . g$cons*$11837$17Rald)
              (assv . g$assv$11824$17Rald)
              (assq . g$assq$11823$17Rald)
              (assp . g$assp$11826$17Rald)
              (assoc . g$assoc$11825$17Rald)
              (eval . g$eval$23411$17Rald)
              (environment . g$environment$23407$17Rald)
              (make-enumeration . g$make-enumeration$17836$17Rald)
              (enum-set=? . g$enum-set=?$17843$17Rald)
              (enum-set-universe . g$enum-set-universe$17837$17Rald)
              (enum-set-union . g$enum-set-union$17844$17Rald)
              (enum-set-subset? . g$enum-set-subset?$17842$17Rald)
              (enum-set-projection . g$enum-set-projection$17848$17Rald)
              (enum-set-member? . g$enum-set-member?$17841$17Rald)
              (enum-set-intersection
                .
                g$enum-set-intersection$17845$17Rald)
              (enum-set-indexer . g$enum-set-indexer$17838$17Rald)
              (enum-set-difference . g$enum-set-difference$17846$17Rald)
              (enum-set-constructor
                .
                g$enum-set-constructor$17839$17Rald)
              (enum-set-complement . g$enum-set-complement$17847$17Rald)
              (enum-set->list . g$enum-set->list$17840$17Rald)
              (who-condition? . g$who-condition?$13355$17Rald)
              (warning? . g$warning?$13304$17Rald)
              (violation? . g$violation?$13328$17Rald)
              (undefined-violation?
                .
                g$undefined-violation?$13400$17Rald)
              (syntax-violation? . g$syntax-violation?$13390$17Rald)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$13392$17Rald)
              (syntax-violation-form
                .
                g$syntax-violation-form$13391$17Rald)
              (syntax-violation . g$syntax-violation$23429$17Rald)
              (serious-condition? . g$serious-condition?$13312$17Rald)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$13364$17Rald)
              (message-condition? . g$message-condition?$13295$17Rald)
              (make-who-condition . g$make-who-condition$13353$17Rald)
              (make-warning . g$make-warning$13303$17Rald)
              (make-violation . g$make-violation$13327$17Rald)
              (make-undefined-violation
                .
                g$make-undefined-violation$13399$17Rald)
              (make-syntax-violation
                .
                g$make-syntax-violation$13387$17Rald)
              (make-serious-condition
                .
                g$make-serious-condition$13311$17Rald)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$13363$17Rald)
              (make-message-condition
                .
                g$make-message-condition$13293$17Rald)
              (make-lexical-violation
                .
                g$make-lexical-violation$13379$17Rald)
              (make-irritants-condition
                .
                g$make-irritants-condition$13343$17Rald)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$13371$17Rald)
              (make-error . g$make-error$13319$17Rald)
              (make-assertion-violation
                .
                g$make-assertion-violation$13335$17Rald)
              (lexical-violation? . g$lexical-violation?$13380$17Rald)
              (irritants-condition?
                .
                g$irritants-condition?$13345$17Rald)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$13372$17Rald)
              (error? . g$error?$13320$17Rald)
              (condition-who . g$condition-who$13356$17Rald)
              (condition-message . g$condition-message$13296$17Rald)
              (condition-irritants . g$condition-irritants$13346$17Rald)
              (assertion-violation?
                .
                g$assertion-violation?$13336$17Rald)
              (native-endianness . g$native-endianness$12851$17Rald)
              (bytevector? . g$bytevector?$12609$17Rald)
              (bytevector-u64-set! . g$bytevector-u64-set!$12872$17Rald)
              (bytevector-u64-ref . g$bytevector-u64-ref$12868$17Rald)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$12874$17Rald)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$12870$17Rald)
              (bytevector-u32-set! . g$bytevector-u32-set!$12864$17Rald)
              (bytevector-u32-ref . g$bytevector-u32-ref$12860$17Rald)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$12866$17Rald)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$12862$17Rald)
              (bytevector-u16-set! . g$bytevector-u16-set!$12856$17Rald)
              (bytevector-u16-ref . g$bytevector-u16-ref$12852$17Rald)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$12858$17Rald)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$12854$17Rald)
              (bytevector-s64-set! . g$bytevector-s64-set!$12873$17Rald)
              (bytevector-s64-ref . g$bytevector-s64-ref$12869$17Rald)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$12875$17Rald)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$12871$17Rald)
              (bytevector-s32-set! . g$bytevector-s32-set!$12865$17Rald)
              (bytevector-s32-ref . g$bytevector-s32-ref$12861$17Rald)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$12867$17Rald)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$12863$17Rald)
              (bytevector-s16-set! . g$bytevector-s16-set!$12857$17Rald)
              (bytevector-s16-ref . g$bytevector-s16-ref$12853$17Rald)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$12859$17Rald)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$12855$17Rald)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$12878$17Rald)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$12876$17Rald)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$12879$17Rald)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$12877$17Rald)
              (no-nans-violation? . g$no-nans-violation?$13520$17Rald)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$13512$17Rald)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$13519$17Rald)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$13511$17Rald)
              (flzero? . g$flzero?$17603$17Rald)
              (fltruncate . g$fltruncate$17598$17Rald)
              (fltan . g$fltan$17587$17Rald)
              (flsqrt . g$flsqrt$17592$17Rald)
              (flsin . g$flsin$17585$17Rald)
              (flround . g$flround$17599$17Rald)
              (flpositive? . g$flpositive?$17601$17Rald)
              (flonum? . g$flonum?$12614$17Rald)
              (flodd? . g$flodd?$17605$17Rald)
              (flnegative? . g$flnegative?$17602$17Rald)
              (flnan? . g$flnan?$17584$17Rald)
              (flmod0 . g$flmod0$17575$17Rald)
              (flmod . g$flmod$17574$17Rald)
              (flmin . g$flmin$17607$17Rald)
              (flmax . g$flmax$17606$17Rald)
              (fllog . g$fllog$17591$17Rald)
              (flinteger? . g$flinteger?$17580$17Rald)
              (flinfinite? . g$flinfinite?$17583$17Rald)
              (flfloor . g$flfloor$17597$17Rald)
              (flfinite? . g$flfinite?$17581$17Rald)
              (flexpt . g$flexpt$17594$17Rald)
              (flexp . g$flexp$17593$17Rald)
              (fleven? . g$fleven?$17604$17Rald)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$17579$17Rald)
              (fldiv0 . g$fldiv0$17572$17Rald)
              (fldiv-and-mod . g$fldiv-and-mod$17576$17Rald)
              (fldiv . g$fldiv$17578$17Rald)
              (flcos . g$flcos$17586$17Rald)
              (flceiling . g$flceiling$17595$17Rald)
              (flatan . g$flatan$17590$17Rald)
              (flasin . g$flasin$17588$17Rald)
              (flacos . g$flacos$17589$17Rald)
              (flabs . g$flabs$17600$17Rald)
              (fl>? . g$fl>?$17569$17Rald)
              (fl>=? . g$fl>=?$17570$17Rald)
              (fl=? . g$fl=?$17566$17Rald)
              (fl<? . g$fl<?$17567$17Rald)
              (fl<=? . g$fl<=?$17568$17Rald)
              (fl/ . g$fl/$17565$17Rald)
              (fl- . g$fl-$17564$17Rald)
              (fl+ . g$fl+$17562$17Rald)
              (fl* . g$fl*$17563$17Rald)
              (fxzero? . g$fxzero?$16053$17Rald)
              (fxxor . g$fxxor$16037$17Rald)
              (fxrotate-bit-field . g$fxrotate-bit-field$16073$17Rald)
              (fxreverse-bit-field . g$fxreverse-bit-field$16074$17Rald)
              (fxpositive? . g$fxpositive?$16049$17Rald)
              (fxodd? . g$fxodd?$16057$17Rald)
              (fxnot . g$fxnot$16029$17Rald)
              (fxnegative? . g$fxnegative?$16051$17Rald)
              (fxmod0 . g$fxmod0$16042$17Rald)
              (fxmod . g$fxmod$16041$17Rald)
              (fxmin . g$fxmin$16059$17Rald)
              (fxmax . g$fxmax$16058$17Rald)
              (fxlength . g$fxlength$16026$17Rald)
              (fxior . g$fxior$16036$17Rald)
              (fxif . g$fxif$16064$17Rald)
              (fxfirst-bit-set . g$fxfirst-bit-set$16027$17Rald)
              (fxeven? . g$fxeven?$16055$17Rald)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$16047$17Rald)
              (fxdiv0 . g$fxdiv0$16045$17Rald)
              (fxdiv-and-mod . g$fxdiv-and-mod$16043$17Rald)
              (fxdiv . g$fxdiv$16039$17Rald)
              (fxcopy-bit-field . g$fxcopy-bit-field$16070$17Rald)
              (fxcopy-bit . g$fxcopy-bit$16066$17Rald)
              (fxbit-set? . g$fxbit-set?$16028$17Rald)
              (fxbit-field . g$fxbit-field$16068$17Rald)
              (fxbit-count . g$fxbit-count$16024$17Rald)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$16072$17Rald)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$16071$17Rald)
              (fxarithmetic-shift . g$fxarithmetic-shift$16022$17Rald)
              (fxand . g$fxand$16035$17Rald)
              (fx>? . g$fx>?$16033$17Rald)
              (fx>=? . g$fx>=?$16034$17Rald)
              (fx=? . g$fx=?$16030$17Rald)
              (fx<? . g$fx<?$16031$17Rald)
              (fx<=? . g$fx<=?$16032$17Rald)
              (fx-/carry . g$fx-/carry$16061$17Rald)
              (fx- . g$fx-$16019$17Rald)
              (fx+/carry . g$fx+/carry$16062$17Rald)
              (fx+ . g$fx+$16017$17Rald)
              (fx*/carry . g$fx*/carry$16060$17Rald)
              (fx* . g$fx*$16018$17Rald)
              (greatest-fixnum . g$greatest-fixnum$16015$17Rald)
              (least-fixnum . g$least-fixnum$16016$17Rald)
              (fixnum-width . g$fixnum-width$12615$17Rald)
              (fixnum? . g$fixnum?$12613$17Rald)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$13782$17Rald)
              (bitwise-if . g$bitwise-if$13776$17Rald)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$13779$17Rald)
              (bitwise-copy-bit . g$bitwise-copy-bit$13777$17Rald)
              (bitwise-bit-field . g$bitwise-bit-field$13778$17Rald)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$13781$17Rald)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$13780$17Rald)
              (zero? . g$zero?$12657$17Rald)
              (vector? . g$vector?$12608$17Rald)
              (vector-set! . g$vector-set!$12623$17Rald)
              (vector-ref . g$vector-ref$12622$17Rald)
              (vector-map . g$vector-map$12679$17Rald)
              (vector-for-each . g$vector-for-each$12680$17Rald)
              (vector-fill! . g$vector-fill!$12624$17Rald)
              (symbol? . g$symbol?$12610$17Rald)
              (symbol=? . g$symbol=?$12669$17Rald)
              (string>? . g$string>?$12666$17Rald)
              (string>=? . g$string>=?$12668$17Rald)
              (string=? . g$string=?$12664$17Rald)
              (string<? . g$string<?$12665$17Rald)
              (string<=? . g$string<=?$12667$17Rald)
              (string-for-each . g$string-for-each$12681$17Rald)
              (reverse . g$reverse$12626$17Rald)
              (rationalize . g$rationalize$12676$17Rald)
              (procedure? . g$procedure?$12612$17Rald)
              (positive? . g$positive?$12655$17Rald)
              (odd? . g$odd?$12659$17Rald)
              (negative? . g$negative?$12656$17Rald)
              (min . g$min$12661$17Rald)
              (max . g$max$12660$17Rald)
              (map . g$map$11835$17Rald)
              (list-tail . g$list-tail$11815$17Rald)
              (list-ref . g$list-ref$11816$17Rald)
              (list->vector . g$list->vector$12620$17Rald)
              (list->string . g$list->string$12621$17Rald)
              (lcm . g$lcm$12663$17Rald)
              (gcd . g$gcd$12662$17Rald)
              (for-each . g$for-each$11836$17Rald)
              (even? . g$even?$12658$17Rald)
              (div0-and-mod0 . g$div0-and-mod0$12619$17Rald)
              (mod0 . g$mod0$12617$17Rald)
              (div-and-mod . g$div-and-mod$12618$17Rald)
              (mod . g$mod$12616$17Rald)
              (char? . g$char?$12607$17Rald)
              (char>? . g$char>?$12673$17Rald)
              (char>=? . g$char>=?$12675$17Rald)
              (char=? . g$char=?$12671$17Rald)
              (char<? . g$char<?$12672$17Rald)
              (char<=? . g$char<=?$12674$17Rald)
              (cddddr . g$cddddr$12654$17Rald)
              (cdddar . g$cdddar$12653$17Rald)
              (cddadr . g$cddadr$12652$17Rald)
              (cddaar . g$cddaar$12651$17Rald)
              (cdaddr . g$cdaddr$12650$17Rald)
              (cdadar . g$cdadar$12649$17Rald)
              (cdaadr . g$cdaadr$12648$17Rald)
              (cdaaar . g$cdaaar$12647$17Rald)
              (cadddr . g$cadddr$12646$17Rald)
              (caddar . g$caddar$12645$17Rald)
              (cadadr . g$cadadr$12644$17Rald)
              (cadaar . g$cadaar$12643$17Rald)
              (caaddr . g$caaddr$12642$17Rald)
              (caadar . g$caadar$12641$17Rald)
              (caaadr . g$caaadr$12640$17Rald)
              (caaaar . g$caaaar$12639$17Rald)
              (cdddr . g$cdddr$12638$17Rald)
              (cddar . g$cddar$12637$17Rald)
              (cdadr . g$cdadr$12636$17Rald)
              (cdaar . g$cdaar$12635$17Rald)
              (caddr . g$caddr$12634$17Rald)
              (cadar . g$cadar$12633$17Rald)
              (caadr . g$caadr$12632$17Rald)
              (caaar . g$caaar$12631$17Rald)
              (cddr . g$cddr$12630$17Rald)
              (cdar . g$cdar$12629$17Rald)
              (cadr . g$cadr$12628$17Rald)
              (caar . g$caar$12627$17Rald)
              (boolean? . g$boolean?$12611$17Rald)
              (boolean=? . g$boolean=?$12670$17Rald)
              (enum-set? . g$enum?$17817$17Rald)
              (make-promise . g$make-promise$13556$17Rald)
              (load/unload . g$load/unload$23507$17Rald)
              (load/args . g$load/args$23506$17Rald)
              (printf . g$printf$17872$17Rald)
              (fprintf . g$fprintf$17873$17Rald)
              (format . g$format$17874$17Rald)
              (trace-printer . g$trace-printer$23503$17Rald)
              (make-traced-macro . g$make-traced-macro$17878$17Rald)
              (assertion-error . g$assertion-error$23425$17Rald)
              (make-parameter . g$make-parameter$18083$17Rald)
              (environment-bindings
                .
                g$environment-bindings$23403$17Rald)
              (environment-symbols . g$environment-symbols$23406$17Rald)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$23402$17Rald)
              (library-path . g$library-path$18910$17Rald)
              (make-compile-time-value
                .
                g$make-compile-time-value$23252$17Rald)
              (expand->core . g$expand->core$23412$17Rald)
              (expand . g$expand$23410$17Rald)
              (syntax-transpose . g$syntax-transpose$23359$17Rald)
              (convert->cps . g$convert->cps$18611$17Rald)
              (installed-libraries . g$installed-libraries$18931$17Rald)
              (uninstall-library . g$uninstall-library$18922$17Rald)
              (pretty-gensyms . g$pretty-gensyms$18291$17Rald)
              (pretty-width . g$pretty-width$18288$17Rald)
              (pretty-print . g$pretty-print$18293$17Rald)))))))
    (g$install-library$18926$17Rald
      'g$13175$17Rald
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13168$17Rald)
        (cosh . g$13167$17Rald)
        (sinh . g$13166$17Rald)
        (make-guid . g$13165$17Rald)
        (unspecified? . g$13164$17Rald)
        (make-list . g$5144$17Rald)
        (last-pair . g$5143$17Rald)
        (load-r5rs . g$13163$17Rald)
        (license . g$13162$17Rald)
        (stacktrace . g$13161$17Rald)
        (ironscheme-build . g$12652$17Rald)
        (remove-location . g$13147$17Rald)
        (set-symbol-value! . g$13146$17Rald)
        (symbol-value . g$13145$17Rald)
        (symbol-bound? . g$13144$17Rald)
        (ungensym . g$13143$17Rald)
        (gensym . g$13142$17Rald)
        (void . g$13141$17Rald)
        (compile-system-libraries . g$12656$17Rald)
        (compile->closure . g$12658$17Rald)
        (compile . g$12657$17Rald)
        (load . g$12651$17Rald)
        (interaction-environment . g$9635$17Rald)
        (string-upcase . g$13136$17Rald)
        (string-titlecase . g$13135$17Rald)
        (string-normalize-nfkd . g$6396$17Rald)
        (string-normalize-nfkc . g$6395$17Rald)
        (string-normalize-nfd . g$6394$17Rald)
        (string-normalize-nfc . g$6393$17Rald)
        (string-foldcase . g$13134$17Rald)
        (string-downcase . g$13133$17Rald)
        (string-ci>? . g$6380$17Rald)
        (string-ci>=? . g$6382$17Rald)
        (string-ci=? . g$6378$17Rald)
        (string-ci<? . g$6379$17Rald)
        (string-ci<=? . g$6381$17Rald)
        (char-whitespace? . g$13132$17Rald)
        (char-upper-case? . g$13131$17Rald)
        (char-title-case? . g$13130$17Rald)
        (char-numeric? . g$13129$17Rald)
        (char-lower-case? . g$13128$17Rald)
        (char-general-category . g$13127$17Rald)
        (char-upcase . g$13126$17Rald)
        (char-titlecase . g$13125$17Rald)
        (char-foldcase . g$13124$17Rald)
        (char-downcase . g$13123$17Rald)
        (char-ci>? . g$6390$17Rald)
        (char-ci>=? . g$6392$17Rald)
        (char-ci=? . g$6388$17Rald)
        (char-ci<? . g$6389$17Rald)
        (char-ci<=? . g$6391$17Rald)
        (char-alphabetic? . g$13122$17Rald)
        (make-variable-transformer . g$9309$17Rald)
        (identifier? . g$9629$17Rald)
        (generate-temporaries . g$9618$17Rald)
        (free-identifier=? . g$9619$17Rald)
        (syntax->datum . g$9631$17Rald)
        (datum->syntax . g$9630$17Rald)
        (bound-identifier=? . g$9620$17Rald)
        (record-type-descriptor? . g$13121$17Rald)
        (record-predicate . g$13120$17Rald)
        (record-mutator . g$13119$17Rald)
        (record-constructor . g$13118$17Rald)
        (record-accessor . g$13117$17Rald)
        (make-record-type-descriptor . g$13116$17Rald)
        (make-record-constructor-descriptor . g$13115$17Rald)
        (record? . g$13114$17Rald)
        (record-type-uid . g$13113$17Rald)
        (record-type-sealed? . g$13112$17Rald)
        (record-type-parent . g$13111$17Rald)
        (record-type-opaque? . g$13110$17Rald)
        (record-type-name . g$13109$17Rald)
        (record-type-generative? . g$13108$17Rald)
        (record-type-field-names . g$13107$17Rald)
        (record-rtd . g$13106$17Rald)
        (record-field-mutable? . g$13105$17Rald)
        (delete-file . g$5787$17Rald)
        (file-exists? . g$5786$17Rald)
        (vector-sort! . g$13104$17Rald)
        (vector-sort . g$13103$17Rald)
        (list-sort . g$6349$17Rald)
        (symbol-hash . g$13102$17Rald)
        (string-ci-hash . g$13101$17Rald)
        (string-hash . g$13100$17Rald)
        (equal-hash . g$13099$17Rald)
        (hashtable-equivalence-function . g$13098$17Rald)
        (make-hashtable . g$13097$17Rald)
        (hashtable-hash-function . g$13096$17Rald)
        (make-eqv-hashtable . g$5754$17Rald)
        (make-eq-hashtable . g$5753$17Rald)
        (hashtable? . g$13095$17Rald)
        (hashtable-update! . g$5760$17Rald)
        (hashtable-size . g$5755$17Rald)
        (hashtable-set! . g$5757$17Rald)
        (hashtable-ref . g$5756$17Rald)
        (hashtable-mutable? . g$13094$17Rald)
        (hashtable-keys . g$13093$17Rald)
        (hashtable-entries . g$13092$17Rald)
        (hashtable-delete! . g$5758$17Rald)
        (hashtable-copy . g$13091$17Rald)
        (hashtable-contains? . g$5759$17Rald)
        (hashtable-clear! . g$5761$17Rald)
        (call-with-output-file . g$8133$17Rald)
        (call-with-input-file . g$8132$17Rald)
        (write-char . g$8124$17Rald)
        (write . g$13090$17Rald)
        (with-output-to-file . g$8131$17Rald)
        (with-input-from-file . g$8130$17Rald)
        (read-char . g$8123$17Rald)
        (read . g$13089$17Rald)
        (peek-char . g$8122$17Rald)
        (open-output-file . g$13088$17Rald)
        (open-input-file . g$13087$17Rald)
        (newline . g$8134$17Rald)
        (display . g$13086$17Rald)
        (close-output-port . g$13085$17Rald)
        (close-input-port . g$13084$17Rald)
        (eof-object? . g$13083$17Rald)
        (eof-object . g$13082$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (utf-8-codec . g$13076$17Rald)
        (utf-16-codec . g$13075$17Rald)
        (transcoder-error-handling-mode . g$13074$17Rald)
        (transcoder-eol-style . g$13073$17Rald)
        (transcoder-codec . g$13072$17Rald)
        (transcoded-port . g$13071$17Rald)
        (textual-port? . g$13070$17Rald)
        (string->bytevector . g$13069$17Rald)
        (standard-output-port . g$13068$17Rald)
        (standard-input-port . g$13067$17Rald)
        (standard-error-port . g$13066$17Rald)
        (set-port-position! . g$13065$17Rald)
        (put-u8 . g$13064$17Rald)
        (put-string . g$13063$17Rald)
        (put-datum . g$8102$17Rald)
        (put-char . g$13062$17Rald)
        (put-bytevector . g$13061$17Rald)
        (port? . g$8107$17Rald)
        (port-transcoder . g$13060$17Rald)
        (port-position . g$13059$17Rald)
        (port-has-set-port-position!? . g$13058$17Rald)
        (port-has-port-position? . g$13057$17Rald)
        (port-eof? . g$13056$17Rald)
        (output-port-buffer-mode . g$13055$17Rald)
        (open-string-output-port . g$8106$17Rald)
        (open-string-input-port . g$13054$17Rald)
        (open-file-output-port . g$13053$17Rald)
        (open-file-input/output-port . g$13052$17Rald)
        (open-file-input-port . g$13051$17Rald)
        (open-bytevector-output-port . g$13050$17Rald)
        (open-bytevector-input-port . g$13049$17Rald)
        (native-transcoder . g$13048$17Rald)
        (native-eol-style . g$13047$17Rald)
        (make-transcoder . g$13046$17Rald)
        (latin-1-codec . g$13045$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (make-i/o-encoding-error . g$6282$17Rald)
        (make-i/o-decoding-error . g$6269$17Rald)
        (make-custom-textual-output-port . g$13044$17Rald)
        (make-custom-textual-input/output-port . g$13043$17Rald)
        (make-custom-textual-input-port . g$13042$17Rald)
        (make-custom-binary-output-port . g$13041$17Rald)
        (make-custom-binary-input/output-port . g$13040$17Rald)
        (make-custom-binary-input-port . g$13039$17Rald)
        (make-bytevector . g$13038$17Rald)
        (lookahead-u8 . g$13037$17Rald)
        (lookahead-char . g$13036$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (i/o-encoding-error? . g$6284$17Rald)
        (i/o-encoding-error-char . g$6285$17Rald)
        (i/o-decoding-error? . g$6270$17Rald)
        (get-u8 . g$13035$17Rald)
        (get-string-n! . g$13034$17Rald)
        (get-string-n . g$13033$17Rald)
        (get-string-all . g$13032$17Rald)
        (get-line . g$13031$17Rald)
        (get-datum . g$8103$17Rald)
        (get-char . g$13030$17Rald)
        (get-bytevector-some . g$13029$17Rald)
        (get-bytevector-n! . g$13028$17Rald)
        (get-bytevector-n . g$13027$17Rald)
        (get-bytevector-all . g$13026$17Rald)
        (flush-output-port . g$13025$17Rald)
        (close-port . g$13024$17Rald)
        (call-with-string-output-port . g$8108$17Rald)
        (call-with-port . g$8109$17Rald)
        (call-with-bytevector-output-port . g$13023$17Rald)
        (bytevector->string . g$13022$17Rald)
        (buffer-mode? . g$13021$17Rald)
        (binary-port? . g$13020$17Rald)
        (scheme-report-environment . g$9608$17Rald)
        (quotient . g$6328$17Rald)
        (null-environment . g$9607$17Rald)
        (remainder . g$6329$17Rald)
        (modulo . g$6330$17Rald)
        (inexact->exact . g$6325$17Rald)
        (force . g$6332$17Rald)
        (exact->inexact . g$6326$17Rald)
        (exit . g$13019$17Rald)
        (command-line . g$12647$17Rald)
        (string-fill! . g$13018$17Rald)
        (string-set! . g$13017$17Rald)
        (set-cdr! . g$13016$17Rald)
        (set-car! . g$13015$17Rald)
        (remove . g$5166$17Rald)
        (remv . g$5167$17Rald)
        (remp . g$5147$17Rald)
        (remq . g$5168$17Rald)
        (partition . g$5146$17Rald)
        (memv . g$5154$17Rald)
        (memq . g$5153$17Rald)
        (memp . g$5156$17Rald)
        (member . g$5155$17Rald)
        (exists . g$5160$17Rald)
        (for-all . g$5159$17Rald)
        (fold-right . g$5165$17Rald)
        (fold-left . g$5164$17Rald)
        (find . g$5145$17Rald)
        (filter . g$5148$17Rald)
        (cons* . g$5163$17Rald)
        (assv . g$5150$17Rald)
        (assq . g$5149$17Rald)
        (assp . g$5152$17Rald)
        (assoc . g$5151$17Rald)
        (with-exception-handler . g$13014$17Rald)
        (raise-continuable . g$13013$17Rald)
        (raise . g$13012$17Rald)
        (eval . g$9610$17Rald)
        (environment . g$9606$17Rald)
        (make-enumeration . g$8194$17Rald)
        (enum-set=? . g$8201$17Rald)
        (enum-set-universe . g$8195$17Rald)
        (enum-set-union . g$8202$17Rald)
        (enum-set-subset? . g$8200$17Rald)
        (enum-set-projection . g$8206$17Rald)
        (enum-set-member? . g$8199$17Rald)
        (enum-set-intersection . g$8203$17Rald)
        (enum-set-indexer . g$8196$17Rald)
        (enum-set-difference . g$8204$17Rald)
        (enum-set-constructor . g$8197$17Rald)
        (enum-set-complement . g$8205$17Rald)
        (enum-set->list . g$8198$17Rald)
        (who-condition? . g$6051$17Rald)
        (warning? . g$5970$17Rald)
        (violation? . g$6009$17Rald)
        (undefined-violation? . g$6121$17Rald)
        (syntax-violation? . g$6106$17Rald)
        (syntax-violation-subform . g$6108$17Rald)
        (syntax-violation-form . g$6107$17Rald)
        (syntax-violation . g$9628$17Rald)
        (simple-conditions . g$13011$17Rald)
        (serious-condition? . g$5983$17Rald)
        (non-continuable-violation? . g$6065$17Rald)
        (message-condition? . g$5956$17Rald)
        (make-who-condition . g$6049$17Rald)
        (make-warning . g$5969$17Rald)
        (make-violation . g$6008$17Rald)
        (make-undefined-violation . g$6120$17Rald)
        (make-syntax-violation . g$6103$17Rald)
        (make-serious-condition . g$5982$17Rald)
        (make-non-continuable-violation . g$6064$17Rald)
        (make-message-condition . g$5954$17Rald)
        (make-lexical-violation . g$6090$17Rald)
        (make-irritants-condition . g$6034$17Rald)
        (make-implementation-restriction-violation . g$6077$17Rald)
        (make-error . g$5995$17Rald)
        (make-assertion-violation . g$6021$17Rald)
        (lexical-violation? . g$6091$17Rald)
        (irritants-condition? . g$6036$17Rald)
        (implementation-restriction-violation? . g$6078$17Rald)
        (error? . g$5996$17Rald)
        (condition-who . g$6052$17Rald)
        (condition-predicate . g$13010$17Rald)
        (condition-message . g$5957$17Rald)
        (condition-irritants . g$6037$17Rald)
        (condition-accessor . g$13009$17Rald)
        (condition . g$13008$17Rald)
        (assertion-violation? . g$6022$17Rald)
        (condition? . g$13007$17Rald)
        (utf32->string . g$13006$17Rald)
        (utf16->string . g$13005$17Rald)
        (utf8->string . g$13004$17Rald)
        (uint-list->bytevector . g$13003$17Rald)
        (u8-list->bytevector . g$13002$17Rald)
        (string->utf8 . g$13001$17Rald)
        (string->utf32 . g$13000$17Rald)
        (string->utf16 . g$12999$17Rald)
        (sint-list->bytevector . g$12998$17Rald)
        (native-endianness . g$5793$17Rald)
        (bytevector? . g$5482$17Rald)
        (bytevector=? . g$12997$17Rald)
        (bytevector-uint-set! . g$12996$17Rald)
        (bytevector-uint-ref . g$12995$17Rald)
        (bytevector-u8-set! . g$12994$17Rald)
        (bytevector-u8-ref . g$12993$17Rald)
        (bytevector-u64-set! . g$5814$17Rald)
        (bytevector-u64-ref . g$5810$17Rald)
        (bytevector-u64-native-set! . g$5816$17Rald)
        (bytevector-u64-native-ref . g$5812$17Rald)
        (bytevector-u32-set! . g$5806$17Rald)
        (bytevector-u32-ref . g$5802$17Rald)
        (bytevector-u32-native-set! . g$5808$17Rald)
        (bytevector-u32-native-ref . g$5804$17Rald)
        (bytevector-u16-set! . g$5798$17Rald)
        (bytevector-u16-ref . g$5794$17Rald)
        (bytevector-u16-native-set! . g$5800$17Rald)
        (bytevector-u16-native-ref . g$5796$17Rald)
        (bytevector-sint-set! . g$12992$17Rald)
        (bytevector-sint-ref . g$12991$17Rald)
        (bytevector-s8-set! . g$12990$17Rald)
        (bytevector-s8-ref . g$12989$17Rald)
        (bytevector-s64-set! . g$5815$17Rald)
        (bytevector-s64-ref . g$5811$17Rald)
        (bytevector-s64-native-set! . g$5817$17Rald)
        (bytevector-s64-native-ref . g$5813$17Rald)
        (bytevector-s32-set! . g$5807$17Rald)
        (bytevector-s32-ref . g$5803$17Rald)
        (bytevector-s32-native-set! . g$5809$17Rald)
        (bytevector-s32-native-ref . g$5805$17Rald)
        (bytevector-s16-set! . g$5799$17Rald)
        (bytevector-s16-ref . g$5795$17Rald)
        (bytevector-s16-native-set! . g$5801$17Rald)
        (bytevector-s16-native-ref . g$5797$17Rald)
        (bytevector-length . g$12988$17Rald)
        (bytevector-ieee-single-set! . g$12987$17Rald)
        (bytevector-ieee-single-ref . g$12986$17Rald)
        (bytevector-ieee-single-native-set! . g$5820$17Rald)
        (bytevector-ieee-single-native-ref . g$5818$17Rald)
        (bytevector-ieee-double-set! . g$12985$17Rald)
        (bytevector-ieee-double-ref . g$12984$17Rald)
        (bytevector-ieee-double-native-set! . g$5821$17Rald)
        (bytevector-ieee-double-native-ref . g$5819$17Rald)
        (bytevector-fill! . g$12983$17Rald)
        (bytevector-copy! . g$12982$17Rald)
        (bytevector-copy . g$12981$17Rald)
        (bytevector->uint-list . g$12980$17Rald)
        (bytevector->u8-list . g$12979$17Rald)
        (bytevector->sint-list . g$12978$17Rald)
        (no-nans-violation? . g$6311$17Rald)
        (no-infinities-violation? . g$6298$17Rald)
        (make-no-nans-violation . g$6310$17Rald)
        (make-no-infinities-violation . g$6297$17Rald)
        (real->flonum . g$12977$17Rald)
        (flzero? . g$7548$17Rald)
        (fltruncate . g$7543$17Rald)
        (fltan . g$7529$17Rald)
        (flsqrt . g$7534$17Rald)
        (flsin . g$7527$17Rald)
        (flround . g$7544$17Rald)
        (flpositive? . g$7546$17Rald)
        (flonum? . g$5487$17Rald)
        (flodd? . g$7550$17Rald)
        (flnumerator . g$12976$17Rald)
        (flnegative? . g$7547$17Rald)
        (flnan? . g$7526$17Rald)
        (flmod0 . g$7511$17Rald)
        (flmod . g$7510$17Rald)
        (flmin . g$7552$17Rald)
        (flmax . g$7551$17Rald)
        (fllog . g$7533$17Rald)
        (flinteger? . g$7519$17Rald)
        (flinfinite? . g$7525$17Rald)
        (flfloor . g$7542$17Rald)
        (flfinite? . g$7520$17Rald)
        (flexpt . g$7536$17Rald)
        (flexp . g$7535$17Rald)
        (fleven? . g$7549$17Rald)
        (fldiv0-and-mod0 . g$7518$17Rald)
        (fldiv0 . g$7505$17Rald)
        (fldiv-and-mod . g$7512$17Rald)
        (fldiv . g$7517$17Rald)
        (fldenominator . g$12975$17Rald)
        (flcos . g$7528$17Rald)
        (flceiling . g$7537$17Rald)
        (flatan . g$7532$17Rald)
        (flasin . g$7530$17Rald)
        (flacos . g$7531$17Rald)
        (flabs . g$7545$17Rald)
        (fl>? . g$7499$17Rald)
        (fl>=? . g$7500$17Rald)
        (fl=? . g$7496$17Rald)
        (fl<? . g$7497$17Rald)
        (fl<=? . g$7498$17Rald)
        (fl/ . g$7495$17Rald)
        (fl- . g$7494$17Rald)
        (fl+ . g$7492$17Rald)
        (fl* . g$7493$17Rald)
        (fixnum->flonum . g$12974$17Rald)
        (fxzero? . g$6592$17Rald)
        (fxxor . g$6555$17Rald)
        (fxrotate-bit-field . g$6630$17Rald)
        (fxreverse-bit-field . g$6631$17Rald)
        (fxpositive? . g$6582$17Rald)
        (fxodd? . g$6602$17Rald)
        (fxnot . g$6536$17Rald)
        (fxnegative? . g$6587$17Rald)
        (fxmod0 . g$6566$17Rald)
        (fxmod . g$6565$17Rald)
        (fxmin . g$6604$17Rald)
        (fxmax . g$6603$17Rald)
        (fxlength . g$6533$17Rald)
        (fxior . g$6554$17Rald)
        (fxif . g$6612$17Rald)
        (fxfirst-bit-set . g$6534$17Rald)
        (fxeven? . g$6597$17Rald)
        (fxdiv0-and-mod0 . g$6577$17Rald)
        (fxdiv0 . g$6572$17Rald)
        (fxdiv-and-mod . g$6567$17Rald)
        (fxdiv . g$6560$17Rald)
        (fxcopy-bit-field . g$6627$17Rald)
        (fxcopy-bit . g$6617$17Rald)
        (fxbit-set? . g$6535$17Rald)
        (fxbit-field . g$6622$17Rald)
        (fxbit-count . g$6528$17Rald)
        (fxarithmetic-shift-right . g$6629$17Rald)
        (fxarithmetic-shift-left . g$6628$17Rald)
        (fxarithmetic-shift . g$6523$17Rald)
        (fxand . g$6553$17Rald)
        (fx>? . g$6545$17Rald)
        (fx>=? . g$6546$17Rald)
        (fx=? . g$6542$17Rald)
        (fx<? . g$6543$17Rald)
        (fx<=? . g$6544$17Rald)
        (fx-/carry . g$6606$17Rald)
        (fx- . g$6517$17Rald)
        (fx+/carry . g$6607$17Rald)
        (fx+ . g$6515$17Rald)
        (fx*/carry . g$6605$17Rald)
        (fx* . g$6516$17Rald)
        (greatest-fixnum . g$6486$17Rald)
        (least-fixnum . g$6487$17Rald)
        (fixnum-width . g$5488$17Rald)
        (fixnum? . g$5486$17Rald)
        (bitwise-rotate-bit-field . g$6460$17Rald)
        (bitwise-reverse-bit-field . g$12973$17Rald)
        (bitwise-length . g$12972$17Rald)
        (bitwise-if . g$6454$17Rald)
        (bitwise-first-bit-set . g$12971$17Rald)
        (bitwise-copy-bit-field . g$6457$17Rald)
        (bitwise-copy-bit . g$6455$17Rald)
        (bitwise-bit-set? . g$12970$17Rald)
        (bitwise-bit-field . g$6456$17Rald)
        (bitwise-bit-count . g$12969$17Rald)
        (bitwise-xor . g$12968$17Rald)
        (bitwise-ior . g$12967$17Rald)
        (bitwise-and . g$12966$17Rald)
        (bitwise-not . g$12965$17Rald)
        (bitwise-arithmetic-shift-right . g$6459$17Rald)
        (bitwise-arithmetic-shift-left . g$6458$17Rald)
        (bitwise-arithmetic-shift . g$12964$17Rald)
        (zero? . g$5530$17Rald)
        (vector? . g$5481$17Rald)
        (vector-set! . g$5496$17Rald)
        (vector-ref . g$5495$17Rald)
        (vector-map . g$5562$17Rald)
        (vector-length . g$12963$17Rald)
        (vector-for-each . g$5563$17Rald)
        (vector-fill! . g$5497$17Rald)
        (vector->list . g$12962$17Rald)
        (vector . g$12961$17Rald)
        (values . g$12960$17Rald)
        (truncate . g$12959$17Rald)
        (tan . g$12958$17Rald)
        (symbol? . g$5483$17Rald)
        (symbol=? . g$5547$17Rald)
        (symbol->string . g$12957$17Rald)
        (substring . g$12956$17Rald)
        (string? . g$12955$17Rald)
        (string>? . g$5544$17Rald)
        (string>=? . g$5546$17Rald)
        (string=? . g$5542$17Rald)
        (string<? . g$5543$17Rald)
        (string<=? . g$5545$17Rald)
        (string-ref . g$12954$17Rald)
        (string-length . g$12953$17Rald)
        (string-for-each . g$5564$17Rald)
        (string-copy . g$12952$17Rald)
        (string-append . g$12951$17Rald)
        (string->symbol . g$12950$17Rald)
        (string->number . g$12949$17Rald)
        (string->list . g$12948$17Rald)
        (string . g$12947$17Rald)
        (sqrt . g$12946$17Rald)
        (sin . g$12945$17Rald)
        (round . g$12944$17Rald)
        (reverse . g$5499$17Rald)
        (real? . g$12943$17Rald)
        (real-valued? . g$12942$17Rald)
        (real-part . g$12941$17Rald)
        (rationalize . g$5559$17Rald)
        (rational? . g$12940$17Rald)
        (rational-valued? . g$12939$17Rald)
        (procedure? . g$5485$17Rald)
        (positive? . g$5528$17Rald)
        (pair? . g$12938$17Rald)
        (odd? . g$5532$17Rald)
        (numerator . g$12937$17Rald)
        (number? . g$12936$17Rald)
        (number->string . g$12935$17Rald)
        (null? . g$12934$17Rald)
        (not . g$12933$17Rald)
        (negative? . g$5529$17Rald)
        (nan? . g$12932$17Rald)
        (min . g$5534$17Rald)
        (max . g$5533$17Rald)
        (map . g$5161$17Rald)
        (make-vector . g$12931$17Rald)
        (make-string . g$12930$17Rald)
        (make-rectangular . g$12929$17Rald)
        (make-polar . g$12928$17Rald)
        (magnitude . g$12927$17Rald)
        (log . g$12926$17Rald)
        (list? . g$12925$17Rald)
        (list-tail . g$5141$17Rald)
        (list-ref . g$5142$17Rald)
        (list->vector . g$5493$17Rald)
        (list->string . g$5494$17Rald)
        (list . g$12924$17Rald)
        (length . g$12923$17Rald)
        (lcm . g$5536$17Rald)
        (integer? . g$12922$17Rald)
        (integer-valued? . g$12921$17Rald)
        (integer->char . g$12920$17Rald)
        (infinite? . g$12919$17Rald)
        (inexact? . g$12918$17Rald)
        (inexact . g$12917$17Rald)
        (imag-part . g$12916$17Rald)
        (gcd . g$5535$17Rald)
        (for-each . g$5162$17Rald)
        (floor . g$12915$17Rald)
        (finite? . g$12914$17Rald)
        (expt . g$12913$17Rald)
        (exp . g$12912$17Rald)
        (exact? . g$12911$17Rald)
        (exact-integer-sqrt . g$12910$17Rald)
        (exact . g$12909$17Rald)
        (even? . g$5531$17Rald)
        (error . g$12908$17Rald)
        (eqv? . g$12907$17Rald)
        (equal? . g$12906$17Rald)
        (eq? . g$12905$17Rald)
        (dynamic-wind . g$12904$17Rald)
        (div0-and-mod0 . g$5492$17Rald)
        (mod0 . g$5490$17Rald)
        (div0 . g$12903$17Rald)
        (div-and-mod . g$5491$17Rald)
        (mod . g$5489$17Rald)
        (div . g$12902$17Rald)
        (denominator . g$12901$17Rald)
        (cos . g$12900$17Rald)
        (cons . g$12899$17Rald)
        (complex? . g$12898$17Rald)
        (char? . g$5480$17Rald)
        (char>? . g$5556$17Rald)
        (char>=? . g$5558$17Rald)
        (char=? . g$5554$17Rald)
        (char<? . g$5555$17Rald)
        (char<=? . g$5557$17Rald)
        (char->integer . g$12897$17Rald)
        (ceiling . g$12896$17Rald)
        (call-with-values . g$12895$17Rald)
        (call/cc . g$12894$17Rald)
        (call-with-current-continuation . g$12893$17Rald)
        (cddddr . g$5527$17Rald)
        (cdddar . g$5526$17Rald)
        (cddadr . g$5525$17Rald)
        (cddaar . g$5524$17Rald)
        (cdaddr . g$5523$17Rald)
        (cdadar . g$5522$17Rald)
        (cdaadr . g$5521$17Rald)
        (cdaaar . g$5520$17Rald)
        (cadddr . g$5519$17Rald)
        (caddar . g$5518$17Rald)
        (cadadr . g$5517$17Rald)
        (cadaar . g$5516$17Rald)
        (caaddr . g$5515$17Rald)
        (caadar . g$5514$17Rald)
        (caaadr . g$5513$17Rald)
        (caaaar . g$5512$17Rald)
        (cdddr . g$5511$17Rald)
        (cddar . g$5510$17Rald)
        (cdadr . g$5509$17Rald)
        (cdaar . g$5508$17Rald)
        (caddr . g$5507$17Rald)
        (cadar . g$5506$17Rald)
        (caadr . g$5505$17Rald)
        (caaar . g$5504$17Rald)
        (cddr . g$5503$17Rald)
        (cdar . g$5502$17Rald)
        (cadr . g$5501$17Rald)
        (caar . g$5500$17Rald)
        (cdr . g$12892$17Rald)
        (car . g$12891$17Rald)
        (boolean? . g$5484$17Rald)
        (boolean=? . g$5548$17Rald)
        (atan . g$12890$17Rald)
        (assertion-violation . g$12889$17Rald)
        (asin . g$12888$17Rald)
        (apply . g$12887$17Rald)
        (append . g$12886$17Rald)
        (angle . g$12885$17Rald)
        (acos . g$12884$17Rald)
        (abs . g$12883$17Rald)
        (/ . g$12882$17Rald)
        (* . g$12881$17Rald)
        (- . g$12880$17Rald)
        (+ . g$12879$17Rald)
        (>= . g$12878$17Rald)
        (> . g$12877$17Rald)
        (= . g$12876$17Rald)
        (<= . g$12875$17Rald)
        (< . g$12874$17Rald)
        (deserialize-port . g$12837$17Rald)
        (serialize-port . g$12836$17Rald)
        (enum-set? . g$8171$17Rald)
        (load/unload . g$12650$17Rald)
        (load/args . g$12649$17Rald)
        (printf . g$8280$17Rald)
        (fprintf . g$8281$17Rald)
        (format . g$8282$17Rald)
        (procedure-form . g$12835$17Rald)
        (procedure-environment . g$12834$17Rald)
        (procedure-name . g$12833$17Rald)
        (procedure-arity . g$12832$17Rald)
        (gc-collect . g$12831$17Rald)
        (typeof . g$12830$17Rald)
        (clr-type? . g$12829$17Rald)
        (get-clr-type . g$12828$17Rald)
        (vector-append . g$12826$17Rald)
        (vector-filter . g$12825$17Rald)
        (vector-reverse! . g$12824$17Rald)
        (vector-contains? . g$12823$17Rald)
        (vector-index-of . g$12822$17Rald)
        (vector-copy . g$12821$17Rald)
        (vector-binary-search . g$12820$17Rald)
        (string-ci-compare . g$12819$17Rald)
        (string-compare . g$12818$17Rald)
        (string-format . g$12817$17Rald)
        (trace-printer . g$12646$17Rald)
        (time-it . g$12815$17Rald)
        (make-parameter . g$8309$17Rald)
        (open-tcp-input/output-port . g$12812$17Rald)
        (hashtable-for-each . g$12811$17Rald)
        (hashtable-map . g$12810$17Rald)
        (environment-bindings . g$9602$17Rald)
        (environment-symbols . g$9605$17Rald)
        (interaction-environment-symbols . g$9601$17Rald)
        (optimization-level . g$12809$17Rald)
        (library-path . g$8931$17Rald)
        (make-compile-time-value . g$9310$17Rald)
        (expand->core . g$9611$17Rald)
        (expand . g$9609$17Rald)
        (syntax-transpose . g$9548$17Rald)
        (convert->cps . g$8628$17Rald)
        (installed-libraries . g$8952$17Rald)
        (uninstall-library . g$8943$17Rald)
        (pretty-gensyms . g$8392$17Rald)
        (pretty-width . g$8389$17Rald)
        (pretty-print . g$8394$17Rald)
        (&no-nans . g$12808$17Rald)
        (&no-infinities . g$12807$17Rald)
        (&i/o-encoding . g$12806$17Rald)
        (&i/o-decoding . g$12805$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald)
        (&non-continuable . g$12794$17Rald)
        (&undefined . g$12793$17Rald)
        (&syntax . g$12792$17Rald)
        (&lexical . g$12791$17Rald)
        (&implementation-restriction . g$12790$17Rald)
        (&who . g$12789$17Rald)
        (&irritants . g$12788$17Rald)
        (&assertion . g$12787$17Rald)
        (&violation . g$12786$17Rald)
        (&error . g$12785$17Rald)
        (&serious . g$12784$17Rald)
        (&warning . g$12783$17Rald)
        (&message . g$12782$17Rald)
        (&condition . g$12781$17Rald)
        (define-condition-type . g$12780$17Rald)
        (define-enumeration . g$12779$17Rald)
        (define-record-type . g$12778$17Rald)
        (parent-rtd . g$12777$17Rald)
        (nongenerative . g$12776$17Rald)
        (opaque . g$12775$17Rald)
        (sealed . g$12774$17Rald)
        (protocol . g$12773$17Rald)
        (parent . g$12772$17Rald)
        (immutable . g$12771$17Rald)
        (mutable . g$12770$17Rald)
        (fields . g$12769$17Rald)
        (error-handling-mode . g$12768$17Rald)
        (file-options . g$12767$17Rald)
        (buffer-mode . g$12766$17Rald)
        (eol-style . g$12765$17Rald)
        (guard . g$12764$17Rald)
        (trace-letrec-syntax . g$12763$17Rald)
        (trace-let-syntax . g$12762$17Rald)
        (trace-define-syntax . g$12761$17Rald)
        (trace-define . g$12760$17Rald)
        (trace-lambda . g$12759$17Rald)
        (unsyntax-splicing . g$12758$17Rald)
        (unsyntax . g$12757$17Rald)
        (unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (_ . g$12754$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (... . g$12751$17Rald)
        (assert . g$12750$17Rald)
        (endianness . g$12749$17Rald)
        (delay . g$12748$17Rald)
        (time . g$12747$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (do . g$12744$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (identifier-syntax . g$12740$17Rald)
        (with-syntax . g$12739$17Rald)
        (quasisyntax . g$12738$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (include-into . g$12735$17Rald)
        (include . g$12734$17Rald)
        (let-values . g$12732$17Rald)
        (let*-values . g$12731$17Rald)
        (record-constructor-descriptor . g$12730$17Rald)
        (record-type-descriptor . g$12729$17Rald)
        (fluid-let-syntax . g$12728$17Rald)
        (case . g$12727$17Rald)
        (parameterize . g$12726$17Rald)
        (unless . g$12725$17Rald)
        (when . g$12724$17Rald)
        (if . g$12723$17Rald)
        (letrec* . g$12722$17Rald)
        (letrec . g$12721$17Rald)
        (case-lambda . g$12719$17Rald)
        (lambda . g$12718$17Rald)
        (syntax . g$12717$17Rald)
        (syntax-case . g$12716$17Rald)
        (quote . g$12715$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (export . g$12710$17Rald)
        (import . g$12709$17Rald)
        (library . g$12708$17Rald)
        (begin . g$12707$17Rald)
        (module . g$12706$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13176$17Rald
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12813$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13177$17Rald
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13173$17Rald)
        (annotation-source . g$13172$17Rald)
        (annotation-expression . g$13171$17Rald)
        (annotation? . g$13170$17Rald)
        (read-annotated . g$13169$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13178$17Rald
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13140$17Rald)
        (serialize-library . g$13139$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13179$17Rald
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13138$17Rald)
        (variable-transformer-procedure . g$9312$17Rald)
        (variable-transformer? . g$9311$17Rald)
        (eqv-hash . g$12839$17Rald)
        (reverse! . g$12838$17Rald)
        (make-promise . g$6331$17Rald)
        (format . g$8282$17Rald)
        (get-command-line . g$12827$17Rald)
        (make-traced-procedure . g$12816$17Rald)
        (make-traced-macro . g$8302$17Rald)
        (assertion-error . g$9624$17Rald)
        (library-locator . g$12814$17Rald)
        (get-library-paths . g$12813$17Rald)
        (library-path . g$8931$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13180$17Rald
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($fl>=? . g$12873$17Rald)
        ($fl>? . g$12872$17Rald)
        ($fl<=? . g$12871$17Rald)
        ($fl<? . g$12870$17Rald)
        ($fl- . g$12869$17Rald)
        ($fl/ . g$12868$17Rald)
        ($fl* . g$12867$17Rald)
        ($fl+ . g$12866$17Rald)
        ($fl=? . g$12865$17Rald)
        ($try . g$12864$17Rald)
        ($fxarithmetic-shift-right . g$12863$17Rald)
        ($fxarithmetic-shift-left . g$12862$17Rald)
        ($$fx- . g$12861$17Rald)
        ($$fx* . g$12860$17Rald)
        ($$fx+ . g$12859$17Rald)
        ($fxnot . g$12858$17Rald)
        ($fxxor . g$12857$17Rald)
        ($fxior . g$12856$17Rald)
        ($fxand . g$12855$17Rald)
        ($fx>=? . g$12854$17Rald)
        ($fx>? . g$12853$17Rald)
        ($fx<=? . g$12852$17Rald)
        ($fx<? . g$12851$17Rald)
        ($fx- . g$12850$17Rald)
        ($fxmod0 . g$12849$17Rald)
        ($fxdiv0 . g$12848$17Rald)
        ($fx* . g$12847$17Rald)
        ($fx+ . g$12846$17Rald)
        ($fx=? . g$12845$17Rald)
        ($vector-set! . g$12844$17Rald)
        ($vector-ref . g$12843$17Rald)
        ($cdr . g$12842$17Rald)
        ($car . g$12841$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13181$17Rald
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12840$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13182$17Rald
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((ffi-call-internal . g$13160$17Rald)
        (define-clr-class-internal . g$13159$17Rald)
        (clr-field-set!-internal . g$13158$17Rald)
        (clr-field-get-internal . g$13157$17Rald)
        (clr-cast-internal . g$13156$17Rald)
        (clr-call-internal . g$13155$17Rald)
        (clr-new-internal . g$13154$17Rald)
        (clr-new-array-internal . g$13153$17Rald)
        (clr-is-internal . g$13152$17Rald)
        (clr-reference-internal . g$13151$17Rald)
        (clr-using-internal . g$13150$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13183$17Rald
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (delay . g$12748$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (do . g$12744$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (case . g$12727$17Rald)
        (if . g$12723$17Rald)
        (letrec . g$12721$17Rald)
        (lambda . g$12718$17Rald)
        (quote . g$12715$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (begin . g$12707$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13184$17Rald
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13137$17Rald)
        (string-ci>? . g$6380$17Rald)
        (string-ci>=? . g$6382$17Rald)
        (string-ci=? . g$6378$17Rald)
        (string-ci<? . g$6379$17Rald)
        (string-ci<=? . g$6381$17Rald)
        (char-whitespace? . g$13132$17Rald)
        (char-upper-case? . g$13131$17Rald)
        (char-numeric? . g$13129$17Rald)
        (char-lower-case? . g$13128$17Rald)
        (char-upcase . g$13126$17Rald)
        (char-downcase . g$13123$17Rald)
        (char-ci>? . g$6390$17Rald)
        (char-ci>=? . g$6392$17Rald)
        (char-ci=? . g$6388$17Rald)
        (char-ci<? . g$6389$17Rald)
        (char-ci<=? . g$6391$17Rald)
        (char-alphabetic? . g$13122$17Rald)
        (call-with-output-file . g$8133$17Rald)
        (call-with-input-file . g$8132$17Rald)
        (write-char . g$8124$17Rald)
        (write . g$13090$17Rald)
        (with-output-to-file . g$8131$17Rald)
        (with-input-from-file . g$8130$17Rald)
        (read-char . g$8123$17Rald)
        (read . g$13089$17Rald)
        (peek-char . g$8122$17Rald)
        (open-output-file . g$13088$17Rald)
        (open-input-file . g$13087$17Rald)
        (newline . g$8134$17Rald)
        (display . g$13086$17Rald)
        (close-output-port . g$13085$17Rald)
        (close-input-port . g$13084$17Rald)
        (eof-object? . g$13083$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (scheme-report-environment . g$9608$17Rald)
        (quotient . g$6328$17Rald)
        (null-environment . g$9607$17Rald)
        (remainder . g$6329$17Rald)
        (modulo . g$6330$17Rald)
        (inexact->exact . g$6325$17Rald)
        (force . g$6332$17Rald)
        (exact->inexact . g$6326$17Rald)
        (string-fill! . g$13018$17Rald)
        (string-set! . g$13017$17Rald)
        (set-cdr! . g$13016$17Rald)
        (set-car! . g$13015$17Rald)
        (memv . g$5154$17Rald)
        (memq . g$5153$17Rald)
        (member . g$5155$17Rald)
        (assv . g$5150$17Rald)
        (assq . g$5149$17Rald)
        (assoc . g$5151$17Rald)
        (eval . g$9610$17Rald)
        (zero? . g$5530$17Rald)
        (vector? . g$5481$17Rald)
        (vector-set! . g$5496$17Rald)
        (vector-ref . g$5495$17Rald)
        (vector-length . g$12963$17Rald)
        (vector-fill! . g$5497$17Rald)
        (vector->list . g$12962$17Rald)
        (vector . g$12961$17Rald)
        (values . g$12960$17Rald)
        (truncate . g$12959$17Rald)
        (tan . g$12958$17Rald)
        (symbol? . g$5483$17Rald)
        (symbol->string . g$12957$17Rald)
        (substring . g$12956$17Rald)
        (string? . g$12955$17Rald)
        (string>? . g$5544$17Rald)
        (string>=? . g$5546$17Rald)
        (string=? . g$5542$17Rald)
        (string<? . g$5543$17Rald)
        (string<=? . g$5545$17Rald)
        (string-ref . g$12954$17Rald)
        (string-length . g$12953$17Rald)
        (string-copy . g$12952$17Rald)
        (string-append . g$12951$17Rald)
        (string->symbol . g$12950$17Rald)
        (string->number . g$12949$17Rald)
        (string->list . g$12948$17Rald)
        (string . g$12947$17Rald)
        (sqrt . g$12946$17Rald)
        (sin . g$12945$17Rald)
        (round . g$12944$17Rald)
        (reverse . g$5499$17Rald)
        (real? . g$12943$17Rald)
        (real-part . g$12941$17Rald)
        (rationalize . g$5559$17Rald)
        (rational? . g$12940$17Rald)
        (procedure? . g$5485$17Rald)
        (positive? . g$5528$17Rald)
        (pair? . g$12938$17Rald)
        (odd? . g$5532$17Rald)
        (numerator . g$12937$17Rald)
        (number? . g$12936$17Rald)
        (number->string . g$12935$17Rald)
        (null? . g$12934$17Rald)
        (not . g$12933$17Rald)
        (negative? . g$5529$17Rald)
        (min . g$5534$17Rald)
        (max . g$5533$17Rald)
        (map . g$5161$17Rald)
        (make-vector . g$12931$17Rald)
        (make-string . g$12930$17Rald)
        (make-rectangular . g$12929$17Rald)
        (make-polar . g$12928$17Rald)
        (magnitude . g$12927$17Rald)
        (log . g$12926$17Rald)
        (list? . g$12925$17Rald)
        (list-tail . g$5141$17Rald)
        (list-ref . g$5142$17Rald)
        (list->vector . g$5493$17Rald)
        (list->string . g$5494$17Rald)
        (list . g$12924$17Rald)
        (length . g$12923$17Rald)
        (lcm . g$5536$17Rald)
        (integer? . g$12922$17Rald)
        (integer->char . g$12920$17Rald)
        (inexact? . g$12918$17Rald)
        (imag-part . g$12916$17Rald)
        (gcd . g$5535$17Rald)
        (for-each . g$5162$17Rald)
        (floor . g$12915$17Rald)
        (expt . g$12913$17Rald)
        (exp . g$12912$17Rald)
        (exact? . g$12911$17Rald)
        (even? . g$5531$17Rald)
        (eqv? . g$12907$17Rald)
        (equal? . g$12906$17Rald)
        (eq? . g$12905$17Rald)
        (dynamic-wind . g$12904$17Rald)
        (denominator . g$12901$17Rald)
        (cos . g$12900$17Rald)
        (cons . g$12899$17Rald)
        (complex? . g$12898$17Rald)
        (char? . g$5480$17Rald)
        (char>? . g$5556$17Rald)
        (char>=? . g$5558$17Rald)
        (char=? . g$5554$17Rald)
        (char<? . g$5555$17Rald)
        (char<=? . g$5557$17Rald)
        (char->integer . g$12897$17Rald)
        (ceiling . g$12896$17Rald)
        (call-with-values . g$12895$17Rald)
        (call-with-current-continuation . g$12893$17Rald)
        (cddddr . g$5527$17Rald)
        (cdddar . g$5526$17Rald)
        (cddadr . g$5525$17Rald)
        (cddaar . g$5524$17Rald)
        (cdaddr . g$5523$17Rald)
        (cdadar . g$5522$17Rald)
        (cdaadr . g$5521$17Rald)
        (cdaaar . g$5520$17Rald)
        (cadddr . g$5519$17Rald)
        (caddar . g$5518$17Rald)
        (cadadr . g$5517$17Rald)
        (cadaar . g$5516$17Rald)
        (caaddr . g$5515$17Rald)
        (caadar . g$5514$17Rald)
        (caaadr . g$5513$17Rald)
        (caaaar . g$5512$17Rald)
        (cdddr . g$5511$17Rald)
        (cddar . g$5510$17Rald)
        (cdadr . g$5509$17Rald)
        (cdaar . g$5508$17Rald)
        (caddr . g$5507$17Rald)
        (cadar . g$5506$17Rald)
        (caadr . g$5505$17Rald)
        (caaar . g$5504$17Rald)
        (cddr . g$5503$17Rald)
        (cdar . g$5502$17Rald)
        (cadr . g$5501$17Rald)
        (caar . g$5500$17Rald)
        (cdr . g$12892$17Rald)
        (car . g$12891$17Rald)
        (boolean? . g$5484$17Rald)
        (atan . g$12890$17Rald)
        (asin . g$12888$17Rald)
        (apply . g$12887$17Rald)
        (append . g$12886$17Rald)
        (angle . g$12885$17Rald)
        (acos . g$12884$17Rald)
        (abs . g$12883$17Rald)
        (/ . g$12882$17Rald)
        (* . g$12881$17Rald)
        (- . g$12880$17Rald)
        (+ . g$12879$17Rald)
        (>= . g$12878$17Rald)
        (> . g$12877$17Rald)
        (= . g$12876$17Rald)
        (<= . g$12875$17Rald)
        (< . g$12874$17Rald)
        (unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (... . g$12751$17Rald)
        (delay . g$12748$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (do . g$12744$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (case . g$12727$17Rald)
        (if . g$12723$17Rald)
        (letrec . g$12721$17Rald)
        (lambda . g$12718$17Rald)
        (quote . g$12715$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (begin . g$12707$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13185$17Rald
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13136$17Rald)
        (string-titlecase . g$13135$17Rald)
        (string-normalize-nfkd . g$6396$17Rald)
        (string-normalize-nfkc . g$6395$17Rald)
        (string-normalize-nfd . g$6394$17Rald)
        (string-normalize-nfc . g$6393$17Rald)
        (string-foldcase . g$13134$17Rald)
        (string-downcase . g$13133$17Rald)
        (string-ci>? . g$6380$17Rald)
        (string-ci>=? . g$6382$17Rald)
        (string-ci=? . g$6378$17Rald)
        (string-ci<? . g$6379$17Rald)
        (string-ci<=? . g$6381$17Rald)
        (char-whitespace? . g$13132$17Rald)
        (char-upper-case? . g$13131$17Rald)
        (char-title-case? . g$13130$17Rald)
        (char-numeric? . g$13129$17Rald)
        (char-lower-case? . g$13128$17Rald)
        (char-general-category . g$13127$17Rald)
        (char-upcase . g$13126$17Rald)
        (char-titlecase . g$13125$17Rald)
        (char-foldcase . g$13124$17Rald)
        (char-downcase . g$13123$17Rald)
        (char-ci>? . g$6390$17Rald)
        (char-ci>=? . g$6392$17Rald)
        (char-ci=? . g$6388$17Rald)
        (char-ci<? . g$6389$17Rald)
        (char-ci<=? . g$6391$17Rald)
        (char-alphabetic? . g$13122$17Rald)
        (make-variable-transformer . g$9309$17Rald)
        (identifier? . g$9629$17Rald)
        (generate-temporaries . g$9618$17Rald)
        (free-identifier=? . g$9619$17Rald)
        (syntax->datum . g$9631$17Rald)
        (datum->syntax . g$9630$17Rald)
        (bound-identifier=? . g$9620$17Rald)
        (record-type-descriptor? . g$13121$17Rald)
        (record-predicate . g$13120$17Rald)
        (record-mutator . g$13119$17Rald)
        (record-constructor . g$13118$17Rald)
        (record-accessor . g$13117$17Rald)
        (make-record-type-descriptor . g$13116$17Rald)
        (make-record-constructor-descriptor . g$13115$17Rald)
        (record? . g$13114$17Rald)
        (record-type-uid . g$13113$17Rald)
        (record-type-sealed? . g$13112$17Rald)
        (record-type-parent . g$13111$17Rald)
        (record-type-opaque? . g$13110$17Rald)
        (record-type-name . g$13109$17Rald)
        (record-type-generative? . g$13108$17Rald)
        (record-type-field-names . g$13107$17Rald)
        (record-rtd . g$13106$17Rald)
        (record-field-mutable? . g$13105$17Rald)
        (delete-file . g$5787$17Rald)
        (file-exists? . g$5786$17Rald)
        (vector-sort! . g$13104$17Rald)
        (vector-sort . g$13103$17Rald)
        (list-sort . g$6349$17Rald)
        (symbol-hash . g$13102$17Rald)
        (string-ci-hash . g$13101$17Rald)
        (string-hash . g$13100$17Rald)
        (equal-hash . g$13099$17Rald)
        (hashtable-equivalence-function . g$13098$17Rald)
        (make-hashtable . g$13097$17Rald)
        (hashtable-hash-function . g$13096$17Rald)
        (make-eqv-hashtable . g$5754$17Rald)
        (make-eq-hashtable . g$5753$17Rald)
        (hashtable? . g$13095$17Rald)
        (hashtable-update! . g$5760$17Rald)
        (hashtable-size . g$5755$17Rald)
        (hashtable-set! . g$5757$17Rald)
        (hashtable-ref . g$5756$17Rald)
        (hashtable-mutable? . g$13094$17Rald)
        (hashtable-keys . g$13093$17Rald)
        (hashtable-entries . g$13092$17Rald)
        (hashtable-delete! . g$5758$17Rald)
        (hashtable-copy . g$13091$17Rald)
        (hashtable-contains? . g$5759$17Rald)
        (hashtable-clear! . g$5761$17Rald)
        (call-with-output-file . g$8133$17Rald)
        (call-with-input-file . g$8132$17Rald)
        (write-char . g$8124$17Rald)
        (write . g$13090$17Rald)
        (with-output-to-file . g$8131$17Rald)
        (with-input-from-file . g$8130$17Rald)
        (read-char . g$8123$17Rald)
        (read . g$13089$17Rald)
        (peek-char . g$8122$17Rald)
        (open-output-file . g$13088$17Rald)
        (open-input-file . g$13087$17Rald)
        (newline . g$8134$17Rald)
        (display . g$13086$17Rald)
        (close-output-port . g$13085$17Rald)
        (close-input-port . g$13084$17Rald)
        (eof-object? . g$13083$17Rald)
        (eof-object . g$13082$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (utf-8-codec . g$13076$17Rald)
        (utf-16-codec . g$13075$17Rald)
        (transcoder-error-handling-mode . g$13074$17Rald)
        (transcoder-eol-style . g$13073$17Rald)
        (transcoder-codec . g$13072$17Rald)
        (transcoded-port . g$13071$17Rald)
        (textual-port? . g$13070$17Rald)
        (string->bytevector . g$13069$17Rald)
        (standard-output-port . g$13068$17Rald)
        (standard-input-port . g$13067$17Rald)
        (standard-error-port . g$13066$17Rald)
        (set-port-position! . g$13065$17Rald)
        (put-u8 . g$13064$17Rald)
        (put-string . g$13063$17Rald)
        (put-datum . g$8102$17Rald)
        (put-char . g$13062$17Rald)
        (put-bytevector . g$13061$17Rald)
        (port? . g$8107$17Rald)
        (port-transcoder . g$13060$17Rald)
        (port-position . g$13059$17Rald)
        (port-has-set-port-position!? . g$13058$17Rald)
        (port-has-port-position? . g$13057$17Rald)
        (port-eof? . g$13056$17Rald)
        (output-port-buffer-mode . g$13055$17Rald)
        (open-string-output-port . g$8106$17Rald)
        (open-string-input-port . g$13054$17Rald)
        (open-file-output-port . g$13053$17Rald)
        (open-file-input/output-port . g$13052$17Rald)
        (open-file-input-port . g$13051$17Rald)
        (open-bytevector-output-port . g$13050$17Rald)
        (open-bytevector-input-port . g$13049$17Rald)
        (native-transcoder . g$13048$17Rald)
        (native-eol-style . g$13047$17Rald)
        (make-transcoder . g$13046$17Rald)
        (latin-1-codec . g$13045$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (make-i/o-encoding-error . g$6282$17Rald)
        (make-i/o-decoding-error . g$6269$17Rald)
        (make-custom-textual-output-port . g$13044$17Rald)
        (make-custom-textual-input/output-port . g$13043$17Rald)
        (make-custom-textual-input-port . g$13042$17Rald)
        (make-custom-binary-output-port . g$13041$17Rald)
        (make-custom-binary-input/output-port . g$13040$17Rald)
        (make-custom-binary-input-port . g$13039$17Rald)
        (make-bytevector . g$13038$17Rald)
        (lookahead-u8 . g$13037$17Rald)
        (lookahead-char . g$13036$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (i/o-encoding-error? . g$6284$17Rald)
        (i/o-encoding-error-char . g$6285$17Rald)
        (i/o-decoding-error? . g$6270$17Rald)
        (get-u8 . g$13035$17Rald)
        (get-string-n! . g$13034$17Rald)
        (get-string-n . g$13033$17Rald)
        (get-string-all . g$13032$17Rald)
        (get-line . g$13031$17Rald)
        (get-datum . g$8103$17Rald)
        (get-char . g$13030$17Rald)
        (get-bytevector-some . g$13029$17Rald)
        (get-bytevector-n! . g$13028$17Rald)
        (get-bytevector-n . g$13027$17Rald)
        (get-bytevector-all . g$13026$17Rald)
        (flush-output-port . g$13025$17Rald)
        (close-port . g$13024$17Rald)
        (call-with-string-output-port . g$8108$17Rald)
        (call-with-port . g$8109$17Rald)
        (call-with-bytevector-output-port . g$13023$17Rald)
        (bytevector->string . g$13022$17Rald)
        (buffer-mode? . g$13021$17Rald)
        (binary-port? . g$13020$17Rald)
        (exit . g$13019$17Rald)
        (command-line . g$12647$17Rald)
        (remove . g$5166$17Rald)
        (remv . g$5167$17Rald)
        (remp . g$5147$17Rald)
        (remq . g$5168$17Rald)
        (partition . g$5146$17Rald)
        (memv . g$5154$17Rald)
        (memq . g$5153$17Rald)
        (memp . g$5156$17Rald)
        (member . g$5155$17Rald)
        (exists . g$5160$17Rald)
        (for-all . g$5159$17Rald)
        (fold-right . g$5165$17Rald)
        (fold-left . g$5164$17Rald)
        (find . g$5145$17Rald)
        (filter . g$5148$17Rald)
        (cons* . g$5163$17Rald)
        (assv . g$5150$17Rald)
        (assq . g$5149$17Rald)
        (assp . g$5152$17Rald)
        (assoc . g$5151$17Rald)
        (with-exception-handler . g$13014$17Rald)
        (raise-continuable . g$13013$17Rald)
        (raise . g$13012$17Rald)
        (make-enumeration . g$8194$17Rald)
        (enum-set=? . g$8201$17Rald)
        (enum-set-universe . g$8195$17Rald)
        (enum-set-union . g$8202$17Rald)
        (enum-set-subset? . g$8200$17Rald)
        (enum-set-projection . g$8206$17Rald)
        (enum-set-member? . g$8199$17Rald)
        (enum-set-intersection . g$8203$17Rald)
        (enum-set-indexer . g$8196$17Rald)
        (enum-set-difference . g$8204$17Rald)
        (enum-set-constructor . g$8197$17Rald)
        (enum-set-complement . g$8205$17Rald)
        (enum-set->list . g$8198$17Rald)
        (who-condition? . g$6051$17Rald)
        (warning? . g$5970$17Rald)
        (violation? . g$6009$17Rald)
        (undefined-violation? . g$6121$17Rald)
        (syntax-violation? . g$6106$17Rald)
        (syntax-violation-subform . g$6108$17Rald)
        (syntax-violation-form . g$6107$17Rald)
        (syntax-violation . g$9628$17Rald)
        (simple-conditions . g$13011$17Rald)
        (serious-condition? . g$5983$17Rald)
        (non-continuable-violation? . g$6065$17Rald)
        (message-condition? . g$5956$17Rald)
        (make-who-condition . g$6049$17Rald)
        (make-warning . g$5969$17Rald)
        (make-violation . g$6008$17Rald)
        (make-undefined-violation . g$6120$17Rald)
        (make-syntax-violation . g$6103$17Rald)
        (make-serious-condition . g$5982$17Rald)
        (make-non-continuable-violation . g$6064$17Rald)
        (make-message-condition . g$5954$17Rald)
        (make-lexical-violation . g$6090$17Rald)
        (make-irritants-condition . g$6034$17Rald)
        (make-implementation-restriction-violation . g$6077$17Rald)
        (make-error . g$5995$17Rald)
        (make-assertion-violation . g$6021$17Rald)
        (lexical-violation? . g$6091$17Rald)
        (irritants-condition? . g$6036$17Rald)
        (implementation-restriction-violation? . g$6078$17Rald)
        (error? . g$5996$17Rald)
        (condition-who . g$6052$17Rald)
        (condition-predicate . g$13010$17Rald)
        (condition-message . g$5957$17Rald)
        (condition-irritants . g$6037$17Rald)
        (condition-accessor . g$13009$17Rald)
        (condition . g$13008$17Rald)
        (assertion-violation? . g$6022$17Rald)
        (condition? . g$13007$17Rald)
        (utf32->string . g$13006$17Rald)
        (utf16->string . g$13005$17Rald)
        (utf8->string . g$13004$17Rald)
        (uint-list->bytevector . g$13003$17Rald)
        (u8-list->bytevector . g$13002$17Rald)
        (string->utf8 . g$13001$17Rald)
        (string->utf32 . g$13000$17Rald)
        (string->utf16 . g$12999$17Rald)
        (sint-list->bytevector . g$12998$17Rald)
        (native-endianness . g$5793$17Rald)
        (bytevector? . g$5482$17Rald)
        (bytevector=? . g$12997$17Rald)
        (bytevector-uint-set! . g$12996$17Rald)
        (bytevector-uint-ref . g$12995$17Rald)
        (bytevector-u8-set! . g$12994$17Rald)
        (bytevector-u8-ref . g$12993$17Rald)
        (bytevector-u64-set! . g$5814$17Rald)
        (bytevector-u64-ref . g$5810$17Rald)
        (bytevector-u64-native-set! . g$5816$17Rald)
        (bytevector-u64-native-ref . g$5812$17Rald)
        (bytevector-u32-set! . g$5806$17Rald)
        (bytevector-u32-ref . g$5802$17Rald)
        (bytevector-u32-native-set! . g$5808$17Rald)
        (bytevector-u32-native-ref . g$5804$17Rald)
        (bytevector-u16-set! . g$5798$17Rald)
        (bytevector-u16-ref . g$5794$17Rald)
        (bytevector-u16-native-set! . g$5800$17Rald)
        (bytevector-u16-native-ref . g$5796$17Rald)
        (bytevector-sint-set! . g$12992$17Rald)
        (bytevector-sint-ref . g$12991$17Rald)
        (bytevector-s8-set! . g$12990$17Rald)
        (bytevector-s8-ref . g$12989$17Rald)
        (bytevector-s64-set! . g$5815$17Rald)
        (bytevector-s64-ref . g$5811$17Rald)
        (bytevector-s64-native-set! . g$5817$17Rald)
        (bytevector-s64-native-ref . g$5813$17Rald)
        (bytevector-s32-set! . g$5807$17Rald)
        (bytevector-s32-ref . g$5803$17Rald)
        (bytevector-s32-native-set! . g$5809$17Rald)
        (bytevector-s32-native-ref . g$5805$17Rald)
        (bytevector-s16-set! . g$5799$17Rald)
        (bytevector-s16-ref . g$5795$17Rald)
        (bytevector-s16-native-set! . g$5801$17Rald)
        (bytevector-s16-native-ref . g$5797$17Rald)
        (bytevector-length . g$12988$17Rald)
        (bytevector-ieee-single-set! . g$12987$17Rald)
        (bytevector-ieee-single-ref . g$12986$17Rald)
        (bytevector-ieee-single-native-set! . g$5820$17Rald)
        (bytevector-ieee-single-native-ref . g$5818$17Rald)
        (bytevector-ieee-double-set! . g$12985$17Rald)
        (bytevector-ieee-double-ref . g$12984$17Rald)
        (bytevector-ieee-double-native-set! . g$5821$17Rald)
        (bytevector-ieee-double-native-ref . g$5819$17Rald)
        (bytevector-fill! . g$12983$17Rald)
        (bytevector-copy! . g$12982$17Rald)
        (bytevector-copy . g$12981$17Rald)
        (bytevector->uint-list . g$12980$17Rald)
        (bytevector->u8-list . g$12979$17Rald)
        (bytevector->sint-list . g$12978$17Rald)
        (no-nans-violation? . g$6311$17Rald)
        (no-infinities-violation? . g$6298$17Rald)
        (make-no-nans-violation . g$6310$17Rald)
        (make-no-infinities-violation . g$6297$17Rald)
        (real->flonum . g$12977$17Rald)
        (flzero? . g$7548$17Rald)
        (fltruncate . g$7543$17Rald)
        (fltan . g$7529$17Rald)
        (flsqrt . g$7534$17Rald)
        (flsin . g$7527$17Rald)
        (flround . g$7544$17Rald)
        (flpositive? . g$7546$17Rald)
        (flonum? . g$5487$17Rald)
        (flodd? . g$7550$17Rald)
        (flnumerator . g$12976$17Rald)
        (flnegative? . g$7547$17Rald)
        (flnan? . g$7526$17Rald)
        (flmod0 . g$7511$17Rald)
        (flmod . g$7510$17Rald)
        (flmin . g$7552$17Rald)
        (flmax . g$7551$17Rald)
        (fllog . g$7533$17Rald)
        (flinteger? . g$7519$17Rald)
        (flinfinite? . g$7525$17Rald)
        (flfloor . g$7542$17Rald)
        (flfinite? . g$7520$17Rald)
        (flexpt . g$7536$17Rald)
        (flexp . g$7535$17Rald)
        (fleven? . g$7549$17Rald)
        (fldiv0-and-mod0 . g$7518$17Rald)
        (fldiv0 . g$7505$17Rald)
        (fldiv-and-mod . g$7512$17Rald)
        (fldiv . g$7517$17Rald)
        (fldenominator . g$12975$17Rald)
        (flcos . g$7528$17Rald)
        (flceiling . g$7537$17Rald)
        (flatan . g$7532$17Rald)
        (flasin . g$7530$17Rald)
        (flacos . g$7531$17Rald)
        (flabs . g$7545$17Rald)
        (fl>? . g$7499$17Rald)
        (fl>=? . g$7500$17Rald)
        (fl=? . g$7496$17Rald)
        (fl<? . g$7497$17Rald)
        (fl<=? . g$7498$17Rald)
        (fl/ . g$7495$17Rald)
        (fl- . g$7494$17Rald)
        (fl+ . g$7492$17Rald)
        (fl* . g$7493$17Rald)
        (fixnum->flonum . g$12974$17Rald)
        (fxzero? . g$6592$17Rald)
        (fxxor . g$6555$17Rald)
        (fxrotate-bit-field . g$6630$17Rald)
        (fxreverse-bit-field . g$6631$17Rald)
        (fxpositive? . g$6582$17Rald)
        (fxodd? . g$6602$17Rald)
        (fxnot . g$6536$17Rald)
        (fxnegative? . g$6587$17Rald)
        (fxmod0 . g$6566$17Rald)
        (fxmod . g$6565$17Rald)
        (fxmin . g$6604$17Rald)
        (fxmax . g$6603$17Rald)
        (fxlength . g$6533$17Rald)
        (fxior . g$6554$17Rald)
        (fxif . g$6612$17Rald)
        (fxfirst-bit-set . g$6534$17Rald)
        (fxeven? . g$6597$17Rald)
        (fxdiv0-and-mod0 . g$6577$17Rald)
        (fxdiv0 . g$6572$17Rald)
        (fxdiv-and-mod . g$6567$17Rald)
        (fxdiv . g$6560$17Rald)
        (fxcopy-bit-field . g$6627$17Rald)
        (fxcopy-bit . g$6617$17Rald)
        (fxbit-set? . g$6535$17Rald)
        (fxbit-field . g$6622$17Rald)
        (fxbit-count . g$6528$17Rald)
        (fxarithmetic-shift-right . g$6629$17Rald)
        (fxarithmetic-shift-left . g$6628$17Rald)
        (fxarithmetic-shift . g$6523$17Rald)
        (fxand . g$6553$17Rald)
        (fx>? . g$6545$17Rald)
        (fx>=? . g$6546$17Rald)
        (fx=? . g$6542$17Rald)
        (fx<? . g$6543$17Rald)
        (fx<=? . g$6544$17Rald)
        (fx-/carry . g$6606$17Rald)
        (fx- . g$6517$17Rald)
        (fx+/carry . g$6607$17Rald)
        (fx+ . g$6515$17Rald)
        (fx*/carry . g$6605$17Rald)
        (fx* . g$6516$17Rald)
        (greatest-fixnum . g$6486$17Rald)
        (least-fixnum . g$6487$17Rald)
        (fixnum-width . g$5488$17Rald)
        (fixnum? . g$5486$17Rald)
        (bitwise-rotate-bit-field . g$6460$17Rald)
        (bitwise-reverse-bit-field . g$12973$17Rald)
        (bitwise-length . g$12972$17Rald)
        (bitwise-if . g$6454$17Rald)
        (bitwise-first-bit-set . g$12971$17Rald)
        (bitwise-copy-bit-field . g$6457$17Rald)
        (bitwise-copy-bit . g$6455$17Rald)
        (bitwise-bit-set? . g$12970$17Rald)
        (bitwise-bit-field . g$6456$17Rald)
        (bitwise-bit-count . g$12969$17Rald)
        (bitwise-xor . g$12968$17Rald)
        (bitwise-ior . g$12967$17Rald)
        (bitwise-and . g$12966$17Rald)
        (bitwise-not . g$12965$17Rald)
        (bitwise-arithmetic-shift-right . g$6459$17Rald)
        (bitwise-arithmetic-shift-left . g$6458$17Rald)
        (bitwise-arithmetic-shift . g$12964$17Rald)
        (zero? . g$5530$17Rald)
        (vector? . g$5481$17Rald)
        (vector-set! . g$5496$17Rald)
        (vector-ref . g$5495$17Rald)
        (vector-map . g$5562$17Rald)
        (vector-length . g$12963$17Rald)
        (vector-for-each . g$5563$17Rald)
        (vector-fill! . g$5497$17Rald)
        (vector->list . g$12962$17Rald)
        (vector . g$12961$17Rald)
        (values . g$12960$17Rald)
        (truncate . g$12959$17Rald)
        (tan . g$12958$17Rald)
        (symbol? . g$5483$17Rald)
        (symbol=? . g$5547$17Rald)
        (symbol->string . g$12957$17Rald)
        (substring . g$12956$17Rald)
        (string? . g$12955$17Rald)
        (string>? . g$5544$17Rald)
        (string>=? . g$5546$17Rald)
        (string=? . g$5542$17Rald)
        (string<? . g$5543$17Rald)
        (string<=? . g$5545$17Rald)
        (string-ref . g$12954$17Rald)
        (string-length . g$12953$17Rald)
        (string-for-each . g$5564$17Rald)
        (string-copy . g$12952$17Rald)
        (string-append . g$12951$17Rald)
        (string->symbol . g$12950$17Rald)
        (string->number . g$12949$17Rald)
        (string->list . g$12948$17Rald)
        (string . g$12947$17Rald)
        (sqrt . g$12946$17Rald)
        (sin . g$12945$17Rald)
        (round . g$12944$17Rald)
        (reverse . g$5499$17Rald)
        (real? . g$12943$17Rald)
        (real-valued? . g$12942$17Rald)
        (real-part . g$12941$17Rald)
        (rationalize . g$5559$17Rald)
        (rational? . g$12940$17Rald)
        (rational-valued? . g$12939$17Rald)
        (procedure? . g$5485$17Rald)
        (positive? . g$5528$17Rald)
        (pair? . g$12938$17Rald)
        (odd? . g$5532$17Rald)
        (numerator . g$12937$17Rald)
        (number? . g$12936$17Rald)
        (number->string . g$12935$17Rald)
        (null? . g$12934$17Rald)
        (not . g$12933$17Rald)
        (negative? . g$5529$17Rald)
        (nan? . g$12932$17Rald)
        (min . g$5534$17Rald)
        (max . g$5533$17Rald)
        (map . g$5161$17Rald)
        (make-vector . g$12931$17Rald)
        (make-string . g$12930$17Rald)
        (make-rectangular . g$12929$17Rald)
        (make-polar . g$12928$17Rald)
        (magnitude . g$12927$17Rald)
        (log . g$12926$17Rald)
        (list? . g$12925$17Rald)
        (list-tail . g$5141$17Rald)
        (list-ref . g$5142$17Rald)
        (list->vector . g$5493$17Rald)
        (list->string . g$5494$17Rald)
        (list . g$12924$17Rald)
        (length . g$12923$17Rald)
        (lcm . g$5536$17Rald)
        (integer? . g$12922$17Rald)
        (integer-valued? . g$12921$17Rald)
        (integer->char . g$12920$17Rald)
        (infinite? . g$12919$17Rald)
        (inexact? . g$12918$17Rald)
        (inexact . g$12917$17Rald)
        (imag-part . g$12916$17Rald)
        (gcd . g$5535$17Rald)
        (for-each . g$5162$17Rald)
        (floor . g$12915$17Rald)
        (finite? . g$12914$17Rald)
        (expt . g$12913$17Rald)
        (exp . g$12912$17Rald)
        (exact? . g$12911$17Rald)
        (exact-integer-sqrt . g$12910$17Rald)
        (exact . g$12909$17Rald)
        (even? . g$5531$17Rald)
        (error . g$12908$17Rald)
        (eqv? . g$12907$17Rald)
        (equal? . g$12906$17Rald)
        (eq? . g$12905$17Rald)
        (dynamic-wind . g$12904$17Rald)
        (div0-and-mod0 . g$5492$17Rald)
        (mod0 . g$5490$17Rald)
        (div0 . g$12903$17Rald)
        (div-and-mod . g$5491$17Rald)
        (mod . g$5489$17Rald)
        (div . g$12902$17Rald)
        (denominator . g$12901$17Rald)
        (cos . g$12900$17Rald)
        (cons . g$12899$17Rald)
        (complex? . g$12898$17Rald)
        (char? . g$5480$17Rald)
        (char>? . g$5556$17Rald)
        (char>=? . g$5558$17Rald)
        (char=? . g$5554$17Rald)
        (char<? . g$5555$17Rald)
        (char<=? . g$5557$17Rald)
        (char->integer . g$12897$17Rald)
        (ceiling . g$12896$17Rald)
        (call-with-values . g$12895$17Rald)
        (call/cc . g$12894$17Rald)
        (call-with-current-continuation . g$12893$17Rald)
        (cddddr . g$5527$17Rald)
        (cdddar . g$5526$17Rald)
        (cddadr . g$5525$17Rald)
        (cddaar . g$5524$17Rald)
        (cdaddr . g$5523$17Rald)
        (cdadar . g$5522$17Rald)
        (cdaadr . g$5521$17Rald)
        (cdaaar . g$5520$17Rald)
        (cadddr . g$5519$17Rald)
        (caddar . g$5518$17Rald)
        (cadadr . g$5517$17Rald)
        (cadaar . g$5516$17Rald)
        (caaddr . g$5515$17Rald)
        (caadar . g$5514$17Rald)
        (caaadr . g$5513$17Rald)
        (caaaar . g$5512$17Rald)
        (cdddr . g$5511$17Rald)
        (cddar . g$5510$17Rald)
        (cdadr . g$5509$17Rald)
        (cdaar . g$5508$17Rald)
        (caddr . g$5507$17Rald)
        (cadar . g$5506$17Rald)
        (caadr . g$5505$17Rald)
        (caaar . g$5504$17Rald)
        (cddr . g$5503$17Rald)
        (cdar . g$5502$17Rald)
        (cadr . g$5501$17Rald)
        (caar . g$5500$17Rald)
        (cdr . g$12892$17Rald)
        (car . g$12891$17Rald)
        (boolean? . g$5484$17Rald)
        (boolean=? . g$5548$17Rald)
        (atan . g$12890$17Rald)
        (assertion-violation . g$12889$17Rald)
        (asin . g$12888$17Rald)
        (apply . g$12887$17Rald)
        (append . g$12886$17Rald)
        (angle . g$12885$17Rald)
        (acos . g$12884$17Rald)
        (abs . g$12883$17Rald)
        (/ . g$12882$17Rald)
        (* . g$12881$17Rald)
        (- . g$12880$17Rald)
        (+ . g$12879$17Rald)
        (>= . g$12878$17Rald)
        (> . g$12877$17Rald)
        (= . g$12876$17Rald)
        (<= . g$12875$17Rald)
        (< . g$12874$17Rald)
        (&no-nans . g$12808$17Rald)
        (&no-infinities . g$12807$17Rald)
        (&i/o-encoding . g$12806$17Rald)
        (&i/o-decoding . g$12805$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald)
        (&non-continuable . g$12794$17Rald)
        (&undefined . g$12793$17Rald)
        (&syntax . g$12792$17Rald)
        (&lexical . g$12791$17Rald)
        (&implementation-restriction . g$12790$17Rald)
        (&who . g$12789$17Rald)
        (&irritants . g$12788$17Rald)
        (&assertion . g$12787$17Rald)
        (&violation . g$12786$17Rald)
        (&error . g$12785$17Rald)
        (&serious . g$12784$17Rald)
        (&warning . g$12783$17Rald)
        (&message . g$12782$17Rald)
        (&condition . g$12781$17Rald)
        (define-condition-type . g$12780$17Rald)
        (define-enumeration . g$12779$17Rald)
        (define-record-type . g$12778$17Rald)
        (parent-rtd . g$12777$17Rald)
        (nongenerative . g$12776$17Rald)
        (opaque . g$12775$17Rald)
        (sealed . g$12774$17Rald)
        (protocol . g$12773$17Rald)
        (parent . g$12772$17Rald)
        (immutable . g$12771$17Rald)
        (mutable . g$12770$17Rald)
        (fields . g$12769$17Rald)
        (error-handling-mode . g$12768$17Rald)
        (file-options . g$12767$17Rald)
        (buffer-mode . g$12766$17Rald)
        (eol-style . g$12765$17Rald)
        (guard . g$12764$17Rald)
        (unsyntax-splicing . g$12758$17Rald)
        (unsyntax . g$12757$17Rald)
        (unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (_ . g$12754$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (... . g$12751$17Rald)
        (assert . g$12750$17Rald)
        (endianness . g$12749$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (do . g$12744$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (identifier-syntax . g$12740$17Rald)
        (with-syntax . g$12739$17Rald)
        (quasisyntax . g$12738$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (let-values . g$12732$17Rald)
        (let*-values . g$12731$17Rald)
        (record-constructor-descriptor . g$12730$17Rald)
        (record-type-descriptor . g$12729$17Rald)
        (case . g$12727$17Rald)
        (unless . g$12725$17Rald)
        (when . g$12724$17Rald)
        (if . g$12723$17Rald)
        (letrec* . g$12722$17Rald)
        (letrec . g$12721$17Rald)
        (case-lambda . g$12719$17Rald)
        (lambda . g$12718$17Rald)
        (syntax . g$12717$17Rald)
        (syntax-case . g$12716$17Rald)
        (quote . g$12715$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (begin . g$12707$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13186$17Rald
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$9608$17Rald)
        (quotient . g$6328$17Rald)
        (null-environment . g$9607$17Rald)
        (remainder . g$6329$17Rald)
        (modulo . g$6330$17Rald)
        (inexact->exact . g$6325$17Rald)
        (force . g$6332$17Rald)
        (exact->inexact . g$6326$17Rald)
        (delay . g$12748$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13187$17Rald
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12744$17Rald)
        (unless . g$12725$17Rald)
        (when . g$12724$17Rald)
        (case-lambda . g$12719$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13188$17Rald
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9610$17Rald) (environment . g$9606$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13189$17Rald
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13016$17Rald) (set-car! . g$13015$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13190$17Rald
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13018$17Rald) (string-set! . g$13017$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13191$17Rald
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13019$17Rald) (command-line . g$12647$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13192$17Rald
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9309$17Rald)
        (identifier? . g$9629$17Rald)
        (generate-temporaries . g$9618$17Rald)
        (free-identifier=? . g$9619$17Rald)
        (syntax->datum . g$9631$17Rald)
        (datum->syntax . g$9630$17Rald)
        (bound-identifier=? . g$9620$17Rald)
        (syntax-violation . g$9628$17Rald)
        (unsyntax-splicing . g$12758$17Rald)
        (unsyntax . g$12757$17Rald)
        (_ . g$12754$17Rald)
        (... . g$12751$17Rald)
        (with-syntax . g$12739$17Rald)
        (quasisyntax . g$12738$17Rald)
        (syntax . g$12717$17Rald)
        (syntax-case . g$12716$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13193$17Rald
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5787$17Rald)
        (file-exists? . g$5786$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13194$17Rald
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13104$17Rald)
        (vector-sort . g$13103$17Rald)
        (list-sort . g$6349$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13195$17Rald
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5530$17Rald)
        (vector? . g$5481$17Rald)
        (vector-set! . g$5496$17Rald)
        (vector-ref . g$5495$17Rald)
        (vector-map . g$5562$17Rald)
        (vector-length . g$12963$17Rald)
        (vector-for-each . g$5563$17Rald)
        (vector-fill! . g$5497$17Rald)
        (vector->list . g$12962$17Rald)
        (vector . g$12961$17Rald)
        (values . g$12960$17Rald)
        (truncate . g$12959$17Rald)
        (tan . g$12958$17Rald)
        (symbol? . g$5483$17Rald)
        (symbol=? . g$5547$17Rald)
        (symbol->string . g$12957$17Rald)
        (substring . g$12956$17Rald)
        (string? . g$12955$17Rald)
        (string>? . g$5544$17Rald)
        (string>=? . g$5546$17Rald)
        (string=? . g$5542$17Rald)
        (string<? . g$5543$17Rald)
        (string<=? . g$5545$17Rald)
        (string-ref . g$12954$17Rald)
        (string-length . g$12953$17Rald)
        (string-for-each . g$5564$17Rald)
        (string-copy . g$12952$17Rald)
        (string-append . g$12951$17Rald)
        (string->symbol . g$12950$17Rald)
        (string->number . g$12949$17Rald)
        (string->list . g$12948$17Rald)
        (string . g$12947$17Rald)
        (sqrt . g$12946$17Rald)
        (sin . g$12945$17Rald)
        (round . g$12944$17Rald)
        (reverse . g$5499$17Rald)
        (real? . g$12943$17Rald)
        (real-valued? . g$12942$17Rald)
        (real-part . g$12941$17Rald)
        (rationalize . g$5559$17Rald)
        (rational? . g$12940$17Rald)
        (rational-valued? . g$12939$17Rald)
        (procedure? . g$5485$17Rald)
        (positive? . g$5528$17Rald)
        (pair? . g$12938$17Rald)
        (odd? . g$5532$17Rald)
        (numerator . g$12937$17Rald)
        (number? . g$12936$17Rald)
        (number->string . g$12935$17Rald)
        (null? . g$12934$17Rald)
        (not . g$12933$17Rald)
        (negative? . g$5529$17Rald)
        (nan? . g$12932$17Rald)
        (min . g$5534$17Rald)
        (max . g$5533$17Rald)
        (map . g$5161$17Rald)
        (make-vector . g$12931$17Rald)
        (make-string . g$12930$17Rald)
        (make-rectangular . g$12929$17Rald)
        (make-polar . g$12928$17Rald)
        (magnitude . g$12927$17Rald)
        (log . g$12926$17Rald)
        (list? . g$12925$17Rald)
        (list-tail . g$5141$17Rald)
        (list-ref . g$5142$17Rald)
        (list->vector . g$5493$17Rald)
        (list->string . g$5494$17Rald)
        (list . g$12924$17Rald)
        (length . g$12923$17Rald)
        (lcm . g$5536$17Rald)
        (integer? . g$12922$17Rald)
        (integer-valued? . g$12921$17Rald)
        (integer->char . g$12920$17Rald)
        (infinite? . g$12919$17Rald)
        (inexact? . g$12918$17Rald)
        (inexact . g$12917$17Rald)
        (imag-part . g$12916$17Rald)
        (gcd . g$5535$17Rald)
        (for-each . g$5162$17Rald)
        (floor . g$12915$17Rald)
        (finite? . g$12914$17Rald)
        (expt . g$12913$17Rald)
        (exp . g$12912$17Rald)
        (exact? . g$12911$17Rald)
        (exact-integer-sqrt . g$12910$17Rald)
        (exact . g$12909$17Rald)
        (even? . g$5531$17Rald)
        (error . g$12908$17Rald)
        (eqv? . g$12907$17Rald)
        (equal? . g$12906$17Rald)
        (eq? . g$12905$17Rald)
        (dynamic-wind . g$12904$17Rald)
        (div0-and-mod0 . g$5492$17Rald)
        (mod0 . g$5490$17Rald)
        (div0 . g$12903$17Rald)
        (div-and-mod . g$5491$17Rald)
        (mod . g$5489$17Rald)
        (div . g$12902$17Rald)
        (denominator . g$12901$17Rald)
        (cos . g$12900$17Rald)
        (cons . g$12899$17Rald)
        (complex? . g$12898$17Rald)
        (char? . g$5480$17Rald)
        (char>? . g$5556$17Rald)
        (char>=? . g$5558$17Rald)
        (char=? . g$5554$17Rald)
        (char<? . g$5555$17Rald)
        (char<=? . g$5557$17Rald)
        (char->integer . g$12897$17Rald)
        (ceiling . g$12896$17Rald)
        (call-with-values . g$12895$17Rald)
        (call/cc . g$12894$17Rald)
        (call-with-current-continuation . g$12893$17Rald)
        (cddddr . g$5527$17Rald)
        (cdddar . g$5526$17Rald)
        (cddadr . g$5525$17Rald)
        (cddaar . g$5524$17Rald)
        (cdaddr . g$5523$17Rald)
        (cdadar . g$5522$17Rald)
        (cdaadr . g$5521$17Rald)
        (cdaaar . g$5520$17Rald)
        (cadddr . g$5519$17Rald)
        (caddar . g$5518$17Rald)
        (cadadr . g$5517$17Rald)
        (cadaar . g$5516$17Rald)
        (caaddr . g$5515$17Rald)
        (caadar . g$5514$17Rald)
        (caaadr . g$5513$17Rald)
        (caaaar . g$5512$17Rald)
        (cdddr . g$5511$17Rald)
        (cddar . g$5510$17Rald)
        (cdadr . g$5509$17Rald)
        (cdaar . g$5508$17Rald)
        (caddr . g$5507$17Rald)
        (cadar . g$5506$17Rald)
        (caadr . g$5505$17Rald)
        (caaar . g$5504$17Rald)
        (cddr . g$5503$17Rald)
        (cdar . g$5502$17Rald)
        (cadr . g$5501$17Rald)
        (caar . g$5500$17Rald)
        (cdr . g$12892$17Rald)
        (car . g$12891$17Rald)
        (boolean? . g$5484$17Rald)
        (boolean=? . g$5548$17Rald)
        (atan . g$12890$17Rald)
        (assertion-violation . g$12889$17Rald)
        (asin . g$12888$17Rald)
        (apply . g$12887$17Rald)
        (append . g$12886$17Rald)
        (angle . g$12885$17Rald)
        (acos . g$12884$17Rald)
        (abs . g$12883$17Rald)
        (/ . g$12882$17Rald)
        (* . g$12881$17Rald)
        (- . g$12880$17Rald)
        (+ . g$12879$17Rald)
        (>= . g$12878$17Rald)
        (> . g$12877$17Rald)
        (= . g$12876$17Rald)
        (<= . g$12875$17Rald)
        (< . g$12874$17Rald)
        (unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (_ . g$12754$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (... . g$12751$17Rald)
        (assert . g$12750$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (identifier-syntax . g$12740$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (let-values . g$12732$17Rald)
        (let*-values . g$12731$17Rald)
        (case . g$12727$17Rald)
        (if . g$12723$17Rald)
        (letrec* . g$12722$17Rald)
        (letrec . g$12721$17Rald)
        (lambda . g$12718$17Rald)
        (quote . g$12715$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (begin . g$12707$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13196$17Rald
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5166$17Rald)
        (remv . g$5167$17Rald)
        (remp . g$5147$17Rald)
        (remq . g$5168$17Rald)
        (partition . g$5146$17Rald)
        (memv . g$5154$17Rald)
        (memq . g$5153$17Rald)
        (memp . g$5156$17Rald)
        (member . g$5155$17Rald)
        (exists . g$5160$17Rald)
        (for-all . g$5159$17Rald)
        (fold-right . g$5165$17Rald)
        (fold-left . g$5164$17Rald)
        (find . g$5145$17Rald)
        (filter . g$5148$17Rald)
        (cons* . g$5163$17Rald)
        (assv . g$5150$17Rald)
        (assq . g$5149$17Rald)
        (assp . g$5152$17Rald)
        (assoc . g$5151$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13197$17Rald
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8133$17Rald)
        (call-with-input-file . g$8132$17Rald)
        (write-char . g$8124$17Rald)
        (write . g$13090$17Rald)
        (with-output-to-file . g$8131$17Rald)
        (with-input-from-file . g$8130$17Rald)
        (read-char . g$8123$17Rald)
        (read . g$13089$17Rald)
        (peek-char . g$8122$17Rald)
        (open-output-file . g$13088$17Rald)
        (open-input-file . g$13087$17Rald)
        (newline . g$8134$17Rald)
        (display . g$13086$17Rald)
        (close-output-port . g$13085$17Rald)
        (close-input-port . g$13084$17Rald)
        (eof-object? . g$13083$17Rald)
        (eof-object . g$13082$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13198$17Rald
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$13038$17Rald)
        (utf32->string . g$13006$17Rald)
        (utf16->string . g$13005$17Rald)
        (utf8->string . g$13004$17Rald)
        (uint-list->bytevector . g$13003$17Rald)
        (u8-list->bytevector . g$13002$17Rald)
        (string->utf8 . g$13001$17Rald)
        (string->utf32 . g$13000$17Rald)
        (string->utf16 . g$12999$17Rald)
        (sint-list->bytevector . g$12998$17Rald)
        (native-endianness . g$5793$17Rald)
        (bytevector? . g$5482$17Rald)
        (bytevector=? . g$12997$17Rald)
        (bytevector-uint-set! . g$12996$17Rald)
        (bytevector-uint-ref . g$12995$17Rald)
        (bytevector-u8-set! . g$12994$17Rald)
        (bytevector-u8-ref . g$12993$17Rald)
        (bytevector-u64-set! . g$5814$17Rald)
        (bytevector-u64-ref . g$5810$17Rald)
        (bytevector-u64-native-set! . g$5816$17Rald)
        (bytevector-u64-native-ref . g$5812$17Rald)
        (bytevector-u32-set! . g$5806$17Rald)
        (bytevector-u32-ref . g$5802$17Rald)
        (bytevector-u32-native-set! . g$5808$17Rald)
        (bytevector-u32-native-ref . g$5804$17Rald)
        (bytevector-u16-set! . g$5798$17Rald)
        (bytevector-u16-ref . g$5794$17Rald)
        (bytevector-u16-native-set! . g$5800$17Rald)
        (bytevector-u16-native-ref . g$5796$17Rald)
        (bytevector-sint-set! . g$12992$17Rald)
        (bytevector-sint-ref . g$12991$17Rald)
        (bytevector-s8-set! . g$12990$17Rald)
        (bytevector-s8-ref . g$12989$17Rald)
        (bytevector-s64-set! . g$5815$17Rald)
        (bytevector-s64-ref . g$5811$17Rald)
        (bytevector-s64-native-set! . g$5817$17Rald)
        (bytevector-s64-native-ref . g$5813$17Rald)
        (bytevector-s32-set! . g$5807$17Rald)
        (bytevector-s32-ref . g$5803$17Rald)
        (bytevector-s32-native-set! . g$5809$17Rald)
        (bytevector-s32-native-ref . g$5805$17Rald)
        (bytevector-s16-set! . g$5799$17Rald)
        (bytevector-s16-ref . g$5795$17Rald)
        (bytevector-s16-native-set! . g$5801$17Rald)
        (bytevector-s16-native-ref . g$5797$17Rald)
        (bytevector-length . g$12988$17Rald)
        (bytevector-ieee-single-set! . g$12987$17Rald)
        (bytevector-ieee-single-ref . g$12986$17Rald)
        (bytevector-ieee-single-native-set! . g$5820$17Rald)
        (bytevector-ieee-single-native-ref . g$5818$17Rald)
        (bytevector-ieee-double-set! . g$12985$17Rald)
        (bytevector-ieee-double-ref . g$12984$17Rald)
        (bytevector-ieee-double-native-set! . g$5821$17Rald)
        (bytevector-ieee-double-native-ref . g$5819$17Rald)
        (bytevector-fill! . g$12983$17Rald)
        (bytevector-copy! . g$12982$17Rald)
        (bytevector-copy . g$12981$17Rald)
        (bytevector->uint-list . g$12980$17Rald)
        (bytevector->u8-list . g$12979$17Rald)
        (bytevector->sint-list . g$12978$17Rald)
        (endianness . g$12749$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13199$17Rald
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13136$17Rald)
        (string-titlecase . g$13135$17Rald)
        (string-normalize-nfkd . g$6396$17Rald)
        (string-normalize-nfkc . g$6395$17Rald)
        (string-normalize-nfd . g$6394$17Rald)
        (string-normalize-nfc . g$6393$17Rald)
        (string-foldcase . g$13134$17Rald)
        (string-downcase . g$13133$17Rald)
        (string-ci>? . g$6380$17Rald)
        (string-ci>=? . g$6382$17Rald)
        (string-ci=? . g$6378$17Rald)
        (string-ci<? . g$6379$17Rald)
        (string-ci<=? . g$6381$17Rald)
        (char-whitespace? . g$13132$17Rald)
        (char-upper-case? . g$13131$17Rald)
        (char-title-case? . g$13130$17Rald)
        (char-numeric? . g$13129$17Rald)
        (char-lower-case? . g$13128$17Rald)
        (char-general-category . g$13127$17Rald)
        (char-upcase . g$13126$17Rald)
        (char-titlecase . g$13125$17Rald)
        (char-foldcase . g$13124$17Rald)
        (char-downcase . g$13123$17Rald)
        (char-ci>? . g$6390$17Rald)
        (char-ci>=? . g$6392$17Rald)
        (char-ci=? . g$6388$17Rald)
        (char-ci<? . g$6389$17Rald)
        (char-ci<=? . g$6391$17Rald)
        (char-alphabetic? . g$13122$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13200$17Rald
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13014$17Rald)
        (raise-continuable . g$13013$17Rald)
        (raise . g$13012$17Rald)
        (guard . g$12764$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13201$17Rald
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6460$17Rald)
        (bitwise-reverse-bit-field . g$12973$17Rald)
        (bitwise-length . g$12972$17Rald)
        (bitwise-if . g$6454$17Rald)
        (bitwise-first-bit-set . g$12971$17Rald)
        (bitwise-copy-bit-field . g$6457$17Rald)
        (bitwise-copy-bit . g$6455$17Rald)
        (bitwise-bit-set? . g$12970$17Rald)
        (bitwise-bit-field . g$6456$17Rald)
        (bitwise-bit-count . g$12969$17Rald)
        (bitwise-xor . g$12968$17Rald)
        (bitwise-ior . g$12967$17Rald)
        (bitwise-and . g$12966$17Rald)
        (bitwise-not . g$12965$17Rald)
        (bitwise-arithmetic-shift-right . g$6459$17Rald)
        (bitwise-arithmetic-shift-left . g$6458$17Rald)
        (bitwise-arithmetic-shift . g$12964$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13202$17Rald
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6592$17Rald)
        (fxxor . g$6555$17Rald)
        (fxrotate-bit-field . g$6630$17Rald)
        (fxreverse-bit-field . g$6631$17Rald)
        (fxpositive? . g$6582$17Rald)
        (fxodd? . g$6602$17Rald)
        (fxnot . g$6536$17Rald)
        (fxnegative? . g$6587$17Rald)
        (fxmod0 . g$6566$17Rald)
        (fxmod . g$6565$17Rald)
        (fxmin . g$6604$17Rald)
        (fxmax . g$6603$17Rald)
        (fxlength . g$6533$17Rald)
        (fxior . g$6554$17Rald)
        (fxif . g$6612$17Rald)
        (fxfirst-bit-set . g$6534$17Rald)
        (fxeven? . g$6597$17Rald)
        (fxdiv0-and-mod0 . g$6577$17Rald)
        (fxdiv0 . g$6572$17Rald)
        (fxdiv-and-mod . g$6567$17Rald)
        (fxdiv . g$6560$17Rald)
        (fxcopy-bit-field . g$6627$17Rald)
        (fxcopy-bit . g$6617$17Rald)
        (fxbit-set? . g$6535$17Rald)
        (fxbit-field . g$6622$17Rald)
        (fxbit-count . g$6528$17Rald)
        (fxarithmetic-shift-right . g$6629$17Rald)
        (fxarithmetic-shift-left . g$6628$17Rald)
        (fxarithmetic-shift . g$6523$17Rald)
        (fxand . g$6553$17Rald)
        (fx>? . g$6545$17Rald)
        (fx>=? . g$6546$17Rald)
        (fx=? . g$6542$17Rald)
        (fx<? . g$6543$17Rald)
        (fx<=? . g$6544$17Rald)
        (fx-/carry . g$6606$17Rald)
        (fx- . g$6517$17Rald)
        (fx+/carry . g$6607$17Rald)
        (fx+ . g$6515$17Rald)
        (fx*/carry . g$6605$17Rald)
        (fx* . g$6516$17Rald)
        (greatest-fixnum . g$6486$17Rald)
        (least-fixnum . g$6487$17Rald)
        (fixnum-width . g$5488$17Rald)
        (fixnum? . g$5486$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13203$17Rald
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6311$17Rald)
        (no-infinities-violation? . g$6298$17Rald)
        (make-no-nans-violation . g$6310$17Rald)
        (make-no-infinities-violation . g$6297$17Rald)
        (real->flonum . g$12977$17Rald)
        (flzero? . g$7548$17Rald)
        (fltruncate . g$7543$17Rald)
        (fltan . g$7529$17Rald)
        (flsqrt . g$7534$17Rald)
        (flsin . g$7527$17Rald)
        (flround . g$7544$17Rald)
        (flpositive? . g$7546$17Rald)
        (flonum? . g$5487$17Rald)
        (flodd? . g$7550$17Rald)
        (flnumerator . g$12976$17Rald)
        (flnegative? . g$7547$17Rald)
        (flnan? . g$7526$17Rald)
        (flmod0 . g$7511$17Rald)
        (flmod . g$7510$17Rald)
        (flmin . g$7552$17Rald)
        (flmax . g$7551$17Rald)
        (fllog . g$7533$17Rald)
        (flinteger? . g$7519$17Rald)
        (flinfinite? . g$7525$17Rald)
        (flfloor . g$7542$17Rald)
        (flfinite? . g$7520$17Rald)
        (flexpt . g$7536$17Rald)
        (flexp . g$7535$17Rald)
        (fleven? . g$7549$17Rald)
        (fldiv0-and-mod0 . g$7518$17Rald)
        (fldiv0 . g$7505$17Rald)
        (fldiv-and-mod . g$7512$17Rald)
        (fldiv . g$7517$17Rald)
        (fldenominator . g$12975$17Rald)
        (flcos . g$7528$17Rald)
        (flceiling . g$7537$17Rald)
        (flatan . g$7532$17Rald)
        (flasin . g$7530$17Rald)
        (flacos . g$7531$17Rald)
        (flabs . g$7545$17Rald)
        (fl>? . g$7499$17Rald)
        (fl>=? . g$7500$17Rald)
        (fl=? . g$7496$17Rald)
        (fl<? . g$7497$17Rald)
        (fl<=? . g$7498$17Rald)
        (fl/ . g$7495$17Rald)
        (fl- . g$7494$17Rald)
        (fl+ . g$7492$17Rald)
        (fl* . g$7493$17Rald)
        (fixnum->flonum . g$12974$17Rald)
        (&no-nans . g$12808$17Rald)
        (&no-infinities . g$12807$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13204$17Rald
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13102$17Rald)
        (string-ci-hash . g$13101$17Rald)
        (string-hash . g$13100$17Rald)
        (equal-hash . g$13099$17Rald)
        (hashtable-equivalence-function . g$13098$17Rald)
        (make-hashtable . g$13097$17Rald)
        (hashtable-hash-function . g$13096$17Rald)
        (make-eqv-hashtable . g$5754$17Rald)
        (make-eq-hashtable . g$5753$17Rald)
        (hashtable? . g$13095$17Rald)
        (hashtable-update! . g$5760$17Rald)
        (hashtable-size . g$5755$17Rald)
        (hashtable-set! . g$5757$17Rald)
        (hashtable-ref . g$5756$17Rald)
        (hashtable-mutable? . g$13094$17Rald)
        (hashtable-keys . g$13093$17Rald)
        (hashtable-entries . g$13092$17Rald)
        (hashtable-delete! . g$5758$17Rald)
        (hashtable-copy . g$13091$17Rald)
        (hashtable-contains? . g$5759$17Rald)
        (hashtable-clear! . g$5761$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13205$17Rald
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13083$17Rald)
        (eof-object . g$13082$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (utf-8-codec . g$13076$17Rald)
        (utf-16-codec . g$13075$17Rald)
        (transcoder-error-handling-mode . g$13074$17Rald)
        (transcoder-eol-style . g$13073$17Rald)
        (transcoder-codec . g$13072$17Rald)
        (transcoded-port . g$13071$17Rald)
        (textual-port? . g$13070$17Rald)
        (string->bytevector . g$13069$17Rald)
        (standard-output-port . g$13068$17Rald)
        (standard-input-port . g$13067$17Rald)
        (standard-error-port . g$13066$17Rald)
        (set-port-position! . g$13065$17Rald)
        (put-u8 . g$13064$17Rald)
        (put-string . g$13063$17Rald)
        (put-datum . g$8102$17Rald)
        (put-char . g$13062$17Rald)
        (put-bytevector . g$13061$17Rald)
        (port? . g$8107$17Rald)
        (port-transcoder . g$13060$17Rald)
        (port-position . g$13059$17Rald)
        (port-has-set-port-position!? . g$13058$17Rald)
        (port-has-port-position? . g$13057$17Rald)
        (port-eof? . g$13056$17Rald)
        (output-port-buffer-mode . g$13055$17Rald)
        (open-string-output-port . g$8106$17Rald)
        (open-string-input-port . g$13054$17Rald)
        (open-file-output-port . g$13053$17Rald)
        (open-file-input/output-port . g$13052$17Rald)
        (open-file-input-port . g$13051$17Rald)
        (open-bytevector-output-port . g$13050$17Rald)
        (open-bytevector-input-port . g$13049$17Rald)
        (native-transcoder . g$13048$17Rald)
        (native-eol-style . g$13047$17Rald)
        (make-transcoder . g$13046$17Rald)
        (latin-1-codec . g$13045$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (make-i/o-encoding-error . g$6282$17Rald)
        (make-i/o-decoding-error . g$6269$17Rald)
        (make-custom-textual-output-port . g$13044$17Rald)
        (make-custom-textual-input/output-port . g$13043$17Rald)
        (make-custom-textual-input-port . g$13042$17Rald)
        (make-custom-binary-output-port . g$13041$17Rald)
        (make-custom-binary-input/output-port . g$13040$17Rald)
        (make-custom-binary-input-port . g$13039$17Rald)
        (lookahead-u8 . g$13037$17Rald)
        (lookahead-char . g$13036$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (i/o-encoding-error? . g$6284$17Rald)
        (i/o-encoding-error-char . g$6285$17Rald)
        (i/o-decoding-error? . g$6270$17Rald)
        (get-u8 . g$13035$17Rald)
        (get-string-n! . g$13034$17Rald)
        (get-string-n . g$13033$17Rald)
        (get-string-all . g$13032$17Rald)
        (get-line . g$13031$17Rald)
        (get-datum . g$8103$17Rald)
        (get-char . g$13030$17Rald)
        (get-bytevector-some . g$13029$17Rald)
        (get-bytevector-n! . g$13028$17Rald)
        (get-bytevector-n . g$13027$17Rald)
        (get-bytevector-all . g$13026$17Rald)
        (flush-output-port . g$13025$17Rald)
        (close-port . g$13024$17Rald)
        (call-with-string-output-port . g$8108$17Rald)
        (call-with-port . g$8109$17Rald)
        (call-with-bytevector-output-port . g$13023$17Rald)
        (bytevector->string . g$13022$17Rald)
        (buffer-mode? . g$13021$17Rald)
        (binary-port? . g$13020$17Rald)
        (&i/o-encoding . g$12806$17Rald)
        (&i/o-decoding . g$12805$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald)
        (error-handling-mode . g$12768$17Rald)
        (file-options . g$12767$17Rald)
        (buffer-mode . g$12766$17Rald)
        (eol-style . g$12765$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13206$17Rald
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8194$17Rald)
        (enum-set=? . g$8201$17Rald)
        (enum-set-universe . g$8195$17Rald)
        (enum-set-union . g$8202$17Rald)
        (enum-set-subset? . g$8200$17Rald)
        (enum-set-projection . g$8206$17Rald)
        (enum-set-member? . g$8199$17Rald)
        (enum-set-intersection . g$8203$17Rald)
        (enum-set-indexer . g$8196$17Rald)
        (enum-set-difference . g$8204$17Rald)
        (enum-set-constructor . g$8197$17Rald)
        (enum-set-complement . g$8205$17Rald)
        (enum-set->list . g$8198$17Rald)
        (define-enumeration . g$12779$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13207$17Rald
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6051$17Rald)
        (warning? . g$5970$17Rald)
        (violation? . g$6009$17Rald)
        (undefined-violation? . g$6121$17Rald)
        (syntax-violation? . g$6106$17Rald)
        (syntax-violation-subform . g$6108$17Rald)
        (syntax-violation-form . g$6107$17Rald)
        (simple-conditions . g$13011$17Rald)
        (serious-condition? . g$5983$17Rald)
        (non-continuable-violation? . g$6065$17Rald)
        (message-condition? . g$5956$17Rald)
        (make-who-condition . g$6049$17Rald)
        (make-warning . g$5969$17Rald)
        (make-violation . g$6008$17Rald)
        (make-undefined-violation . g$6120$17Rald)
        (make-syntax-violation . g$6103$17Rald)
        (make-serious-condition . g$5982$17Rald)
        (make-non-continuable-violation . g$6064$17Rald)
        (make-message-condition . g$5954$17Rald)
        (make-lexical-violation . g$6090$17Rald)
        (make-irritants-condition . g$6034$17Rald)
        (make-implementation-restriction-violation . g$6077$17Rald)
        (make-error . g$5995$17Rald)
        (make-assertion-violation . g$6021$17Rald)
        (lexical-violation? . g$6091$17Rald)
        (irritants-condition? . g$6036$17Rald)
        (implementation-restriction-violation? . g$6078$17Rald)
        (error? . g$5996$17Rald)
        (condition-who . g$6052$17Rald)
        (condition-predicate . g$13010$17Rald)
        (condition-message . g$5957$17Rald)
        (condition-irritants . g$6037$17Rald)
        (condition-accessor . g$13009$17Rald)
        (condition . g$13008$17Rald)
        (assertion-violation? . g$6022$17Rald)
        (condition? . g$13007$17Rald)
        (&non-continuable . g$12794$17Rald)
        (&undefined . g$12793$17Rald)
        (&syntax . g$12792$17Rald)
        (&lexical . g$12791$17Rald)
        (&implementation-restriction . g$12790$17Rald)
        (&who . g$12789$17Rald)
        (&irritants . g$12788$17Rald)
        (&assertion . g$12787$17Rald)
        (&violation . g$12786$17Rald)
        (&error . g$12785$17Rald)
        (&serious . g$12784$17Rald)
        (&warning . g$12783$17Rald)
        (&message . g$12782$17Rald)
        (&condition . g$12781$17Rald)
        (define-condition-type . g$12780$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13208$17Rald
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13114$17Rald)
        (record-type-uid . g$13113$17Rald)
        (record-type-sealed? . g$13112$17Rald)
        (record-type-parent . g$13111$17Rald)
        (record-type-opaque? . g$13110$17Rald)
        (record-type-name . g$13109$17Rald)
        (record-type-generative? . g$13108$17Rald)
        (record-type-field-names . g$13107$17Rald)
        (record-rtd . g$13106$17Rald)
        (record-field-mutable? . g$13105$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13209$17Rald
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13121$17Rald)
        (record-predicate . g$13120$17Rald)
        (record-mutator . g$13119$17Rald)
        (record-constructor . g$13118$17Rald)
        (record-accessor . g$13117$17Rald)
        (make-record-type-descriptor . g$13116$17Rald)
        (make-record-constructor-descriptor . g$13115$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13210$17Rald
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12778$17Rald)
        (parent-rtd . g$12777$17Rald)
        (nongenerative . g$12776$17Rald)
        (opaque . g$12775$17Rald)
        (sealed . g$12774$17Rald)
        (protocol . g$12773$17Rald)
        (parent . g$12772$17Rald)
        (immutable . g$12771$17Rald)
        (mutable . g$12770$17Rald)
        (fields . g$12769$17Rald)
        (record-constructor-descriptor . g$12730$17Rald)
        (record-type-descriptor . g$12729$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18926$17Rald
      'g$13211$17Rald
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9505$17Rald)
        (&no-nans-rcd . g$6313$17Rald)
        (&no-nans-rtd . g$6312$17Rald)
        (&no-infinities-rcd . g$6300$17Rald)
        (&no-infinities-rtd . g$6299$17Rald)
        (&i/o-encoding-rcd . g$6287$17Rald)
        (&i/o-encoding-rtd . g$6286$17Rald)
        (&i/o-decoding-rcd . g$6272$17Rald)
        (&i/o-decoding-rtd . g$6271$17Rald)
        (&i/o-port-rcd . g$6259$17Rald)
        (&i/o-port-rtd . g$6258$17Rald)
        (&i/o-file-does-not-exist-rcd . g$6244$17Rald)
        (&i/o-file-does-not-exist-rtd . g$6243$17Rald)
        (&i/o-file-already-exists-rcd . g$6231$17Rald)
        (&i/o-file-already-exists-rtd . g$6230$17Rald)
        (&i/o-file-is-read-only-rcd . g$6218$17Rald)
        (&i/o-file-is-read-only-rtd . g$6217$17Rald)
        (&i/o-file-protection-rcd . g$6205$17Rald)
        (&i/o-file-protection-rtd . g$6204$17Rald)
        (&i/o-filename-rcd . g$6192$17Rald)
        (&i/o-filename-rtd . g$6191$17Rald)
        (&i/o-invalid-position-rcd . g$6177$17Rald)
        (&i/o-invalid-position-rtd . g$6176$17Rald)
        (&i/o-write-rcd . g$6162$17Rald)
        (&i/o-write-rtd . g$6161$17Rald)
        (&i/o-read-rcd . g$6149$17Rald)
        (&i/o-read-rtd . g$6148$17Rald)
        (&i/o-rcd . g$6136$17Rald)
        (&i/o-rtd . g$6135$17Rald)
        (&undefined-rcd . g$6123$17Rald)
        (&undefined-rtd . g$6122$17Rald)
        (&syntax-rcd . g$6110$17Rald)
        (&syntax-rtd . g$6109$17Rald)
        (&lexical-rcd . g$6093$17Rald)
        (&lexical-rtd . g$6092$17Rald)
        (&implementation-restriction-rcd . g$6080$17Rald)
        (&implementation-restriction-rtd . g$6079$17Rald)
        (&non-continuable-rcd . g$6067$17Rald)
        (&non-continuable-rtd . g$6066$17Rald)
        (&who-rcd . g$6054$17Rald)
        (&who-rtd . g$6053$17Rald)
        (&irritants-rcd . g$6039$17Rald)
        (&irritants-rtd . g$6038$17Rald)
        (&assertion-rcd . g$6024$17Rald)
        (&assertion-rtd . g$6023$17Rald)
        (&violation-rcd . g$6011$17Rald)
        (&violation-rtd . g$6010$17Rald)
        (&error-rcd . g$5998$17Rald)
        (&error-rtd . g$5997$17Rald)
        (&serious-rcd . g$5985$17Rald)
        (&serious-rtd . g$5984$17Rald)
        (&warning-rcd . g$5972$17Rald)
        (&warning-rtd . g$5971$17Rald)
        (&message-rcd . g$5959$17Rald)
        (&message-rtd . g$5958$17Rald)
        (&condition-rcd . g$5919$17Rald)
        (&condition-rtd . g$5918$17Rald)
        (library-letrec* . g$13174$17Rald)
        (annotation-stripped . g$13173$17Rald)
        (annotation-source . g$13172$17Rald)
        (annotation-expression . g$13171$17Rald)
        (annotation? . g$13170$17Rald)
        (read-annotated . g$13169$17Rald)
        (tanh . g$13168$17Rald)
        (cosh . g$13167$17Rald)
        (sinh . g$13166$17Rald)
        (make-guid . g$13165$17Rald)
        (unspecified? . g$13164$17Rald)
        (make-list . g$5144$17Rald)
        (last-pair . g$5143$17Rald)
        (load-r5rs . g$13163$17Rald)
        (license . g$13162$17Rald)
        (stacktrace . g$13161$17Rald)
        (ironscheme-build . g$12652$17Rald)
        (ffi-call-internal . g$13160$17Rald)
        (define-clr-class-internal . g$13159$17Rald)
        (clr-field-set!-internal . g$13158$17Rald)
        (clr-field-get-internal . g$13157$17Rald)
        (clr-cast-internal . g$13156$17Rald)
        (clr-call-internal . g$13155$17Rald)
        (clr-new-internal . g$13154$17Rald)
        (clr-new-array-internal . g$13153$17Rald)
        (clr-is-internal . g$13152$17Rald)
        (clr-reference-internal . g$13151$17Rald)
        (clr-using-internal . g$13150$17Rald)
        (syntax-error . g$9625$17Rald)
        (syntax-dispatch . g$9500$17Rald)
        (compile-core . g$13149$17Rald)
        (eval-core . g$13148$17Rald)
        (remove-location . g$13147$17Rald)
        (set-symbol-value! . g$13146$17Rald)
        (symbol-value . g$13145$17Rald)
        (symbol-bound? . g$13144$17Rald)
        (ungensym . g$13143$17Rald)
        (gensym . g$13142$17Rald)
        (void . g$13141$17Rald)
        (load-serialized-library . g$13140$17Rald)
        (serialize-library . g$13139$17Rald)
        (compile-system-libraries . g$12656$17Rald)
        (compile->closure . g$12658$17Rald)
        (compile . g$12657$17Rald)
        (load . g$12651$17Rald)
        (string-normalize . g$13138$17Rald)
        (interaction-environment . g$9635$17Rald)
        (char-ready? . g$13137$17Rald)
        (string-upcase . g$13136$17Rald)
        (string-titlecase . g$13135$17Rald)
        (string-normalize-nfkd . g$6396$17Rald)
        (string-normalize-nfkc . g$6395$17Rald)
        (string-normalize-nfd . g$6394$17Rald)
        (string-normalize-nfc . g$6393$17Rald)
        (string-foldcase . g$13134$17Rald)
        (string-downcase . g$13133$17Rald)
        (string-ci>? . g$6380$17Rald)
        (string-ci>=? . g$6382$17Rald)
        (string-ci=? . g$6378$17Rald)
        (string-ci<? . g$6379$17Rald)
        (string-ci<=? . g$6381$17Rald)
        (char-whitespace? . g$13132$17Rald)
        (char-upper-case? . g$13131$17Rald)
        (char-title-case? . g$13130$17Rald)
        (char-numeric? . g$13129$17Rald)
        (char-lower-case? . g$13128$17Rald)
        (char-general-category . g$13127$17Rald)
        (char-upcase . g$13126$17Rald)
        (char-titlecase . g$13125$17Rald)
        (char-foldcase . g$13124$17Rald)
        (char-downcase . g$13123$17Rald)
        (char-ci>? . g$6390$17Rald)
        (char-ci>=? . g$6392$17Rald)
        (char-ci=? . g$6388$17Rald)
        (char-ci<? . g$6389$17Rald)
        (char-ci<=? . g$6391$17Rald)
        (char-alphabetic? . g$13122$17Rald)
        (variable-transformer-procedure . g$9312$17Rald)
        (variable-transformer? . g$9311$17Rald)
        (make-variable-transformer . g$9309$17Rald)
        (identifier? . g$9629$17Rald)
        (generate-temporaries . g$9618$17Rald)
        (free-identifier=? . g$9619$17Rald)
        (syntax->datum . g$9631$17Rald)
        (datum->syntax . g$9630$17Rald)
        (bound-identifier=? . g$9620$17Rald)
        (record-type-descriptor? . g$13121$17Rald)
        (record-predicate . g$13120$17Rald)
        (record-mutator . g$13119$17Rald)
        (record-constructor . g$13118$17Rald)
        (record-accessor . g$13117$17Rald)
        (make-record-type-descriptor . g$13116$17Rald)
        (make-record-constructor-descriptor . g$13115$17Rald)
        (record? . g$13114$17Rald)
        (record-type-uid . g$13113$17Rald)
        (record-type-sealed? . g$13112$17Rald)
        (record-type-parent . g$13111$17Rald)
        (record-type-opaque? . g$13110$17Rald)
        (record-type-name . g$13109$17Rald)
        (record-type-generative? . g$13108$17Rald)
        (record-type-field-names . g$13107$17Rald)
        (record-rtd . g$13106$17Rald)
        (record-field-mutable? . g$13105$17Rald)
        (delete-file . g$5787$17Rald)
        (file-exists? . g$5786$17Rald)
        (vector-sort! . g$13104$17Rald)
        (vector-sort . g$13103$17Rald)
        (list-sort . g$6349$17Rald)
        (symbol-hash . g$13102$17Rald)
        (string-ci-hash . g$13101$17Rald)
        (string-hash . g$13100$17Rald)
        (equal-hash . g$13099$17Rald)
        (hashtable-equivalence-function . g$13098$17Rald)
        (make-hashtable . g$13097$17Rald)
        (hashtable-hash-function . g$13096$17Rald)
        (make-eqv-hashtable . g$5754$17Rald)
        (make-eq-hashtable . g$5753$17Rald)
        (hashtable? . g$13095$17Rald)
        (hashtable-update! . g$5760$17Rald)
        (hashtable-size . g$5755$17Rald)
        (hashtable-set! . g$5757$17Rald)
        (hashtable-ref . g$5756$17Rald)
        (hashtable-mutable? . g$13094$17Rald)
        (hashtable-keys . g$13093$17Rald)
        (hashtable-entries . g$13092$17Rald)
        (hashtable-delete! . g$5758$17Rald)
        (hashtable-copy . g$13091$17Rald)
        (hashtable-contains? . g$5759$17Rald)
        (hashtable-clear! . g$5761$17Rald)
        (call-with-output-file . g$8133$17Rald)
        (call-with-input-file . g$8132$17Rald)
        (write-char . g$8124$17Rald)
        (write . g$13090$17Rald)
        (with-output-to-file . g$8131$17Rald)
        (with-input-from-file . g$8130$17Rald)
        (read-char . g$8123$17Rald)
        (read . g$13089$17Rald)
        (peek-char . g$8122$17Rald)
        (open-output-file . g$13088$17Rald)
        (open-input-file . g$13087$17Rald)
        (newline . g$8134$17Rald)
        (display . g$13086$17Rald)
        (close-output-port . g$13085$17Rald)
        (close-input-port . g$13084$17Rald)
        (eof-object? . g$13083$17Rald)
        (eof-object . g$13082$17Rald)
        (current-error-port . g$13081$17Rald)
        (current-output-port . g$13080$17Rald)
        (current-input-port . g$13079$17Rald)
        (output-port? . g$13078$17Rald)
        (input-port? . g$13077$17Rald)
        (utf-8-codec . g$13076$17Rald)
        (utf-16-codec . g$13075$17Rald)
        (transcoder-error-handling-mode . g$13074$17Rald)
        (transcoder-eol-style . g$13073$17Rald)
        (transcoder-codec . g$13072$17Rald)
        (transcoded-port . g$13071$17Rald)
        (textual-port? . g$13070$17Rald)
        (string->bytevector . g$13069$17Rald)
        (standard-output-port . g$13068$17Rald)
        (standard-input-port . g$13067$17Rald)
        (standard-error-port . g$13066$17Rald)
        (set-port-position! . g$13065$17Rald)
        (put-u8 . g$13064$17Rald)
        (put-string . g$13063$17Rald)
        (put-datum . g$8102$17Rald)
        (put-char . g$13062$17Rald)
        (put-bytevector . g$13061$17Rald)
        (port? . g$8107$17Rald)
        (port-transcoder . g$13060$17Rald)
        (port-position . g$13059$17Rald)
        (port-has-set-port-position!? . g$13058$17Rald)
        (port-has-port-position? . g$13057$17Rald)
        (port-eof? . g$13056$17Rald)
        (output-port-buffer-mode . g$13055$17Rald)
        (open-string-output-port . g$8106$17Rald)
        (open-string-input-port . g$13054$17Rald)
        (open-file-output-port . g$13053$17Rald)
        (open-file-input/output-port . g$13052$17Rald)
        (open-file-input-port . g$13051$17Rald)
        (open-bytevector-output-port . g$13050$17Rald)
        (open-bytevector-input-port . g$13049$17Rald)
        (native-transcoder . g$13048$17Rald)
        (native-eol-style . g$13047$17Rald)
        (make-transcoder . g$13046$17Rald)
        (latin-1-codec . g$13045$17Rald)
        (make-i/o-write-error . g$6159$17Rald)
        (make-i/o-read-error . g$6146$17Rald)
        (make-i/o-port-error . g$6254$17Rald)
        (make-i/o-invalid-position-error . g$6172$17Rald)
        (make-i/o-filename-error . g$6187$17Rald)
        (make-i/o-file-protection-error . g$6202$17Rald)
        (make-i/o-file-is-read-only-error . g$6215$17Rald)
        (make-i/o-file-does-not-exist-error . g$6241$17Rald)
        (make-i/o-file-already-exists-error . g$6228$17Rald)
        (make-i/o-error . g$6133$17Rald)
        (make-i/o-encoding-error . g$6282$17Rald)
        (make-i/o-decoding-error . g$6269$17Rald)
        (make-custom-textual-output-port . g$13044$17Rald)
        (make-custom-textual-input/output-port . g$13043$17Rald)
        (make-custom-textual-input-port . g$13042$17Rald)
        (make-custom-binary-output-port . g$13041$17Rald)
        (make-custom-binary-input/output-port . g$13040$17Rald)
        (make-custom-binary-input-port . g$13039$17Rald)
        (make-bytevector . g$13038$17Rald)
        (lookahead-u8 . g$13037$17Rald)
        (lookahead-char . g$13036$17Rald)
        (i/o-write-error? . g$6160$17Rald)
        (i/o-read-error? . g$6147$17Rald)
        (i/o-port-error? . g$6256$17Rald)
        (i/o-invalid-position-error? . g$6174$17Rald)
        (i/o-error-position . g$6175$17Rald)
        (i/o-filename-error? . g$6189$17Rald)
        (i/o-file-protection-error? . g$6203$17Rald)
        (i/o-file-is-read-only-error? . g$6216$17Rald)
        (i/o-file-does-not-exist-error? . g$6242$17Rald)
        (i/o-file-already-exists-error? . g$6229$17Rald)
        (i/o-error? . g$6134$17Rald)
        (i/o-error-port . g$6257$17Rald)
        (i/o-error-filename . g$6190$17Rald)
        (i/o-encoding-error? . g$6284$17Rald)
        (i/o-encoding-error-char . g$6285$17Rald)
        (i/o-decoding-error? . g$6270$17Rald)
        (get-u8 . g$13035$17Rald)
        (get-string-n! . g$13034$17Rald)
        (get-string-n . g$13033$17Rald)
        (get-string-all . g$13032$17Rald)
        (get-line . g$13031$17Rald)
        (get-datum . g$8103$17Rald)
        (get-char . g$13030$17Rald)
        (get-bytevector-some . g$13029$17Rald)
        (get-bytevector-n! . g$13028$17Rald)
        (get-bytevector-n . g$13027$17Rald)
        (get-bytevector-all . g$13026$17Rald)
        (flush-output-port . g$13025$17Rald)
        (close-port . g$13024$17Rald)
        (call-with-string-output-port . g$8108$17Rald)
        (call-with-port . g$8109$17Rald)
        (call-with-bytevector-output-port . g$13023$17Rald)
        (bytevector->string . g$13022$17Rald)
        (buffer-mode? . g$13021$17Rald)
        (binary-port? . g$13020$17Rald)
        (scheme-report-environment . g$9608$17Rald)
        (quotient . g$6328$17Rald)
        (null-environment . g$9607$17Rald)
        (remainder . g$6329$17Rald)
        (modulo . g$6330$17Rald)
        (inexact->exact . g$6325$17Rald)
        (force . g$6332$17Rald)
        (exact->inexact . g$6326$17Rald)
        (exit . g$13019$17Rald)
        (command-line . g$12647$17Rald)
        (string-fill! . g$13018$17Rald)
        (string-set! . g$13017$17Rald)
        (set-cdr! . g$13016$17Rald)
        (set-car! . g$13015$17Rald)
        (remove . g$5166$17Rald)
        (remv . g$5167$17Rald)
        (remp . g$5147$17Rald)
        (remq . g$5168$17Rald)
        (partition . g$5146$17Rald)
        (memv . g$5154$17Rald)
        (memq . g$5153$17Rald)
        (memp . g$5156$17Rald)
        (member . g$5155$17Rald)
        (exists . g$5160$17Rald)
        (for-all . g$5159$17Rald)
        (fold-right . g$5165$17Rald)
        (fold-left . g$5164$17Rald)
        (find . g$5145$17Rald)
        (filter . g$5148$17Rald)
        (cons* . g$5163$17Rald)
        (assv . g$5150$17Rald)
        (assq . g$5149$17Rald)
        (assp . g$5152$17Rald)
        (assoc . g$5151$17Rald)
        (with-exception-handler . g$13014$17Rald)
        (raise-continuable . g$13013$17Rald)
        (raise . g$13012$17Rald)
        (eval . g$9610$17Rald)
        (environment . g$9606$17Rald)
        (make-enumeration . g$8194$17Rald)
        (enum-set=? . g$8201$17Rald)
        (enum-set-universe . g$8195$17Rald)
        (enum-set-union . g$8202$17Rald)
        (enum-set-subset? . g$8200$17Rald)
        (enum-set-projection . g$8206$17Rald)
        (enum-set-member? . g$8199$17Rald)
        (enum-set-intersection . g$8203$17Rald)
        (enum-set-indexer . g$8196$17Rald)
        (enum-set-difference . g$8204$17Rald)
        (enum-set-constructor . g$8197$17Rald)
        (enum-set-complement . g$8205$17Rald)
        (enum-set->list . g$8198$17Rald)
        (who-condition? . g$6051$17Rald)
        (warning? . g$5970$17Rald)
        (violation? . g$6009$17Rald)
        (undefined-violation? . g$6121$17Rald)
        (syntax-violation? . g$6106$17Rald)
        (syntax-violation-subform . g$6108$17Rald)
        (syntax-violation-form . g$6107$17Rald)
        (syntax-violation . g$9628$17Rald)
        (simple-conditions . g$13011$17Rald)
        (serious-condition? . g$5983$17Rald)
        (non-continuable-violation? . g$6065$17Rald)
        (message-condition? . g$5956$17Rald)
        (make-who-condition . g$6049$17Rald)
        (make-warning . g$5969$17Rald)
        (make-violation . g$6008$17Rald)
        (make-undefined-violation . g$6120$17Rald)
        (make-syntax-violation . g$6103$17Rald)
        (make-serious-condition . g$5982$17Rald)
        (make-non-continuable-violation . g$6064$17Rald)
        (make-message-condition . g$5954$17Rald)
        (make-lexical-violation . g$6090$17Rald)
        (make-irritants-condition . g$6034$17Rald)
        (make-implementation-restriction-violation . g$6077$17Rald)
        (make-error . g$5995$17Rald)
        (make-assertion-violation . g$6021$17Rald)
        (lexical-violation? . g$6091$17Rald)
        (irritants-condition? . g$6036$17Rald)
        (implementation-restriction-violation? . g$6078$17Rald)
        (error? . g$5996$17Rald)
        (condition-who . g$6052$17Rald)
        (condition-predicate . g$13010$17Rald)
        (condition-message . g$5957$17Rald)
        (condition-irritants . g$6037$17Rald)
        (condition-accessor . g$13009$17Rald)
        (condition . g$13008$17Rald)
        (assertion-violation? . g$6022$17Rald)
        (condition? . g$13007$17Rald)
        (utf32->string . g$13006$17Rald)
        (utf16->string . g$13005$17Rald)
        (utf8->string . g$13004$17Rald)
        (uint-list->bytevector . g$13003$17Rald)
        (u8-list->bytevector . g$13002$17Rald)
        (string->utf8 . g$13001$17Rald)
        (string->utf32 . g$13000$17Rald)
        (string->utf16 . g$12999$17Rald)
        (sint-list->bytevector . g$12998$17Rald)
        (native-endianness . g$5793$17Rald)
        (bytevector? . g$5482$17Rald)
        (bytevector=? . g$12997$17Rald)
        (bytevector-uint-set! . g$12996$17Rald)
        (bytevector-uint-ref . g$12995$17Rald)
        (bytevector-u8-set! . g$12994$17Rald)
        (bytevector-u8-ref . g$12993$17Rald)
        (bytevector-u64-set! . g$5814$17Rald)
        (bytevector-u64-ref . g$5810$17Rald)
        (bytevector-u64-native-set! . g$5816$17Rald)
        (bytevector-u64-native-ref . g$5812$17Rald)
        (bytevector-u32-set! . g$5806$17Rald)
        (bytevector-u32-ref . g$5802$17Rald)
        (bytevector-u32-native-set! . g$5808$17Rald)
        (bytevector-u32-native-ref . g$5804$17Rald)
        (bytevector-u16-set! . g$5798$17Rald)
        (bytevector-u16-ref . g$5794$17Rald)
        (bytevector-u16-native-set! . g$5800$17Rald)
        (bytevector-u16-native-ref . g$5796$17Rald)
        (bytevector-sint-set! . g$12992$17Rald)
        (bytevector-sint-ref . g$12991$17Rald)
        (bytevector-s8-set! . g$12990$17Rald)
        (bytevector-s8-ref . g$12989$17Rald)
        (bytevector-s64-set! . g$5815$17Rald)
        (bytevector-s64-ref . g$5811$17Rald)
        (bytevector-s64-native-set! . g$5817$17Rald)
        (bytevector-s64-native-ref . g$5813$17Rald)
        (bytevector-s32-set! . g$5807$17Rald)
        (bytevector-s32-ref . g$5803$17Rald)
        (bytevector-s32-native-set! . g$5809$17Rald)
        (bytevector-s32-native-ref . g$5805$17Rald)
        (bytevector-s16-set! . g$5799$17Rald)
        (bytevector-s16-ref . g$5795$17Rald)
        (bytevector-s16-native-set! . g$5801$17Rald)
        (bytevector-s16-native-ref . g$5797$17Rald)
        (bytevector-length . g$12988$17Rald)
        (bytevector-ieee-single-set! . g$12987$17Rald)
        (bytevector-ieee-single-ref . g$12986$17Rald)
        (bytevector-ieee-single-native-set! . g$5820$17Rald)
        (bytevector-ieee-single-native-ref . g$5818$17Rald)
        (bytevector-ieee-double-set! . g$12985$17Rald)
        (bytevector-ieee-double-ref . g$12984$17Rald)
        (bytevector-ieee-double-native-set! . g$5821$17Rald)
        (bytevector-ieee-double-native-ref . g$5819$17Rald)
        (bytevector-fill! . g$12983$17Rald)
        (bytevector-copy! . g$12982$17Rald)
        (bytevector-copy . g$12981$17Rald)
        (bytevector->uint-list . g$12980$17Rald)
        (bytevector->u8-list . g$12979$17Rald)
        (bytevector->sint-list . g$12978$17Rald)
        (no-nans-violation? . g$6311$17Rald)
        (no-infinities-violation? . g$6298$17Rald)
        (make-no-nans-violation . g$6310$17Rald)
        (make-no-infinities-violation . g$6297$17Rald)
        (real->flonum . g$12977$17Rald)
        (flzero? . g$7548$17Rald)
        (fltruncate . g$7543$17Rald)
        (fltan . g$7529$17Rald)
        (flsqrt . g$7534$17Rald)
        (flsin . g$7527$17Rald)
        (flround . g$7544$17Rald)
        (flpositive? . g$7546$17Rald)
        (flonum? . g$5487$17Rald)
        (flodd? . g$7550$17Rald)
        (flnumerator . g$12976$17Rald)
        (flnegative? . g$7547$17Rald)
        (flnan? . g$7526$17Rald)
        (flmod0 . g$7511$17Rald)
        (flmod . g$7510$17Rald)
        (flmin . g$7552$17Rald)
        (flmax . g$7551$17Rald)
        (fllog . g$7533$17Rald)
        (flinteger? . g$7519$17Rald)
        (flinfinite? . g$7525$17Rald)
        (flfloor . g$7542$17Rald)
        (flfinite? . g$7520$17Rald)
        (flexpt . g$7536$17Rald)
        (flexp . g$7535$17Rald)
        (fleven? . g$7549$17Rald)
        (fldiv0-and-mod0 . g$7518$17Rald)
        (fldiv0 . g$7505$17Rald)
        (fldiv-and-mod . g$7512$17Rald)
        (fldiv . g$7517$17Rald)
        (fldenominator . g$12975$17Rald)
        (flcos . g$7528$17Rald)
        (flceiling . g$7537$17Rald)
        (flatan . g$7532$17Rald)
        (flasin . g$7530$17Rald)
        (flacos . g$7531$17Rald)
        (flabs . g$7545$17Rald)
        (fl>? . g$7499$17Rald)
        (fl>=? . g$7500$17Rald)
        (fl=? . g$7496$17Rald)
        (fl<? . g$7497$17Rald)
        (fl<=? . g$7498$17Rald)
        (fl/ . g$7495$17Rald)
        (fl- . g$7494$17Rald)
        (fl+ . g$7492$17Rald)
        (fl* . g$7493$17Rald)
        (fixnum->flonum . g$12974$17Rald)
        (fxzero? . g$6592$17Rald)
        (fxxor . g$6555$17Rald)
        (fxrotate-bit-field . g$6630$17Rald)
        (fxreverse-bit-field . g$6631$17Rald)
        (fxpositive? . g$6582$17Rald)
        (fxodd? . g$6602$17Rald)
        (fxnot . g$6536$17Rald)
        (fxnegative? . g$6587$17Rald)
        (fxmod0 . g$6566$17Rald)
        (fxmod . g$6565$17Rald)
        (fxmin . g$6604$17Rald)
        (fxmax . g$6603$17Rald)
        (fxlength . g$6533$17Rald)
        (fxior . g$6554$17Rald)
        (fxif . g$6612$17Rald)
        (fxfirst-bit-set . g$6534$17Rald)
        (fxeven? . g$6597$17Rald)
        (fxdiv0-and-mod0 . g$6577$17Rald)
        (fxdiv0 . g$6572$17Rald)
        (fxdiv-and-mod . g$6567$17Rald)
        (fxdiv . g$6560$17Rald)
        (fxcopy-bit-field . g$6627$17Rald)
        (fxcopy-bit . g$6617$17Rald)
        (fxbit-set? . g$6535$17Rald)
        (fxbit-field . g$6622$17Rald)
        (fxbit-count . g$6528$17Rald)
        (fxarithmetic-shift-right . g$6629$17Rald)
        (fxarithmetic-shift-left . g$6628$17Rald)
        (fxarithmetic-shift . g$6523$17Rald)
        (fxand . g$6553$17Rald)
        (fx>? . g$6545$17Rald)
        (fx>=? . g$6546$17Rald)
        (fx=? . g$6542$17Rald)
        (fx<? . g$6543$17Rald)
        (fx<=? . g$6544$17Rald)
        (fx-/carry . g$6606$17Rald)
        (fx- . g$6517$17Rald)
        (fx+/carry . g$6607$17Rald)
        (fx+ . g$6515$17Rald)
        (fx*/carry . g$6605$17Rald)
        (fx* . g$6516$17Rald)
        (greatest-fixnum . g$6486$17Rald)
        (least-fixnum . g$6487$17Rald)
        (fixnum-width . g$5488$17Rald)
        (fixnum? . g$5486$17Rald)
        (bitwise-rotate-bit-field . g$6460$17Rald)
        (bitwise-reverse-bit-field . g$12973$17Rald)
        (bitwise-length . g$12972$17Rald)
        (bitwise-if . g$6454$17Rald)
        (bitwise-first-bit-set . g$12971$17Rald)
        (bitwise-copy-bit-field . g$6457$17Rald)
        (bitwise-copy-bit . g$6455$17Rald)
        (bitwise-bit-set? . g$12970$17Rald)
        (bitwise-bit-field . g$6456$17Rald)
        (bitwise-bit-count . g$12969$17Rald)
        (bitwise-xor . g$12968$17Rald)
        (bitwise-ior . g$12967$17Rald)
        (bitwise-and . g$12966$17Rald)
        (bitwise-not . g$12965$17Rald)
        (bitwise-arithmetic-shift-right . g$6459$17Rald)
        (bitwise-arithmetic-shift-left . g$6458$17Rald)
        (bitwise-arithmetic-shift . g$12964$17Rald)
        (zero? . g$5530$17Rald)
        (vector? . g$5481$17Rald)
        (vector-set! . g$5496$17Rald)
        (vector-ref . g$5495$17Rald)
        (vector-map . g$5562$17Rald)
        (vector-length . g$12963$17Rald)
        (vector-for-each . g$5563$17Rald)
        (vector-fill! . g$5497$17Rald)
        (vector->list . g$12962$17Rald)
        (vector . g$12961$17Rald)
        (values . g$12960$17Rald)
        (truncate . g$12959$17Rald)
        (tan . g$12958$17Rald)
        (symbol? . g$5483$17Rald)
        (symbol=? . g$5547$17Rald)
        (symbol->string . g$12957$17Rald)
        (substring . g$12956$17Rald)
        (string? . g$12955$17Rald)
        (string>? . g$5544$17Rald)
        (string>=? . g$5546$17Rald)
        (string=? . g$5542$17Rald)
        (string<? . g$5543$17Rald)
        (string<=? . g$5545$17Rald)
        (string-ref . g$12954$17Rald)
        (string-length . g$12953$17Rald)
        (string-for-each . g$5564$17Rald)
        (string-copy . g$12952$17Rald)
        (string-append . g$12951$17Rald)
        (string->symbol . g$12950$17Rald)
        (string->number . g$12949$17Rald)
        (string->list . g$12948$17Rald)
        (string . g$12947$17Rald)
        (sqrt . g$12946$17Rald)
        (sin . g$12945$17Rald)
        (round . g$12944$17Rald)
        (reverse . g$5499$17Rald)
        (real? . g$12943$17Rald)
        (real-valued? . g$12942$17Rald)
        (real-part . g$12941$17Rald)
        (rationalize . g$5559$17Rald)
        (rational? . g$12940$17Rald)
        (rational-valued? . g$12939$17Rald)
        (procedure? . g$5485$17Rald)
        (positive? . g$5528$17Rald)
        (pair? . g$12938$17Rald)
        (odd? . g$5532$17Rald)
        (numerator . g$12937$17Rald)
        (number? . g$12936$17Rald)
        (number->string . g$12935$17Rald)
        (null? . g$12934$17Rald)
        (not . g$12933$17Rald)
        (negative? . g$5529$17Rald)
        (nan? . g$12932$17Rald)
        (min . g$5534$17Rald)
        (max . g$5533$17Rald)
        (map . g$5161$17Rald)
        (make-vector . g$12931$17Rald)
        (make-string . g$12930$17Rald)
        (make-rectangular . g$12929$17Rald)
        (make-polar . g$12928$17Rald)
        (magnitude . g$12927$17Rald)
        (log . g$12926$17Rald)
        (list? . g$12925$17Rald)
        (list-tail . g$5141$17Rald)
        (list-ref . g$5142$17Rald)
        (list->vector . g$5493$17Rald)
        (list->string . g$5494$17Rald)
        (list . g$12924$17Rald)
        (length . g$12923$17Rald)
        (lcm . g$5536$17Rald)
        (integer? . g$12922$17Rald)
        (integer-valued? . g$12921$17Rald)
        (integer->char . g$12920$17Rald)
        (infinite? . g$12919$17Rald)
        (inexact? . g$12918$17Rald)
        (inexact . g$12917$17Rald)
        (imag-part . g$12916$17Rald)
        (gcd . g$5535$17Rald)
        (for-each . g$5162$17Rald)
        (floor . g$12915$17Rald)
        (finite? . g$12914$17Rald)
        (expt . g$12913$17Rald)
        (exp . g$12912$17Rald)
        (exact? . g$12911$17Rald)
        (exact-integer-sqrt . g$12910$17Rald)
        (exact . g$12909$17Rald)
        (even? . g$5531$17Rald)
        (error . g$12908$17Rald)
        (eqv? . g$12907$17Rald)
        (equal? . g$12906$17Rald)
        (eq? . g$12905$17Rald)
        (dynamic-wind . g$12904$17Rald)
        (div0-and-mod0 . g$5492$17Rald)
        (mod0 . g$5490$17Rald)
        (div0 . g$12903$17Rald)
        (div-and-mod . g$5491$17Rald)
        (mod . g$5489$17Rald)
        (div . g$12902$17Rald)
        (denominator . g$12901$17Rald)
        (cos . g$12900$17Rald)
        (cons . g$12899$17Rald)
        (complex? . g$12898$17Rald)
        (char? . g$5480$17Rald)
        (char>? . g$5556$17Rald)
        (char>=? . g$5558$17Rald)
        (char=? . g$5554$17Rald)
        (char<? . g$5555$17Rald)
        (char<=? . g$5557$17Rald)
        (char->integer . g$12897$17Rald)
        (ceiling . g$12896$17Rald)
        (call-with-values . g$12895$17Rald)
        (call/cc . g$12894$17Rald)
        (call-with-current-continuation . g$12893$17Rald)
        (cddddr . g$5527$17Rald)
        (cdddar . g$5526$17Rald)
        (cddadr . g$5525$17Rald)
        (cddaar . g$5524$17Rald)
        (cdaddr . g$5523$17Rald)
        (cdadar . g$5522$17Rald)
        (cdaadr . g$5521$17Rald)
        (cdaaar . g$5520$17Rald)
        (cadddr . g$5519$17Rald)
        (caddar . g$5518$17Rald)
        (cadadr . g$5517$17Rald)
        (cadaar . g$5516$17Rald)
        (caaddr . g$5515$17Rald)
        (caadar . g$5514$17Rald)
        (caaadr . g$5513$17Rald)
        (caaaar . g$5512$17Rald)
        (cdddr . g$5511$17Rald)
        (cddar . g$5510$17Rald)
        (cdadr . g$5509$17Rald)
        (cdaar . g$5508$17Rald)
        (caddr . g$5507$17Rald)
        (cadar . g$5506$17Rald)
        (caadr . g$5505$17Rald)
        (caaar . g$5504$17Rald)
        (cddr . g$5503$17Rald)
        (cdar . g$5502$17Rald)
        (cadr . g$5501$17Rald)
        (caar . g$5500$17Rald)
        (cdr . g$12892$17Rald)
        (car . g$12891$17Rald)
        (boolean? . g$5484$17Rald)
        (boolean=? . g$5548$17Rald)
        (atan . g$12890$17Rald)
        (assertion-violation . g$12889$17Rald)
        (asin . g$12888$17Rald)
        (apply . g$12887$17Rald)
        (append . g$12886$17Rald)
        (angle . g$12885$17Rald)
        (acos . g$12884$17Rald)
        (abs . g$12883$17Rald)
        (/ . g$12882$17Rald)
        (* . g$12881$17Rald)
        (- . g$12880$17Rald)
        (+ . g$12879$17Rald)
        (>= . g$12878$17Rald)
        (> . g$12877$17Rald)
        (= . g$12876$17Rald)
        (<= . g$12875$17Rald)
        (< . g$12874$17Rald)
        ($fl>=? . g$12873$17Rald)
        ($fl>? . g$12872$17Rald)
        ($fl<=? . g$12871$17Rald)
        ($fl<? . g$12870$17Rald)
        ($fl- . g$12869$17Rald)
        ($fl/ . g$12868$17Rald)
        ($fl* . g$12867$17Rald)
        ($fl+ . g$12866$17Rald)
        ($fl=? . g$12865$17Rald)
        ($try . g$12864$17Rald)
        ($fxarithmetic-shift-right . g$12863$17Rald)
        ($fxarithmetic-shift-left . g$12862$17Rald)
        ($$fx- . g$12861$17Rald)
        ($$fx* . g$12860$17Rald)
        ($$fx+ . g$12859$17Rald)
        ($fxnot . g$12858$17Rald)
        ($fxxor . g$12857$17Rald)
        ($fxior . g$12856$17Rald)
        ($fxand . g$12855$17Rald)
        ($fx>=? . g$12854$17Rald)
        ($fx>? . g$12853$17Rald)
        ($fx<=? . g$12852$17Rald)
        ($fx<? . g$12851$17Rald)
        ($fx- . g$12850$17Rald)
        ($fxmod0 . g$12849$17Rald)
        ($fxdiv0 . g$12848$17Rald)
        ($fx* . g$12847$17Rald)
        ($fx+ . g$12846$17Rald)
        ($fx=? . g$12845$17Rald)
        ($vector-set! . g$12844$17Rald)
        ($vector-ref . g$12843$17Rald)
        ($cdr . g$12842$17Rald)
        ($car . g$12841$17Rald)
        (make-record-printer . g$12840$17Rald)
        (eqv-hash . g$12839$17Rald)
        (reverse! . g$12838$17Rald)
        (deserialize-port . g$12837$17Rald)
        (serialize-port . g$12836$17Rald)
        (enum-set? . g$8171$17Rald)
        (make-promise . g$6331$17Rald)
        (load/unload . g$12650$17Rald)
        (load/args . g$12649$17Rald)
        (printf . g$8280$17Rald)
        (fprintf . g$8281$17Rald)
        (format . g$8282$17Rald)
        (procedure-form . g$12835$17Rald)
        (procedure-environment . g$12834$17Rald)
        (procedure-name . g$12833$17Rald)
        (procedure-arity . g$12832$17Rald)
        (gc-collect . g$12831$17Rald)
        (typeof . g$12830$17Rald)
        (clr-type? . g$12829$17Rald)
        (get-clr-type . g$12828$17Rald)
        (get-command-line . g$12827$17Rald)
        (vector-append . g$12826$17Rald)
        (vector-filter . g$12825$17Rald)
        (vector-reverse! . g$12824$17Rald)
        (vector-contains? . g$12823$17Rald)
        (vector-index-of . g$12822$17Rald)
        (vector-copy . g$12821$17Rald)
        (vector-binary-search . g$12820$17Rald)
        (string-ci-compare . g$12819$17Rald)
        (string-compare . g$12818$17Rald)
        (string-format . g$12817$17Rald)
        (trace-printer . g$12646$17Rald)
        (make-traced-procedure . g$12816$17Rald)
        (make-traced-macro . g$8302$17Rald)
        (assertion-error . g$9624$17Rald)
        (time-it . g$12815$17Rald)
        (make-parameter . g$8309$17Rald)
        (library-locator . g$12814$17Rald)
        (get-library-paths . g$12813$17Rald)
        (open-tcp-input/output-port . g$12812$17Rald)
        (hashtable-for-each . g$12811$17Rald)
        (hashtable-map . g$12810$17Rald)
        (environment-bindings . g$9602$17Rald)
        (environment-symbols . g$9605$17Rald)
        (interaction-environment-symbols . g$9601$17Rald)
        (optimization-level . g$12809$17Rald)
        (library-path . g$8931$17Rald)
        (make-compile-time-value . g$9310$17Rald)
        (expand->core . g$9611$17Rald)
        (expand . g$9609$17Rald)
        (syntax-transpose . g$9548$17Rald)
        (convert->cps . g$8628$17Rald)
        (installed-libraries . g$8952$17Rald)
        (uninstall-library . g$8943$17Rald)
        (pretty-gensyms . g$8392$17Rald)
        (pretty-width . g$8389$17Rald)
        (pretty-print . g$8394$17Rald)
        (&no-nans . g$12808$17Rald)
        (&no-infinities . g$12807$17Rald)
        (&i/o-encoding . g$12806$17Rald)
        (&i/o-decoding . g$12805$17Rald)
        (&i/o-port . g$12804$17Rald)
        (&i/o-file-does-not-exist . g$12803$17Rald)
        (&i/o-file-already-exists . g$12802$17Rald)
        (&i/o-file-is-read-only . g$12801$17Rald)
        (&i/o-file-protection . g$12800$17Rald)
        (&i/o-filename . g$12799$17Rald)
        (&i/o-invalid-position . g$12798$17Rald)
        (&i/o-write . g$12797$17Rald)
        (&i/o-read . g$12796$17Rald)
        (&i/o . g$12795$17Rald)
        (&non-continuable . g$12794$17Rald)
        (&undefined . g$12793$17Rald)
        (&syntax . g$12792$17Rald)
        (&lexical . g$12791$17Rald)
        (&implementation-restriction . g$12790$17Rald)
        (&who . g$12789$17Rald)
        (&irritants . g$12788$17Rald)
        (&assertion . g$12787$17Rald)
        (&violation . g$12786$17Rald)
        (&error . g$12785$17Rald)
        (&serious . g$12784$17Rald)
        (&warning . g$12783$17Rald)
        (&message . g$12782$17Rald)
        (&condition . g$12781$17Rald)
        (define-condition-type . g$12780$17Rald)
        (define-enumeration . g$12779$17Rald)
        (define-record-type . g$12778$17Rald)
        (parent-rtd . g$12777$17Rald)
        (nongenerative . g$12776$17Rald)
        (opaque . g$12775$17Rald)
        (sealed . g$12774$17Rald)
        (protocol . g$12773$17Rald)
        (parent . g$12772$17Rald)
        (immutable . g$12771$17Rald)
        (mutable . g$12770$17Rald)
        (fields . g$12769$17Rald)
        (error-handling-mode . g$12768$17Rald)
        (file-options . g$12767$17Rald)
        (buffer-mode . g$12766$17Rald)
        (eol-style . g$12765$17Rald)
        (guard . g$12764$17Rald)
        (trace-letrec-syntax . g$12763$17Rald)
        (trace-let-syntax . g$12762$17Rald)
        (trace-define-syntax . g$12761$17Rald)
        (trace-define . g$12760$17Rald)
        (trace-lambda . g$12759$17Rald)
        (unsyntax-splicing . g$12758$17Rald)
        (unsyntax . g$12757$17Rald)
        (unquote-splicing . g$12756$17Rald)
        (unquote . g$12755$17Rald)
        (_ . g$12754$17Rald)
        (else . g$12753$17Rald)
        (=> . g$12752$17Rald)
        (... . g$12751$17Rald)
        (assert . g$12750$17Rald)
        (endianness . g$12749$17Rald)
        (delay . g$12748$17Rald)
        (time . g$12747$17Rald)
        (or . g$12746$17Rald)
        (and . g$12745$17Rald)
        (do . g$12744$17Rald)
        (cond . g$12743$17Rald)
        (let* . g$12742$17Rald)
        (let . g$12741$17Rald)
        (identifier-syntax . g$12740$17Rald)
        (with-syntax . g$12739$17Rald)
        (quasisyntax . g$12738$17Rald)
        (quasiquote . g$12737$17Rald)
        (syntax-rules . g$12736$17Rald)
        (include-into . g$12735$17Rald)
        (include . g$12734$17Rald)
        (define-struct . g$12733$17Rald)
        (let-values . g$12732$17Rald)
        (let*-values . g$12731$17Rald)
        (record-constructor-descriptor . g$12730$17Rald)
        (record-type-descriptor . g$12729$17Rald)
        (fluid-let-syntax . g$12728$17Rald)
        (case . g$12727$17Rald)
        (parameterize . g$12726$17Rald)
        (unless . g$12725$17Rald)
        (when . g$12724$17Rald)
        (if . g$12723$17Rald)
        (letrec* . g$12722$17Rald)
        (letrec . g$12721$17Rald)
        (type-descriptor . g$12720$17Rald)
        (case-lambda . g$12719$17Rald)
        (lambda . g$12718$17Rald)
        (syntax . g$12717$17Rald)
        (syntax-case . g$12716$17Rald)
        (quote . g$12715$17Rald)
        (foreign-call . g$12714$17Rald)
        (letrec-syntax . g$12713$17Rald)
        (let-syntax . g$12712$17Rald)
        (set! . g$12711$17Rald)
        (export . g$12710$17Rald)
        (import . g$12709$17Rald)
        (library . g$12708$17Rald)
        (begin . g$12707$17Rald)
        (module . g$12706$17Rald)
        (define-syntax . g$12705$17Rald)
        (define . g$12704$17Rald))
      '((g$9505$17Rald core-prim . ellipsis-map)
        (g$6313$17Rald core-prim . &no-nans-rcd)
        (g$6312$17Rald core-prim . &no-nans-rtd)
        (g$6300$17Rald core-prim . &no-infinities-rcd)
        (g$6299$17Rald core-prim . &no-infinities-rtd)
        (g$6287$17Rald core-prim . &i/o-encoding-rcd)
        (g$6286$17Rald core-prim . &i/o-encoding-rtd)
        (g$6272$17Rald core-prim . &i/o-decoding-rcd)
        (g$6271$17Rald core-prim . &i/o-decoding-rtd)
        (g$6259$17Rald core-prim . &i/o-port-rcd)
        (g$6258$17Rald core-prim . &i/o-port-rtd)
        (g$6244$17Rald core-prim . &i/o-file-does-not-exist-rcd)
        (g$6243$17Rald core-prim . &i/o-file-does-not-exist-rtd)
        (g$6231$17Rald core-prim . &i/o-file-already-exists-rcd)
        (g$6230$17Rald core-prim . &i/o-file-already-exists-rtd)
        (g$6218$17Rald core-prim . &i/o-file-is-read-only-rcd)
        (g$6217$17Rald core-prim . &i/o-file-is-read-only-rtd)
        (g$6205$17Rald core-prim . &i/o-file-protection-rcd)
        (g$6204$17Rald core-prim . &i/o-file-protection-rtd)
        (g$6192$17Rald core-prim . &i/o-filename-rcd)
        (g$6191$17Rald core-prim . &i/o-filename-rtd)
        (g$6177$17Rald core-prim . &i/o-invalid-position-rcd)
        (g$6176$17Rald core-prim . &i/o-invalid-position-rtd)
        (g$6162$17Rald core-prim . &i/o-write-rcd)
        (g$6161$17Rald core-prim . &i/o-write-rtd)
        (g$6149$17Rald core-prim . &i/o-read-rcd)
        (g$6148$17Rald core-prim . &i/o-read-rtd)
        (g$6136$17Rald core-prim . &i/o-rcd)
        (g$6135$17Rald core-prim . &i/o-rtd)
        (g$6123$17Rald core-prim . &undefined-rcd)
        (g$6122$17Rald core-prim . &undefined-rtd)
        (g$6110$17Rald core-prim . &syntax-rcd)
        (g$6109$17Rald core-prim . &syntax-rtd)
        (g$6093$17Rald core-prim . &lexical-rcd)
        (g$6092$17Rald core-prim . &lexical-rtd)
        (g$6080$17Rald core-prim . &implementation-restriction-rcd)
        (g$6079$17Rald core-prim . &implementation-restriction-rtd)
        (g$6067$17Rald core-prim . &non-continuable-rcd)
        (g$6066$17Rald core-prim . &non-continuable-rtd)
        (g$6054$17Rald core-prim . &who-rcd)
        (g$6053$17Rald core-prim . &who-rtd)
        (g$6039$17Rald core-prim . &irritants-rcd)
        (g$6038$17Rald core-prim . &irritants-rtd)
        (g$6024$17Rald core-prim . &assertion-rcd)
        (g$6023$17Rald core-prim . &assertion-rtd)
        (g$6011$17Rald core-prim . &violation-rcd)
        (g$6010$17Rald core-prim . &violation-rtd)
        (g$5998$17Rald core-prim . &error-rcd)
        (g$5997$17Rald core-prim . &error-rtd)
        (g$5985$17Rald core-prim . &serious-rcd)
        (g$5984$17Rald core-prim . &serious-rtd)
        (g$5972$17Rald core-prim . &warning-rcd)
        (g$5971$17Rald core-prim . &warning-rtd)
        (g$5959$17Rald core-prim . &message-rcd)
        (g$5958$17Rald core-prim . &message-rtd)
        (g$5919$17Rald core-prim . &condition-rcd)
        (g$5918$17Rald core-prim . &condition-rtd)
        (g$13174$17Rald core-prim . library-letrec*)
        (g$13173$17Rald core-prim . annotation-stripped)
        (g$13172$17Rald core-prim . annotation-source)
        (g$13171$17Rald core-prim . annotation-expression)
        (g$13170$17Rald core-prim . annotation?)
        (g$13169$17Rald core-prim . read-annotated)
        (g$13168$17Rald core-prim . tanh)
        (g$13167$17Rald core-prim . cosh)
        (g$13166$17Rald core-prim . sinh)
        (g$13165$17Rald core-prim . make-guid)
        (g$13164$17Rald core-prim . unspecified?)
        (g$5144$17Rald core-prim . make-list)
        (g$5143$17Rald core-prim . last-pair)
        (g$13163$17Rald core-prim . load-r5rs)
        (g$13162$17Rald core-prim . license)
        (g$13161$17Rald core-prim . stacktrace)
        (g$12652$17Rald core-prim . ironscheme-build)
        (g$13160$17Rald core-prim . ffi-call-internal)
        (g$13159$17Rald core-prim . define-clr-class-internal)
        (g$13158$17Rald core-prim . clr-field-set!-internal)
        (g$13157$17Rald core-prim . clr-field-get-internal)
        (g$13156$17Rald core-prim . clr-cast-internal)
        (g$13155$17Rald core-prim . clr-call-internal)
        (g$13154$17Rald core-prim . clr-new-internal)
        (g$13153$17Rald core-prim . clr-new-array-internal)
        (g$13152$17Rald core-prim . clr-is-internal)
        (g$13151$17Rald core-prim . clr-reference-internal)
        (g$13150$17Rald core-prim . clr-using-internal)
        (g$9625$17Rald core-prim . syntax-error)
        (g$9500$17Rald core-prim . syntax-dispatch)
        (g$13149$17Rald core-prim . compile-core)
        (g$13148$17Rald core-prim . eval-core)
        (g$13147$17Rald core-prim . remove-location)
        (g$13146$17Rald core-prim . set-symbol-value!)
        (g$13145$17Rald core-prim . symbol-value)
        (g$13144$17Rald core-prim . symbol-bound?)
        (g$13143$17Rald core-prim . ungensym)
        (g$13142$17Rald core-prim . gensym)
        (g$13141$17Rald core-prim . void)
        (g$13140$17Rald core-prim . load-serialized-library)
        (g$13139$17Rald core-prim . serialize-library)
        (g$12656$17Rald core-prim . compile-system-libraries)
        (g$12658$17Rald core-prim . compile->closure)
        (g$12657$17Rald core-prim . compile)
        (g$12651$17Rald core-prim . load)
        (g$13138$17Rald core-prim . string-normalize)
        (g$9635$17Rald core-prim . interaction-environment)
        (g$13137$17Rald core-prim . char-ready?)
        (g$13136$17Rald core-prim . string-upcase)
        (g$13135$17Rald core-prim . string-titlecase)
        (g$6396$17Rald core-prim . string-normalize-nfkd)
        (g$6395$17Rald core-prim . string-normalize-nfkc)
        (g$6394$17Rald core-prim . string-normalize-nfd)
        (g$6393$17Rald core-prim . string-normalize-nfc)
        (g$13134$17Rald core-prim . string-foldcase)
        (g$13133$17Rald core-prim . string-downcase)
        (g$6380$17Rald core-prim . string-ci>?)
        (g$6382$17Rald core-prim . string-ci>=?)
        (g$6378$17Rald core-prim . string-ci=?)
        (g$6379$17Rald core-prim . string-ci<?)
        (g$6381$17Rald core-prim . string-ci<=?)
        (g$13132$17Rald core-prim . char-whitespace?)
        (g$13131$17Rald core-prim . char-upper-case?)
        (g$13130$17Rald core-prim . char-title-case?)
        (g$13129$17Rald core-prim . char-numeric?)
        (g$13128$17Rald core-prim . char-lower-case?)
        (g$13127$17Rald core-prim . char-general-category)
        (g$13126$17Rald core-prim . char-upcase)
        (g$13125$17Rald core-prim . char-titlecase)
        (g$13124$17Rald core-prim . char-foldcase)
        (g$13123$17Rald core-prim . char-downcase)
        (g$6390$17Rald core-prim . char-ci>?)
        (g$6392$17Rald core-prim . char-ci>=?)
        (g$6388$17Rald core-prim . char-ci=?)
        (g$6389$17Rald core-prim . char-ci<?)
        (g$6391$17Rald core-prim . char-ci<=?)
        (g$13122$17Rald core-prim . char-alphabetic?)
        (g$9312$17Rald core-prim . variable-transformer-procedure)
        (g$9311$17Rald core-prim . variable-transformer?)
        (g$9309$17Rald core-prim . make-variable-transformer)
        (g$9629$17Rald core-prim . identifier?)
        (g$9618$17Rald core-prim . generate-temporaries)
        (g$9619$17Rald core-prim . free-identifier=?)
        (g$9631$17Rald core-prim . syntax->datum)
        (g$9630$17Rald core-prim . datum->syntax)
        (g$9620$17Rald core-prim . bound-identifier=?)
        (g$13121$17Rald core-prim . record-type-descriptor?)
        (g$13120$17Rald core-prim . record-predicate)
        (g$13119$17Rald core-prim . record-mutator)
        (g$13118$17Rald core-prim . record-constructor)
        (g$13117$17Rald core-prim . record-accessor)
        (g$13116$17Rald core-prim . make-record-type-descriptor)
        (g$13115$17Rald core-prim . make-record-constructor-descriptor)
        (g$13114$17Rald core-prim . record?)
        (g$13113$17Rald core-prim . record-type-uid)
        (g$13112$17Rald core-prim . record-type-sealed?)
        (g$13111$17Rald core-prim . record-type-parent)
        (g$13110$17Rald core-prim . record-type-opaque?)
        (g$13109$17Rald core-prim . record-type-name)
        (g$13108$17Rald core-prim . record-type-generative?)
        (g$13107$17Rald core-prim . record-type-field-names)
        (g$13106$17Rald core-prim . record-rtd)
        (g$13105$17Rald core-prim . record-field-mutable?)
        (g$5787$17Rald core-prim . delete-file)
        (g$5786$17Rald core-prim . file-exists?)
        (g$13104$17Rald core-prim . vector-sort!)
        (g$13103$17Rald core-prim . vector-sort)
        (g$6349$17Rald core-prim . list-sort)
        (g$13102$17Rald core-prim . symbol-hash)
        (g$13101$17Rald core-prim . string-ci-hash)
        (g$13100$17Rald core-prim . string-hash)
        (g$13099$17Rald core-prim . equal-hash)
        (g$13098$17Rald core-prim . hashtable-equivalence-function)
        (g$13097$17Rald core-prim . make-hashtable)
        (g$13096$17Rald core-prim . hashtable-hash-function)
        (g$5754$17Rald core-prim . make-eqv-hashtable)
        (g$5753$17Rald core-prim . make-eq-hashtable)
        (g$13095$17Rald core-prim . hashtable?)
        (g$5760$17Rald core-prim . hashtable-update!)
        (g$5755$17Rald core-prim . hashtable-size)
        (g$5757$17Rald core-prim . hashtable-set!)
        (g$5756$17Rald core-prim . hashtable-ref)
        (g$13094$17Rald core-prim . hashtable-mutable?)
        (g$13093$17Rald core-prim . hashtable-keys)
        (g$13092$17Rald core-prim . hashtable-entries)
        (g$5758$17Rald core-prim . hashtable-delete!)
        (g$13091$17Rald core-prim . hashtable-copy)
        (g$5759$17Rald core-prim . hashtable-contains?)
        (g$5761$17Rald core-prim . hashtable-clear!)
        (g$8133$17Rald core-prim . call-with-output-file)
        (g$8132$17Rald core-prim . call-with-input-file)
        (g$8124$17Rald core-prim . write-char)
        (g$13090$17Rald core-prim . write)
        (g$8131$17Rald core-prim . with-output-to-file)
        (g$8130$17Rald core-prim . with-input-from-file)
        (g$8123$17Rald core-prim . read-char)
        (g$13089$17Rald core-prim . read)
        (g$8122$17Rald core-prim . peek-char)
        (g$13088$17Rald core-prim . open-output-file)
        (g$13087$17Rald core-prim . open-input-file)
        (g$8134$17Rald core-prim . newline)
        (g$13086$17Rald core-prim . display)
        (g$13085$17Rald core-prim . close-output-port)
        (g$13084$17Rald core-prim . close-input-port)
        (g$13083$17Rald core-prim . eof-object?)
        (g$13082$17Rald core-prim . eof-object)
        (g$13081$17Rald core-prim . current-error-port)
        (g$13080$17Rald core-prim . current-output-port)
        (g$13079$17Rald core-prim . current-input-port)
        (g$13078$17Rald core-prim . output-port?)
        (g$13077$17Rald core-prim . input-port?)
        (g$13076$17Rald core-prim . utf-8-codec)
        (g$13075$17Rald core-prim . utf-16-codec)
        (g$13074$17Rald core-prim . transcoder-error-handling-mode)
        (g$13073$17Rald core-prim . transcoder-eol-style)
        (g$13072$17Rald core-prim . transcoder-codec)
        (g$13071$17Rald core-prim . transcoded-port)
        (g$13070$17Rald core-prim . textual-port?)
        (g$13069$17Rald core-prim . string->bytevector)
        (g$13068$17Rald core-prim . standard-output-port)
        (g$13067$17Rald core-prim . standard-input-port)
        (g$13066$17Rald core-prim . standard-error-port)
        (g$13065$17Rald core-prim . set-port-position!)
        (g$13064$17Rald core-prim . put-u8)
        (g$13063$17Rald core-prim . put-string)
        (g$8102$17Rald core-prim . put-datum)
        (g$13062$17Rald core-prim . put-char)
        (g$13061$17Rald core-prim . put-bytevector)
        (g$8107$17Rald core-prim . port?)
        (g$13060$17Rald core-prim . port-transcoder)
        (g$13059$17Rald core-prim . port-position)
        (g$13058$17Rald core-prim . port-has-set-port-position!?)
        (g$13057$17Rald core-prim . port-has-port-position?)
        (g$13056$17Rald core-prim . port-eof?)
        (g$13055$17Rald core-prim . output-port-buffer-mode)
        (g$8106$17Rald core-prim . open-string-output-port)
        (g$13054$17Rald core-prim . open-string-input-port)
        (g$13053$17Rald core-prim . open-file-output-port)
        (g$13052$17Rald core-prim . open-file-input/output-port)
        (g$13051$17Rald core-prim . open-file-input-port)
        (g$13050$17Rald core-prim . open-bytevector-output-port)
        (g$13049$17Rald core-prim . open-bytevector-input-port)
        (g$13048$17Rald core-prim . native-transcoder)
        (g$13047$17Rald core-prim . native-eol-style)
        (g$13046$17Rald core-prim . make-transcoder)
        (g$13045$17Rald core-prim . latin-1-codec)
        (g$6159$17Rald core-prim . make-i/o-write-error)
        (g$6146$17Rald core-prim . make-i/o-read-error)
        (g$6254$17Rald core-prim . make-i/o-port-error)
        (g$6172$17Rald core-prim . make-i/o-invalid-position-error)
        (g$6187$17Rald core-prim . make-i/o-filename-error)
        (g$6202$17Rald core-prim . make-i/o-file-protection-error)
        (g$6215$17Rald core-prim . make-i/o-file-is-read-only-error)
        (g$6241$17Rald core-prim . make-i/o-file-does-not-exist-error)
        (g$6228$17Rald core-prim . make-i/o-file-already-exists-error)
        (g$6133$17Rald core-prim . make-i/o-error)
        (g$6282$17Rald core-prim . make-i/o-encoding-error)
        (g$6269$17Rald core-prim . make-i/o-decoding-error)
        (g$13044$17Rald core-prim . make-custom-textual-output-port)
        (g$13043$17Rald
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13042$17Rald core-prim . make-custom-textual-input-port)
        (g$13041$17Rald core-prim . make-custom-binary-output-port)
        (g$13040$17Rald
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13039$17Rald core-prim . make-custom-binary-input-port)
        (g$13038$17Rald core-prim . make-bytevector)
        (g$13037$17Rald core-prim . lookahead-u8)
        (g$13036$17Rald core-prim . lookahead-char)
        (g$6160$17Rald core-prim . i/o-write-error?)
        (g$6147$17Rald core-prim . i/o-read-error?)
        (g$6256$17Rald core-prim . i/o-port-error?)
        (g$6174$17Rald core-prim . i/o-invalid-position-error?)
        (g$6175$17Rald core-prim . i/o-error-position)
        (g$6189$17Rald core-prim . i/o-filename-error?)
        (g$6203$17Rald core-prim . i/o-file-protection-error?)
        (g$6216$17Rald core-prim . i/o-file-is-read-only-error?)
        (g$6242$17Rald core-prim . i/o-file-does-not-exist-error?)
        (g$6229$17Rald core-prim . i/o-file-already-exists-error?)
        (g$6134$17Rald core-prim . i/o-error?)
        (g$6257$17Rald core-prim . i/o-error-port)
        (g$6190$17Rald core-prim . i/o-error-filename)
        (g$6284$17Rald core-prim . i/o-encoding-error?)
        (g$6285$17Rald core-prim . i/o-encoding-error-char)
        (g$6270$17Rald core-prim . i/o-decoding-error?)
        (g$13035$17Rald core-prim . get-u8)
        (g$13034$17Rald core-prim . get-string-n!)
        (g$13033$17Rald core-prim . get-string-n)
        (g$13032$17Rald core-prim . get-string-all)
        (g$13031$17Rald core-prim . get-line)
        (g$8103$17Rald core-prim . get-datum)
        (g$13030$17Rald core-prim . get-char)
        (g$13029$17Rald core-prim . get-bytevector-some)
        (g$13028$17Rald core-prim . get-bytevector-n!)
        (g$13027$17Rald core-prim . get-bytevector-n)
        (g$13026$17Rald core-prim . get-bytevector-all)
        (g$13025$17Rald core-prim . flush-output-port)
        (g$13024$17Rald core-prim . close-port)
        (g$8108$17Rald core-prim . call-with-string-output-port)
        (g$8109$17Rald core-prim . call-with-port)
        (g$13023$17Rald core-prim . call-with-bytevector-output-port)
        (g$13022$17Rald core-prim . bytevector->string)
        (g$13021$17Rald core-prim . buffer-mode?)
        (g$13020$17Rald core-prim . binary-port?)
        (g$9608$17Rald core-prim . scheme-report-environment)
        (g$6328$17Rald core-prim . quotient)
        (g$9607$17Rald core-prim . null-environment)
        (g$6329$17Rald core-prim . remainder)
        (g$6330$17Rald core-prim . modulo)
        (g$6325$17Rald core-prim . inexact->exact)
        (g$6332$17Rald core-prim . force)
        (g$6326$17Rald core-prim . exact->inexact)
        (g$13019$17Rald core-prim . exit)
        (g$12647$17Rald core-prim . command-line)
        (g$13018$17Rald core-prim . string-fill!)
        (g$13017$17Rald core-prim . string-set!)
        (g$13016$17Rald core-prim . set-cdr!)
        (g$13015$17Rald core-prim . set-car!)
        (g$5166$17Rald core-prim . remove)
        (g$5167$17Rald core-prim . remv)
        (g$5147$17Rald core-prim . remp)
        (g$5168$17Rald core-prim . remq)
        (g$5146$17Rald core-prim . partition)
        (g$5154$17Rald core-prim . memv)
        (g$5153$17Rald core-prim . memq)
        (g$5156$17Rald core-prim . memp)
        (g$5155$17Rald core-prim . member)
        (g$5160$17Rald core-prim . exists)
        (g$5159$17Rald core-prim . for-all)
        (g$5165$17Rald core-prim . fold-right)
        (g$5164$17Rald core-prim . fold-left)
        (g$5145$17Rald core-prim . find)
        (g$5148$17Rald core-prim . filter)
        (g$5163$17Rald core-prim . cons*)
        (g$5150$17Rald core-prim . assv)
        (g$5149$17Rald core-prim . assq)
        (g$5152$17Rald core-prim . assp)
        (g$5151$17Rald core-prim . assoc)
        (g$13014$17Rald core-prim . with-exception-handler)
        (g$13013$17Rald core-prim . raise-continuable)
        (g$13012$17Rald core-prim . raise)
        (g$9610$17Rald core-prim . eval)
        (g$9606$17Rald core-prim . environment)
        (g$8194$17Rald core-prim . make-enumeration)
        (g$8201$17Rald core-prim . enum-set=?)
        (g$8195$17Rald core-prim . enum-set-universe)
        (g$8202$17Rald core-prim . enum-set-union)
        (g$8200$17Rald core-prim . enum-set-subset?)
        (g$8206$17Rald core-prim . enum-set-projection)
        (g$8199$17Rald core-prim . enum-set-member?)
        (g$8203$17Rald core-prim . enum-set-intersection)
        (g$8196$17Rald core-prim . enum-set-indexer)
        (g$8204$17Rald core-prim . enum-set-difference)
        (g$8197$17Rald core-prim . enum-set-constructor)
        (g$8205$17Rald core-prim . enum-set-complement)
        (g$8198$17Rald core-prim . enum-set->list)
        (g$6051$17Rald core-prim . who-condition?)
        (g$5970$17Rald core-prim . warning?)
        (g$6009$17Rald core-prim . violation?)
        (g$6121$17Rald core-prim . undefined-violation?)
        (g$6106$17Rald core-prim . syntax-violation?)
        (g$6108$17Rald core-prim . syntax-violation-subform)
        (g$6107$17Rald core-prim . syntax-violation-form)
        (g$9628$17Rald core-prim . syntax-violation)
        (g$13011$17Rald core-prim . simple-conditions)
        (g$5983$17Rald core-prim . serious-condition?)
        (g$6065$17Rald core-prim . non-continuable-violation?)
        (g$5956$17Rald core-prim . message-condition?)
        (g$6049$17Rald core-prim . make-who-condition)
        (g$5969$17Rald core-prim . make-warning)
        (g$6008$17Rald core-prim . make-violation)
        (g$6120$17Rald core-prim . make-undefined-violation)
        (g$6103$17Rald core-prim . make-syntax-violation)
        (g$5982$17Rald core-prim . make-serious-condition)
        (g$6064$17Rald core-prim . make-non-continuable-violation)
        (g$5954$17Rald core-prim . make-message-condition)
        (g$6090$17Rald core-prim . make-lexical-violation)
        (g$6034$17Rald core-prim . make-irritants-condition)
        (g$6077$17Rald
          core-prim
          .
          make-implementation-restriction-violation)
        (g$5995$17Rald core-prim . make-error)
        (g$6021$17Rald core-prim . make-assertion-violation)
        (g$6091$17Rald core-prim . lexical-violation?)
        (g$6036$17Rald core-prim . irritants-condition?)
        (g$6078$17Rald
          core-prim
          .
          implementation-restriction-violation?)
        (g$5996$17Rald core-prim . error?)
        (g$6052$17Rald core-prim . condition-who)
        (g$13010$17Rald core-prim . condition-predicate)
        (g$5957$17Rald core-prim . condition-message)
        (g$6037$17Rald core-prim . condition-irritants)
        (g$13009$17Rald core-prim . condition-accessor)
        (g$13008$17Rald core-prim . condition)
        (g$6022$17Rald core-prim . assertion-violation?)
        (g$13007$17Rald core-prim . condition?)
        (g$13006$17Rald core-prim . utf32->string)
        (g$13005$17Rald core-prim . utf16->string)
        (g$13004$17Rald core-prim . utf8->string)
        (g$13003$17Rald core-prim . uint-list->bytevector)
        (g$13002$17Rald core-prim . u8-list->bytevector)
        (g$13001$17Rald core-prim . string->utf8)
        (g$13000$17Rald core-prim . string->utf32)
        (g$12999$17Rald core-prim . string->utf16)
        (g$12998$17Rald core-prim . sint-list->bytevector)
        (g$5793$17Rald core-prim . native-endianness)
        (g$5482$17Rald core-prim . bytevector?)
        (g$12997$17Rald core-prim . bytevector=?)
        (g$12996$17Rald core-prim . bytevector-uint-set!)
        (g$12995$17Rald core-prim . bytevector-uint-ref)
        (g$12994$17Rald core-prim . bytevector-u8-set!)
        (g$12993$17Rald core-prim . bytevector-u8-ref)
        (g$5814$17Rald core-prim . bytevector-u64-set!)
        (g$5810$17Rald core-prim . bytevector-u64-ref)
        (g$5816$17Rald core-prim . bytevector-u64-native-set!)
        (g$5812$17Rald core-prim . bytevector-u64-native-ref)
        (g$5806$17Rald core-prim . bytevector-u32-set!)
        (g$5802$17Rald core-prim . bytevector-u32-ref)
        (g$5808$17Rald core-prim . bytevector-u32-native-set!)
        (g$5804$17Rald core-prim . bytevector-u32-native-ref)
        (g$5798$17Rald core-prim . bytevector-u16-set!)
        (g$5794$17Rald core-prim . bytevector-u16-ref)
        (g$5800$17Rald core-prim . bytevector-u16-native-set!)
        (g$5796$17Rald core-prim . bytevector-u16-native-ref)
        (g$12992$17Rald core-prim . bytevector-sint-set!)
        (g$12991$17Rald core-prim . bytevector-sint-ref)
        (g$12990$17Rald core-prim . bytevector-s8-set!)
        (g$12989$17Rald core-prim . bytevector-s8-ref)
        (g$5815$17Rald core-prim . bytevector-s64-set!)
        (g$5811$17Rald core-prim . bytevector-s64-ref)
        (g$5817$17Rald core-prim . bytevector-s64-native-set!)
        (g$5813$17Rald core-prim . bytevector-s64-native-ref)
        (g$5807$17Rald core-prim . bytevector-s32-set!)
        (g$5803$17Rald core-prim . bytevector-s32-ref)
        (g$5809$17Rald core-prim . bytevector-s32-native-set!)
        (g$5805$17Rald core-prim . bytevector-s32-native-ref)
        (g$5799$17Rald core-prim . bytevector-s16-set!)
        (g$5795$17Rald core-prim . bytevector-s16-ref)
        (g$5801$17Rald core-prim . bytevector-s16-native-set!)
        (g$5797$17Rald core-prim . bytevector-s16-native-ref)
        (g$12988$17Rald core-prim . bytevector-length)
        (g$12987$17Rald core-prim . bytevector-ieee-single-set!)
        (g$12986$17Rald core-prim . bytevector-ieee-single-ref)
        (g$5820$17Rald core-prim . bytevector-ieee-single-native-set!)
        (g$5818$17Rald core-prim . bytevector-ieee-single-native-ref)
        (g$12985$17Rald core-prim . bytevector-ieee-double-set!)
        (g$12984$17Rald core-prim . bytevector-ieee-double-ref)
        (g$5821$17Rald core-prim . bytevector-ieee-double-native-set!)
        (g$5819$17Rald core-prim . bytevector-ieee-double-native-ref)
        (g$12983$17Rald core-prim . bytevector-fill!)
        (g$12982$17Rald core-prim . bytevector-copy!)
        (g$12981$17Rald core-prim . bytevector-copy)
        (g$12980$17Rald core-prim . bytevector->uint-list)
        (g$12979$17Rald core-prim . bytevector->u8-list)
        (g$12978$17Rald core-prim . bytevector->sint-list)
        (g$6311$17Rald core-prim . no-nans-violation?)
        (g$6298$17Rald core-prim . no-infinities-violation?)
        (g$6310$17Rald core-prim . make-no-nans-violation)
        (g$6297$17Rald core-prim . make-no-infinities-violation)
        (g$12977$17Rald core-prim . real->flonum)
        (g$7548$17Rald core-prim . flzero?)
        (g$7543$17Rald core-prim . fltruncate)
        (g$7529$17Rald core-prim . fltan)
        (g$7534$17Rald core-prim . flsqrt)
        (g$7527$17Rald core-prim . flsin)
        (g$7544$17Rald core-prim . flround)
        (g$7546$17Rald core-prim . flpositive?)
        (g$5487$17Rald core-prim . flonum?)
        (g$7550$17Rald core-prim . flodd?)
        (g$12976$17Rald core-prim . flnumerator)
        (g$7547$17Rald core-prim . flnegative?)
        (g$7526$17Rald core-prim . flnan?)
        (g$7511$17Rald core-prim . flmod0)
        (g$7510$17Rald core-prim . flmod)
        (g$7552$17Rald core-prim . flmin)
        (g$7551$17Rald core-prim . flmax)
        (g$7533$17Rald core-prim . fllog)
        (g$7519$17Rald core-prim . flinteger?)
        (g$7525$17Rald core-prim . flinfinite?)
        (g$7542$17Rald core-prim . flfloor)
        (g$7520$17Rald core-prim . flfinite?)
        (g$7536$17Rald core-prim . flexpt)
        (g$7535$17Rald core-prim . flexp)
        (g$7549$17Rald core-prim . fleven?)
        (g$7518$17Rald core-prim . fldiv0-and-mod0)
        (g$7505$17Rald core-prim . fldiv0)
        (g$7512$17Rald core-prim . fldiv-and-mod)
        (g$7517$17Rald core-prim . fldiv)
        (g$12975$17Rald core-prim . fldenominator)
        (g$7528$17Rald core-prim . flcos)
        (g$7537$17Rald core-prim . flceiling)
        (g$7532$17Rald core-prim . flatan)
        (g$7530$17Rald core-prim . flasin)
        (g$7531$17Rald core-prim . flacos)
        (g$7545$17Rald core-prim . flabs)
        (g$7499$17Rald core-prim . fl>?)
        (g$7500$17Rald core-prim . fl>=?)
        (g$7496$17Rald core-prim . fl=?)
        (g$7497$17Rald core-prim . fl<?)
        (g$7498$17Rald core-prim . fl<=?)
        (g$7495$17Rald core-prim . fl/)
        (g$7494$17Rald core-prim . fl-)
        (g$7492$17Rald core-prim . fl+)
        (g$7493$17Rald core-prim . fl*)
        (g$12974$17Rald core-prim . fixnum->flonum)
        (g$6592$17Rald core-prim . fxzero?)
        (g$6555$17Rald core-prim . fxxor)
        (g$6630$17Rald core-prim . fxrotate-bit-field)
        (g$6631$17Rald core-prim . fxreverse-bit-field)
        (g$6582$17Rald core-prim . fxpositive?)
        (g$6602$17Rald core-prim . fxodd?)
        (g$6536$17Rald core-prim . fxnot)
        (g$6587$17Rald core-prim . fxnegative?)
        (g$6566$17Rald core-prim . fxmod0)
        (g$6565$17Rald core-prim . fxmod)
        (g$6604$17Rald core-prim . fxmin)
        (g$6603$17Rald core-prim . fxmax)
        (g$6533$17Rald core-prim . fxlength)
        (g$6554$17Rald core-prim . fxior)
        (g$6612$17Rald core-prim . fxif)
        (g$6534$17Rald core-prim . fxfirst-bit-set)
        (g$6597$17Rald core-prim . fxeven?)
        (g$6577$17Rald core-prim . fxdiv0-and-mod0)
        (g$6572$17Rald core-prim . fxdiv0)
        (g$6567$17Rald core-prim . fxdiv-and-mod)
        (g$6560$17Rald core-prim . fxdiv)
        (g$6627$17Rald core-prim . fxcopy-bit-field)
        (g$6617$17Rald core-prim . fxcopy-bit)
        (g$6535$17Rald core-prim . fxbit-set?)
        (g$6622$17Rald core-prim . fxbit-field)
        (g$6528$17Rald core-prim . fxbit-count)
        (g$6629$17Rald core-prim . fxarithmetic-shift-right)
        (g$6628$17Rald core-prim . fxarithmetic-shift-left)
        (g$6523$17Rald core-prim . fxarithmetic-shift)
        (g$6553$17Rald core-prim . fxand)
        (g$6545$17Rald core-prim . fx>?)
        (g$6546$17Rald core-prim . fx>=?)
        (g$6542$17Rald core-prim . fx=?)
        (g$6543$17Rald core-prim . fx<?)
        (g$6544$17Rald core-prim . fx<=?)
        (g$6606$17Rald core-prim . fx-/carry)
        (g$6517$17Rald core-prim . fx-)
        (g$6607$17Rald core-prim . fx+/carry)
        (g$6515$17Rald core-prim . fx+)
        (g$6605$17Rald core-prim . fx*/carry)
        (g$6516$17Rald core-prim . fx*)
        (g$6486$17Rald core-prim . greatest-fixnum)
        (g$6487$17Rald core-prim . least-fixnum)
        (g$5488$17Rald core-prim . fixnum-width)
        (g$5486$17Rald core-prim . fixnum?)
        (g$6460$17Rald core-prim . bitwise-rotate-bit-field)
        (g$12973$17Rald core-prim . bitwise-reverse-bit-field)
        (g$12972$17Rald core-prim . bitwise-length)
        (g$6454$17Rald core-prim . bitwise-if)
        (g$12971$17Rald core-prim . bitwise-first-bit-set)
        (g$6457$17Rald core-prim . bitwise-copy-bit-field)
        (g$6455$17Rald core-prim . bitwise-copy-bit)
        (g$12970$17Rald core-prim . bitwise-bit-set?)
        (g$6456$17Rald core-prim . bitwise-bit-field)
        (g$12969$17Rald core-prim . bitwise-bit-count)
        (g$12968$17Rald core-prim . bitwise-xor)
        (g$12967$17Rald core-prim . bitwise-ior)
        (g$12966$17Rald core-prim . bitwise-and)
        (g$12965$17Rald core-prim . bitwise-not)
        (g$6459$17Rald core-prim . bitwise-arithmetic-shift-right)
        (g$6458$17Rald core-prim . bitwise-arithmetic-shift-left)
        (g$12964$17Rald core-prim . bitwise-arithmetic-shift)
        (g$5530$17Rald core-prim . zero?)
        (g$5481$17Rald core-prim . vector?)
        (g$5496$17Rald core-prim . vector-set!)
        (g$5495$17Rald core-prim . vector-ref)
        (g$5562$17Rald core-prim . vector-map)
        (g$12963$17Rald core-prim . vector-length)
        (g$5563$17Rald core-prim . vector-for-each)
        (g$5497$17Rald core-prim . vector-fill!)
        (g$12962$17Rald core-prim . vector->list)
        (g$12961$17Rald core-prim . vector)
        (g$12960$17Rald core-prim . values)
        (g$12959$17Rald core-prim . truncate)
        (g$12958$17Rald core-prim . tan)
        (g$5483$17Rald core-prim . symbol?)
        (g$5547$17Rald core-prim . symbol=?)
        (g$12957$17Rald core-prim . symbol->string)
        (g$12956$17Rald core-prim . substring)
        (g$12955$17Rald core-prim . string?)
        (g$5544$17Rald core-prim . string>?)
        (g$5546$17Rald core-prim . string>=?)
        (g$5542$17Rald core-prim . string=?)
        (g$5543$17Rald core-prim . string<?)
        (g$5545$17Rald core-prim . string<=?)
        (g$12954$17Rald core-prim . string-ref)
        (g$12953$17Rald core-prim . string-length)
        (g$5564$17Rald core-prim . string-for-each)
        (g$12952$17Rald core-prim . string-copy)
        (g$12951$17Rald core-prim . string-append)
        (g$12950$17Rald core-prim . string->symbol)
        (g$12949$17Rald core-prim . string->number)
        (g$12948$17Rald core-prim . string->list)
        (g$12947$17Rald core-prim . string)
        (g$12946$17Rald core-prim . sqrt)
        (g$12945$17Rald core-prim . sin)
        (g$12944$17Rald core-prim . round)
        (g$5499$17Rald core-prim . reverse)
        (g$12943$17Rald core-prim . real?)
        (g$12942$17Rald core-prim . real-valued?)
        (g$12941$17Rald core-prim . real-part)
        (g$5559$17Rald core-prim . rationalize)
        (g$12940$17Rald core-prim . rational?)
        (g$12939$17Rald core-prim . rational-valued?)
        (g$5485$17Rald core-prim . procedure?)
        (g$5528$17Rald core-prim . positive?)
        (g$12938$17Rald core-prim . pair?)
        (g$5532$17Rald core-prim . odd?)
        (g$12937$17Rald core-prim . numerator)
        (g$12936$17Rald core-prim . number?)
        (g$12935$17Rald core-prim . number->string)
        (g$12934$17Rald core-prim . null?)
        (g$12933$17Rald core-prim . not)
        (g$5529$17Rald core-prim . negative?)
        (g$12932$17Rald core-prim . nan?)
        (g$5534$17Rald core-prim . min)
        (g$5533$17Rald core-prim . max)
        (g$5161$17Rald core-prim . map)
        (g$12931$17Rald core-prim . make-vector)
        (g$12930$17Rald core-prim . make-string)
        (g$12929$17Rald core-prim . make-rectangular)
        (g$12928$17Rald core-prim . make-polar)
        (g$12927$17Rald core-prim . magnitude)
        (g$12926$17Rald core-prim . log)
        (g$12925$17Rald core-prim . list?)
        (g$5141$17Rald core-prim . list-tail)
        (g$5142$17Rald core-prim . list-ref)
        (g$5493$17Rald core-prim . list->vector)
        (g$5494$17Rald core-prim . list->string)
        (g$12924$17Rald core-prim . list)
        (g$12923$17Rald core-prim . length)
        (g$5536$17Rald core-prim . lcm)
        (g$12922$17Rald core-prim . integer?)
        (g$12921$17Rald core-prim . integer-valued?)
        (g$12920$17Rald core-prim . integer->char)
        (g$12919$17Rald core-prim . infinite?)
        (g$12918$17Rald core-prim . inexact?)
        (g$12917$17Rald core-prim . inexact)
        (g$12916$17Rald core-prim . imag-part)
        (g$5535$17Rald core-prim . gcd)
        (g$5162$17Rald core-prim . for-each)
        (g$12915$17Rald core-prim . floor)
        (g$12914$17Rald core-prim . finite?)
        (g$12913$17Rald core-prim . expt)
        (g$12912$17Rald core-prim . exp)
        (g$12911$17Rald core-prim . exact?)
        (g$12910$17Rald core-prim . exact-integer-sqrt)
        (g$12909$17Rald core-prim . exact)
        (g$5531$17Rald core-prim . even?)
        (g$12908$17Rald core-prim . error)
        (g$12907$17Rald core-prim . eqv?)
        (g$12906$17Rald core-prim . equal?)
        (g$12905$17Rald core-prim . eq?)
        (g$12904$17Rald core-prim . dynamic-wind)
        (g$5492$17Rald core-prim . div0-and-mod0)
        (g$5490$17Rald core-prim . mod0)
        (g$12903$17Rald core-prim . div0)
        (g$5491$17Rald core-prim . div-and-mod)
        (g$5489$17Rald core-prim . mod)
        (g$12902$17Rald core-prim . div)
        (g$12901$17Rald core-prim . denominator)
        (g$12900$17Rald core-prim . cos)
        (g$12899$17Rald core-prim . cons)
        (g$12898$17Rald core-prim . complex?)
        (g$5480$17Rald core-prim . char?)
        (g$5556$17Rald core-prim . char>?)
        (g$5558$17Rald core-prim . char>=?)
        (g$5554$17Rald core-prim . char=?)
        (g$5555$17Rald core-prim . char<?)
        (g$5557$17Rald core-prim . char<=?)
        (g$12897$17Rald core-prim . char->integer)
        (g$12896$17Rald core-prim . ceiling)
        (g$12895$17Rald core-prim . call-with-values)
        (g$12894$17Rald core-prim . call/cc)
        (g$12893$17Rald core-prim . call-with-current-continuation)
        (g$5527$17Rald core-prim . cddddr)
        (g$5526$17Rald core-prim . cdddar)
        (g$5525$17Rald core-prim . cddadr)
        (g$5524$17Rald core-prim . cddaar)
        (g$5523$17Rald core-prim . cdaddr)
        (g$5522$17Rald core-prim . cdadar)
        (g$5521$17Rald core-prim . cdaadr)
        (g$5520$17Rald core-prim . cdaaar)
        (g$5519$17Rald core-prim . cadddr)
        (g$5518$17Rald core-prim . caddar)
        (g$5517$17Rald core-prim . cadadr)
        (g$5516$17Rald core-prim . cadaar)
        (g$5515$17Rald core-prim . caaddr)
        (g$5514$17Rald core-prim . caadar)
        (g$5513$17Rald core-prim . caaadr)
        (g$5512$17Rald core-prim . caaaar)
        (g$5511$17Rald core-prim . cdddr)
        (g$5510$17Rald core-prim . cddar)
        (g$5509$17Rald core-prim . cdadr)
        (g$5508$17Rald core-prim . cdaar)
        (g$5507$17Rald core-prim . caddr)
        (g$5506$17Rald core-prim . cadar)
        (g$5505$17Rald core-prim . caadr)
        (g$5504$17Rald core-prim . caaar)
        (g$5503$17Rald core-prim . cddr)
        (g$5502$17Rald core-prim . cdar)
        (g$5501$17Rald core-prim . cadr)
        (g$5500$17Rald core-prim . caar)
        (g$12892$17Rald core-prim . cdr)
        (g$12891$17Rald core-prim . car)
        (g$5484$17Rald core-prim . boolean?)
        (g$5548$17Rald core-prim . boolean=?)
        (g$12890$17Rald core-prim . atan)
        (g$12889$17Rald core-prim . assertion-violation)
        (g$12888$17Rald core-prim . asin)
        (g$12887$17Rald core-prim . apply)
        (g$12886$17Rald core-prim . append)
        (g$12885$17Rald core-prim . angle)
        (g$12884$17Rald core-prim . acos)
        (g$12883$17Rald core-prim . abs)
        (g$12882$17Rald core-prim . /)
        (g$12881$17Rald core-prim . *)
        (g$12880$17Rald core-prim . -)
        (g$12879$17Rald core-prim . +)
        (g$12878$17Rald core-prim . >=)
        (g$12877$17Rald core-prim . >)
        (g$12876$17Rald core-prim . =)
        (g$12875$17Rald core-prim . <=)
        (g$12874$17Rald core-prim . <)
        (g$12873$17Rald core-prim . $fl>=?)
        (g$12872$17Rald core-prim . $fl>?)
        (g$12871$17Rald core-prim . $fl<=?)
        (g$12870$17Rald core-prim . $fl<?)
        (g$12869$17Rald core-prim . $fl-)
        (g$12868$17Rald core-prim . $fl/)
        (g$12867$17Rald core-prim . $fl*)
        (g$12866$17Rald core-prim . $fl+)
        (g$12865$17Rald core-prim . $fl=?)
        (g$12864$17Rald core-prim . $try)
        (g$12863$17Rald core-prim . $fxarithmetic-shift-right)
        (g$12862$17Rald core-prim . $fxarithmetic-shift-left)
        (g$12861$17Rald core-prim . $$fx-)
        (g$12860$17Rald core-prim . $$fx*)
        (g$12859$17Rald core-prim . $$fx+)
        (g$12858$17Rald core-prim . $fxnot)
        (g$12857$17Rald core-prim . $fxxor)
        (g$12856$17Rald core-prim . $fxior)
        (g$12855$17Rald core-prim . $fxand)
        (g$12854$17Rald core-prim . $fx>=?)
        (g$12853$17Rald core-prim . $fx>?)
        (g$12852$17Rald core-prim . $fx<=?)
        (g$12851$17Rald core-prim . $fx<?)
        (g$12850$17Rald core-prim . $fx-)
        (g$12849$17Rald core-prim . $fxmod0)
        (g$12848$17Rald core-prim . $fxdiv0)
        (g$12847$17Rald core-prim . $fx*)
        (g$12846$17Rald core-prim . $fx+)
        (g$12845$17Rald core-prim . $fx=?)
        (g$12844$17Rald core-prim . $vector-set!)
        (g$12843$17Rald core-prim . $vector-ref)
        (g$12842$17Rald core-prim . $cdr)
        (g$12841$17Rald core-prim . $car)
        (g$12840$17Rald core-prim . make-record-printer)
        (g$12839$17Rald core-prim . eqv-hash)
        (g$12838$17Rald core-prim . reverse!)
        (g$12837$17Rald core-prim . deserialize-port)
        (g$12836$17Rald core-prim . serialize-port)
        (g$8171$17Rald core-prim . enum-set?)
        (g$6331$17Rald core-prim . make-promise)
        (g$12650$17Rald core-prim . load/unload)
        (g$12649$17Rald core-prim . load/args)
        (g$8280$17Rald core-prim . printf)
        (g$8281$17Rald core-prim . fprintf)
        (g$8282$17Rald core-prim . format)
        (g$12835$17Rald core-prim . procedure-form)
        (g$12834$17Rald core-prim . procedure-environment)
        (g$12833$17Rald core-prim . procedure-name)
        (g$12832$17Rald core-prim . procedure-arity)
        (g$12831$17Rald core-prim . gc-collect)
        (g$12830$17Rald core-prim . typeof)
        (g$12829$17Rald core-prim . clr-type?)
        (g$12828$17Rald core-prim . get-clr-type)
        (g$12827$17Rald core-prim . get-command-line)
        (g$12826$17Rald core-prim . vector-append)
        (g$12825$17Rald core-prim . vector-filter)
        (g$12824$17Rald core-prim . vector-reverse!)
        (g$12823$17Rald core-prim . vector-contains?)
        (g$12822$17Rald core-prim . vector-index-of)
        (g$12821$17Rald core-prim . vector-copy)
        (g$12820$17Rald core-prim . vector-binary-search)
        (g$12819$17Rald core-prim . string-ci-compare)
        (g$12818$17Rald core-prim . string-compare)
        (g$12817$17Rald core-prim . string-format)
        (g$12646$17Rald core-prim . trace-printer)
        (g$12816$17Rald core-prim . make-traced-procedure)
        (g$8302$17Rald core-prim . make-traced-macro)
        (g$9624$17Rald core-prim . assertion-error)
        (g$12815$17Rald core-prim . time-it)
        (g$8309$17Rald core-prim . make-parameter)
        (g$12814$17Rald core-prim . library-locator)
        (g$12813$17Rald core-prim . get-library-paths)
        (g$12812$17Rald core-prim . open-tcp-input/output-port)
        (g$12811$17Rald core-prim . hashtable-for-each)
        (g$12810$17Rald core-prim . hashtable-map)
        (g$9602$17Rald core-prim . environment-bindings)
        (g$9605$17Rald core-prim . environment-symbols)
        (g$9601$17Rald core-prim . interaction-environment-symbols)
        (g$12809$17Rald core-prim . optimization-level)
        (g$8931$17Rald core-prim . library-path)
        (g$9310$17Rald core-prim . make-compile-time-value)
        (g$9611$17Rald core-prim . expand->core)
        (g$9609$17Rald core-prim . expand)
        (g$9548$17Rald core-prim . syntax-transpose)
        (g$8628$17Rald core-prim . convert->cps)
        (g$8952$17Rald core-prim . installed-libraries)
        (g$8943$17Rald core-prim . uninstall-library)
        (g$8392$17Rald core-prim . pretty-gensyms)
        (g$8389$17Rald core-prim . pretty-width)
        (g$8394$17Rald core-prim . pretty-print)
        (g$12808$17Rald $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12807$17Rald $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12806$17Rald $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12805$17Rald $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12804$17Rald $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12803$17Rald
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12802$17Rald
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12801$17Rald
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12800$17Rald
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12799$17Rald $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12798$17Rald
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12797$17Rald $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12796$17Rald $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12795$17Rald $core-rtd &i/o-rtd &i/o-rcd)
        (g$12794$17Rald
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$12793$17Rald $core-rtd &undefined-rtd &undefined-rcd)
        (g$12792$17Rald $core-rtd &syntax-rtd &syntax-rcd)
        (g$12791$17Rald $core-rtd &lexical-rtd &lexical-rcd)
        (g$12790$17Rald
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12789$17Rald $core-rtd &who-rtd &who-rcd)
        (g$12788$17Rald $core-rtd &irritants-rtd &irritants-rcd)
        (g$12787$17Rald $core-rtd &assertion-rtd &assertion-rcd)
        (g$12786$17Rald $core-rtd &violation-rtd &violation-rcd)
        (g$12785$17Rald $core-rtd &error-rtd &error-rcd)
        (g$12784$17Rald $core-rtd &serious-rtd &serious-rcd)
        (g$12783$17Rald $core-rtd &warning-rtd &warning-rcd)
        (g$12782$17Rald $core-rtd &message-rtd &message-rcd)
        (g$12781$17Rald $core-rtd &condition-rtd &condition-rcd)
        (g$12780$17Rald macro . define-condition-type)
        (g$12779$17Rald macro . define-enumeration)
        (g$12778$17Rald macro . define-record-type)
        (g$12777$17Rald macro . parent-rtd)
        (g$12776$17Rald macro . nongenerative)
        (g$12775$17Rald macro . opaque)
        (g$12774$17Rald macro . sealed)
        (g$12773$17Rald macro . protocol)
        (g$12772$17Rald macro . parent)
        (g$12771$17Rald macro . immutable)
        (g$12770$17Rald macro . mutable)
        (g$12769$17Rald macro . fields)
        (g$12768$17Rald macro . error-handling-mode)
        (g$12767$17Rald macro . file-options)
        (g$12766$17Rald macro . buffer-mode)
        (g$12765$17Rald macro . eol-style)
        (g$12764$17Rald macro . guard)
        (g$12763$17Rald macro . trace-letrec-syntax)
        (g$12762$17Rald macro . trace-let-syntax)
        (g$12761$17Rald macro . trace-define-syntax)
        (g$12760$17Rald macro . trace-define)
        (g$12759$17Rald macro . trace-lambda)
        (g$12758$17Rald macro . unsyntax-splicing)
        (g$12757$17Rald macro . unsyntax)
        (g$12756$17Rald macro . unquote-splicing)
        (g$12755$17Rald macro . unquote)
        (g$12754$17Rald macro . _)
        (g$12753$17Rald macro . else)
        (g$12752$17Rald macro . =>)
        (g$12751$17Rald macro . ...)
        (g$12750$17Rald macro . assert)
        (g$12749$17Rald macro . endianness)
        (g$12748$17Rald macro . delay)
        (g$12747$17Rald macro . time)
        (g$12746$17Rald macro . or)
        (g$12745$17Rald macro . and)
        (g$12744$17Rald macro . do)
        (g$12743$17Rald macro . cond)
        (g$12742$17Rald macro . let*)
        (g$12741$17Rald macro . let)
        (g$12740$17Rald macro . identifier-syntax)
        (g$12739$17Rald macro . with-syntax)
        (g$12738$17Rald macro . quasisyntax)
        (g$12737$17Rald macro . quasiquote)
        (g$12736$17Rald macro . syntax-rules)
        (g$12735$17Rald macro . include-into)
        (g$12734$17Rald macro . include)
        (g$12733$17Rald macro . define-struct)
        (g$12732$17Rald macro . let-values)
        (g$12731$17Rald macro . let*-values)
        (g$12730$17Rald core-macro . record-constructor-descriptor)
        (g$12729$17Rald core-macro . record-type-descriptor)
        (g$12728$17Rald core-macro . fluid-let-syntax)
        (g$12727$17Rald macro . case)
        (g$12726$17Rald macro . parameterize)
        (g$12725$17Rald macro . unless)
        (g$12724$17Rald macro . when)
        (g$12723$17Rald core-macro . if)
        (g$12722$17Rald core-macro . letrec*)
        (g$12721$17Rald core-macro . letrec)
        (g$12720$17Rald core-macro . type-descriptor)
        (g$12719$17Rald core-macro . case-lambda)
        (g$12718$17Rald core-macro . lambda)
        (g$12717$17Rald core-macro . syntax)
        (g$12716$17Rald core-macro . syntax-case)
        (g$12715$17Rald core-macro . quote)
        (g$12714$17Rald core-macro . foreign-call)
        (g$12713$17Rald letrec-syntax)
        (g$12712$17Rald let-syntax)
        (g$12711$17Rald set!)
        (g$12710$17Rald export)
        (g$12709$17Rald import)
        (g$12708$17Rald library)
        (g$12707$17Rald begin)
        (g$12706$17Rald module)
        (g$12705$17Rald define-syntax)
        (g$12704$17Rald define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18926$17Rald
      'g$13212$17Rald
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13149$17Rald)
        (eval-core . g$13148$17Rald)
        (set-symbol-value! . g$13146$17Rald)
        (symbol-value . g$13145$17Rald)
        (gensym . g$13142$17Rald)
        (void . g$13141$17Rald))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$23438$17Rald
     g$trace-printer$23503$17Rald
     (g$make-parameter$18083$17Rald g$pretty-print$18293$17Rald))
   (g$command-line$23439$17Rald
     g$command-line$23504$17Rald
     (g$make-parameter$18083$17Rald (get-command-line)))
   (g$local-library-path$23440$17Rald
     g$local-library-path$23505$17Rald
     (case-lambda
       ((g$filename$23454$17Rald)
        (cons
          (g$get-directory-name$12739$17Rald g$filename$23454$17Rald)
          (g$library-path$18910$17Rald)))))
   (g$load/args$23441$17Rald
     g$load/args$23506$17Rald
     (case-lambda
       ((g$filename$23455$17Rald . g$args$23456$17Rald)
        (begin
          (apply
            g$load-r6rs-top-level$23451$17Rald
            g$filename$23455$17Rald
            'load
            g$args$23456$17Rald)
          (void)))))
   (g$load/unload$23442$17Rald
     g$load/unload$23507$17Rald
     (case-lambda
       ((g$filename$23457$17Rald)
        ((case-lambda
           ((g$libs$23458$17Rald)
            (begin
              (g$load$23443$17Rald g$filename$23457$17Rald)
              (g$for-each$11836$17Rald
                (case-lambda
                  ((g$lib$23459$17Rald)
                   (if (not (g$memq$11827$17Rald
                              g$lib$23459$17Rald
                              g$libs$23458$17Rald))
                     (g$uninstall-library$18922$17Rald
                       g$lib$23459$17Rald)
                     (void))))
                (g$installed-libraries$18931$17Rald)))))
         (g$installed-libraries$18931$17Rald)))))
   (g$load$23443$17Rald
     g$load$23508$17Rald
     (case-lambda
       ((g$filename$23460$17Rald)
        (begin
          (apply
            g$load-r6rs-top-level$23451$17Rald
            g$filename$23460$17Rald
            'load
            (cdr (g$command-line$23439$17Rald)))
          (void)))))
   (g$ironscheme-build$23444$17Rald
     g$ironscheme-build$23509$17Rald
     (case-lambda
       (() (g$ironscheme-build$23444$17Rald '#f))
       ((g$cps?$23461$17Rald)
        (begin
          (g$call-with-output-file$17699$17Rald
            '"build-options.ss"
            (case-lambda
              ((g$p$23462$17Rald)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$23461$17Rald)
                   g$p$23462$17Rald)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$23461$17Rald))
                   g$p$23462$17Rald)
                 (g$newline$17700$17Rald g$p$23462$17Rald)))))
          (g$load$23443$17Rald '"ironscheme-buildscript.ss")))))
   (g$foreground-color$23445$17Rald
     g$foreground-color$23510$17Rald
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$23463$17Rald)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$23463$17Rald))))
   (g$system-exception?$23446$17Rald
     g$system-exception?$23511$17Rald
     (case-lambda
       ((g$e$23464$17Rald)
        (clr-is-internal 'SystemException g$e$23464$17Rald))))
   (g$eval-top-level$23447$17Rald
     g$eval-top-level$23512$17Rald
     (case-lambda
       ((g$x$23465$17Rald)
        (call/cc
          (case-lambda
            ((g$k$23466$17Rald)
             (with-exception-handler
               (case-lambda
                 ((g$e$23467$17Rald)
                  ((case-lambda
                     ((g$serious?$23468$17Rald)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$23473$17Rald
                              g$current-output-port$23474$17Rald
                              g$foreground-color$23475$17Rald
                              g$current-output-port$23476$17Rald)
                            ((case-lambda
                               ((g$swap$23477$17Rald)
                                (dynamic-wind
                                  g$swap$23477$17Rald
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$23468$17Rald
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$23467$17Rald)
                                       (g$newline$17700$17Rald))))
                                  g$swap$23477$17Rald)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$23478$17Rald)
                                      (begin
                                        (g$foreground-color$23473$17Rald
                                          g$foreground-color$23475$17Rald)
                                        (set! g$foreground-color$23475$17Rald
                                          g$t$23478$17Rald))))
                                   (g$foreground-color$23473$17Rald))
                                  ((case-lambda
                                     ((g$t$23479$17Rald)
                                      (begin
                                        (g$current-output-port$23474$17Rald
                                          g$current-output-port$23476$17Rald)
                                        (set! g$current-output-port$23476$17Rald
                                          g$t$23479$17Rald))))
                                   (g$current-output-port$23474$17Rald))))))))
                         g$foreground-color$23445$17Rald
                         current-output-port
                         (if g$serious?$23468$17Rald 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$23468$17Rald
                          (g$k$23466$17Rald)
                          (void)))))
                   ((case-lambda
                      ((g$t$23480$17Rald)
                       (if g$t$23480$17Rald
                         g$t$23480$17Rald
                         (begin
                           '#f
                           (g$system-exception?$23446$17Rald
                             g$e$23467$17Rald)))))
                    (g$serious-condition?$13312$17Rald
                      g$e$23467$17Rald)))))
               (case-lambda
                 (()
                  (g$eval$23411$17Rald
                    g$x$23465$17Rald
                    (g$interaction-environment$23436$17Rald)))))))))))
   (g$compile-system-libraries$23448$17Rald
     g$compile-system-libraries$23513$17Rald
     (case-lambda
       (()
        (g$eval-top-level$23447$17Rald
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$23449$17Rald
     g$compile$23514$17Rald
     (case-lambda
       ((g$filename$23481$17Rald)
        (g$load-r6rs-top-level$23451$17Rald
          g$filename$23481$17Rald
          'compile))))
   (g$compile->closure$23450$17Rald
     g$compile->closure$23515$17Rald
     (case-lambda
       ((g$filename$23482$17Rald)
        (g$load-r6rs-top-level$23451$17Rald
          g$filename$23482$17Rald
          'closure))))
   (g$load-r6rs-top-level$23451$17Rald
     g$load-r6rs-top-level$23516$17Rald
     (case-lambda
       ((g$filename$23483$17Rald
          g$how$23484$17Rald
          .
          g$args$23485$17Rald)
        ((case-lambda
           ((g$library-path$23488$17Rald g$library-path$23489$17Rald)
            ((case-lambda
               ((g$swap$23490$17Rald)
                (dynamic-wind
                  g$swap$23490$17Rald
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$23491$17Rald)
                         ((case-lambda
                            ((g$t$23492$17Rald)
                             (if (eqv? g$t$23492$17Rald 'closure)
                               (g$pre-compile-r6rs-top-level$23434$17Rald
                                 g$x*$23491$17Rald)
                               (if (eqv? g$t$23492$17Rald 'load)
                                 ((case-lambda
                                    ((g$command-line$23495$17Rald
                                       g$command-line$23496$17Rald)
                                     ((case-lambda
                                        ((g$swap$23497$17Rald)
                                         (dynamic-wind
                                           g$swap$23497$17Rald
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$23433$17Rald
                                                 g$x*$23491$17Rald))))
                                           g$swap$23497$17Rald)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$23498$17Rald)
                                             (begin
                                               (g$command-line$23495$17Rald
                                                 g$command-line$23496$17Rald)
                                               (set! g$command-line$23496$17Rald
                                                 g$t$23498$17Rald))))
                                          (g$command-line$23495$17Rald)))))))
                                  g$command-line$23439$17Rald
                                  (cons
                                    g$filename$23483$17Rald
                                    (g$map$11835$17Rald
                                      (case-lambda
                                        ((g$x$23499$17Rald)
                                         (g$format$17874$17Rald
                                           '"~a"
                                           g$x$23499$17Rald)))
                                      g$args$23485$17Rald)))
                                 (if (eqv? g$t$23492$17Rald 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$23433$17Rald
                                       g$x*$23491$17Rald)
                                     (g$serialize-all$18914$17Rald
                                       serialize-library
                                       g$compile-core-expr$18661$17Rald))
                                   (if '#f '#f (void)))))))
                          g$how$23484$17Rald)))
                      (g$with-input-from-file$17696$17Rald
                        g$filename$23483$17Rald
                        (case-lambda
                          (()
                           ((letrec ((g$f$23500$17Rald
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$23501$17Rald)
                                              (if (eof-object?
                                                    g$x$23501$17Rald)
                                                '()
                                                (cons
                                                  g$x$23501$17Rald
                                                  (g$f$23500$17Rald)))))
                                           (read-annotated))))))
                              g$f$23500$17Rald))))))))
                  g$swap$23490$17Rald)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$23502$17Rald)
                    (begin
                      (g$library-path$23488$17Rald
                        g$library-path$23489$17Rald)
                      (set! g$library-path$23489$17Rald
                        g$t$23502$17Rald))))
                 (g$library-path$23488$17Rald)))))))
         g$library-path$18910$17Rald
         (g$local-library-path$23440$17Rald g$filename$23483$17Rald)))))
   (g$fo$23452$17Rald
     g$fo$23517$17Rald
     (g$make-enumeration$17836$17Rald
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$18915$17Rald
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$23453$17Rald)
         (if (g$serious-condition?$13312$17Rald g$ex$23453$17Rald)
           (raise g$ex$23453$17Rald)
           (begin
             (display g$ex$23453$17Rald)
             (g$newline$17700$17Rald))))))
    (set-symbol-value! 'load g$load$23443$17Rald)
    (set-symbol-value! 'compile g$compile$23449$17Rald)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$23450$17Rald)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$23447$17Rald)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$23402$17Rald)
    (set-symbol-value! 'expanded2core g$expanded->core$18660$17Rald)
    (set-symbol-value! 'trace-printer g$trace-printer$23438$17Rald)
    (set-symbol-value! 'convert->cps g$convert->cps$18611$17Rald)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$18084$17Rald
      (g$enum-set-constructor$17839$17Rald g$fo$23452$17Rald))
    (g$library-path$18910$17Rald (get-library-paths))
    (g$library-extensions$18911$17Rald
      (cons '".ironscheme.sls" (g$library-extensions$18911$17Rald)))))

