;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11659$1MHp3Q
     g$list-tail$11815$1MHp3Q
     (case-lambda
       ((g$lst$11687$1MHp3Q g$index$11688$1MHp3Q)
        (if ((case-lambda
               ((g$t$11689$1MHp3Q)
                (if g$t$11689$1MHp3Q
                  g$t$11689$1MHp3Q
                  (begin
                    '#f
                    (g$negative?$13378$1MHp3Q g$index$11688$1MHp3Q)))))
             (null? g$lst$11687$1MHp3Q))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11687$1MHp3Q
            g$index$11688$1MHp3Q)
          (if (g$zero?$13376$1MHp3Q g$index$11688$1MHp3Q)
            g$lst$11687$1MHp3Q
            (begin
              '#f
              (g$list-tail$11659$1MHp3Q
                (cdr g$lst$11687$1MHp3Q)
                (- g$index$11688$1MHp3Q '1))))))))
   (g$list-ref$11660$1MHp3Q
     g$list-ref$11816$1MHp3Q
     (case-lambda
       ((g$lst$11690$1MHp3Q g$index$11691$1MHp3Q)
        (car (g$list-tail$11659$1MHp3Q
               g$lst$11690$1MHp3Q
               g$index$11691$1MHp3Q)))))
   (g$last-pair$11661$1MHp3Q
     g$last-pair$11817$1MHp3Q
     (case-lambda
       ((g$lst$11692$1MHp3Q)
        (if (null? g$lst$11692$1MHp3Q)
          g$lst$11692$1MHp3Q
          (if (null? (cdr g$lst$11692$1MHp3Q))
            g$lst$11692$1MHp3Q
            (begin
              '#f
              (g$last-pair$11661$1MHp3Q (cdr g$lst$11692$1MHp3Q))))))))
   (g$make-list$11662$1MHp3Q
     g$make-list$11818$1MHp3Q
     (case-lambda
       ((g$n$11693$1MHp3Q)
        (vector->list (make-vector g$n$11693$1MHp3Q)))
       ((g$n$11694$1MHp3Q g$fill$11695$1MHp3Q)
        (vector->list
          (make-vector g$n$11694$1MHp3Q g$fill$11695$1MHp3Q)))))
   (g$find$11663$1MHp3Q
     g$find$11819$1MHp3Q
     (case-lambda
       ((g$proc$11696$1MHp3Q g$l$11697$1MHp3Q)
        (if (null? g$l$11697$1MHp3Q)
          '#f
          ((case-lambda
             ((g$e$11698$1MHp3Q g$r$11699$1MHp3Q g$proc$11700$1MHp3Q)
              (if (g$proc$11700$1MHp3Q g$e$11698$1MHp3Q)
                g$e$11698$1MHp3Q
                (g$find$11663$1MHp3Q
                  g$proc$11700$1MHp3Q
                  g$r$11699$1MHp3Q))))
           (car g$l$11697$1MHp3Q)
           (cdr g$l$11697$1MHp3Q)
           g$proc$11696$1MHp3Q)))))
   (g$partition$11664$1MHp3Q
     g$partition$11820$1MHp3Q
     (case-lambda
       ((g$proc$11701$1MHp3Q g$l$11702$1MHp3Q)
        ((letrec ((g$f$11703$1MHp3Q
                    (case-lambda
                      ((g$l$11704$1MHp3Q
                         g$a$11705$1MHp3Q
                         g$b$11706$1MHp3Q)
                       (if (null? g$l$11704$1MHp3Q)
                         (values
                           (reverse! g$a$11705$1MHp3Q)
                           (reverse! g$b$11706$1MHp3Q))
                         ((case-lambda
                            ((g$e$11707$1MHp3Q)
                             (if (g$proc$11701$1MHp3Q g$e$11707$1MHp3Q)
                               (g$f$11703$1MHp3Q
                                 (cdr g$l$11704$1MHp3Q)
                                 (cons
                                   g$e$11707$1MHp3Q
                                   g$a$11705$1MHp3Q)
                                 g$b$11706$1MHp3Q)
                               (g$f$11703$1MHp3Q
                                 (cdr g$l$11704$1MHp3Q)
                                 g$a$11705$1MHp3Q
                                 (cons
                                   g$e$11707$1MHp3Q
                                   g$b$11706$1MHp3Q)))))
                          (car g$l$11704$1MHp3Q)))))))
           g$f$11703$1MHp3Q)
         g$l$11702$1MHp3Q
         '()
         '()))))
   (g$remp$11665$1MHp3Q
     g$remp$11821$1MHp3Q
     (case-lambda
       ((g$proc$11708$1MHp3Q g$l$11709$1MHp3Q)
        ((letrec ((g$f$11710$1MHp3Q
                    (case-lambda
                      ((g$l$11711$1MHp3Q g$a$11712$1MHp3Q)
                       (if (null? g$l$11711$1MHp3Q)
                         (reverse! g$a$11712$1MHp3Q)
                         ((case-lambda
                            ((g$e$11713$1MHp3Q)
                             (if (g$proc$11708$1MHp3Q g$e$11713$1MHp3Q)
                               (g$f$11710$1MHp3Q
                                 (cdr g$l$11711$1MHp3Q)
                                 g$a$11712$1MHp3Q)
                               (g$f$11710$1MHp3Q
                                 (cdr g$l$11711$1MHp3Q)
                                 (cons
                                   g$e$11713$1MHp3Q
                                   g$a$11712$1MHp3Q)))))
                          (car g$l$11711$1MHp3Q)))))))
           g$f$11710$1MHp3Q)
         g$l$11709$1MHp3Q
         '()))))
   (g$filter$11666$1MHp3Q
     g$filter$11822$1MHp3Q
     (case-lambda
       ((g$proc$11714$1MHp3Q g$l$11715$1MHp3Q)
        ((letrec ((g$f$11716$1MHp3Q
                    (case-lambda
                      ((g$l$11717$1MHp3Q g$a$11718$1MHp3Q)
                       (if (null? g$l$11717$1MHp3Q)
                         (reverse! g$a$11718$1MHp3Q)
                         ((case-lambda
                            ((g$e$11719$1MHp3Q)
                             (if (g$proc$11714$1MHp3Q g$e$11719$1MHp3Q)
                               (g$f$11716$1MHp3Q
                                 (cdr g$l$11717$1MHp3Q)
                                 (cons
                                   g$e$11719$1MHp3Q
                                   g$a$11718$1MHp3Q))
                               (g$f$11716$1MHp3Q
                                 (cdr g$l$11717$1MHp3Q)
                                 g$a$11718$1MHp3Q))))
                          (car g$l$11717$1MHp3Q)))))))
           g$f$11716$1MHp3Q)
         g$l$11715$1MHp3Q
         '()))))
   (g$assq$11667$1MHp3Q
     g$assq$11823$1MHp3Q
     (case-lambda
       ((g$obj$11720$1MHp3Q g$lst$11721$1MHp3Q)
        (if (null? g$lst$11721$1MHp3Q)
          '#f
          ((case-lambda
             ((g$obj$11722$1MHp3Q g$t$11723$1MHp3Q g$r$11724$1MHp3Q)
              (if (eq? g$obj$11722$1MHp3Q (car g$t$11723$1MHp3Q))
                g$t$11723$1MHp3Q
                (g$assq$11667$1MHp3Q
                  g$obj$11722$1MHp3Q
                  g$r$11724$1MHp3Q))))
           g$obj$11720$1MHp3Q
           (car g$lst$11721$1MHp3Q)
           (cdr g$lst$11721$1MHp3Q))))))
   (g$assv$11668$1MHp3Q
     g$assv$11824$1MHp3Q
     (case-lambda
       ((g$obj$11725$1MHp3Q g$lst$11726$1MHp3Q)
        (if (null? g$lst$11726$1MHp3Q)
          '#f
          ((case-lambda
             ((g$obj$11727$1MHp3Q g$t$11728$1MHp3Q g$r$11729$1MHp3Q)
              (if (eqv? g$obj$11727$1MHp3Q (car g$t$11728$1MHp3Q))
                g$t$11728$1MHp3Q
                (g$assv$11668$1MHp3Q
                  g$obj$11727$1MHp3Q
                  g$r$11729$1MHp3Q))))
           g$obj$11725$1MHp3Q
           (car g$lst$11726$1MHp3Q)
           (cdr g$lst$11726$1MHp3Q))))))
   (g$assoc$11669$1MHp3Q
     g$assoc$11825$1MHp3Q
     (case-lambda
       ((g$obj$11730$1MHp3Q g$lst$11731$1MHp3Q)
        (if (null? g$lst$11731$1MHp3Q)
          '#f
          ((case-lambda
             ((g$obj$11732$1MHp3Q g$t$11733$1MHp3Q g$r$11734$1MHp3Q)
              (if (equal? g$obj$11732$1MHp3Q (car g$t$11733$1MHp3Q))
                g$t$11733$1MHp3Q
                (g$assoc$11669$1MHp3Q
                  g$obj$11732$1MHp3Q
                  g$r$11734$1MHp3Q))))
           g$obj$11730$1MHp3Q
           (car g$lst$11731$1MHp3Q)
           (cdr g$lst$11731$1MHp3Q))))))
   (g$assp$11670$1MHp3Q
     g$assp$11826$1MHp3Q
     (case-lambda
       ((g$p?$11735$1MHp3Q g$lst$11736$1MHp3Q)
        (if (null? g$lst$11736$1MHp3Q)
          '#f
          ((case-lambda
             ((g$p?$11737$1MHp3Q g$t$11738$1MHp3Q g$r$11739$1MHp3Q)
              (if (g$p?$11737$1MHp3Q (car g$t$11738$1MHp3Q))
                g$t$11738$1MHp3Q
                (g$assp$11670$1MHp3Q
                  g$p?$11737$1MHp3Q
                  g$r$11739$1MHp3Q))))
           g$p?$11735$1MHp3Q
           (car g$lst$11736$1MHp3Q)
           (cdr g$lst$11736$1MHp3Q))))))
   (g$memq$11671$1MHp3Q
     g$memq$11827$1MHp3Q
     (case-lambda
       ((g$obj$11740$1MHp3Q g$lst$11741$1MHp3Q)
        (if (null? g$lst$11741$1MHp3Q)
          '#f
          (if (eq? g$obj$11740$1MHp3Q (car g$lst$11741$1MHp3Q))
            g$lst$11741$1MHp3Q
            (g$memq$11671$1MHp3Q
              g$obj$11740$1MHp3Q
              (cdr g$lst$11741$1MHp3Q)))))))
   (g$memv$11672$1MHp3Q
     g$memv$11828$1MHp3Q
     (case-lambda
       ((g$obj$11742$1MHp3Q g$lst$11743$1MHp3Q)
        (if (null? g$lst$11743$1MHp3Q)
          '#f
          (if (eqv? g$obj$11742$1MHp3Q (car g$lst$11743$1MHp3Q))
            g$lst$11743$1MHp3Q
            (g$memv$11672$1MHp3Q
              g$obj$11742$1MHp3Q
              (cdr g$lst$11743$1MHp3Q)))))))
   (g$member$11673$1MHp3Q
     g$member$11829$1MHp3Q
     (case-lambda
       ((g$obj$11744$1MHp3Q g$lst$11745$1MHp3Q)
        (if (null? g$lst$11745$1MHp3Q)
          '#f
          (if (equal? g$obj$11744$1MHp3Q (car g$lst$11745$1MHp3Q))
            g$lst$11745$1MHp3Q
            (g$member$11673$1MHp3Q
              g$obj$11744$1MHp3Q
              (cdr g$lst$11745$1MHp3Q)))))))
   (g$memp$11674$1MHp3Q
     g$memp$11830$1MHp3Q
     (case-lambda
       ((g$p?$11746$1MHp3Q g$lst$11747$1MHp3Q)
        (if (null? g$lst$11747$1MHp3Q)
          '#f
          (if (g$p?$11746$1MHp3Q (car g$lst$11747$1MHp3Q))
            g$lst$11747$1MHp3Q
            (g$memp$11674$1MHp3Q
              g$p?$11746$1MHp3Q
              (cdr g$lst$11747$1MHp3Q)))))))
   (g$all-empty?$11675$1MHp3Q
     g$all-empty?$11831$1MHp3Q
     (case-lambda
       ((g$ls$11748$1MHp3Q)
        ((case-lambda
           ((g$t$11749$1MHp3Q)
            (if g$t$11749$1MHp3Q
              g$t$11749$1MHp3Q
              (begin
                '#f
                (if (null? (car g$ls$11748$1MHp3Q))
                  (begin
                    '#f
                    (g$all-empty?$11675$1MHp3Q (cdr g$ls$11748$1MHp3Q)))
                  '#f)))))
         (null? g$ls$11748$1MHp3Q)))))
   (g$split$11676$1MHp3Q
     g$split$11832$1MHp3Q
     (case-lambda
       ((g$ls$11750$1MHp3Q)
        (if (null? g$ls$11750$1MHp3Q)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$11676$1MHp3Q (cdr g$ls$11750$1MHp3Q))))
              (case-lambda
                ((g$cars$11751$1MHp3Q g$cdrs$11752$1MHp3Q)
                 ((case-lambda
                    ((g$a$11753$1MHp3Q)
                     (values
                       (cons (car g$a$11753$1MHp3Q) g$cars$11751$1MHp3Q)
                       (cons
                         (cdr g$a$11753$1MHp3Q)
                         g$cdrs$11752$1MHp3Q))))
                  (car g$ls$11750$1MHp3Q))))))))))
   (g$for-all$11677$1MHp3Q
     g$for-all$11833$1MHp3Q
     (case-lambda
       ((g$f$11754$1MHp3Q g$arg1$11755$1MHp3Q)
        (if (null? g$arg1$11755$1MHp3Q)
          '#t
          (if (null? (cdr g$arg1$11755$1MHp3Q))
            (g$f$11754$1MHp3Q (car g$arg1$11755$1MHp3Q))
            (if (g$f$11754$1MHp3Q (car g$arg1$11755$1MHp3Q))
              (begin
                '#f
                (g$for-all$11677$1MHp3Q
                  g$f$11754$1MHp3Q
                  (cdr g$arg1$11755$1MHp3Q)))
              '#f))))
       ((g$f$11756$1MHp3Q g$arg1$11757$1MHp3Q . g$args$11758$1MHp3Q)
        ((case-lambda
           ((g$args$11759$1MHp3Q)
            (if (g$all-empty?$11675$1MHp3Q g$args$11759$1MHp3Q)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1MHp3Q g$args$11759$1MHp3Q)))
                (case-lambda
                  ((g$cars$11760$1MHp3Q g$cdrs$11761$1MHp3Q)
                   (if (g$all-empty?$11675$1MHp3Q g$cdrs$11761$1MHp3Q)
                     (apply g$f$11756$1MHp3Q g$cars$11760$1MHp3Q)
                     (if (apply g$f$11756$1MHp3Q g$cars$11760$1MHp3Q)
                       (begin
                         '#f
                         (apply
                           g$for-all$11677$1MHp3Q
                           g$f$11756$1MHp3Q
                           g$cdrs$11761$1MHp3Q))
                       '#f))))))))
         (cons g$arg1$11757$1MHp3Q g$args$11758$1MHp3Q)))))
   (g$exists$11678$1MHp3Q
     g$exists$11834$1MHp3Q
     (case-lambda
       ((g$f$11762$1MHp3Q g$arg1$11763$1MHp3Q)
        (if (null? g$arg1$11763$1MHp3Q)
          '#f
          ((case-lambda
             ((g$t$11764$1MHp3Q)
              (if g$t$11764$1MHp3Q
                g$t$11764$1MHp3Q
                (begin
                  '#f
                  (g$exists$11678$1MHp3Q
                    g$f$11762$1MHp3Q
                    (cdr g$arg1$11763$1MHp3Q))))))
           (g$f$11762$1MHp3Q (car g$arg1$11763$1MHp3Q)))))
       ((g$f$11765$1MHp3Q g$arg1$11766$1MHp3Q . g$args$11767$1MHp3Q)
        ((case-lambda
           ((g$args$11768$1MHp3Q)
            (if (g$all-empty?$11675$1MHp3Q g$args$11768$1MHp3Q)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1MHp3Q g$args$11768$1MHp3Q)))
                (case-lambda
                  ((g$cars$11769$1MHp3Q g$cdrs$11770$1MHp3Q)
                   ((case-lambda
                      ((g$t$11771$1MHp3Q)
                       (if g$t$11771$1MHp3Q
                         g$t$11771$1MHp3Q
                         (begin
                           '#f
                           (apply
                             g$exists$11678$1MHp3Q
                             g$f$11765$1MHp3Q
                             g$cdrs$11770$1MHp3Q)))))
                    (apply g$f$11765$1MHp3Q g$cars$11769$1MHp3Q))))))))
         (cons g$arg1$11766$1MHp3Q g$args$11767$1MHp3Q)))))
   (g$map$11679$1MHp3Q
     g$map$11835$1MHp3Q
     (case-lambda
       ((g$proc$11772$1MHp3Q g$list1$11773$1MHp3Q)
        ((letrec ((g$f$11774$1MHp3Q
                    (case-lambda
                      ((g$lst$11775$1MHp3Q g$a$11776$1MHp3Q)
                       (if (null? g$lst$11775$1MHp3Q)
                         (reverse! g$a$11776$1MHp3Q)
                         (g$f$11774$1MHp3Q
                           (cdr g$lst$11775$1MHp3Q)
                           (cons
                             (g$proc$11772$1MHp3Q
                               (car g$lst$11775$1MHp3Q))
                             g$a$11776$1MHp3Q)))))))
           g$f$11774$1MHp3Q)
         g$list1$11773$1MHp3Q
         '()))
       ((g$proc$11777$1MHp3Q
          g$list1$11778$1MHp3Q
          .
          g$lists$11779$1MHp3Q)
        ((letrec ((g$f$11780$1MHp3Q
                    (case-lambda
                      ((g$lists$11781$1MHp3Q g$a$11782$1MHp3Q)
                       (if (g$all-empty?$11675$1MHp3Q
                             g$lists$11781$1MHp3Q)
                         (reverse! g$a$11782$1MHp3Q)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11676$1MHp3Q
                                g$lists$11781$1MHp3Q)))
                           (case-lambda
                             ((g$cars$11783$1MHp3Q g$cdrs$11784$1MHp3Q)
                              (g$f$11780$1MHp3Q
                                g$cdrs$11784$1MHp3Q
                                (cons
                                  (apply
                                    g$proc$11777$1MHp3Q
                                    g$cars$11783$1MHp3Q)
                                  g$a$11782$1MHp3Q))))))))))
           g$f$11780$1MHp3Q)
         (cons g$list1$11778$1MHp3Q g$lists$11779$1MHp3Q)
         '()))))
   (g$for-each$11680$1MHp3Q
     g$for-each$11836$1MHp3Q
     (case-lambda
       ((g$f$11785$1MHp3Q g$arg1$11786$1MHp3Q)
        (if (not (null? g$arg1$11786$1MHp3Q))
          (begin
            (g$f$11785$1MHp3Q (car g$arg1$11786$1MHp3Q))
            (g$for-each$11680$1MHp3Q
              g$f$11785$1MHp3Q
              (cdr g$arg1$11786$1MHp3Q)))
          (void)))
       ((g$f$11787$1MHp3Q g$arg1$11788$1MHp3Q . g$args$11789$1MHp3Q)
        ((case-lambda
           ((g$args$11790$1MHp3Q)
            (if (not (g$all-empty?$11675$1MHp3Q g$args$11790$1MHp3Q))
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1MHp3Q g$args$11790$1MHp3Q)))
                (case-lambda
                  ((g$cars$11791$1MHp3Q g$cdrs$11792$1MHp3Q)
                   (begin
                     (apply g$f$11787$1MHp3Q g$cars$11791$1MHp3Q)
                     (apply
                       g$for-each$11680$1MHp3Q
                       g$f$11787$1MHp3Q
                       g$cdrs$11792$1MHp3Q)))))
              (void))))
         (cons g$arg1$11788$1MHp3Q g$args$11789$1MHp3Q)))))
   (g$cons*$11681$1MHp3Q
     g$cons*$11837$1MHp3Q
     (case-lambda
       ((g$a$11793$1MHp3Q . g$rest$11794$1MHp3Q)
        ((letrec ((g$f$11795$1MHp3Q
                    (case-lambda
                      ((g$a$11796$1MHp3Q g$rest$11797$1MHp3Q)
                       (if (null? g$rest$11797$1MHp3Q)
                         g$a$11796$1MHp3Q
                         (cons
                           g$a$11796$1MHp3Q
                           (g$f$11795$1MHp3Q
                             (car g$rest$11797$1MHp3Q)
                             (cdr g$rest$11797$1MHp3Q))))))))
           g$f$11795$1MHp3Q)
         g$a$11793$1MHp3Q
         g$rest$11794$1MHp3Q))))
   (g$fold-left$11682$1MHp3Q
     g$fold-left$11838$1MHp3Q
     (case-lambda
       ((g$combine$11798$1MHp3Q
          g$nil$11799$1MHp3Q
          g$list1$11800$1MHp3Q
          .
          g$lists$11801$1MHp3Q)
        (if (null? g$list1$11800$1MHp3Q)
          g$nil$11799$1MHp3Q
          (if (null? g$lists$11801$1MHp3Q)
            (g$fold-left$11682$1MHp3Q
              g$combine$11798$1MHp3Q
              (g$combine$11798$1MHp3Q
                g$nil$11799$1MHp3Q
                (car g$list1$11800$1MHp3Q))
              (cdr g$list1$11800$1MHp3Q))
            (begin
              '#f
              (apply
                g$fold-left$11682$1MHp3Q
                (g$cons*$11681$1MHp3Q
                  g$combine$11798$1MHp3Q
                  (apply
                    g$combine$11798$1MHp3Q
                    (g$cons*$11681$1MHp3Q
                      g$nil$11799$1MHp3Q
                      (car g$list1$11800$1MHp3Q)
                      (g$map$11679$1MHp3Q car g$lists$11801$1MHp3Q)))
                  (cdr g$list1$11800$1MHp3Q)
                  (g$map$11679$1MHp3Q cdr g$lists$11801$1MHp3Q)))))))))
   (g$fold-right$11683$1MHp3Q
     g$fold-right$11839$1MHp3Q
     (case-lambda
       ((g$combine$11802$1MHp3Q
          g$nil$11803$1MHp3Q
          g$list1$11804$1MHp3Q
          .
          g$lists$11805$1MHp3Q)
        (if (null? g$list1$11804$1MHp3Q)
          g$nil$11803$1MHp3Q
          (if (null? g$lists$11805$1MHp3Q)
            (g$combine$11802$1MHp3Q
              (car g$list1$11804$1MHp3Q)
              (g$fold-right$11683$1MHp3Q
                g$combine$11802$1MHp3Q
                g$nil$11803$1MHp3Q
                (cdr g$list1$11804$1MHp3Q)))
            (begin
              '#f
              (apply
                g$combine$11802$1MHp3Q
                (append
                  (list (car g$list1$11804$1MHp3Q))
                  (g$map$11679$1MHp3Q car g$lists$11805$1MHp3Q)
                  (list
                    (apply
                      g$fold-right$11683$1MHp3Q
                      (g$cons*$11681$1MHp3Q
                        g$combine$11802$1MHp3Q
                        g$nil$11803$1MHp3Q
                        (cdr g$list1$11804$1MHp3Q)
                        (g$map$11679$1MHp3Q
                          cdr
                          g$lists$11805$1MHp3Q))))))))))))
   (g$remove$11684$1MHp3Q
     g$remove$11840$1MHp3Q
     (case-lambda
       ((g$obj$11806$1MHp3Q g$list$11807$1MHp3Q)
        (g$remp$11665$1MHp3Q
          (case-lambda
            ((g$x$11808$1MHp3Q)
             (equal? g$obj$11806$1MHp3Q g$x$11808$1MHp3Q)))
          g$list$11807$1MHp3Q))))
   (g$remv$11685$1MHp3Q
     g$remv$11841$1MHp3Q
     (case-lambda
       ((g$obj$11809$1MHp3Q g$list$11810$1MHp3Q)
        (g$remp$11665$1MHp3Q
          (case-lambda
            ((g$x$11811$1MHp3Q)
             (eqv? g$obj$11809$1MHp3Q g$x$11811$1MHp3Q)))
          g$list$11810$1MHp3Q))))
   (g$remq$11686$1MHp3Q
     g$remq$11842$1MHp3Q
     (case-lambda
       ((g$obj$11812$1MHp3Q g$list$11813$1MHp3Q)
        (g$remp$11665$1MHp3Q
          (case-lambda
            ((g$x$11814$1MHp3Q)
             (eq? g$obj$11812$1MHp3Q g$x$11814$1MHp3Q)))
          g$list$11813$1MHp3Q)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$12327$1MHp3Q
     g$char?$12664$1MHp3Q
     (case-lambda
       ((g$obj$12480$1MHp3Q)
        (clr-is-internal 'system.char g$obj$12480$1MHp3Q))))
   (g$vector?$12328$1MHp3Q
     g$vector?$12665$1MHp3Q
     (case-lambda
       ((g$obj$12481$1MHp3Q)
        (clr-is-internal 'system.object[] g$obj$12481$1MHp3Q))))
   (g$bytevector?$12329$1MHp3Q
     g$bytevector?$12666$1MHp3Q
     (case-lambda
       ((g$obj$12482$1MHp3Q)
        (clr-is-internal 'system.byte[] g$obj$12482$1MHp3Q))))
   (g$symbol?$12330$1MHp3Q
     g$symbol?$12667$1MHp3Q
     (case-lambda
       ((g$obj$12483$1MHp3Q)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12483$1MHp3Q))))
   (g$boolean?$12331$1MHp3Q
     g$boolean?$12668$1MHp3Q
     (case-lambda
       ((g$obj$12484$1MHp3Q)
        (clr-is-internal 'system.boolean g$obj$12484$1MHp3Q))))
   (g$procedure?$12332$1MHp3Q
     g$procedure?$12669$1MHp3Q
     (case-lambda
       ((g$obj$12485$1MHp3Q)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12485$1MHp3Q))))
   (g$fixnum?$12333$1MHp3Q
     g$fixnum?$12670$1MHp3Q
     (case-lambda
       ((g$obj$12486$1MHp3Q)
        (clr-is-internal 'system.int32 g$obj$12486$1MHp3Q))))
   (g$flonum?$12334$1MHp3Q
     g$flonum?$12671$1MHp3Q
     (case-lambda
       ((g$obj$12487$1MHp3Q)
        (clr-is-internal 'system.double g$obj$12487$1MHp3Q))))
   (g$fixnum-width$12335$1MHp3Q
     g$fixnum-width$12672$1MHp3Q
     (case-lambda (() '32)))
   (g$div0$12336$1MHp3Q
     g$div0$12673$1MHp3Q
     (case-lambda
       ((g$x1$12488$1MHp3Q g$x2$12489$1MHp3Q)
        ((case-lambda
           ((g$d$12490$1MHp3Q)
            ((case-lambda
               ((g$m$12491$1MHp3Q)
                (if (g$<$13382$1MHp3Q
                      g$m$12491$1MHp3Q
                      (g$magnitude$13389$1MHp3Q
                        (/ g$x2$12489$1MHp3Q '2)))
                  g$d$12490$1MHp3Q
                  (if (g$positive?$13377$1MHp3Q g$x2$12489$1MHp3Q)
                    (+ g$d$12490$1MHp3Q '1)
                    (begin '#f (- g$d$12490$1MHp3Q '1))))))
             (- g$x1$12488$1MHp3Q
                (* g$d$12490$1MHp3Q g$x2$12489$1MHp3Q)))))
         (g$div$13406$1MHp3Q g$x1$12488$1MHp3Q g$x2$12489$1MHp3Q)))))
   (g$mod$12337$1MHp3Q
     g$mod$12674$1MHp3Q
     (case-lambda
       ((g$x1$12492$1MHp3Q g$x2$12493$1MHp3Q)
        (- g$x1$12492$1MHp3Q
           (* (g$div$13406$1MHp3Q g$x1$12492$1MHp3Q g$x2$12493$1MHp3Q)
              g$x2$12493$1MHp3Q)))))
   (g$mod0$12338$1MHp3Q
     g$mod0$12675$1MHp3Q
     (case-lambda
       ((g$x1$12494$1MHp3Q g$x2$12495$1MHp3Q)
        (- g$x1$12494$1MHp3Q
           (* (g$div0$12336$1MHp3Q g$x1$12494$1MHp3Q g$x2$12495$1MHp3Q)
              g$x2$12495$1MHp3Q)))))
   (g$div-and-mod$12339$1MHp3Q
     g$div-and-mod$12676$1MHp3Q
     (case-lambda
       ((g$x1$12496$1MHp3Q g$x2$12497$1MHp3Q)
        ((case-lambda
           ((g$d$12498$1MHp3Q)
            (values
              g$d$12498$1MHp3Q
              (- g$x1$12496$1MHp3Q
                 (* g$d$12498$1MHp3Q g$x2$12497$1MHp3Q)))))
         (g$div$13406$1MHp3Q g$x1$12496$1MHp3Q g$x2$12497$1MHp3Q)))))
   (g$div0-and-mod0$12340$1MHp3Q
     g$div0-and-mod0$12677$1MHp3Q
     (case-lambda
       ((g$x1$12499$1MHp3Q g$x2$12500$1MHp3Q)
        ((case-lambda
           ((g$d$12501$1MHp3Q)
            (values
              g$d$12501$1MHp3Q
              (- g$x1$12499$1MHp3Q
                 (* g$d$12501$1MHp3Q g$x2$12500$1MHp3Q)))))
         (g$div0$12336$1MHp3Q g$x1$12499$1MHp3Q g$x2$12500$1MHp3Q)))))
   (g$list->vector$12341$1MHp3Q
     g$list->vector$12678$1MHp3Q
     (case-lambda
       ((g$lst$12502$1MHp3Q) (apply vector g$lst$12502$1MHp3Q))))
   (g$list->string$12342$1MHp3Q
     g$list->string$12679$1MHp3Q
     (case-lambda
       ((g$lst$12503$1MHp3Q) (apply string g$lst$12503$1MHp3Q))))
   (g$vector-ref$12343$1MHp3Q
     g$vector-ref$12680$1MHp3Q
     (case-lambda
       ((g$x$12504$1MHp3Q g$n$12505$1MHp3Q)
        (begin
          (if (not (g$vector?$12328$1MHp3Q g$x$12504$1MHp3Q))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$12504$1MHp3Q)
            (void))
          (if (not (g$integer?$13372$1MHp3Q g$n$12505$1MHp3Q))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$12505$1MHp3Q)
            (void))
          (if (g$negative?$13378$1MHp3Q g$n$12505$1MHp3Q)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$12505$1MHp3Q)
            (void))
          ($vector-ref g$x$12504$1MHp3Q g$n$12505$1MHp3Q)))))
   (g$vector-set!$12344$1MHp3Q
     g$vector-set!$12681$1MHp3Q
     (case-lambda
       ((g$x$12506$1MHp3Q g$n$12507$1MHp3Q g$value$12508$1MHp3Q)
        (begin
          (if (not (g$vector?$12328$1MHp3Q g$x$12506$1MHp3Q))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$12506$1MHp3Q)
            (void))
          (if (not (g$integer?$13372$1MHp3Q g$n$12507$1MHp3Q))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$12507$1MHp3Q)
            (void))
          (if (g$negative?$13378$1MHp3Q g$n$12507$1MHp3Q)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$12507$1MHp3Q)
            (void))
          ($vector-set!
            g$x$12506$1MHp3Q
            g$n$12507$1MHp3Q
            g$value$12508$1MHp3Q)
          (void)))))
   (g$vector-fill!$12345$1MHp3Q
     g$vector-fill!$12682$1MHp3Q
     (case-lambda
       ((g$vec$12509$1MHp3Q g$val$12510$1MHp3Q)
        ((case-lambda
           ((g$len$12511$1MHp3Q)
            (letrec ((g$loop$12512$1MHp3Q
                       (case-lambda
                         ((g$i$12513$1MHp3Q)
                          (if (g$fx=?$16565$1MHp3Q
                                g$i$12513$1MHp3Q
                                g$len$12511$1MHp3Q)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$12344$1MHp3Q
                                g$vec$12509$1MHp3Q
                                g$i$12513$1MHp3Q
                                g$val$12510$1MHp3Q)
                              (g$loop$12512$1MHp3Q
                                (g$fx+$16552$1MHp3Q
                                  g$i$12513$1MHp3Q
                                  '1))))))))
              (g$loop$12512$1MHp3Q '0))))
         (vector-length g$vec$12509$1MHp3Q)))))
   (g$xcons$12346$1MHp3Q
     g$xcons$12683$1MHp3Q
     (case-lambda
       ((g$x$12514$1MHp3Q g$y$12515$1MHp3Q)
        (cons g$y$12515$1MHp3Q g$x$12514$1MHp3Q))))
   (g$reverse$12347$1MHp3Q
     g$reverse$12684$1MHp3Q
     (case-lambda
       ((g$lst$12516$1MHp3Q)
        (g$fold-left$11838$1MHp3Q
          g$xcons$12346$1MHp3Q
          '()
          g$lst$12516$1MHp3Q))))
   (g$caar$12348$1MHp3Q
     g$caar$12685$1MHp3Q
     (case-lambda ((g$x$12517$1MHp3Q) (car (car g$x$12517$1MHp3Q)))))
   (g$cadr$12349$1MHp3Q
     g$cadr$12686$1MHp3Q
     (case-lambda ((g$x$12518$1MHp3Q) (car (cdr g$x$12518$1MHp3Q)))))
   (g$cdar$12350$1MHp3Q
     g$cdar$12687$1MHp3Q
     (case-lambda ((g$x$12519$1MHp3Q) (cdr (car g$x$12519$1MHp3Q)))))
   (g$cddr$12351$1MHp3Q
     g$cddr$12688$1MHp3Q
     (case-lambda ((g$x$12520$1MHp3Q) (cdr (cdr g$x$12520$1MHp3Q)))))
   (g$caaar$12352$1MHp3Q
     g$caaar$12689$1MHp3Q
     (case-lambda
       ((g$x$12521$1MHp3Q)
        (g$caar$12348$1MHp3Q (car g$x$12521$1MHp3Q)))))
   (g$caadr$12353$1MHp3Q
     g$caadr$12690$1MHp3Q
     (case-lambda
       ((g$x$12522$1MHp3Q)
        (g$caar$12348$1MHp3Q (cdr g$x$12522$1MHp3Q)))))
   (g$cadar$12354$1MHp3Q
     g$cadar$12691$1MHp3Q
     (case-lambda
       ((g$x$12523$1MHp3Q)
        (g$cadr$12349$1MHp3Q (car g$x$12523$1MHp3Q)))))
   (g$caddr$12355$1MHp3Q
     g$caddr$12692$1MHp3Q
     (case-lambda
       ((g$x$12524$1MHp3Q)
        (g$cadr$12349$1MHp3Q (cdr g$x$12524$1MHp3Q)))))
   (g$cdaar$12356$1MHp3Q
     g$cdaar$12693$1MHp3Q
     (case-lambda
       ((g$x$12525$1MHp3Q)
        (g$cdar$12350$1MHp3Q (car g$x$12525$1MHp3Q)))))
   (g$cdadr$12357$1MHp3Q
     g$cdadr$12694$1MHp3Q
     (case-lambda
       ((g$x$12526$1MHp3Q)
        (g$cdar$12350$1MHp3Q (cdr g$x$12526$1MHp3Q)))))
   (g$cddar$12358$1MHp3Q
     g$cddar$12695$1MHp3Q
     (case-lambda
       ((g$x$12527$1MHp3Q)
        (g$cddr$12351$1MHp3Q (car g$x$12527$1MHp3Q)))))
   (g$cdddr$12359$1MHp3Q
     g$cdddr$12696$1MHp3Q
     (case-lambda
       ((g$x$12528$1MHp3Q)
        (g$cddr$12351$1MHp3Q (cdr g$x$12528$1MHp3Q)))))
   (g$caaaar$12360$1MHp3Q
     g$caaaar$12697$1MHp3Q
     (case-lambda
       ((g$x$12529$1MHp3Q)
        (g$caaar$12352$1MHp3Q (car g$x$12529$1MHp3Q)))))
   (g$caaadr$12361$1MHp3Q
     g$caaadr$12698$1MHp3Q
     (case-lambda
       ((g$x$12530$1MHp3Q)
        (g$caaar$12352$1MHp3Q (cdr g$x$12530$1MHp3Q)))))
   (g$caadar$12362$1MHp3Q
     g$caadar$12699$1MHp3Q
     (case-lambda
       ((g$x$12531$1MHp3Q)
        (g$caadr$12353$1MHp3Q (car g$x$12531$1MHp3Q)))))
   (g$caaddr$12363$1MHp3Q
     g$caaddr$12700$1MHp3Q
     (case-lambda
       ((g$x$12532$1MHp3Q)
        (g$caadr$12353$1MHp3Q (cdr g$x$12532$1MHp3Q)))))
   (g$cadaar$12364$1MHp3Q
     g$cadaar$12701$1MHp3Q
     (case-lambda
       ((g$x$12533$1MHp3Q)
        (g$cadar$12354$1MHp3Q (car g$x$12533$1MHp3Q)))))
   (g$cadadr$12365$1MHp3Q
     g$cadadr$12702$1MHp3Q
     (case-lambda
       ((g$x$12534$1MHp3Q)
        (g$cadar$12354$1MHp3Q (cdr g$x$12534$1MHp3Q)))))
   (g$caddar$12366$1MHp3Q
     g$caddar$12703$1MHp3Q
     (case-lambda
       ((g$x$12535$1MHp3Q)
        (g$caddr$12355$1MHp3Q (car g$x$12535$1MHp3Q)))))
   (g$cadddr$12367$1MHp3Q
     g$cadddr$12704$1MHp3Q
     (case-lambda
       ((g$x$12536$1MHp3Q)
        (g$caddr$12355$1MHp3Q (cdr g$x$12536$1MHp3Q)))))
   (g$cdaaar$12368$1MHp3Q
     g$cdaaar$12705$1MHp3Q
     (case-lambda
       ((g$x$12537$1MHp3Q)
        (g$cdaar$12356$1MHp3Q (car g$x$12537$1MHp3Q)))))
   (g$cdaadr$12369$1MHp3Q
     g$cdaadr$12706$1MHp3Q
     (case-lambda
       ((g$x$12538$1MHp3Q)
        (g$cdaar$12356$1MHp3Q (cdr g$x$12538$1MHp3Q)))))
   (g$cdadar$12370$1MHp3Q
     g$cdadar$12707$1MHp3Q
     (case-lambda
       ((g$x$12539$1MHp3Q)
        (g$cdadr$12357$1MHp3Q (car g$x$12539$1MHp3Q)))))
   (g$cdaddr$12371$1MHp3Q
     g$cdaddr$12708$1MHp3Q
     (case-lambda
       ((g$x$12540$1MHp3Q)
        (g$cdadr$12357$1MHp3Q (cdr g$x$12540$1MHp3Q)))))
   (g$cddaar$12372$1MHp3Q
     g$cddaar$12709$1MHp3Q
     (case-lambda
       ((g$x$12541$1MHp3Q)
        (g$cddar$12358$1MHp3Q (car g$x$12541$1MHp3Q)))))
   (g$cddadr$12373$1MHp3Q
     g$cddadr$12710$1MHp3Q
     (case-lambda
       ((g$x$12542$1MHp3Q)
        (g$cddar$12358$1MHp3Q (cdr g$x$12542$1MHp3Q)))))
   (g$cdddar$12374$1MHp3Q
     g$cdddar$12711$1MHp3Q
     (case-lambda
       ((g$x$12543$1MHp3Q)
        (g$cdddr$12359$1MHp3Q (car g$x$12543$1MHp3Q)))))
   (g$cddddr$12375$1MHp3Q
     g$cddddr$12712$1MHp3Q
     (case-lambda
       ((g$x$12544$1MHp3Q)
        (g$cdddr$12359$1MHp3Q (cdr g$x$12544$1MHp3Q)))))
   (g$even?$12376$1MHp3Q
     g$even?$12713$1MHp3Q
     (case-lambda
       ((g$n$12545$1MHp3Q)
        (begin
          (if (not (g$integer-valued?$13375$1MHp3Q g$n$12545$1MHp3Q))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12545$1MHp3Q)
            (void))
          (g$=$13381$1MHp3Q
            '0
            (g$mod$12337$1MHp3Q g$n$12545$1MHp3Q '2))))))
   (g$odd?$12377$1MHp3Q
     g$odd?$12714$1MHp3Q
     (case-lambda
       ((g$n$12546$1MHp3Q)
        (begin
          (if (not (g$integer-valued?$13375$1MHp3Q g$n$12546$1MHp3Q))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$12546$1MHp3Q)
            (void))
          (g$=$13381$1MHp3Q
            '1
            (g$mod$12337$1MHp3Q g$n$12546$1MHp3Q '2))))))
   (g$max$12378$1MHp3Q
     g$max$12715$1MHp3Q
     (case-lambda
       ((g$a$12547$1MHp3Q . g$rest$12548$1MHp3Q)
        (begin
          (if (not (g$real-valued?$13373$1MHp3Q g$a$12547$1MHp3Q))
            (assertion-violation 'max '"not a real" g$a$12547$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$12549$1MHp3Q g$b$12550$1MHp3Q)
               ((case-lambda
                  ((g$r$12551$1MHp3Q)
                   (if ((case-lambda
                          ((g$t$12552$1MHp3Q)
                           (if g$t$12552$1MHp3Q
                             g$t$12552$1MHp3Q
                             (begin
                               '#f
                               (g$inexact?$13368$1MHp3Q
                                 g$b$12550$1MHp3Q)))))
                        (g$inexact?$13368$1MHp3Q g$a$12549$1MHp3Q))
                     (g$inexact$13379$1MHp3Q g$r$12551$1MHp3Q)
                     g$r$12551$1MHp3Q)))
                (if (g$<$13382$1MHp3Q g$a$12549$1MHp3Q g$b$12550$1MHp3Q)
                  g$b$12550$1MHp3Q
                  g$a$12549$1MHp3Q))))
            g$a$12547$1MHp3Q
            g$rest$12548$1MHp3Q)))))
   (g$min$12379$1MHp3Q
     g$min$12716$1MHp3Q
     (case-lambda
       ((g$a$12553$1MHp3Q . g$rest$12554$1MHp3Q)
        (begin
          (if (not (g$real-valued?$13373$1MHp3Q g$a$12553$1MHp3Q))
            (assertion-violation 'min '"not a real" g$a$12553$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$12555$1MHp3Q g$b$12556$1MHp3Q)
               ((case-lambda
                  ((g$r$12557$1MHp3Q)
                   (if ((case-lambda
                          ((g$t$12558$1MHp3Q)
                           (if g$t$12558$1MHp3Q
                             g$t$12558$1MHp3Q
                             (begin
                               '#f
                               (g$inexact?$13368$1MHp3Q
                                 g$b$12556$1MHp3Q)))))
                        (g$inexact?$13368$1MHp3Q g$a$12555$1MHp3Q))
                     (g$inexact$13379$1MHp3Q g$r$12557$1MHp3Q)
                     g$r$12557$1MHp3Q)))
                (if (g$>$13384$1MHp3Q g$a$12555$1MHp3Q g$b$12556$1MHp3Q)
                  g$b$12556$1MHp3Q
                  g$a$12555$1MHp3Q))))
            g$a$12553$1MHp3Q
            g$rest$12554$1MHp3Q)))))
   (g$gcd$12380$1MHp3Q
     g$gcd$12717$1MHp3Q
     (case-lambda
       (g$nums$12559$1MHp3Q
        ((case-lambda
           ((g$t$12560$1MHp3Q)
            (if (eqv? g$t$12560$1MHp3Q '0)
              '0
              (if (eqv? g$t$12560$1MHp3Q '1)
                ((case-lambda
                   ((g$n$12561$1MHp3Q)
                    (begin
                      (if (not (g$integer-valued?$13375$1MHp3Q
                                 g$n$12561$1MHp3Q))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12561$1MHp3Q)
                        (void))
                      (g$abs$13407$1MHp3Q g$n$12561$1MHp3Q))))
                 (car g$nums$12559$1MHp3Q))
                (if (eqv? g$t$12560$1MHp3Q '2)
                  ((case-lambda
                     ((g$a$12562$1MHp3Q g$b$12563$1MHp3Q)
                      (begin
                        (if (not (g$integer-valued?$13375$1MHp3Q
                                   g$a$12562$1MHp3Q))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12562$1MHp3Q)
                          (void))
                        (if (not (g$integer-valued?$13375$1MHp3Q
                                   g$b$12563$1MHp3Q))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12563$1MHp3Q)
                          (void))
                        (if (g$zero?$13376$1MHp3Q g$b$12563$1MHp3Q)
                          (g$abs$13407$1MHp3Q g$a$12562$1MHp3Q)
                          (g$abs$13407$1MHp3Q
                            (g$gcd$12380$1MHp3Q
                              g$b$12563$1MHp3Q
                              (g$mod$12337$1MHp3Q
                                g$a$12562$1MHp3Q
                                g$b$12563$1MHp3Q)))))))
                   (car g$nums$12559$1MHp3Q)
                   (g$cadr$12349$1MHp3Q g$nums$12559$1MHp3Q))
                  (begin
                    '#f
                    (g$fold-left$11838$1MHp3Q
                      g$gcd$12380$1MHp3Q
                      (g$abs$13407$1MHp3Q (car g$nums$12559$1MHp3Q))
                      (cdr g$nums$12559$1MHp3Q))))))))
         (length g$nums$12559$1MHp3Q)))))
   (g$lcm$12381$1MHp3Q
     g$lcm$12718$1MHp3Q
     (case-lambda
       (g$nums$12564$1MHp3Q
        ((case-lambda
           ((g$t$12565$1MHp3Q)
            (if (eqv? g$t$12565$1MHp3Q '0)
              '1
              (if (eqv? g$t$12565$1MHp3Q '1)
                ((case-lambda
                   ((g$n$12566$1MHp3Q)
                    (begin
                      (if (not (g$integer-valued?$13375$1MHp3Q
                                 g$n$12566$1MHp3Q))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12566$1MHp3Q)
                        (void))
                      (g$abs$13407$1MHp3Q g$n$12566$1MHp3Q))))
                 (car g$nums$12564$1MHp3Q))
                (if (eqv? g$t$12565$1MHp3Q '2)
                  ((case-lambda
                     ((g$a$12567$1MHp3Q g$b$12568$1MHp3Q)
                      (begin
                        (if (not (g$integer-valued?$13375$1MHp3Q
                                   g$a$12567$1MHp3Q))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12567$1MHp3Q)
                          (void))
                        (if (not (g$integer-valued?$13375$1MHp3Q
                                   g$b$12568$1MHp3Q))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12568$1MHp3Q)
                          (void))
                        (if ((case-lambda
                               ((g$t$12569$1MHp3Q)
                                (if g$t$12569$1MHp3Q
                                  g$t$12569$1MHp3Q
                                  (begin
                                    '#f
                                    (g$zero?$13376$1MHp3Q
                                      g$b$12568$1MHp3Q)))))
                             (g$zero?$13376$1MHp3Q g$a$12567$1MHp3Q))
                          '0
                          (g$abs$13407$1MHp3Q
                            (* (/ g$a$12567$1MHp3Q
                                  (g$gcd$12380$1MHp3Q
                                    g$a$12567$1MHp3Q
                                    g$b$12568$1MHp3Q))
                               g$b$12568$1MHp3Q))))))
                   (car g$nums$12564$1MHp3Q)
                   (g$cadr$12349$1MHp3Q g$nums$12564$1MHp3Q))
                  (begin
                    '#f
                    (g$fold-left$11838$1MHp3Q
                      g$lcm$12381$1MHp3Q
                      (g$abs$13407$1MHp3Q (car g$nums$12564$1MHp3Q))
                      (cdr g$nums$12564$1MHp3Q))))))))
         (length g$nums$12564$1MHp3Q)))))
   (g$string=?$12422$1MHp3Q
     g$string=?$12719$1MHp3Q
     (case-lambda
       ((g$a$12570$1MHp3Q g$b$12571$1MHp3Q . g$rest$12572$1MHp3Q)
        (begin
          (if (not (string? g$a$12570$1MHp3Q))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12570$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12573$1MHp3Q)
               (begin
                 (if (not (string? g$x$12573$1MHp3Q))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12573$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12574$1MHp3Q)
                     (begin
                       (set! g$a$12570$1MHp3Q g$x$12573$1MHp3Q)
                       g$r$12574$1MHp3Q)))
                  (g$fx=?$16565$1MHp3Q
                    (string-compare g$a$12570$1MHp3Q g$x$12573$1MHp3Q)
                    '0)))))
            (cons g$b$12571$1MHp3Q g$rest$12572$1MHp3Q))))))
   (g$string<?$12423$1MHp3Q
     g$string<?$12720$1MHp3Q
     (case-lambda
       ((g$a$12575$1MHp3Q g$b$12576$1MHp3Q . g$rest$12577$1MHp3Q)
        (begin
          (if (not (string? g$a$12575$1MHp3Q))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12575$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12578$1MHp3Q)
               (begin
                 (if (not (string? g$x$12578$1MHp3Q))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12578$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12579$1MHp3Q)
                     (begin
                       (set! g$a$12575$1MHp3Q g$x$12578$1MHp3Q)
                       g$r$12579$1MHp3Q)))
                  (g$fx<?$16566$1MHp3Q
                    (string-compare g$a$12575$1MHp3Q g$x$12578$1MHp3Q)
                    '0)))))
            (cons g$b$12576$1MHp3Q g$rest$12577$1MHp3Q))))))
   (g$string>?$12424$1MHp3Q
     g$string>?$12721$1MHp3Q
     (case-lambda
       ((g$a$12580$1MHp3Q g$b$12581$1MHp3Q . g$rest$12582$1MHp3Q)
        (begin
          (if (not (string? g$a$12580$1MHp3Q))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12580$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12583$1MHp3Q)
               (begin
                 (if (not (string? g$x$12583$1MHp3Q))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12583$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12584$1MHp3Q)
                     (begin
                       (set! g$a$12580$1MHp3Q g$x$12583$1MHp3Q)
                       g$r$12584$1MHp3Q)))
                  (g$fx>?$16568$1MHp3Q
                    (string-compare g$a$12580$1MHp3Q g$x$12583$1MHp3Q)
                    '0)))))
            (cons g$b$12581$1MHp3Q g$rest$12582$1MHp3Q))))))
   (g$string<=?$12425$1MHp3Q
     g$string<=?$12722$1MHp3Q
     (case-lambda
       ((g$a$12585$1MHp3Q g$b$12586$1MHp3Q . g$rest$12587$1MHp3Q)
        (begin
          (if (not (string? g$a$12585$1MHp3Q))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12585$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12588$1MHp3Q)
               (begin
                 (if (not (string? g$x$12588$1MHp3Q))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12588$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12589$1MHp3Q)
                     (begin
                       (set! g$a$12585$1MHp3Q g$x$12588$1MHp3Q)
                       g$r$12589$1MHp3Q)))
                  (g$fx<=?$16567$1MHp3Q
                    (string-compare g$a$12585$1MHp3Q g$x$12588$1MHp3Q)
                    '0)))))
            (cons g$b$12586$1MHp3Q g$rest$12587$1MHp3Q))))))
   (g$string>=?$12426$1MHp3Q
     g$string>=?$12723$1MHp3Q
     (case-lambda
       ((g$a$12590$1MHp3Q g$b$12591$1MHp3Q . g$rest$12592$1MHp3Q)
        (begin
          (if (not (string? g$a$12590$1MHp3Q))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12590$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12593$1MHp3Q)
               (begin
                 (if (not (string? g$x$12593$1MHp3Q))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12593$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12594$1MHp3Q)
                     (begin
                       (set! g$a$12590$1MHp3Q g$x$12593$1MHp3Q)
                       g$r$12594$1MHp3Q)))
                  (g$fx>=?$16569$1MHp3Q
                    (string-compare g$a$12590$1MHp3Q g$x$12593$1MHp3Q)
                    '0)))))
            (cons g$b$12591$1MHp3Q g$rest$12592$1MHp3Q))))))
   (g$symbol=?$12427$1MHp3Q
     g$symbol=?$12724$1MHp3Q
     (case-lambda
       ((g$a$12595$1MHp3Q g$b$12596$1MHp3Q . g$rest$12597$1MHp3Q)
        (begin
          (if (not (g$symbol?$12330$1MHp3Q g$a$12595$1MHp3Q))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12595$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12598$1MHp3Q)
               (begin
                 (if (not (g$symbol?$12330$1MHp3Q g$x$12598$1MHp3Q))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12598$1MHp3Q)
                   (void))
                 (eq? g$a$12595$1MHp3Q g$x$12598$1MHp3Q))))
            (cons g$b$12596$1MHp3Q g$rest$12597$1MHp3Q))))))
   (g$boolean=?$12428$1MHp3Q
     g$boolean=?$12725$1MHp3Q
     (case-lambda
       ((g$a$12599$1MHp3Q g$b$12600$1MHp3Q . g$rest$12601$1MHp3Q)
        (begin
          (if (not (g$boolean?$12331$1MHp3Q g$a$12599$1MHp3Q))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12599$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12602$1MHp3Q)
               (begin
                 (if (not (g$boolean?$12331$1MHp3Q g$x$12602$1MHp3Q))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12602$1MHp3Q)
                   (void))
                 (eq? g$a$12599$1MHp3Q g$x$12602$1MHp3Q))))
            (cons g$b$12600$1MHp3Q g$rest$12601$1MHp3Q))))))
   (g$char=?$12469$1MHp3Q
     g$char=?$12726$1MHp3Q
     (case-lambda
       ((g$a$12603$1MHp3Q g$b$12604$1MHp3Q . g$rest$12605$1MHp3Q)
        (begin
          (if (not (g$char?$12327$1MHp3Q g$a$12603$1MHp3Q))
            (assertion-violation 'char=? '"not a char" g$a$12603$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12606$1MHp3Q)
               (begin
                 (if (not (g$char?$12327$1MHp3Q g$x$12606$1MHp3Q))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12606$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12607$1MHp3Q)
                     (begin
                       (set! g$a$12603$1MHp3Q g$x$12606$1MHp3Q)
                       g$r$12607$1MHp3Q)))
                  (g$fx=?$16565$1MHp3Q
                    (char->integer g$a$12603$1MHp3Q)
                    (char->integer g$x$12606$1MHp3Q))))))
            (cons g$b$12604$1MHp3Q g$rest$12605$1MHp3Q))))))
   (g$char<?$12470$1MHp3Q
     g$char<?$12727$1MHp3Q
     (case-lambda
       ((g$a$12608$1MHp3Q g$b$12609$1MHp3Q . g$rest$12610$1MHp3Q)
        (begin
          (if (not (g$char?$12327$1MHp3Q g$a$12608$1MHp3Q))
            (assertion-violation 'char<? '"not a char" g$a$12608$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12611$1MHp3Q)
               (begin
                 (if (not (g$char?$12327$1MHp3Q g$x$12611$1MHp3Q))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12611$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12612$1MHp3Q)
                     (begin
                       (set! g$a$12608$1MHp3Q g$x$12611$1MHp3Q)
                       g$r$12612$1MHp3Q)))
                  (g$fx<?$16566$1MHp3Q
                    (char->integer g$a$12608$1MHp3Q)
                    (char->integer g$x$12611$1MHp3Q))))))
            (cons g$b$12609$1MHp3Q g$rest$12610$1MHp3Q))))))
   (g$char>?$12471$1MHp3Q
     g$char>?$12728$1MHp3Q
     (case-lambda
       ((g$a$12613$1MHp3Q g$b$12614$1MHp3Q . g$rest$12615$1MHp3Q)
        (begin
          (if (not (g$char?$12327$1MHp3Q g$a$12613$1MHp3Q))
            (assertion-violation 'char>? '"not a char" g$a$12613$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12616$1MHp3Q)
               (begin
                 (if (not (g$char?$12327$1MHp3Q g$x$12616$1MHp3Q))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12616$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12617$1MHp3Q)
                     (begin
                       (set! g$a$12613$1MHp3Q g$x$12616$1MHp3Q)
                       g$r$12617$1MHp3Q)))
                  (g$fx>?$16568$1MHp3Q
                    (char->integer g$a$12613$1MHp3Q)
                    (char->integer g$x$12616$1MHp3Q))))))
            (cons g$b$12614$1MHp3Q g$rest$12615$1MHp3Q))))))
   (g$char<=?$12472$1MHp3Q
     g$char<=?$12729$1MHp3Q
     (case-lambda
       ((g$a$12618$1MHp3Q g$b$12619$1MHp3Q . g$rest$12620$1MHp3Q)
        (begin
          (if (not (g$char?$12327$1MHp3Q g$a$12618$1MHp3Q))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$12618$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12621$1MHp3Q)
               (begin
                 (if (not (g$char?$12327$1MHp3Q g$x$12621$1MHp3Q))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12621$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12622$1MHp3Q)
                     (begin
                       (set! g$a$12618$1MHp3Q g$x$12621$1MHp3Q)
                       g$r$12622$1MHp3Q)))
                  (g$fx<=?$16567$1MHp3Q
                    (char->integer g$a$12618$1MHp3Q)
                    (char->integer g$x$12621$1MHp3Q))))))
            (cons g$b$12619$1MHp3Q g$rest$12620$1MHp3Q))))))
   (g$char>=?$12473$1MHp3Q
     g$char>=?$12730$1MHp3Q
     (case-lambda
       ((g$a$12623$1MHp3Q g$b$12624$1MHp3Q . g$rest$12625$1MHp3Q)
        (begin
          (if (not (g$char?$12327$1MHp3Q g$a$12623$1MHp3Q))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$12623$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$12626$1MHp3Q)
               (begin
                 (if (not (g$char?$12327$1MHp3Q g$x$12626$1MHp3Q))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12626$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$12627$1MHp3Q)
                     (begin
                       (set! g$a$12623$1MHp3Q g$x$12626$1MHp3Q)
                       g$r$12627$1MHp3Q)))
                  (g$fx>=?$16569$1MHp3Q
                    (char->integer g$a$12623$1MHp3Q)
                    (char->integer g$x$12626$1MHp3Q))))))
            (cons g$b$12624$1MHp3Q g$rest$12625$1MHp3Q))))))
   (g$rationalize$12474$1MHp3Q
     g$rationalize$12731$1MHp3Q
     (case-lambda
       ((g$x$12628$1MHp3Q g$e$12629$1MHp3Q)
        (if (if (g$infinite?$13366$1MHp3Q g$x$12628$1MHp3Q)
              (begin '#f (g$infinite?$13366$1MHp3Q g$e$12629$1MHp3Q))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12630$1MHp3Q)
              (if (if (g$exact?$13367$1MHp3Q g$x$12628$1MHp3Q)
                    (begin '#f (g$exact?$13367$1MHp3Q g$e$12629$1MHp3Q))
                    '#f)
                g$r$12630$1MHp3Q
                (g$inexact$13379$1MHp3Q g$r$12630$1MHp3Q))))
           (apply
             /
             (g$find-ratio$12475$1MHp3Q
               g$x$12628$1MHp3Q
               g$e$12629$1MHp3Q)))))))
   (g$find-ratio$12475$1MHp3Q
     g$find-ratio$12732$1MHp3Q
     (case-lambda
       ((g$x$12631$1MHp3Q g$e$12632$1MHp3Q)
        (g$find-ratio-between$12476$1MHp3Q
          (- g$x$12631$1MHp3Q g$e$12632$1MHp3Q)
          (+ g$x$12631$1MHp3Q g$e$12632$1MHp3Q)))))
   (g$find-ratio-between$12476$1MHp3Q
     g$find-ratio-between$12733$1MHp3Q
     (case-lambda
       ((g$x$12633$1MHp3Q g$y$12634$1MHp3Q)
        (letrec* ((g$sr$12635$1MHp3Q
                    (case-lambda
                      ((g$x$12637$1MHp3Q g$y$12638$1MHp3Q)
                       ((case-lambda
                          ((g$fx$12639$1MHp3Q g$fy$12640$1MHp3Q)
                           (if (g$>=$13385$1MHp3Q
                                 g$fx$12639$1MHp3Q
                                 g$x$12637$1MHp3Q)
                             (list g$fx$12639$1MHp3Q '1)
                             (if (g$=$13381$1MHp3Q
                                   g$fx$12639$1MHp3Q
                                   g$fy$12640$1MHp3Q)
                               ((case-lambda
                                  ((g$rat$12641$1MHp3Q)
                                   (list
                                     (+ (g$cadr$12349$1MHp3Q
                                          g$rat$12641$1MHp3Q)
                                        (* g$fx$12639$1MHp3Q
                                           (car g$rat$12641$1MHp3Q)))
                                     (car g$rat$12641$1MHp3Q))))
                                (g$sr$12635$1MHp3Q
                                  (/ (- g$y$12638$1MHp3Q
                                        g$fy$12640$1MHp3Q))
                                  (/ (- g$x$12637$1MHp3Q
                                        g$fx$12639$1MHp3Q))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$12639$1MHp3Q) '1))))))
                        (g$exact$13380$1MHp3Q
                          (g$floor$13408$1MHp3Q g$x$12637$1MHp3Q))
                        (g$exact$13380$1MHp3Q
                          (g$floor$13408$1MHp3Q g$y$12638$1MHp3Q)))))))
          (if (g$<$13382$1MHp3Q g$y$12634$1MHp3Q g$x$12633$1MHp3Q)
            (g$find-ratio-between$12476$1MHp3Q
              g$y$12634$1MHp3Q
              g$x$12633$1MHp3Q)
            (if (g$>=$13385$1MHp3Q g$x$12633$1MHp3Q g$y$12634$1MHp3Q)
              (list g$x$12633$1MHp3Q '1)
              (if (g$positive?$13377$1MHp3Q g$x$12633$1MHp3Q)
                (g$sr$12635$1MHp3Q g$x$12633$1MHp3Q g$y$12634$1MHp3Q)
                (if (g$negative?$13378$1MHp3Q g$y$12634$1MHp3Q)
                  ((case-lambda
                     ((g$rat$12636$1MHp3Q)
                      (list
                        (- (car g$rat$12636$1MHp3Q))
                        (g$cadr$12349$1MHp3Q g$rat$12636$1MHp3Q))))
                   (g$sr$12635$1MHp3Q
                     (- g$y$12634$1MHp3Q)
                     (- g$x$12633$1MHp3Q)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$12477$1MHp3Q
     g$vector-map$12734$1MHp3Q
     (case-lambda
       ((g$p$12642$1MHp3Q g$vec1$12643$1MHp3Q . g$vecs$12644$1MHp3Q)
        ((case-lambda
           ((g$len$12645$1MHp3Q)
            ((case-lambda
               ((g$res$12646$1MHp3Q)
                (letrec ((g$loop$12647$1MHp3Q
                           (case-lambda
                             ((g$i$12648$1MHp3Q)
                              (if (g$fx=?$16565$1MHp3Q
                                    g$i$12648$1MHp3Q
                                    g$len$12645$1MHp3Q)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12646$1MHp3Q)
                                (begin
                                  (g$vector-set!$12344$1MHp3Q
                                    g$res$12646$1MHp3Q
                                    g$i$12648$1MHp3Q
                                    (if (null? g$vecs$12644$1MHp3Q)
                                      (g$p$12642$1MHp3Q
                                        (g$vector-ref$12343$1MHp3Q
                                          g$vec1$12643$1MHp3Q
                                          g$i$12648$1MHp3Q))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$11835$1MHp3Q
                                               (case-lambda
                                                 ((g$x$12649$1MHp3Q)
                                                  (g$vector-ref$12343$1MHp3Q
                                                    g$x$12649$1MHp3Q
                                                    g$i$12648$1MHp3Q)))
                                               (cons
                                                 g$vec1$12643$1MHp3Q
                                                 g$vecs$12644$1MHp3Q)))))
                                        g$p$12642$1MHp3Q)))
                                  (g$loop$12647$1MHp3Q
                                    (g$fx+$16552$1MHp3Q
                                      g$i$12648$1MHp3Q
                                      '1))))))))
                  (g$loop$12647$1MHp3Q '0))))
             (make-vector g$len$12645$1MHp3Q '()))))
         (vector-length g$vec1$12643$1MHp3Q)))))
   (g$vector-for-each$12478$1MHp3Q
     g$vector-for-each$12735$1MHp3Q
     (case-lambda
       ((g$p$12650$1MHp3Q g$vec1$12651$1MHp3Q . g$vecs$12652$1MHp3Q)
        ((case-lambda
           ((g$len$12653$1MHp3Q)
            (letrec ((g$loop$12654$1MHp3Q
                       (case-lambda
                         ((g$i$12655$1MHp3Q)
                          (if (g$fx=?$16565$1MHp3Q
                                g$i$12655$1MHp3Q
                                g$len$12653$1MHp3Q)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$12652$1MHp3Q)
                                (g$p$12650$1MHp3Q
                                  (g$vector-ref$12343$1MHp3Q
                                    g$vec1$12651$1MHp3Q
                                    g$i$12655$1MHp3Q))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$1MHp3Q
                                         (case-lambda
                                           ((g$x$12656$1MHp3Q)
                                            (g$vector-ref$12343$1MHp3Q
                                              g$x$12656$1MHp3Q
                                              g$i$12655$1MHp3Q)))
                                         (cons
                                           g$vec1$12651$1MHp3Q
                                           g$vecs$12652$1MHp3Q)))))
                                  g$p$12650$1MHp3Q))
                              (g$loop$12654$1MHp3Q
                                (g$fx+$16552$1MHp3Q
                                  g$i$12655$1MHp3Q
                                  '1))))))))
              (g$loop$12654$1MHp3Q '0))))
         (vector-length g$vec1$12651$1MHp3Q)))))
   (g$string-for-each$12479$1MHp3Q
     g$string-for-each$12736$1MHp3Q
     (case-lambda
       ((g$p$12657$1MHp3Q g$str1$12658$1MHp3Q . g$strs$12659$1MHp3Q)
        ((case-lambda
           ((g$len$12660$1MHp3Q)
            (letrec ((g$loop$12661$1MHp3Q
                       (case-lambda
                         ((g$i$12662$1MHp3Q)
                          (if (g$fx=?$16565$1MHp3Q
                                g$i$12662$1MHp3Q
                                g$len$12660$1MHp3Q)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$12659$1MHp3Q)
                                (g$p$12657$1MHp3Q
                                  (string-ref
                                    g$str1$12658$1MHp3Q
                                    g$i$12662$1MHp3Q))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$1MHp3Q
                                         (case-lambda
                                           ((g$x$12663$1MHp3Q)
                                            (string-ref
                                              g$x$12663$1MHp3Q
                                              g$i$12662$1MHp3Q)))
                                         (cons
                                           g$str1$12658$1MHp3Q
                                           g$strs$12659$1MHp3Q)))))
                                  g$p$12657$1MHp3Q))
                              (g$loop$12661$1MHp3Q
                                (g$fx+$16552$1MHp3Q
                                  g$i$12662$1MHp3Q
                                  '1))))))))
              (g$loop$12661$1MHp3Q '0))))
         (string-length g$str1$12658$1MHp3Q))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12738$1MHp3Q
     g$using$12772$1MHp3Q
     (clr-using-internal 'system))
   (g$using$12740$1MHp3Q
     g$using$12773$1MHp3Q
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$12741$1MHp3Q
     g$make-eq-hashtable$12774$1MHp3Q
     (case-lambda
       (() (g$make-eq-hashtable$12741$1MHp3Q '32))
       ((g$k$12750$1MHp3Q)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12750$1MHp3Q)))))
   (g$make-eqv-hashtable$12742$1MHp3Q
     g$make-eqv-hashtable$12775$1MHp3Q
     (case-lambda
       (() (g$make-eqv-hashtable$12742$1MHp3Q '32))
       ((g$k$12751$1MHp3Q)
        (make-hashtable eqv-hash eqv? g$k$12751$1MHp3Q))))
   (g$hashtable-size$12743$1MHp3Q
     g$hashtable-size$12776$1MHp3Q
     (case-lambda
       ((g$ht$12752$1MHp3Q)
        (clr-call-internal 'hashtable 'get_count g$ht$12752$1MHp3Q))))
   (g$hashtable-ref$12744$1MHp3Q
     g$hashtable-ref$12777$1MHp3Q
     (case-lambda
       ((g$ht$12753$1MHp3Q g$key$12754$1MHp3Q g$default$12755$1MHp3Q)
        (letrec* ((g$r$12756$1MHp3Q
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$12753$1MHp3Q
                      g$key$12754$1MHp3Q)))
          (if ((case-lambda
                 ((g$t$12757$1MHp3Q)
                  (if g$t$12757$1MHp3Q
                    g$t$12757$1MHp3Q
                    (begin
                      '#f
                      (g$hashtable-contains?$12747$1MHp3Q
                        g$ht$12753$1MHp3Q
                        g$key$12754$1MHp3Q)))))
               (not (null? g$r$12756$1MHp3Q)))
            g$r$12756$1MHp3Q
            g$default$12755$1MHp3Q)))))
   (g$hashtable-set!$12745$1MHp3Q
     g$hashtable-set!$12778$1MHp3Q
     (case-lambda
       ((g$ht$12758$1MHp3Q g$key$12759$1MHp3Q g$obj$12760$1MHp3Q)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12758$1MHp3Q
          g$key$12759$1MHp3Q
          g$obj$12760$1MHp3Q))))
   (g$hashtable-delete!$12746$1MHp3Q
     g$hashtable-delete!$12779$1MHp3Q
     (case-lambda
       ((g$ht$12761$1MHp3Q g$key$12762$1MHp3Q)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12761$1MHp3Q
          g$key$12762$1MHp3Q))))
   (g$hashtable-contains?$12747$1MHp3Q
     g$hashtable-contains?$12780$1MHp3Q
     (case-lambda
       ((g$ht$12763$1MHp3Q g$key$12764$1MHp3Q)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12763$1MHp3Q
          g$key$12764$1MHp3Q))))
   (g$hashtable-update!$12748$1MHp3Q
     g$hashtable-update!$12781$1MHp3Q
     (case-lambda
       ((g$ht$12765$1MHp3Q
          g$key$12766$1MHp3Q
          g$proc$12767$1MHp3Q
          g$default$12768$1MHp3Q)
        (g$hashtable-set!$12745$1MHp3Q
          g$ht$12765$1MHp3Q
          g$key$12766$1MHp3Q
          (g$proc$12767$1MHp3Q
            (g$hashtable-ref$12744$1MHp3Q
              g$ht$12765$1MHp3Q
              g$key$12766$1MHp3Q
              g$default$12768$1MHp3Q))))))
   (g$hashtable-clear!$12749$1MHp3Q
     g$hashtable-clear!$12782$1MHp3Q
     (case-lambda
       ((g$ht$12769$1MHp3Q)
        (g$hashtable-clear!$12749$1MHp3Q g$ht$12769$1MHp3Q '32))
       ((g$ht$12770$1MHp3Q g$k$12771$1MHp3Q)
        (clr-call-internal 'hashtable 'clear g$ht$12770$1MHp3Q)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12784$1MHp3Q
     g$using$12791$1MHp3Q
     (clr-using-internal 'system.io))
   (g$file-exists?$12785$1MHp3Q
     g$file-exists?$12792$1MHp3Q
     (case-lambda
       ((g$fn$12788$1MHp3Q)
        (clr-call-internal 'file 'exists '() g$fn$12788$1MHp3Q))))
   (g$delete-file$12786$1MHp3Q
     g$delete-file$12793$1MHp3Q
     (case-lambda
       ((g$fn$12789$1MHp3Q)
        (clr-call-internal 'file 'delete '() g$fn$12789$1MHp3Q))))
   (g$get-directory-name$12787$1MHp3Q
     g$get-directory-name$12794$1MHp3Q
     (case-lambda
       ((g$path$12790$1MHp3Q)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12790$1MHp3Q)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12795$1MHp3Q
     g$native-endianness$12906$1MHp3Q
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$12796$1MHp3Q
     g$bytevector-u16-ref$12907$1MHp3Q
     (case-lambda
       ((g$bytevector$12824$1MHp3Q
          g$k$12825$1MHp3Q
          g$endianness$12826$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12824$1MHp3Q
          g$k$12825$1MHp3Q
          g$endianness$12826$1MHp3Q
          '2))))
   (g$bytevector-s16-ref$12797$1MHp3Q
     g$bytevector-s16-ref$12908$1MHp3Q
     (case-lambda
       ((g$bytevector$12827$1MHp3Q
          g$k$12828$1MHp3Q
          g$endianness$12829$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12827$1MHp3Q
          g$k$12828$1MHp3Q
          g$endianness$12829$1MHp3Q
          '2))))
   (g$bytevector-u16-native-ref$12798$1MHp3Q
     g$bytevector-u16-native-ref$12909$1MHp3Q
     (case-lambda
       ((g$bytevector$12830$1MHp3Q g$k$12831$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12830$1MHp3Q
          g$k$12831$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '2))))
   (g$bytevector-s16-native-ref$12799$1MHp3Q
     g$bytevector-s16-native-ref$12910$1MHp3Q
     (case-lambda
       ((g$bytevector$12832$1MHp3Q g$k$12833$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12832$1MHp3Q
          g$k$12833$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '2))))
   (g$bytevector-u16-set!$12800$1MHp3Q
     g$bytevector-u16-set!$12911$1MHp3Q
     (case-lambda
       ((g$bytevector$12834$1MHp3Q
          g$k$12835$1MHp3Q
          g$n$12836$1MHp3Q
          g$endianness$12837$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12834$1MHp3Q
          g$k$12835$1MHp3Q
          g$n$12836$1MHp3Q
          g$endianness$12837$1MHp3Q
          '2))))
   (g$bytevector-s16-set!$12801$1MHp3Q
     g$bytevector-s16-set!$12912$1MHp3Q
     (case-lambda
       ((g$bytevector$12838$1MHp3Q
          g$k$12839$1MHp3Q
          g$n$12840$1MHp3Q
          g$endianness$12841$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12838$1MHp3Q
          g$k$12839$1MHp3Q
          g$n$12840$1MHp3Q
          g$endianness$12841$1MHp3Q
          '2))))
   (g$bytevector-u16-native-set!$12802$1MHp3Q
     g$bytevector-u16-native-set!$12913$1MHp3Q
     (case-lambda
       ((g$bytevector$12842$1MHp3Q g$k$12843$1MHp3Q g$n$12844$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12842$1MHp3Q
          g$k$12843$1MHp3Q
          g$n$12844$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '2))))
   (g$bytevector-s16-native-set!$12803$1MHp3Q
     g$bytevector-s16-native-set!$12914$1MHp3Q
     (case-lambda
       ((g$bytevector$12845$1MHp3Q g$k$12846$1MHp3Q g$n$12847$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12845$1MHp3Q
          g$k$12846$1MHp3Q
          g$n$12847$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '2))))
   (g$bytevector-u32-ref$12804$1MHp3Q
     g$bytevector-u32-ref$12915$1MHp3Q
     (case-lambda
       ((g$bytevector$12848$1MHp3Q
          g$k$12849$1MHp3Q
          g$endianness$12850$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12848$1MHp3Q
          g$k$12849$1MHp3Q
          g$endianness$12850$1MHp3Q
          '4))))
   (g$bytevector-s32-ref$12805$1MHp3Q
     g$bytevector-s32-ref$12916$1MHp3Q
     (case-lambda
       ((g$bytevector$12851$1MHp3Q
          g$k$12852$1MHp3Q
          g$endianness$12853$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12851$1MHp3Q
          g$k$12852$1MHp3Q
          g$endianness$12853$1MHp3Q
          '4))))
   (g$bytevector-u32-native-ref$12806$1MHp3Q
     g$bytevector-u32-native-ref$12917$1MHp3Q
     (case-lambda
       ((g$bytevector$12854$1MHp3Q g$k$12855$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12854$1MHp3Q
          g$k$12855$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '4))))
   (g$bytevector-s32-native-ref$12807$1MHp3Q
     g$bytevector-s32-native-ref$12918$1MHp3Q
     (case-lambda
       ((g$bytevector$12856$1MHp3Q g$k$12857$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12856$1MHp3Q
          g$k$12857$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '4))))
   (g$bytevector-u32-set!$12808$1MHp3Q
     g$bytevector-u32-set!$12919$1MHp3Q
     (case-lambda
       ((g$bytevector$12858$1MHp3Q
          g$k$12859$1MHp3Q
          g$n$12860$1MHp3Q
          g$endianness$12861$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12858$1MHp3Q
          g$k$12859$1MHp3Q
          g$n$12860$1MHp3Q
          g$endianness$12861$1MHp3Q
          '4))))
   (g$bytevector-s32-set!$12809$1MHp3Q
     g$bytevector-s32-set!$12920$1MHp3Q
     (case-lambda
       ((g$bytevector$12862$1MHp3Q
          g$k$12863$1MHp3Q
          g$n$12864$1MHp3Q
          g$endianness$12865$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12862$1MHp3Q
          g$k$12863$1MHp3Q
          g$n$12864$1MHp3Q
          g$endianness$12865$1MHp3Q
          '4))))
   (g$bytevector-u32-native-set!$12810$1MHp3Q
     g$bytevector-u32-native-set!$12921$1MHp3Q
     (case-lambda
       ((g$bytevector$12866$1MHp3Q g$k$12867$1MHp3Q g$n$12868$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12866$1MHp3Q
          g$k$12867$1MHp3Q
          g$n$12868$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '4))))
   (g$bytevector-s32-native-set!$12811$1MHp3Q
     g$bytevector-s32-native-set!$12922$1MHp3Q
     (case-lambda
       ((g$bytevector$12869$1MHp3Q g$k$12870$1MHp3Q g$n$12871$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12869$1MHp3Q
          g$k$12870$1MHp3Q
          g$n$12871$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '4))))
   (g$bytevector-u64-ref$12812$1MHp3Q
     g$bytevector-u64-ref$12923$1MHp3Q
     (case-lambda
       ((g$bytevector$12872$1MHp3Q
          g$k$12873$1MHp3Q
          g$endianness$12874$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12872$1MHp3Q
          g$k$12873$1MHp3Q
          g$endianness$12874$1MHp3Q
          '8))))
   (g$bytevector-s64-ref$12813$1MHp3Q
     g$bytevector-s64-ref$12924$1MHp3Q
     (case-lambda
       ((g$bytevector$12875$1MHp3Q
          g$k$12876$1MHp3Q
          g$endianness$12877$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12875$1MHp3Q
          g$k$12876$1MHp3Q
          g$endianness$12877$1MHp3Q
          '8))))
   (g$bytevector-u64-native-ref$12814$1MHp3Q
     g$bytevector-u64-native-ref$12925$1MHp3Q
     (case-lambda
       ((g$bytevector$12878$1MHp3Q g$k$12879$1MHp3Q)
        (bytevector-uint-ref
          g$bytevector$12878$1MHp3Q
          g$k$12879$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '8))))
   (g$bytevector-s64-native-ref$12815$1MHp3Q
     g$bytevector-s64-native-ref$12926$1MHp3Q
     (case-lambda
       ((g$bytevector$12880$1MHp3Q g$k$12881$1MHp3Q)
        (bytevector-sint-ref
          g$bytevector$12880$1MHp3Q
          g$k$12881$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '8))))
   (g$bytevector-u64-set!$12816$1MHp3Q
     g$bytevector-u64-set!$12927$1MHp3Q
     (case-lambda
       ((g$bytevector$12882$1MHp3Q
          g$k$12883$1MHp3Q
          g$n$12884$1MHp3Q
          g$endianness$12885$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12882$1MHp3Q
          g$k$12883$1MHp3Q
          g$n$12884$1MHp3Q
          g$endianness$12885$1MHp3Q
          '8))))
   (g$bytevector-s64-set!$12817$1MHp3Q
     g$bytevector-s64-set!$12928$1MHp3Q
     (case-lambda
       ((g$bytevector$12886$1MHp3Q
          g$k$12887$1MHp3Q
          g$n$12888$1MHp3Q
          g$endianness$12889$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12886$1MHp3Q
          g$k$12887$1MHp3Q
          g$n$12888$1MHp3Q
          g$endianness$12889$1MHp3Q
          '8))))
   (g$bytevector-u64-native-set!$12818$1MHp3Q
     g$bytevector-u64-native-set!$12929$1MHp3Q
     (case-lambda
       ((g$bytevector$12890$1MHp3Q g$k$12891$1MHp3Q g$n$12892$1MHp3Q)
        (bytevector-uint-set!
          g$bytevector$12890$1MHp3Q
          g$k$12891$1MHp3Q
          g$n$12892$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '8))))
   (g$bytevector-s64-native-set!$12819$1MHp3Q
     g$bytevector-s64-native-set!$12930$1MHp3Q
     (case-lambda
       ((g$bytevector$12893$1MHp3Q g$k$12894$1MHp3Q g$n$12895$1MHp3Q)
        (bytevector-sint-set!
          g$bytevector$12893$1MHp3Q
          g$k$12894$1MHp3Q
          g$n$12895$1MHp3Q
          (g$native-endianness$12795$1MHp3Q)
          '8))))
   (g$bytevector-ieee-single-native-ref$12820$1MHp3Q
     g$bytevector-ieee-single-native-ref$12931$1MHp3Q
     (case-lambda
       ((g$bytevector$12896$1MHp3Q g$k$12897$1MHp3Q)
        (if (not (g$zero?$13376$1MHp3Q
                   (g$mod$12674$1MHp3Q g$k$12897$1MHp3Q '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$12897$1MHp3Q)
          (bytevector-ieee-single-ref
            g$bytevector$12896$1MHp3Q
            g$k$12897$1MHp3Q
            (g$native-endianness$12795$1MHp3Q))))))
   (g$bytevector-ieee-double-native-ref$12821$1MHp3Q
     g$bytevector-ieee-double-native-ref$12932$1MHp3Q
     (case-lambda
       ((g$bytevector$12898$1MHp3Q g$k$12899$1MHp3Q)
        (if (not (g$zero?$13376$1MHp3Q
                   (g$mod$12674$1MHp3Q g$k$12899$1MHp3Q '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$12899$1MHp3Q)
          (bytevector-ieee-double-ref
            g$bytevector$12898$1MHp3Q
            g$k$12899$1MHp3Q
            (g$native-endianness$12795$1MHp3Q))))))
   (g$bytevector-ieee-single-native-set!$12822$1MHp3Q
     g$bytevector-ieee-single-native-set!$12933$1MHp3Q
     (case-lambda
       ((g$bytevector$12900$1MHp3Q g$k$12901$1MHp3Q g$x$12902$1MHp3Q)
        (if (not (g$zero?$13376$1MHp3Q
                   (g$mod$12674$1MHp3Q g$k$12901$1MHp3Q '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$12901$1MHp3Q)
          (bytevector-ieee-single-set!
            g$bytevector$12900$1MHp3Q
            g$k$12901$1MHp3Q
            g$x$12902$1MHp3Q
            (g$native-endianness$12795$1MHp3Q))))))
   (g$bytevector-ieee-double-native-set!$12823$1MHp3Q
     g$bytevector-ieee-double-native-set!$12934$1MHp3Q
     (case-lambda
       ((g$bytevector$12903$1MHp3Q g$k$12904$1MHp3Q g$x$12905$1MHp3Q)
        (if (not (g$zero?$13376$1MHp3Q
                   (g$mod$12674$1MHp3Q g$k$12904$1MHp3Q '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$12904$1MHp3Q)
          (bytevector-ieee-double-set!
            g$bytevector$12903$1MHp3Q
            g$k$12904$1MHp3Q
            g$x$12905$1MHp3Q
            (g$native-endianness$12795$1MHp3Q)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$12935$1MHp3Q
     g$bignum?$13343$1MHp3Q
     (case-lambda
       ((g$obj$13135$1MHp3Q)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$13135$1MHp3Q))))
   (g$ratnum?$12936$1MHp3Q
     g$ratnum?$13344$1MHp3Q
     (case-lambda
       ((g$obj$13136$1MHp3Q)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$13136$1MHp3Q))))
   (g$ratnum-denominator$12937$1MHp3Q
     g$ratnum-denominator$13345$1MHp3Q
     (case-lambda
       ((g$rat$13137$1MHp3Q)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$13137$1MHp3Q))))
   (g$ratnum-numerator$12938$1MHp3Q
     g$ratnum-numerator$13346$1MHp3Q
     (case-lambda
       ((g$rat$13138$1MHp3Q)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$13138$1MHp3Q))))
   (g$complexnum?$12939$1MHp3Q
     g$complexnum?$13347$1MHp3Q
     (case-lambda
       ((g$obj$13139$1MHp3Q)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$13139$1MHp3Q))))
   (g$make-complexnum$12940$1MHp3Q
     g$make-complexnum$13348$1MHp3Q
     (case-lambda
       ((g$r1$13140$1MHp3Q g$r2$13141$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$13140$1MHp3Q
          g$r2$13141$1MHp3Q))))
   (g$complexnum-imag-part$12941$1MHp3Q
     g$complexnum-imag-part$13349$1MHp3Q
     (case-lambda
       ((g$c$13142$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$13142$1MHp3Q))))
   (g$complexnum-real-part$12942$1MHp3Q
     g$complexnum-real-part$13350$1MHp3Q
     (case-lambda
       ((g$c$13143$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$13143$1MHp3Q))))
   (g$bignum/$12943$1MHp3Q
     g$bignum/$13351$1MHp3Q
     (case-lambda
       ((g$a$13144$1MHp3Q g$b$13145$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$13144$1MHp3Q
          g$b$13145$1MHp3Q))))
   (g$bignum%$12944$1MHp3Q
     g$bignum%$13352$1MHp3Q
     (case-lambda
       ((g$a$13146$1MHp3Q g$b$13147$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$13146$1MHp3Q
          g$b$13147$1MHp3Q))))
   (g$bignum->fixnum$12945$1MHp3Q
     g$bignum->fixnum$13353$1MHp3Q
     (case-lambda
       ((g$b$13148$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$13148$1MHp3Q))))
   (g$flonum->ratnum$12946$1MHp3Q
     g$flonum->ratnum$13354$1MHp3Q
     (case-lambda
       ((g$f$13149$1MHp3Q)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$13149$1MHp3Q))))
   (g$ratnum->flonum$12947$1MHp3Q
     g$ratnum->flonum$13355$1MHp3Q
     (case-lambda
       ((g$r$13150$1MHp3Q)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$13150$1MHp3Q
          '()))))
   (g$fixnum->bignum$12948$1MHp3Q
     g$fixnum->bignum$13356$1MHp3Q
     (case-lambda
       ((g$f$13151$1MHp3Q)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$13151$1MHp3Q))))
   (g$real->complexnum$12949$1MHp3Q
     g$real->complexnum$13357$1MHp3Q
     (case-lambda
       ((g$num$13152$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13152$1MHp3Q)
          g$num$13152$1MHp3Q
          (g$make-complexnum$12940$1MHp3Q
            (g$inexact$12971$1MHp3Q g$num$13152$1MHp3Q)
            '0.0)))))
   (g$->fixnum$12950$1MHp3Q
     g$->fixnum$13358$1MHp3Q
     (case-lambda
       ((g$num$13153$1MHp3Q)
        (if (g$fixnum?$12670$1MHp3Q g$num$13153$1MHp3Q)
          g$num$13153$1MHp3Q
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$13153$1MHp3Q)))))
   (g$->ratnum$12951$1MHp3Q
     g$->ratnum$13359$1MHp3Q
     (case-lambda
       ((g$num$13154$1MHp3Q)
        (if (g$ratnum?$12936$1MHp3Q g$num$13154$1MHp3Q)
          g$num$13154$1MHp3Q
          (if (g$real?$12962$1MHp3Q g$num$13154$1MHp3Q)
            (g$flonum->ratnum$12946$1MHp3Q
              (g$real->flonum$12953$1MHp3Q g$num$13154$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$13154$1MHp3Q)))))))
   (g$->bignum$12952$1MHp3Q
     g$->bignum$13360$1MHp3Q
     (case-lambda
       ((g$num$13155$1MHp3Q)
        (if (g$bignum?$12935$1MHp3Q g$num$13155$1MHp3Q)
          g$num$13155$1MHp3Q
          (if (g$fixnum?$12670$1MHp3Q g$num$13155$1MHp3Q)
            (g$fixnum->bignum$12948$1MHp3Q g$num$13155$1MHp3Q)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$13155$1MHp3Q)))))))
   (g$real->flonum$12953$1MHp3Q
     g$real->flonum$13361$1MHp3Q
     (case-lambda
       ((g$x$13156$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x$13156$1MHp3Q))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$13156$1MHp3Q)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$13156$1MHp3Q)))))
   (g$fixnum->flonum$12954$1MHp3Q
     g$fixnum->flonum$13362$1MHp3Q
     (case-lambda
       ((g$x$13157$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$13157$1MHp3Q))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$13157$1MHp3Q)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$13157$1MHp3Q))))))
   (g$number?$12955$1MHp3Q
     g$number?$13363$1MHp3Q
     (case-lambda
       ((g$obj$13158$1MHp3Q)
        ((case-lambda
           ((g$t$13159$1MHp3Q)
            (if g$t$13159$1MHp3Q
              g$t$13159$1MHp3Q
              ((case-lambda
                 ((g$t$13160$1MHp3Q)
                  (if g$t$13160$1MHp3Q
                    g$t$13160$1MHp3Q
                    ((case-lambda
                       ((g$t$13161$1MHp3Q)
                        (if g$t$13161$1MHp3Q
                          g$t$13161$1MHp3Q
                          ((case-lambda
                             ((g$t$13162$1MHp3Q)
                              (if g$t$13162$1MHp3Q
                                g$t$13162$1MHp3Q
                                (begin
                                  '#f
                                  (g$complexnum?$12939$1MHp3Q
                                    g$obj$13158$1MHp3Q)))))
                           (g$ratnum?$12936$1MHp3Q
                             g$obj$13158$1MHp3Q)))))
                     (g$bignum?$12935$1MHp3Q g$obj$13158$1MHp3Q)))))
               (g$flonum?$12671$1MHp3Q g$obj$13158$1MHp3Q)))))
         (g$fixnum?$12670$1MHp3Q g$obj$13158$1MHp3Q)))))
   (g$nan?$12956$1MHp3Q
     g$nan?$13364$1MHp3Q
     (case-lambda
       ((g$num$13163$1MHp3Q)
        (if ((case-lambda
               ((g$t$13164$1MHp3Q)
                (if g$t$13164$1MHp3Q
                  g$t$13164$1MHp3Q
                  ((case-lambda
                     ((g$t$13165$1MHp3Q)
                      (if g$t$13165$1MHp3Q
                        g$t$13165$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$num$13163$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$num$13163$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$num$13163$1MHp3Q))
          '#f
          (if (g$flonum?$12671$1MHp3Q g$num$13163$1MHp3Q)
            (g$flnan?$18127$1MHp3Q g$num$13163$1MHp3Q)
            (if (g$complexnum?$12939$1MHp3Q g$num$13163$1MHp3Q)
              ((case-lambda
                 ((g$t$13166$1MHp3Q)
                  (if g$t$13166$1MHp3Q
                    g$t$13166$1MHp3Q
                    (begin
                      '#f
                      (g$flnan?$18127$1MHp3Q
                        (g$complexnum-imag-part$12941$1MHp3Q
                          g$num$13163$1MHp3Q))))))
               (g$flnan?$18127$1MHp3Q
                 (g$complexnum-real-part$12942$1MHp3Q
                   g$num$13163$1MHp3Q)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$13163$1MHp3Q))))))))
   (g$finite?$12957$1MHp3Q
     g$finite?$13365$1MHp3Q
     (case-lambda
       ((g$num$13167$1MHp3Q)
        (if ((case-lambda
               ((g$t$13168$1MHp3Q)
                (if g$t$13168$1MHp3Q
                  g$t$13168$1MHp3Q
                  ((case-lambda
                     ((g$t$13169$1MHp3Q)
                      (if g$t$13169$1MHp3Q
                        g$t$13169$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$num$13167$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$num$13167$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$num$13167$1MHp3Q))
          '#t
          (if (g$flonum?$12671$1MHp3Q g$num$13167$1MHp3Q)
            (g$flfinite?$18124$1MHp3Q g$num$13167$1MHp3Q)
            (if (g$complexnum?$12939$1MHp3Q g$num$13167$1MHp3Q)
              (if (g$flfinite?$18124$1MHp3Q
                    (g$complexnum-real-part$12942$1MHp3Q
                      g$num$13167$1MHp3Q))
                (begin
                  '#f
                  (g$flfinite?$18124$1MHp3Q
                    (g$complexnum-imag-part$12941$1MHp3Q
                      g$num$13167$1MHp3Q)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$13167$1MHp3Q))))))))
   (g$infinite?$12958$1MHp3Q
     g$infinite?$13366$1MHp3Q
     (case-lambda
       ((g$num$13170$1MHp3Q)
        (if ((case-lambda
               ((g$t$13171$1MHp3Q)
                (if g$t$13171$1MHp3Q
                  g$t$13171$1MHp3Q
                  ((case-lambda
                     ((g$t$13172$1MHp3Q)
                      (if g$t$13172$1MHp3Q
                        g$t$13172$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$num$13170$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$num$13170$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$num$13170$1MHp3Q))
          '#f
          (if (g$flonum?$12671$1MHp3Q g$num$13170$1MHp3Q)
            (g$flinfinite?$18126$1MHp3Q g$num$13170$1MHp3Q)
            (if (g$complexnum?$12939$1MHp3Q g$num$13170$1MHp3Q)
              ((case-lambda
                 ((g$t$13173$1MHp3Q)
                  (if g$t$13173$1MHp3Q
                    g$t$13173$1MHp3Q
                    (begin
                      '#f
                      (g$flinfinite?$18126$1MHp3Q
                        (g$complexnum-imag-part$12941$1MHp3Q
                          g$num$13170$1MHp3Q))))))
               (g$flinfinite?$18126$1MHp3Q
                 (g$complexnum-real-part$12942$1MHp3Q
                   g$num$13170$1MHp3Q)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$13170$1MHp3Q))))))))
   (g$exact?$12959$1MHp3Q
     g$exact?$13367$1MHp3Q
     (case-lambda
       ((g$obj$13174$1MHp3Q)
        (if ((case-lambda
               ((g$t$13175$1MHp3Q)
                (if g$t$13175$1MHp3Q
                  g$t$13175$1MHp3Q
                  ((case-lambda
                     ((g$t$13176$1MHp3Q)
                      (if g$t$13176$1MHp3Q
                        g$t$13176$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$obj$13174$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13174$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13174$1MHp3Q))
          '#t
          (if ((case-lambda
                 ((g$t$13177$1MHp3Q)
                  (if g$t$13177$1MHp3Q
                    g$t$13177$1MHp3Q
                    (begin
                      '#f
                      (g$complexnum?$12939$1MHp3Q
                        g$obj$13174$1MHp3Q)))))
               (g$flonum?$12671$1MHp3Q g$obj$13174$1MHp3Q))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$13174$1MHp3Q)))))))
   (g$inexact?$12960$1MHp3Q
     g$inexact?$13368$1MHp3Q
     (case-lambda
       ((g$obj$13178$1MHp3Q)
        (if ((case-lambda
               ((g$t$13179$1MHp3Q)
                (if g$t$13179$1MHp3Q
                  g$t$13179$1MHp3Q
                  ((case-lambda
                     ((g$t$13180$1MHp3Q)
                      (if g$t$13180$1MHp3Q
                        g$t$13180$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$obj$13178$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13178$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13178$1MHp3Q))
          '#f
          (if ((case-lambda
                 ((g$t$13181$1MHp3Q)
                  (if g$t$13181$1MHp3Q
                    g$t$13181$1MHp3Q
                    (begin
                      '#f
                      (g$complexnum?$12939$1MHp3Q
                        g$obj$13178$1MHp3Q)))))
               (g$flonum?$12671$1MHp3Q g$obj$13178$1MHp3Q))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$13178$1MHp3Q)))))))
   (g$complex?$12961$1MHp3Q
     g$complex?$13369$1MHp3Q
     (case-lambda
       ((g$obj$13182$1MHp3Q)
        (g$number?$12955$1MHp3Q g$obj$13182$1MHp3Q))))
   (g$real?$12962$1MHp3Q
     g$real?$13370$1MHp3Q
     (case-lambda
       ((g$obj$13183$1MHp3Q)
        (if ((case-lambda
               ((g$t$13184$1MHp3Q)
                (if g$t$13184$1MHp3Q
                  g$t$13184$1MHp3Q
                  ((case-lambda
                     ((g$t$13185$1MHp3Q)
                      (if g$t$13185$1MHp3Q
                        g$t$13185$1MHp3Q
                        ((case-lambda
                           ((g$t$13186$1MHp3Q)
                            (if g$t$13186$1MHp3Q
                              g$t$13186$1MHp3Q
                              (begin
                                '#f
                                (g$flonum?$12671$1MHp3Q
                                  g$obj$13183$1MHp3Q)))))
                         (g$ratnum?$12936$1MHp3Q g$obj$13183$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13183$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13183$1MHp3Q))
          '#t
          (if (g$complexnum?$12939$1MHp3Q g$obj$13183$1MHp3Q)
            ((case-lambda
               ((g$i$13187$1MHp3Q)
                (if (g$zero?$12968$1MHp3Q g$i$13187$1MHp3Q)
                  (begin '#f (g$exact?$12959$1MHp3Q g$i$13187$1MHp3Q))
                  '#f)))
             (g$imag-part$13084$1MHp3Q g$obj$13183$1MHp3Q))
            (begin '#f '#f))))))
   (g$rational?$12963$1MHp3Q
     g$rational?$13371$1MHp3Q
     (case-lambda
       ((g$obj$13188$1MHp3Q)
        (if ((case-lambda
               ((g$t$13189$1MHp3Q)
                (if g$t$13189$1MHp3Q
                  g$t$13189$1MHp3Q
                  ((case-lambda
                     ((g$t$13190$1MHp3Q)
                      (if g$t$13190$1MHp3Q
                        g$t$13190$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$obj$13188$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13188$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13188$1MHp3Q))
          '#t
          (if (if ((case-lambda
                     ((g$t$13191$1MHp3Q)
                      (if g$t$13191$1MHp3Q
                        g$t$13191$1MHp3Q
                        (begin
                          '#f
                          (g$flonum?$12671$1MHp3Q
                            g$obj$13188$1MHp3Q)))))
                   (g$complexnum?$12939$1MHp3Q g$obj$13188$1MHp3Q))
                (if (g$finite?$12957$1MHp3Q g$obj$13188$1MHp3Q)
                  (begin
                    '#f
                    (not (g$nan?$12956$1MHp3Q g$obj$13188$1MHp3Q)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13192$1MHp3Q)
                (if (g$exact?$12959$1MHp3Q g$i$13192$1MHp3Q)
                  (begin '#f (g$zero?$12968$1MHp3Q g$i$13192$1MHp3Q))
                  '#f)))
             (g$imag-part$13084$1MHp3Q g$obj$13188$1MHp3Q))
            (begin '#f '#f))))))
   (g$integer?$12964$1MHp3Q
     g$integer?$13372$1MHp3Q
     (case-lambda
       ((g$obj$13193$1MHp3Q)
        (if ((case-lambda
               ((g$t$13194$1MHp3Q)
                (if g$t$13194$1MHp3Q
                  g$t$13194$1MHp3Q
                  (begin
                    '#f
                    (g$bignum?$12935$1MHp3Q g$obj$13193$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13193$1MHp3Q))
          '#t
          (if (if ((case-lambda
                     ((g$t$13195$1MHp3Q)
                      (if g$t$13195$1MHp3Q
                        g$t$13195$1MHp3Q
                        ((case-lambda
                           ((g$t$13196$1MHp3Q)
                            (if g$t$13196$1MHp3Q
                              g$t$13196$1MHp3Q
                              (begin
                                '#f
                                (g$flonum?$12671$1MHp3Q
                                  g$obj$13193$1MHp3Q)))))
                         (g$complexnum?$12939$1MHp3Q
                           g$obj$13193$1MHp3Q)))))
                   (g$ratnum?$12936$1MHp3Q g$obj$13193$1MHp3Q))
                (if (g$finite?$12957$1MHp3Q g$obj$13193$1MHp3Q)
                  (begin
                    '#f
                    (not (g$nan?$12956$1MHp3Q g$obj$13193$1MHp3Q)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13197$1MHp3Q)
                (if (g$exact?$12959$1MHp3Q g$i$13197$1MHp3Q)
                  (if (g$zero?$12968$1MHp3Q g$i$13197$1MHp3Q)
                    (begin
                      '#f
                      (g$=$13071$1MHp3Q
                        (g$denominator$13082$1MHp3Q
                          (g$real-part$13083$1MHp3Q g$obj$13193$1MHp3Q))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$13084$1MHp3Q g$obj$13193$1MHp3Q))
            (begin '#f '#f))))))
   (g$real-valued?$12965$1MHp3Q
     g$real-valued?$13373$1MHp3Q
     (case-lambda
       ((g$obj$13198$1MHp3Q)
        (if ((case-lambda
               ((g$t$13199$1MHp3Q)
                (if g$t$13199$1MHp3Q
                  g$t$13199$1MHp3Q
                  ((case-lambda
                     ((g$t$13200$1MHp3Q)
                      (if g$t$13200$1MHp3Q
                        g$t$13200$1MHp3Q
                        ((case-lambda
                           ((g$t$13201$1MHp3Q)
                            (if g$t$13201$1MHp3Q
                              g$t$13201$1MHp3Q
                              (begin
                                '#f
                                (g$flonum?$12671$1MHp3Q
                                  g$obj$13198$1MHp3Q)))))
                         (g$ratnum?$12936$1MHp3Q g$obj$13198$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13198$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13198$1MHp3Q))
          '#t
          (if (g$complexnum?$12939$1MHp3Q g$obj$13198$1MHp3Q)
            ((case-lambda
               ((g$i$13202$1MHp3Q)
                (g$zero?$12968$1MHp3Q g$i$13202$1MHp3Q)))
             (g$imag-part$13084$1MHp3Q g$obj$13198$1MHp3Q))
            (begin '#f '#f))))))
   (g$rational-valued?$12966$1MHp3Q
     g$rational-valued?$13374$1MHp3Q
     (case-lambda
       ((g$obj$13203$1MHp3Q)
        (if ((case-lambda
               ((g$t$13204$1MHp3Q)
                (if g$t$13204$1MHp3Q
                  g$t$13204$1MHp3Q
                  ((case-lambda
                     ((g$t$13205$1MHp3Q)
                      (if g$t$13205$1MHp3Q
                        g$t$13205$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$obj$13203$1MHp3Q)))))
                   (g$bignum?$12935$1MHp3Q g$obj$13203$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13203$1MHp3Q))
          '#t
          (if (if ((case-lambda
                     ((g$t$13206$1MHp3Q)
                      (if g$t$13206$1MHp3Q
                        g$t$13206$1MHp3Q
                        (begin
                          '#f
                          (g$flonum?$12671$1MHp3Q
                            g$obj$13203$1MHp3Q)))))
                   (g$complexnum?$12939$1MHp3Q g$obj$13203$1MHp3Q))
                (if (g$finite?$12957$1MHp3Q g$obj$13203$1MHp3Q)
                  (begin
                    '#f
                    (not (g$nan?$12956$1MHp3Q g$obj$13203$1MHp3Q)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13207$1MHp3Q)
                (g$zero?$12968$1MHp3Q g$i$13207$1MHp3Q)))
             (g$imag-part$13084$1MHp3Q g$obj$13203$1MHp3Q))
            (begin '#f '#f))))))
   (g$integer-valued?$12967$1MHp3Q
     g$integer-valued?$13375$1MHp3Q
     (case-lambda
       ((g$obj$13208$1MHp3Q)
        (if ((case-lambda
               ((g$t$13209$1MHp3Q)
                (if g$t$13209$1MHp3Q
                  g$t$13209$1MHp3Q
                  (begin
                    '#f
                    (g$bignum?$12935$1MHp3Q g$obj$13208$1MHp3Q)))))
             (g$fixnum?$12670$1MHp3Q g$obj$13208$1MHp3Q))
          '#t
          (if (if ((case-lambda
                     ((g$t$13210$1MHp3Q)
                      (if g$t$13210$1MHp3Q
                        g$t$13210$1MHp3Q
                        ((case-lambda
                           ((g$t$13211$1MHp3Q)
                            (if g$t$13211$1MHp3Q
                              g$t$13211$1MHp3Q
                              (begin
                                '#f
                                (g$flonum?$12671$1MHp3Q
                                  g$obj$13208$1MHp3Q)))))
                         (g$complexnum?$12939$1MHp3Q
                           g$obj$13208$1MHp3Q)))))
                   (g$ratnum?$12936$1MHp3Q g$obj$13208$1MHp3Q))
                (if (g$finite?$12957$1MHp3Q g$obj$13208$1MHp3Q)
                  (begin
                    '#f
                    (not (g$nan?$12956$1MHp3Q g$obj$13208$1MHp3Q)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13212$1MHp3Q)
                (if (g$zero?$12968$1MHp3Q g$i$13212$1MHp3Q)
                  (begin
                    '#f
                    (g$=$13071$1MHp3Q
                      (g$denominator$13082$1MHp3Q
                        (g$real-part$13083$1MHp3Q g$obj$13208$1MHp3Q))
                      '1))
                  '#f)))
             (g$imag-part$13084$1MHp3Q g$obj$13208$1MHp3Q))
            (begin '#f '#f))))))
   (g$zero?$12968$1MHp3Q
     g$zero?$13376$1MHp3Q
     (case-lambda
       ((g$num$13213$1MHp3Q)
        (begin
          (if (not (g$number?$12955$1MHp3Q g$num$13213$1MHp3Q))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$13213$1MHp3Q)
            (void))
          (g$=$13071$1MHp3Q g$num$13213$1MHp3Q '0)))))
   (g$positive?$12969$1MHp3Q
     g$positive?$13377$1MHp3Q
     (case-lambda
       ((g$num$13214$1MHp3Q)
        (begin
          (if (not (g$number?$12955$1MHp3Q g$num$13214$1MHp3Q))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$13214$1MHp3Q)
            (void))
          (g$>$13074$1MHp3Q g$num$13214$1MHp3Q '0)))))
   (g$negative?$12970$1MHp3Q
     g$negative?$13378$1MHp3Q
     (case-lambda
       ((g$num$13215$1MHp3Q)
        (begin
          (if (not (g$number?$12955$1MHp3Q g$num$13215$1MHp3Q))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$13215$1MHp3Q)
            (void))
          (g$<$13072$1MHp3Q g$num$13215$1MHp3Q '0)))))
   (g$inexact$12971$1MHp3Q
     g$inexact$13379$1MHp3Q
     (case-lambda
       ((g$num$13216$1MHp3Q)
        (if ((case-lambda
               ((g$t$13217$1MHp3Q)
                (if g$t$13217$1MHp3Q
                  g$t$13217$1MHp3Q
                  (begin
                    '#f
                    (g$flonum?$12671$1MHp3Q g$num$13216$1MHp3Q)))))
             (g$complexnum?$12939$1MHp3Q g$num$13216$1MHp3Q))
          g$num$13216$1MHp3Q
          (if ((case-lambda
                 ((g$t$13218$1MHp3Q)
                  (if g$t$13218$1MHp3Q
                    g$t$13218$1MHp3Q
                    (begin
                      '#f
                      (g$ratnum?$12936$1MHp3Q g$num$13216$1MHp3Q)))))
               (g$exact-integer?$13080$1MHp3Q g$num$13216$1MHp3Q))
            (g$real->flonum$12953$1MHp3Q g$num$13216$1MHp3Q)
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$num$13216$1MHp3Q)))))))
   (g$exact$12972$1MHp3Q
     g$exact$13380$1MHp3Q
     (case-lambda
       ((g$num$13219$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13219$1MHp3Q)
          (if (g$zero?$12968$1MHp3Q
                (g$complexnum-imag-part$12941$1MHp3Q
                  g$num$13219$1MHp3Q))
            (g$exact$12972$1MHp3Q
              (g$complexnum-real-part$12942$1MHp3Q g$num$13219$1MHp3Q))
            (assertion-violation
              'exact
              '"no exact equivalent"
              g$num$13219$1MHp3Q))
          (if (g$flonum?$12671$1MHp3Q g$num$13219$1MHp3Q)
            (if ((case-lambda
                   ((g$t$13220$1MHp3Q)
                    (if g$t$13220$1MHp3Q
                      g$t$13220$1MHp3Q
                      (begin
                        '#f
                        (g$flinfinite?$18126$1MHp3Q
                          g$num$13219$1MHp3Q)))))
                 (g$flnan?$18127$1MHp3Q g$num$13219$1MHp3Q))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$13219$1MHp3Q)
              (g$flonum->ratnum$12946$1MHp3Q g$num$13219$1MHp3Q))
            (if (g$bignum?$12935$1MHp3Q g$num$13219$1MHp3Q)
              (if (g$fx<=?$16567$1MHp3Q
                    (g$fixnum-width$12672$1MHp3Q)
                    (bitwise-length g$num$13219$1MHp3Q))
                g$num$13219$1MHp3Q
                (g$bignum->fixnum$12945$1MHp3Q g$num$13219$1MHp3Q))
              (if ((case-lambda
                     ((g$t$13221$1MHp3Q)
                      (if g$t$13221$1MHp3Q
                        g$t$13221$1MHp3Q
                        (begin
                          '#f
                          (g$ratnum?$12936$1MHp3Q
                            g$num$13219$1MHp3Q)))))
                   (g$fixnum?$12670$1MHp3Q g$num$13219$1MHp3Q))
                g$num$13219$1MHp3Q
                (begin
                  '#f
                  (assertion-violation
                    'exact
                    '"not a number"
                    g$num$13219$1MHp3Q)))))))))
   (g$=$13071$1MHp3Q
     g$=$13381$1MHp3Q
     (case-lambda
       ((g$a$13222$1MHp3Q g$b$13223$1MHp3Q)
        (if (if (g$real?$12962$1MHp3Q g$a$13222$1MHp3Q)
              (if (g$real?$12962$1MHp3Q g$b$13223$1MHp3Q)
                (if (g$finite?$12957$1MHp3Q g$a$13222$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$b$13223$1MHp3Q)
                    (if (not (g$nan?$12956$1MHp3Q g$a$13222$1MHp3Q))
                      (begin
                        '#f
                        (not (g$nan?$12956$1MHp3Q g$b$13223$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$12972$1MHp3Q g$a$13222$1MHp3Q)
              (g$exact$12972$1MHp3Q g$b$13223$1MHp3Q))
            '0)
          (if ((case-lambda
                 ((g$t$13224$1MHp3Q)
                  (if g$t$13224$1MHp3Q
                    g$t$13224$1MHp3Q
                    (begin
                      '#f
                      (g$nan?$12956$1MHp3Q g$b$13223$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$a$13222$1MHp3Q))
            '#f
            (if (if (g$number?$12955$1MHp3Q g$a$13222$1MHp3Q)
                  (begin '#f (g$number?$12955$1MHp3Q g$b$13223$1MHp3Q))
                  '#f)
              (inexact=?
                (g$inexact$12971$1MHp3Q g$a$13222$1MHp3Q)
                (g$inexact$12971$1MHp3Q g$b$13223$1MHp3Q))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$13222$1MHp3Q
                  g$b$13223$1MHp3Q))))))
       ((g$x1$13225$1MHp3Q g$x2$13226$1MHp3Q . g$rest$13227$1MHp3Q)
        ((letrec ((g$f$13228$1MHp3Q
                    (case-lambda
                      ((g$a$13229$1MHp3Q g$b$13230$1MHp3Q)
                       (if (null? g$b$13230$1MHp3Q)
                         '#t
                         (if (g$=$13071$1MHp3Q
                               g$a$13229$1MHp3Q
                               ($car g$b$13230$1MHp3Q))
                           (g$f$13228$1MHp3Q
                             ($car g$b$13230$1MHp3Q)
                             ($cdr g$b$13230$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$13228$1MHp3Q)
         g$x1$13225$1MHp3Q
         (cons g$x2$13226$1MHp3Q g$rest$13227$1MHp3Q)))))
   (g$<$13072$1MHp3Q
     g$<$13382$1MHp3Q
     (case-lambda
       ((g$a$13231$1MHp3Q g$b$13232$1MHp3Q)
        (if (if (g$real?$12962$1MHp3Q g$a$13231$1MHp3Q)
              (if (g$real?$12962$1MHp3Q g$b$13232$1MHp3Q)
                (if (g$finite?$12957$1MHp3Q g$a$13231$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$b$13232$1MHp3Q)
                    (if (not (g$nan?$12956$1MHp3Q g$a$13231$1MHp3Q))
                      (begin
                        '#f
                        (not (g$nan?$12956$1MHp3Q g$b$13232$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$12972$1MHp3Q g$a$13231$1MHp3Q)
              (g$exact$12972$1MHp3Q g$b$13232$1MHp3Q))
            '0)
          (if ((case-lambda
                 ((g$t$13233$1MHp3Q)
                  (if g$t$13233$1MHp3Q
                    g$t$13233$1MHp3Q
                    (begin
                      '#f
                      (g$nan?$12956$1MHp3Q g$b$13232$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$a$13231$1MHp3Q))
            '#f
            (if (if (g$real?$12962$1MHp3Q g$a$13231$1MHp3Q)
                  (begin '#f (g$real?$12962$1MHp3Q g$b$13232$1MHp3Q))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$12971$1MHp3Q g$a$13231$1MHp3Q)
                  (g$inexact$12971$1MHp3Q g$b$13232$1MHp3Q))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$13231$1MHp3Q
                  g$b$13232$1MHp3Q))))))
       ((g$x1$13234$1MHp3Q g$x2$13235$1MHp3Q . g$rest$13236$1MHp3Q)
        ((letrec ((g$f$13237$1MHp3Q
                    (case-lambda
                      ((g$a$13238$1MHp3Q g$b$13239$1MHp3Q)
                       (if (null? g$b$13239$1MHp3Q)
                         '#t
                         (if (g$<$13072$1MHp3Q
                               g$a$13238$1MHp3Q
                               ($car g$b$13239$1MHp3Q))
                           (g$f$13237$1MHp3Q
                             ($car g$b$13239$1MHp3Q)
                             ($cdr g$b$13239$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$13237$1MHp3Q)
         g$x1$13234$1MHp3Q
         (cons g$x2$13235$1MHp3Q g$rest$13236$1MHp3Q)))))
   (g$<=$13073$1MHp3Q
     g$<=$13383$1MHp3Q
     (case-lambda
       ((g$a$13240$1MHp3Q g$b$13241$1MHp3Q)
        (if (if (g$real?$12962$1MHp3Q g$a$13240$1MHp3Q)
              (if (g$real?$12962$1MHp3Q g$b$13241$1MHp3Q)
                (if (g$finite?$12957$1MHp3Q g$a$13240$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$b$13241$1MHp3Q)
                    (if (not (g$nan?$12956$1MHp3Q g$a$13240$1MHp3Q))
                      (begin
                        '#f
                        (not (g$nan?$12956$1MHp3Q g$b$13241$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$12972$1MHp3Q g$a$13240$1MHp3Q)
              (g$exact$12972$1MHp3Q g$b$13241$1MHp3Q))
            '0)
          (if ((case-lambda
                 ((g$t$13242$1MHp3Q)
                  (if g$t$13242$1MHp3Q
                    g$t$13242$1MHp3Q
                    (begin
                      '#f
                      (g$nan?$12956$1MHp3Q g$b$13241$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$a$13240$1MHp3Q))
            '#f
            (if (if (g$real?$12962$1MHp3Q g$a$13240$1MHp3Q)
                  (begin '#f (g$real?$12962$1MHp3Q g$b$13241$1MHp3Q))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$12971$1MHp3Q g$a$13240$1MHp3Q)
                  (g$inexact$12971$1MHp3Q g$b$13241$1MHp3Q))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$13240$1MHp3Q
                  g$b$13241$1MHp3Q))))))
       ((g$x1$13243$1MHp3Q g$x2$13244$1MHp3Q . g$rest$13245$1MHp3Q)
        ((letrec ((g$f$13246$1MHp3Q
                    (case-lambda
                      ((g$a$13247$1MHp3Q g$b$13248$1MHp3Q)
                       (if (null? g$b$13248$1MHp3Q)
                         '#t
                         (if (g$<=$13073$1MHp3Q
                               g$a$13247$1MHp3Q
                               ($car g$b$13248$1MHp3Q))
                           (g$f$13246$1MHp3Q
                             ($car g$b$13248$1MHp3Q)
                             ($cdr g$b$13248$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$13246$1MHp3Q)
         g$x1$13243$1MHp3Q
         (cons g$x2$13244$1MHp3Q g$rest$13245$1MHp3Q)))))
   (g$>$13074$1MHp3Q
     g$>$13384$1MHp3Q
     (case-lambda
       ((g$a$13249$1MHp3Q g$b$13250$1MHp3Q)
        (if (if (g$real?$12962$1MHp3Q g$a$13249$1MHp3Q)
              (if (g$real?$12962$1MHp3Q g$b$13250$1MHp3Q)
                (if (g$finite?$12957$1MHp3Q g$a$13249$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$b$13250$1MHp3Q)
                    (if (not (g$nan?$12956$1MHp3Q g$a$13249$1MHp3Q))
                      (begin
                        '#f
                        (not (g$nan?$12956$1MHp3Q g$b$13250$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$12972$1MHp3Q g$a$13249$1MHp3Q)
              (g$exact$12972$1MHp3Q g$b$13250$1MHp3Q))
            '0)
          (if ((case-lambda
                 ((g$t$13251$1MHp3Q)
                  (if g$t$13251$1MHp3Q
                    g$t$13251$1MHp3Q
                    (begin
                      '#f
                      (g$nan?$12956$1MHp3Q g$b$13250$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$a$13249$1MHp3Q))
            '#f
            (if (if (g$real?$12962$1MHp3Q g$a$13249$1MHp3Q)
                  (begin '#f (g$real?$12962$1MHp3Q g$b$13250$1MHp3Q))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$12971$1MHp3Q g$a$13249$1MHp3Q)
                  (g$inexact$12971$1MHp3Q g$b$13250$1MHp3Q))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$13249$1MHp3Q
                  g$b$13250$1MHp3Q))))))
       ((g$x1$13252$1MHp3Q g$x2$13253$1MHp3Q . g$rest$13254$1MHp3Q)
        ((letrec ((g$f$13255$1MHp3Q
                    (case-lambda
                      ((g$a$13256$1MHp3Q g$b$13257$1MHp3Q)
                       (if (null? g$b$13257$1MHp3Q)
                         '#t
                         (if (g$>$13074$1MHp3Q
                               g$a$13256$1MHp3Q
                               ($car g$b$13257$1MHp3Q))
                           (g$f$13255$1MHp3Q
                             ($car g$b$13257$1MHp3Q)
                             ($cdr g$b$13257$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$13255$1MHp3Q)
         g$x1$13252$1MHp3Q
         (cons g$x2$13253$1MHp3Q g$rest$13254$1MHp3Q)))))
   (g$>=$13075$1MHp3Q
     g$>=$13385$1MHp3Q
     (case-lambda
       ((g$a$13258$1MHp3Q g$b$13259$1MHp3Q)
        (if (if (g$real?$12962$1MHp3Q g$a$13258$1MHp3Q)
              (if (g$real?$12962$1MHp3Q g$b$13259$1MHp3Q)
                (if (g$finite?$12957$1MHp3Q g$a$13258$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$b$13259$1MHp3Q)
                    (if (not (g$nan?$12956$1MHp3Q g$a$13258$1MHp3Q))
                      (begin
                        '#f
                        (not (g$nan?$12956$1MHp3Q g$b$13259$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$12972$1MHp3Q g$a$13258$1MHp3Q)
              (g$exact$12972$1MHp3Q g$b$13259$1MHp3Q))
            '0)
          (if ((case-lambda
                 ((g$t$13260$1MHp3Q)
                  (if g$t$13260$1MHp3Q
                    g$t$13260$1MHp3Q
                    (begin
                      '#f
                      (g$nan?$12956$1MHp3Q g$b$13259$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$a$13258$1MHp3Q))
            '#f
            (if (if (g$real?$12962$1MHp3Q g$a$13258$1MHp3Q)
                  (begin '#f (g$real?$12962$1MHp3Q g$b$13259$1MHp3Q))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$12971$1MHp3Q g$a$13258$1MHp3Q)
                  (g$inexact$12971$1MHp3Q g$b$13259$1MHp3Q))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$13258$1MHp3Q
                  g$b$13259$1MHp3Q))))))
       ((g$x1$13261$1MHp3Q g$x2$13262$1MHp3Q . g$rest$13263$1MHp3Q)
        ((letrec ((g$f$13264$1MHp3Q
                    (case-lambda
                      ((g$a$13265$1MHp3Q g$b$13266$1MHp3Q)
                       (if (null? g$b$13266$1MHp3Q)
                         '#t
                         (if (g$>=$13075$1MHp3Q
                               g$a$13265$1MHp3Q
                               ($car g$b$13266$1MHp3Q))
                           (g$f$13264$1MHp3Q
                             ($car g$b$13266$1MHp3Q)
                             ($cdr g$b$13266$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$13264$1MHp3Q)
         g$x1$13261$1MHp3Q
         (cons g$x2$13262$1MHp3Q g$rest$13263$1MHp3Q)))))
   (g$make-rectangular$13076$1MHp3Q
     g$make-rectangular$13386$1MHp3Q
     (case-lambda
       ((g$r1$13267$1MHp3Q g$r2$13268$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$r1$13267$1MHp3Q))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$13267$1MHp3Q)
            (void))
          (if (not (g$real?$12962$1MHp3Q g$r2$13268$1MHp3Q))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$13268$1MHp3Q)
            (void))
          (if (if (g$exact?$12959$1MHp3Q g$r2$13268$1MHp3Q)
                (begin '#f (g$zero?$12968$1MHp3Q g$r2$13268$1MHp3Q))
                '#f)
            g$r1$13267$1MHp3Q
            (g$make-complexnum$12940$1MHp3Q
              (g$inexact$12971$1MHp3Q g$r1$13267$1MHp3Q)
              (g$inexact$12971$1MHp3Q g$r2$13268$1MHp3Q)))))))
   (g$make-polar$13077$1MHp3Q
     g$make-polar$13387$1MHp3Q
     (case-lambda
       ((g$r1$13269$1MHp3Q g$r2$13270$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$r1$13269$1MHp3Q))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$13269$1MHp3Q)
            (void))
          (if (not (g$real?$12962$1MHp3Q g$r2$13270$1MHp3Q))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$13270$1MHp3Q)
            (void))
          (if (if (g$exact?$12959$1MHp3Q g$r2$13270$1MHp3Q)
                (begin '#f (g$zero?$12968$1MHp3Q g$r2$13270$1MHp3Q))
                '#f)
            g$r1$13269$1MHp3Q
            (* g$r1$13269$1MHp3Q
               (g$make-rectangular$13076$1MHp3Q
                 (g$cos$13119$1MHp3Q g$r2$13270$1MHp3Q)
                 (g$sin$13116$1MHp3Q g$r2$13270$1MHp3Q))))))))
   (g$angle$13078$1MHp3Q
     g$angle$13388$1MHp3Q
     (case-lambda
       ((g$num$13271$1MHp3Q)
        (begin
          (if (not (g$number?$12955$1MHp3Q g$num$13271$1MHp3Q))
            (assertion-violation
              'angle
              '"not a number"
              g$num$13271$1MHp3Q)
            (void))
          (g$atan$13124$1MHp3Q
            (g$imag-part$13084$1MHp3Q g$num$13271$1MHp3Q)
            (g$real-part$13083$1MHp3Q g$num$13271$1MHp3Q))))))
   (g$magnitude$13079$1MHp3Q
     g$magnitude$13389$1MHp3Q
     (case-lambda
       ((g$num$13272$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13272$1MHp3Q)
          ((case-lambda
             ((g$i$13273$1MHp3Q g$r$13274$1MHp3Q)
              (g$sqrt$13132$1MHp3Q
                (+ (* g$i$13273$1MHp3Q g$i$13273$1MHp3Q)
                   (* g$r$13274$1MHp3Q g$r$13274$1MHp3Q)))))
           (g$imag-part$13084$1MHp3Q g$num$13272$1MHp3Q)
           (g$real-part$13083$1MHp3Q g$num$13272$1MHp3Q))
          (if (g$real?$12962$1MHp3Q g$num$13272$1MHp3Q)
            (g$abs$13127$1MHp3Q g$num$13272$1MHp3Q)
            (begin
              '#f
              (assertion-violation
                'magnitude
                '"not a number"
                g$num$13272$1MHp3Q)))))))
   (g$exact-integer?$13080$1MHp3Q
     g$exact-integer?$13390$1MHp3Q
     (case-lambda
       ((g$obj$13275$1MHp3Q)
        ((case-lambda
           ((g$t$13276$1MHp3Q)
            (if g$t$13276$1MHp3Q
              g$t$13276$1MHp3Q
              (begin '#f (g$bignum?$12935$1MHp3Q g$obj$13275$1MHp3Q)))))
         (g$fixnum?$12670$1MHp3Q g$obj$13275$1MHp3Q)))))
   (g$numerator$13081$1MHp3Q
     g$numerator$13391$1MHp3Q
     (case-lambda
       ((g$num$13277$1MHp3Q)
        (if (g$exact-integer?$13080$1MHp3Q g$num$13277$1MHp3Q)
          g$num$13277$1MHp3Q
          (if (g$ratnum?$12936$1MHp3Q g$num$13277$1MHp3Q)
            (g$exact$12972$1MHp3Q
              (g$ratnum-numerator$12938$1MHp3Q g$num$13277$1MHp3Q))
            (if (if (g$real?$12962$1MHp3Q g$num$13277$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$num$13277$1MHp3Q)
                    (begin
                      '#f
                      (not (g$nan?$12956$1MHp3Q g$num$13277$1MHp3Q)))
                    '#f)
                  '#f)
              (g$inexact$12971$1MHp3Q
                (g$numerator$13081$1MHp3Q
                  (g$exact$12972$1MHp3Q g$num$13277$1MHp3Q)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$13277$1MHp3Q))))))))
   (g$denominator$13082$1MHp3Q
     g$denominator$13392$1MHp3Q
     (case-lambda
       ((g$num$13278$1MHp3Q)
        (if (g$exact-integer?$13080$1MHp3Q g$num$13278$1MHp3Q)
          '1
          (if (g$ratnum?$12936$1MHp3Q g$num$13278$1MHp3Q)
            (g$exact$12972$1MHp3Q
              (g$ratnum-denominator$12937$1MHp3Q g$num$13278$1MHp3Q))
            (if (if (g$real?$12962$1MHp3Q g$num$13278$1MHp3Q)
                  (if (g$finite?$12957$1MHp3Q g$num$13278$1MHp3Q)
                    (begin
                      '#f
                      (not (g$nan?$12956$1MHp3Q g$num$13278$1MHp3Q)))
                    '#f)
                  '#f)
              (g$inexact$12971$1MHp3Q
                (g$denominator$13082$1MHp3Q
                  (g$exact$12972$1MHp3Q g$num$13278$1MHp3Q)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$13278$1MHp3Q))))))))
   (g$real-part$13083$1MHp3Q
     g$real-part$13393$1MHp3Q
     (case-lambda
       ((g$num$13279$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13279$1MHp3Q)
          (g$complexnum-real-part$12942$1MHp3Q g$num$13279$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13279$1MHp3Q)
            g$num$13279$1MHp3Q
            (begin
              '#f
              (assertion-violation
                'real-part
                '"not a number"
                g$num$13279$1MHp3Q)))))))
   (g$imag-part$13084$1MHp3Q
     g$imag-part$13394$1MHp3Q
     (case-lambda
       ((g$num$13280$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13280$1MHp3Q)
          (g$complexnum-imag-part$12941$1MHp3Q g$num$13280$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13280$1MHp3Q)
            '0
            (begin
              '#f
              (assertion-violation
                'imag-part
                '"not a number"
                g$num$13280$1MHp3Q)))))))
   (g$exp$13115$1MHp3Q
     g$exp$13395$1MHp3Q
     (case-lambda
       ((g$num$13281$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13281$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'exp
            '()
            g$num$13281$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13281$1MHp3Q)
            (clr-call-internal
              'System.Math
              'exp
              '()
              (g$inexact$12971$1MHp3Q g$num$13281$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'exp
                '"not a number"
                g$num$13281$1MHp3Q)))))))
   (g$sin$13116$1MHp3Q
     g$sin$13396$1MHp3Q
     (case-lambda
       ((g$num$13282$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13282$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'sin
            '()
            g$num$13282$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13282$1MHp3Q)
            (clr-call-internal
              'System.Math
              'sin
              '()
              (g$inexact$12971$1MHp3Q g$num$13282$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'sin
                '"not a number"
                g$num$13282$1MHp3Q)))))))
   (g$asin$13117$1MHp3Q
     g$asin$13397$1MHp3Q
     (case-lambda
       ((g$num$13283$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13283$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'asin
            '()
            g$num$13283$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13283$1MHp3Q)
            (clr-call-internal
              'System.Math
              'asin
              '()
              (g$inexact$12971$1MHp3Q g$num$13283$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'asin
                '"not a number"
                g$num$13283$1MHp3Q)))))))
   (g$sinh$13118$1MHp3Q
     g$sinh$13398$1MHp3Q
     (case-lambda
       ((g$num$13284$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13284$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'sinh
            '()
            g$num$13284$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13284$1MHp3Q)
            (clr-call-internal
              'System.Math
              'sinh
              '()
              (g$inexact$12971$1MHp3Q g$num$13284$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'sinh
                '"not a number"
                g$num$13284$1MHp3Q)))))))
   (g$cos$13119$1MHp3Q
     g$cos$13399$1MHp3Q
     (case-lambda
       ((g$num$13285$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13285$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'cos
            '()
            g$num$13285$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13285$1MHp3Q)
            (clr-call-internal
              'System.Math
              'cos
              '()
              (g$inexact$12971$1MHp3Q g$num$13285$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'cos
                '"not a number"
                g$num$13285$1MHp3Q)))))))
   (g$acos$13120$1MHp3Q
     g$acos$13400$1MHp3Q
     (case-lambda
       ((g$num$13286$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13286$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'acos
            '()
            g$num$13286$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13286$1MHp3Q)
            (clr-call-internal
              'System.Math
              'acos
              '()
              (g$inexact$12971$1MHp3Q g$num$13286$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'acos
                '"not a number"
                g$num$13286$1MHp3Q)))))))
   (g$cosh$13121$1MHp3Q
     g$cosh$13401$1MHp3Q
     (case-lambda
       ((g$num$13287$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13287$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'cosh
            '()
            g$num$13287$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13287$1MHp3Q)
            (clr-call-internal
              'System.Math
              'cosh
              '()
              (g$inexact$12971$1MHp3Q g$num$13287$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'cosh
                '"not a number"
                g$num$13287$1MHp3Q)))))))
   (g$tan$13122$1MHp3Q
     g$tan$13402$1MHp3Q
     (case-lambda
       ((g$num$13288$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13288$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'tan
            '()
            g$num$13288$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13288$1MHp3Q)
            (clr-call-internal
              'System.Math
              'tan
              '()
              (g$inexact$12971$1MHp3Q g$num$13288$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'tan
                '"not a number"
                g$num$13288$1MHp3Q)))))))
   (g$tanh$13123$1MHp3Q
     g$tanh$13403$1MHp3Q
     (case-lambda
       ((g$num$13289$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13289$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'tanh
            '()
            g$num$13289$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13289$1MHp3Q)
            (clr-call-internal
              'System.Math
              'tanh
              '()
              (g$inexact$12971$1MHp3Q g$num$13289$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'tanh
                '"not a number"
                g$num$13289$1MHp3Q)))))))
   (g$atan$13124$1MHp3Q
     g$atan$13404$1MHp3Q
     (case-lambda
       ((g$num$13290$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13290$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'Atan
            '()
            g$num$13290$1MHp3Q)
          (if (g$real?$12962$1MHp3Q g$num$13290$1MHp3Q)
            (clr-call-internal
              'System.Math
              'Atan
              '()
              (g$inexact$12971$1MHp3Q g$num$13290$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'atan
                '"not a number"
                g$num$13290$1MHp3Q)))))
       ((g$num1$13291$1MHp3Q g$num2$13292$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$num1$13291$1MHp3Q))
            (assertion-violation
              'atan
              '"not a real"
              g$num1$13291$1MHp3Q)
            (void))
          (if (not (g$real?$12962$1MHp3Q g$num2$13292$1MHp3Q))
            (assertion-violation
              'atan
              '"not a real"
              g$num2$13292$1MHp3Q)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$12971$1MHp3Q g$num1$13291$1MHp3Q)
            (g$inexact$12971$1MHp3Q g$num2$13292$1MHp3Q))))))
   (g$log$13125$1MHp3Q
     g$log$13405$1MHp3Q
     (case-lambda
       ((g$num$13293$1MHp3Q)
        (begin
          (if (not (g$number?$12955$1MHp3Q g$num$13293$1MHp3Q))
            (assertion-violation
              'atan
              '"not a number"
              g$num$13293$1MHp3Q)
            (void))
          (if (g$complexnum?$12939$1MHp3Q g$num$13293$1MHp3Q)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Log
              '()
              g$num$13293$1MHp3Q)
            (if (g$negative?$12970$1MHp3Q g$num$13293$1MHp3Q)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                (g$make-complexnum$12940$1MHp3Q
                  (g$inexact$12971$1MHp3Q g$num$13293$1MHp3Q)
                  '0.0))
              (if (g$zero?$12968$1MHp3Q g$num$13293$1MHp3Q)
                (if (g$exact?$12959$1MHp3Q g$num$13293$1MHp3Q)
                  (assertion-violation
                    'log
                    '"not possible"
                    g$num$13293$1MHp3Q)
                  '-inf.0)
                (if (g$infinite?$12958$1MHp3Q g$num$13293$1MHp3Q)
                  (if (g$negative?$12970$1MHp3Q g$num$13293$1MHp3Q)
                    (g$make-complexnum$12940$1MHp3Q
                      (g$inexact$12971$1MHp3Q
                        (g$abs$13127$1MHp3Q g$num$13293$1MHp3Q))
                      '0)
                    g$num$13293$1MHp3Q)
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      'Log
                      '()
                      (g$inexact$12971$1MHp3Q
                        g$num$13293$1MHp3Q)))))))))
       ((g$num1$13294$1MHp3Q g$num2$13295$1MHp3Q)
        (/ (g$log$13125$1MHp3Q g$num1$13294$1MHp3Q)
           (g$log$13125$1MHp3Q g$num2$13295$1MHp3Q)))))
   (g$div$13126$1MHp3Q
     g$div$13406$1MHp3Q
     (case-lambda
       ((g$x1$13296$1MHp3Q g$x2$13297$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x1$13296$1MHp3Q))
            (assertion-violation 'div '"not a real" g$x1$13296$1MHp3Q)
            (void))
          (if (not (g$real?$12962$1MHp3Q g$x2$13297$1MHp3Q))
            (assertion-violation 'div '"not a real" g$x2$13297$1MHp3Q)
            (void))
          (if (g$zero?$12968$1MHp3Q g$x2$13297$1MHp3Q)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$13296$1MHp3Q
              g$x2$13297$1MHp3Q)
            (void))
          (if ((case-lambda
                 ((g$t$13298$1MHp3Q)
                  (if g$t$13298$1MHp3Q
                    g$t$13298$1MHp3Q
                    (begin
                      '#f
                      (g$infinite?$12958$1MHp3Q g$x1$13296$1MHp3Q)))))
               (g$nan?$12956$1MHp3Q g$x1$13296$1MHp3Q))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$13296$1MHp3Q
              g$x2$13297$1MHp3Q)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$12959$1MHp3Q g$x1$13296$1MHp3Q)
                     (begin
                       '#f
                       (g$exact?$12959$1MHp3Q g$x2$13297$1MHp3Q))
                     '#f)
                 ((case-lambda
                    ((g$scale$13302$1MHp3Q)
                     (values
                       (* g$x1$13296$1MHp3Q g$scale$13302$1MHp3Q)
                       (* g$x2$13297$1MHp3Q g$scale$13302$1MHp3Q)
                       '#t)))
                  (* (g$denominator$13082$1MHp3Q g$x1$13296$1MHp3Q)
                     (g$denominator$13082$1MHp3Q g$x2$13297$1MHp3Q)))
                 (values g$x1$13296$1MHp3Q g$x2$13297$1MHp3Q '#f))))
            (case-lambda
              ((g$x1$13303$1MHp3Q
                 g$x2$13304$1MHp3Q
                 g$exact-args?$13305$1MHp3Q)
               ((case-lambda
                  ((g$exact-args?$13306$1MHp3Q
                     g$x2$13307$1MHp3Q
                     g$x1$13308$1MHp3Q)
                   ((case-lambda
                      ((g$d$13309$1MHp3Q)
                       (if (if g$exact-args?$13306$1MHp3Q
                             (begin
                               '#f
                               (g$rational-valued?$12966$1MHp3Q
                                 g$d$13309$1MHp3Q))
                             '#f)
                         (g$exact$12972$1MHp3Q g$d$13309$1MHp3Q)
                         g$d$13309$1MHp3Q)))
                    (if (g$positive?$12969$1MHp3Q g$x2$13307$1MHp3Q)
                      (g$floor$13128$1MHp3Q
                        (/ g$x1$13308$1MHp3Q g$x2$13307$1MHp3Q))
                      (- (g$floor$13128$1MHp3Q
                           (/ g$x1$13308$1MHp3Q
                              (- g$x2$13307$1MHp3Q))))))))
                g$exact-args?$13305$1MHp3Q
                g$x2$13304$1MHp3Q
                g$x1$13303$1MHp3Q))))))))
   (g$abs$13127$1MHp3Q
     g$abs$13407$1MHp3Q
     (case-lambda
       ((g$x1$13310$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x1$13310$1MHp3Q))
            (assertion-violation 'abs '"not a real" g$x1$13310$1MHp3Q)
            (void))
          (if (g$negative?$12970$1MHp3Q g$x1$13310$1MHp3Q)
            (- g$x1$13310$1MHp3Q)
            g$x1$13310$1MHp3Q)))))
   (g$floor$13128$1MHp3Q
     g$floor$13408$1MHp3Q
     (case-lambda
       ((g$x$13311$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x$13311$1MHp3Q))
            (assertion-violation 'floor '"not a real" g$x$13311$1MHp3Q)
            (void))
          (if (g$exact-integer?$13080$1MHp3Q g$x$13311$1MHp3Q)
            g$x$13311$1MHp3Q
            (if (g$ratnum?$12936$1MHp3Q g$x$13311$1MHp3Q)
              ((case-lambda
                 ((g$r$13312$1MHp3Q)
                  (g$exact$12972$1MHp3Q
                    (if (g$negative?$12970$1MHp3Q g$x$13311$1MHp3Q)
                      (- g$r$13312$1MHp3Q '1)
                      g$r$13312$1MHp3Q))))
               (g$bignum/$12943$1MHp3Q
                 (g$ratnum-numerator$12938$1MHp3Q g$x$13311$1MHp3Q)
                 (g$ratnum-denominator$12937$1MHp3Q g$x$13311$1MHp3Q)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$12971$1MHp3Q g$x$13311$1MHp3Q)))))))))
   (g$ceiling$13129$1MHp3Q
     g$ceiling$13409$1MHp3Q
     (case-lambda
       ((g$x$13313$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x$13313$1MHp3Q))
            (assertion-violation
              'ceiling
              '"not a real"
              g$x$13313$1MHp3Q)
            (void))
          (if (g$exact-integer?$13080$1MHp3Q g$x$13313$1MHp3Q)
            g$x$13313$1MHp3Q
            (if (g$ratnum?$12936$1MHp3Q g$x$13313$1MHp3Q)
              ((case-lambda
                 ((g$r$13314$1MHp3Q)
                  (g$exact$12972$1MHp3Q
                    (if (g$positive?$12969$1MHp3Q g$r$13314$1MHp3Q)
                      (+ g$r$13314$1MHp3Q '1)
                      g$r$13314$1MHp3Q))))
               (g$bignum/$12943$1MHp3Q
                 (g$ratnum-numerator$12938$1MHp3Q g$x$13313$1MHp3Q)
                 (g$ratnum-denominator$12937$1MHp3Q g$x$13313$1MHp3Q)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$12971$1MHp3Q g$x$13313$1MHp3Q)))))))))
   (g$truncate$13130$1MHp3Q
     g$truncate$13410$1MHp3Q
     (case-lambda
       ((g$x$13315$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x$13315$1MHp3Q))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$13315$1MHp3Q)
            (void))
          (if (g$exact-integer?$13080$1MHp3Q g$x$13315$1MHp3Q)
            g$x$13315$1MHp3Q
            (begin
              '#f
              ((case-lambda
                 ((g$r$13316$1MHp3Q)
                  (if (g$exact?$12959$1MHp3Q g$x$13315$1MHp3Q)
                    (g$exact$12972$1MHp3Q g$r$13316$1MHp3Q)
                    g$r$13316$1MHp3Q)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$12971$1MHp3Q g$x$13315$1MHp3Q)))))))))
   (g$round$13131$1MHp3Q
     g$round$13411$1MHp3Q
     (case-lambda
       ((g$x$13317$1MHp3Q)
        (begin
          (if (not (g$real?$12962$1MHp3Q g$x$13317$1MHp3Q))
            (assertion-violation 'round '"not a real" g$x$13317$1MHp3Q)
            (void))
          (if (g$exact-integer?$13080$1MHp3Q g$x$13317$1MHp3Q)
            g$x$13317$1MHp3Q
            (if (g$ratnum?$12936$1MHp3Q g$x$13317$1MHp3Q)
              ((case-lambda
                 ((g$num$13318$1MHp3Q)
                  ((case-lambda
                     ((g$den$13319$1MHp3Q)
                      ((case-lambda
                         ((g$d$13320$1MHp3Q)
                          ((case-lambda
                             ((g$r$13321$1MHp3Q)
                              ((case-lambda
                                 ((g$hd$13322$1MHp3Q)
                                  (if (g$negative?$12970$1MHp3Q
                                        g$r$13321$1MHp3Q)
                                    (g$exact$12972$1MHp3Q
                                      (if (g$>$13074$1MHp3Q
                                            (- g$r$13321$1MHp3Q)
                                            g$hd$13322$1MHp3Q)
                                        (- g$d$13320$1MHp3Q '1)
                                        (if (g$<$13072$1MHp3Q
                                              (- g$r$13321$1MHp3Q)
                                              g$hd$13322$1MHp3Q)
                                          g$d$13320$1MHp3Q
                                          (if (g$even?$12713$1MHp3Q
                                                g$d$13320$1MHp3Q)
                                            g$d$13320$1MHp3Q
                                            (begin
                                              '#f
                                              (+ g$d$13320$1MHp3Q
                                                 '1))))))
                                    (if (g$positive?$12969$1MHp3Q
                                          g$r$13321$1MHp3Q)
                                      (g$exact$12972$1MHp3Q
                                        (if (g$>$13074$1MHp3Q
                                              g$r$13321$1MHp3Q
                                              g$hd$13322$1MHp3Q)
                                          (+ g$d$13320$1MHp3Q '1)
                                          (if (g$<$13072$1MHp3Q
                                                g$r$13321$1MHp3Q
                                                g$hd$13322$1MHp3Q)
                                            g$d$13320$1MHp3Q
                                            (if (g$even?$12713$1MHp3Q
                                                  g$d$13320$1MHp3Q)
                                              g$d$13320$1MHp3Q
                                              (begin
                                                '#f
                                                (+ g$d$13320$1MHp3Q
                                                   '1))))))
                                      (begin '#f g$d$13320$1MHp3Q)))))
                               (g$div$13126$1MHp3Q
                                 g$d$13320$1MHp3Q
                                 '2))))
                           (g$bignum%$12944$1MHp3Q
                             g$num$13318$1MHp3Q
                             g$den$13319$1MHp3Q))))
                       (g$bignum/$12943$1MHp3Q
                         g$num$13318$1MHp3Q
                         g$den$13319$1MHp3Q))))
                   (g$ratnum-denominator$12937$1MHp3Q
                     g$x$13317$1MHp3Q))))
               (g$ratnum-numerator$12938$1MHp3Q g$x$13317$1MHp3Q))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$12971$1MHp3Q g$x$13317$1MHp3Q)))))))))
   (g$sqrt$13132$1MHp3Q
     g$sqrt$13412$1MHp3Q
     (case-lambda
       ((g$num$13323$1MHp3Q)
        (if (g$complexnum?$12939$1MHp3Q g$num$13323$1MHp3Q)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'Sqrt
            '()
            g$num$13323$1MHp3Q)
          (if (g$negative?$12970$1MHp3Q g$num$13323$1MHp3Q)
            (g$make-rectangular$13076$1MHp3Q
              '0
              (g$sqrt$13132$1MHp3Q (- g$num$13323$1MHp3Q)))
            (if (g$bignum?$12935$1MHp3Q g$num$13323$1MHp3Q)
              (bignum-sqrt g$num$13323$1MHp3Q)
              (if (g$infinite?$12958$1MHp3Q g$num$13323$1MHp3Q)
                g$num$13323$1MHp3Q
                (begin
                  '#f
                  ((case-lambda
                     ((g$r$13324$1MHp3Q)
                      (if (g$exact?$12959$1MHp3Q g$num$13323$1MHp3Q)
                        (g$exact$12972$1MHp3Q g$r$13324$1MHp3Q)
                        g$r$13324$1MHp3Q)))
                   (clr-call-internal
                     'System.Math
                     'Sqrt
                     '()
                     (g$inexact$12971$1MHp3Q
                       g$num$13323$1MHp3Q)))))))))))
   (g$exact-integer-sqrt$13133$1MHp3Q
     g$exact-integer-sqrt$13413$1MHp3Q
     (case-lambda
       ((g$num$13325$1MHp3Q)
        (if (g$bignum?$12935$1MHp3Q g$num$13325$1MHp3Q)
          (bignum-sqrt-exact g$num$13325$1MHp3Q)
          ((case-lambda
             ((g$r$13326$1MHp3Q)
              ((case-lambda
                 ((g$rf$13327$1MHp3Q)
                  ((case-lambda
                     ((g$rest$13328$1MHp3Q)
                      (values g$rf$13327$1MHp3Q g$rest$13328$1MHp3Q)))
                   (- g$num$13325$1MHp3Q
                      (* g$rf$13327$1MHp3Q g$rf$13327$1MHp3Q)))))
               (g$exact$12972$1MHp3Q
                 (g$floor$13128$1MHp3Q g$r$13326$1MHp3Q)))))
           (g$sqrt$13132$1MHp3Q g$num$13325$1MHp3Q))))))
   (g$expt$13134$1MHp3Q
     g$expt$13414$1MHp3Q
     (case-lambda
       ((g$obj1$13329$1MHp3Q g$obj2$13330$1MHp3Q)
        (letrec* ((g$make-restriction-violation$13331$1MHp3Q
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$13906$1MHp3Q)
                         (g$make-who-condition$13888$1MHp3Q 'expt)
                         (g$make-message-condition$13828$1MHp3Q
                           '"not supported")
                         (g$make-irritants-condition$13878$1MHp3Q
                           g$obj1$13329$1MHp3Q
                           g$obj2$13330$1MHp3Q))))))
          (if ((case-lambda
                 ((g$t$13332$1MHp3Q)
                  (if g$t$13332$1MHp3Q
                    g$t$13332$1MHp3Q
                    (begin
                      '#f
                      (g$negative?$12970$1MHp3Q g$obj1$13329$1MHp3Q)))))
               (g$complexnum?$12939$1MHp3Q g$obj1$13329$1MHp3Q))
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Pow
              '()
              (g$real->complexnum$12949$1MHp3Q g$obj1$13329$1MHp3Q)
              (g$real->complexnum$12949$1MHp3Q g$obj2$13330$1MHp3Q))
            (begin
              '#f
              ((case-lambda
                 ((g$e$13333$1MHp3Q g$z1$13334$1MHp3Q g$z2$13335$1MHp3Q)
                  (if (if g$z1$13334$1MHp3Q
                        (begin '#f (not g$z2$13335$1MHp3Q))
                        '#f)
                    (if g$e$13333$1MHp3Q '0 '0.0)
                    (if ((case-lambda
                           ((g$t$13336$1MHp3Q)
                            (if g$t$13336$1MHp3Q
                              g$t$13336$1MHp3Q
                              (begin
                                '#f
                                (g$=$13071$1MHp3Q
                                  g$obj1$13329$1MHp3Q
                                  '1)))))
                         g$z2$13335$1MHp3Q)
                      (if g$e$13333$1MHp3Q '1 '1.0)
                      (if (g$=$13071$1MHp3Q g$obj2$13330$1MHp3Q '1)
                        (if g$e$13333$1MHp3Q
                          g$obj1$13329$1MHp3Q
                          (g$inexact$12971$1MHp3Q g$obj1$13329$1MHp3Q))
                        (begin
                          '#f
                          ((case-lambda
                             ((g$neg?$13337$1MHp3Q)
                              ((case-lambda
                                 ((g$obj2$13338$1MHp3Q)
                                  (if (if (g$integer?$12964$1MHp3Q
                                            g$obj1$13329$1MHp3Q)
                                        (begin
                                          '#f
                                          (g$integer?$12964$1MHp3Q
                                            g$obj2$13338$1MHp3Q))
                                        '#f)
                                    ((case-lambda
                                       ((g$a$13339$1MHp3Q)
                                        ((case-lambda
                                           ((g$r$13340$1MHp3Q)
                                            (if g$neg?$13337$1MHp3Q
                                              (if (g$zero?$12968$1MHp3Q
                                                    g$r$13340$1MHp3Q)
                                                (raise
                                                  (g$make-restriction-violation$13331$1MHp3Q))
                                                (/ '1 g$r$13340$1MHp3Q))
                                              (g$exact$12972$1MHp3Q
                                                g$r$13340$1MHp3Q))))
                                         (clr-call-internal
                                           'Microsoft.Scripting.Math.BigInteger
                                           'Power
                                           g$a$13339$1MHp3Q
                                           (g$->fixnum$12950$1MHp3Q
                                             g$obj2$13338$1MHp3Q)))))
                                     (g$->bignum$12952$1MHp3Q
                                       g$obj1$13329$1MHp3Q))
                                    (if (if (g$rational?$12963$1MHp3Q
                                              g$obj1$13329$1MHp3Q)
                                          (begin
                                            '#f
                                            (g$integer?$12964$1MHp3Q
                                              g$obj2$13338$1MHp3Q))
                                          '#f)
                                      ((case-lambda
                                         ((g$f$13341$1MHp3Q)
                                          (if g$neg?$13337$1MHp3Q
                                            (/ (g$expt$13134$1MHp3Q
                                                 (g$denominator$13082$1MHp3Q
                                                   g$f$13341$1MHp3Q)
                                                 g$obj2$13338$1MHp3Q)
                                               (g$expt$13134$1MHp3Q
                                                 (g$numerator$13081$1MHp3Q
                                                   g$f$13341$1MHp3Q)
                                                 g$obj2$13338$1MHp3Q))
                                            (/ (g$expt$13134$1MHp3Q
                                                 (g$numerator$13081$1MHp3Q
                                                   g$f$13341$1MHp3Q)
                                                 g$obj2$13338$1MHp3Q)
                                               (g$expt$13134$1MHp3Q
                                                 (g$denominator$13082$1MHp3Q
                                                   g$f$13341$1MHp3Q)
                                                 g$obj2$13338$1MHp3Q)))))
                                       (g$->ratnum$12951$1MHp3Q
                                         g$obj1$13329$1MHp3Q))
                                      (if (if (g$real?$12962$1MHp3Q
                                                g$obj1$13329$1MHp3Q)
                                            (begin
                                              '#f
                                              (g$real?$12962$1MHp3Q
                                                g$obj2$13338$1MHp3Q))
                                            '#f)
                                        ((case-lambda
                                           ((g$r$13342$1MHp3Q)
                                            (if g$neg?$13337$1MHp3Q
                                              (/ '1 g$r$13342$1MHp3Q)
                                              g$r$13342$1MHp3Q)))
                                         (clr-call-internal
                                           'System.Math
                                           'Pow
                                           '()
                                           (g$inexact$12971$1MHp3Q
                                             g$obj1$13329$1MHp3Q)
                                           (g$inexact$12971$1MHp3Q
                                             g$obj2$13338$1MHp3Q)))
                                        (begin
                                          '#f
                                          (raise
                                            (g$make-restriction-violation$13331$1MHp3Q))))))))
                               (if g$neg?$13337$1MHp3Q
                                 (g$abs$13127$1MHp3Q
                                   g$obj2$13330$1MHp3Q)
                                 g$obj2$13330$1MHp3Q))))
                           (g$negative?$12970$1MHp3Q
                             g$obj2$13330$1MHp3Q))))))))
               (if (g$exact?$12959$1MHp3Q g$obj1$13329$1MHp3Q)
                 (begin '#f (g$exact?$12959$1MHp3Q g$obj2$13330$1MHp3Q))
                 '#f)
               (g$zero?$12968$1MHp3Q g$obj1$13329$1MHp3Q)
               (g$zero?$12968$1MHp3Q g$obj2$13330$1MHp3Q)))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6228$13415$1MHp3Q
     g$6228$13817$1MHp3Q
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6231$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6230$13416$1MHp3Q g$6230$13818$1MHp3Q '#f)
   (g$6229$13417$1MHp3Q
     g$6229$13819$1MHp3Q
     (make-record-constructor-descriptor
       g$6228$13415$1MHp3Q
       '#f
       g$6230$13416$1MHp3Q))
   (g$&condition?$13420$1MHp3Q
     g$&condition?$13820$1MHp3Q
     (record-predicate g$6228$13415$1MHp3Q))
   (g$make-&condition$13421$1MHp3Q
     g$make-&condition$13821$1MHp3Q
     (record-constructor g$6229$13417$1MHp3Q))
   (g$&condition-rtd$13422$1MHp3Q
     g$&condition-rtd$13822$1MHp3Q
     g$6228$13415$1MHp3Q)
   (g$&condition-rcd$13423$1MHp3Q
     g$&condition-rcd$13823$1MHp3Q
     g$6229$13417$1MHp3Q)
   (g$6265$13521$1MHp3Q
     g$6265$13824$1MHp3Q
     (make-record-type-descriptor
       '&message
       g$6228$13415$1MHp3Q
       'g$6268$1MHp3Q
       '#f
       '#f
       '#((immutable message))))
   (g$6267$13522$1MHp3Q g$6267$13825$1MHp3Q '#f)
   (g$6266$13523$1MHp3Q
     g$6266$13826$1MHp3Q
     (make-record-constructor-descriptor
       g$6265$13521$1MHp3Q
       g$6229$13417$1MHp3Q
       g$6267$13522$1MHp3Q))
   (g$p?$13526$1MHp3Q
     g$p?$13827$1MHp3Q
     (record-predicate g$6265$13521$1MHp3Q))
   (g$make-message-condition$13527$1MHp3Q
     g$make-message-condition$13828$1MHp3Q
     (record-constructor g$6266$13523$1MHp3Q))
   (g$condition-message$13528$1MHp3Q
     g$condition-message$13829$1MHp3Q
     (record-accessor g$6265$13521$1MHp3Q '0))
   (g$message-condition?$13529$1MHp3Q
     g$message-condition?$13830$1MHp3Q
     (condition-predicate g$6265$13521$1MHp3Q))
   (g$condition-message$13530$1MHp3Q
     g$condition-message$13831$1MHp3Q
     (condition-accessor
       g$6265$13521$1MHp3Q
       g$condition-message$13528$1MHp3Q))
   (g$&message-rtd$13531$1MHp3Q
     g$&message-rtd$13832$1MHp3Q
     g$6265$13521$1MHp3Q)
   (g$&message-rcd$13532$1MHp3Q
     g$&message-rcd$13833$1MHp3Q
     g$6266$13523$1MHp3Q)
   (g$6280$13533$1MHp3Q
     g$6280$13834$1MHp3Q
     (make-record-type-descriptor
       '&warning
       g$6228$13415$1MHp3Q
       'g$6283$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6282$13534$1MHp3Q g$6282$13835$1MHp3Q '#f)
   (g$6281$13535$1MHp3Q
     g$6281$13836$1MHp3Q
     (make-record-constructor-descriptor
       g$6280$13533$1MHp3Q
       g$6229$13417$1MHp3Q
       g$6282$13534$1MHp3Q))
   (g$p?$13538$1MHp3Q
     g$p?$13837$1MHp3Q
     (record-predicate g$6280$13533$1MHp3Q))
   (g$make-warning$13539$1MHp3Q
     g$make-warning$13838$1MHp3Q
     (record-constructor g$6281$13535$1MHp3Q))
   (g$warning?$13540$1MHp3Q
     g$warning?$13839$1MHp3Q
     (condition-predicate g$6280$13533$1MHp3Q))
   (g$&warning-rtd$13541$1MHp3Q
     g$&warning-rtd$13840$1MHp3Q
     g$6280$13533$1MHp3Q)
   (g$&warning-rcd$13542$1MHp3Q
     g$&warning-rcd$13841$1MHp3Q
     g$6281$13535$1MHp3Q)
   (g$6293$13543$1MHp3Q
     g$6293$13842$1MHp3Q
     (make-record-type-descriptor
       '&serious
       g$6228$13415$1MHp3Q
       'g$6296$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6295$13544$1MHp3Q g$6295$13843$1MHp3Q '#f)
   (g$6294$13545$1MHp3Q
     g$6294$13844$1MHp3Q
     (make-record-constructor-descriptor
       g$6293$13543$1MHp3Q
       g$6229$13417$1MHp3Q
       g$6295$13544$1MHp3Q))
   (g$p?$13548$1MHp3Q
     g$p?$13845$1MHp3Q
     (record-predicate g$6293$13543$1MHp3Q))
   (g$make-serious-condition$13549$1MHp3Q
     g$make-serious-condition$13846$1MHp3Q
     (record-constructor g$6294$13545$1MHp3Q))
   (g$serious-condition?$13550$1MHp3Q
     g$serious-condition?$13847$1MHp3Q
     (condition-predicate g$6293$13543$1MHp3Q))
   (g$&serious-rtd$13551$1MHp3Q
     g$&serious-rtd$13848$1MHp3Q
     g$6293$13543$1MHp3Q)
   (g$&serious-rcd$13552$1MHp3Q
     g$&serious-rcd$13849$1MHp3Q
     g$6294$13545$1MHp3Q)
   (g$6306$13553$1MHp3Q
     g$6306$13850$1MHp3Q
     (make-record-type-descriptor
       '&error
       g$6293$13543$1MHp3Q
       'g$6309$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6308$13554$1MHp3Q g$6308$13851$1MHp3Q '#f)
   (g$6307$13555$1MHp3Q
     g$6307$13852$1MHp3Q
     (make-record-constructor-descriptor
       g$6306$13553$1MHp3Q
       g$6294$13545$1MHp3Q
       g$6308$13554$1MHp3Q))
   (g$p?$13558$1MHp3Q
     g$p?$13853$1MHp3Q
     (record-predicate g$6306$13553$1MHp3Q))
   (g$make-error$13559$1MHp3Q
     g$make-error$13854$1MHp3Q
     (record-constructor g$6307$13555$1MHp3Q))
   (g$error?$13560$1MHp3Q
     g$error?$13855$1MHp3Q
     (condition-predicate g$6306$13553$1MHp3Q))
   (g$&error-rtd$13561$1MHp3Q
     g$&error-rtd$13856$1MHp3Q
     g$6306$13553$1MHp3Q)
   (g$&error-rcd$13562$1MHp3Q
     g$&error-rcd$13857$1MHp3Q
     g$6307$13555$1MHp3Q)
   (g$6319$13563$1MHp3Q
     g$6319$13858$1MHp3Q
     (make-record-type-descriptor
       '&violation
       g$6293$13543$1MHp3Q
       'g$6322$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6321$13564$1MHp3Q g$6321$13859$1MHp3Q '#f)
   (g$6320$13565$1MHp3Q
     g$6320$13860$1MHp3Q
     (make-record-constructor-descriptor
       g$6319$13563$1MHp3Q
       g$6294$13545$1MHp3Q
       g$6321$13564$1MHp3Q))
   (g$p?$13568$1MHp3Q
     g$p?$13861$1MHp3Q
     (record-predicate g$6319$13563$1MHp3Q))
   (g$make-violation$13569$1MHp3Q
     g$make-violation$13862$1MHp3Q
     (record-constructor g$6320$13565$1MHp3Q))
   (g$violation?$13570$1MHp3Q
     g$violation?$13863$1MHp3Q
     (condition-predicate g$6319$13563$1MHp3Q))
   (g$&violation-rtd$13571$1MHp3Q
     g$&violation-rtd$13864$1MHp3Q
     g$6319$13563$1MHp3Q)
   (g$&violation-rcd$13572$1MHp3Q
     g$&violation-rcd$13865$1MHp3Q
     g$6320$13565$1MHp3Q)
   (g$6332$13573$1MHp3Q
     g$6332$13866$1MHp3Q
     (make-record-type-descriptor
       '&assertion
       g$6319$13563$1MHp3Q
       'g$6335$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6334$13574$1MHp3Q g$6334$13867$1MHp3Q '#f)
   (g$6333$13575$1MHp3Q
     g$6333$13868$1MHp3Q
     (make-record-constructor-descriptor
       g$6332$13573$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6334$13574$1MHp3Q))
   (g$p?$13578$1MHp3Q
     g$p?$13869$1MHp3Q
     (record-predicate g$6332$13573$1MHp3Q))
   (g$make-assertion-violation$13579$1MHp3Q
     g$make-assertion-violation$13870$1MHp3Q
     (record-constructor g$6333$13575$1MHp3Q))
   (g$assertion-violation?$13580$1MHp3Q
     g$assertion-violation?$13871$1MHp3Q
     (condition-predicate g$6332$13573$1MHp3Q))
   (g$&assertion-rtd$13581$1MHp3Q
     g$&assertion-rtd$13872$1MHp3Q
     g$6332$13573$1MHp3Q)
   (g$&assertion-rcd$13582$1MHp3Q
     g$&assertion-rcd$13873$1MHp3Q
     g$6333$13575$1MHp3Q)
   (g$6345$13584$1MHp3Q
     g$6345$13874$1MHp3Q
     (make-record-type-descriptor
       '&irritants
       g$6228$13415$1MHp3Q
       'g$6348$1MHp3Q
       '#f
       '#f
       '#((immutable irritants))))
   (g$6347$13585$1MHp3Q g$6347$13875$1MHp3Q '#f)
   (g$6346$13586$1MHp3Q
     g$6346$13876$1MHp3Q
     (make-record-constructor-descriptor
       g$6345$13584$1MHp3Q
       g$6229$13417$1MHp3Q
       g$6347$13585$1MHp3Q))
   (g$p?$13589$1MHp3Q
     g$p?$13877$1MHp3Q
     (record-predicate g$6345$13584$1MHp3Q))
   (g$make-irritants-condition$13590$1MHp3Q
     g$make-irritants-condition$13878$1MHp3Q
     (record-constructor g$6346$13586$1MHp3Q))
   (g$condition-irritants$13591$1MHp3Q
     g$condition-irritants$13879$1MHp3Q
     (record-accessor g$6345$13584$1MHp3Q '0))
   (g$irritants-condition?$13592$1MHp3Q
     g$irritants-condition?$13880$1MHp3Q
     (condition-predicate g$6345$13584$1MHp3Q))
   (g$condition-irritants$13593$1MHp3Q
     g$condition-irritants$13881$1MHp3Q
     (condition-accessor
       g$6345$13584$1MHp3Q
       g$condition-irritants$13591$1MHp3Q))
   (g$&irritants-rtd$13594$1MHp3Q
     g$&irritants-rtd$13882$1MHp3Q
     g$6345$13584$1MHp3Q)
   (g$&irritants-rcd$13595$1MHp3Q
     g$&irritants-rcd$13883$1MHp3Q
     g$6346$13586$1MHp3Q)
   (g$6360$13597$1MHp3Q
     g$6360$13884$1MHp3Q
     (make-record-type-descriptor
       '&who
       g$6228$13415$1MHp3Q
       'g$6363$1MHp3Q
       '#f
       '#f
       '#((immutable who))))
   (g$6362$13598$1MHp3Q g$6362$13885$1MHp3Q '#f)
   (g$6361$13599$1MHp3Q
     g$6361$13886$1MHp3Q
     (make-record-constructor-descriptor
       g$6360$13597$1MHp3Q
       g$6229$13417$1MHp3Q
       g$6362$13598$1MHp3Q))
   (g$p?$13602$1MHp3Q
     g$p?$13887$1MHp3Q
     (record-predicate g$6360$13597$1MHp3Q))
   (g$make-who-condition$13603$1MHp3Q
     g$make-who-condition$13888$1MHp3Q
     (record-constructor g$6361$13599$1MHp3Q))
   (g$condition-who$13604$1MHp3Q
     g$condition-who$13889$1MHp3Q
     (record-accessor g$6360$13597$1MHp3Q '0))
   (g$who-condition?$13605$1MHp3Q
     g$who-condition?$13890$1MHp3Q
     (condition-predicate g$6360$13597$1MHp3Q))
   (g$condition-who$13606$1MHp3Q
     g$condition-who$13891$1MHp3Q
     (condition-accessor
       g$6360$13597$1MHp3Q
       g$condition-who$13604$1MHp3Q))
   (g$&who-rtd$13607$1MHp3Q g$&who-rtd$13892$1MHp3Q g$6360$13597$1MHp3Q)
   (g$&who-rcd$13608$1MHp3Q g$&who-rcd$13893$1MHp3Q g$6361$13599$1MHp3Q)
   (g$6375$13609$1MHp3Q
     g$6375$13894$1MHp3Q
     (make-record-type-descriptor
       '&non-continuable
       g$6319$13563$1MHp3Q
       'g$6378$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6377$13610$1MHp3Q g$6377$13895$1MHp3Q '#f)
   (g$6376$13611$1MHp3Q
     g$6376$13896$1MHp3Q
     (make-record-constructor-descriptor
       g$6375$13609$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6377$13610$1MHp3Q))
   (g$p?$13614$1MHp3Q
     g$p?$13897$1MHp3Q
     (record-predicate g$6375$13609$1MHp3Q))
   (g$make-non-continuable-violation$13615$1MHp3Q
     g$make-non-continuable-violation$13898$1MHp3Q
     (record-constructor g$6376$13611$1MHp3Q))
   (g$non-continuable-violation?$13616$1MHp3Q
     g$non-continuable-violation?$13899$1MHp3Q
     (condition-predicate g$6375$13609$1MHp3Q))
   (g$&non-continuable-rtd$13617$1MHp3Q
     g$&non-continuable-rtd$13900$1MHp3Q
     g$6375$13609$1MHp3Q)
   (g$&non-continuable-rcd$13618$1MHp3Q
     g$&non-continuable-rcd$13901$1MHp3Q
     g$6376$13611$1MHp3Q)
   (g$6388$13619$1MHp3Q
     g$6388$13902$1MHp3Q
     (make-record-type-descriptor
       '&implementation-restriction
       g$6319$13563$1MHp3Q
       'g$6391$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6390$13620$1MHp3Q g$6390$13903$1MHp3Q '#f)
   (g$6389$13621$1MHp3Q
     g$6389$13904$1MHp3Q
     (make-record-constructor-descriptor
       g$6388$13619$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6390$13620$1MHp3Q))
   (g$p?$13624$1MHp3Q
     g$p?$13905$1MHp3Q
     (record-predicate g$6388$13619$1MHp3Q))
   (g$make-implementation-restriction-violation$13625$1MHp3Q
     g$make-implementation-restriction-violation$13906$1MHp3Q
     (record-constructor g$6389$13621$1MHp3Q))
   (g$implementation-restriction-violation?$13626$1MHp3Q
     g$implementation-restriction-violation?$13907$1MHp3Q
     (condition-predicate g$6388$13619$1MHp3Q))
   (g$&implementation-restriction-rtd$13627$1MHp3Q
     g$&implementation-restriction-rtd$13908$1MHp3Q
     g$6388$13619$1MHp3Q)
   (g$&implementation-restriction-rcd$13628$1MHp3Q
     g$&implementation-restriction-rcd$13909$1MHp3Q
     g$6389$13621$1MHp3Q)
   (g$6401$13629$1MHp3Q
     g$6401$13910$1MHp3Q
     (make-record-type-descriptor
       '&lexical
       g$6319$13563$1MHp3Q
       'g$6404$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6403$13630$1MHp3Q g$6403$13911$1MHp3Q '#f)
   (g$6402$13631$1MHp3Q
     g$6402$13912$1MHp3Q
     (make-record-constructor-descriptor
       g$6401$13629$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6403$13630$1MHp3Q))
   (g$p?$13634$1MHp3Q
     g$p?$13913$1MHp3Q
     (record-predicate g$6401$13629$1MHp3Q))
   (g$make-lexical-violation$13635$1MHp3Q
     g$make-lexical-violation$13914$1MHp3Q
     (record-constructor g$6402$13631$1MHp3Q))
   (g$lexical-violation?$13636$1MHp3Q
     g$lexical-violation?$13915$1MHp3Q
     (condition-predicate g$6401$13629$1MHp3Q))
   (g$&lexical-rtd$13637$1MHp3Q
     g$&lexical-rtd$13916$1MHp3Q
     g$6401$13629$1MHp3Q)
   (g$&lexical-rcd$13638$1MHp3Q
     g$&lexical-rcd$13917$1MHp3Q
     g$6402$13631$1MHp3Q)
   (g$6414$13641$1MHp3Q
     g$6414$13918$1MHp3Q
     (make-record-type-descriptor
       '&syntax
       g$6319$13563$1MHp3Q
       'g$6417$1MHp3Q
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6416$13642$1MHp3Q g$6416$13919$1MHp3Q '#f)
   (g$6415$13643$1MHp3Q
     g$6415$13920$1MHp3Q
     (make-record-constructor-descriptor
       g$6414$13641$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6416$13642$1MHp3Q))
   (g$p?$13646$1MHp3Q
     g$p?$13921$1MHp3Q
     (record-predicate g$6414$13641$1MHp3Q))
   (g$make-syntax-violation$13647$1MHp3Q
     g$make-syntax-violation$13922$1MHp3Q
     (record-constructor g$6415$13643$1MHp3Q))
   (g$syntax-violation-form$13648$1MHp3Q
     g$syntax-violation-form$13923$1MHp3Q
     (record-accessor g$6414$13641$1MHp3Q '0))
   (g$syntax-violation-subform$13649$1MHp3Q
     g$syntax-violation-subform$13924$1MHp3Q
     (record-accessor g$6414$13641$1MHp3Q '1))
   (g$syntax-violation?$13650$1MHp3Q
     g$syntax-violation?$13925$1MHp3Q
     (condition-predicate g$6414$13641$1MHp3Q))
   (g$syntax-violation-form$13651$1MHp3Q
     g$syntax-violation-form$13926$1MHp3Q
     (condition-accessor
       g$6414$13641$1MHp3Q
       g$syntax-violation-form$13648$1MHp3Q))
   (g$syntax-violation-subform$13652$1MHp3Q
     g$syntax-violation-subform$13927$1MHp3Q
     (condition-accessor
       g$6414$13641$1MHp3Q
       g$syntax-violation-subform$13649$1MHp3Q))
   (g$&syntax-rtd$13653$1MHp3Q
     g$&syntax-rtd$13928$1MHp3Q
     g$6414$13641$1MHp3Q)
   (g$&syntax-rcd$13654$1MHp3Q
     g$&syntax-rcd$13929$1MHp3Q
     g$6415$13643$1MHp3Q)
   (g$6431$13655$1MHp3Q
     g$6431$13930$1MHp3Q
     (make-record-type-descriptor
       '&undefined
       g$6319$13563$1MHp3Q
       'g$6434$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6433$13656$1MHp3Q g$6433$13931$1MHp3Q '#f)
   (g$6432$13657$1MHp3Q
     g$6432$13932$1MHp3Q
     (make-record-constructor-descriptor
       g$6431$13655$1MHp3Q
       g$6320$13565$1MHp3Q
       g$6433$13656$1MHp3Q))
   (g$p?$13660$1MHp3Q
     g$p?$13933$1MHp3Q
     (record-predicate g$6431$13655$1MHp3Q))
   (g$make-undefined-violation$13661$1MHp3Q
     g$make-undefined-violation$13934$1MHp3Q
     (record-constructor g$6432$13657$1MHp3Q))
   (g$undefined-violation?$13662$1MHp3Q
     g$undefined-violation?$13935$1MHp3Q
     (condition-predicate g$6431$13655$1MHp3Q))
   (g$&undefined-rtd$13663$1MHp3Q
     g$&undefined-rtd$13936$1MHp3Q
     g$6431$13655$1MHp3Q)
   (g$&undefined-rcd$13664$1MHp3Q
     g$&undefined-rcd$13937$1MHp3Q
     g$6432$13657$1MHp3Q)
   (g$6444$13665$1MHp3Q
     g$6444$13938$1MHp3Q
     (make-record-type-descriptor
       '&i/o
       g$6306$13553$1MHp3Q
       'g$6447$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6446$13666$1MHp3Q g$6446$13939$1MHp3Q '#f)
   (g$6445$13667$1MHp3Q
     g$6445$13940$1MHp3Q
     (make-record-constructor-descriptor
       g$6444$13665$1MHp3Q
       g$6307$13555$1MHp3Q
       g$6446$13666$1MHp3Q))
   (g$p?$13670$1MHp3Q
     g$p?$13941$1MHp3Q
     (record-predicate g$6444$13665$1MHp3Q))
   (g$make-i/o-error$13671$1MHp3Q
     g$make-i/o-error$13942$1MHp3Q
     (record-constructor g$6445$13667$1MHp3Q))
   (g$i/o-error?$13672$1MHp3Q
     g$i/o-error?$13943$1MHp3Q
     (condition-predicate g$6444$13665$1MHp3Q))
   (g$&i/o-rtd$13673$1MHp3Q g$&i/o-rtd$13944$1MHp3Q g$6444$13665$1MHp3Q)
   (g$&i/o-rcd$13674$1MHp3Q g$&i/o-rcd$13945$1MHp3Q g$6445$13667$1MHp3Q)
   (g$6457$13675$1MHp3Q
     g$6457$13946$1MHp3Q
     (make-record-type-descriptor
       '&i/o-read
       g$6444$13665$1MHp3Q
       'g$6460$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6459$13676$1MHp3Q g$6459$13947$1MHp3Q '#f)
   (g$6458$13677$1MHp3Q
     g$6458$13948$1MHp3Q
     (make-record-constructor-descriptor
       g$6457$13675$1MHp3Q
       g$6445$13667$1MHp3Q
       g$6459$13676$1MHp3Q))
   (g$p?$13680$1MHp3Q
     g$p?$13949$1MHp3Q
     (record-predicate g$6457$13675$1MHp3Q))
   (g$make-i/o-read-error$13681$1MHp3Q
     g$make-i/o-read-error$13950$1MHp3Q
     (record-constructor g$6458$13677$1MHp3Q))
   (g$i/o-read-error?$13682$1MHp3Q
     g$i/o-read-error?$13951$1MHp3Q
     (condition-predicate g$6457$13675$1MHp3Q))
   (g$&i/o-read-rtd$13683$1MHp3Q
     g$&i/o-read-rtd$13952$1MHp3Q
     g$6457$13675$1MHp3Q)
   (g$&i/o-read-rcd$13684$1MHp3Q
     g$&i/o-read-rcd$13953$1MHp3Q
     g$6458$13677$1MHp3Q)
   (g$6470$13685$1MHp3Q
     g$6470$13954$1MHp3Q
     (make-record-type-descriptor
       '&i/o-write
       g$6444$13665$1MHp3Q
       'g$6473$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6472$13686$1MHp3Q g$6472$13955$1MHp3Q '#f)
   (g$6471$13687$1MHp3Q
     g$6471$13956$1MHp3Q
     (make-record-constructor-descriptor
       g$6470$13685$1MHp3Q
       g$6445$13667$1MHp3Q
       g$6472$13686$1MHp3Q))
   (g$p?$13690$1MHp3Q
     g$p?$13957$1MHp3Q
     (record-predicate g$6470$13685$1MHp3Q))
   (g$make-i/o-write-error$13691$1MHp3Q
     g$make-i/o-write-error$13958$1MHp3Q
     (record-constructor g$6471$13687$1MHp3Q))
   (g$i/o-write-error?$13692$1MHp3Q
     g$i/o-write-error?$13959$1MHp3Q
     (condition-predicate g$6470$13685$1MHp3Q))
   (g$&i/o-write-rtd$13693$1MHp3Q
     g$&i/o-write-rtd$13960$1MHp3Q
     g$6470$13685$1MHp3Q)
   (g$&i/o-write-rcd$13694$1MHp3Q
     g$&i/o-write-rcd$13961$1MHp3Q
     g$6471$13687$1MHp3Q)
   (g$6483$13696$1MHp3Q
     g$6483$13962$1MHp3Q
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6444$13665$1MHp3Q
       'g$6486$1MHp3Q
       '#f
       '#f
       '#((immutable position))))
   (g$6485$13697$1MHp3Q g$6485$13963$1MHp3Q '#f)
   (g$6484$13698$1MHp3Q
     g$6484$13964$1MHp3Q
     (make-record-constructor-descriptor
       g$6483$13696$1MHp3Q
       g$6445$13667$1MHp3Q
       g$6485$13697$1MHp3Q))
   (g$p?$13701$1MHp3Q
     g$p?$13965$1MHp3Q
     (record-predicate g$6483$13696$1MHp3Q))
   (g$make-i/o-invalid-position-error$13702$1MHp3Q
     g$make-i/o-invalid-position-error$13966$1MHp3Q
     (record-constructor g$6484$13698$1MHp3Q))
   (g$i/o-error-position$13703$1MHp3Q
     g$i/o-error-position$13967$1MHp3Q
     (record-accessor g$6483$13696$1MHp3Q '0))
   (g$i/o-invalid-position-error?$13704$1MHp3Q
     g$i/o-invalid-position-error?$13968$1MHp3Q
     (condition-predicate g$6483$13696$1MHp3Q))
   (g$i/o-error-position$13705$1MHp3Q
     g$i/o-error-position$13969$1MHp3Q
     (condition-accessor
       g$6483$13696$1MHp3Q
       g$i/o-error-position$13703$1MHp3Q))
   (g$&i/o-invalid-position-rtd$13706$1MHp3Q
     g$&i/o-invalid-position-rtd$13970$1MHp3Q
     g$6483$13696$1MHp3Q)
   (g$&i/o-invalid-position-rcd$13707$1MHp3Q
     g$&i/o-invalid-position-rcd$13971$1MHp3Q
     g$6484$13698$1MHp3Q)
   (g$6498$13709$1MHp3Q
     g$6498$13972$1MHp3Q
     (make-record-type-descriptor
       '&i/o-filename
       g$6444$13665$1MHp3Q
       'g$6501$1MHp3Q
       '#f
       '#f
       '#((immutable filename))))
   (g$6500$13710$1MHp3Q g$6500$13973$1MHp3Q '#f)
   (g$6499$13711$1MHp3Q
     g$6499$13974$1MHp3Q
     (make-record-constructor-descriptor
       g$6498$13709$1MHp3Q
       g$6445$13667$1MHp3Q
       g$6500$13710$1MHp3Q))
   (g$p?$13714$1MHp3Q
     g$p?$13975$1MHp3Q
     (record-predicate g$6498$13709$1MHp3Q))
   (g$make-i/o-filename-error$13715$1MHp3Q
     g$make-i/o-filename-error$13976$1MHp3Q
     (record-constructor g$6499$13711$1MHp3Q))
   (g$i/o-error-filename$13716$1MHp3Q
     g$i/o-error-filename$13977$1MHp3Q
     (record-accessor g$6498$13709$1MHp3Q '0))
   (g$i/o-filename-error?$13717$1MHp3Q
     g$i/o-filename-error?$13978$1MHp3Q
     (condition-predicate g$6498$13709$1MHp3Q))
   (g$i/o-error-filename$13718$1MHp3Q
     g$i/o-error-filename$13979$1MHp3Q
     (condition-accessor
       g$6498$13709$1MHp3Q
       g$i/o-error-filename$13716$1MHp3Q))
   (g$&i/o-filename-rtd$13719$1MHp3Q
     g$&i/o-filename-rtd$13980$1MHp3Q
     g$6498$13709$1MHp3Q)
   (g$&i/o-filename-rcd$13720$1MHp3Q
     g$&i/o-filename-rcd$13981$1MHp3Q
     g$6499$13711$1MHp3Q)
   (g$6513$13721$1MHp3Q
     g$6513$13982$1MHp3Q
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6498$13709$1MHp3Q
       'g$6516$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6515$13722$1MHp3Q g$6515$13983$1MHp3Q '#f)
   (g$6514$13723$1MHp3Q
     g$6514$13984$1MHp3Q
     (make-record-constructor-descriptor
       g$6513$13721$1MHp3Q
       g$6499$13711$1MHp3Q
       g$6515$13722$1MHp3Q))
   (g$p?$13726$1MHp3Q
     g$p?$13985$1MHp3Q
     (record-predicate g$6513$13721$1MHp3Q))
   (g$make-i/o-file-protection-error$13727$1MHp3Q
     g$make-i/o-file-protection-error$13986$1MHp3Q
     (record-constructor g$6514$13723$1MHp3Q))
   (g$i/o-file-protection-error?$13728$1MHp3Q
     g$i/o-file-protection-error?$13987$1MHp3Q
     (condition-predicate g$6513$13721$1MHp3Q))
   (g$&i/o-file-protection-rtd$13729$1MHp3Q
     g$&i/o-file-protection-rtd$13988$1MHp3Q
     g$6513$13721$1MHp3Q)
   (g$&i/o-file-protection-rcd$13730$1MHp3Q
     g$&i/o-file-protection-rcd$13989$1MHp3Q
     g$6514$13723$1MHp3Q)
   (g$6526$13731$1MHp3Q
     g$6526$13990$1MHp3Q
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6513$13721$1MHp3Q
       'g$6529$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6528$13732$1MHp3Q g$6528$13991$1MHp3Q '#f)
   (g$6527$13733$1MHp3Q
     g$6527$13992$1MHp3Q
     (make-record-constructor-descriptor
       g$6526$13731$1MHp3Q
       g$6514$13723$1MHp3Q
       g$6528$13732$1MHp3Q))
   (g$p?$13736$1MHp3Q
     g$p?$13993$1MHp3Q
     (record-predicate g$6526$13731$1MHp3Q))
   (g$make-i/o-file-is-read-only-error$13737$1MHp3Q
     g$make-i/o-file-is-read-only-error$13994$1MHp3Q
     (record-constructor g$6527$13733$1MHp3Q))
   (g$i/o-file-is-read-only-error?$13738$1MHp3Q
     g$i/o-file-is-read-only-error?$13995$1MHp3Q
     (condition-predicate g$6526$13731$1MHp3Q))
   (g$&i/o-file-is-read-only-rtd$13739$1MHp3Q
     g$&i/o-file-is-read-only-rtd$13996$1MHp3Q
     g$6526$13731$1MHp3Q)
   (g$&i/o-file-is-read-only-rcd$13740$1MHp3Q
     g$&i/o-file-is-read-only-rcd$13997$1MHp3Q
     g$6527$13733$1MHp3Q)
   (g$6539$13741$1MHp3Q
     g$6539$13998$1MHp3Q
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6498$13709$1MHp3Q
       'g$6542$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6541$13742$1MHp3Q g$6541$13999$1MHp3Q '#f)
   (g$6540$13743$1MHp3Q
     g$6540$14000$1MHp3Q
     (make-record-constructor-descriptor
       g$6539$13741$1MHp3Q
       g$6499$13711$1MHp3Q
       g$6541$13742$1MHp3Q))
   (g$p?$13746$1MHp3Q
     g$p?$14001$1MHp3Q
     (record-predicate g$6539$13741$1MHp3Q))
   (g$make-i/o-file-already-exists-error$13747$1MHp3Q
     g$make-i/o-file-already-exists-error$14002$1MHp3Q
     (record-constructor g$6540$13743$1MHp3Q))
   (g$i/o-file-already-exists-error?$13748$1MHp3Q
     g$i/o-file-already-exists-error?$14003$1MHp3Q
     (condition-predicate g$6539$13741$1MHp3Q))
   (g$&i/o-file-already-exists-rtd$13749$1MHp3Q
     g$&i/o-file-already-exists-rtd$14004$1MHp3Q
     g$6539$13741$1MHp3Q)
   (g$&i/o-file-already-exists-rcd$13750$1MHp3Q
     g$&i/o-file-already-exists-rcd$14005$1MHp3Q
     g$6540$13743$1MHp3Q)
   (g$6552$13751$1MHp3Q
     g$6552$14006$1MHp3Q
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6498$13709$1MHp3Q
       'g$6555$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6554$13752$1MHp3Q g$6554$14007$1MHp3Q '#f)
   (g$6553$13753$1MHp3Q
     g$6553$14008$1MHp3Q
     (make-record-constructor-descriptor
       g$6552$13751$1MHp3Q
       g$6499$13711$1MHp3Q
       g$6554$13752$1MHp3Q))
   (g$p?$13756$1MHp3Q
     g$p?$14009$1MHp3Q
     (record-predicate g$6552$13751$1MHp3Q))
   (g$make-i/o-file-does-not-exist-error$13757$1MHp3Q
     g$make-i/o-file-does-not-exist-error$14010$1MHp3Q
     (record-constructor g$6553$13753$1MHp3Q))
   (g$i/o-file-does-not-exist-error?$13758$1MHp3Q
     g$i/o-file-does-not-exist-error?$14011$1MHp3Q
     (condition-predicate g$6552$13751$1MHp3Q))
   (g$&i/o-file-does-not-exist-rtd$13759$1MHp3Q
     g$&i/o-file-does-not-exist-rtd$14012$1MHp3Q
     g$6552$13751$1MHp3Q)
   (g$&i/o-file-does-not-exist-rcd$13760$1MHp3Q
     g$&i/o-file-does-not-exist-rcd$14013$1MHp3Q
     g$6553$13753$1MHp3Q)
   (g$6565$13762$1MHp3Q
     g$6565$14014$1MHp3Q
     (make-record-type-descriptor
       '&i/o-port
       g$6444$13665$1MHp3Q
       'g$6568$1MHp3Q
       '#f
       '#f
       '#((immutable port))))
   (g$6567$13763$1MHp3Q g$6567$14015$1MHp3Q '#f)
   (g$6566$13764$1MHp3Q
     g$6566$14016$1MHp3Q
     (make-record-constructor-descriptor
       g$6565$13762$1MHp3Q
       g$6445$13667$1MHp3Q
       g$6567$13763$1MHp3Q))
   (g$p?$13767$1MHp3Q
     g$p?$14017$1MHp3Q
     (record-predicate g$6565$13762$1MHp3Q))
   (g$make-i/o-port-error$13768$1MHp3Q
     g$make-i/o-port-error$14018$1MHp3Q
     (record-constructor g$6566$13764$1MHp3Q))
   (g$i/o-error-port$13769$1MHp3Q
     g$i/o-error-port$14019$1MHp3Q
     (record-accessor g$6565$13762$1MHp3Q '0))
   (g$i/o-port-error?$13770$1MHp3Q
     g$i/o-port-error?$14020$1MHp3Q
     (condition-predicate g$6565$13762$1MHp3Q))
   (g$i/o-error-port$13771$1MHp3Q
     g$i/o-error-port$14021$1MHp3Q
     (condition-accessor
       g$6565$13762$1MHp3Q
       g$i/o-error-port$13769$1MHp3Q))
   (g$&i/o-port-rtd$13772$1MHp3Q
     g$&i/o-port-rtd$14022$1MHp3Q
     g$6565$13762$1MHp3Q)
   (g$&i/o-port-rcd$13773$1MHp3Q
     g$&i/o-port-rcd$14023$1MHp3Q
     g$6566$13764$1MHp3Q)
   (g$6580$13774$1MHp3Q
     g$6580$14024$1MHp3Q
     (make-record-type-descriptor
       '&i/o-decoding
       g$6565$13762$1MHp3Q
       'g$6583$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6582$13775$1MHp3Q g$6582$14025$1MHp3Q '#f)
   (g$6581$13776$1MHp3Q
     g$6581$14026$1MHp3Q
     (make-record-constructor-descriptor
       g$6580$13774$1MHp3Q
       g$6566$13764$1MHp3Q
       g$6582$13775$1MHp3Q))
   (g$p?$13779$1MHp3Q
     g$p?$14027$1MHp3Q
     (record-predicate g$6580$13774$1MHp3Q))
   (g$make-i/o-decoding-error$13780$1MHp3Q
     g$make-i/o-decoding-error$14028$1MHp3Q
     (record-constructor g$6581$13776$1MHp3Q))
   (g$i/o-decoding-error?$13781$1MHp3Q
     g$i/o-decoding-error?$14029$1MHp3Q
     (condition-predicate g$6580$13774$1MHp3Q))
   (g$&i/o-decoding-rtd$13782$1MHp3Q
     g$&i/o-decoding-rtd$14030$1MHp3Q
     g$6580$13774$1MHp3Q)
   (g$&i/o-decoding-rcd$13783$1MHp3Q
     g$&i/o-decoding-rcd$14031$1MHp3Q
     g$6581$13776$1MHp3Q)
   (g$6593$13785$1MHp3Q
     g$6593$14032$1MHp3Q
     (make-record-type-descriptor
       '&i/o-encoding
       g$6565$13762$1MHp3Q
       'g$6596$1MHp3Q
       '#f
       '#f
       '#((immutable char))))
   (g$6595$13786$1MHp3Q g$6595$14033$1MHp3Q '#f)
   (g$6594$13787$1MHp3Q
     g$6594$14034$1MHp3Q
     (make-record-constructor-descriptor
       g$6593$13785$1MHp3Q
       g$6566$13764$1MHp3Q
       g$6595$13786$1MHp3Q))
   (g$p?$13790$1MHp3Q
     g$p?$14035$1MHp3Q
     (record-predicate g$6593$13785$1MHp3Q))
   (g$make-i/o-encoding-error$13791$1MHp3Q
     g$make-i/o-encoding-error$14036$1MHp3Q
     (record-constructor g$6594$13787$1MHp3Q))
   (g$i/o-encoding-error-char$13792$1MHp3Q
     g$i/o-encoding-error-char$14037$1MHp3Q
     (record-accessor g$6593$13785$1MHp3Q '0))
   (g$i/o-encoding-error?$13793$1MHp3Q
     g$i/o-encoding-error?$14038$1MHp3Q
     (condition-predicate g$6593$13785$1MHp3Q))
   (g$i/o-encoding-error-char$13794$1MHp3Q
     g$i/o-encoding-error-char$14039$1MHp3Q
     (condition-accessor
       g$6593$13785$1MHp3Q
       g$i/o-encoding-error-char$13792$1MHp3Q))
   (g$&i/o-encoding-rtd$13795$1MHp3Q
     g$&i/o-encoding-rtd$14040$1MHp3Q
     g$6593$13785$1MHp3Q)
   (g$&i/o-encoding-rcd$13796$1MHp3Q
     g$&i/o-encoding-rcd$14041$1MHp3Q
     g$6594$13787$1MHp3Q)
   (g$6608$13797$1MHp3Q
     g$6608$14042$1MHp3Q
     (make-record-type-descriptor
       '&no-infinities
       g$6388$13619$1MHp3Q
       'g$6611$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6610$13798$1MHp3Q g$6610$14043$1MHp3Q '#f)
   (g$6609$13799$1MHp3Q
     g$6609$14044$1MHp3Q
     (make-record-constructor-descriptor
       g$6608$13797$1MHp3Q
       g$6389$13621$1MHp3Q
       g$6610$13798$1MHp3Q))
   (g$p?$13802$1MHp3Q
     g$p?$14045$1MHp3Q
     (record-predicate g$6608$13797$1MHp3Q))
   (g$make-no-infinities-violation$13803$1MHp3Q
     g$make-no-infinities-violation$14046$1MHp3Q
     (record-constructor g$6609$13799$1MHp3Q))
   (g$no-infinities-violation?$13804$1MHp3Q
     g$no-infinities-violation?$14047$1MHp3Q
     (condition-predicate g$6608$13797$1MHp3Q))
   (g$&no-infinities-rtd$13805$1MHp3Q
     g$&no-infinities-rtd$14048$1MHp3Q
     g$6608$13797$1MHp3Q)
   (g$&no-infinities-rcd$13806$1MHp3Q
     g$&no-infinities-rcd$14049$1MHp3Q
     g$6609$13799$1MHp3Q)
   (g$6621$13807$1MHp3Q
     g$6621$14050$1MHp3Q
     (make-record-type-descriptor
       '&no-nans
       g$6388$13619$1MHp3Q
       'g$6624$1MHp3Q
       '#f
       '#f
       '#()))
   (g$6623$13808$1MHp3Q g$6623$14051$1MHp3Q '#f)
   (g$6622$13809$1MHp3Q
     g$6622$14052$1MHp3Q
     (make-record-constructor-descriptor
       g$6621$13807$1MHp3Q
       g$6389$13621$1MHp3Q
       g$6623$13808$1MHp3Q))
   (g$p?$13812$1MHp3Q
     g$p?$14053$1MHp3Q
     (record-predicate g$6621$13807$1MHp3Q))
   (g$make-no-nans-violation$13813$1MHp3Q
     g$make-no-nans-violation$14054$1MHp3Q
     (record-constructor g$6622$13809$1MHp3Q))
   (g$no-nans-violation?$13814$1MHp3Q
     g$no-nans-violation?$14055$1MHp3Q
     (condition-predicate g$6621$13807$1MHp3Q))
   (g$&no-nans-rtd$13815$1MHp3Q
     g$&no-nans-rtd$14056$1MHp3Q
     g$6621$13807$1MHp3Q)
   (g$&no-nans-rcd$13816$1MHp3Q
     g$&no-nans-rcd$14057$1MHp3Q
     g$6622$13809$1MHp3Q))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$14058$1MHp3Q
     g$append!$14064$1MHp3Q
     (case-lambda
       ((g$a$14059$1MHp3Q . g$b$14060$1MHp3Q)
        (if (null? g$a$14059$1MHp3Q)
          g$b$14060$1MHp3Q
          (if (null? g$b$14060$1MHp3Q)
            g$a$14059$1MHp3Q
            (begin
              '#f
              ((letrec ((g$f$14061$1MHp3Q
                          (case-lambda
                            ((g$a$14062$1MHp3Q)
                             ((case-lambda
                                ((g$n$14063$1MHp3Q)
                                 (if (null? g$n$14063$1MHp3Q)
                                   (set-cdr!
                                     g$a$14062$1MHp3Q
                                     g$b$14060$1MHp3Q)
                                   (g$f$14061$1MHp3Q
                                     g$n$14063$1MHp3Q))))
                              (cdr g$a$14062$1MHp3Q))))))
                 g$f$14061$1MHp3Q)
               g$a$14059$1MHp3Q)
              g$a$14059$1MHp3Q)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$14065$1MHp3Q
     g$inexact->exact$14085$1MHp3Q
     g$exact$13380$1MHp3Q)
   (g$exact->inexact$14066$1MHp3Q
     g$exact->inexact$14086$1MHp3Q
     g$inexact$13379$1MHp3Q)
   (g$sign$14067$1MHp3Q
     g$sign$14087$1MHp3Q
     (case-lambda
       ((g$n$14073$1MHp3Q)
        (if (g$>$13384$1MHp3Q g$n$14073$1MHp3Q '0)
          '1
          (if (g$<$13382$1MHp3Q g$n$14073$1MHp3Q '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$14068$1MHp3Q
     g$quotient$14088$1MHp3Q
     (case-lambda
       ((g$n1$14074$1MHp3Q g$n2$14075$1MHp3Q)
        (begin
          (if (not (g$integer-valued?$13375$1MHp3Q g$n1$14074$1MHp3Q))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$14074$1MHp3Q)
            (void))
          (if (not (g$integer-valued?$13375$1MHp3Q g$n2$14075$1MHp3Q))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$14075$1MHp3Q)
            (void))
          (* (g$sign$14067$1MHp3Q g$n1$14074$1MHp3Q)
             (g$sign$14067$1MHp3Q g$n2$14075$1MHp3Q)
             (g$div$13406$1MHp3Q
               (g$abs$13407$1MHp3Q g$n1$14074$1MHp3Q)
               (g$abs$13407$1MHp3Q g$n2$14075$1MHp3Q)))))))
   (g$remainder$14069$1MHp3Q
     g$remainder$14089$1MHp3Q
     (case-lambda
       ((g$n1$14076$1MHp3Q g$n2$14077$1MHp3Q)
        (begin
          (if (not (g$integer-valued?$13375$1MHp3Q g$n1$14076$1MHp3Q))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$14076$1MHp3Q)
            (void))
          (if (not (g$integer-valued?$13375$1MHp3Q g$n2$14077$1MHp3Q))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$14077$1MHp3Q)
            (void))
          (* (g$sign$14067$1MHp3Q g$n1$14076$1MHp3Q)
             (g$mod$12674$1MHp3Q
               (g$abs$13407$1MHp3Q g$n1$14076$1MHp3Q)
               (g$abs$13407$1MHp3Q g$n2$14077$1MHp3Q)))))))
   (g$modulo$14070$1MHp3Q
     g$modulo$14090$1MHp3Q
     (case-lambda
       ((g$n1$14078$1MHp3Q g$n2$14079$1MHp3Q)
        (begin
          (if (not (g$integer-valued?$13375$1MHp3Q g$n1$14078$1MHp3Q))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$14078$1MHp3Q)
            (void))
          (if (not (g$integer-valued?$13375$1MHp3Q g$n2$14079$1MHp3Q))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$14079$1MHp3Q)
            (void))
          (* (g$sign$14067$1MHp3Q g$n2$14079$1MHp3Q)
             (g$mod$12674$1MHp3Q
               (* (g$sign$14067$1MHp3Q g$n2$14079$1MHp3Q)
                  g$n1$14078$1MHp3Q)
               (g$abs$13407$1MHp3Q g$n2$14079$1MHp3Q)))))))
   (g$make-promise$14071$1MHp3Q
     g$make-promise$14091$1MHp3Q
     (case-lambda
       ((g$proc$14080$1MHp3Q)
        ((case-lambda
           ((g$result-ready?$14081$1MHp3Q g$result$14082$1MHp3Q)
            (case-lambda
              (()
               (if g$result-ready?$14081$1MHp3Q
                 g$result$14082$1MHp3Q
                 ((case-lambda
                    ((g$x$14083$1MHp3Q)
                     (if g$result-ready?$14081$1MHp3Q
                       g$result$14082$1MHp3Q
                       (begin
                         (set! g$result-ready?$14081$1MHp3Q '#t)
                         (set! g$result$14082$1MHp3Q g$x$14083$1MHp3Q)
                         g$result$14082$1MHp3Q))))
                  (g$proc$14080$1MHp3Q)))))))
         '#f
         '#f))))
   (g$force$14072$1MHp3Q
     g$force$14092$1MHp3Q
     (case-lambda ((g$object$14084$1MHp3Q) (g$object$14084$1MHp3Q)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$14093$1MHp3Q
     g$split$14118$1MHp3Q
     (case-lambda
       ((g$ls$14097$1MHp3Q)
        ((letrec ((g$loop$14098$1MHp3Q
                    (case-lambda
                      ((g$rest$14099$1MHp3Q
                         g$left$14100$1MHp3Q
                         g$right$14101$1MHp3Q)
                       (if (null? g$rest$14099$1MHp3Q)
                         (cons g$left$14100$1MHp3Q g$right$14101$1MHp3Q)
                         (if (null? (cdr g$rest$14099$1MHp3Q))
                           (cons
                             (cons
                               (car g$rest$14099$1MHp3Q)
                               g$left$14100$1MHp3Q)
                             g$right$14101$1MHp3Q)
                           (begin
                             '#f
                             (g$loop$14098$1MHp3Q
                               (g$cddr$12688$1MHp3Q g$rest$14099$1MHp3Q)
                               (cons
                                 (car g$rest$14099$1MHp3Q)
                                 g$left$14100$1MHp3Q)
                               (cons
                                 (g$cadr$12686$1MHp3Q
                                   g$rest$14099$1MHp3Q)
                                 g$right$14101$1MHp3Q)))))))))
           g$loop$14098$1MHp3Q)
         g$ls$14097$1MHp3Q
         '()
         '()))))
   (g$reverse-it$14094$1MHp3Q
     g$reverse-it$14119$1MHp3Q
     (case-lambda
       ((g$head$14102$1MHp3Q g$tail$14103$1MHp3Q)
        (if (null? g$head$14102$1MHp3Q)
          g$tail$14103$1MHp3Q
          (g$reverse-it$14094$1MHp3Q
            (cdr g$head$14102$1MHp3Q)
            (cons (car g$head$14102$1MHp3Q) g$tail$14103$1MHp3Q))))))
   (g$merge$14095$1MHp3Q
     g$merge$14120$1MHp3Q
     (case-lambda
       ((g$list-1$14104$1MHp3Q
          g$list-2$14105$1MHp3Q
          g$precedes?$14106$1MHp3Q)
        ((letrec ((g$loop$14107$1MHp3Q
                    (case-lambda
                      ((g$source-1$14108$1MHp3Q
                         g$source-2$14109$1MHp3Q
                         g$so-far$14110$1MHp3Q)
                       (if (null? g$source-1$14108$1MHp3Q)
                         (g$reverse-it$14094$1MHp3Q
                           g$so-far$14110$1MHp3Q
                           g$source-2$14109$1MHp3Q)
                         (if (null? g$source-2$14109$1MHp3Q)
                           (g$reverse-it$14094$1MHp3Q
                             g$so-far$14110$1MHp3Q
                             g$source-1$14108$1MHp3Q)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$14111$1MHp3Q
                                   g$car-2$14112$1MHp3Q)
                                 (if (g$precedes?$14106$1MHp3Q
                                       g$car-2$14112$1MHp3Q
                                       g$car-1$14111$1MHp3Q)
                                   (g$loop$14107$1MHp3Q
                                     g$source-1$14108$1MHp3Q
                                     (cdr g$source-2$14109$1MHp3Q)
                                     (cons
                                       g$car-2$14112$1MHp3Q
                                       g$so-far$14110$1MHp3Q))
                                   (g$loop$14107$1MHp3Q
                                     g$source-2$14109$1MHp3Q
                                     (cdr g$source-1$14108$1MHp3Q)
                                     (cons
                                       g$car-1$14111$1MHp3Q
                                       g$so-far$14110$1MHp3Q)))))
                              (car g$source-1$14108$1MHp3Q)
                              (car g$source-2$14109$1MHp3Q)))))))))
           g$loop$14107$1MHp3Q)
         g$list-1$14104$1MHp3Q
         g$list-2$14105$1MHp3Q
         '()))))
   (g$list-sort$14096$1MHp3Q
     g$list-sort$14121$1MHp3Q
     (case-lambda
       ((g$precedes?$14113$1MHp3Q g$ls$14114$1MHp3Q)
        (if (null? g$ls$14114$1MHp3Q)
          '()
          ((letrec ((g$helper$14115$1MHp3Q
                      (case-lambda
                        ((g$piece$14116$1MHp3Q)
                         (if (null? (cdr g$piece$14116$1MHp3Q))
                           g$piece$14116$1MHp3Q
                           ((case-lambda
                              ((g$parts$14117$1MHp3Q)
                               (g$merge$14095$1MHp3Q
                                 (g$helper$14115$1MHp3Q
                                   (car g$parts$14117$1MHp3Q))
                                 (g$helper$14115$1MHp3Q
                                   (cdr g$parts$14117$1MHp3Q))
                                 g$precedes?$14113$1MHp3Q)))
                            (g$split$14093$1MHp3Q
                              g$piece$14116$1MHp3Q)))))))
             g$helper$14115$1MHp3Q)
           g$ls$14114$1MHp3Q))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$14160$1MHp3Q
     g$string-ci=?$14266$1MHp3Q
     (case-lambda
       ((g$a$14212$1MHp3Q g$b$14213$1MHp3Q . g$rest$14214$1MHp3Q)
        (begin
          (if (not (string? g$a$14212$1MHp3Q))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$14212$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14215$1MHp3Q)
               (begin
                 (if (not (string? g$x$14215$1MHp3Q))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$14215$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14216$1MHp3Q)
                     (begin
                       (set! g$a$14212$1MHp3Q g$x$14215$1MHp3Q)
                       g$r$14216$1MHp3Q)))
                  (g$=$13381$1MHp3Q
                    (string-ci-compare
                      g$a$14212$1MHp3Q
                      g$x$14215$1MHp3Q)
                    '0)))))
            (cons g$b$14213$1MHp3Q g$rest$14214$1MHp3Q))))))
   (g$string-ci<?$14161$1MHp3Q
     g$string-ci<?$14267$1MHp3Q
     (case-lambda
       ((g$a$14217$1MHp3Q g$b$14218$1MHp3Q . g$rest$14219$1MHp3Q)
        (begin
          (if (not (string? g$a$14217$1MHp3Q))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$14217$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14220$1MHp3Q)
               (begin
                 (if (not (string? g$x$14220$1MHp3Q))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$14220$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14221$1MHp3Q)
                     (begin
                       (set! g$a$14217$1MHp3Q g$x$14220$1MHp3Q)
                       g$r$14221$1MHp3Q)))
                  (g$<$13382$1MHp3Q
                    (string-ci-compare
                      g$a$14217$1MHp3Q
                      g$x$14220$1MHp3Q)
                    '0)))))
            (cons g$b$14218$1MHp3Q g$rest$14219$1MHp3Q))))))
   (g$string-ci>?$14162$1MHp3Q
     g$string-ci>?$14268$1MHp3Q
     (case-lambda
       ((g$a$14222$1MHp3Q g$b$14223$1MHp3Q . g$rest$14224$1MHp3Q)
        (begin
          (if (not (string? g$a$14222$1MHp3Q))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$14222$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14225$1MHp3Q)
               (begin
                 (if (not (string? g$x$14225$1MHp3Q))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$14225$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14226$1MHp3Q)
                     (begin
                       (set! g$a$14222$1MHp3Q g$x$14225$1MHp3Q)
                       g$r$14226$1MHp3Q)))
                  (g$>$13384$1MHp3Q
                    (string-ci-compare
                      g$a$14222$1MHp3Q
                      g$x$14225$1MHp3Q)
                    '0)))))
            (cons g$b$14223$1MHp3Q g$rest$14224$1MHp3Q))))))
   (g$string-ci<=?$14163$1MHp3Q
     g$string-ci<=?$14269$1MHp3Q
     (case-lambda
       ((g$a$14227$1MHp3Q g$b$14228$1MHp3Q . g$rest$14229$1MHp3Q)
        (begin
          (if (not (string? g$a$14227$1MHp3Q))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$14227$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14230$1MHp3Q)
               (begin
                 (if (not (string? g$x$14230$1MHp3Q))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$14230$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14231$1MHp3Q)
                     (begin
                       (set! g$a$14227$1MHp3Q g$x$14230$1MHp3Q)
                       g$r$14231$1MHp3Q)))
                  (g$<=$13383$1MHp3Q
                    (string-ci-compare
                      g$a$14227$1MHp3Q
                      g$x$14230$1MHp3Q)
                    '0)))))
            (cons g$b$14228$1MHp3Q g$rest$14229$1MHp3Q))))))
   (g$string-ci>=?$14164$1MHp3Q
     g$string-ci>=?$14270$1MHp3Q
     (case-lambda
       ((g$a$14232$1MHp3Q g$b$14233$1MHp3Q . g$rest$14234$1MHp3Q)
        (begin
          (if (not (string? g$a$14232$1MHp3Q))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$14232$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14235$1MHp3Q)
               (begin
                 (if (not (string? g$x$14235$1MHp3Q))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$14235$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14236$1MHp3Q)
                     (begin
                       (set! g$a$14232$1MHp3Q g$x$14235$1MHp3Q)
                       g$r$14236$1MHp3Q)))
                  (g$>=$13385$1MHp3Q
                    (string-ci-compare
                      g$a$14232$1MHp3Q
                      g$x$14235$1MHp3Q)
                    '0)))))
            (cons g$b$14233$1MHp3Q g$rest$14234$1MHp3Q))))))
   (g$char-ci=?$14203$1MHp3Q
     g$char-ci=?$14271$1MHp3Q
     (case-lambda
       ((g$a$14237$1MHp3Q g$b$14238$1MHp3Q . g$rest$14239$1MHp3Q)
        (begin
          (if (not (g$char?$12664$1MHp3Q g$a$14237$1MHp3Q))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$14237$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14240$1MHp3Q)
               (begin
                 (if (not (g$char?$12664$1MHp3Q g$x$14240$1MHp3Q))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$14240$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14241$1MHp3Q)
                     (begin
                       (set! g$a$14237$1MHp3Q g$x$14240$1MHp3Q)
                       g$r$14241$1MHp3Q)))
                  (g$=$13381$1MHp3Q
                    (char->integer (char-upcase g$a$14237$1MHp3Q))
                    (char->integer (char-upcase g$x$14240$1MHp3Q)))))))
            (cons g$b$14238$1MHp3Q g$rest$14239$1MHp3Q))))))
   (g$char-ci<?$14204$1MHp3Q
     g$char-ci<?$14272$1MHp3Q
     (case-lambda
       ((g$a$14242$1MHp3Q g$b$14243$1MHp3Q . g$rest$14244$1MHp3Q)
        (begin
          (if (not (g$char?$12664$1MHp3Q g$a$14242$1MHp3Q))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$14242$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14245$1MHp3Q)
               (begin
                 (if (not (g$char?$12664$1MHp3Q g$x$14245$1MHp3Q))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$14245$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14246$1MHp3Q)
                     (begin
                       (set! g$a$14242$1MHp3Q g$x$14245$1MHp3Q)
                       g$r$14246$1MHp3Q)))
                  (g$<$13382$1MHp3Q
                    (char->integer (char-upcase g$a$14242$1MHp3Q))
                    (char->integer (char-upcase g$x$14245$1MHp3Q)))))))
            (cons g$b$14243$1MHp3Q g$rest$14244$1MHp3Q))))))
   (g$char-ci>?$14205$1MHp3Q
     g$char-ci>?$14273$1MHp3Q
     (case-lambda
       ((g$a$14247$1MHp3Q g$b$14248$1MHp3Q . g$rest$14249$1MHp3Q)
        (begin
          (if (not (g$char?$12664$1MHp3Q g$a$14247$1MHp3Q))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$14247$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14250$1MHp3Q)
               (begin
                 (if (not (g$char?$12664$1MHp3Q g$x$14250$1MHp3Q))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$14250$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14251$1MHp3Q)
                     (begin
                       (set! g$a$14247$1MHp3Q g$x$14250$1MHp3Q)
                       g$r$14251$1MHp3Q)))
                  (g$>$13384$1MHp3Q
                    (char->integer (char-upcase g$a$14247$1MHp3Q))
                    (char->integer (char-upcase g$x$14250$1MHp3Q)))))))
            (cons g$b$14248$1MHp3Q g$rest$14249$1MHp3Q))))))
   (g$char-ci<=?$14206$1MHp3Q
     g$char-ci<=?$14274$1MHp3Q
     (case-lambda
       ((g$a$14252$1MHp3Q g$b$14253$1MHp3Q . g$rest$14254$1MHp3Q)
        (begin
          (if (not (g$char?$12664$1MHp3Q g$a$14252$1MHp3Q))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$14252$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14255$1MHp3Q)
               (begin
                 (if (not (g$char?$12664$1MHp3Q g$x$14255$1MHp3Q))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$14255$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14256$1MHp3Q)
                     (begin
                       (set! g$a$14252$1MHp3Q g$x$14255$1MHp3Q)
                       g$r$14256$1MHp3Q)))
                  (g$<=$13383$1MHp3Q
                    (char->integer (char-upcase g$a$14252$1MHp3Q))
                    (char->integer (char-upcase g$x$14255$1MHp3Q)))))))
            (cons g$b$14253$1MHp3Q g$rest$14254$1MHp3Q))))))
   (g$char-ci>=?$14207$1MHp3Q
     g$char-ci>=?$14275$1MHp3Q
     (case-lambda
       ((g$a$14257$1MHp3Q g$b$14258$1MHp3Q . g$rest$14259$1MHp3Q)
        (begin
          (if (not (g$char?$12664$1MHp3Q g$a$14257$1MHp3Q))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$14257$1MHp3Q)
            (void))
          (g$for-all$11833$1MHp3Q
            (case-lambda
              ((g$x$14260$1MHp3Q)
               (begin
                 (if (not (g$char?$12664$1MHp3Q g$x$14260$1MHp3Q))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$14260$1MHp3Q)
                   (void))
                 ((case-lambda
                    ((g$r$14261$1MHp3Q)
                     (begin
                       (set! g$a$14257$1MHp3Q g$x$14260$1MHp3Q)
                       g$r$14261$1MHp3Q)))
                  (g$>=$13385$1MHp3Q
                    (char->integer (char-upcase g$a$14257$1MHp3Q))
                    (char->integer (char-upcase g$x$14260$1MHp3Q)))))))
            (cons g$b$14258$1MHp3Q g$rest$14259$1MHp3Q))))))
   (g$string-normalize-nfc$14208$1MHp3Q
     g$string-normalize-nfc$14276$1MHp3Q
     (case-lambda
       ((g$s$14262$1MHp3Q) (string-normalize g$s$14262$1MHp3Q 'formc))))
   (g$string-normalize-nfd$14209$1MHp3Q
     g$string-normalize-nfd$14277$1MHp3Q
     (case-lambda
       ((g$s$14263$1MHp3Q) (string-normalize g$s$14263$1MHp3Q 'formd))))
   (g$string-normalize-nfkc$14210$1MHp3Q
     g$string-normalize-nfkc$14278$1MHp3Q
     (case-lambda
       ((g$s$14264$1MHp3Q)
        (string-normalize g$s$14264$1MHp3Q 'formkc))))
   (g$string-normalize-nfkd$14211$1MHp3Q
     g$string-normalize-nfkd$14279$1MHp3Q
     (case-lambda
       ((g$s$14265$1MHp3Q)
        (string-normalize g$s$14265$1MHp3Q 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$14280$1MHp3Q
     g$bitwise-if$14311$1MHp3Q
     (case-lambda
       ((g$ei1$14287$1MHp3Q g$ei2$14288$1MHp3Q g$ei3$14289$1MHp3Q)
        (bitwise-ior
          (bitwise-and g$ei1$14287$1MHp3Q g$ei2$14288$1MHp3Q)
          (bitwise-and
            (bitwise-not g$ei1$14287$1MHp3Q)
            g$ei3$14289$1MHp3Q)))))
   (g$bitwise-copy-bit$14281$1MHp3Q
     g$bitwise-copy-bit$14312$1MHp3Q
     (case-lambda
       ((g$ei1$14290$1MHp3Q g$ei2$14291$1MHp3Q g$ei3$14292$1MHp3Q)
        (g$bitwise-if$14280$1MHp3Q
          (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
            '1
            g$ei2$14291$1MHp3Q)
          (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
            g$ei3$14292$1MHp3Q
            g$ei2$14291$1MHp3Q)
          g$ei1$14290$1MHp3Q))))
   (g$bitwise-bit-field$14282$1MHp3Q
     g$bitwise-bit-field$14313$1MHp3Q
     (case-lambda
       ((g$ei1$14293$1MHp3Q g$ei2$14294$1MHp3Q g$ei3$14295$1MHp3Q)
        (g$bitwise-arithmetic-shift-right$14285$1MHp3Q
          (bitwise-and
            g$ei1$14293$1MHp3Q
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
                '-1
                g$ei3$14295$1MHp3Q)))
          g$ei2$14294$1MHp3Q))))
   (g$bitwise-copy-bit-field$14283$1MHp3Q
     g$bitwise-copy-bit-field$14314$1MHp3Q
     (case-lambda
       ((g$to$14296$1MHp3Q
          g$start$14297$1MHp3Q
          g$end$14298$1MHp3Q
          g$from$14299$1MHp3Q)
        (g$bitwise-if$14280$1MHp3Q
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
              '-1
              g$start$14297$1MHp3Q)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
                '-1
                g$end$14298$1MHp3Q)))
          (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
            g$from$14299$1MHp3Q
            g$start$14297$1MHp3Q)
          g$to$14296$1MHp3Q))))
   (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
     g$bitwise-arithmetic-shift-left$14315$1MHp3Q
     (case-lambda
       ((g$ei1$14300$1MHp3Q g$ei2$14301$1MHp3Q)
        (bitwise-arithmetic-shift
          g$ei1$14300$1MHp3Q
          g$ei2$14301$1MHp3Q))))
   (g$bitwise-arithmetic-shift-right$14285$1MHp3Q
     g$bitwise-arithmetic-shift-right$14316$1MHp3Q
     (case-lambda
       ((g$ei1$14302$1MHp3Q g$ei2$14303$1MHp3Q)
        (bitwise-arithmetic-shift
          g$ei1$14302$1MHp3Q
          (- g$ei2$14303$1MHp3Q)))))
   (g$bitwise-rotate-bit-field$14286$1MHp3Q
     g$bitwise-rotate-bit-field$14317$1MHp3Q
     (case-lambda
       ((g$n$14304$1MHp3Q
          g$start$14305$1MHp3Q
          g$end$14306$1MHp3Q
          g$count$14307$1MHp3Q)
        ((case-lambda
           ((g$width$14308$1MHp3Q)
            (if (g$positive?$13377$1MHp3Q g$width$14308$1MHp3Q)
              ((case-lambda
                 ((g$count$14309$1MHp3Q g$field$14310$1MHp3Q)
                  (g$bitwise-copy-bit-field$14283$1MHp3Q
                    g$n$14304$1MHp3Q
                    g$start$14305$1MHp3Q
                    g$end$14306$1MHp3Q
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$14284$1MHp3Q
                        g$field$14310$1MHp3Q
                        g$count$14309$1MHp3Q)
                      (g$bitwise-arithmetic-shift-right$14285$1MHp3Q
                        g$field$14310$1MHp3Q
                        (- g$width$14308$1MHp3Q
                           g$count$14309$1MHp3Q))))))
               (g$mod$12674$1MHp3Q
                 g$count$14307$1MHp3Q
                 g$width$14308$1MHp3Q)
               (g$bitwise-bit-field$14282$1MHp3Q
                 g$n$14304$1MHp3Q
                 g$start$14305$1MHp3Q
                 g$end$14306$1MHp3Q))
              g$n$14304$1MHp3Q)))
         (- g$end$14306$1MHp3Q g$start$14305$1MHp3Q))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$14318$1MHp3Q
     g$greatest-fixnum$16550$1MHp3Q
     (case-lambda (() '2147483647)))
   (g$least-fixnum$14319$1MHp3Q
     g$least-fixnum$16551$1MHp3Q
     (case-lambda (() '-2147483648)))
   (g$fx+$14425$1MHp3Q
     g$fx+$16552$1MHp3Q
     (case-lambda
       ((g$x1$14820$1MHp3Q g$x2$14821$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14820$1MHp3Q))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$14820$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$14821$1MHp3Q))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$14821$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$14820$1MHp3Q g$x2$14821$1MHp3Q)
                (g$overflow-error$14428$1MHp3Q '#f)))))))))
   (g$fx*$14426$1MHp3Q
     g$fx*$16553$1MHp3Q
     (case-lambda
       ((g$x1$14822$1MHp3Q g$x2$14823$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14822$1MHp3Q))
            (assertion-violation 'fx* '"not a fixnum" g$x1$14822$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$14823$1MHp3Q))
            (assertion-violation 'fx* '"not a fixnum" g$x2$14823$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$14822$1MHp3Q g$x2$14823$1MHp3Q)
                (g$overflow-error$14428$1MHp3Q '#f)))))))))
   (g$fx-$14427$1MHp3Q
     g$fx-$16554$1MHp3Q
     (case-lambda
       ((g$x1$14824$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14824$1MHp3Q))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14824$1MHp3Q)
            (void))
          (if ($fx=? (g$least-fixnum$14319$1MHp3Q) g$x1$14824$1MHp3Q)
            (g$overflow-error$14428$1MHp3Q 'fx- g$x1$14824$1MHp3Q)
            (void))
          ($$fx- g$x1$14824$1MHp3Q)))
       ((g$x1$14825$1MHp3Q g$x2$14826$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14825$1MHp3Q))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14825$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$14826$1MHp3Q))
            (assertion-violation 'fx- '"not a fixnum" g$x2$14826$1MHp3Q)
            (void))
          ($try
            ($fx- g$x1$14825$1MHp3Q g$x2$14826$1MHp3Q)
            (g$overflow-error$14428$1MHp3Q '#f))))))
   (g$overflow-error$14428$1MHp3Q
     g$overflow-error$16555$1MHp3Q
     (case-lambda
       ((g$name$14827$1MHp3Q . g$irritants$14828$1MHp3Q)
        (raise
          (condition
            (g$make-implementation-restriction-violation$13906$1MHp3Q)
            (g$make-who-condition$13888$1MHp3Q g$name$14827$1MHp3Q)
            (g$make-message-condition$13828$1MHp3Q
              '"arithmetic overflow")
            (g$make-irritants-condition$13878$1MHp3Q
              g$irritants$14828$1MHp3Q))))))
   (g$residual-fxarithmetic-shift*$14444$1MHp3Q
     g$residual-fxarithmetic-shift*$16556$1MHp3Q
     (case-lambda
       ((g$x$14849$1MHp3Q g$k$14850$1MHp3Q)
        (if ($fx=? g$k$14850$1MHp3Q '0)
          g$x$14849$1MHp3Q
          (if ($fx<? g$k$14850$1MHp3Q '0)
            ($fxarithmetic-shift-right
              g$x$14849$1MHp3Q
              ($$fx- g$k$14850$1MHp3Q))
            (begin
              '#f
              ((case-lambda
                 ((g$i$14851$1MHp3Q)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$14849$1MHp3Q)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$14851$1MHp3Q))
                      (g$overflow-error$14428$1MHp3Q
                        'fxarithmetic-shift
                        g$x$14849$1MHp3Q
                        g$k$14850$1MHp3Q)
                      (void))
                    g$i$14851$1MHp3Q)))
               ($fxarithmetic-shift-left
                 g$x$14849$1MHp3Q
                 g$k$14850$1MHp3Q))))))))
   (g$fxarithmetic-shift$14445$1MHp3Q
     g$fxarithmetic-shift$16557$1MHp3Q
     (case-lambda
       ((g$x$14852$1MHp3Q g$k$14853$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$14852$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$14852$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$k$14853$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$14853$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14874$1MHp3Q g$k$14875$1MHp3Q)
                  (if ($fx=? g$k$14875$1MHp3Q '0)
                    g$x$14874$1MHp3Q
                    (if ($fx<? g$k$14875$1MHp3Q '0)
                      ($fxarithmetic-shift-right
                        g$x$14874$1MHp3Q
                        ($$fx- g$k$14875$1MHp3Q))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$14876$1MHp3Q)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$14874$1MHp3Q)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$14876$1MHp3Q))
                                (g$overflow-error$14428$1MHp3Q
                                  'fxarithmetic-shift
                                  g$x$14874$1MHp3Q
                                  g$k$14875$1MHp3Q)
                                (void))
                              g$i$14876$1MHp3Q)))
                         ($fxarithmetic-shift-left
                           g$x$14874$1MHp3Q
                           g$k$14875$1MHp3Q)))))))
               g$x$14852$1MHp3Q
               g$k$14853$1MHp3Q))))))))
   (g$residual-fxbit-count*$14461$1MHp3Q
     g$residual-fxbit-count*$16558$1MHp3Q
     (case-lambda
       ((g$x$14897$1MHp3Q)
        (if ($fx<=? g$x$14897$1MHp3Q '0)
          ($fxnot
            (g$residual-fxbit-count*$14461$1MHp3Q
              ($fxnot g$x$14897$1MHp3Q)))
          ((letrec ((g$f$14898$1MHp3Q
                      (case-lambda
                        ((g$count$14899$1MHp3Q g$x$14900$1MHp3Q)
                         (if ($fx<? '0 g$x$14900$1MHp3Q)
                           (g$f$14898$1MHp3Q
                             ($$fx+
                               g$count$14899$1MHp3Q
                               ($fxand g$x$14900$1MHp3Q '1))
                             ($fxarithmetic-shift-right
                               g$x$14900$1MHp3Q
                               '1))
                           g$count$14899$1MHp3Q)))))
             g$f$14898$1MHp3Q)
           '0
           g$x$14897$1MHp3Q)))))
   (g$fxbit-count$14462$1MHp3Q
     g$fxbit-count$16559$1MHp3Q
     (case-lambda
       ((g$x$14901$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$14901$1MHp3Q))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$14901$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14922$1MHp3Q)
                  (if ($fx<=? g$x$14922$1MHp3Q '0)
                    ($fxnot
                      (g$residual-fxbit-count*$14461$1MHp3Q
                        ($fxnot g$x$14922$1MHp3Q)))
                    ((letrec ((g$f$14923$1MHp3Q
                                (case-lambda
                                  ((g$count$14924$1MHp3Q
                                     g$x$14925$1MHp3Q)
                                   (if ($fx<? '0 g$x$14925$1MHp3Q)
                                     (g$f$14923$1MHp3Q
                                       ($$fx+
                                         g$count$14924$1MHp3Q
                                         ($fxand g$x$14925$1MHp3Q '1))
                                       ($fxarithmetic-shift-right
                                         g$x$14925$1MHp3Q
                                         '1))
                                     g$count$14924$1MHp3Q)))))
                       g$f$14923$1MHp3Q)
                     '0
                     g$x$14922$1MHp3Q))))
               g$x$14901$1MHp3Q))))))))
   (g$residual-fxlength*$14478$1MHp3Q
     g$residual-fxlength*$16560$1MHp3Q
     (case-lambda
       ((g$x$14946$1MHp3Q)
        (if ($fx<? g$x$14946$1MHp3Q '0)
          (g$residual-fxlength*$14478$1MHp3Q ($fxnot g$x$14946$1MHp3Q))
          ((letrec ((g$f$14947$1MHp3Q
                      (case-lambda
                        ((g$count$14948$1MHp3Q g$x$14949$1MHp3Q)
                         (if ($fx<? '0 g$x$14949$1MHp3Q)
                           (g$f$14947$1MHp3Q
                             ($$fx+ g$count$14948$1MHp3Q '1)
                             ($fxarithmetic-shift-right
                               g$x$14949$1MHp3Q
                               '1))
                           g$count$14948$1MHp3Q)))))
             g$f$14947$1MHp3Q)
           '0
           g$x$14946$1MHp3Q)))))
   (g$fxlength$14479$1MHp3Q
     g$fxlength$16561$1MHp3Q
     (case-lambda
       ((g$x$14950$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$14950$1MHp3Q))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$14950$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14971$1MHp3Q)
                  (if ($fx<? g$x$14971$1MHp3Q '0)
                    (g$residual-fxlength*$14478$1MHp3Q
                      ($fxnot g$x$14971$1MHp3Q))
                    ((letrec ((g$f$14972$1MHp3Q
                                (case-lambda
                                  ((g$count$14973$1MHp3Q
                                     g$x$14974$1MHp3Q)
                                   (if ($fx<? '0 g$x$14974$1MHp3Q)
                                     (g$f$14972$1MHp3Q
                                       ($$fx+ g$count$14973$1MHp3Q '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14974$1MHp3Q
                                         '1))
                                     g$count$14973$1MHp3Q)))))
                       g$f$14972$1MHp3Q)
                     '0
                     g$x$14971$1MHp3Q))))
               g$x$14950$1MHp3Q))))))))
   (g$fxfirst-bit-set$14480$1MHp3Q
     g$fxfirst-bit-set$16562$1MHp3Q
     (case-lambda
       ((g$x$14975$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$14975$1MHp3Q))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$14975$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$14975$1MHp3Q '0)
                '-1
                ((letrec ((g$f$14976$1MHp3Q
                            (case-lambda
                              ((g$count$14977$1MHp3Q g$x$14978$1MHp3Q)
                               (if (not ($fx=? '0 g$x$14978$1MHp3Q))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$14978$1MHp3Q))
                                   g$count$14977$1MHp3Q
                                   (g$f$14976$1MHp3Q
                                     ($$fx+ g$count$14977$1MHp3Q '1)
                                     ($fxarithmetic-shift-right
                                       g$x$14978$1MHp3Q
                                       '1)))
                                 g$count$14977$1MHp3Q)))))
                   g$f$14976$1MHp3Q)
                 '0
                 g$x$14975$1MHp3Q)))))))))
   (g$fxbit-set?$14481$1MHp3Q
     g$fxbit-set?$16563$1MHp3Q
     (case-lambda
       ((g$x$14979$1MHp3Q g$k$14980$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x$14979$1MHp3Q))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$14979$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$k$14980$1MHp3Q))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$14980$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$14980$1MHp3Q '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$14980$1MHp3Q)
                  (void))
                (if ($fx>=? g$k$14980$1MHp3Q '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$14980$1MHp3Q)
                  (void))
                (if ($fx=? '0 g$x$14979$1MHp3Q)
                  '#f
                  ((letrec ((g$f$14981$1MHp3Q
                              (case-lambda
                                ((g$count$14982$1MHp3Q g$x$14983$1MHp3Q)
                                 (if (not ($fx=? '0 g$x$14983$1MHp3Q))
                                   (if (if ($fx=?
                                             g$count$14982$1MHp3Q
                                             g$k$14980$1MHp3Q)
                                         (begin
                                           '#f
                                           ($fx=?
                                             '1
                                             ($fxand
                                               '1
                                               g$x$14983$1MHp3Q)))
                                         '#f)
                                     '#t
                                     (g$f$14981$1MHp3Q
                                       ($$fx+ g$count$14982$1MHp3Q '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14983$1MHp3Q
                                         '1)))
                                   '#f)))))
                     g$f$14981$1MHp3Q)
                   '0
                   g$x$14979$1MHp3Q))))))))))
   (g$fxnot$14482$1MHp3Q
     g$fxnot$16564$1MHp3Q
     (case-lambda
       ((g$x1$14984$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14984$1MHp3Q))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$14984$1MHp3Q)
            (void))
          ((case-lambda (() ($fxnot g$x1$14984$1MHp3Q))))))))
   (g$fx=?$14533$1MHp3Q
     g$fx=?$16565$1MHp3Q
     (case-lambda
       ((g$x1$14985$1MHp3Q g$x2$14986$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14985$1MHp3Q))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$14985$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$14986$1MHp3Q))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$14986$1MHp3Q)
            (void))
          ($fx=? g$x1$14985$1MHp3Q g$x2$14986$1MHp3Q)))
       ((g$x1$14987$1MHp3Q g$x2$14988$1MHp3Q . g$rest$14989$1MHp3Q)
        ((letrec ((g$f$14990$1MHp3Q
                    (case-lambda
                      ((g$a$14991$1MHp3Q g$b$14992$1MHp3Q)
                       (if (null? g$b$14992$1MHp3Q)
                         '#t
                         (if (g$fx=?$14533$1MHp3Q
                               g$a$14991$1MHp3Q
                               ($car g$b$14992$1MHp3Q))
                           (g$f$14990$1MHp3Q
                             ($car g$b$14992$1MHp3Q)
                             ($cdr g$b$14992$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$14990$1MHp3Q)
         g$x1$14987$1MHp3Q
         (cons g$x2$14988$1MHp3Q g$rest$14989$1MHp3Q)))))
   (g$fx<?$14534$1MHp3Q
     g$fx<?$16566$1MHp3Q
     (case-lambda
       ((g$x1$14993$1MHp3Q g$x2$14994$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$14993$1MHp3Q))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$14993$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$14994$1MHp3Q))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$14994$1MHp3Q)
            (void))
          ($fx<? g$x1$14993$1MHp3Q g$x2$14994$1MHp3Q)))
       ((g$x1$14995$1MHp3Q g$x2$14996$1MHp3Q . g$rest$14997$1MHp3Q)
        ((letrec ((g$f$14998$1MHp3Q
                    (case-lambda
                      ((g$a$14999$1MHp3Q g$b$15000$1MHp3Q)
                       (if (null? g$b$15000$1MHp3Q)
                         '#t
                         (if (g$fx<?$14534$1MHp3Q
                               g$a$14999$1MHp3Q
                               ($car g$b$15000$1MHp3Q))
                           (g$f$14998$1MHp3Q
                             ($car g$b$15000$1MHp3Q)
                             ($cdr g$b$15000$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$14998$1MHp3Q)
         g$x1$14995$1MHp3Q
         (cons g$x2$14996$1MHp3Q g$rest$14997$1MHp3Q)))))
   (g$fx<=?$14535$1MHp3Q
     g$fx<=?$16567$1MHp3Q
     (case-lambda
       ((g$x1$15001$1MHp3Q g$x2$15002$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15001$1MHp3Q))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$15001$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15002$1MHp3Q))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$15002$1MHp3Q)
            (void))
          ($fx<=? g$x1$15001$1MHp3Q g$x2$15002$1MHp3Q)))
       ((g$x1$15003$1MHp3Q g$x2$15004$1MHp3Q . g$rest$15005$1MHp3Q)
        ((letrec ((g$f$15006$1MHp3Q
                    (case-lambda
                      ((g$a$15007$1MHp3Q g$b$15008$1MHp3Q)
                       (if (null? g$b$15008$1MHp3Q)
                         '#t
                         (if (g$fx<=?$14535$1MHp3Q
                               g$a$15007$1MHp3Q
                               ($car g$b$15008$1MHp3Q))
                           (g$f$15006$1MHp3Q
                             ($car g$b$15008$1MHp3Q)
                             ($cdr g$b$15008$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$15006$1MHp3Q)
         g$x1$15003$1MHp3Q
         (cons g$x2$15004$1MHp3Q g$rest$15005$1MHp3Q)))))
   (g$fx>?$14536$1MHp3Q
     g$fx>?$16568$1MHp3Q
     (case-lambda
       ((g$x1$15009$1MHp3Q g$x2$15010$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15009$1MHp3Q))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$15009$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15010$1MHp3Q))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$15010$1MHp3Q)
            (void))
          ($fx>? g$x1$15009$1MHp3Q g$x2$15010$1MHp3Q)))
       ((g$x1$15011$1MHp3Q g$x2$15012$1MHp3Q . g$rest$15013$1MHp3Q)
        ((letrec ((g$f$15014$1MHp3Q
                    (case-lambda
                      ((g$a$15015$1MHp3Q g$b$15016$1MHp3Q)
                       (if (null? g$b$15016$1MHp3Q)
                         '#t
                         (if (g$fx>?$14536$1MHp3Q
                               g$a$15015$1MHp3Q
                               ($car g$b$15016$1MHp3Q))
                           (g$f$15014$1MHp3Q
                             ($car g$b$15016$1MHp3Q)
                             ($cdr g$b$15016$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$15014$1MHp3Q)
         g$x1$15011$1MHp3Q
         (cons g$x2$15012$1MHp3Q g$rest$15013$1MHp3Q)))))
   (g$fx>=?$14537$1MHp3Q
     g$fx>=?$16569$1MHp3Q
     (case-lambda
       ((g$x1$15017$1MHp3Q g$x2$15018$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15017$1MHp3Q))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$15017$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15018$1MHp3Q))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$15018$1MHp3Q)
            (void))
          ($fx>=? g$x1$15017$1MHp3Q g$x2$15018$1MHp3Q)))
       ((g$x1$15019$1MHp3Q g$x2$15020$1MHp3Q . g$rest$15021$1MHp3Q)
        ((letrec ((g$f$15022$1MHp3Q
                    (case-lambda
                      ((g$a$15023$1MHp3Q g$b$15024$1MHp3Q)
                       (if (null? g$b$15024$1MHp3Q)
                         '#t
                         (if (g$fx>=?$14537$1MHp3Q
                               g$a$15023$1MHp3Q
                               ($car g$b$15024$1MHp3Q))
                           (g$f$15022$1MHp3Q
                             ($car g$b$15024$1MHp3Q)
                             ($cdr g$b$15024$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$15022$1MHp3Q)
         g$x1$15019$1MHp3Q
         (cons g$x2$15020$1MHp3Q g$rest$15021$1MHp3Q)))))
   (g$fxand$14585$1MHp3Q
     g$fxand$16570$1MHp3Q
     (case-lambda
       (() '-1)
       ((g$x1$15025$1MHp3Q g$x2$15026$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15025$1MHp3Q))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$15025$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15026$1MHp3Q))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$15026$1MHp3Q)
            (void))
          ($fxand g$x1$15025$1MHp3Q g$x2$15026$1MHp3Q)))
       (g$args$15027$1MHp3Q
        (g$fold-left$11838$1MHp3Q
          g$fxand$14585$1MHp3Q
          (g$fxand$14585$1MHp3Q)
          g$args$15027$1MHp3Q))))
   (g$fxior$14586$1MHp3Q
     g$fxior$16571$1MHp3Q
     (case-lambda
       (() '0)
       ((g$x1$15028$1MHp3Q g$x2$15029$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15028$1MHp3Q))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$15028$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15029$1MHp3Q))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$15029$1MHp3Q)
            (void))
          ($fxior g$x1$15028$1MHp3Q g$x2$15029$1MHp3Q)))
       (g$args$15030$1MHp3Q
        (g$fold-left$11838$1MHp3Q
          g$fxior$14586$1MHp3Q
          (g$fxior$14586$1MHp3Q)
          g$args$15030$1MHp3Q))))
   (g$fxxor$14587$1MHp3Q
     g$fxxor$16572$1MHp3Q
     (case-lambda
       (() '0)
       ((g$x1$15031$1MHp3Q g$x2$15032$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15031$1MHp3Q))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$15031$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15032$1MHp3Q))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$15032$1MHp3Q)
            (void))
          ($fxxor g$x1$15031$1MHp3Q g$x2$15032$1MHp3Q)))
       (g$args$15033$1MHp3Q
        (g$fold-left$11838$1MHp3Q
          g$fxxor$14587$1MHp3Q
          (g$fxxor$14587$1MHp3Q)
          g$args$15033$1MHp3Q))))
   (g$residual-fxdiv*$14603$1MHp3Q
     g$residual-fxdiv*$16573$1MHp3Q
     (case-lambda
       ((g$x1$15054$1MHp3Q g$x2$15055$1MHp3Q)
        (begin
          (if ($fx=? '0 g$x2$15055$1MHp3Q)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$15054$1MHp3Q
              g$x2$15055$1MHp3Q)
            (void))
          (if (if ($fx=? '-1 g$x2$15055$1MHp3Q)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14319$1MHp3Q)
                    g$x1$15054$1MHp3Q))
                '#f)
            (g$overflow-error$14428$1MHp3Q
              'fxdiv
              g$x1$15054$1MHp3Q
              g$x2$15055$1MHp3Q)
            (void))
          (if ($fx=? '0 g$x1$15054$1MHp3Q)
            '0
            (if ($fx<? '0 g$x1$15054$1MHp3Q)
              ((case-lambda
                 ((g$x1$15076$1MHp3Q g$x2$15077$1MHp3Q)
                  ($fxdiv0 g$x1$15076$1MHp3Q g$x2$15077$1MHp3Q)))
               g$x1$15054$1MHp3Q
               g$x2$15055$1MHp3Q)
              (if ($fx<? '0 g$x2$15055$1MHp3Q)
                ((case-lambda
                   ((g$x1$15098$1MHp3Q g$x2$15099$1MHp3Q)
                    ($fxdiv0 g$x1$15098$1MHp3Q g$x2$15099$1MHp3Q)))
                 ($$fx- g$x1$15054$1MHp3Q ($$fx- g$x2$15055$1MHp3Q '1))
                 g$x2$15055$1MHp3Q)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$15120$1MHp3Q g$x2$15121$1MHp3Q)
                      ($fxdiv0 g$x1$15120$1MHp3Q g$x2$15121$1MHp3Q)))
                   ($$fx+
                     g$x1$15054$1MHp3Q
                     ($$fx+ g$x2$15055$1MHp3Q '1))
                   g$x2$15055$1MHp3Q)))))))))
   (g$fxdiv$14604$1MHp3Q
     g$fxdiv$16574$1MHp3Q
     (case-lambda
       ((g$x1$15122$1MHp3Q g$x2$15123$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15122$1MHp3Q))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$15122$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15123$1MHp3Q))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$15123$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15144$1MHp3Q g$x2$15145$1MHp3Q)
                  (begin
                    (if ($fx=? '0 g$x2$15145$1MHp3Q)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$15144$1MHp3Q
                        g$x2$15145$1MHp3Q)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15145$1MHp3Q)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14319$1MHp3Q)
                              g$x1$15144$1MHp3Q))
                          '#f)
                      (g$overflow-error$14428$1MHp3Q
                        'fxdiv
                        g$x1$15144$1MHp3Q
                        g$x2$15145$1MHp3Q)
                      (void))
                    (if ($fx=? '0 g$x1$15144$1MHp3Q)
                      '0
                      (if ($fx<? '0 g$x1$15144$1MHp3Q)
                        ((case-lambda
                           ((g$x1$15166$1MHp3Q g$x2$15167$1MHp3Q)
                            ($fxdiv0
                              g$x1$15166$1MHp3Q
                              g$x2$15167$1MHp3Q)))
                         g$x1$15144$1MHp3Q
                         g$x2$15145$1MHp3Q)
                        (if ($fx<? '0 g$x2$15145$1MHp3Q)
                          ((case-lambda
                             ((g$x1$15188$1MHp3Q g$x2$15189$1MHp3Q)
                              ($fxdiv0
                                g$x1$15188$1MHp3Q
                                g$x2$15189$1MHp3Q)))
                           ($$fx-
                             g$x1$15144$1MHp3Q
                             ($$fx- g$x2$15145$1MHp3Q '1))
                           g$x2$15145$1MHp3Q)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$15210$1MHp3Q g$x2$15211$1MHp3Q)
                                ($fxdiv0
                                  g$x1$15210$1MHp3Q
                                  g$x2$15211$1MHp3Q)))
                             ($$fx+
                               g$x1$15144$1MHp3Q
                               ($$fx+ g$x2$15145$1MHp3Q '1))
                             g$x2$15145$1MHp3Q))))))))
               g$x1$15122$1MHp3Q
               g$x2$15123$1MHp3Q))))))))
   (g$residual-fxmod*$14620$1MHp3Q
     g$residual-fxmod*$16575$1MHp3Q
     (case-lambda
       ((g$x1$15232$1MHp3Q g$x2$15233$1MHp3Q)
        ($$fx-
          g$x1$15232$1MHp3Q
          ($$fx*
            ((case-lambda
               ((g$x1$15254$1MHp3Q g$x2$15255$1MHp3Q)
                (begin
                  (if ($fx=? '0 g$x2$15255$1MHp3Q)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$15254$1MHp3Q
                      g$x2$15255$1MHp3Q)
                    (void))
                  (if (if ($fx=? '-1 g$x2$15255$1MHp3Q)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$14319$1MHp3Q)
                            g$x1$15254$1MHp3Q))
                        '#f)
                    (g$overflow-error$14428$1MHp3Q
                      'fxdiv
                      g$x1$15254$1MHp3Q
                      g$x2$15255$1MHp3Q)
                    (void))
                  (if ($fx=? '0 g$x1$15254$1MHp3Q)
                    '0
                    (if ($fx<? '0 g$x1$15254$1MHp3Q)
                      ((case-lambda
                         ((g$x1$15276$1MHp3Q g$x2$15277$1MHp3Q)
                          ($fxdiv0
                            g$x1$15276$1MHp3Q
                            g$x2$15277$1MHp3Q)))
                       g$x1$15254$1MHp3Q
                       g$x2$15255$1MHp3Q)
                      (if ($fx<? '0 g$x2$15255$1MHp3Q)
                        ((case-lambda
                           ((g$x1$15298$1MHp3Q g$x2$15299$1MHp3Q)
                            ($fxdiv0
                              g$x1$15298$1MHp3Q
                              g$x2$15299$1MHp3Q)))
                         ($$fx-
                           g$x1$15254$1MHp3Q
                           ($$fx- g$x2$15255$1MHp3Q '1))
                         g$x2$15255$1MHp3Q)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$15320$1MHp3Q g$x2$15321$1MHp3Q)
                              ($fxdiv0
                                g$x1$15320$1MHp3Q
                                g$x2$15321$1MHp3Q)))
                           ($$fx+
                             g$x1$15254$1MHp3Q
                             ($$fx+ g$x2$15255$1MHp3Q '1))
                           g$x2$15255$1MHp3Q))))))))
             g$x1$15232$1MHp3Q
             g$x2$15233$1MHp3Q)
            g$x2$15233$1MHp3Q)))))
   (g$fxmod$14621$1MHp3Q
     g$fxmod$16576$1MHp3Q
     (case-lambda
       ((g$x1$15322$1MHp3Q g$x2$15323$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15322$1MHp3Q))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$15322$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15323$1MHp3Q))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$15323$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15344$1MHp3Q g$x2$15345$1MHp3Q)
                  ($$fx-
                    g$x1$15344$1MHp3Q
                    ($$fx*
                      ((case-lambda
                         ((g$x1$15366$1MHp3Q g$x2$15367$1MHp3Q)
                          (begin
                            (if ($fx=? '0 g$x2$15367$1MHp3Q)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$15366$1MHp3Q
                                g$x2$15367$1MHp3Q)
                              (void))
                            (if (if ($fx=? '-1 g$x2$15367$1MHp3Q)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$14319$1MHp3Q)
                                      g$x1$15366$1MHp3Q))
                                  '#f)
                              (g$overflow-error$14428$1MHp3Q
                                'fxdiv
                                g$x1$15366$1MHp3Q
                                g$x2$15367$1MHp3Q)
                              (void))
                            (if ($fx=? '0 g$x1$15366$1MHp3Q)
                              '0
                              (if ($fx<? '0 g$x1$15366$1MHp3Q)
                                ((case-lambda
                                   ((g$x1$15388$1MHp3Q
                                      g$x2$15389$1MHp3Q)
                                    ($fxdiv0
                                      g$x1$15388$1MHp3Q
                                      g$x2$15389$1MHp3Q)))
                                 g$x1$15366$1MHp3Q
                                 g$x2$15367$1MHp3Q)
                                (if ($fx<? '0 g$x2$15367$1MHp3Q)
                                  ((case-lambda
                                     ((g$x1$15410$1MHp3Q
                                        g$x2$15411$1MHp3Q)
                                      ($fxdiv0
                                        g$x1$15410$1MHp3Q
                                        g$x2$15411$1MHp3Q)))
                                   ($$fx-
                                     g$x1$15366$1MHp3Q
                                     ($$fx- g$x2$15367$1MHp3Q '1))
                                   g$x2$15367$1MHp3Q)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$15432$1MHp3Q
                                          g$x2$15433$1MHp3Q)
                                        ($fxdiv0
                                          g$x1$15432$1MHp3Q
                                          g$x2$15433$1MHp3Q)))
                                     ($$fx+
                                       g$x1$15366$1MHp3Q
                                       ($$fx+ g$x2$15367$1MHp3Q '1))
                                     g$x2$15367$1MHp3Q))))))))
                       g$x1$15344$1MHp3Q
                       g$x2$15345$1MHp3Q)
                      g$x2$15345$1MHp3Q))))
               g$x1$15322$1MHp3Q
               g$x2$15323$1MHp3Q))))))))
   (g$fxmod0$14622$1MHp3Q
     g$fxmod0$16577$1MHp3Q
     (case-lambda
       ((g$x1$15434$1MHp3Q g$x2$15435$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15434$1MHp3Q))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$15434$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15435$1MHp3Q))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$15435$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$15435$1MHp3Q)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$15434$1MHp3Q
                    g$x2$15435$1MHp3Q)
                  (void))
                (if (if ($fx=? '-1 g$x2$15435$1MHp3Q)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$14319$1MHp3Q)
                          g$x1$15434$1MHp3Q))
                      '#f)
                  (g$overflow-error$14428$1MHp3Q
                    'fxmod0
                    g$x1$15434$1MHp3Q
                    g$x2$15435$1MHp3Q)
                  (void))
                ($fxmod0 g$x1$15434$1MHp3Q g$x2$15435$1MHp3Q)))))))))
   (g$fxdiv-and-mod$14623$1MHp3Q
     g$fxdiv-and-mod$16578$1MHp3Q
     (case-lambda
       ((g$x1$15436$1MHp3Q g$x2$15437$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15436$1MHp3Q))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$15436$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15437$1MHp3Q))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$15437$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15438$1MHp3Q)
                  (values
                    g$d$15438$1MHp3Q
                    ($$fx-
                      g$x1$15436$1MHp3Q
                      ($$fx* g$d$15438$1MHp3Q g$x2$15437$1MHp3Q)))))
               ((case-lambda
                  ((g$x1$15459$1MHp3Q g$x2$15460$1MHp3Q)
                   (begin
                     (if ($fx=? '0 g$x2$15460$1MHp3Q)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$15459$1MHp3Q
                         g$x2$15460$1MHp3Q)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15460$1MHp3Q)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14319$1MHp3Q)
                               g$x1$15459$1MHp3Q))
                           '#f)
                       (g$overflow-error$14428$1MHp3Q
                         'fxdiv
                         g$x1$15459$1MHp3Q
                         g$x2$15460$1MHp3Q)
                       (void))
                     (if ($fx=? '0 g$x1$15459$1MHp3Q)
                       '0
                       (if ($fx<? '0 g$x1$15459$1MHp3Q)
                         ((case-lambda
                            ((g$x1$15481$1MHp3Q g$x2$15482$1MHp3Q)
                             ($fxdiv0
                               g$x1$15481$1MHp3Q
                               g$x2$15482$1MHp3Q)))
                          g$x1$15459$1MHp3Q
                          g$x2$15460$1MHp3Q)
                         (if ($fx<? '0 g$x2$15460$1MHp3Q)
                           ((case-lambda
                              ((g$x1$15503$1MHp3Q g$x2$15504$1MHp3Q)
                               ($fxdiv0
                                 g$x1$15503$1MHp3Q
                                 g$x2$15504$1MHp3Q)))
                            ($$fx-
                              g$x1$15459$1MHp3Q
                              ($$fx- g$x2$15460$1MHp3Q '1))
                            g$x2$15460$1MHp3Q)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$15525$1MHp3Q g$x2$15526$1MHp3Q)
                                 ($fxdiv0
                                   g$x1$15525$1MHp3Q
                                   g$x2$15526$1MHp3Q)))
                              ($$fx+
                                g$x1$15459$1MHp3Q
                                ($$fx+ g$x2$15460$1MHp3Q '1))
                              g$x2$15460$1MHp3Q))))))))
                g$x1$15436$1MHp3Q
                g$x2$15437$1MHp3Q)))))))))
   (g$residual-fxdiv0*$14639$1MHp3Q
     g$residual-fxdiv0*$16579$1MHp3Q
     (case-lambda
       ((g$x1$15547$1MHp3Q g$x2$15548$1MHp3Q)
        (begin
          (if ($fx=? '0 g$x2$15548$1MHp3Q)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$15547$1MHp3Q
              g$x2$15548$1MHp3Q)
            (void))
          (if (if ($fx=? '-1 g$x2$15548$1MHp3Q)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14319$1MHp3Q)
                    g$x1$15547$1MHp3Q))
                '#f)
            (g$overflow-error$14428$1MHp3Q
              'fxdiv0
              g$x1$15547$1MHp3Q
              g$x2$15548$1MHp3Q)
            (void))
          ((case-lambda
             ((g$x1$15569$1MHp3Q g$x2$15570$1MHp3Q)
              ($fxdiv0 g$x1$15569$1MHp3Q g$x2$15570$1MHp3Q)))
           g$x1$15547$1MHp3Q
           g$x2$15548$1MHp3Q)))))
   (g$fxdiv0$14640$1MHp3Q
     g$fxdiv0$16580$1MHp3Q
     (case-lambda
       ((g$x1$15571$1MHp3Q g$x2$15572$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15571$1MHp3Q))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$15571$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15572$1MHp3Q))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$15572$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15593$1MHp3Q g$x2$15594$1MHp3Q)
                  (begin
                    (if ($fx=? '0 g$x2$15594$1MHp3Q)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$15593$1MHp3Q
                        g$x2$15594$1MHp3Q)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15594$1MHp3Q)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14319$1MHp3Q)
                              g$x1$15593$1MHp3Q))
                          '#f)
                      (g$overflow-error$14428$1MHp3Q
                        'fxdiv0
                        g$x1$15593$1MHp3Q
                        g$x2$15594$1MHp3Q)
                      (void))
                    ((case-lambda
                       ((g$x1$15615$1MHp3Q g$x2$15616$1MHp3Q)
                        ($fxdiv0 g$x1$15615$1MHp3Q g$x2$15616$1MHp3Q)))
                     g$x1$15593$1MHp3Q
                     g$x2$15594$1MHp3Q))))
               g$x1$15571$1MHp3Q
               g$x2$15572$1MHp3Q))))))))
   (g$residual-%%fxdiv0$14656$1MHp3Q
     g$residual-%%fxdiv0$16581$1MHp3Q
     (case-lambda
       ((g$x1$15637$1MHp3Q g$x2$15638$1MHp3Q)
        ($fxdiv0 g$x1$15637$1MHp3Q g$x2$15638$1MHp3Q))))
   (g$fxdiv0-and-mod0$14657$1MHp3Q
     g$fxdiv0-and-mod0$16582$1MHp3Q
     (case-lambda
       ((g$x1$15639$1MHp3Q g$x2$15640$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$15639$1MHp3Q))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$15639$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$x2$15640$1MHp3Q))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$15640$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15641$1MHp3Q)
                  (values
                    g$d$15641$1MHp3Q
                    ($$fx-
                      g$x1$15639$1MHp3Q
                      ($$fx* g$d$15641$1MHp3Q g$x2$15640$1MHp3Q)))))
               ((case-lambda
                  ((g$x1$15662$1MHp3Q g$x2$15663$1MHp3Q)
                   (begin
                     (if ($fx=? '0 g$x2$15663$1MHp3Q)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$15662$1MHp3Q
                         g$x2$15663$1MHp3Q)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15663$1MHp3Q)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14319$1MHp3Q)
                               g$x1$15662$1MHp3Q))
                           '#f)
                       (g$overflow-error$14428$1MHp3Q
                         'fxdiv0
                         g$x1$15662$1MHp3Q
                         g$x2$15663$1MHp3Q)
                       (void))
                     ((case-lambda
                        ((g$x1$15684$1MHp3Q g$x2$15685$1MHp3Q)
                         ($fxdiv0 g$x1$15684$1MHp3Q g$x2$15685$1MHp3Q)))
                      g$x1$15662$1MHp3Q
                      g$x2$15663$1MHp3Q))))
                g$x1$15639$1MHp3Q
                g$x2$15640$1MHp3Q)))))))))
   (g$residual-fxpositive?*$14673$1MHp3Q
     g$residual-fxpositive?*$16583$1MHp3Q
     (case-lambda ((g$r$15706$1MHp3Q) ($fx<? '0 g$r$15706$1MHp3Q))))
   (g$fxpositive?$14674$1MHp3Q
     g$fxpositive?$16584$1MHp3Q
     (case-lambda
       ((g$r$15707$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$r$15707$1MHp3Q))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$15707$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15728$1MHp3Q) ($fx<? '0 g$r$15728$1MHp3Q)))
               g$r$15707$1MHp3Q))))))))
   (g$residual-fxnegative?*$14690$1MHp3Q
     g$residual-fxnegative?*$16585$1MHp3Q
     (case-lambda ((g$r$15749$1MHp3Q) ($fx>? '0 g$r$15749$1MHp3Q))))
   (g$fxnegative?$14691$1MHp3Q
     g$fxnegative?$16586$1MHp3Q
     (case-lambda
       ((g$r$15750$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$r$15750$1MHp3Q))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$15750$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15771$1MHp3Q) ($fx>? '0 g$r$15771$1MHp3Q)))
               g$r$15750$1MHp3Q))))))))
   (g$residual-fxzero?*$14707$1MHp3Q
     g$residual-fxzero?*$16587$1MHp3Q
     (case-lambda ((g$r$15792$1MHp3Q) ($fx=? '0 g$r$15792$1MHp3Q))))
   (g$fxzero?$14708$1MHp3Q
     g$fxzero?$16588$1MHp3Q
     (case-lambda
       ((g$r$15793$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$r$15793$1MHp3Q))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$15793$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15814$1MHp3Q) ($fx=? '0 g$r$15814$1MHp3Q)))
               g$r$15793$1MHp3Q))))))))
   (g$residual-fxeven?*$14724$1MHp3Q
     g$residual-fxeven?*$16589$1MHp3Q
     (case-lambda
       ((g$n$15835$1MHp3Q) ($fx=? '0 ($fxand g$n$15835$1MHp3Q '1)))))
   (g$fxeven?$14725$1MHp3Q
     g$fxeven?$16590$1MHp3Q
     (case-lambda
       ((g$n$15836$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$n$15836$1MHp3Q))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$15836$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15857$1MHp3Q)
                  ($fx=? '0 ($fxand g$n$15857$1MHp3Q '1))))
               g$n$15836$1MHp3Q))))))))
   (g$residual-fxodd?*$14741$1MHp3Q
     g$residual-fxodd?*$16591$1MHp3Q
     (case-lambda
       ((g$n$15878$1MHp3Q) ($fx=? '1 ($fxand g$n$15878$1MHp3Q '1)))))
   (g$fxodd?$14742$1MHp3Q
     g$fxodd?$16592$1MHp3Q
     (case-lambda
       ((g$n$15879$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$n$15879$1MHp3Q))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$15879$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15900$1MHp3Q)
                  ($fx=? '1 ($fxand g$n$15900$1MHp3Q '1))))
               g$n$15879$1MHp3Q))))))))
   (g$fxmax$14743$1MHp3Q
     g$fxmax$16593$1MHp3Q
     (case-lambda
       ((g$a$15901$1MHp3Q . g$rest$15902$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$a$15901$1MHp3Q))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$15901$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$15903$1MHp3Q g$b$15904$1MHp3Q)
               (if (g$fx<?$14534$1MHp3Q
                     g$a$15903$1MHp3Q
                     g$b$15904$1MHp3Q)
                 g$b$15904$1MHp3Q
                 g$a$15903$1MHp3Q)))
            g$a$15901$1MHp3Q
            g$rest$15902$1MHp3Q)))))
   (g$fxmin$14744$1MHp3Q
     g$fxmin$16594$1MHp3Q
     (case-lambda
       ((g$a$15905$1MHp3Q . g$rest$15906$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$a$15905$1MHp3Q))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$15905$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$15907$1MHp3Q g$b$15908$1MHp3Q)
               (if (g$fx>?$14536$1MHp3Q
                     g$a$15907$1MHp3Q
                     g$b$15908$1MHp3Q)
                 g$b$15908$1MHp3Q
                 g$a$15907$1MHp3Q)))
            g$a$15905$1MHp3Q
            g$rest$15906$1MHp3Q)))))
   (g$fx*/carry$14745$1MHp3Q
     g$fx*/carry$16595$1MHp3Q
     (case-lambda
       ((g$fx1$15909$1MHp3Q g$fx2$15910$1MHp3Q g$fx3$15911$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$15909$1MHp3Q))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$15909$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$15910$1MHp3Q))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$15910$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$15911$1MHp3Q))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$15911$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15912$1MHp3Q g$e$15913$1MHp3Q)
                  (values
                    (g$mod0$12675$1MHp3Q
                      g$s$15912$1MHp3Q
                      g$e$15913$1MHp3Q)
                    (g$div0$12673$1MHp3Q
                      g$s$15912$1MHp3Q
                      g$e$15913$1MHp3Q))))
               (+ (* g$fx1$15909$1MHp3Q g$fx2$15910$1MHp3Q)
                  g$fx3$15911$1MHp3Q)
               (g$expt$13414$1MHp3Q
                 '2
                 (g$fixnum-width$12672$1MHp3Q))))))))))
   (g$fx-/carry$14746$1MHp3Q
     g$fx-/carry$16596$1MHp3Q
     (case-lambda
       ((g$fx1$15914$1MHp3Q g$fx2$15915$1MHp3Q g$fx3$15916$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$15914$1MHp3Q))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$15914$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$15915$1MHp3Q))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$15915$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$15916$1MHp3Q))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$15916$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15917$1MHp3Q g$e$15918$1MHp3Q)
                  (values
                    (g$mod0$12675$1MHp3Q
                      g$s$15917$1MHp3Q
                      g$e$15918$1MHp3Q)
                    (g$div0$12673$1MHp3Q
                      g$s$15917$1MHp3Q
                      g$e$15918$1MHp3Q))))
               (- g$fx1$15914$1MHp3Q
                  g$fx2$15915$1MHp3Q
                  g$fx3$15916$1MHp3Q)
               (g$expt$13414$1MHp3Q
                 '2
                 (g$fixnum-width$12672$1MHp3Q))))))))))
   (g$fx+/carry$14747$1MHp3Q
     g$fx+/carry$16597$1MHp3Q
     (case-lambda
       ((g$fx1$15919$1MHp3Q g$fx2$15920$1MHp3Q g$fx3$15921$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$15919$1MHp3Q))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$15919$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$15920$1MHp3Q))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$15920$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$15921$1MHp3Q))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$15921$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15922$1MHp3Q g$e$15923$1MHp3Q)
                  (values
                    (g$mod0$12675$1MHp3Q
                      g$s$15922$1MHp3Q
                      g$e$15923$1MHp3Q)
                    (g$div0$12673$1MHp3Q
                      g$s$15922$1MHp3Q
                      g$e$15923$1MHp3Q))))
               (+ g$fx1$15919$1MHp3Q
                  g$fx2$15920$1MHp3Q
                  g$fx3$15921$1MHp3Q)
               (g$expt$13414$1MHp3Q
                 '2
                 (g$fixnum-width$12672$1MHp3Q))))))))))
   (g$residual-fxif*$14763$1MHp3Q
     g$residual-fxif*$16598$1MHp3Q
     (case-lambda
       ((g$fx1$15944$1MHp3Q g$fx2$15945$1MHp3Q g$fx3$15946$1MHp3Q)
        ($fxior
          ($fxand g$fx1$15944$1MHp3Q g$fx2$15945$1MHp3Q)
          ($fxand ($fxnot g$fx1$15944$1MHp3Q) g$fx3$15946$1MHp3Q)))))
   (g$fxif$14764$1MHp3Q
     g$fxif$16599$1MHp3Q
     (case-lambda
       ((g$fx1$15947$1MHp3Q g$fx2$15948$1MHp3Q g$fx3$15949$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$15947$1MHp3Q))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$15947$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$15948$1MHp3Q))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$15948$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$15949$1MHp3Q))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$15949$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15970$1MHp3Q
                    g$fx2$15971$1MHp3Q
                    g$fx3$15972$1MHp3Q)
                  ($fxior
                    ($fxand g$fx1$15970$1MHp3Q g$fx2$15971$1MHp3Q)
                    ($fxand
                      ($fxnot g$fx1$15970$1MHp3Q)
                      g$fx3$15972$1MHp3Q))))
               g$fx1$15947$1MHp3Q
               g$fx2$15948$1MHp3Q
               g$fx3$15949$1MHp3Q))))))))
   (g$residual-fxcopy-bit*$14780$1MHp3Q
     g$residual-fxcopy-bit*$16600$1MHp3Q
     (case-lambda
       ((g$fx1$15993$1MHp3Q g$fx2$15994$1MHp3Q g$fx3$15995$1MHp3Q)
        ((case-lambda
           ((g$fx1$16016$1MHp3Q g$fx2$16017$1MHp3Q g$fx3$16018$1MHp3Q)
            ($fxior
              ($fxand g$fx1$16016$1MHp3Q g$fx2$16017$1MHp3Q)
              ($fxand ($fxnot g$fx1$16016$1MHp3Q) g$fx3$16018$1MHp3Q))))
         ($fxarithmetic-shift-left '1 g$fx2$15994$1MHp3Q)
         ($fxarithmetic-shift-left
           g$fx3$15995$1MHp3Q
           g$fx2$15994$1MHp3Q)
         g$fx1$15993$1MHp3Q))))
   (g$fxcopy-bit$14781$1MHp3Q
     g$fxcopy-bit$16601$1MHp3Q
     (case-lambda
       ((g$fx1$16019$1MHp3Q g$fx2$16020$1MHp3Q g$fx3$16021$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$16019$1MHp3Q))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$16019$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$16020$1MHp3Q))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$16020$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$16021$1MHp3Q))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$16021$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16042$1MHp3Q
                    g$fx2$16043$1MHp3Q
                    g$fx3$16044$1MHp3Q)
                  ((case-lambda
                     ((g$fx1$16065$1MHp3Q
                        g$fx2$16066$1MHp3Q
                        g$fx3$16067$1MHp3Q)
                      ($fxior
                        ($fxand g$fx1$16065$1MHp3Q g$fx2$16066$1MHp3Q)
                        ($fxand
                          ($fxnot g$fx1$16065$1MHp3Q)
                          g$fx3$16067$1MHp3Q))))
                   ($fxarithmetic-shift-left '1 g$fx2$16043$1MHp3Q)
                   ($fxarithmetic-shift-left
                     g$fx3$16044$1MHp3Q
                     g$fx2$16043$1MHp3Q)
                   g$fx1$16042$1MHp3Q)))
               g$fx1$16019$1MHp3Q
               g$fx2$16020$1MHp3Q
               g$fx3$16021$1MHp3Q))))))))
   (g$residual-fxbit-field*$14797$1MHp3Q
     g$residual-fxbit-field*$16602$1MHp3Q
     (case-lambda
       ((g$fx1$16088$1MHp3Q g$fx2$16089$1MHp3Q g$fx3$16090$1MHp3Q)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$16088$1MHp3Q
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$16090$1MHp3Q)))
          g$fx2$16089$1MHp3Q))))
   (g$fxbit-field$14798$1MHp3Q
     g$fxbit-field$16603$1MHp3Q
     (case-lambda
       ((g$fx1$16091$1MHp3Q g$fx2$16092$1MHp3Q g$fx3$16093$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$16091$1MHp3Q))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$16091$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$16092$1MHp3Q))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$16092$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx3$16093$1MHp3Q))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$16093$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16114$1MHp3Q
                    g$fx2$16115$1MHp3Q
                    g$fx3$16116$1MHp3Q)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$16114$1MHp3Q
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$16116$1MHp3Q)))
                    g$fx2$16115$1MHp3Q)))
               g$fx1$16091$1MHp3Q
               g$fx2$16092$1MHp3Q
               g$fx3$16093$1MHp3Q))))))))
   (g$residual-fxcopy-bit-field*$14814$1MHp3Q
     g$residual-fxcopy-bit-field*$16604$1MHp3Q
     (case-lambda
       ((g$to$16137$1MHp3Q
          g$start$16138$1MHp3Q
          g$end$16139$1MHp3Q
          g$from$16140$1MHp3Q)
        ((case-lambda
           ((g$fx1$16161$1MHp3Q g$fx2$16162$1MHp3Q g$fx3$16163$1MHp3Q)
            ($fxior
              ($fxand g$fx1$16161$1MHp3Q g$fx2$16162$1MHp3Q)
              ($fxand ($fxnot g$fx1$16161$1MHp3Q) g$fx3$16163$1MHp3Q))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$16138$1MHp3Q)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$16139$1MHp3Q)))
         ($fxarithmetic-shift-left
           g$from$16140$1MHp3Q
           g$start$16138$1MHp3Q)
         g$to$16137$1MHp3Q))))
   (g$fxcopy-bit-field$14815$1MHp3Q
     g$fxcopy-bit-field$16605$1MHp3Q
     (case-lambda
       ((g$to$16164$1MHp3Q
          g$start$16165$1MHp3Q
          g$end$16166$1MHp3Q
          g$from$16167$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$to$16164$1MHp3Q))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$16164$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$start$16165$1MHp3Q))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$16165$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$end$16166$1MHp3Q))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$16166$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$from$16167$1MHp3Q))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$16167$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$16188$1MHp3Q
                    g$start$16189$1MHp3Q
                    g$end$16190$1MHp3Q
                    g$from$16191$1MHp3Q)
                  ((case-lambda
                     ((g$fx1$16212$1MHp3Q
                        g$fx2$16213$1MHp3Q
                        g$fx3$16214$1MHp3Q)
                      ($fxior
                        ($fxand g$fx1$16212$1MHp3Q g$fx2$16213$1MHp3Q)
                        ($fxand
                          ($fxnot g$fx1$16212$1MHp3Q)
                          g$fx3$16214$1MHp3Q))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$16189$1MHp3Q)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$16190$1MHp3Q)))
                   ($fxarithmetic-shift-left
                     g$from$16191$1MHp3Q
                     g$start$16189$1MHp3Q)
                   g$to$16188$1MHp3Q)))
               g$to$16164$1MHp3Q
               g$start$16165$1MHp3Q
               g$end$16166$1MHp3Q
               g$from$16167$1MHp3Q))))))))
   (g$fxarithmetic-shift-left$14816$1MHp3Q
     g$fxarithmetic-shift-left$16606$1MHp3Q
     (case-lambda
       ((g$fx1$16215$1MHp3Q g$fx2$16216$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$16215$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$16215$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$16216$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$16216$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16237$1MHp3Q g$k$16238$1MHp3Q)
                  (if ($fx=? g$k$16238$1MHp3Q '0)
                    g$x$16237$1MHp3Q
                    (if ($fx<? g$k$16238$1MHp3Q '0)
                      ($fxarithmetic-shift-right
                        g$x$16237$1MHp3Q
                        ($$fx- g$k$16238$1MHp3Q))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16239$1MHp3Q)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16237$1MHp3Q)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16239$1MHp3Q))
                                (g$overflow-error$14428$1MHp3Q
                                  'fxarithmetic-shift
                                  g$x$16237$1MHp3Q
                                  g$k$16238$1MHp3Q)
                                (void))
                              g$i$16239$1MHp3Q)))
                         ($fxarithmetic-shift-left
                           g$x$16237$1MHp3Q
                           g$k$16238$1MHp3Q)))))))
               g$fx1$16215$1MHp3Q
               g$fx2$16216$1MHp3Q))))))))
   (g$fxarithmetic-shift-right$14817$1MHp3Q
     g$fxarithmetic-shift-right$16607$1MHp3Q
     (case-lambda
       ((g$fx1$16240$1MHp3Q g$fx2$16241$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$fx1$16240$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$16240$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$fx2$16241$1MHp3Q))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$16241$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16262$1MHp3Q g$k$16263$1MHp3Q)
                  (if ($fx=? g$k$16263$1MHp3Q '0)
                    g$x$16262$1MHp3Q
                    (if ($fx<? g$k$16263$1MHp3Q '0)
                      ($fxarithmetic-shift-right
                        g$x$16262$1MHp3Q
                        ($$fx- g$k$16263$1MHp3Q))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16264$1MHp3Q)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16262$1MHp3Q)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16264$1MHp3Q))
                                (g$overflow-error$14428$1MHp3Q
                                  'fxarithmetic-shift
                                  g$x$16262$1MHp3Q
                                  g$k$16263$1MHp3Q)
                                (void))
                              g$i$16264$1MHp3Q)))
                         ($fxarithmetic-shift-left
                           g$x$16262$1MHp3Q
                           g$k$16263$1MHp3Q)))))))
               g$fx1$16240$1MHp3Q
               ($$fx- g$fx2$16241$1MHp3Q)))))))))
   (g$fxrotate-bit-field$14818$1MHp3Q
     g$fxrotate-bit-field$16608$1MHp3Q
     (case-lambda
       ((g$n$16265$1MHp3Q
          g$start$16266$1MHp3Q
          g$end$16267$1MHp3Q
          g$count$16268$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$n$16265$1MHp3Q))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$16265$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$start$16266$1MHp3Q))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$16266$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$end$16267$1MHp3Q))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$16267$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$count$16268$1MHp3Q))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$16268$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$16269$1MHp3Q)
                  (if ((case-lambda
                         ((g$r$16290$1MHp3Q)
                          ($fx<? '0 g$r$16290$1MHp3Q)))
                       g$width$16269$1MHp3Q)
                    ((case-lambda
                       ((g$count$16291$1MHp3Q g$field$16292$1MHp3Q)
                        ((case-lambda
                           ((g$to$16313$1MHp3Q
                              g$start$16314$1MHp3Q
                              g$end$16315$1MHp3Q
                              g$from$16316$1MHp3Q)
                            ((case-lambda
                               ((g$fx1$16337$1MHp3Q
                                  g$fx2$16338$1MHp3Q
                                  g$fx3$16339$1MHp3Q)
                                ($fxior
                                  ($fxand
                                    g$fx1$16337$1MHp3Q
                                    g$fx2$16338$1MHp3Q)
                                  ($fxand
                                    ($fxnot g$fx1$16337$1MHp3Q)
                                    g$fx3$16339$1MHp3Q))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$16314$1MHp3Q)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$16315$1MHp3Q)))
                             ($fxarithmetic-shift-left
                               g$from$16316$1MHp3Q
                               g$start$16314$1MHp3Q)
                             g$to$16313$1MHp3Q)))
                         g$n$16265$1MHp3Q
                         g$start$16266$1MHp3Q
                         g$end$16267$1MHp3Q
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$16292$1MHp3Q
                             g$count$16291$1MHp3Q)
                           ($fxarithmetic-shift-right
                             g$field$16292$1MHp3Q
                             ($$fx-
                               g$width$16269$1MHp3Q
                               g$count$16291$1MHp3Q))))))
                     ((case-lambda
                        ((g$x1$16360$1MHp3Q g$x2$16361$1MHp3Q)
                         ($$fx-
                           g$x1$16360$1MHp3Q
                           ($$fx*
                             ((case-lambda
                                ((g$x1$16382$1MHp3Q g$x2$16383$1MHp3Q)
                                 (begin
                                   (if ($fx=? '0 g$x2$16383$1MHp3Q)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$16382$1MHp3Q
                                       g$x2$16383$1MHp3Q)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$16383$1MHp3Q)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$14319$1MHp3Q)
                                             g$x1$16382$1MHp3Q))
                                         '#f)
                                     (g$overflow-error$14428$1MHp3Q
                                       'fxdiv
                                       g$x1$16382$1MHp3Q
                                       g$x2$16383$1MHp3Q)
                                     (void))
                                   (if ($fx=? '0 g$x1$16382$1MHp3Q)
                                     '0
                                     (if ($fx<? '0 g$x1$16382$1MHp3Q)
                                       ((case-lambda
                                          ((g$x1$16404$1MHp3Q
                                             g$x2$16405$1MHp3Q)
                                           ($fxdiv0
                                             g$x1$16404$1MHp3Q
                                             g$x2$16405$1MHp3Q)))
                                        g$x1$16382$1MHp3Q
                                        g$x2$16383$1MHp3Q)
                                       (if ($fx<? '0 g$x2$16383$1MHp3Q)
                                         ((case-lambda
                                            ((g$x1$16426$1MHp3Q
                                               g$x2$16427$1MHp3Q)
                                             ($fxdiv0
                                               g$x1$16426$1MHp3Q
                                               g$x2$16427$1MHp3Q)))
                                          ($$fx-
                                            g$x1$16382$1MHp3Q
                                            ($$fx-
                                              g$x2$16383$1MHp3Q
                                              '1))
                                          g$x2$16383$1MHp3Q)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$16448$1MHp3Q
                                                 g$x2$16449$1MHp3Q)
                                               ($fxdiv0
                                                 g$x1$16448$1MHp3Q
                                                 g$x2$16449$1MHp3Q)))
                                            ($$fx+
                                              g$x1$16382$1MHp3Q
                                              ($$fx+
                                                g$x2$16383$1MHp3Q
                                                '1))
                                            g$x2$16383$1MHp3Q))))))))
                              g$x1$16360$1MHp3Q
                              g$x2$16361$1MHp3Q)
                             g$x2$16361$1MHp3Q))))
                      g$count$16268$1MHp3Q
                      g$width$16269$1MHp3Q)
                     ((case-lambda
                        ((g$fx1$16470$1MHp3Q
                           g$fx2$16471$1MHp3Q
                           g$fx3$16472$1MHp3Q)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$16470$1MHp3Q
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$16472$1MHp3Q)))
                           g$fx2$16471$1MHp3Q)))
                      g$n$16265$1MHp3Q
                      g$start$16266$1MHp3Q
                      g$end$16267$1MHp3Q))
                    g$n$16265$1MHp3Q)))
               ($$fx- g$end$16267$1MHp3Q g$start$16266$1MHp3Q)))))))))
   (g$fxreverse-bit-field$14819$1MHp3Q
     g$fxreverse-bit-field$16609$1MHp3Q
     (case-lambda
       ((g$x1$16473$1MHp3Q g$start$16474$1MHp3Q g$end$16475$1MHp3Q)
        (begin
          (if (not (g$fixnum?$12670$1MHp3Q g$x1$16473$1MHp3Q))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$16473$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$start$16474$1MHp3Q))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$16474$1MHp3Q)
            (void))
          (if (not (g$fixnum?$12670$1MHp3Q g$end$16475$1MHp3Q))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$16475$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$16474$1MHp3Q
                           g$end$16475$1MHp3Q))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$16474$1MHp3Q
                    g$end$16475$1MHp3Q)
                  (void))
                (letrec ((g$loop$16476$1MHp3Q
                           (case-lambda
                             ((g$width$16500$1MHp3Q
                                g$bits$16501$1MHp3Q
                                g$rbits$16502$1MHp3Q)
                              (if ($fx=? g$width$16500$1MHp3Q '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$16523$1MHp3Q
                                        g$start$16524$1MHp3Q
                                        g$end$16525$1MHp3Q
                                        g$from$16526$1MHp3Q)
                                      ((case-lambda
                                         ((g$fx1$16547$1MHp3Q
                                            g$fx2$16548$1MHp3Q
                                            g$fx3$16549$1MHp3Q)
                                          ($fxior
                                            ($fxand
                                              g$fx1$16547$1MHp3Q
                                              g$fx2$16548$1MHp3Q)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$16547$1MHp3Q)
                                              g$fx3$16549$1MHp3Q))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$16524$1MHp3Q)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$16525$1MHp3Q)))
                                       ($fxarithmetic-shift-left
                                         g$from$16526$1MHp3Q
                                         g$start$16524$1MHp3Q)
                                       g$to$16523$1MHp3Q)))
                                   g$x1$16473$1MHp3Q
                                   g$start$16474$1MHp3Q
                                   g$end$16475$1MHp3Q
                                   g$rbits$16502$1MHp3Q))
                                (g$loop$16476$1MHp3Q
                                  ($$fx- g$width$16500$1MHp3Q '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$16501$1MHp3Q
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$16502$1MHp3Q
                                      '1)
                                    ($fxand
                                      g$bits$16501$1MHp3Q
                                      '1))))))))
                  (g$loop$16476$1MHp3Q
                    ($$fx- g$end$16475$1MHp3Q g$start$16474$1MHp3Q)
                    ((case-lambda
                       ((g$fx1$16497$1MHp3Q
                          g$fx2$16498$1MHp3Q
                          g$fx3$16499$1MHp3Q)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$16497$1MHp3Q
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$16499$1MHp3Q)))
                          g$fx2$16498$1MHp3Q)))
                     g$x1$16473$1MHp3Q
                     g$start$16474$1MHp3Q
                     g$end$16475$1MHp3Q)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$16788$1MHp3Q
     g$fl+$18103$1MHp3Q
     (case-lambda
       (() '0.0)
       ((g$x1$16911$1MHp3Q g$x2$16912$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16911$1MHp3Q))
            (assertion-violation 'fl+ '"not a flonum" g$x1$16911$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16912$1MHp3Q))
            (assertion-violation 'fl+ '"not a flonum" g$x2$16912$1MHp3Q)
            (void))
          ($fl+ g$x1$16911$1MHp3Q g$x2$16912$1MHp3Q)))
       (g$args$16913$1MHp3Q
        (g$fold-left$11838$1MHp3Q
          g$fl+$16788$1MHp3Q
          (g$fl+$16788$1MHp3Q)
          g$args$16913$1MHp3Q))))
   (g$fl*$16789$1MHp3Q
     g$fl*$18104$1MHp3Q
     (case-lambda
       (() '1.0)
       ((g$x1$16914$1MHp3Q g$x2$16915$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16914$1MHp3Q))
            (assertion-violation 'fl* '"not a flonum" g$x1$16914$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16915$1MHp3Q))
            (assertion-violation 'fl* '"not a flonum" g$x2$16915$1MHp3Q)
            (void))
          ($fl* g$x1$16914$1MHp3Q g$x2$16915$1MHp3Q)))
       (g$args$16916$1MHp3Q
        (g$fold-left$11838$1MHp3Q
          g$fl*$16789$1MHp3Q
          (g$fl*$16789$1MHp3Q)
          g$args$16916$1MHp3Q))))
   (g$fldenominator$16790$1MHp3Q
     g$fldenominator$18105$1MHp3Q
     (case-lambda
       ((g$fl$16917$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$16917$1MHp3Q))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$16917$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$16918$1MHp3Q)
                      (if g$t$16918$1MHp3Q
                        g$t$16918$1MHp3Q
                        (begin
                          '#f
                          (g$flinfinite?$16871$1MHp3Q
                            g$fl$16917$1MHp3Q)))))
                   (g$flnan?$16872$1MHp3Q g$fl$16917$1MHp3Q))
                '1.0
                (g$real->flonum$13361$1MHp3Q
                  (g$denominator$13392$1MHp3Q
                    g$fl$16917$1MHp3Q))))))))))
   (g$flnumerator$16791$1MHp3Q
     g$flnumerator$18106$1MHp3Q
     (case-lambda
       ((g$fl$16919$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$16919$1MHp3Q))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$16919$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$16920$1MHp3Q)
                      (if g$t$16920$1MHp3Q
                        g$t$16920$1MHp3Q
                        (begin
                          '#f
                          (g$flinfinite?$16871$1MHp3Q
                            g$fl$16919$1MHp3Q)))))
                   (g$flnan?$16872$1MHp3Q g$fl$16919$1MHp3Q))
                g$fl$16919$1MHp3Q
                (g$real->flonum$13361$1MHp3Q
                  (g$numerator$13391$1MHp3Q g$fl$16919$1MHp3Q))))))))))
   (g$fl-$16792$1MHp3Q
     g$fl-$18107$1MHp3Q
     (case-lambda
       ((g$x1$16921$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16921$1MHp3Q))
            (assertion-violation 'fl- '"not a flonum" g$x1$16921$1MHp3Q)
            (void))
          ($fl- g$x1$16921$1MHp3Q)))
       ((g$x1$16922$1MHp3Q g$x2$16923$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16922$1MHp3Q))
            (assertion-violation 'fl- '"not a flonum" g$x1$16922$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16923$1MHp3Q))
            (assertion-violation 'fl- '"not a flonum" g$x2$16923$1MHp3Q)
            (void))
          ($fl- g$x1$16922$1MHp3Q g$x2$16923$1MHp3Q)))
       ((g$x1$16924$1MHp3Q g$x2$16925$1MHp3Q . g$rest$16926$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16924$1MHp3Q))
            (assertion-violation 'fl- '"not a flonum" g$x1$16924$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            g$fl-$16792$1MHp3Q
            g$x1$16924$1MHp3Q
            (cons g$x2$16925$1MHp3Q g$rest$16926$1MHp3Q))))))
   (g$fl/$16793$1MHp3Q
     g$fl/$18108$1MHp3Q
     (case-lambda
       ((g$x1$16927$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16927$1MHp3Q))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16927$1MHp3Q)
            (void))
          ($fl/ '1.0 g$x1$16927$1MHp3Q)))
       ((g$x1$16928$1MHp3Q g$x2$16929$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16928$1MHp3Q))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16928$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16929$1MHp3Q))
            (assertion-violation 'fl/ '"not a flonum" g$x2$16929$1MHp3Q)
            (void))
          ($fl/ g$x1$16928$1MHp3Q g$x2$16929$1MHp3Q)))
       ((g$x1$16930$1MHp3Q g$x2$16931$1MHp3Q . g$rest$16932$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16930$1MHp3Q))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16930$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            g$fl/$16793$1MHp3Q
            g$x1$16930$1MHp3Q
            (cons g$x2$16931$1MHp3Q g$rest$16932$1MHp3Q))))))
   (g$fl=?$16794$1MHp3Q
     g$fl=?$18109$1MHp3Q
     (case-lambda
       ((g$x1$16933$1MHp3Q g$x2$16934$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16933$1MHp3Q))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$16933$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16934$1MHp3Q))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$16934$1MHp3Q)
            (void))
          ($fl=? g$x1$16933$1MHp3Q g$x2$16934$1MHp3Q)))
       ((g$x1$16935$1MHp3Q g$x2$16936$1MHp3Q . g$rest$16937$1MHp3Q)
        ((letrec ((g$f$16938$1MHp3Q
                    (case-lambda
                      ((g$a$16939$1MHp3Q g$b$16940$1MHp3Q)
                       (if (null? g$b$16940$1MHp3Q)
                         '#t
                         (if (g$fl=?$16794$1MHp3Q
                               g$a$16939$1MHp3Q
                               ($car g$b$16940$1MHp3Q))
                           (g$f$16938$1MHp3Q
                             ($car g$b$16940$1MHp3Q)
                             ($cdr g$b$16940$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$16938$1MHp3Q)
         g$x1$16935$1MHp3Q
         (cons g$x2$16936$1MHp3Q g$rest$16937$1MHp3Q)))))
   (g$fl<?$16795$1MHp3Q
     g$fl<?$18110$1MHp3Q
     (case-lambda
       ((g$x1$16941$1MHp3Q g$x2$16942$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16941$1MHp3Q))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$16941$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16942$1MHp3Q))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$16942$1MHp3Q)
            (void))
          ($fl<? g$x1$16941$1MHp3Q g$x2$16942$1MHp3Q)))
       ((g$x1$16943$1MHp3Q g$x2$16944$1MHp3Q . g$rest$16945$1MHp3Q)
        ((letrec ((g$f$16946$1MHp3Q
                    (case-lambda
                      ((g$a$16947$1MHp3Q g$b$16948$1MHp3Q)
                       (if (null? g$b$16948$1MHp3Q)
                         '#t
                         (if (g$fl<?$16795$1MHp3Q
                               g$a$16947$1MHp3Q
                               ($car g$b$16948$1MHp3Q))
                           (g$f$16946$1MHp3Q
                             ($car g$b$16948$1MHp3Q)
                             ($cdr g$b$16948$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$16946$1MHp3Q)
         g$x1$16943$1MHp3Q
         (cons g$x2$16944$1MHp3Q g$rest$16945$1MHp3Q)))))
   (g$fl<=?$16796$1MHp3Q
     g$fl<=?$18111$1MHp3Q
     (case-lambda
       ((g$x1$16949$1MHp3Q g$x2$16950$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16949$1MHp3Q))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$16949$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16950$1MHp3Q))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$16950$1MHp3Q)
            (void))
          ($fl<=? g$x1$16949$1MHp3Q g$x2$16950$1MHp3Q)))
       ((g$x1$16951$1MHp3Q g$x2$16952$1MHp3Q . g$rest$16953$1MHp3Q)
        ((letrec ((g$f$16954$1MHp3Q
                    (case-lambda
                      ((g$a$16955$1MHp3Q g$b$16956$1MHp3Q)
                       (if (null? g$b$16956$1MHp3Q)
                         '#t
                         (if (g$fl<=?$16796$1MHp3Q
                               g$a$16955$1MHp3Q
                               ($car g$b$16956$1MHp3Q))
                           (g$f$16954$1MHp3Q
                             ($car g$b$16956$1MHp3Q)
                             ($cdr g$b$16956$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$16954$1MHp3Q)
         g$x1$16951$1MHp3Q
         (cons g$x2$16952$1MHp3Q g$rest$16953$1MHp3Q)))))
   (g$fl>?$16797$1MHp3Q
     g$fl>?$18112$1MHp3Q
     (case-lambda
       ((g$x1$16957$1MHp3Q g$x2$16958$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16957$1MHp3Q))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$16957$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16958$1MHp3Q))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$16958$1MHp3Q)
            (void))
          ($fl>? g$x1$16957$1MHp3Q g$x2$16958$1MHp3Q)))
       ((g$x1$16959$1MHp3Q g$x2$16960$1MHp3Q . g$rest$16961$1MHp3Q)
        ((letrec ((g$f$16962$1MHp3Q
                    (case-lambda
                      ((g$a$16963$1MHp3Q g$b$16964$1MHp3Q)
                       (if (null? g$b$16964$1MHp3Q)
                         '#t
                         (if (g$fl>?$16797$1MHp3Q
                               g$a$16963$1MHp3Q
                               ($car g$b$16964$1MHp3Q))
                           (g$f$16962$1MHp3Q
                             ($car g$b$16964$1MHp3Q)
                             ($cdr g$b$16964$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$16962$1MHp3Q)
         g$x1$16959$1MHp3Q
         (cons g$x2$16960$1MHp3Q g$rest$16961$1MHp3Q)))))
   (g$fl>=?$16798$1MHp3Q
     g$fl>=?$18113$1MHp3Q
     (case-lambda
       ((g$x1$16965$1MHp3Q g$x2$16966$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$16965$1MHp3Q))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$16965$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$16966$1MHp3Q))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$16966$1MHp3Q)
            (void))
          ($fl>=? g$x1$16965$1MHp3Q g$x2$16966$1MHp3Q)))
       ((g$x1$16967$1MHp3Q g$x2$16968$1MHp3Q . g$rest$16969$1MHp3Q)
        ((letrec ((g$f$16970$1MHp3Q
                    (case-lambda
                      ((g$a$16971$1MHp3Q g$b$16972$1MHp3Q)
                       (if (null? g$b$16972$1MHp3Q)
                         '#t
                         (if (g$fl>=?$16798$1MHp3Q
                               g$a$16971$1MHp3Q
                               ($car g$b$16972$1MHp3Q))
                           (g$f$16970$1MHp3Q
                             ($car g$b$16972$1MHp3Q)
                             ($cdr g$b$16972$1MHp3Q))
                           (begin '#f '#f)))))))
           g$f$16970$1MHp3Q)
         g$x1$16967$1MHp3Q
         (cons g$x2$16968$1MHp3Q g$rest$16969$1MHp3Q)))))
   (g$residual-fldiv0*$16814$1MHp3Q
     g$residual-fldiv0*$18114$1MHp3Q
     (case-lambda
       ((g$x1$16993$1MHp3Q g$x2$16994$1MHp3Q)
        ((case-lambda
           ((g$d$16995$1MHp3Q)
            ((case-lambda
               ((g$m$16996$1MHp3Q)
                (if ($fl<?
                      g$m$16996$1MHp3Q
                      (g$magnitude$13389$1MHp3Q
                        ($fl/ g$x2$16994$1MHp3Q '2.0)))
                  g$d$16995$1MHp3Q
                  (if ($fl<? '0.0 g$x2$16994$1MHp3Q)
                    ($fl+ g$d$16995$1MHp3Q '1.0)
                    (begin '#f ($fl- g$d$16995$1MHp3Q '1.0))))))
             ($fl-
               g$x1$16993$1MHp3Q
               ($fl* g$d$16995$1MHp3Q g$x2$16994$1MHp3Q)))))
         ((case-lambda
            ((g$x1$17017$1MHp3Q g$x2$17018$1MHp3Q)
             (if ($fl<? '0.0 g$x2$17018$1MHp3Q)
               ((case-lambda
                  ((g$fl$17039$1MHp3Q)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$17039$1MHp3Q)))
                ($fl/ g$x1$17017$1MHp3Q g$x2$17018$1MHp3Q))
               ($fl-
                 ((case-lambda
                    ((g$fl$17060$1MHp3Q)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$17060$1MHp3Q)))
                  ($fl/ g$x1$17017$1MHp3Q ($fl- g$x2$17018$1MHp3Q)))))))
          g$x1$16993$1MHp3Q
          g$x2$16994$1MHp3Q)))))
   (g$fldiv0$16815$1MHp3Q
     g$fldiv0$18115$1MHp3Q
     (case-lambda
       ((g$x1$17061$1MHp3Q g$x2$17062$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17061$1MHp3Q))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$17061$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17062$1MHp3Q))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$17062$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17083$1MHp3Q g$x2$17084$1MHp3Q)
                  ((case-lambda
                     ((g$d$17085$1MHp3Q)
                      ((case-lambda
                         ((g$m$17086$1MHp3Q)
                          (if ($fl<?
                                g$m$17086$1MHp3Q
                                (g$magnitude$13389$1MHp3Q
                                  ($fl/ g$x2$17084$1MHp3Q '2.0)))
                            g$d$17085$1MHp3Q
                            (if ($fl<? '0.0 g$x2$17084$1MHp3Q)
                              ($fl+ g$d$17085$1MHp3Q '1.0)
                              (begin
                                '#f
                                ($fl- g$d$17085$1MHp3Q '1.0))))))
                       ($fl-
                         g$x1$17083$1MHp3Q
                         ($fl* g$d$17085$1MHp3Q g$x2$17084$1MHp3Q)))))
                   ((case-lambda
                      ((g$x1$17107$1MHp3Q g$x2$17108$1MHp3Q)
                       (if ($fl<? '0.0 g$x2$17108$1MHp3Q)
                         ((case-lambda
                            ((g$fl$17129$1MHp3Q)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$17129$1MHp3Q)))
                          ($fl/ g$x1$17107$1MHp3Q g$x2$17108$1MHp3Q))
                         ($fl-
                           ((case-lambda
                              ((g$fl$17150$1MHp3Q)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$17150$1MHp3Q)))
                            ($fl/
                              g$x1$17107$1MHp3Q
                              ($fl- g$x2$17108$1MHp3Q)))))))
                    g$x1$17083$1MHp3Q
                    g$x2$17084$1MHp3Q))))
               g$x1$17061$1MHp3Q
               g$x2$17062$1MHp3Q))))))))
   (g$residual-flmod*$16831$1MHp3Q
     g$residual-flmod*$18116$1MHp3Q
     (case-lambda
       ((g$x1$17171$1MHp3Q g$x2$17172$1MHp3Q)
        ($fl-
          g$x1$17171$1MHp3Q
          ($fl*
            ((case-lambda
               ((g$x1$17193$1MHp3Q g$x2$17194$1MHp3Q)
                (if ($fl<? '0.0 g$x2$17194$1MHp3Q)
                  ((case-lambda
                     ((g$fl$17215$1MHp3Q)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$17215$1MHp3Q)))
                   ($fl/ g$x1$17193$1MHp3Q g$x2$17194$1MHp3Q))
                  ($fl-
                    ((case-lambda
                       ((g$fl$17236$1MHp3Q)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17236$1MHp3Q)))
                     ($fl/
                       g$x1$17193$1MHp3Q
                       ($fl- g$x2$17194$1MHp3Q)))))))
             g$x1$17171$1MHp3Q
             g$x2$17172$1MHp3Q)
            g$x2$17172$1MHp3Q)))))
   (g$flmod$16832$1MHp3Q
     g$flmod$18117$1MHp3Q
     (case-lambda
       ((g$x1$17237$1MHp3Q g$x2$17238$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17237$1MHp3Q))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$17237$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17238$1MHp3Q))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$17238$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17259$1MHp3Q g$x2$17260$1MHp3Q)
                  ($fl-
                    g$x1$17259$1MHp3Q
                    ($fl*
                      ((case-lambda
                         ((g$x1$17281$1MHp3Q g$x2$17282$1MHp3Q)
                          (if ($fl<? '0.0 g$x2$17282$1MHp3Q)
                            ((case-lambda
                               ((g$fl$17303$1MHp3Q)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17303$1MHp3Q)))
                             ($fl/ g$x1$17281$1MHp3Q g$x2$17282$1MHp3Q))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$17324$1MHp3Q)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17324$1MHp3Q)))
                               ($fl/
                                 g$x1$17281$1MHp3Q
                                 ($fl- g$x2$17282$1MHp3Q)))))))
                       g$x1$17259$1MHp3Q
                       g$x2$17260$1MHp3Q)
                      g$x2$17260$1MHp3Q))))
               g$x1$17237$1MHp3Q
               g$x2$17238$1MHp3Q))))))))
   (g$flmod0$16833$1MHp3Q
     g$flmod0$18118$1MHp3Q
     (case-lambda
       ((g$x1$17325$1MHp3Q g$x2$17326$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17325$1MHp3Q))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$17325$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17326$1MHp3Q))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$17326$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$17325$1MHp3Q
                ($fl*
                  ((case-lambda
                     ((g$x1$17347$1MHp3Q g$x2$17348$1MHp3Q)
                      ((case-lambda
                         ((g$d$17349$1MHp3Q)
                          ((case-lambda
                             ((g$m$17350$1MHp3Q)
                              (if ($fl<?
                                    g$m$17350$1MHp3Q
                                    (g$magnitude$13389$1MHp3Q
                                      ($fl/ g$x2$17348$1MHp3Q '2.0)))
                                g$d$17349$1MHp3Q
                                (if ($fl<? '0.0 g$x2$17348$1MHp3Q)
                                  ($fl+ g$d$17349$1MHp3Q '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$17349$1MHp3Q '1.0))))))
                           ($fl-
                             g$x1$17347$1MHp3Q
                             ($fl*
                               g$d$17349$1MHp3Q
                               g$x2$17348$1MHp3Q)))))
                       ((case-lambda
                          ((g$x1$17371$1MHp3Q g$x2$17372$1MHp3Q)
                           (if ($fl<? '0.0 g$x2$17372$1MHp3Q)
                             ((case-lambda
                                ((g$fl$17393$1MHp3Q)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$17393$1MHp3Q)))
                              ($fl/
                                g$x1$17371$1MHp3Q
                                g$x2$17372$1MHp3Q))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$17414$1MHp3Q)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$17414$1MHp3Q)))
                                ($fl/
                                  g$x1$17371$1MHp3Q
                                  ($fl- g$x2$17372$1MHp3Q)))))))
                        g$x1$17347$1MHp3Q
                        g$x2$17348$1MHp3Q))))
                   g$x1$17325$1MHp3Q
                   g$x2$17326$1MHp3Q)
                  g$x2$17326$1MHp3Q)))))))))
   (g$fldiv-and-mod$16834$1MHp3Q
     g$fldiv-and-mod$18119$1MHp3Q
     (case-lambda
       ((g$x1$17415$1MHp3Q g$x2$17416$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17415$1MHp3Q))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$17415$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17416$1MHp3Q))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$17416$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17417$1MHp3Q)
                  (values
                    g$d$17417$1MHp3Q
                    ($fl-
                      g$x1$17415$1MHp3Q
                      ($fl* g$d$17417$1MHp3Q g$x2$17416$1MHp3Q)))))
               ((case-lambda
                  ((g$x1$17438$1MHp3Q g$x2$17439$1MHp3Q)
                   (if ($fl<? '0.0 g$x2$17439$1MHp3Q)
                     ((case-lambda
                        ((g$fl$17460$1MHp3Q)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$17460$1MHp3Q)))
                      ($fl/ g$x1$17438$1MHp3Q g$x2$17439$1MHp3Q))
                     ($fl-
                       ((case-lambda
                          ((g$fl$17481$1MHp3Q)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$17481$1MHp3Q)))
                        ($fl/
                          g$x1$17438$1MHp3Q
                          ($fl- g$x2$17439$1MHp3Q)))))))
                g$x1$17415$1MHp3Q
                g$x2$17416$1MHp3Q)))))))))
   (g$residual-fldiv*$16850$1MHp3Q
     g$residual-fldiv*$18120$1MHp3Q
     (case-lambda
       ((g$x1$17502$1MHp3Q g$x2$17503$1MHp3Q)
        (if ($fl<? '0.0 g$x2$17503$1MHp3Q)
          ((case-lambda
             ((g$fl$17524$1MHp3Q)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$17524$1MHp3Q)))
           ($fl/ g$x1$17502$1MHp3Q g$x2$17503$1MHp3Q))
          ($fl-
            ((case-lambda
               ((g$fl$17545$1MHp3Q)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$17545$1MHp3Q)))
             ($fl/ g$x1$17502$1MHp3Q ($fl- g$x2$17503$1MHp3Q))))))))
   (g$fldiv$16851$1MHp3Q
     g$fldiv$18121$1MHp3Q
     (case-lambda
       ((g$x1$17546$1MHp3Q g$x2$17547$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17546$1MHp3Q))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$17546$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17547$1MHp3Q))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$17547$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17568$1MHp3Q g$x2$17569$1MHp3Q)
                  (if ($fl<? '0.0 g$x2$17569$1MHp3Q)
                    ((case-lambda
                       ((g$fl$17590$1MHp3Q)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17590$1MHp3Q)))
                     ($fl/ g$x1$17568$1MHp3Q g$x2$17569$1MHp3Q))
                    ($fl-
                      ((case-lambda
                         ((g$fl$17611$1MHp3Q)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$17611$1MHp3Q)))
                       ($fl/
                         g$x1$17568$1MHp3Q
                         ($fl- g$x2$17569$1MHp3Q)))))))
               g$x1$17546$1MHp3Q
               g$x2$17547$1MHp3Q))))))))
   (g$fldiv0-and-mod0$16852$1MHp3Q
     g$fldiv0-and-mod0$18122$1MHp3Q
     (case-lambda
       ((g$x1$17612$1MHp3Q g$x2$17613$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$x1$17612$1MHp3Q))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$17612$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$x2$17613$1MHp3Q))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$17613$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17614$1MHp3Q)
                  (values
                    g$d$17614$1MHp3Q
                    ($fl-
                      g$x1$17612$1MHp3Q
                      ($fl* g$d$17614$1MHp3Q g$x2$17613$1MHp3Q)))))
               ((case-lambda
                  ((g$x1$17635$1MHp3Q g$x2$17636$1MHp3Q)
                   ((case-lambda
                      ((g$d$17637$1MHp3Q)
                       ((case-lambda
                          ((g$m$17638$1MHp3Q)
                           (if ($fl<?
                                 g$m$17638$1MHp3Q
                                 (g$magnitude$13389$1MHp3Q
                                   ($fl/ g$x2$17636$1MHp3Q '2.0)))
                             g$d$17637$1MHp3Q
                             (if ($fl<? '0.0 g$x2$17636$1MHp3Q)
                               ($fl+ g$d$17637$1MHp3Q '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$17637$1MHp3Q '1.0))))))
                        ($fl-
                          g$x1$17635$1MHp3Q
                          ($fl* g$d$17637$1MHp3Q g$x2$17636$1MHp3Q)))))
                    ((case-lambda
                       ((g$x1$17659$1MHp3Q g$x2$17660$1MHp3Q)
                        (if ($fl<? '0.0 g$x2$17660$1MHp3Q)
                          ((case-lambda
                             ((g$fl$17681$1MHp3Q)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$17681$1MHp3Q)))
                           ($fl/ g$x1$17659$1MHp3Q g$x2$17660$1MHp3Q))
                          ($fl-
                            ((case-lambda
                               ((g$fl$17702$1MHp3Q)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17702$1MHp3Q)))
                             ($fl/
                               g$x1$17659$1MHp3Q
                               ($fl- g$x2$17660$1MHp3Q)))))))
                     g$x1$17635$1MHp3Q
                     g$x2$17636$1MHp3Q))))
                g$x1$17612$1MHp3Q
                g$x2$17613$1MHp3Q)))))))))
   (g$flinteger?$16853$1MHp3Q
     g$flinteger?$18123$1MHp3Q
     (case-lambda
       ((g$fl$17703$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17703$1MHp3Q))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$17703$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$17724$1MHp3Q g$x2$17725$1MHp3Q)
                    ($fl-
                      g$x1$17724$1MHp3Q
                      ($fl*
                        ((case-lambda
                           ((g$x1$17746$1MHp3Q g$x2$17747$1MHp3Q)
                            (if ($fl<? '0.0 g$x2$17747$1MHp3Q)
                              ((case-lambda
                                 ((g$fl$17768$1MHp3Q)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17768$1MHp3Q)))
                               ($fl/
                                 g$x1$17746$1MHp3Q
                                 g$x2$17747$1MHp3Q))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$17789$1MHp3Q)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17789$1MHp3Q)))
                                 ($fl/
                                   g$x1$17746$1MHp3Q
                                   ($fl- g$x2$17747$1MHp3Q)))))))
                         g$x1$17724$1MHp3Q
                         g$x2$17725$1MHp3Q)
                        g$x2$17725$1MHp3Q))))
                 g$fl$17703$1MHp3Q
                 '1.0)))))))))
   (g$flfinite?$16854$1MHp3Q
     g$flfinite?$18124$1MHp3Q
     (case-lambda
       ((g$fl$17790$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17790$1MHp3Q))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$17790$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$17811$1MHp3Q)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$17811$1MHp3Q)))
                    g$fl$17790$1MHp3Q)))))))))
   (g$residual-flinfinite?*$16870$1MHp3Q
     g$residual-flinfinite?*$18125$1MHp3Q
     (case-lambda
       ((g$fl$17832$1MHp3Q)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$17832$1MHp3Q))))
   (g$flinfinite?$16871$1MHp3Q
     g$flinfinite?$18126$1MHp3Q
     (case-lambda
       ((g$fl$17833$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17833$1MHp3Q))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$17833$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17854$1MHp3Q)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$17854$1MHp3Q)))
               g$fl$17833$1MHp3Q))))))))
   (g$flnan?$16872$1MHp3Q
     g$flnan?$18127$1MHp3Q
     (case-lambda
       ((g$fl$17855$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17855$1MHp3Q))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$17855$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$17855$1MHp3Q))))))))
   (g$flsin$16873$1MHp3Q
     g$flsin$18128$1MHp3Q
     (case-lambda
       ((g$fl$17856$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17856$1MHp3Q))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$17856$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$17856$1MHp3Q))))))))
   (g$flcos$16874$1MHp3Q
     g$flcos$18129$1MHp3Q
     (case-lambda
       ((g$fl$17857$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17857$1MHp3Q))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$17857$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$17857$1MHp3Q))))))))
   (g$fltan$16875$1MHp3Q
     g$fltan$18130$1MHp3Q
     (case-lambda
       ((g$fl$17858$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17858$1MHp3Q))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$17858$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$17858$1MHp3Q))))))))
   (g$flasin$16876$1MHp3Q
     g$flasin$18131$1MHp3Q
     (case-lambda
       ((g$fl$17859$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17859$1MHp3Q))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$17859$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$17859$1MHp3Q))))))))
   (g$flacos$16877$1MHp3Q
     g$flacos$18132$1MHp3Q
     (case-lambda
       ((g$fl$17860$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17860$1MHp3Q))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$17860$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$17860$1MHp3Q))))))))
   (g$flatan$16878$1MHp3Q
     g$flatan$18133$1MHp3Q
     (case-lambda
       ((g$fl$17861$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17861$1MHp3Q))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$17861$1MHp3Q)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$17861$1MHp3Q)))
       ((g$fl1$17862$1MHp3Q g$fl2$17863$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl1$17862$1MHp3Q))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$17862$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$fl2$17863$1MHp3Q))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$17863$1MHp3Q)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$17862$1MHp3Q
            g$fl2$17863$1MHp3Q)))))
   (g$fllog$16879$1MHp3Q
     g$fllog$18134$1MHp3Q
     (case-lambda
       ((g$fl$17864$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17864$1MHp3Q))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$17864$1MHp3Q)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$17864$1MHp3Q)))
       ((g$fl1$17865$1MHp3Q g$fl2$17866$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl1$17865$1MHp3Q))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$17865$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$fl2$17866$1MHp3Q))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$17866$1MHp3Q)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$17865$1MHp3Q
            g$fl2$17866$1MHp3Q)))))
   (g$flsqrt$16880$1MHp3Q
     g$flsqrt$18135$1MHp3Q
     (case-lambda
       ((g$fl$17867$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17867$1MHp3Q))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$17867$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$17867$1MHp3Q))))))))
   (g$flexp$16881$1MHp3Q
     g$flexp$18136$1MHp3Q
     (case-lambda
       ((g$fl$17868$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17868$1MHp3Q))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$17868$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$17868$1MHp3Q))))))))
   (g$flexpt$16882$1MHp3Q
     g$flexpt$18137$1MHp3Q
     (case-lambda
       ((g$fl$17869$1MHp3Q g$n$17870$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17869$1MHp3Q))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$17869$1MHp3Q)
            (void))
          (if (not (g$flonum?$12671$1MHp3Q g$n$17870$1MHp3Q))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$17870$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$17869$1MHp3Q
                g$n$17870$1MHp3Q))))))))
   (g$flceiling$16883$1MHp3Q
     g$flceiling$18138$1MHp3Q
     (case-lambda
       ((g$fl$17871$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17871$1MHp3Q))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$17871$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$17871$1MHp3Q))))))))
   (g$residual-flfloor*$16899$1MHp3Q
     g$residual-flfloor*$18139$1MHp3Q
     (case-lambda
       ((g$fl$17892$1MHp3Q)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$17892$1MHp3Q))))
   (g$flfloor$16900$1MHp3Q
     g$flfloor$18140$1MHp3Q
     (case-lambda
       ((g$fl$17893$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17893$1MHp3Q))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$17893$1MHp3Q)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17914$1MHp3Q)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$17914$1MHp3Q)))
               g$fl$17893$1MHp3Q))))))))
   (g$fltruncate$16901$1MHp3Q
     g$fltruncate$18141$1MHp3Q
     (case-lambda
       ((g$fl$17915$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17915$1MHp3Q))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$17915$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$17915$1MHp3Q))))))))
   (g$flround$16902$1MHp3Q
     g$flround$18142$1MHp3Q
     (case-lambda
       ((g$fl$17916$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17916$1MHp3Q))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$17916$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$17916$1MHp3Q))))))))
   (g$flabs$16903$1MHp3Q
     g$flabs$18143$1MHp3Q
     (case-lambda
       ((g$fl$17917$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$fl$17917$1MHp3Q))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$17917$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$17917$1MHp3Q))))))))
   (g$flpositive?$16904$1MHp3Q
     g$flpositive?$18144$1MHp3Q
     (case-lambda
       ((g$r$17918$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$r$17918$1MHp3Q))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$17918$1MHp3Q)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$17918$1MHp3Q))))))))
   (g$flnegative?$16905$1MHp3Q
     g$flnegative?$18145$1MHp3Q
     (case-lambda
       ((g$r$17919$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$r$17919$1MHp3Q))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$17919$1MHp3Q)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$17919$1MHp3Q))))))))
   (g$flzero?$16906$1MHp3Q
     g$flzero?$18146$1MHp3Q
     (case-lambda
       ((g$r$17920$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$r$17920$1MHp3Q))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$17920$1MHp3Q)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$17920$1MHp3Q))))))))
   (g$fleven?$16907$1MHp3Q
     g$fleven?$18147$1MHp3Q
     (case-lambda
       ((g$n$17921$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$n$17921$1MHp3Q))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$17921$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13375$1MHp3Q
                           g$n$17921$1MHp3Q))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$17921$1MHp3Q)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$17942$1MHp3Q g$x2$17943$1MHp3Q)
                      ($fl-
                        g$x1$17942$1MHp3Q
                        ($fl*
                          ((case-lambda
                             ((g$x1$17964$1MHp3Q g$x2$17965$1MHp3Q)
                              (if ($fl<? '0.0 g$x2$17965$1MHp3Q)
                                ((case-lambda
                                   ((g$fl$17986$1MHp3Q)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17986$1MHp3Q)))
                                 ($fl/
                                   g$x1$17964$1MHp3Q
                                   g$x2$17965$1MHp3Q))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18007$1MHp3Q)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18007$1MHp3Q)))
                                   ($fl/
                                     g$x1$17964$1MHp3Q
                                     ($fl- g$x2$17965$1MHp3Q)))))))
                           g$x1$17942$1MHp3Q
                           g$x2$17943$1MHp3Q)
                          g$x2$17943$1MHp3Q))))
                   g$n$17921$1MHp3Q
                   '2.0))))))))))
   (g$flodd?$16908$1MHp3Q
     g$flodd?$18148$1MHp3Q
     (case-lambda
       ((g$n$18008$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$n$18008$1MHp3Q))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$18008$1MHp3Q)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13375$1MHp3Q
                           g$n$18008$1MHp3Q))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$18008$1MHp3Q)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$18029$1MHp3Q g$x2$18030$1MHp3Q)
                      ($fl-
                        g$x1$18029$1MHp3Q
                        ($fl*
                          ((case-lambda
                             ((g$x1$18051$1MHp3Q g$x2$18052$1MHp3Q)
                              (if ($fl<? '0.0 g$x2$18052$1MHp3Q)
                                ((case-lambda
                                   ((g$fl$18073$1MHp3Q)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18073$1MHp3Q)))
                                 ($fl/
                                   g$x1$18051$1MHp3Q
                                   g$x2$18052$1MHp3Q))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18094$1MHp3Q)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18094$1MHp3Q)))
                                   ($fl/
                                     g$x1$18051$1MHp3Q
                                     ($fl- g$x2$18052$1MHp3Q)))))))
                           g$x1$18029$1MHp3Q
                           g$x2$18030$1MHp3Q)
                          g$x2$18030$1MHp3Q))))
                   g$n$18008$1MHp3Q
                   '2.0))))))))))
   (g$flmax$16909$1MHp3Q
     g$flmax$18149$1MHp3Q
     (case-lambda
       ((g$a$18095$1MHp3Q . g$rest$18096$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$a$18095$1MHp3Q))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$18095$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$18097$1MHp3Q g$b$18098$1MHp3Q)
               (if (g$fl<?$16795$1MHp3Q
                     g$a$18097$1MHp3Q
                     g$b$18098$1MHp3Q)
                 g$b$18098$1MHp3Q
                 g$a$18097$1MHp3Q)))
            g$a$18095$1MHp3Q
            g$rest$18096$1MHp3Q)))))
   (g$flmin$16910$1MHp3Q
     g$flmin$18150$1MHp3Q
     (case-lambda
       ((g$a$18099$1MHp3Q . g$rest$18100$1MHp3Q)
        (begin
          (if (not (g$flonum?$12671$1MHp3Q g$a$18099$1MHp3Q))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$18099$1MHp3Q)
            (void))
          (g$fold-left$11838$1MHp3Q
            (case-lambda
              ((g$a$18101$1MHp3Q g$b$18102$1MHp3Q)
               (if (g$fl>?$16797$1MHp3Q
                     g$a$18101$1MHp3Q
                     g$b$18102$1MHp3Q)
                 g$b$18102$1MHp3Q
                 g$a$18101$1MHp3Q)))
            g$a$18099$1MHp3Q
            g$rest$18100$1MHp3Q))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$18152$1MHp3Q
     g$using$18172$1MHp3Q
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$18153$1MHp3Q
     g$put-datum$18173$1MHp3Q
     (case-lambda
       ((g$p$18161$1MHp3Q g$datum$18162$1MHp3Q)
        (write g$datum$18162$1MHp3Q g$p$18161$1MHp3Q))))
   (g$get-datum$18154$1MHp3Q g$get-datum$18174$1MHp3Q read)
   (g$get-output-string$18155$1MHp3Q
     g$get-output-string$18175$1MHp3Q
     (case-lambda
       ((g$port$18163$1MHp3Q)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$18163$1MHp3Q))))
   (g$open-output-string$18156$1MHp3Q
     g$open-output-string$18176$1MHp3Q
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$18157$1MHp3Q
     g$open-string-output-port$18177$1MHp3Q
     (case-lambda
       (()
        ((case-lambda
           ((g$p$18164$1MHp3Q)
            (values
              g$p$18164$1MHp3Q
              (case-lambda
                (()
                 (g$get-output-string$18155$1MHp3Q
                   g$p$18164$1MHp3Q))))))
         (g$open-output-string$18156$1MHp3Q)))))
   (g$port?$18158$1MHp3Q
     g$port?$18178$1MHp3Q
     (case-lambda
       ((g$obj$18165$1MHp3Q)
        ((case-lambda
           ((g$t$18166$1MHp3Q)
            (if g$t$18166$1MHp3Q
              g$t$18166$1MHp3Q
              (begin '#f (binary-port? g$obj$18165$1MHp3Q)))))
         (textual-port? g$obj$18165$1MHp3Q)))))
   (g$call-with-string-output-port$18159$1MHp3Q
     g$call-with-string-output-port$18179$1MHp3Q
     (case-lambda
       ((g$proc$18167$1MHp3Q)
        ((case-lambda
           ((g$p$18168$1MHp3Q)
            (begin
              (g$call-with-port$18160$1MHp3Q
                g$p$18168$1MHp3Q
                g$proc$18167$1MHp3Q)
              (g$get-output-string$18155$1MHp3Q g$p$18168$1MHp3Q))))
         (g$open-output-string$18156$1MHp3Q)))))
   (g$call-with-port$18160$1MHp3Q
     g$call-with-port$18180$1MHp3Q
     (case-lambda
       ((g$port$18169$1MHp3Q g$proc$18170$1MHp3Q)
        ((case-lambda
           ((g$r$18171$1MHp3Q)
            (begin (close-port g$port$18169$1MHp3Q) g$r$18171$1MHp3Q)))
         (g$proc$18170$1MHp3Q g$port$18169$1MHp3Q))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$18181$1MHp3Q
     g$peek-char$18236$1MHp3Q
     (case-lambda
       (() (g$peek-char$18181$1MHp3Q (current-input-port)))
       ((g$port$18208$1MHp3Q) (lookahead-char g$port$18208$1MHp3Q))))
   (g$read-char$18182$1MHp3Q
     g$read-char$18237$1MHp3Q
     (case-lambda
       (() (g$read-char$18182$1MHp3Q (current-input-port)))
       ((g$port$18209$1MHp3Q) (get-char g$port$18209$1MHp3Q))))
   (g$write-char$18183$1MHp3Q
     g$write-char$18238$1MHp3Q
     (case-lambda
       ((g$chr$18210$1MHp3Q)
        (g$write-char$18183$1MHp3Q
          g$chr$18210$1MHp3Q
          (current-output-port)))
       ((g$chr$18211$1MHp3Q g$port$18212$1MHp3Q)
        (put-char g$port$18212$1MHp3Q g$chr$18211$1MHp3Q))))
   (g$with-input-from-file$18203$1MHp3Q
     g$with-input-from-file$18239$1MHp3Q
     (case-lambda
       ((g$filename$18213$1MHp3Q g$thunk$18214$1MHp3Q)
        ((case-lambda
           ((g$current-input-port$18217$1MHp3Q g$t$18218$1MHp3Q)
            ((case-lambda
               ((g$swap$18219$1MHp3Q)
                (dynamic-wind
                  g$swap$18219$1MHp3Q
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18214$1MHp3Q)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$18219$1MHp3Q)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18220$1MHp3Q)
                    (begin
                      (g$current-input-port$18217$1MHp3Q
                        g$t$18218$1MHp3Q)
                      (set! g$t$18218$1MHp3Q g$t$18220$1MHp3Q))))
                 (g$current-input-port$18217$1MHp3Q)))))))
         current-input-port
         (open-input-file g$filename$18213$1MHp3Q)))))
   (g$with-output-to-file$18204$1MHp3Q
     g$with-output-to-file$18240$1MHp3Q
     (case-lambda
       ((g$filename$18221$1MHp3Q g$thunk$18222$1MHp3Q)
        ((case-lambda
           ((g$current-output-port$18225$1MHp3Q g$t$18226$1MHp3Q)
            ((case-lambda
               ((g$swap$18227$1MHp3Q)
                (dynamic-wind
                  g$swap$18227$1MHp3Q
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18222$1MHp3Q)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$18227$1MHp3Q)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18228$1MHp3Q)
                    (begin
                      (g$current-output-port$18225$1MHp3Q
                        g$t$18226$1MHp3Q)
                      (set! g$t$18226$1MHp3Q g$t$18228$1MHp3Q))))
                 (g$current-output-port$18225$1MHp3Q)))))))
         current-output-port
         (open-output-file g$filename$18221$1MHp3Q)))))
   (g$call-with-input-file$18205$1MHp3Q
     g$call-with-input-file$18241$1MHp3Q
     (case-lambda
       ((g$filename$18229$1MHp3Q g$proc$18230$1MHp3Q)
        ((case-lambda
           ((g$p$18231$1MHp3Q)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18230$1MHp3Q g$p$18231$1MHp3Q)))
              (case-lambda (() (close-input-port g$p$18231$1MHp3Q))))))
         (open-input-file g$filename$18229$1MHp3Q)))))
   (g$call-with-output-file$18206$1MHp3Q
     g$call-with-output-file$18242$1MHp3Q
     (case-lambda
       ((g$filename$18232$1MHp3Q g$proc$18233$1MHp3Q)
        ((case-lambda
           ((g$p$18234$1MHp3Q)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18233$1MHp3Q g$p$18234$1MHp3Q)))
              (case-lambda (() (close-output-port g$p$18234$1MHp3Q))))))
         (open-output-file g$filename$18232$1MHp3Q)))))
   (g$newline$18207$1MHp3Q
     g$newline$18243$1MHp3Q
     (case-lambda
       (() (g$newline$18207$1MHp3Q (current-output-port)))
       ((g$port$18235$1MHp3Q) (display '"
" g$port$18235$1MHp3Q)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8490$18244$1MHp3Q
     g$8490$18357$1MHp3Q
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8492$18245$1MHp3Q g$8492$18358$1MHp3Q '#f)
   (g$8491$18246$1MHp3Q
     g$8491$18359$1MHp3Q
     (make-record-constructor-descriptor
       g$8490$18244$1MHp3Q
       '#f
       g$8492$18245$1MHp3Q))
   (g$enum?$18249$1MHp3Q
     g$enum?$18360$1MHp3Q
     (record-predicate g$8490$18244$1MHp3Q))
   (g$make-enum$18250$1MHp3Q
     g$make-enum$18361$1MHp3Q
     (record-constructor g$8491$18246$1MHp3Q))
   (g$enum-value$18251$1MHp3Q
     g$enum-value$18362$1MHp3Q
     (record-accessor g$8490$18244$1MHp3Q '0))
   (g$enum-info$18252$1MHp3Q
     g$enum-info$18363$1MHp3Q
     (record-accessor g$8490$18244$1MHp3Q '1))
   (g$8501$18253$1MHp3Q
     g$8501$18364$1MHp3Q
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8503$18254$1MHp3Q g$8503$18365$1MHp3Q '#f)
   (g$8502$18255$1MHp3Q
     g$8502$18366$1MHp3Q
     (make-record-constructor-descriptor
       g$8501$18253$1MHp3Q
       '#f
       g$8503$18254$1MHp3Q))
   (g$enum-universe?$18258$1MHp3Q
     g$enum-universe?$18367$1MHp3Q
     (record-predicate g$8501$18253$1MHp3Q))
   (g$make-enum-universe$18259$1MHp3Q
     g$make-enum-universe$18368$1MHp3Q
     (record-constructor g$8502$18255$1MHp3Q))
   (g$enum-universe-id$18260$1MHp3Q
     g$enum-universe-id$18369$1MHp3Q
     (record-accessor g$8501$18253$1MHp3Q '0))
   (g$enum-universe-symbols$18261$1MHp3Q
     g$enum-universe-symbols$18370$1MHp3Q
     (record-accessor g$8501$18253$1MHp3Q '1))
   (g$enum-universe-mapping$18262$1MHp3Q
     g$enum-universe-mapping$18371$1MHp3Q
     (record-accessor g$8501$18253$1MHp3Q '2))
   (g$enum-universe-value$18263$1MHp3Q
     g$enum-universe-value$18372$1MHp3Q
     (record-accessor g$8501$18253$1MHp3Q '3))
   (g$enum-type=?$18264$1MHp3Q
     g$enum-type=?$18373$1MHp3Q
     (case-lambda
       ((g$enumset1$18286$1MHp3Q g$enumset2$18287$1MHp3Q)
        (eq? (g$enum-universe-id$18260$1MHp3Q
               (g$enum-info$18252$1MHp3Q g$enumset1$18286$1MHp3Q))
             (g$enum-universe-id$18260$1MHp3Q
               (g$enum-info$18252$1MHp3Q g$enumset2$18287$1MHp3Q))))))
   (g$get-symbols$18265$1MHp3Q
     g$get-symbols$18374$1MHp3Q
     (case-lambda
       ((g$enumset$18288$1MHp3Q)
        (g$enum-universe-symbols$18261$1MHp3Q
          (g$enum-info$18252$1MHp3Q g$enumset$18288$1MHp3Q)))))
   (g$get-value$18266$1MHp3Q
     g$get-value$18375$1MHp3Q
     (case-lambda
       ((g$enumset$18289$1MHp3Q g$s$18290$1MHp3Q)
        (g$hashtable-ref$12777$1MHp3Q
          (g$enum-universe-mapping$18262$1MHp3Q
            (g$enum-info$18252$1MHp3Q g$enumset$18289$1MHp3Q))
          g$s$18290$1MHp3Q
          '#f))))
   (g$assert-enum$18267$1MHp3Q
     g$assert-enum$18376$1MHp3Q
     (case-lambda
       ((g$who$18291$1MHp3Q g$enumset$18292$1MHp3Q)
        (if (not (g$enum?$18249$1MHp3Q g$enumset$18292$1MHp3Q))
          (assertion-violation
            g$who$18291$1MHp3Q
            '"not an enumeration"
            g$enumset$18292$1MHp3Q)
          (void)))))
   (g$make-info$18268$1MHp3Q
     g$make-info$18377$1MHp3Q
     (case-lambda
       ((g$symbols$18293$1MHp3Q)
        ((case-lambda
           ((g$ht$18294$1MHp3Q)
            ((letrec ((g$f$18295$1MHp3Q
                        (case-lambda
                          ((g$s$18296$1MHp3Q
                             g$a$18297$1MHp3Q
                             g$mask$18298$1MHp3Q)
                           (if (null? g$s$18296$1MHp3Q)
                             (values
                               (reverse! g$a$18297$1MHp3Q)
                               g$ht$18294$1MHp3Q
                               (- g$mask$18298$1MHp3Q '1))
                             ((case-lambda
                                ((g$n$18299$1MHp3Q)
                                 (if (g$symbol?$12667$1MHp3Q
                                       g$n$18299$1MHp3Q)
                                   (if (g$hashtable-contains?$12780$1MHp3Q
                                         g$ht$18294$1MHp3Q
                                         g$n$18299$1MHp3Q)
                                     (g$f$18295$1MHp3Q
                                       (cdr g$s$18296$1MHp3Q)
                                       g$a$18297$1MHp3Q
                                       g$mask$18298$1MHp3Q)
                                     (begin
                                       (g$hashtable-set!$12778$1MHp3Q
                                         g$ht$18294$1MHp3Q
                                         g$n$18299$1MHp3Q
                                         g$mask$18298$1MHp3Q)
                                       (g$f$18295$1MHp3Q
                                         (cdr g$s$18296$1MHp3Q)
                                         (cons
                                           g$n$18299$1MHp3Q
                                           g$a$18297$1MHp3Q)
                                         (g$bitwise-arithmetic-shift-left$14315$1MHp3Q
                                           g$mask$18298$1MHp3Q
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$18299$1MHp3Q))))
                              (car g$s$18296$1MHp3Q)))))))
               g$f$18295$1MHp3Q)
             g$symbols$18293$1MHp3Q
             '()
             '1)))
         (g$make-eq-hashtable$12774$1MHp3Q)))))
   (g$make-name$18269$1MHp3Q
     g$make-name$18378$1MHp3Q
     (case-lambda
       ((g$symbols$18300$1MHp3Q)
        (string->symbol
          (g$format$18417$1MHp3Q '"~a" g$symbols$18300$1MHp3Q)))))
   (g$make-enumeration$18270$1MHp3Q
     g$make-enumeration$18379$1MHp3Q
     (case-lambda
       ((g$symbols$18301$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$make-info$18268$1MHp3Q g$symbols$18301$1MHp3Q)))
          (case-lambda
            ((g$s$18305$1MHp3Q
               g$mapping$18306$1MHp3Q
               g$mask$18307$1MHp3Q)
             ((case-lambda
                ((g$mask$18308$1MHp3Q
                   g$mapping$18309$1MHp3Q
                   g$s$18310$1MHp3Q)
                 (g$make-enum$18250$1MHp3Q
                   g$mask$18308$1MHp3Q
                   (g$make-enum-universe$18259$1MHp3Q
                     (g$make-name$18269$1MHp3Q g$s$18310$1MHp3Q)
                     g$s$18310$1MHp3Q
                     g$mapping$18309$1MHp3Q
                     g$mask$18308$1MHp3Q))))
              g$mask$18307$1MHp3Q
              g$mapping$18306$1MHp3Q
              g$s$18305$1MHp3Q)))))))
   (g$enum-set-universe$18271$1MHp3Q
     g$enum-set-universe$18380$1MHp3Q
     (case-lambda
       ((g$enumset$18311$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-universe
            g$enumset$18311$1MHp3Q)
          ((case-lambda
             ((g$ei$18312$1MHp3Q)
              (g$make-enum$18250$1MHp3Q
                (g$enum-universe-value$18263$1MHp3Q g$ei$18312$1MHp3Q)
                g$ei$18312$1MHp3Q)))
           (g$enum-info$18252$1MHp3Q g$enumset$18311$1MHp3Q))))))
   (g$enum-set-indexer$18272$1MHp3Q
     g$enum-set-indexer$18381$1MHp3Q
     (case-lambda
       ((g$enumset$18313$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-indexer
            g$enumset$18313$1MHp3Q)
          (case-lambda
            ((g$symbol$18314$1MHp3Q)
             (begin
               (if (not (g$symbol?$12667$1MHp3Q g$symbol$18314$1MHp3Q))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$18314$1MHp3Q)
                 (void))
               ((case-lambda
                  ((g$v$18315$1MHp3Q)
                   (if g$v$18315$1MHp3Q
                     (- (bitwise-length g$v$18315$1MHp3Q) '1)
                     '#f)))
                (g$get-value$18266$1MHp3Q
                  g$enumset$18313$1MHp3Q
                  g$symbol$18314$1MHp3Q)))))))))
   (g$enum-set-constructor$18273$1MHp3Q
     g$enum-set-constructor$18382$1MHp3Q
     (case-lambda
       ((g$enumset$18316$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-constructor
            g$enumset$18316$1MHp3Q)
          (case-lambda
            ((g$symbols$18317$1MHp3Q)
             ((letrec ((g$f$18318$1MHp3Q
                         (case-lambda
                           ((g$v$18319$1MHp3Q g$s$18320$1MHp3Q)
                            (if (null? g$s$18320$1MHp3Q)
                              (g$make-enum$18250$1MHp3Q
                                g$v$18319$1MHp3Q
                                (g$enum-info$18252$1MHp3Q
                                  g$enumset$18316$1MHp3Q))
                              ((case-lambda
                                 ((g$n$18321$1MHp3Q)
                                  (if (g$symbol?$12667$1MHp3Q
                                        g$n$18321$1MHp3Q)
                                    ((case-lambda
                                       ((g$v*$18322$1MHp3Q)
                                        (if g$v*$18322$1MHp3Q
                                          (g$f$18318$1MHp3Q
                                            (bitwise-ior
                                              g$v$18319$1MHp3Q
                                              g$v*$18322$1MHp3Q)
                                            (cdr g$s$18320$1MHp3Q))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$18321$1MHp3Q))))
                                     (g$get-value$18266$1MHp3Q
                                       g$enumset$18316$1MHp3Q
                                       g$n$18321$1MHp3Q))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$18321$1MHp3Q))))
                               (car g$s$18320$1MHp3Q)))))))
                g$f$18318$1MHp3Q)
              '0
              g$symbols$18317$1MHp3Q)))))))
   (g$enum-set->list$18274$1MHp3Q
     g$enum-set->list$18383$1MHp3Q
     (case-lambda
       ((g$enumset$18323$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set->list
            g$enumset$18323$1MHp3Q)
          ((case-lambda
             ((g$value$18324$1MHp3Q)
              ((letrec ((g$f$18325$1MHp3Q
                          (case-lambda
                            ((g$s$18326$1MHp3Q g$l$18327$1MHp3Q)
                             (if (null? g$s$18326$1MHp3Q)
                               (reverse! g$l$18327$1MHp3Q)
                               (if (g$zero?$13376$1MHp3Q
                                     (bitwise-and
                                       (g$get-value$18266$1MHp3Q
                                         g$enumset$18323$1MHp3Q
                                         (car g$s$18326$1MHp3Q))
                                       g$value$18324$1MHp3Q))
                                 (g$f$18325$1MHp3Q
                                   (cdr g$s$18326$1MHp3Q)
                                   g$l$18327$1MHp3Q)
                                 (g$f$18325$1MHp3Q
                                   (cdr g$s$18326$1MHp3Q)
                                   (cons
                                     (car g$s$18326$1MHp3Q)
                                     g$l$18327$1MHp3Q))))))))
                 g$f$18325$1MHp3Q)
               (g$get-symbols$18265$1MHp3Q g$enumset$18323$1MHp3Q)
               '())))
           (g$enum-value$18251$1MHp3Q g$enumset$18323$1MHp3Q))))))
   (g$enum-set-member?$18275$1MHp3Q
     g$enum-set-member?$18384$1MHp3Q
     (case-lambda
       ((g$symbol$18328$1MHp3Q g$enumset$18329$1MHp3Q)
        (begin
          (if (not (g$symbol?$12667$1MHp3Q g$symbol$18328$1MHp3Q))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$18328$1MHp3Q)
            (void))
          (g$assert-enum$18267$1MHp3Q
            'enum-set-member?
            g$enumset$18329$1MHp3Q)
          ((case-lambda
             ((g$v$18330$1MHp3Q)
              (if g$v$18330$1MHp3Q
                (not (g$zero?$13376$1MHp3Q
                       (bitwise-and
                         g$v$18330$1MHp3Q
                         (g$enum-value$18251$1MHp3Q
                           g$enumset$18329$1MHp3Q))))
                '#f)))
           (g$get-value$18266$1MHp3Q
             g$enumset$18329$1MHp3Q
             g$symbol$18328$1MHp3Q))))))
   (g$enum-set-subset?$18276$1MHp3Q
     g$enum-set-subset?$18385$1MHp3Q
     (case-lambda
       ((g$enumset1$18331$1MHp3Q g$enumset2$18332$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-subset?
            g$enumset1$18331$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set-subset?
            g$enumset2$18332$1MHp3Q)
          ((case-lambda
             ((g$v1$18333$1MHp3Q g$v2$18334$1MHp3Q)
              (if (g$enum-type=?$18264$1MHp3Q
                    g$enumset1$18331$1MHp3Q
                    g$enumset2$18332$1MHp3Q)
                (g$=$13381$1MHp3Q
                  (bitwise-and g$v1$18333$1MHp3Q g$v2$18334$1MHp3Q)
                  g$v1$18333$1MHp3Q)
                ((letrec ((g$f$18335$1MHp3Q
                            (case-lambda
                              ((g$s$18336$1MHp3Q)
                               (if (null? g$s$18336$1MHp3Q)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$18337$1MHp3Q
                                       g$v2*$18338$1MHp3Q)
                                     (if g$v2*$18338$1MHp3Q
                                       ((case-lambda
                                          ((g$has1$18339$1MHp3Q
                                             g$has2$18340$1MHp3Q)
                                           (if (if g$has1$18339$1MHp3Q
                                                 (begin
                                                   '#f
                                                   (not g$has2$18340$1MHp3Q))
                                                 '#f)
                                             '#f
                                             (g$f$18335$1MHp3Q
                                               (cdr g$s$18336$1MHp3Q)))))
                                        (not (g$zero?$13376$1MHp3Q
                                               (bitwise-and
                                                 g$v1$18333$1MHp3Q
                                                 g$v1*$18337$1MHp3Q)))
                                        (not (g$zero?$13376$1MHp3Q
                                               (bitwise-and
                                                 g$v2$18334$1MHp3Q
                                                 g$v2*$18338$1MHp3Q))))
                                       '#f)))
                                  (g$get-value$18266$1MHp3Q
                                    g$enumset1$18331$1MHp3Q
                                    (car g$s$18336$1MHp3Q))
                                  (g$get-value$18266$1MHp3Q
                                    g$enumset2$18332$1MHp3Q
                                    (car g$s$18336$1MHp3Q))))))))
                   g$f$18335$1MHp3Q)
                 (g$get-symbols$18265$1MHp3Q
                   g$enumset1$18331$1MHp3Q)))))
           (g$enum-value$18251$1MHp3Q g$enumset1$18331$1MHp3Q)
           (g$enum-value$18251$1MHp3Q g$enumset2$18332$1MHp3Q))))))
   (g$enum-set=?$18277$1MHp3Q
     g$enum-set=?$18386$1MHp3Q
     (case-lambda
       ((g$enumset1$18341$1MHp3Q g$enumset2$18342$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set=?
            g$enumset1$18341$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set=?
            g$enumset2$18342$1MHp3Q)
          (if (g$enum-set-subset?$18276$1MHp3Q
                g$enumset1$18341$1MHp3Q
                g$enumset2$18342$1MHp3Q)
            (begin
              '#f
              (g$enum-set-subset?$18276$1MHp3Q
                g$enumset2$18342$1MHp3Q
                g$enumset1$18341$1MHp3Q))
            '#f)))))
   (g$enum-set-union$18278$1MHp3Q
     g$enum-set-union$18387$1MHp3Q
     (case-lambda
       ((g$enumset1$18343$1MHp3Q g$enumset2$18344$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-union
            g$enumset1$18343$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set-union
            g$enumset2$18344$1MHp3Q)
          (if (g$enum-type=?$18264$1MHp3Q
                g$enumset1$18343$1MHp3Q
                g$enumset2$18344$1MHp3Q)
            (g$make-enum$18250$1MHp3Q
              (bitwise-ior
                (g$enum-value$18251$1MHp3Q g$enumset1$18343$1MHp3Q)
                (g$enum-value$18251$1MHp3Q g$enumset2$18344$1MHp3Q))
              (g$enum-info$18252$1MHp3Q g$enumset1$18343$1MHp3Q))
            '#f)))))
   (g$enum-set-intersection$18279$1MHp3Q
     g$enum-set-intersection$18388$1MHp3Q
     (case-lambda
       ((g$enumset1$18345$1MHp3Q g$enumset2$18346$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-intersection
            g$enumset1$18345$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set-intersection
            g$enumset2$18346$1MHp3Q)
          (if (g$enum-type=?$18264$1MHp3Q
                g$enumset1$18345$1MHp3Q
                g$enumset2$18346$1MHp3Q)
            (g$make-enum$18250$1MHp3Q
              (bitwise-and
                (g$enum-value$18251$1MHp3Q g$enumset1$18345$1MHp3Q)
                (g$enum-value$18251$1MHp3Q g$enumset2$18346$1MHp3Q))
              (g$enum-info$18252$1MHp3Q g$enumset1$18345$1MHp3Q))
            '#f)))))
   (g$enum-set-difference$18280$1MHp3Q
     g$enum-set-difference$18389$1MHp3Q
     (case-lambda
       ((g$enumset1$18347$1MHp3Q g$enumset2$18348$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-difference
            g$enumset1$18347$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set-difference
            g$enumset2$18348$1MHp3Q)
          (if (g$enum-type=?$18264$1MHp3Q
                g$enumset1$18347$1MHp3Q
                g$enumset2$18348$1MHp3Q)
            (g$make-enum$18250$1MHp3Q
              (bitwise-and
                (g$enum-value$18251$1MHp3Q g$enumset1$18347$1MHp3Q)
                (bitwise-not
                  (g$enum-value$18251$1MHp3Q g$enumset2$18348$1MHp3Q)))
              (g$enum-info$18252$1MHp3Q g$enumset1$18347$1MHp3Q))
            '#f)))))
   (g$enum-set-complement$18281$1MHp3Q
     g$enum-set-complement$18390$1MHp3Q
     (case-lambda
       ((g$enumset$18349$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-complement
            g$enumset$18349$1MHp3Q)
          (g$make-enum$18250$1MHp3Q
            (bitwise-not
              (g$enum-value$18251$1MHp3Q g$enumset$18349$1MHp3Q))
            (g$enum-info$18252$1MHp3Q g$enumset$18349$1MHp3Q))))))
   (g$enum-set-projection$18282$1MHp3Q
     g$enum-set-projection$18391$1MHp3Q
     (case-lambda
       ((g$enumset1$18350$1MHp3Q g$enumset2$18351$1MHp3Q)
        (begin
          (g$assert-enum$18267$1MHp3Q
            'enum-set-projection
            g$enumset1$18350$1MHp3Q)
          (g$assert-enum$18267$1MHp3Q
            'enum-set-projection
            g$enumset2$18351$1MHp3Q)
          ((case-lambda
             ((g$v1$18352$1MHp3Q)
              ((letrec ((g$f$18353$1MHp3Q
                          (case-lambda
                            ((g$s$18354$1MHp3Q g$v$18355$1MHp3Q)
                             (if (null? g$s$18354$1MHp3Q)
                               (g$make-enum$18250$1MHp3Q
                                 g$v$18355$1MHp3Q
                                 (g$enum-info$18252$1MHp3Q
                                   g$enumset2$18351$1MHp3Q))
                               (if (g$zero?$13376$1MHp3Q
                                     (bitwise-and
                                       g$v1$18352$1MHp3Q
                                       (g$get-value$18266$1MHp3Q
                                         g$enumset1$18350$1MHp3Q
                                         (car g$s$18354$1MHp3Q))))
                                 (g$f$18353$1MHp3Q
                                   (cdr g$s$18354$1MHp3Q)
                                   g$v$18355$1MHp3Q)
                                 ((case-lambda
                                    ((g$v2$18356$1MHp3Q)
                                     (if g$v2$18356$1MHp3Q
                                       (g$f$18353$1MHp3Q
                                         (cdr g$s$18354$1MHp3Q)
                                         (bitwise-ior
                                           g$v$18355$1MHp3Q
                                           g$v2$18356$1MHp3Q))
                                       (g$f$18353$1MHp3Q
                                         (cdr g$s$18354$1MHp3Q)
                                         g$v$18355$1MHp3Q))))
                                  (g$get-value$18266$1MHp3Q
                                    g$enumset2$18351$1MHp3Q
                                    (car g$s$18354$1MHp3Q)))))))))
                 g$f$18353$1MHp3Q)
               (g$get-symbols$18265$1MHp3Q g$enumset1$18350$1MHp3Q)
               '0)))
           (g$enum-value$18251$1MHp3Q g$enumset1$18350$1MHp3Q)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$18283$1MHp3Q g$p$18284$1MHp3Q g$wr$18285$1MHp3Q)
       (g$fprintf$18416$1MHp3Q
         g$p$18284$1MHp3Q
         '"#[enum-set ~a]"
         (g$enum-set->list$18274$1MHp3Q g$x$18283$1MHp3Q))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$18392$1MHp3Q
     g$dofmt$18414$1MHp3Q
     (case-lambda
       ((g$p$18396$1MHp3Q g$cntl$18397$1MHp3Q g$args$18398$1MHp3Q)
        ((case-lambda
           ((g$nmax$18399$1MHp3Q)
            ((letrec ((g$loop$18400$1MHp3Q
                        (case-lambda
                          ((g$n$18401$1MHp3Q g$a$18402$1MHp3Q)
                           (if (g$fx<=?$16567$1MHp3Q
                                 g$n$18401$1MHp3Q
                                 g$nmax$18399$1MHp3Q)
                             ((case-lambda
                                ((g$c$18403$1MHp3Q)
                                 (if (if (g$char=?$12726$1MHp3Q
                                           g$c$18403$1MHp3Q
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$16566$1MHp3Q
                                           g$n$18401$1MHp3Q
                                           g$nmax$18399$1MHp3Q))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$18404$1MHp3Q)
                                       (if (eqv? g$t$18404$1MHp3Q '#\a)
                                         (begin
                                           (display
                                             (car g$a$18402$1MHp3Q)
                                             g$p$18396$1MHp3Q)
                                           (g$loop$18400$1MHp3Q
                                             (g$fx+$16552$1MHp3Q
                                               g$n$18401$1MHp3Q
                                               '2)
                                             (cdr g$a$18402$1MHp3Q)))
                                         (if (eqv?
                                               g$t$18404$1MHp3Q
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$18402$1MHp3Q)
                                               g$p$18396$1MHp3Q)
                                             (g$loop$18400$1MHp3Q
                                               (g$fx+$16552$1MHp3Q
                                                 g$n$18401$1MHp3Q
                                                 '2)
                                               (cdr g$a$18402$1MHp3Q)))
                                           (if (eqv?
                                                 g$t$18404$1MHp3Q
                                                 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$18402$1MHp3Q)
                                                   '2)
                                                 g$p$18396$1MHp3Q)
                                               (g$loop$18400$1MHp3Q
                                                 (g$fx+$16552$1MHp3Q
                                                   g$n$18401$1MHp3Q
                                                   '2)
                                                 (cdr g$a$18402$1MHp3Q)))
                                             (if (eqv?
                                                   g$t$18404$1MHp3Q
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$18402$1MHp3Q)
                                                     '8)
                                                   g$p$18396$1MHp3Q)
                                                 (g$loop$18400$1MHp3Q
                                                   (g$fx+$16552$1MHp3Q
                                                     g$n$18401$1MHp3Q
                                                     '2)
                                                   (cdr g$a$18402$1MHp3Q)))
                                               (if (eqv?
                                                     g$t$18404$1MHp3Q
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$18402$1MHp3Q)
                                                       '16)
                                                     g$p$18396$1MHp3Q)
                                                   (g$loop$18400$1MHp3Q
                                                     (g$fx+$16552$1MHp3Q
                                                       g$n$18401$1MHp3Q
                                                       '2)
                                                     (cdr g$a$18402$1MHp3Q)))
                                                 (if (eqv?
                                                       g$t$18404$1MHp3Q
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$18402$1MHp3Q)
                                                         '10)
                                                       g$p$18396$1MHp3Q)
                                                     (g$loop$18400$1MHp3Q
                                                       (g$fx+$16552$1MHp3Q
                                                         g$n$18401$1MHp3Q
                                                         '2)
                                                       (cdr g$a$18402$1MHp3Q)))
                                                   (if (eqv?
                                                         g$t$18404$1MHp3Q
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$18238$1MHp3Q
                                                         '#\~
                                                         g$p$18396$1MHp3Q)
                                                       (g$loop$18400$1MHp3Q
                                                         (g$fx+$16552$1MHp3Q
                                                           g$n$18401$1MHp3Q
                                                           '2)
                                                         g$a$18402$1MHp3Q))
                                                     (begin
                                                       '#f
                                                       (g$write-char$18238$1MHp3Q
                                                         g$c$18403$1MHp3Q
                                                         g$p$18396$1MHp3Q)
                                                       (g$loop$18400$1MHp3Q
                                                         (g$fx+$16552$1MHp3Q
                                                           g$n$18401$1MHp3Q
                                                           '1)
                                                         g$a$18402$1MHp3Q)))))))))))
                                    (string-ref
                                      g$cntl$18397$1MHp3Q
                                      (g$fx+$16552$1MHp3Q
                                        g$n$18401$1MHp3Q
                                        '1)))
                                   (begin
                                     (g$write-char$18238$1MHp3Q
                                       g$c$18403$1MHp3Q
                                       g$p$18396$1MHp3Q)
                                     (g$loop$18400$1MHp3Q
                                       (g$fx+$16552$1MHp3Q
                                         g$n$18401$1MHp3Q
                                         '1)
                                       g$a$18402$1MHp3Q)))))
                              (string-ref
                                g$cntl$18397$1MHp3Q
                                g$n$18401$1MHp3Q))
                             (void))))))
               g$loop$18400$1MHp3Q)
             '0
             g$args$18398$1MHp3Q)))
         (g$fx-$16554$1MHp3Q (string-length g$cntl$18397$1MHp3Q) '1)))))
   (g$printf$18393$1MHp3Q
     g$printf$18415$1MHp3Q
     (case-lambda
       ((g$control$18405$1MHp3Q . g$args$18406$1MHp3Q)
        (g$dofmt$18392$1MHp3Q
          (current-output-port)
          g$control$18405$1MHp3Q
          g$args$18406$1MHp3Q))))
   (g$fprintf$18394$1MHp3Q
     g$fprintf$18416$1MHp3Q
     (case-lambda
       ((g$p$18407$1MHp3Q g$control$18408$1MHp3Q . g$args$18409$1MHp3Q)
        (g$dofmt$18392$1MHp3Q
          g$p$18407$1MHp3Q
          g$control$18408$1MHp3Q
          g$args$18409$1MHp3Q))))
   (g$format$18395$1MHp3Q
     g$format$18417$1MHp3Q
     (case-lambda
       ((g$control$18410$1MHp3Q . g$args$18411$1MHp3Q)
        (call-with-values
          g$open-string-output-port$18177$1MHp3Q
          (case-lambda
            ((g$p$18412$1MHp3Q g$c$18413$1MHp3Q)
             (begin
               (g$dofmt$18392$1MHp3Q
                 g$p$18412$1MHp3Q
                 g$control$18410$1MHp3Q
                 g$args$18411$1MHp3Q)
               (g$c$18413$1MHp3Q)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$18418$1MHp3Q
     g$make-traced-macro$18421$1MHp3Q
     (case-lambda
       ((g$name$18419$1MHp3Q g$x$18420$1MHp3Q)
        (if (g$procedure?$12669$1MHp3Q g$x$18420$1MHp3Q)
          (make-traced-procedure
            g$name$18419$1MHp3Q
            g$x$18420$1MHp3Q
            g$syntax->datum$23975$1MHp3Q)
          (if (g$variable-transformer?$23796$1MHp3Q g$x$18420$1MHp3Q)
            (g$make-variable-transformer$23794$1MHp3Q
              (make-traced-procedure
                g$name$18419$1MHp3Q
                (g$variable-transformer-procedure$23797$1MHp3Q
                  g$x$18420$1MHp3Q)
                g$syntax->datum$23975$1MHp3Q))
            (begin '#f g$x$18420$1MHp3Q)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$18422$1MHp3Q
     g$library-version-mismatch-warning$18623$1MHp3Q
     (case-lambda
       ((g$name$18595$1MHp3Q
          g$depname$18596$1MHp3Q
          g$filename$18597$1MHp3Q)
        (g$fprintf$18416$1MHp3Q
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$18595$1MHp3Q
          g$depname$18596$1MHp3Q
          g$filename$18597$1MHp3Q))))
   (g$file-locator-resolution-error$18423$1MHp3Q
     g$file-locator-resolution-error$18624$1MHp3Q
     (case-lambda
       ((g$libname$18598$1MHp3Q g$failed-list$18599$1MHp3Q)
        (letrec* ((g$8679$18600$1MHp3Q
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$13822$1MHp3Q
                      'g$8682$1MHp3Q
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8681$18601$1MHp3Q '#f)
                  (g$8680$18602$1MHp3Q
                    (make-record-constructor-descriptor
                      g$8679$18600$1MHp3Q
                      g$&condition-rcd$13823$1MHp3Q
                      g$8681$18601$1MHp3Q))
                  (g$8678$18605$1MHp3Q
                    (record-predicate g$8679$18600$1MHp3Q))
                  (g$make-library-resolution-condition$18606$1MHp3Q
                    (record-constructor g$8680$18602$1MHp3Q))
                  (g$8676$18607$1MHp3Q
                    (record-accessor g$8679$18600$1MHp3Q '0))
                  (g$8677$18608$1MHp3Q
                    (record-accessor g$8679$18600$1MHp3Q '1))
                  (g$library-resolution-condition?$18609$1MHp3Q
                    (condition-predicate g$8679$18600$1MHp3Q))
                  (g$condition-library$18610$1MHp3Q
                    (condition-accessor
                      g$8679$18600$1MHp3Q
                      g$8676$18607$1MHp3Q))
                  (g$condition-files$18611$1MHp3Q
                    (condition-accessor
                      g$8679$18600$1MHp3Q
                      g$8677$18608$1MHp3Q)))
          (raise
            (condition
              (g$make-error$13854$1MHp3Q)
              (g$make-who-condition$13888$1MHp3Q 'expander)
              (g$make-message-condition$13828$1MHp3Q
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$18606$1MHp3Q
                g$libname$18598$1MHp3Q
                g$failed-list$18599$1MHp3Q)))))))
   (g$read-library-source-file$18424$1MHp3Q
     g$read-library-source-file$18625$1MHp3Q
     (case-lambda
       ((g$file-name$18612$1MHp3Q)
        (g$with-input-from-file$18239$1MHp3Q
          g$file-name$18612$1MHp3Q
          read-annotated))))
   (g$make-parameter$18425$1MHp3Q
     g$make-parameter$18626$1MHp3Q
     (case-lambda
       ((g$x$18613$1MHp3Q)
        (g$make-parameter$18425$1MHp3Q
          g$x$18613$1MHp3Q
          (case-lambda ((g$x$18614$1MHp3Q) g$x$18614$1MHp3Q))))
       ((g$x$18615$1MHp3Q g$fender$18616$1MHp3Q)
        (begin
          (if (not (g$procedure?$12669$1MHp3Q g$fender$18616$1MHp3Q))
            (g$assertion-error$23968$1MHp3Q
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$18617$1MHp3Q)
              (case-lambda
                (() g$x$18617$1MHp3Q)
                ((g$v$18618$1MHp3Q)
                 (set! g$x$18617$1MHp3Q
                   (g$fender$18616$1MHp3Q g$v$18618$1MHp3Q))))))
           (g$fender$18616$1MHp3Q g$x$18615$1MHp3Q))))))
   (g$file-options-constructor$18591$1MHp3Q
     g$file-options-constructor$18627$1MHp3Q
     (g$make-parameter$18425$1MHp3Q '#f))
   (g$file-options-spec$18592$1MHp3Q
     g$file-options-spec$18628$1MHp3Q
     (case-lambda
       ((g$x$18619$1MHp3Q)
        ((g$file-options-constructor$18591$1MHp3Q) g$x$18619$1MHp3Q))))
   (g$set-label-binding!$18593$1MHp3Q
     g$set-label-binding!$18629$1MHp3Q
     (case-lambda
       ((g$label$18620$1MHp3Q g$binding$18621$1MHp3Q)
        (set-symbol-value!
          g$label$18620$1MHp3Q
          g$binding$18621$1MHp3Q))))
   (g$label-binding$18594$1MHp3Q
     g$label-binding$18630$1MHp3Q
     (case-lambda
       ((g$label$18622$1MHp3Q)
        (if (symbol-bound? g$label$18622$1MHp3Q)
          (begin '#f (symbol-value g$label$18622$1MHp3Q))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$18631$1MHp3Q
     g$genwrite:newline-str$18824$1MHp3Q
     (make-string '1 '#\newline))
   (g$symbol->string$18632$1MHp3Q
     g$symbol->string$18825$1MHp3Q
     (case-lambda
       ((g$s$18644$1MHp3Q)
        (symbol->string
          (if (g$pretty-gensyms$18641$1MHp3Q)
            (ungensym g$s$18644$1MHp3Q)
            g$s$18644$1MHp3Q)))))
   (g$read-macro-body$18633$1MHp3Q
     g$read-macro-body$18826$1MHp3Q
     (case-lambda
       ((g$l$18645$1MHp3Q) (g$cadr$12686$1MHp3Q g$l$18645$1MHp3Q))))
   (g$read-macro-prefix$18634$1MHp3Q
     g$read-macro-prefix$18827$1MHp3Q
     (case-lambda
       ((g$l$18646$1MHp3Q)
        ((case-lambda
           ((g$head$18647$1MHp3Q g$tail$18648$1MHp3Q)
            ((case-lambda
               ((g$t$18649$1MHp3Q)
                (if (eqv? g$t$18649$1MHp3Q 'syntax)
                  '"#'"
                  (if (eqv? g$t$18649$1MHp3Q 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$18649$1MHp3Q 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$18649$1MHp3Q 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$18649$1MHp3Q 'quote)
                          '"'"
                          (if (eqv? g$t$18649$1MHp3Q 'quasiquote)
                            '"`"
                            (if (eqv? g$t$18649$1MHp3Q 'unquote)
                              '","
                              (if (eqv?
                                    g$t$18649$1MHp3Q
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$18647$1MHp3Q)))
         (car g$l$18646$1MHp3Q)
         (cdr g$l$18646$1MHp3Q)))))
   (g$length1?$18635$1MHp3Q
     g$length1?$18828$1MHp3Q
     (case-lambda
       ((g$l$18650$1MHp3Q)
        (if (pair? g$l$18650$1MHp3Q)
          (begin '#f (null? (cdr g$l$18650$1MHp3Q)))
          '#f))))
   (g$read-macro?$18636$1MHp3Q
     g$read-macro?$18829$1MHp3Q
     (case-lambda
       ((g$l$18651$1MHp3Q)
        ((case-lambda
           ((g$head$18652$1MHp3Q g$tail$18653$1MHp3Q)
            ((case-lambda
               ((g$t$18654$1MHp3Q)
                (if (g$memv$11828$1MHp3Q
                      g$t$18654$1MHp3Q
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$18635$1MHp3Q g$tail$18653$1MHp3Q)
                  (begin '#f '#f))))
             g$head$18652$1MHp3Q)))
         (car g$l$18651$1MHp3Q)
         (cdr g$l$18651$1MHp3Q)))))
   (g$generic-write$18637$1MHp3Q
     g$generic-write$18830$1MHp3Q
     (case-lambda
       ((g$obj$18655$1MHp3Q
          g$display?$18656$1MHp3Q
          g$width$18657$1MHp3Q
          g$output$18658$1MHp3Q)
        (letrec* ((g$out$18659$1MHp3Q
                    (case-lambda
                      ((g$str$18808$1MHp3Q g$col$18809$1MHp3Q)
                       (if g$col$18809$1MHp3Q
                         (if (g$output$18658$1MHp3Q g$str$18808$1MHp3Q)
                           (begin
                             '#f
                             (g$fx+$16552$1MHp3Q
                               g$col$18809$1MHp3Q
                               (string-length g$str$18808$1MHp3Q)))
                           '#f)
                         '#f))))
                  (g$wr$18660$1MHp3Q
                    (case-lambda
                      ((g$obj$18791$1MHp3Q g$col$18792$1MHp3Q)
                       (letrec* ((g$wr-expr$18793$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18806$1MHp3Q
                                        g$col$18807$1MHp3Q)
                                      (if (g$read-macro?$18636$1MHp3Q
                                            g$expr$18806$1MHp3Q)
                                        (g$wr$18660$1MHp3Q
                                          (g$read-macro-body$18633$1MHp3Q
                                            g$expr$18806$1MHp3Q)
                                          (g$out$18659$1MHp3Q
                                            (g$read-macro-prefix$18634$1MHp3Q
                                              g$expr$18806$1MHp3Q)
                                            g$col$18807$1MHp3Q))
                                        (g$wr-lst$18794$1MHp3Q
                                          g$expr$18806$1MHp3Q
                                          g$col$18807$1MHp3Q)))))
                                 (g$wr-lst$18794$1MHp3Q
                                   (case-lambda
                                     ((g$l$18801$1MHp3Q
                                        g$col$18802$1MHp3Q)
                                      (if (pair? g$l$18801$1MHp3Q)
                                        ((letrec ((g$loop$18803$1MHp3Q
                                                    (case-lambda
                                                      ((g$l$18804$1MHp3Q
                                                         g$col$18805$1MHp3Q)
                                                       (if (not g$col$18805$1MHp3Q)
                                                         g$col$18805$1MHp3Q
                                                         (if (pair?
                                                               g$l$18804$1MHp3Q)
                                                           (g$loop$18803$1MHp3Q
                                                             (cdr g$l$18804$1MHp3Q)
                                                             (g$wr$18660$1MHp3Q
                                                               (car g$l$18804$1MHp3Q)
                                                               (g$out$18659$1MHp3Q
                                                                 '" "
                                                                 g$col$18805$1MHp3Q)))
                                                           (if (null?
                                                                 g$l$18804$1MHp3Q)
                                                             (g$out$18659$1MHp3Q
                                                               '")"
                                                               g$col$18805$1MHp3Q)
                                                             (begin
                                                               '#f
                                                               (g$out$18659$1MHp3Q
                                                                 '")"
                                                                 (g$wr$18660$1MHp3Q
                                                                   g$l$18804$1MHp3Q
                                                                   (g$out$18659$1MHp3Q
                                                                     '" . "
                                                                     g$col$18805$1MHp3Q)))))))))))
                                           g$loop$18803$1MHp3Q)
                                         (cdr g$l$18801$1MHp3Q)
                                         (if g$col$18802$1MHp3Q
                                           (begin
                                             '#f
                                             (g$wr$18660$1MHp3Q
                                               (car g$l$18801$1MHp3Q)
                                               (g$out$18659$1MHp3Q
                                                 '"("
                                                 g$col$18802$1MHp3Q)))
                                           '#f))
                                        (g$out$18659$1MHp3Q
                                          '"()"
                                          g$col$18802$1MHp3Q))))))
                         (if (pair? g$obj$18791$1MHp3Q)
                           (g$wr-expr$18793$1MHp3Q
                             g$obj$18791$1MHp3Q
                             g$col$18792$1MHp3Q)
                           (if (null? g$obj$18791$1MHp3Q)
                             (g$wr-lst$18794$1MHp3Q
                               g$obj$18791$1MHp3Q
                               g$col$18792$1MHp3Q)
                             (if (g$vector?$12665$1MHp3Q
                                   g$obj$18791$1MHp3Q)
                               (g$wr-lst$18794$1MHp3Q
                                 (vector->list g$obj$18791$1MHp3Q)
                                 (g$out$18659$1MHp3Q
                                   '"#"
                                   g$col$18792$1MHp3Q))
                               (if (g$boolean?$12668$1MHp3Q
                                     g$obj$18791$1MHp3Q)
                                 (g$out$18659$1MHp3Q
                                   (if g$obj$18791$1MHp3Q '"#t" '"#f")
                                   g$col$18792$1MHp3Q)
                                 (if (g$number?$13363$1MHp3Q
                                       g$obj$18791$1MHp3Q)
                                   (g$out$18659$1MHp3Q
                                     (number->string g$obj$18791$1MHp3Q)
                                     g$col$18792$1MHp3Q)
                                   (if (g$symbol?$12667$1MHp3Q
                                         g$obj$18791$1MHp3Q)
                                     (g$out$18659$1MHp3Q
                                       (g$symbol->string$18632$1MHp3Q
                                         g$obj$18791$1MHp3Q)
                                       g$col$18792$1MHp3Q)
                                     (if (string? g$obj$18791$1MHp3Q)
                                       (if g$display?$18656$1MHp3Q
                                         (g$out$18659$1MHp3Q
                                           g$obj$18791$1MHp3Q
                                           g$col$18792$1MHp3Q)
                                         ((letrec ((g$loop$18795$1MHp3Q
                                                     (case-lambda
                                                       ((g$i$18796$1MHp3Q
                                                          g$j$18797$1MHp3Q
                                                          g$col$18798$1MHp3Q)
                                                        (if (if g$col$18798$1MHp3Q
                                                              (begin
                                                                '#f
                                                                (g$fx<?$16566$1MHp3Q
                                                                  g$j$18797$1MHp3Q
                                                                  (string-length
                                                                    g$obj$18791$1MHp3Q)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$18799$1MHp3Q)
                                                              (if ((case-lambda
                                                                     ((g$t$18800$1MHp3Q)
                                                                      (if g$t$18800$1MHp3Q
                                                                        g$t$18800$1MHp3Q
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12726$1MHp3Q
                                                                            g$c$18799$1MHp3Q
                                                                            '#\")))))
                                                                   (g$char=?$12726$1MHp3Q
                                                                     g$c$18799$1MHp3Q
                                                                     '#\\))
                                                                (g$loop$18795$1MHp3Q
                                                                  g$j$18797$1MHp3Q
                                                                  (g$fx+$16552$1MHp3Q
                                                                    g$j$18797$1MHp3Q
                                                                    '1)
                                                                  (g$out$18659$1MHp3Q
                                                                    '"\\"
                                                                    (g$out$18659$1MHp3Q
                                                                      (substring
                                                                        g$obj$18791$1MHp3Q
                                                                        g$i$18796$1MHp3Q
                                                                        g$j$18797$1MHp3Q)
                                                                      g$col$18798$1MHp3Q)))
                                                                (g$loop$18795$1MHp3Q
                                                                  g$i$18796$1MHp3Q
                                                                  (g$fx+$16552$1MHp3Q
                                                                    g$j$18797$1MHp3Q
                                                                    '1)
                                                                  g$col$18798$1MHp3Q))))
                                                           (string-ref
                                                             g$obj$18791$1MHp3Q
                                                             g$j$18797$1MHp3Q))
                                                          (g$out$18659$1MHp3Q
                                                            '"\""
                                                            (g$out$18659$1MHp3Q
                                                              (substring
                                                                g$obj$18791$1MHp3Q
                                                                g$i$18796$1MHp3Q
                                                                g$j$18797$1MHp3Q)
                                                              g$col$18798$1MHp3Q)))))))
                                            g$loop$18795$1MHp3Q)
                                          '0
                                          '0
                                          (g$out$18659$1MHp3Q
                                            '"\""
                                            g$col$18792$1MHp3Q)))
                                       (begin
                                         '#f
                                         (g$out$18659$1MHp3Q
                                           (g$format$18417$1MHp3Q
                                             (if g$display?$18656$1MHp3Q
                                               '"~a"
                                               '"~s")
                                             g$obj$18791$1MHp3Q)
                                           g$col$18792$1MHp3Q)))))))))))))
                  (g$pp$18661$1MHp3Q
                    (case-lambda
                      ((g$obj$18662$1MHp3Q g$col$18663$1MHp3Q)
                       (letrec* ((g$spaces$18664$1MHp3Q
                                   (case-lambda
                                     ((g$n$18789$1MHp3Q
                                        g$col$18790$1MHp3Q)
                                      (if (g$fx>?$16568$1MHp3Q
                                            g$n$18789$1MHp3Q
                                            '0)
                                        (if (g$fx>?$16568$1MHp3Q
                                              g$n$18789$1MHp3Q
                                              '7)
                                          (g$spaces$18664$1MHp3Q
                                            (g$fx-$16554$1MHp3Q
                                              g$n$18789$1MHp3Q
                                              '8)
                                            (g$out$18659$1MHp3Q
                                              '"        "
                                              g$col$18790$1MHp3Q))
                                          (g$out$18659$1MHp3Q
                                            (substring
                                              '"        "
                                              '0
                                              g$n$18789$1MHp3Q)
                                            g$col$18790$1MHp3Q))
                                        g$col$18790$1MHp3Q))))
                                 (g$indent$18665$1MHp3Q
                                   (case-lambda
                                     ((g$to$18787$1MHp3Q
                                        g$col$18788$1MHp3Q)
                                      (if g$col$18788$1MHp3Q
                                        (begin
                                          '#f
                                          (if (g$fx<?$16566$1MHp3Q
                                                g$to$18787$1MHp3Q
                                                g$col$18788$1MHp3Q)
                                            (if (g$out$18659$1MHp3Q
                                                  g$genwrite:newline-str$18631$1MHp3Q
                                                  g$col$18788$1MHp3Q)
                                              (begin
                                                '#f
                                                (g$spaces$18664$1MHp3Q
                                                  g$to$18787$1MHp3Q
                                                  '0))
                                              '#f)
                                            (g$spaces$18664$1MHp3Q
                                              (g$fx-$16554$1MHp3Q
                                                g$to$18787$1MHp3Q
                                                g$col$18788$1MHp3Q)
                                              g$col$18788$1MHp3Q)))
                                        '#f))))
                                 (g$pr$18666$1MHp3Q
                                   (case-lambda
                                     ((g$obj$18779$1MHp3Q
                                        g$col$18780$1MHp3Q
                                        g$extra$18781$1MHp3Q
                                        g$pp-pair$18782$1MHp3Q)
                                      (if ((case-lambda
                                             ((g$t$18783$1MHp3Q)
                                              (if g$t$18783$1MHp3Q
                                                g$t$18783$1MHp3Q
                                                (begin
                                                  '#f
                                                  (g$vector?$12665$1MHp3Q
                                                    g$obj$18779$1MHp3Q)))))
                                           (pair? g$obj$18779$1MHp3Q))
                                        ((case-lambda
                                           ((g$result$18784$1MHp3Q
                                              g$left$18785$1MHp3Q)
                                            (begin
                                              (g$generic-write$18637$1MHp3Q
                                                g$obj$18779$1MHp3Q
                                                g$display?$18656$1MHp3Q
                                                '#f
                                                (case-lambda
                                                  ((g$str$18786$1MHp3Q)
                                                   (begin
                                                     (set! g$result$18784$1MHp3Q
                                                       (cons
                                                         g$str$18786$1MHp3Q
                                                         g$result$18784$1MHp3Q))
                                                     (set! g$left$18785$1MHp3Q
                                                       (g$fx-$16554$1MHp3Q
                                                         g$left$18785$1MHp3Q
                                                         (string-length
                                                           g$str$18786$1MHp3Q)))
                                                     (g$fx>?$16568$1MHp3Q
                                                       g$left$18785$1MHp3Q
                                                       '0)))))
                                              (if (g$fx>?$16568$1MHp3Q
                                                    g$left$18785$1MHp3Q
                                                    '0)
                                                (g$out$18659$1MHp3Q
                                                  (g$reverse-string-append$18642$1MHp3Q
                                                    g$result$18784$1MHp3Q)
                                                  g$col$18780$1MHp3Q)
                                                (if (pair?
                                                      g$obj$18779$1MHp3Q)
                                                  (g$pp-pair$18782$1MHp3Q
                                                    g$obj$18779$1MHp3Q
                                                    g$col$18780$1MHp3Q
                                                    g$extra$18781$1MHp3Q)
                                                  (g$pp-list$18669$1MHp3Q
                                                    (vector->list
                                                      g$obj$18779$1MHp3Q)
                                                    (g$out$18659$1MHp3Q
                                                      '"#"
                                                      g$col$18780$1MHp3Q)
                                                    g$extra$18781$1MHp3Q
                                                    g$pp-expr$18667$1MHp3Q))))))
                                         '()
                                         (g$min$12716$1MHp3Q
                                           (g$fx+$16552$1MHp3Q
                                             (g$fx-$16554$1MHp3Q
                                               (g$fx-$16554$1MHp3Q
                                                 g$width$18657$1MHp3Q
                                                 g$col$18780$1MHp3Q)
                                               g$extra$18781$1MHp3Q)
                                             '1)
                                           (g$pretty-width$18638$1MHp3Q)))
                                        (g$wr$18660$1MHp3Q
                                          g$obj$18779$1MHp3Q
                                          g$col$18780$1MHp3Q)))))
                                 (g$pp-expr$18667$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18774$1MHp3Q
                                        g$col$18775$1MHp3Q
                                        g$extra$18776$1MHp3Q)
                                      (if (g$read-macro?$18636$1MHp3Q
                                            g$expr$18774$1MHp3Q)
                                        (g$pr$18666$1MHp3Q
                                          (g$read-macro-body$18633$1MHp3Q
                                            g$expr$18774$1MHp3Q)
                                          (g$out$18659$1MHp3Q
                                            (g$read-macro-prefix$18634$1MHp3Q
                                              g$expr$18774$1MHp3Q)
                                            g$col$18775$1MHp3Q)
                                          g$extra$18776$1MHp3Q
                                          g$pp-expr$18667$1MHp3Q)
                                        ((case-lambda
                                           ((g$head$18777$1MHp3Q)
                                            (if (g$symbol?$12667$1MHp3Q
                                                  g$head$18777$1MHp3Q)
                                              ((case-lambda
                                                 ((g$proc$18778$1MHp3Q)
                                                  (if g$proc$18778$1MHp3Q
                                                    (g$proc$18778$1MHp3Q
                                                      g$expr$18774$1MHp3Q
                                                      g$col$18775$1MHp3Q
                                                      g$extra$18776$1MHp3Q)
                                                    (if (g$fx>?$16568$1MHp3Q
                                                          (string-length
                                                            (g$symbol->string$18632$1MHp3Q
                                                              g$head$18777$1MHp3Q))
                                                          (g$max-call-head-width$18640$1MHp3Q))
                                                      (g$pp-general$18671$1MHp3Q
                                                        g$expr$18774$1MHp3Q
                                                        g$col$18775$1MHp3Q
                                                        g$extra$18776$1MHp3Q
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$18667$1MHp3Q)
                                                      (g$pp-call$18668$1MHp3Q
                                                        g$expr$18774$1MHp3Q
                                                        g$col$18775$1MHp3Q
                                                        g$extra$18776$1MHp3Q
                                                        g$pp-expr$18667$1MHp3Q)))))
                                               (g$style$18683$1MHp3Q
                                                 g$head$18777$1MHp3Q))
                                              (g$pp-list$18669$1MHp3Q
                                                g$expr$18774$1MHp3Q
                                                g$col$18775$1MHp3Q
                                                g$extra$18776$1MHp3Q
                                                g$pp-expr$18667$1MHp3Q))))
                                         (car g$expr$18774$1MHp3Q))))))
                                 (g$pp-call$18668$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18769$1MHp3Q
                                        g$col$18770$1MHp3Q
                                        g$extra$18771$1MHp3Q
                                        g$pp-item$18772$1MHp3Q)
                                      ((case-lambda
                                         ((g$col*$18773$1MHp3Q)
                                          (if g$col$18770$1MHp3Q
                                            (begin
                                              '#f
                                              (g$pp-down$18670$1MHp3Q
                                                (cdr g$expr$18769$1MHp3Q)
                                                g$col*$18773$1MHp3Q
                                                (g$fx+$16552$1MHp3Q
                                                  g$col*$18773$1MHp3Q
                                                  '1)
                                                g$extra$18771$1MHp3Q
                                                g$pp-item$18772$1MHp3Q))
                                            '#f)))
                                       (g$wr$18660$1MHp3Q
                                         (car g$expr$18769$1MHp3Q)
                                         (g$out$18659$1MHp3Q
                                           '"("
                                           g$col$18770$1MHp3Q))))))
                                 (g$pp-list$18669$1MHp3Q
                                   (case-lambda
                                     ((g$l$18764$1MHp3Q
                                        g$col$18765$1MHp3Q
                                        g$extra$18766$1MHp3Q
                                        g$pp-item$18767$1MHp3Q)
                                      ((case-lambda
                                         ((g$col$18768$1MHp3Q)
                                          (g$pp-down$18670$1MHp3Q
                                            g$l$18764$1MHp3Q
                                            g$col$18768$1MHp3Q
                                            g$col$18768$1MHp3Q
                                            g$extra$18766$1MHp3Q
                                            g$pp-item$18767$1MHp3Q)))
                                       (g$out$18659$1MHp3Q
                                         '"("
                                         g$col$18765$1MHp3Q)))))
                                 (g$pp-down$18670$1MHp3Q
                                   (case-lambda
                                     ((g$l$18754$1MHp3Q
                                        g$col1$18755$1MHp3Q
                                        g$col2$18756$1MHp3Q
                                        g$extra$18757$1MHp3Q
                                        g$pp-item$18758$1MHp3Q)
                                      ((letrec ((g$loop$18759$1MHp3Q
                                                  (case-lambda
                                                    ((g$l$18760$1MHp3Q
                                                       g$col$18761$1MHp3Q)
                                                     (if g$col$18761$1MHp3Q
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$18760$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$rest$18762$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$extra$18763$1MHp3Q)
                                                                   (g$loop$18759$1MHp3Q
                                                                     g$rest$18762$1MHp3Q
                                                                     (g$pr$18666$1MHp3Q
                                                                       (car g$l$18760$1MHp3Q)
                                                                       (g$indent$18665$1MHp3Q
                                                                         g$col2$18756$1MHp3Q
                                                                         g$col$18761$1MHp3Q)
                                                                       g$extra$18763$1MHp3Q
                                                                       g$pp-item$18758$1MHp3Q))))
                                                                (if (null?
                                                                      g$rest$18762$1MHp3Q)
                                                                  (g$fx+$16552$1MHp3Q
                                                                    g$extra$18757$1MHp3Q
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$18760$1MHp3Q))
                                                           (if (null?
                                                                 g$l$18760$1MHp3Q)
                                                             (g$out$18659$1MHp3Q
                                                               '")"
                                                               g$col$18761$1MHp3Q)
                                                             (begin
                                                               '#f
                                                               (g$out$18659$1MHp3Q
                                                                 '")"
                                                                 (g$pr$18666$1MHp3Q
                                                                   g$l$18760$1MHp3Q
                                                                   (g$indent$18665$1MHp3Q
                                                                     g$col2$18756$1MHp3Q
                                                                     (g$out$18659$1MHp3Q
                                                                       '"."
                                                                       (g$indent$18665$1MHp3Q
                                                                         g$col2$18756$1MHp3Q
                                                                         g$col$18761$1MHp3Q)))
                                                                   (g$fx+$16552$1MHp3Q
                                                                     g$extra$18757$1MHp3Q
                                                                     '1)
                                                                   g$pp-item$18758$1MHp3Q))))))
                                                       '#f)))))
                                         g$loop$18759$1MHp3Q)
                                       g$l$18754$1MHp3Q
                                       g$col1$18755$1MHp3Q))))
                                 (g$pp-general$18671$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18721$1MHp3Q
                                        g$col$18722$1MHp3Q
                                        g$extra$18723$1MHp3Q
                                        g$named?$18724$1MHp3Q
                                        g$pp-1$18725$1MHp3Q
                                        g$pp-2$18726$1MHp3Q
                                        g$pp-3$18727$1MHp3Q)
                                      (letrec* ((g$tail1$18728$1MHp3Q
                                                  (case-lambda
                                                    ((g$rest$18747$1MHp3Q
                                                       g$col1$18748$1MHp3Q
                                                       g$col2$18749$1MHp3Q
                                                       g$col3$18750$1MHp3Q)
                                                     (if (if g$pp-1$18725$1MHp3Q
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18747$1MHp3Q))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18751$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$rest$18752$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$extra$18753$1MHp3Q)
                                                                   (g$tail2$18729$1MHp3Q
                                                                     g$rest$18752$1MHp3Q
                                                                     g$col1$18748$1MHp3Q
                                                                     (g$pr$18666$1MHp3Q
                                                                       g$val1$18751$1MHp3Q
                                                                       (g$indent$18665$1MHp3Q
                                                                         g$col3$18750$1MHp3Q
                                                                         g$col2$18749$1MHp3Q)
                                                                       g$extra$18753$1MHp3Q
                                                                       g$pp-1$18725$1MHp3Q)
                                                                     g$col3$18750$1MHp3Q)))
                                                                (if (null?
                                                                      g$rest$18752$1MHp3Q)
                                                                  (g$fx+$16552$1MHp3Q
                                                                    g$extra$18723$1MHp3Q
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18747$1MHp3Q))))
                                                        (car g$rest$18747$1MHp3Q))
                                                       (g$tail2$18729$1MHp3Q
                                                         g$rest$18747$1MHp3Q
                                                         g$col1$18748$1MHp3Q
                                                         g$col2$18749$1MHp3Q
                                                         g$col3$18750$1MHp3Q)))))
                                                (g$tail2$18729$1MHp3Q
                                                  (case-lambda
                                                    ((g$rest$18740$1MHp3Q
                                                       g$col1$18741$1MHp3Q
                                                       g$col2$18742$1MHp3Q
                                                       g$col3$18743$1MHp3Q)
                                                     (if (if g$pp-2$18726$1MHp3Q
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18740$1MHp3Q))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18744$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$rest$18745$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$extra$18746$1MHp3Q)
                                                                   (g$tail3$18730$1MHp3Q
                                                                     g$rest$18745$1MHp3Q
                                                                     g$col1$18741$1MHp3Q
                                                                     (g$pr$18666$1MHp3Q
                                                                       g$val1$18744$1MHp3Q
                                                                       (g$indent$18665$1MHp3Q
                                                                         g$col3$18743$1MHp3Q
                                                                         g$col2$18742$1MHp3Q)
                                                                       g$extra$18746$1MHp3Q
                                                                       g$pp-2$18726$1MHp3Q))))
                                                                (if (null?
                                                                      g$rest$18745$1MHp3Q)
                                                                  (g$fx+$16552$1MHp3Q
                                                                    g$extra$18723$1MHp3Q
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18740$1MHp3Q))))
                                                        (car g$rest$18740$1MHp3Q))
                                                       (g$tail3$18730$1MHp3Q
                                                         g$rest$18740$1MHp3Q
                                                         g$col1$18741$1MHp3Q
                                                         g$col2$18742$1MHp3Q)))))
                                                (g$tail3$18730$1MHp3Q
                                                  (case-lambda
                                                    ((g$rest$18737$1MHp3Q
                                                       g$col1$18738$1MHp3Q
                                                       g$col2$18739$1MHp3Q)
                                                     (g$pp-down$18670$1MHp3Q
                                                       g$rest$18737$1MHp3Q
                                                       g$col2$18739$1MHp3Q
                                                       g$col1$18738$1MHp3Q
                                                       g$extra$18723$1MHp3Q
                                                       g$pp-3$18727$1MHp3Q)))))
                                        ((case-lambda
                                           ((g$head$18731$1MHp3Q)
                                            ((case-lambda
                                               ((g$rest$18732$1MHp3Q)
                                                ((case-lambda
                                                   ((g$col*$18733$1MHp3Q)
                                                    (if (if g$named?$18724$1MHp3Q
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$18732$1MHp3Q))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$18734$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$rest$18735$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$col**$18736$1MHp3Q)
                                                                  (g$tail1$18728$1MHp3Q
                                                                    g$rest$18735$1MHp3Q
                                                                    (g$fx+$16552$1MHp3Q
                                                                      g$col$18722$1MHp3Q
                                                                      (g$indent-general$18639$1MHp3Q))
                                                                    g$col**$18736$1MHp3Q
                                                                    (g$fx+$16552$1MHp3Q
                                                                      g$col**$18736$1MHp3Q
                                                                      '1))))
                                                               (g$wr$18660$1MHp3Q
                                                                 g$name$18734$1MHp3Q
                                                                 (g$out$18659$1MHp3Q
                                                                   '" "
                                                                   g$col*$18733$1MHp3Q)))))
                                                           (cdr g$rest$18732$1MHp3Q))))
                                                       (car g$rest$18732$1MHp3Q))
                                                      (g$tail1$18728$1MHp3Q
                                                        g$rest$18732$1MHp3Q
                                                        (g$fx+$16552$1MHp3Q
                                                          g$col$18722$1MHp3Q
                                                          (g$indent-general$18639$1MHp3Q))
                                                        g$col*$18733$1MHp3Q
                                                        (g$fx+$16552$1MHp3Q
                                                          g$col*$18733$1MHp3Q
                                                          '1)))))
                                                 (g$wr$18660$1MHp3Q
                                                   g$head$18731$1MHp3Q
                                                   (g$out$18659$1MHp3Q
                                                     '"("
                                                     g$col$18722$1MHp3Q)))))
                                             (cdr g$expr$18721$1MHp3Q))))
                                         (car g$expr$18721$1MHp3Q))))))
                                 (g$pp-expr-list$18672$1MHp3Q
                                   (case-lambda
                                     ((g$l$18718$1MHp3Q
                                        g$col$18719$1MHp3Q
                                        g$extra$18720$1MHp3Q)
                                      (g$pp-list$18669$1MHp3Q
                                        g$l$18718$1MHp3Q
                                        g$col$18719$1MHp3Q
                                        g$extra$18720$1MHp3Q
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-SYNTAX-CASE$18673$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18715$1MHp3Q
                                        g$col$18716$1MHp3Q
                                        g$extra$18717$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18715$1MHp3Q
                                        g$col$18716$1MHp3Q
                                        g$extra$18717$1MHp3Q
                                        '#t
                                        g$pp-expr-list$18672$1MHp3Q
                                        '#f
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-LAMBDA$18674$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18712$1MHp3Q
                                        g$col$18713$1MHp3Q
                                        g$extra$18714$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18712$1MHp3Q
                                        g$col$18713$1MHp3Q
                                        g$extra$18714$1MHp3Q
                                        '#f
                                        g$pp-expr-list$18672$1MHp3Q
                                        '#f
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-IF$18675$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18709$1MHp3Q
                                        g$col$18710$1MHp3Q
                                        g$extra$18711$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18709$1MHp3Q
                                        g$col$18710$1MHp3Q
                                        g$extra$18711$1MHp3Q
                                        '#f
                                        g$pp-expr$18667$1MHp3Q
                                        '#f
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-COND$18676$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18706$1MHp3Q
                                        g$col$18707$1MHp3Q
                                        g$extra$18708$1MHp3Q)
                                      (g$pp-call$18668$1MHp3Q
                                        g$expr$18706$1MHp3Q
                                        g$col$18707$1MHp3Q
                                        g$extra$18708$1MHp3Q
                                        g$pp-expr-list$18672$1MHp3Q))))
                                 (g$pp-CASE$18677$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18703$1MHp3Q
                                        g$col$18704$1MHp3Q
                                        g$extra$18705$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18703$1MHp3Q
                                        g$col$18704$1MHp3Q
                                        g$extra$18705$1MHp3Q
                                        '#f
                                        g$pp-expr$18667$1MHp3Q
                                        '#f
                                        g$pp-expr-list$18672$1MHp3Q))))
                                 (g$pp-CASE-LAMBDA$18678$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18700$1MHp3Q
                                        g$col$18701$1MHp3Q
                                        g$extra$18702$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18700$1MHp3Q
                                        g$col$18701$1MHp3Q
                                        g$extra$18702$1MHp3Q
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$18672$1MHp3Q))))
                                 (g$pp-AND$18679$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18697$1MHp3Q
                                        g$col$18698$1MHp3Q
                                        g$extra$18699$1MHp3Q)
                                      (g$pp-call$18668$1MHp3Q
                                        g$expr$18697$1MHp3Q
                                        g$col$18698$1MHp3Q
                                        g$extra$18699$1MHp3Q
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-LET$18680$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18692$1MHp3Q
                                        g$col$18693$1MHp3Q
                                        g$extra$18694$1MHp3Q)
                                      ((case-lambda
                                         ((g$rest$18695$1MHp3Q)
                                          ((case-lambda
                                             ((g$named?$18696$1MHp3Q)
                                              (g$pp-general$18671$1MHp3Q
                                                g$expr$18692$1MHp3Q
                                                g$col$18693$1MHp3Q
                                                g$extra$18694$1MHp3Q
                                                g$named?$18696$1MHp3Q
                                                g$pp-expr-list$18672$1MHp3Q
                                                '#f
                                                g$pp-expr$18667$1MHp3Q)))
                                           (if (pair?
                                                 g$rest$18695$1MHp3Q)
                                             (begin
                                               '#f
                                               (g$symbol?$12667$1MHp3Q
                                                 (car g$rest$18695$1MHp3Q)))
                                             '#f))))
                                       (cdr g$expr$18692$1MHp3Q)))))
                                 (g$pp-BEGIN$18681$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18689$1MHp3Q
                                        g$col$18690$1MHp3Q
                                        g$extra$18691$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18689$1MHp3Q
                                        g$col$18690$1MHp3Q
                                        g$extra$18691$1MHp3Q
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$pp-DO$18682$1MHp3Q
                                   (case-lambda
                                     ((g$expr$18686$1MHp3Q
                                        g$col$18687$1MHp3Q
                                        g$extra$18688$1MHp3Q)
                                      (g$pp-general$18671$1MHp3Q
                                        g$expr$18686$1MHp3Q
                                        g$col$18687$1MHp3Q
                                        g$extra$18688$1MHp3Q
                                        '#f
                                        g$pp-expr-list$18672$1MHp3Q
                                        g$pp-expr-list$18672$1MHp3Q
                                        g$pp-expr$18667$1MHp3Q))))
                                 (g$style$18683$1MHp3Q
                                   (case-lambda
                                     ((g$head$18684$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$18685$1MHp3Q)
                                          (if (g$memv$11828$1MHp3Q
                                                g$t$18685$1MHp3Q
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$18674$1MHp3Q
                                            (if (eqv?
                                                  g$t$18685$1MHp3Q
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$18673$1MHp3Q
                                              (if (g$memv$11828$1MHp3Q
                                                    g$t$18685$1MHp3Q
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$18675$1MHp3Q
                                                (if (eqv?
                                                      g$t$18685$1MHp3Q
                                                      'cond)
                                                  g$pp-COND$18676$1MHp3Q
                                                  (if (eqv?
                                                        g$t$18685$1MHp3Q
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$18678$1MHp3Q
                                                    (if (eqv?
                                                          g$t$18685$1MHp3Q
                                                          'case)
                                                      g$pp-CASE$18677$1MHp3Q
                                                      (if (g$memv$11828$1MHp3Q
                                                            g$t$18685$1MHp3Q
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$18679$1MHp3Q
                                                        (if (eqv?
                                                              g$t$18685$1MHp3Q
                                                              'let)
                                                          g$pp-LET$18680$1MHp3Q
                                                          (if (eqv?
                                                                g$t$18685$1MHp3Q
                                                                'begin)
                                                            g$pp-BEGIN$18681$1MHp3Q
                                                            (if (eqv?
                                                                  g$t$18685$1MHp3Q
                                                                  'do)
                                                              g$pp-DO$18682$1MHp3Q
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$18684$1MHp3Q)))))
                         (g$pr$18666$1MHp3Q
                           g$obj$18662$1MHp3Q
                           g$col$18663$1MHp3Q
                           '0
                           g$pp-expr$18667$1MHp3Q))))))
          (if g$width$18657$1MHp3Q
            (g$out$18659$1MHp3Q
              g$genwrite:newline-str$18631$1MHp3Q
              (g$pp$18661$1MHp3Q g$obj$18655$1MHp3Q '0))
            (g$wr$18660$1MHp3Q g$obj$18655$1MHp3Q '0))))))
   (g$pretty-width$18638$1MHp3Q
     g$pretty-width$18831$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '72))
   (g$indent-general$18639$1MHp3Q
     g$indent-general$18832$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '2))
   (g$max-call-head-width$18640$1MHp3Q
     g$max-call-head-width$18833$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '3))
   (g$pretty-gensyms$18641$1MHp3Q
     g$pretty-gensyms$18834$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '#f))
   (g$reverse-string-append$18642$1MHp3Q
     g$reverse-string-append$18835$1MHp3Q
     (case-lambda
       ((g$l$18810$1MHp3Q)
        (letrec* ((g$rev-string-append$18811$1MHp3Q
                    (case-lambda
                      ((g$l$18812$1MHp3Q g$i$18813$1MHp3Q)
                       (if (pair? g$l$18812$1MHp3Q)
                         ((case-lambda
                            ((g$str$18814$1MHp3Q)
                             ((case-lambda
                                ((g$len$18815$1MHp3Q)
                                 ((case-lambda
                                    ((g$result$18816$1MHp3Q)
                                     ((letrec ((g$loop$18817$1MHp3Q
                                                 (case-lambda
                                                   ((g$j$18818$1MHp3Q
                                                      g$k$18819$1MHp3Q)
                                                    (if (g$fx<?$16566$1MHp3Q
                                                          g$j$18818$1MHp3Q
                                                          g$len$18815$1MHp3Q)
                                                      (begin
                                                        (string-set!
                                                          g$result$18816$1MHp3Q
                                                          g$k$18819$1MHp3Q
                                                          (string-ref
                                                            g$str$18814$1MHp3Q
                                                            g$j$18818$1MHp3Q))
                                                        (g$loop$18817$1MHp3Q
                                                          (g$fx+$16552$1MHp3Q
                                                            g$j$18818$1MHp3Q
                                                            '1)
                                                          (g$fx+$16552$1MHp3Q
                                                            g$k$18819$1MHp3Q
                                                            '1)))
                                                      g$result$18816$1MHp3Q)))))
                                        g$loop$18817$1MHp3Q)
                                      '0
                                      (g$fx-$16554$1MHp3Q
                                        (g$fx-$16554$1MHp3Q
                                          (string-length
                                            g$result$18816$1MHp3Q)
                                          g$i$18813$1MHp3Q)
                                        g$len$18815$1MHp3Q))))
                                  (g$rev-string-append$18811$1MHp3Q
                                    (cdr g$l$18812$1MHp3Q)
                                    (g$fx+$16552$1MHp3Q
                                      g$i$18813$1MHp3Q
                                      g$len$18815$1MHp3Q)))))
                              (string-length g$str$18814$1MHp3Q))))
                          (car g$l$18812$1MHp3Q))
                         (make-string g$i$18813$1MHp3Q))))))
          (g$rev-string-append$18811$1MHp3Q g$l$18810$1MHp3Q '0)))))
   (g$pretty-print$18643$1MHp3Q
     g$pretty-print$18836$1MHp3Q
     (case-lambda
       ((g$obj$18820$1MHp3Q . g$opt$18821$1MHp3Q)
        ((case-lambda
           ((g$port$18822$1MHp3Q)
            (g$generic-write$18637$1MHp3Q
              g$obj$18820$1MHp3Q
              '#f
              (g$pretty-width$18638$1MHp3Q)
              (case-lambda
                ((g$s$18823$1MHp3Q)
                 (begin
                   (display g$s$18823$1MHp3Q g$port$18822$1MHp3Q)
                   '#t))))))
         (if (pair? g$opt$18821$1MHp3Q)
           (car g$opt$18821$1MHp3Q)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$18837$1MHp3Q
     g$cps/generate-reference$19102$1MHp3Q
     (case-lambda
       ((g$variable$18890$1MHp3Q)
        (g$cps/generate-operand$18841$1MHp3Q
          (g$make-reference$18867$1MHp3Q g$variable$18890$1MHp3Q)))))
   (g$cps/generate-literal$18838$1MHp3Q
     g$cps/generate-literal$19103$1MHp3Q
     (case-lambda
       ((g$datum$18891$1MHp3Q)
        (g$cps/generate-operand$18841$1MHp3Q
          (g$make-literal$18866$1MHp3Q g$datum$18891$1MHp3Q)))))
   (g$cps/generate-abstraction$18839$1MHp3Q
     g$cps/generate-abstraction$19104$1MHp3Q
     (case-lambda
       ((g$bvl$18892$1MHp3Q g$body-generator$18893$1MHp3Q)
        (g$cps/generate-operand$18841$1MHp3Q
          (g$make-user-abstraction$18868$1MHp3Q
            g$bvl$18892$1MHp3Q
            (case-lambda
              ((g$continuation-variable$18894$1MHp3Q)
               (g$body-generator$18893$1MHp3Q
                 (g$variable-continuator$18854$1MHp3Q
                   g$continuation-variable$18894$1MHp3Q)))))))))
   (g$cps/generate-abstractions$18840$1MHp3Q
     g$cps/generate-abstractions$19105$1MHp3Q
     (case-lambda
       ((g$bvls$18895$1MHp3Q g$body-generators$18896$1MHp3Q)
        (g$cps/generate-operand$18841$1MHp3Q
          (g$make-user-abstractions$18869$1MHp3Q
            g$bvls$18895$1MHp3Q
            (g$map$11835$1MHp3Q
              (case-lambda
                ((g$body-generator$18897$1MHp3Q)
                 (case-lambda
                   ((g$continuation-variable$18898$1MHp3Q)
                    (g$body-generator$18897$1MHp3Q
                      (g$variable-continuator$18854$1MHp3Q
                        g$continuation-variable$18898$1MHp3Q))))))
              g$body-generators$18896$1MHp3Q))))))
   (g$cps/generate-operand$18841$1MHp3Q
     g$cps/generate-operand$19106$1MHp3Q
     (case-lambda
       ((g$operand$18899$1MHp3Q)
        (case-lambda
          ((g$continuator$18900$1MHp3Q)
           (g$continue-with-operand$18857$1MHp3Q
             g$continuator$18900$1MHp3Q
             g$operand$18899$1MHp3Q))))))
   (g$cps/generate-conditional$18842$1MHp3Q
     g$cps/generate-conditional$19107$1MHp3Q
     (case-lambda
       ((g$condition-generator$18901$1MHp3Q
          g$consequent-generator$18902$1MHp3Q
          g$alternative-generator$18903$1MHp3Q)
        (case-lambda
          ((g$continuator$18904$1MHp3Q)
           (letrec* ((g$if-variable$18905$1MHp3Q
                       (case-lambda
                         ((g$continuation-variable$18907$1MHp3Q)
                          ((case-lambda
                             ((g$continuator*$18908$1MHp3Q)
                              (g$condition-generator$18901$1MHp3Q
                                (g$conditional-continuator$18853$1MHp3Q
                                  (case-lambda
                                    ((g$condition$18909$1MHp3Q)
                                     (g$make-conditional$18876$1MHp3Q
                                       g$condition$18909$1MHp3Q
                                       (g$consequent-generator$18902$1MHp3Q
                                         g$continuator*$18908$1MHp3Q)
                                       (g$alternative-generator$18903$1MHp3Q
                                         g$continuator*$18908$1MHp3Q))))))))
                           (g$variable-continuator$18854$1MHp3Q
                             g$continuation-variable$18907$1MHp3Q))))))
             (g$reify-continuation*$18859$1MHp3Q
               g$continuator$18904$1MHp3Q
               g$if-variable$18905$1MHp3Q
               (case-lambda
                 ((g$continuation-abstraction$18906$1MHp3Q)
                  (g$make-conditional-join$18877$1MHp3Q
                    g$continuation-abstraction$18906$1MHp3Q
                    g$if-variable$18905$1MHp3Q))))))))))
   (g$cps/generate-recursive-bind$18843$1MHp3Q
     g$cps/generate-recursive-bind$19108$1MHp3Q
     (case-lambda
       ((g$variables$18910$1MHp3Q
          g$generators$18911$1MHp3Q
          g$body-generator$18912$1MHp3Q)
        (case-lambda
          ((g$continuator$18913$1MHp3Q)
           (g$make-recursive-bind$18871$1MHp3Q
             g$variables$18910$1MHp3Q
             (g$map$11835$1MHp3Q
               (case-lambda
                 ((g$generator$18914$1MHp3Q)
                  (case-lambda
                    ((g$continuation-variable$18915$1MHp3Q)
                     (g$generator$18914$1MHp3Q
                       (g$variable-continuator$18854$1MHp3Q
                         g$continuation-variable$18915$1MHp3Q))))))
               g$generators$18911$1MHp3Q)
             (g$body-generator$18912$1MHp3Q
               (g$reified-continuator$18856$1MHp3Q
                 g$continuator$18913$1MHp3Q))))))))
   (g$cps/generate-recursive*-bind$18844$1MHp3Q
     g$cps/generate-recursive*-bind$19109$1MHp3Q
     (case-lambda
       ((g$variables$18916$1MHp3Q
          g$generators$18917$1MHp3Q
          g$body-generator$18918$1MHp3Q)
        (case-lambda
          ((g$continuator$18919$1MHp3Q)
           (g$make-recursive*-bind$18872$1MHp3Q
             g$variables$18916$1MHp3Q
             (g$map$11835$1MHp3Q
               (case-lambda
                 ((g$generator$18920$1MHp3Q)
                  (case-lambda
                    ((g$continuation-variable$18921$1MHp3Q)
                     (g$generator$18920$1MHp3Q
                       (g$variable-continuator$18854$1MHp3Q
                         g$continuation-variable$18921$1MHp3Q))))))
               g$generators$18917$1MHp3Q)
             (g$body-generator$18918$1MHp3Q
               (g$reified-continuator$18856$1MHp3Q
                 g$continuator$18919$1MHp3Q))))))))
   (g$cps/generate-recursive*-library-bind$18845$1MHp3Q
     g$cps/generate-recursive*-library-bind$19110$1MHp3Q
     (case-lambda
       ((g$name$18922$1MHp3Q
          g$variables$18923$1MHp3Q
          g$variables*$18924$1MHp3Q
          g$generators$18925$1MHp3Q
          g$body-generator$18926$1MHp3Q)
        (case-lambda
          ((g$continuator$18927$1MHp3Q)
           (g$make-recursive*-library-bind$18873$1MHp3Q
             g$name$18922$1MHp3Q
             g$variables$18923$1MHp3Q
             g$variables*$18924$1MHp3Q
             (g$map$11835$1MHp3Q
               (case-lambda
                 ((g$generator$18928$1MHp3Q)
                  (case-lambda
                    ((g$continuation-variable$18929$1MHp3Q)
                     (g$generator$18928$1MHp3Q
                       (g$variable-continuator$18854$1MHp3Q
                         g$continuation-variable$18929$1MHp3Q))))))
               g$generators$18925$1MHp3Q)
             (g$body-generator$18926$1MHp3Q
               (g$reified-continuator$18856$1MHp3Q
                 g$continuator$18927$1MHp3Q))))))))
   (g$cps/generate-sequence$18846$1MHp3Q
     g$cps/generate-sequence$19111$1MHp3Q
     (case-lambda
       ((g$generators$18930$1MHp3Q)
        (case-lambda
          ((g$continuator$18931$1MHp3Q)
           ((letrec ((g$recur$18932$1MHp3Q
                       (case-lambda
                         ((g$generators$18933$1MHp3Q)
                          ((car g$generators$18933$1MHp3Q)
                           ((case-lambda
                              ((g$generators$18934$1MHp3Q)
                               (if (pair? g$generators$18934$1MHp3Q)
                                 (g$effect-continuator$18852$1MHp3Q
                                   (case-lambda
                                     (()
                                      (g$recur$18932$1MHp3Q
                                        g$generators$18934$1MHp3Q))))
                                 g$continuator$18931$1MHp3Q)))
                            (cdr g$generators$18933$1MHp3Q)))))))
              g$recur$18932$1MHp3Q)
            g$generators$18930$1MHp3Q))))))
   (g$cps/generate-assignment$18847$1MHp3Q
     g$cps/generate-assignment$19112$1MHp3Q
     (case-lambda
       ((g$location$18935$1MHp3Q g$expression-generator$18936$1MHp3Q)
        (case-lambda
          ((g$continuator$18937$1MHp3Q)
           (g$expression-generator$18936$1MHp3Q
             (g$operand-continuator$18851$1MHp3Q
               (case-lambda
                 ((g$operand$18938$1MHp3Q)
                  (g$make-assignment$18879$1MHp3Q
                    g$location$18935$1MHp3Q
                    g$operand$18938$1MHp3Q
                    (g$continue-with-operand$18857$1MHp3Q
                      g$continuator$18937$1MHp3Q
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$18848$1MHp3Q
     g$cps/generate-declaration$19113$1MHp3Q
     (case-lambda
       ((g$location$18939$1MHp3Q g$expression-generator$18940$1MHp3Q)
        (case-lambda
          ((g$continuator$18941$1MHp3Q)
           (g$expression-generator$18940$1MHp3Q
             (g$operand-continuator$18851$1MHp3Q
               (case-lambda
                 ((g$operand$18942$1MHp3Q)
                  (g$make-declaration$18880$1MHp3Q
                    g$location$18939$1MHp3Q
                    g$operand$18942$1MHp3Q
                    (g$continue-with-operand$18857$1MHp3Q
                      g$continuator$18941$1MHp3Q
                      '(cps-void))))))))))))
   (g$cps/generate-combination$18849$1MHp3Q
     g$cps/generate-combination$19114$1MHp3Q
     (case-lambda
       ((g$operator-generator$18943$1MHp3Q
          g$operand-generators$18944$1MHp3Q)
        (g$cps/generate-subproblems$18850$1MHp3Q
          (g$reverse$12684$1MHp3Q
            (cons
              g$operator-generator$18943$1MHp3Q
              g$operand-generators$18944$1MHp3Q))
          (case-lambda
            ((g$operands$18945$1MHp3Q g$continuator$18946$1MHp3Q)
             (g$make-combination$18874$1MHp3Q
               (car g$operands$18945$1MHp3Q)
               (g$reify-continuation$18858$1MHp3Q
                 g$continuator$18946$1MHp3Q)
               (cdr g$operands$18945$1MHp3Q))))))))
   (g$cps/generate-subproblems$18850$1MHp3Q
     g$cps/generate-subproblems$19115$1MHp3Q
     (case-lambda
       ((g$generators$18947$1MHp3Q g$combiner$18948$1MHp3Q)
        (case-lambda
          ((g$continuator$18949$1MHp3Q)
           ((letrec ((g$recur$18950$1MHp3Q
                       (case-lambda
                         ((g$generators$18951$1MHp3Q
                            g$operands$18952$1MHp3Q)
                          (if (pair? g$generators$18951$1MHp3Q)
                            ((car g$generators$18951$1MHp3Q)
                             ((case-lambda
                                ((g$generators$18953$1MHp3Q)
                                 (g$operand-continuator$18851$1MHp3Q
                                   (case-lambda
                                     ((g$operand$18954$1MHp3Q)
                                      (g$recur$18950$1MHp3Q
                                        g$generators$18953$1MHp3Q
                                        (cons
                                          g$operand$18954$1MHp3Q
                                          g$operands$18952$1MHp3Q)))))))
                              (cdr g$generators$18951$1MHp3Q)))
                            (g$combiner$18948$1MHp3Q
                              g$operands$18952$1MHp3Q
                              g$continuator$18949$1MHp3Q))))))
              g$recur$18950$1MHp3Q)
            g$generators$18947$1MHp3Q
            '()))))))
   (g$operand-continuator$18851$1MHp3Q
     g$operand-continuator$19116$1MHp3Q
     (case-lambda
       ((g$generator$18955$1MHp3Q)
        (case-lambda
          ((g$if-operand$18956$1MHp3Q
             g$if-effect$18957$1MHp3Q
             g$if-conditional$18958$1MHp3Q
             g$if-variable$18959$1MHp3Q
             g$if-inline$18960$1MHp3Q)
           (begin
             g$if-effect$18957$1MHp3Q
             g$if-conditional$18958$1MHp3Q
             g$if-variable$18959$1MHp3Q
             g$if-inline$18960$1MHp3Q
             (g$if-operand$18956$1MHp3Q g$generator$18955$1MHp3Q)))))))
   (g$effect-continuator$18852$1MHp3Q
     g$effect-continuator$19117$1MHp3Q
     (case-lambda
       ((g$generator$18961$1MHp3Q)
        (case-lambda
          ((g$if-operand$18962$1MHp3Q
             g$if-effect$18963$1MHp3Q
             g$if-conditional$18964$1MHp3Q
             g$if-variable$18965$1MHp3Q
             g$if-inline$18966$1MHp3Q)
           (begin
             g$if-operand$18962$1MHp3Q
             g$if-conditional$18964$1MHp3Q
             g$if-variable$18965$1MHp3Q
             g$if-inline$18966$1MHp3Q
             (g$if-effect$18963$1MHp3Q g$generator$18961$1MHp3Q)))))))
   (g$conditional-continuator$18853$1MHp3Q
     g$conditional-continuator$19118$1MHp3Q
     (case-lambda
       ((g$generator$18967$1MHp3Q)
        (case-lambda
          ((g$if-operand$18968$1MHp3Q
             g$if-effect$18969$1MHp3Q
             g$if-conditional$18970$1MHp3Q
             g$if-variable$18971$1MHp3Q
             g$if-inline$18972$1MHp3Q)
           (begin
             g$if-operand$18968$1MHp3Q
             g$if-effect$18969$1MHp3Q
             g$if-variable$18971$1MHp3Q
             g$if-inline$18972$1MHp3Q
             (g$if-conditional$18970$1MHp3Q
               g$generator$18967$1MHp3Q)))))))
   (g$variable-continuator$18854$1MHp3Q
     g$variable-continuator$19119$1MHp3Q
     (case-lambda
       ((g$variable$18973$1MHp3Q)
        (case-lambda
          ((g$if-operand$18974$1MHp3Q
             g$if-effect$18975$1MHp3Q
             g$if-conditional$18976$1MHp3Q
             g$if-variable$18977$1MHp3Q
             g$if-inline$18978$1MHp3Q)
           (begin
             g$if-operand$18974$1MHp3Q
             g$if-effect$18975$1MHp3Q
             g$if-variable$18977$1MHp3Q
             g$if-inline$18978$1MHp3Q
             (g$if-variable$18977$1MHp3Q g$variable$18973$1MHp3Q)))))))
   (g$inline-continuator$18855$1MHp3Q
     g$inline-continuator$19120$1MHp3Q
     (case-lambda
       ((g$continuation$18979$1MHp3Q)
        (case-lambda
          ((g$if-operand$18980$1MHp3Q
             g$if-effect$18981$1MHp3Q
             g$if-conditional$18982$1MHp3Q
             g$if-variable$18983$1MHp3Q
             g$if-inline$18984$1MHp3Q)
           (begin
             g$if-operand$18980$1MHp3Q
             g$if-effect$18981$1MHp3Q
             g$if-conditional$18982$1MHp3Q
             g$if-variable$18983$1MHp3Q
             (g$if-inline$18984$1MHp3Q
               g$continuation$18979$1MHp3Q)))))))
   (g$reified-continuator$18856$1MHp3Q
     g$reified-continuator$19121$1MHp3Q
     (case-lambda
       ((g$continuator$18985$1MHp3Q)
        (case-lambda
          ((g$if-operand$18986$1MHp3Q
             g$if-effect$18987$1MHp3Q
             g$if-conditional$18988$1MHp3Q
             g$if-variable$18989$1MHp3Q
             g$if-inline$18990$1MHp3Q)
           (begin
             g$if-operand$18986$1MHp3Q
             g$if-effect$18987$1MHp3Q
             g$if-conditional$18988$1MHp3Q
             (g$reify-continuation*$18859$1MHp3Q
               g$continuator$18985$1MHp3Q
               g$if-variable$18989$1MHp3Q
               g$if-inline$18990$1MHp3Q)))))))
   (g$continue-with-operand$18857$1MHp3Q
     g$continue-with-operand$19122$1MHp3Q
     (case-lambda
       ((g$continuator$18991$1MHp3Q g$operand$18992$1MHp3Q)
        (g$continuator$18991$1MHp3Q
          (case-lambda
            ((g$generator$18993$1MHp3Q)
             (g$generator$18993$1MHp3Q g$operand$18992$1MHp3Q)))
          (case-lambda
            ((g$generator$18994$1MHp3Q) (g$generator$18994$1MHp3Q)))
          (case-lambda
            ((g$generator$18995$1MHp3Q)
             (g$generator$18995$1MHp3Q
               (g$make-truth-test$18881$1MHp3Q
                 g$operand$18992$1MHp3Q))))
          (case-lambda
            ((g$continuation-variable$18996$1MHp3Q)
             (g$make-return$18875$1MHp3Q
               (g$make-reference$18867$1MHp3Q
                 g$continuation-variable$18996$1MHp3Q)
               (list g$operand$18992$1MHp3Q))))
          (case-lambda
            ((g$continuation-abstraction$18997$1MHp3Q)
             (g$make-return$18875$1MHp3Q
               g$continuation-abstraction$18997$1MHp3Q
               (list g$operand$18992$1MHp3Q))))))))
   (g$reify-continuation$18858$1MHp3Q
     g$reify-continuation$19123$1MHp3Q
     (case-lambda
       ((g$continuator$18998$1MHp3Q)
        (g$continuator$18998$1MHp3Q
          g$operand-continuation-reifier$18861$1MHp3Q
          g$effect-continuation-reifier$18863$1MHp3Q
          g$conditional-continuation-reifier$18865$1MHp3Q
          (case-lambda
            ((g$variable$18999$1MHp3Q)
             (g$make-reference$18867$1MHp3Q g$variable$18999$1MHp3Q)))
          (case-lambda
            ((g$continuation$19000$1MHp3Q)
             g$continuation$19000$1MHp3Q))))))
   (g$reify-continuation*$18859$1MHp3Q
     g$reify-continuation*$19124$1MHp3Q
     (case-lambda
       ((g$continuator$19001$1MHp3Q
          g$if-variable$19002$1MHp3Q
          g$if-inline$19003$1MHp3Q)
        (g$continuator$19001$1MHp3Q
          (g$operand-continuation-reifier*$18860$1MHp3Q
            g$if-inline$19003$1MHp3Q)
          (g$effect-continuation-reifier*$18862$1MHp3Q
            g$if-inline$19003$1MHp3Q)
          (g$conditional-continuation-reifier*$18864$1MHp3Q
            g$if-inline$19003$1MHp3Q)
          g$if-variable$19002$1MHp3Q
          g$if-inline$19003$1MHp3Q))))
   (g$operand-continuation-reifier*$18860$1MHp3Q
     g$operand-continuation-reifier*$19125$1MHp3Q
     (case-lambda
       ((g$receiver$19004$1MHp3Q)
        (case-lambda
          ((g$generator$19005$1MHp3Q)
           (g$receiver$19004$1MHp3Q
             ((case-lambda
                ((g$variable$19006$1MHp3Q)
                 (g$make-continuation-abstraction$18870$1MHp3Q
                   (list g$variable$19006$1MHp3Q)
                   (g$generator$19005$1MHp3Q
                     (g$make-reference$18867$1MHp3Q
                       g$variable$19006$1MHp3Q)))))
              (g$generate-variable$18882$1MHp3Q 'V))))))))
   (g$operand-continuation-reifier$18861$1MHp3Q
     g$operand-continuation-reifier$19126$1MHp3Q
     (g$operand-continuation-reifier*$18860$1MHp3Q values))
   (g$effect-continuation-reifier*$18862$1MHp3Q
     g$effect-continuation-reifier*$19127$1MHp3Q
     (case-lambda
       ((g$receiver$19007$1MHp3Q)
        (case-lambda
          ((g$generator$19008$1MHp3Q)
           (g$receiver$19007$1MHp3Q
             ((case-lambda
                ((g$variable$19009$1MHp3Q)
                 (g$make-continuation-abstraction$18870$1MHp3Q
                   g$variable$19009$1MHp3Q
                   (g$generator$19008$1MHp3Q))))
              (g$generate-variable$18882$1MHp3Q 'IGNORE))))))))
   (g$effect-continuation-reifier$18863$1MHp3Q
     g$effect-continuation-reifier$19128$1MHp3Q
     (g$effect-continuation-reifier*$18862$1MHp3Q values))
   (g$conditional-continuation-reifier*$18864$1MHp3Q
     g$conditional-continuation-reifier*$19129$1MHp3Q
     (case-lambda
       ((g$receiver$19010$1MHp3Q)
        (case-lambda
          ((g$generator$19011$1MHp3Q)
           (g$receiver$19010$1MHp3Q
             ((case-lambda
                ((g$variable$19012$1MHp3Q)
                 (g$make-continuation-abstraction$18870$1MHp3Q
                   (list g$variable$19012$1MHp3Q)
                   (g$generator$19011$1MHp3Q
                     (g$make-truth-test$18881$1MHp3Q
                       (g$make-reference$18867$1MHp3Q
                         g$variable$19012$1MHp3Q))))))
              (g$generate-variable$18882$1MHp3Q 'T))))))))
   (g$conditional-continuation-reifier$18865$1MHp3Q
     g$conditional-continuation-reifier$19130$1MHp3Q
     (g$conditional-continuation-reifier*$18864$1MHp3Q values))
   (g$make-literal$18866$1MHp3Q
     g$make-literal$19131$1MHp3Q
     (case-lambda
       ((g$datum$19013$1MHp3Q) (list 'quote g$datum$19013$1MHp3Q))))
   (g$make-reference$18867$1MHp3Q
     g$make-reference$19132$1MHp3Q
     (case-lambda ((g$variable$19014$1MHp3Q) g$variable$19014$1MHp3Q)))
   (g$make-user-abstraction$18868$1MHp3Q
     g$make-user-abstraction$19133$1MHp3Q
     (case-lambda
       ((g$bvl$19015$1MHp3Q g$body-constructor$19016$1MHp3Q)
        ((case-lambda
           ((g$continuation$19017$1MHp3Q)
            (list
              'case-lambda
              (list
                (cons g$continuation$19017$1MHp3Q g$bvl$19015$1MHp3Q)
                (g$body-constructor$19016$1MHp3Q
                  g$continuation$19017$1MHp3Q)))))
         (g$generate-variable$18882$1MHp3Q 'C)))))
   (g$make-user-abstractions$18869$1MHp3Q
     g$make-user-abstractions$19134$1MHp3Q
     (case-lambda
       ((g$bvls$19018$1MHp3Q g$body-constructors$19019$1MHp3Q)
        ((case-lambda
           ((g$continuation$19020$1MHp3Q)
            (cons
              'case-lambda
              (g$map$11835$1MHp3Q
                (case-lambda
                  ((g$bvl$19021$1MHp3Q g$body-constructor$19022$1MHp3Q)
                   (list
                     (cons
                       g$continuation$19020$1MHp3Q
                       g$bvl$19021$1MHp3Q)
                     (g$body-constructor$19022$1MHp3Q
                       g$continuation$19020$1MHp3Q))))
                g$bvls$19018$1MHp3Q
                g$body-constructors$19019$1MHp3Q))))
         (g$generate-variable$18882$1MHp3Q 'C)))))
   (g$make-continuation-abstraction$18870$1MHp3Q
     g$make-continuation-abstraction$19135$1MHp3Q
     (case-lambda
       ((g$bvl$19023$1MHp3Q g$body$19024$1MHp3Q)
        (list
          'case-lambda
          (list g$bvl$19023$1MHp3Q g$body$19024$1MHp3Q)))))
   (g$make-recursive-bind$18871$1MHp3Q
     g$make-recursive-bind$19136$1MHp3Q
     (case-lambda
       ((g$variables$19025$1MHp3Q
          g$constructors$19026$1MHp3Q
          g$body$19027$1MHp3Q)
        (list
          'letrec
          (g$map$11835$1MHp3Q
            (case-lambda
              ((g$variable$19028$1MHp3Q g$constructor$19029$1MHp3Q)
               (list
                 g$variable$19028$1MHp3Q
                 (list
                   (g$make-user-abstraction$18868$1MHp3Q
                     '()
                     g$constructor$19029$1MHp3Q)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$19028$1MHp3Q))))))
            g$variables$19025$1MHp3Q
            g$constructors$19026$1MHp3Q)
          g$body$19027$1MHp3Q))))
   (g$make-recursive*-bind$18872$1MHp3Q
     g$make-recursive*-bind$19137$1MHp3Q
     (case-lambda
       ((g$variables$19030$1MHp3Q
          g$constructors$19031$1MHp3Q
          g$body$19032$1MHp3Q)
        (list
          'letrec*
          (g$map$11835$1MHp3Q
            (case-lambda
              ((g$variable$19033$1MHp3Q g$constructor$19034$1MHp3Q)
               (list
                 g$variable$19033$1MHp3Q
                 (list
                   (g$make-user-abstraction$18868$1MHp3Q
                     '()
                     g$constructor$19034$1MHp3Q)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$19033$1MHp3Q))))))
            g$variables$19030$1MHp3Q
            g$constructors$19031$1MHp3Q)
          g$body$19032$1MHp3Q))))
   (g$make-recursive*-library-bind$18873$1MHp3Q
     g$make-recursive*-library-bind$19138$1MHp3Q
     (case-lambda
       ((g$name$19035$1MHp3Q
          g$variables$19036$1MHp3Q
          g$variables*$19037$1MHp3Q
          g$constructors$19038$1MHp3Q
          g$body$19039$1MHp3Q)
        (list
          'library-letrec*
          g$name$19035$1MHp3Q
          (g$map$11835$1MHp3Q
            (case-lambda
              ((g$variable$19040$1MHp3Q
                 g$variable*$19041$1MHp3Q
                 g$constructor$19042$1MHp3Q)
               (list
                 g$variable$19040$1MHp3Q
                 g$variable*$19041$1MHp3Q
                 (list
                   (g$make-user-abstraction$18868$1MHp3Q
                     '()
                     g$constructor$19042$1MHp3Q)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$19040$1MHp3Q))))))
            g$variables$19036$1MHp3Q
            g$variables*$19037$1MHp3Q
            g$constructors$19038$1MHp3Q)
          g$body$19039$1MHp3Q))))
   (g$make-combination$18874$1MHp3Q
     g$make-combination$19139$1MHp3Q
     (case-lambda
       ((g$operator$19043$1MHp3Q
          g$continuation$19044$1MHp3Q
          g$operands$19045$1MHp3Q)
        (cons
          g$operator$19043$1MHp3Q
          (cons g$continuation$19044$1MHp3Q g$operands$19045$1MHp3Q)))))
   (g$make-return$18875$1MHp3Q
     g$make-return$19140$1MHp3Q
     (case-lambda
       ((g$continuation$19046$1MHp3Q g$operands$19047$1MHp3Q)
        (cons g$continuation$19046$1MHp3Q g$operands$19047$1MHp3Q))))
   (g$make-conditional$18876$1MHp3Q
     g$make-conditional$19141$1MHp3Q
     (case-lambda
       ((g$condition$19048$1MHp3Q
          g$consequent$19049$1MHp3Q
          g$alternative$19050$1MHp3Q)
        (list
          'if
          g$condition$19048$1MHp3Q
          g$consequent$19049$1MHp3Q
          g$alternative$19050$1MHp3Q))))
   (g$make-conditional-join$18877$1MHp3Q
     g$make-conditional-join$19142$1MHp3Q
     (case-lambda
       ((g$continuation$19051$1MHp3Q g$constructor$19052$1MHp3Q)
        ((case-lambda
           ((g$variable$19053$1MHp3Q)
            (g$make-let$18878$1MHp3Q
              (list g$variable$19053$1MHp3Q)
              (list g$continuation$19051$1MHp3Q)
              (g$constructor$19052$1MHp3Q g$variable$19053$1MHp3Q))))
         (g$generate-variable$18882$1MHp3Q 'J)))))
   (g$make-let$18878$1MHp3Q
     g$make-let$19143$1MHp3Q
     (case-lambda
       ((g$variables$19054$1MHp3Q
          g$expressions$19055$1MHp3Q
          g$body$19056$1MHp3Q)
        (cons
          (list
            'case-lambda
            (list g$variables$19054$1MHp3Q g$body$19056$1MHp3Q))
          g$expressions$19055$1MHp3Q))))
   (g$make-assignment$18879$1MHp3Q
     g$make-assignment$19144$1MHp3Q
     (case-lambda
       ((g$location$19057$1MHp3Q
          g$operand$19058$1MHp3Q
          g$expression$19059$1MHp3Q)
        (list
          'begin
          (list 'set! g$location$19057$1MHp3Q g$operand$19058$1MHp3Q)
          g$expression$19059$1MHp3Q))))
   (g$make-declaration$18880$1MHp3Q
     g$make-declaration$19145$1MHp3Q
     (case-lambda
       ((g$location$19060$1MHp3Q
          g$operand$19061$1MHp3Q
          g$expression$19062$1MHp3Q)
        (list
          'begin
          (list 'define g$location$19060$1MHp3Q g$operand$19061$1MHp3Q)
          g$expression$19062$1MHp3Q))))
   (g$make-truth-test$18881$1MHp3Q
     g$make-truth-test$19146$1MHp3Q
     (case-lambda ((g$operand$19063$1MHp3Q) g$operand$19063$1MHp3Q)))
   (g$generate-variable$18882$1MHp3Q
     g$generate-variable$19147$1MHp3Q
     (case-lambda ((g$name$19064$1MHp3Q) (gensym g$name$19064$1MHp3Q))))
   (g$parse$18883$1MHp3Q
     g$parse$19148$1MHp3Q
     (case-lambda
       ((g$x$19065$1MHp3Q)
        (if (pair? g$x$19065$1MHp3Q)
          ((case-lambda
             ((g$t$19066$1MHp3Q)
              (if (eqv? g$t$19066$1MHp3Q 'quote)
                (g$cps/generate-literal$18838$1MHp3Q
                  (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q))
                (if (eqv? g$t$19066$1MHp3Q 'if)
                  (g$cps/generate-conditional$18842$1MHp3Q
                    (g$parse$18883$1MHp3Q
                      (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q))
                    (g$parse$18883$1MHp3Q
                      (g$caddr$12692$1MHp3Q g$x$19065$1MHp3Q))
                    (g$parse$18883$1MHp3Q
                      (g$cadddr$12704$1MHp3Q g$x$19065$1MHp3Q)))
                  (if (eqv? g$t$19066$1MHp3Q 'case-lambda)
                    ((case-lambda
                       ((g$d$19067$1MHp3Q)
                        (g$cps/generate-abstractions$18840$1MHp3Q
                          (g$map$11835$1MHp3Q car g$d$19067$1MHp3Q)
                          (g$map$11835$1MHp3Q
                            (case-lambda
                              ((g$e$19068$1MHp3Q)
                               (g$cps/generate-sequence$18846$1MHp3Q
                                 (g$map$11835$1MHp3Q
                                   g$parse$18883$1MHp3Q
                                   (cdr g$e$19068$1MHp3Q)))))
                            g$d$19067$1MHp3Q))))
                     (cdr g$x$19065$1MHp3Q))
                    (if (eqv? g$t$19066$1MHp3Q 'letrec)
                      ((case-lambda
                         ((g$bindings$19069$1MHp3Q g$body*$19070$1MHp3Q)
                          ((case-lambda
                             ((g$lhs*$19071$1MHp3Q g$rhs*$19072$1MHp3Q)
                              ((case-lambda
                                 ((g$t*$19073$1MHp3Q
                                    g$tmps$19074$1MHp3Q)
                                  ((case-lambda
                                     ((g$s*$19075$1MHp3Q)
                                      (g$parse$18883$1MHp3Q
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$19071$1MHp3Q
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$19073$1MHp3Q
                                                    (append
                                                      g$s*$19075$1MHp3Q
                                                      g$body*$19070$1MHp3Q)))
                                                g$rhs*$19072$1MHp3Q)))
                                          g$tmps$19074$1MHp3Q))))
                                   (g$map$11835$1MHp3Q
                                     (case-lambda
                                       ((g$i$19076$1MHp3Q
                                          g$t$19077$1MHp3Q)
                                        (list
                                          'set!
                                          g$i$19076$1MHp3Q
                                          g$t$19077$1MHp3Q)))
                                     g$lhs*$19071$1MHp3Q
                                     g$t*$19073$1MHp3Q))))
                               (g$map$11835$1MHp3Q
                                 gensym
                                 g$lhs*$19071$1MHp3Q)
                               (g$map$11835$1MHp3Q
                                 (case-lambda
                                   ((g$x$19078$1MHp3Q) 'uninitialized))
                                 g$lhs*$19071$1MHp3Q))))
                           (g$map$11835$1MHp3Q
                             car
                             g$bindings$19069$1MHp3Q)
                           (g$map$11835$1MHp3Q
                             g$cadr$12686$1MHp3Q
                             g$bindings$19069$1MHp3Q))))
                       (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q)
                       (g$cddr$12688$1MHp3Q g$x$19065$1MHp3Q))
                      (if (eqv? g$t$19066$1MHp3Q 'letrec*)
                        ((case-lambda
                           ((g$bindings$19079$1MHp3Q
                              g$body*$19080$1MHp3Q)
                            ((case-lambda
                               ((g$lhs*$19081$1MHp3Q
                                  g$rhs*$19082$1MHp3Q)
                                (g$cps/generate-recursive*-bind$18844$1MHp3Q
                                  g$lhs*$19081$1MHp3Q
                                  (g$map$11835$1MHp3Q
                                    g$parse$18883$1MHp3Q
                                    g$rhs*$19082$1MHp3Q)
                                  (g$parse$18883$1MHp3Q
                                    (cons
                                      'begin
                                      g$body*$19080$1MHp3Q)))))
                             (g$map$11835$1MHp3Q
                               car
                               g$bindings$19079$1MHp3Q)
                             (g$map$11835$1MHp3Q
                               g$cadr$12686$1MHp3Q
                               g$bindings$19079$1MHp3Q))))
                         (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q)
                         (g$cddr$12688$1MHp3Q g$x$19065$1MHp3Q))
                        (if (eqv? g$t$19066$1MHp3Q 'library-letrec*)
                          ((case-lambda
                             ((g$name$19083$1MHp3Q g$x$19084$1MHp3Q)
                              ((case-lambda
                                 ((g$bindings$19085$1MHp3Q
                                    g$body*$19086$1MHp3Q)
                                  ((case-lambda
                                     ((g$lhs*$19087$1MHp3Q
                                        g$lhs**$19088$1MHp3Q
                                        g$rhs*$19089$1MHp3Q)
                                      (g$cps/generate-recursive*-library-bind$18845$1MHp3Q
                                        g$name$19083$1MHp3Q
                                        g$lhs*$19087$1MHp3Q
                                        g$lhs**$19088$1MHp3Q
                                        (g$map$11835$1MHp3Q
                                          g$parse$18883$1MHp3Q
                                          g$rhs*$19089$1MHp3Q)
                                        (g$parse$18883$1MHp3Q
                                          (cons
                                            'begin
                                            g$body*$19086$1MHp3Q)))))
                                   (g$map$11835$1MHp3Q
                                     car
                                     g$bindings$19085$1MHp3Q)
                                   (g$map$11835$1MHp3Q
                                     g$cadr$12686$1MHp3Q
                                     g$bindings$19085$1MHp3Q)
                                   (g$map$11835$1MHp3Q
                                     g$caddr$12692$1MHp3Q
                                     g$bindings$19085$1MHp3Q))))
                               (g$cadr$12686$1MHp3Q g$x$19084$1MHp3Q)
                               (g$cddr$12688$1MHp3Q g$x$19084$1MHp3Q))))
                           (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q)
                           (cdr g$x$19065$1MHp3Q))
                          (if (eqv? g$t$19066$1MHp3Q 'begin)
                            (g$cps/generate-sequence$18846$1MHp3Q
                              (g$map$11835$1MHp3Q
                                g$parse$18883$1MHp3Q
                                (cdr g$x$19065$1MHp3Q)))
                            (if (eqv? g$t$19066$1MHp3Q 'set!)
                              (g$cps/generate-assignment$18847$1MHp3Q
                                (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q)
                                (g$parse$18883$1MHp3Q
                                  (g$caddr$12692$1MHp3Q
                                    g$x$19065$1MHp3Q)))
                              (if (eqv? g$t$19066$1MHp3Q 'define)
                                (g$cps/generate-declaration$18848$1MHp3Q
                                  (g$cadr$12686$1MHp3Q g$x$19065$1MHp3Q)
                                  (g$parse$18883$1MHp3Q
                                    (g$caddr$12692$1MHp3Q
                                      g$x$19065$1MHp3Q)))
                                (begin
                                  '#f
                                  (if (list? g$x$19065$1MHp3Q)
                                    (g$cps/generate-combination$18849$1MHp3Q
                                      (g$parse$18883$1MHp3Q
                                        (car g$x$19065$1MHp3Q))
                                      (g$map$11835$1MHp3Q
                                        g$parse$18883$1MHp3Q
                                        (cdr g$x$19065$1MHp3Q)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$19065$1MHp3Q
                                      (list?
                                        g$x$19065$1MHp3Q)))))))))))))))
           (car g$x$19065$1MHp3Q))
          (if (g$symbol?$12667$1MHp3Q g$x$19065$1MHp3Q)
            (g$cps/generate-reference$18837$1MHp3Q g$x$19065$1MHp3Q)
            (begin
              '#f
              (g$cps/generate-literal$18838$1MHp3Q
                g$x$19065$1MHp3Q)))))))
   (g$starts-with?$18884$1MHp3Q
     g$starts-with?$19149$1MHp3Q
     (case-lambda
       ((g$str$19090$1MHp3Q g$sub$19091$1MHp3Q)
        (clr-call-internal
          'system.string
          'startswith
          g$str$19090$1MHp3Q
          g$sub$19091$1MHp3Q))))
   (g$ends-with?$18885$1MHp3Q
     g$ends-with?$19150$1MHp3Q
     (case-lambda
       ((g$str$19092$1MHp3Q g$sub$19093$1MHp3Q)
        (clr-call-internal
          'system.string
          'endswith
          g$str$19092$1MHp3Q
          g$sub$19093$1MHp3Q))))
   (g$clr-generator?$18886$1MHp3Q
     g$clr-generator?$19151$1MHp3Q
     (case-lambda
       ((g$o$19094$1MHp3Q)
        (if (g$symbol?$12667$1MHp3Q g$o$19094$1MHp3Q)
          (begin
            '#f
            ((case-lambda
               ((g$o$19095$1MHp3Q)
                (if (g$starts-with?$18884$1MHp3Q
                      g$o$19095$1MHp3Q
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$18885$1MHp3Q
                      g$o$19095$1MHp3Q
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$19094$1MHp3Q)))
          '#f))))
   (g$fix-primitives$18887$1MHp3Q
     g$fix-primitives$19152$1MHp3Q
     (case-lambda
       ((g$e$19096$1MHp3Q)
        (if (if (pair? g$e$19096$1MHp3Q)
              (begin '#f (list? g$e$19096$1MHp3Q))
              '#f)
          ((case-lambda
             ((g$o$19097$1MHp3Q)
              (if (eq? g$o$19097$1MHp3Q 'quote)
                g$e$19096$1MHp3Q
                (if (begin
                      '#f
                      (g$clr-generator?$18886$1MHp3Q g$o$19097$1MHp3Q))
                  (if (pair? (cdr g$e$19096$1MHp3Q))
                    (list
                      (g$fix-primitives$18887$1MHp3Q
                        (g$cadr$12686$1MHp3Q g$e$19096$1MHp3Q))
                      (cons
                        g$o$19097$1MHp3Q
                        (g$map$11835$1MHp3Q
                          g$fix-primitives$18887$1MHp3Q
                          (g$cddr$12688$1MHp3Q g$e$19096$1MHp3Q))))
                    g$e$19096$1MHp3Q)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$18887$1MHp3Q g$o$19097$1MHp3Q)
                      (g$map$11835$1MHp3Q
                        g$fix-primitives$18887$1MHp3Q
                        (cdr g$e$19096$1MHp3Q))))))))
           (car g$e$19096$1MHp3Q))
          g$e$19096$1MHp3Q))))
   (g$parse->cps$18888$1MHp3Q
     g$parse->cps$19153$1MHp3Q
     (case-lambda
       ((g$e$19098$1MHp3Q g$var$19099$1MHp3Q)
        ((g$parse$18883$1MHp3Q g$e$19098$1MHp3Q)
         (g$variable-continuator$18854$1MHp3Q g$var$19099$1MHp3Q)))))
   (g$convert->cps$18889$1MHp3Q
     g$convert->cps$19154$1MHp3Q
     (case-lambda
       ((g$e$19100$1MHp3Q g$var$19101$1MHp3Q)
        (g$fix-primitives$18887$1MHp3Q
          (g$parse->cps$18888$1MHp3Q
            g$e$19100$1MHp3Q
            g$var$19101$1MHp3Q))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$19155$1MHp3Q
     g$current-primitive-locations$19200$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda ((g$x$19161$1MHp3Q) '#f))
       (case-lambda
         ((g$p$19162$1MHp3Q)
          (begin
            (if (not (g$procedure?$12669$1MHp3Q g$p$19162$1MHp3Q))
              (g$assertion-error$23968$1MHp3Q
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$19162$1MHp3Q)))))
   (g$mutable?$19156$1MHp3Q
     g$mutable?$19201$1MHp3Q
     (case-lambda
       ((g$x$19163$1MHp3Q)
        (letrec* ((g$simple?$19164$1MHp3Q
                    (case-lambda
                      ((g$x$19165$1MHp3Q)
                       ((case-lambda
                          ((g$t$19166$1MHp3Q)
                           (if g$t$19166$1MHp3Q
                             g$t$19166$1MHp3Q
                             ((case-lambda
                                ((g$t$19167$1MHp3Q)
                                 (if g$t$19167$1MHp3Q
                                   g$t$19167$1MHp3Q
                                   ((case-lambda
                                      ((g$t$19168$1MHp3Q)
                                       (if g$t$19168$1MHp3Q
                                         g$t$19168$1MHp3Q
                                         ((case-lambda
                                            ((g$t$19169$1MHp3Q)
                                             (if g$t$19169$1MHp3Q
                                               g$t$19169$1MHp3Q
                                               ((case-lambda
                                                  ((g$t$19170$1MHp3Q)
                                                   (if g$t$19170$1MHp3Q
                                                     g$t$19170$1MHp3Q
                                                     ((case-lambda
                                                        ((g$t$19171$1MHp3Q)
                                                         (if g$t$19171$1MHp3Q
                                                           g$t$19171$1MHp3Q
                                                           (begin
                                                             '#f
                                                             (g$number?$13363$1MHp3Q
                                                               g$x$19165$1MHp3Q)))))
                                                      (g$bytevector?$12666$1MHp3Q
                                                        g$x$19165$1MHp3Q)))))
                                                (string?
                                                  g$x$19165$1MHp3Q)))))
                                          (g$boolean?$12668$1MHp3Q
                                            g$x$19165$1MHp3Q)))))
                                    (g$symbol?$12667$1MHp3Q
                                      g$x$19165$1MHp3Q)))))
                              (g$char?$12664$1MHp3Q
                                g$x$19165$1MHp3Q)))))
                        (null? g$x$19165$1MHp3Q))))))
          (not (g$simple?$19164$1MHp3Q g$x$19163$1MHp3Q))))))
   (g$rewriter$19157$1MHp3Q
     g$rewriter$19202$1MHp3Q
     (case-lambda
       ((g$quote-hack?$19172$1MHp3Q)
        (letrec* ((g$f$19173$1MHp3Q
                    (case-lambda
                      ((g$x$19174$1MHp3Q)
                       (if (pair? g$x$19174$1MHp3Q)
                         ((case-lambda
                            ((g$t$19175$1MHp3Q)
                             (if (eqv? g$t$19175$1MHp3Q 'quote)
                               (if (if g$quote-hack?$19172$1MHp3Q
                                     (begin
                                       '#f
                                       (g$mutable?$19156$1MHp3Q
                                         (g$cadr$12686$1MHp3Q
                                           g$x$19174$1MHp3Q)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$19176$1MHp3Q)
                                     (begin
                                       (set-symbol-value!
                                         g$g$19176$1MHp3Q
                                         (g$cadr$12686$1MHp3Q
                                           g$x$19174$1MHp3Q))
                                       g$g$19176$1MHp3Q)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$19174$1MHp3Q))
                               (if (eqv? g$t$19175$1MHp3Q 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11835$1MHp3Q
                                     (case-lambda
                                       ((g$x$19177$1MHp3Q)
                                        (cons
                                          (car g$x$19177$1MHp3Q)
                                          (g$map$11835$1MHp3Q
                                            g$f$19173$1MHp3Q
                                            (cdr g$x$19177$1MHp3Q)))))
                                     (cdr g$x$19174$1MHp3Q)))
                                 (if (eqv? g$t$19175$1MHp3Q 'lambda)
                                   (g$cons*$11837$1MHp3Q
                                     'lambda
                                     (g$cadr$12686$1MHp3Q
                                       g$x$19174$1MHp3Q)
                                     (g$map$11835$1MHp3Q
                                       g$f$19173$1MHp3Q
                                       (g$cddr$12688$1MHp3Q
                                         g$x$19174$1MHp3Q)))
                                   (if (eqv? g$t$19175$1MHp3Q 'letrec)
                                     ((case-lambda
                                        ((g$bindings$19178$1MHp3Q
                                           g$body*$19179$1MHp3Q)
                                         ((case-lambda
                                            ((g$lhs*$19180$1MHp3Q
                                               g$rhs*$19181$1MHp3Q)
                                             (g$cons*$11837$1MHp3Q
                                               'letrec
                                               (g$map$11835$1MHp3Q
                                                 list
                                                 g$lhs*$19180$1MHp3Q
                                                 (g$map$11835$1MHp3Q
                                                   g$f$19173$1MHp3Q
                                                   g$rhs*$19181$1MHp3Q))
                                               (g$map$11835$1MHp3Q
                                                 g$f$19173$1MHp3Q
                                                 g$body*$19179$1MHp3Q))))
                                          (g$map$11835$1MHp3Q
                                            car
                                            g$bindings$19178$1MHp3Q)
                                          (g$map$11835$1MHp3Q
                                            g$cadr$12686$1MHp3Q
                                            g$bindings$19178$1MHp3Q))))
                                      (g$cadr$12686$1MHp3Q
                                        g$x$19174$1MHp3Q)
                                      (g$cddr$12688$1MHp3Q
                                        g$x$19174$1MHp3Q))
                                     (if (eqv?
                                           g$t$19175$1MHp3Q
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$19182$1MHp3Q
                                             g$body*$19183$1MHp3Q)
                                           ((case-lambda
                                              ((g$lhs*$19184$1MHp3Q
                                                 g$rhs*$19185$1MHp3Q)
                                               (g$cons*$11837$1MHp3Q
                                                 'letrec*
                                                 (g$map$11835$1MHp3Q
                                                   list
                                                   g$lhs*$19184$1MHp3Q
                                                   (g$map$11835$1MHp3Q
                                                     g$f$19173$1MHp3Q
                                                     g$rhs*$19185$1MHp3Q))
                                                 (g$map$11835$1MHp3Q
                                                   g$f$19173$1MHp3Q
                                                   g$body*$19183$1MHp3Q))))
                                            (g$map$11835$1MHp3Q
                                              car
                                              g$bindings$19182$1MHp3Q)
                                            (g$map$11835$1MHp3Q
                                              g$cadr$12686$1MHp3Q
                                              g$bindings$19182$1MHp3Q))))
                                        (g$cadr$12686$1MHp3Q
                                          g$x$19174$1MHp3Q)
                                        (g$cddr$12688$1MHp3Q
                                          g$x$19174$1MHp3Q))
                                       (if (eqv?
                                             g$t$19175$1MHp3Q
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$19186$1MHp3Q
                                               g$x$19187$1MHp3Q)
                                             ((case-lambda
                                                ((g$bindings$19188$1MHp3Q
                                                   g$body*$19189$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$lhs*$19190$1MHp3Q
                                                       g$lhs**$19191$1MHp3Q
                                                       g$rhs*$19192$1MHp3Q)
                                                     (g$cons*$11837$1MHp3Q
                                                       'library-letrec*
                                                       g$name$19186$1MHp3Q
                                                       (g$map$11835$1MHp3Q
                                                         list
                                                         g$lhs*$19190$1MHp3Q
                                                         g$lhs**$19191$1MHp3Q
                                                         (g$map$11835$1MHp3Q
                                                           g$f$19173$1MHp3Q
                                                           g$rhs*$19192$1MHp3Q))
                                                       (g$map$11835$1MHp3Q
                                                         g$f$19173$1MHp3Q
                                                         g$body*$19189$1MHp3Q))))
                                                  (g$map$11835$1MHp3Q
                                                    car
                                                    g$bindings$19188$1MHp3Q)
                                                  (g$map$11835$1MHp3Q
                                                    g$cadr$12686$1MHp3Q
                                                    g$bindings$19188$1MHp3Q)
                                                  (g$map$11835$1MHp3Q
                                                    g$caddr$12692$1MHp3Q
                                                    g$bindings$19188$1MHp3Q))))
                                              (g$cadr$12686$1MHp3Q
                                                g$x$19187$1MHp3Q)
                                              (g$cddr$12688$1MHp3Q
                                                g$x$19187$1MHp3Q))))
                                          (g$cadr$12686$1MHp3Q
                                            g$x$19174$1MHp3Q)
                                          (cdr g$x$19174$1MHp3Q))
                                         (if (eqv?
                                               g$t$19175$1MHp3Q
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11835$1MHp3Q
                                               g$f$19173$1MHp3Q
                                               (cdr g$x$19174$1MHp3Q)))
                                           (if (eqv?
                                                 g$t$19175$1MHp3Q
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12686$1MHp3Q
                                                 g$x$19174$1MHp3Q)
                                               (g$f$19173$1MHp3Q
                                                 (g$caddr$12692$1MHp3Q
                                                   g$x$19174$1MHp3Q)))
                                             (if (eqv?
                                                   g$t$19175$1MHp3Q
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$19193$1MHp3Q)
                                                   ((case-lambda
                                                      ((g$t$19194$1MHp3Q)
                                                       (if g$t$19194$1MHp3Q
                                                         ((case-lambda
                                                            ((g$loc$19195$1MHp3Q)
                                                             g$loc$19195$1MHp3Q))
                                                          g$t$19194$1MHp3Q)
                                                         (begin
                                                           '#f
                                                           g$op$19193$1MHp3Q))))
                                                    ((g$current-primitive-locations$19155$1MHp3Q)
                                                     g$op$19193$1MHp3Q))))
                                                (g$cadr$12686$1MHp3Q
                                                  g$x$19174$1MHp3Q))
                                               (if (eqv?
                                                     g$t$19175$1MHp3Q
                                                     'define)
                                                 g$x$19174$1MHp3Q
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$19174$1MHp3Q)
                                                     (g$map$11835$1MHp3Q
                                                       g$f$19173$1MHp3Q
                                                       g$x$19174$1MHp3Q)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$19174$1MHp3Q
                                                       (list?
                                                         g$x$19174$1MHp3Q))))))))))))))))
                          (car g$x$19174$1MHp3Q))
                         (begin '#f g$x$19174$1MHp3Q))))))
          g$f$19173$1MHp3Q))))
   (g$expanded->core$19158$1MHp3Q
     g$expanded->core$19203$1MHp3Q
     (case-lambda
       ((g$x$19196$1MHp3Q)
        ((g$rewriter$19157$1MHp3Q '#t) g$x$19196$1MHp3Q))))
   (g$compile-core-expr$19159$1MHp3Q
     g$compile-core-expr$19204$1MHp3Q
     (case-lambda
       ((g$x$19197$1MHp3Q)
        ((g$rewriter$19157$1MHp3Q '#f) g$x$19197$1MHp3Q))))
   (g$compile-core-expr-to-port$19160$1MHp3Q
     g$compile-core-expr-to-port$19205$1MHp3Q
     (case-lambda
       ((g$x$19198$1MHp3Q g$p$19199$1MHp3Q)
        (g$pretty-print$18836$1MHp3Q
          ((g$rewriter$19157$1MHp3Q '#f) g$x$19198$1MHp3Q)
          g$p$19199$1MHp3Q)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$19206$1MHp3Q
     g$make-collection$19415$1MHp3Q
     (case-lambda
       (()
        ((case-lambda
           ((g$set$19269$1MHp3Q)
            (letrec* ((g$set-cons$19270$1MHp3Q
                        (case-lambda
                          ((g$x$19274$1MHp3Q g$ls$19275$1MHp3Q)
                           (if (g$memq$11827$1MHp3Q
                                 g$x$19274$1MHp3Q
                                 g$ls$19275$1MHp3Q)
                             g$ls$19275$1MHp3Q
                             (begin
                               '#f
                               (cons
                                 g$x$19274$1MHp3Q
                                 g$ls$19275$1MHp3Q)))))))
              (case-lambda
                (() g$set$19269$1MHp3Q)
                ((g$x$19271$1MHp3Q)
                 (set! g$set$19269$1MHp3Q
                   (g$set-cons$19270$1MHp3Q
                     g$x$19271$1MHp3Q
                     g$set$19269$1MHp3Q)))
                ((g$x$19272$1MHp3Q g$del?$19273$1MHp3Q)
                 (if g$del?$19273$1MHp3Q
                   (set! g$set$19269$1MHp3Q
                     (g$remq$11842$1MHp3Q
                       g$x$19272$1MHp3Q
                       g$set$19269$1MHp3Q))
                   (set! g$set$19269$1MHp3Q
                     (g$set-cons$19270$1MHp3Q
                       g$x$19272$1MHp3Q
                       g$set$19269$1MHp3Q))))))))
         '()))))
   (g$current-library-collection$19207$1MHp3Q
     g$current-library-collection$19416$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (g$make-collection$19206$1MHp3Q)
       (case-lambda
         ((g$x$19276$1MHp3Q)
          (begin
            (if (not (g$procedure?$12669$1MHp3Q g$x$19276$1MHp3Q))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$19276$1MHp3Q)
              (void))
            g$x$19276$1MHp3Q)))))
   (g$9216$19208$1MHp3Q
     g$9216$19417$1MHp3Q
     (make-record-type-descriptor
       'library
       '#f
       'g$9219$1MHp3Q
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9218$19209$1MHp3Q g$9218$19418$1MHp3Q '#f)
   (g$9217$19210$1MHp3Q
     g$9217$19419$1MHp3Q
     (make-record-constructor-descriptor
       g$9216$19208$1MHp3Q
       '#f
       g$9218$19209$1MHp3Q))
   (g$library?$19213$1MHp3Q
     g$library?$19420$1MHp3Q
     (record-predicate g$9216$19208$1MHp3Q))
   (g$make-library$19214$1MHp3Q
     g$make-library$19421$1MHp3Q
     (record-constructor g$9217$19210$1MHp3Q))
   (g$library-id$19215$1MHp3Q
     g$library-id$19422$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '0))
   (g$library-name$19216$1MHp3Q
     g$library-name$19423$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '1))
   (g$library-version$19217$1MHp3Q
     g$library-version$19424$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '2))
   (g$library-imp*$19218$1MHp3Q
     g$library-imp*$19425$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '3))
   (g$library-vis*$19219$1MHp3Q
     g$library-vis*$19426$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '4))
   (g$library-inv*$19220$1MHp3Q
     g$library-inv*$19427$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '5))
   (g$library-subst$19221$1MHp3Q
     g$library-subst$19428$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '6))
   (g$library-env$19222$1MHp3Q
     g$library-env$19429$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '7))
   (g$library-visit-state$19223$1MHp3Q
     g$library-visit-state$19430$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '8))
   (g$library-invoke-state$19224$1MHp3Q
     g$library-invoke-state$19431$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '9))
   (g$library-visit-code$19225$1MHp3Q
     g$library-visit-code$19432$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '10))
   (g$library-invoke-code$19226$1MHp3Q
     g$library-invoke-code$19433$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '11))
   (g$library-visible?$19227$1MHp3Q
     g$library-visible?$19434$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '12))
   (g$library-source-file-name$19228$1MHp3Q
     g$library-source-file-name$19435$1MHp3Q
     (record-accessor g$9216$19208$1MHp3Q '13))
   (g$set-library-id!$19229$1MHp3Q
     g$set-library-id!$19436$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '0))
   (g$set-library-name!$19230$1MHp3Q
     g$set-library-name!$19437$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '1))
   (g$set-library-version!$19231$1MHp3Q
     g$set-library-version!$19438$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '2))
   (g$set-library-imp*!$19232$1MHp3Q
     g$set-library-imp*!$19439$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '3))
   (g$set-library-vis*!$19233$1MHp3Q
     g$set-library-vis*!$19440$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '4))
   (g$set-library-inv*!$19234$1MHp3Q
     g$set-library-inv*!$19441$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '5))
   (g$set-library-subst!$19235$1MHp3Q
     g$set-library-subst!$19442$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '6))
   (g$set-library-env!$19236$1MHp3Q
     g$set-library-env!$19443$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '7))
   (g$set-library-visit-state!$19237$1MHp3Q
     g$set-library-visit-state!$19444$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '8))
   (g$set-library-invoke-state!$19238$1MHp3Q
     g$set-library-invoke-state!$19445$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '9))
   (g$set-library-visit-code!$19239$1MHp3Q
     g$set-library-visit-code!$19446$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '10))
   (g$set-library-invoke-code!$19240$1MHp3Q
     g$set-library-invoke-code!$19447$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '11))
   (g$set-library-visible?!$19241$1MHp3Q
     g$set-library-visible?!$19448$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '12))
   (g$set-library-source-file-name!$19242$1MHp3Q
     g$set-library-source-file-name!$19449$1MHp3Q
     (record-mutator g$9216$19208$1MHp3Q '13))
   (g$rp$19243$1MHp3Q
     g$rp$19450$1MHp3Q
     (make-record-printer
       'library
       (case-lambda
         ((g$x$19277$1MHp3Q g$p$19278$1MHp3Q g$wr$19279$1MHp3Q)
          (begin
            (if (not (g$library?$19213$1MHp3Q g$x$19277$1MHp3Q))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$18417$1MHp3Q
                '"#<library ~s>"
                (if (null?
                      (g$library-version$19217$1MHp3Q g$x$19277$1MHp3Q))
                  (g$library-name$19216$1MHp3Q g$x$19277$1MHp3Q)
                  (append
                    (g$library-name$19216$1MHp3Q g$x$19277$1MHp3Q)
                    (list
                      (g$library-version$19217$1MHp3Q
                        g$x$19277$1MHp3Q)))))
              g$p$19278$1MHp3Q))))))
   (g$find-dependencies$19244$1MHp3Q
     g$find-dependencies$19451$1MHp3Q
     (case-lambda
       ((g$ls$19280$1MHp3Q)
        (if (null? g$ls$19280$1MHp3Q)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$19245$1MHp3Q
     g$find-library-by$19452$1MHp3Q
     (case-lambda
       ((g$pred$19281$1MHp3Q)
        ((letrec ((g$f$19282$1MHp3Q
                    (case-lambda
                      ((g$ls$19283$1MHp3Q)
                       (if (null? g$ls$19283$1MHp3Q)
                         '#f
                         (if (g$pred$19281$1MHp3Q
                               (car g$ls$19283$1MHp3Q))
                           (car g$ls$19283$1MHp3Q)
                           (begin
                             '#f
                             (g$f$19282$1MHp3Q
                               (cdr g$ls$19283$1MHp3Q)))))))))
           g$f$19282$1MHp3Q)
         ((g$current-library-collection$19207$1MHp3Q))))))
   (g$library-path$19246$1MHp3Q
     g$library-path$19453$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       '(".")
       (case-lambda
         ((g$x$19284$1MHp3Q)
          (if (if (list? g$x$19284$1MHp3Q)
                (begin
                  '#f
                  (g$for-all$11833$1MHp3Q string? g$x$19284$1MHp3Q))
                '#f)
            (g$map$11835$1MHp3Q
              (case-lambda ((g$x$19285$1MHp3Q) g$x$19285$1MHp3Q))
              g$x$19284$1MHp3Q)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$19284$1MHp3Q))))))
   (g$library-extensions$19247$1MHp3Q
     g$library-extensions$19454$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       '(".sls" ".ss")
       (case-lambda
         ((g$x$19286$1MHp3Q)
          (if (if (list? g$x$19286$1MHp3Q)
                (begin
                  '#f
                  (g$for-all$11833$1MHp3Q string? g$x$19286$1MHp3Q))
                '#f)
            (g$map$11835$1MHp3Q
              (case-lambda ((g$x$19287$1MHp3Q) g$x$19287$1MHp3Q))
              g$x$19286$1MHp3Q)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$19286$1MHp3Q))))))
   (g$library-name->file-name$19248$1MHp3Q
     g$library-name->file-name$19455$1MHp3Q
     (case-lambda
       ((g$x$19288$1MHp3Q)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$18177$1MHp3Q)))
          (case-lambda
            ((g$p$19291$1MHp3Q g$extract$19292$1MHp3Q)
             ((case-lambda
                ((g$extract$19293$1MHp3Q g$p$19294$1MHp3Q)
                 (letrec* ((g$display-hex$19295$1MHp3Q
                             (case-lambda
                               ((g$n$19303$1MHp3Q)
                                (if (g$<=$13383$1MHp3Q
                                      '0
                                      g$n$19303$1MHp3Q
                                      '9)
                                  (display
                                    g$n$19303$1MHp3Q
                                    g$p$19294$1MHp3Q)
                                  (begin
                                    '#f
                                    (display
                                      (integer->char
                                        (+ (char->integer '#\A)
                                           (- g$n$19303$1MHp3Q '10)))
                                      g$p$19294$1MHp3Q)))))))
                   (begin
                     ((letrec ((g$f$19296$1MHp3Q
                                 (case-lambda
                                   ((g$ls$19297$1MHp3Q)
                                    (if (not (null? g$ls$19297$1MHp3Q))
                                      (begin
                                        (display '"/" g$p$19294$1MHp3Q)
                                        (g$for-each$11836$1MHp3Q
                                          (case-lambda
                                            ((g$c$19298$1MHp3Q)
                                             (if ((case-lambda
                                                    ((g$t$19299$1MHp3Q)
                                                     (if g$t$19299$1MHp3Q
                                                       g$t$19299$1MHp3Q
                                                       ((case-lambda
                                                          ((g$t$19300$1MHp3Q)
                                                           (if g$t$19300$1MHp3Q
                                                             g$t$19300$1MHp3Q
                                                             ((case-lambda
                                                                ((g$t$19301$1MHp3Q)
                                                                 (if g$t$19301$1MHp3Q
                                                                   g$t$19301$1MHp3Q
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11828$1MHp3Q
                                                                       g$c$19298$1MHp3Q
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12729$1MHp3Q
                                                                '#\0
                                                                g$c$19298$1MHp3Q
                                                                '#\9)))))
                                                        (g$char<=?$12729$1MHp3Q
                                                          '#\A
                                                          g$c$19298$1MHp3Q
                                                          '#\Z)))))
                                                  (g$char<=?$12729$1MHp3Q
                                                    '#\a
                                                    g$c$19298$1MHp3Q
                                                    '#\z))
                                               (display
                                                 g$c$19298$1MHp3Q
                                                 g$p$19294$1MHp3Q)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$19294$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$n$19302$1MHp3Q)
                                                     (begin
                                                       (g$display-hex$19295$1MHp3Q
                                                         (g$quotient$14088$1MHp3Q
                                                           g$n$19302$1MHp3Q
                                                           '16))
                                                       (g$display-hex$19295$1MHp3Q
                                                         (g$remainder$14089$1MHp3Q
                                                           g$n$19302$1MHp3Q
                                                           '16)))))
                                                  (char->integer
                                                    g$c$19298$1MHp3Q))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$19297$1MHp3Q))))
                                        (g$f$19296$1MHp3Q
                                          (cdr g$ls$19297$1MHp3Q)))
                                      (void))))))
                        g$f$19296$1MHp3Q)
                      g$x$19288$1MHp3Q)
                     (g$extract$19293$1MHp3Q)))))
              g$extract$19292$1MHp3Q
              g$p$19291$1MHp3Q)))))))
   (g$file-locator$19249$1MHp3Q
     g$file-locator$19456$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         ((g$x$19304$1MHp3Q)
          ((case-lambda
             ((g$str$19305$1MHp3Q)
              ((letrec ((g$f$19306$1MHp3Q
                          (case-lambda
                            ((g$ls$19307$1MHp3Q
                               g$exts$19308$1MHp3Q
                               g$failed-list$19309$1MHp3Q)
                             (if (null? g$ls$19307$1MHp3Q)
                               (g$file-locator-resolution-error$18624$1MHp3Q
                                 g$x$19304$1MHp3Q
                                 (g$reverse$12684$1MHp3Q
                                   g$failed-list$19309$1MHp3Q)
                                 ((case-lambda
                                    ((g$ls$19310$1MHp3Q)
                                     (if (null? g$ls$19310$1MHp3Q)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$19310$1MHp3Q))))
                                  (g$external-pending-libraries$19255$1MHp3Q)))
                               (if (null? g$exts$19308$1MHp3Q)
                                 (g$f$19306$1MHp3Q
                                   (cdr g$ls$19307$1MHp3Q)
                                   (g$library-extensions$19247$1MHp3Q)
                                   g$failed-list$19309$1MHp3Q)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$19311$1MHp3Q)
                                       (if (g$file-exists?$12792$1MHp3Q
                                             g$name$19311$1MHp3Q)
                                         g$name$19311$1MHp3Q
                                         (g$f$19306$1MHp3Q
                                           g$ls$19307$1MHp3Q
                                           (cdr g$exts$19308$1MHp3Q)
                                           (cons
                                             g$name$19311$1MHp3Q
                                             g$failed-list$19309$1MHp3Q)))))
                                    (string-append
                                      (car g$ls$19307$1MHp3Q)
                                      g$str$19305$1MHp3Q
                                      (car g$exts$19308$1MHp3Q))))))))))
                 g$f$19306$1MHp3Q)
               (g$library-path$19246$1MHp3Q)
               (g$library-extensions$19247$1MHp3Q)
               '())))
           (g$library-name->file-name$19248$1MHp3Q g$x$19304$1MHp3Q))))
       (case-lambda
         ((g$f$19312$1MHp3Q)
          (if (g$procedure?$12669$1MHp3Q g$f$19312$1MHp3Q)
            g$f$19312$1MHp3Q
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$19312$1MHp3Q))))))
   (g$serialize-all$19250$1MHp3Q
     g$serialize-all$19457$1MHp3Q
     (case-lambda
       ((g$serialize$19313$1MHp3Q g$compile$19314$1MHp3Q)
        (letrec* ((g$library-desc$19315$1MHp3Q
                    (case-lambda
                      ((g$x$19317$1MHp3Q)
                       (list
                         (g$library-id$19215$1MHp3Q g$x$19317$1MHp3Q)
                         (g$library-name$19216$1MHp3Q
                           g$x$19317$1MHp3Q))))))
          (g$for-each$11836$1MHp3Q
            (case-lambda
              ((g$x$19316$1MHp3Q)
               (if (g$library-source-file-name$19228$1MHp3Q
                     g$x$19316$1MHp3Q)
                 (g$serialize$19313$1MHp3Q
                   (g$library-source-file-name$19228$1MHp3Q
                     g$x$19316$1MHp3Q)
                   (list
                     (g$library-id$19215$1MHp3Q g$x$19316$1MHp3Q)
                     (g$library-name$19216$1MHp3Q g$x$19316$1MHp3Q)
                     (g$library-version$19217$1MHp3Q g$x$19316$1MHp3Q)
                     (g$map$11835$1MHp3Q
                       g$library-desc$19315$1MHp3Q
                       (g$library-imp*$19218$1MHp3Q g$x$19316$1MHp3Q))
                     (g$map$11835$1MHp3Q
                       g$library-desc$19315$1MHp3Q
                       (g$library-vis*$19219$1MHp3Q g$x$19316$1MHp3Q))
                     (g$map$11835$1MHp3Q
                       g$library-desc$19315$1MHp3Q
                       (g$library-inv*$19220$1MHp3Q g$x$19316$1MHp3Q))
                     (g$library-subst$19221$1MHp3Q g$x$19316$1MHp3Q)
                     (g$library-env$19222$1MHp3Q g$x$19316$1MHp3Q)
                     (g$compile$19314$1MHp3Q
                       (g$library-visit-code$19225$1MHp3Q
                         g$x$19316$1MHp3Q))
                     (g$compile$19314$1MHp3Q
                       (g$library-invoke-code$19226$1MHp3Q
                         g$x$19316$1MHp3Q))
                     (g$library-visible?$19227$1MHp3Q
                       g$x$19316$1MHp3Q)))
                 (void))))
            ((g$current-library-collection$19207$1MHp3Q)))))))
   (g$current-precompiled-library-loader$19251$1MHp3Q
     g$current-precompiled-library-loader$19458$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda ((g$filename$19318$1MHp3Q g$sk$19319$1MHp3Q) '#f))))
   (g$try-load-from-file$19252$1MHp3Q
     g$try-load-from-file$19459$1MHp3Q
     (case-lambda
       ((g$filename$19320$1MHp3Q)
        ((g$current-precompiled-library-loader$19251$1MHp3Q)
         g$filename$19320$1MHp3Q
         (case-lambda
           ((g$id$19321$1MHp3Q
              g$name$19322$1MHp3Q
              g$ver$19323$1MHp3Q
              g$imp*$19324$1MHp3Q
              g$vis*$19325$1MHp3Q
              g$inv*$19326$1MHp3Q
              g$exp-subst$19327$1MHp3Q
              g$exp-env$19328$1MHp3Q
              g$visit-proc$19329$1MHp3Q
              g$invoke-proc$19330$1MHp3Q
              g$visible?$19331$1MHp3Q)
            ((letrec ((g$f$19332$1MHp3Q
                        (case-lambda
                          ((g$deps$19333$1MHp3Q)
                           (if (null? g$deps$19333$1MHp3Q)
                             (begin
                               (g$install-library$19262$1MHp3Q
                                 g$id$19321$1MHp3Q
                                 g$name$19322$1MHp3Q
                                 g$ver$19323$1MHp3Q
                                 g$imp*$19324$1MHp3Q
                                 g$vis*$19325$1MHp3Q
                                 g$inv*$19326$1MHp3Q
                                 g$exp-subst$19327$1MHp3Q
                                 g$exp-env$19328$1MHp3Q
                                 g$visit-proc$19329$1MHp3Q
                                 g$invoke-proc$19330$1MHp3Q
                                 '#f
                                 '#f
                                 g$visible?$19331$1MHp3Q
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$19334$1MHp3Q)
                                   ((case-lambda
                                      ((g$label$19335$1MHp3Q
                                         g$dname$19336$1MHp3Q)
                                       ((case-lambda
                                          ((g$l$19337$1MHp3Q)
                                           (if (if (g$library?$19213$1MHp3Q
                                                     g$l$19337$1MHp3Q)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$19335$1MHp3Q
                                                        (g$library-id$19215$1MHp3Q
                                                          g$l$19337$1MHp3Q)))
                                                 '#f)
                                             (g$f$19332$1MHp3Q
                                               (cdr g$deps$19333$1MHp3Q))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$18623$1MHp3Q
                                                 g$name$19322$1MHp3Q
                                                 g$dname$19336$1MHp3Q
                                                 g$filename$19320$1MHp3Q)
                                               '#f))))
                                        (g$find-library-by-name$19257$1MHp3Q
                                          g$dname$19336$1MHp3Q))))
                                    (car g$d$19334$1MHp3Q)
                                    (g$cadr$12686$1MHp3Q
                                      g$d$19334$1MHp3Q))))
                                (car g$deps$19333$1MHp3Q))))))))
               g$f$19332$1MHp3Q)
             (append
               g$imp*$19324$1MHp3Q
               g$vis*$19325$1MHp3Q
               g$inv*$19326$1MHp3Q)))
           (g$others$19338$1MHp3Q '#f))))))
   (g$library-loader$19253$1MHp3Q
     g$library-loader$19460$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         ((g$x$19339$1MHp3Q)
          ((case-lambda
             ((g$file-name$19340$1MHp3Q)
              (if (not g$file-name$19340$1MHp3Q)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$19339$1MHp3Q)
                ((case-lambda
                   ((g$t$19341$1MHp3Q)
                    (if g$t$19341$1MHp3Q
                      g$t$19341$1MHp3Q
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$19254$1MHp3Q)
                           (g$read-library-source-file$18625$1MHp3Q
                             g$file-name$19340$1MHp3Q)
                           g$file-name$19340$1MHp3Q
                           (case-lambda
                             ((g$name$19342$1MHp3Q)
                              (if (not (equal?
                                         g$name$19342$1MHp3Q
                                         g$x$19339$1MHp3Q))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$18177$1MHp3Q)))
                                    (case-lambda
                                      ((g$p$19345$1MHp3Q
                                         g$e$19346$1MHp3Q)
                                       ((case-lambda
                                          ((g$e$19347$1MHp3Q
                                             g$p$19348$1MHp3Q)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$19348$1MHp3Q)
                                             (write
                                               g$x$19339$1MHp3Q
                                               g$p$19348$1MHp3Q)
                                             (display
                                               '" in file "
                                               g$p$19348$1MHp3Q)
                                             (display
                                               g$file-name$19340$1MHp3Q
                                               g$p$19348$1MHp3Q)
                                             (display
                                               '", found "
                                               g$p$19348$1MHp3Q)
                                             (write
                                               g$name$19342$1MHp3Q
                                               g$p$19348$1MHp3Q)
                                             (display
                                               '" instead"
                                               g$p$19348$1MHp3Q)
                                             (g$e$19347$1MHp3Q))))
                                        g$e$19346$1MHp3Q
                                        g$p$19345$1MHp3Q)))))
                                (void))))))))))
                 (g$try-load-from-file$19252$1MHp3Q
                   g$file-name$19340$1MHp3Q)))))
           ((g$file-locator$19249$1MHp3Q) g$x$19339$1MHp3Q))))
       (case-lambda
         ((g$f$19349$1MHp3Q)
          (if (g$procedure?$12669$1MHp3Q g$f$19349$1MHp3Q)
            g$f$19349$1MHp3Q
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$19349$1MHp3Q))))))
   (g$current-library-expander$19254$1MHp3Q
     g$current-library-expander$19461$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         ((g$x$19350$1MHp3Q)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$19351$1MHp3Q)
          (if (g$procedure?$12669$1MHp3Q g$f$19351$1MHp3Q)
            g$f$19351$1MHp3Q
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$19351$1MHp3Q))))))
   (g$external-pending-libraries$19255$1MHp3Q
     g$external-pending-libraries$19462$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '()))
   (g$find-external-library$19256$1MHp3Q
     g$find-external-library$19463$1MHp3Q
     (case-lambda
       ((g$name$19352$1MHp3Q)
        (begin
          (if (g$member$11829$1MHp3Q
                g$name$19352$1MHp3Q
                (g$external-pending-libraries$19255$1MHp3Q))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$19352$1MHp3Q)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$19355$1MHp3Q
                g$external-pending-libraries$19356$1MHp3Q)
              ((case-lambda
                 ((g$swap$19357$1MHp3Q)
                  (dynamic-wind
                    g$swap$19357$1MHp3Q
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$19253$1MHp3Q)
                          g$name$19352$1MHp3Q)
                         ((case-lambda
                            ((g$t$19358$1MHp3Q)
                             (if g$t$19358$1MHp3Q
                               g$t$19358$1MHp3Q
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$19352$1MHp3Q)))))
                          (g$find-library-by$19245$1MHp3Q
                            (case-lambda
                              ((g$x$19359$1MHp3Q)
                               (equal?
                                 (g$library-name$19216$1MHp3Q
                                   g$x$19359$1MHp3Q)
                                 g$name$19352$1MHp3Q))))))))
                    g$swap$19357$1MHp3Q)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$19360$1MHp3Q)
                      (begin
                        (g$external-pending-libraries$19355$1MHp3Q
                          g$external-pending-libraries$19356$1MHp3Q)
                        (set! g$external-pending-libraries$19356$1MHp3Q
                          g$t$19360$1MHp3Q))))
                   (g$external-pending-libraries$19355$1MHp3Q)))))))
           g$external-pending-libraries$19255$1MHp3Q
           (cons
             g$name$19352$1MHp3Q
             (g$external-pending-libraries$19255$1MHp3Q)))))))
   (g$find-library-by-name$19257$1MHp3Q
     g$find-library-by-name$19464$1MHp3Q
     (case-lambda
       ((g$name$19361$1MHp3Q)
        ((case-lambda
           ((g$t$19362$1MHp3Q)
            (if g$t$19362$1MHp3Q
              g$t$19362$1MHp3Q
              (begin
                '#f
                (g$find-external-library$19256$1MHp3Q
                  g$name$19361$1MHp3Q)))))
         (g$find-library-by$19245$1MHp3Q
           (case-lambda
             ((g$x$19363$1MHp3Q)
              (equal?
                (g$library-name$19216$1MHp3Q g$x$19363$1MHp3Q)
                g$name$19361$1MHp3Q))))))))
   (g$uninstall-library$19258$1MHp3Q
     g$uninstall-library$19465$1MHp3Q
     (case-lambda
       ((g$name$19364$1MHp3Q g$err?$19365$1MHp3Q)
        (letrec* ((g$who$19366$1MHp3Q 'uninstall-library))
          ((case-lambda
             ((g$lib$19367$1MHp3Q)
              (begin
                (if (if g$err?$19365$1MHp3Q
                      (begin '#f (not g$lib$19367$1MHp3Q))
                      '#f)
                  (assertion-violation
                    g$who$19366$1MHp3Q
                    '"library not installed"
                    g$name$19364$1MHp3Q)
                  (void))
                ((g$current-library-collection$19207$1MHp3Q)
                 g$lib$19367$1MHp3Q
                 '#t)
                (g$for-each$11836$1MHp3Q
                  (case-lambda
                    ((g$x$19368$1MHp3Q)
                     ((case-lambda
                        ((g$label$19369$1MHp3Q g$binding$19370$1MHp3Q)
                         (begin
                           (remove-location g$label$19369$1MHp3Q)
                           (if (g$memq$11827$1MHp3Q
                                 (car g$binding$19370$1MHp3Q)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$19370$1MHp3Q))
                             (void)))))
                      (car g$x$19368$1MHp3Q)
                      (cdr g$x$19368$1MHp3Q))))
                  (g$library-env$19222$1MHp3Q g$lib$19367$1MHp3Q)))))
           (g$find-library-by$19245$1MHp3Q
             (case-lambda
               ((g$x$19371$1MHp3Q)
                (equal?
                  (g$library-name$19216$1MHp3Q g$x$19371$1MHp3Q)
                  g$name$19364$1MHp3Q)))))))
       ((g$name$19372$1MHp3Q)
        (g$uninstall-library$19258$1MHp3Q g$name$19372$1MHp3Q '#t))))
   (g$library-exists?$19259$1MHp3Q
     g$library-exists?$19466$1MHp3Q
     (case-lambda
       ((g$name$19373$1MHp3Q)
        (if (g$find-library-by$19245$1MHp3Q
              (case-lambda
                ((g$x$19374$1MHp3Q)
                 (equal?
                   (g$library-name$19216$1MHp3Q g$x$19374$1MHp3Q)
                   g$name$19373$1MHp3Q))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$19260$1MHp3Q
     g$find-library-by-spec/die$19467$1MHp3Q
     (case-lambda
       ((g$spec$19375$1MHp3Q)
        ((case-lambda
           ((g$id$19376$1MHp3Q)
            ((case-lambda
               ((g$t$19377$1MHp3Q)
                (if g$t$19377$1MHp3Q
                  g$t$19377$1MHp3Q
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$19375$1MHp3Q)))))
             (g$find-library-by$19245$1MHp3Q
               (case-lambda
                 ((g$x$19378$1MHp3Q)
                  (eq? g$id$19376$1MHp3Q
                       (g$library-id$19215$1MHp3Q
                         g$x$19378$1MHp3Q))))))))
         (car g$spec$19375$1MHp3Q)))))
   (g$install-library-record$19261$1MHp3Q
     g$install-library-record$19468$1MHp3Q
     (case-lambda
       ((g$lib$19379$1MHp3Q)
        (begin
          ((case-lambda
             ((g$exp-env$19380$1MHp3Q)
              (g$for-each$11836$1MHp3Q
                (case-lambda
                  ((g$x$19381$1MHp3Q)
                   ((case-lambda
                      ((g$label$19382$1MHp3Q g$binding$19383$1MHp3Q)
                       ((case-lambda
                          ((g$binding$19384$1MHp3Q)
                           (g$set-label-binding!$18629$1MHp3Q
                             g$label$19382$1MHp3Q
                             g$binding$19384$1MHp3Q)))
                        ((case-lambda
                           ((g$t$19385$1MHp3Q)
                            (if (eqv? g$t$19385$1MHp3Q 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$19379$1MHp3Q
                                  (cdr g$binding$19383$1MHp3Q)))
                              (if (eqv? g$t$19385$1MHp3Q 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$19379$1MHp3Q
                                    (cdr g$binding$19383$1MHp3Q)))
                                (if (eqv?
                                      g$t$19385$1MHp3Q
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$19379$1MHp3Q
                                      (cdr g$binding$19383$1MHp3Q)))
                                  (if (eqv?
                                        g$t$19385$1MHp3Q
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$19379$1MHp3Q
                                        (cdr g$binding$19383$1MHp3Q)))
                                    (begin
                                      '#f
                                      g$binding$19383$1MHp3Q)))))))
                         (car g$binding$19383$1MHp3Q)))))
                    (car g$x$19381$1MHp3Q)
                    (cdr g$x$19381$1MHp3Q))))
                g$exp-env$19380$1MHp3Q)))
           (g$library-env$19222$1MHp3Q g$lib$19379$1MHp3Q))
          ((g$current-library-collection$19207$1MHp3Q)
           g$lib$19379$1MHp3Q)))))
   (g$install-library$19262$1MHp3Q
     g$install-library$19469$1MHp3Q
     (case-lambda
       ((g$id$19386$1MHp3Q
          g$name$19387$1MHp3Q
          g$ver$19388$1MHp3Q
          g$imp*$19389$1MHp3Q
          g$vis*$19390$1MHp3Q
          g$inv*$19391$1MHp3Q
          g$exp-subst$19392$1MHp3Q
          g$exp-env$19393$1MHp3Q
          g$visit-proc$19394$1MHp3Q
          g$invoke-proc$19395$1MHp3Q
          g$visit-code$19396$1MHp3Q
          g$invoke-code$19397$1MHp3Q
          g$visible?$19398$1MHp3Q
          g$source-file-name$19399$1MHp3Q)
        ((case-lambda
           ((g$imp-lib*$19400$1MHp3Q
              g$vis-lib*$19401$1MHp3Q
              g$inv-lib*$19402$1MHp3Q)
            (begin
              (if (not (if (g$symbol?$12667$1MHp3Q g$id$19386$1MHp3Q)
                         (if (list? g$name$19387$1MHp3Q)
                           (begin '#f (list? g$ver$19388$1MHp3Q))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$19386$1MHp3Q
                  g$name$19387$1MHp3Q
                  g$ver$19388$1MHp3Q)
                (void))
              (if (g$library-exists?$19259$1MHp3Q g$name$19387$1MHp3Q)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$19387$1MHp3Q)
                (void))
              ((case-lambda
                 ((g$lib$19403$1MHp3Q)
                  (g$install-library-record$19261$1MHp3Q
                    g$lib$19403$1MHp3Q)))
               (g$make-library$19214$1MHp3Q
                 g$id$19386$1MHp3Q
                 g$name$19387$1MHp3Q
                 g$ver$19388$1MHp3Q
                 g$imp-lib*$19400$1MHp3Q
                 g$vis-lib*$19401$1MHp3Q
                 g$inv-lib*$19402$1MHp3Q
                 g$exp-subst$19392$1MHp3Q
                 g$exp-env$19393$1MHp3Q
                 g$visit-proc$19394$1MHp3Q
                 g$invoke-proc$19395$1MHp3Q
                 g$visit-code$19396$1MHp3Q
                 g$invoke-code$19397$1MHp3Q
                 g$visible?$19398$1MHp3Q
                 g$source-file-name$19399$1MHp3Q)))))
         (g$map$11835$1MHp3Q
           g$find-library-by-spec/die$19260$1MHp3Q
           g$imp*$19389$1MHp3Q)
         (g$map$11835$1MHp3Q
           g$find-library-by-spec/die$19260$1MHp3Q
           g$vis*$19390$1MHp3Q)
         (g$map$11835$1MHp3Q
           g$find-library-by-spec/die$19260$1MHp3Q
           g$inv*$19391$1MHp3Q)))))
   (g$imported-label->binding$19263$1MHp3Q
     g$imported-label->binding$19470$1MHp3Q
     (case-lambda
       ((g$lab$19404$1MHp3Q)
        (g$label-binding$18630$1MHp3Q g$lab$19404$1MHp3Q))))
   (g$invoke-library$19264$1MHp3Q
     g$invoke-library$19471$1MHp3Q
     (case-lambda
       ((g$lib$19405$1MHp3Q)
        ((case-lambda
           ((g$invoke$19406$1MHp3Q)
            (if (g$procedure?$12669$1MHp3Q g$invoke$19406$1MHp3Q)
              (begin
                (g$set-library-invoke-state!$19238$1MHp3Q
                  g$lib$19405$1MHp3Q
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$19405$1MHp3Q))))
                (g$for-each$11836$1MHp3Q
                  g$invoke-library$19264$1MHp3Q
                  (g$library-inv*$19220$1MHp3Q g$lib$19405$1MHp3Q))
                (g$set-library-invoke-state!$19238$1MHp3Q
                  g$lib$19405$1MHp3Q
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$19405$1MHp3Q))))
                (g$invoke$19406$1MHp3Q)
                (g$set-library-invoke-state!$19238$1MHp3Q
                  g$lib$19405$1MHp3Q
                  '#t))
              (void))))
         (g$library-invoke-state$19224$1MHp3Q g$lib$19405$1MHp3Q)))))
   (g$visit-library$19265$1MHp3Q
     g$visit-library$19472$1MHp3Q
     (case-lambda
       ((g$lib$19407$1MHp3Q)
        ((case-lambda
           ((g$visit$19408$1MHp3Q)
            (if (g$procedure?$12669$1MHp3Q g$visit$19408$1MHp3Q)
              (begin
                (g$set-library-visit-state!$19237$1MHp3Q
                  g$lib$19407$1MHp3Q
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$19407$1MHp3Q))))
                (g$for-each$11836$1MHp3Q
                  g$invoke-library$19264$1MHp3Q
                  (g$library-vis*$19219$1MHp3Q g$lib$19407$1MHp3Q))
                (g$set-library-visit-state!$19237$1MHp3Q
                  g$lib$19407$1MHp3Q
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$19407$1MHp3Q))))
                (g$visit$19408$1MHp3Q)
                (g$set-library-visit-state!$19237$1MHp3Q
                  g$lib$19407$1MHp3Q
                  '#t))
              (void))))
         (g$library-visit-state$19223$1MHp3Q g$lib$19407$1MHp3Q)))))
   (g$invoke-library-by-spec$19266$1MHp3Q
     g$invoke-library-by-spec$19473$1MHp3Q
     (case-lambda
       ((g$spec$19409$1MHp3Q)
        (g$invoke-library$19264$1MHp3Q
          (g$find-library-by-spec/die$19260$1MHp3Q
            g$spec$19409$1MHp3Q)))))
   (g$installed-libraries$19267$1MHp3Q
     g$installed-libraries$19474$1MHp3Q
     (case-lambda
       ((g$all?$19410$1MHp3Q)
        ((letrec ((g$f$19411$1MHp3Q
                    (case-lambda
                      ((g$ls$19412$1MHp3Q)
                       (if (null? g$ls$19412$1MHp3Q)
                         '()
                         (if ((case-lambda
                                ((g$t$19413$1MHp3Q)
                                 (if g$t$19413$1MHp3Q
                                   g$t$19413$1MHp3Q
                                   (begin
                                     '#f
                                     (g$library-visible?$19227$1MHp3Q
                                       (car g$ls$19412$1MHp3Q))))))
                              g$all?$19410$1MHp3Q)
                           (cons
                             (g$library-name$19216$1MHp3Q
                               (car g$ls$19412$1MHp3Q))
                             (g$f$19411$1MHp3Q (cdr g$ls$19412$1MHp3Q)))
                           (begin
                             '#f
                             (g$f$19411$1MHp3Q
                               (cdr g$ls$19412$1MHp3Q)))))))))
           g$f$19411$1MHp3Q)
         ((g$current-library-collection$19207$1MHp3Q))))
       (() (g$installed-libraries$19267$1MHp3Q '#f))))
   (g$library-spec$19268$1MHp3Q
     g$library-spec$19475$1MHp3Q
     (case-lambda
       ((g$x$19414$1MHp3Q)
        (begin
          (if (not (g$library?$19213$1MHp3Q g$x$19414$1MHp3Q))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$19414$1MHp3Q)
            (void))
          (list
            (g$library-id$19215$1MHp3Q g$x$19414$1MHp3Q)
            (g$library-name$19216$1MHp3Q g$x$19414$1MHp3Q)
            (g$library-version$19217$1MHp3Q g$x$19414$1MHp3Q)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$19476$1MHp3Q
     g$build-global-define$19686$1MHp3Q
     (case-lambda ((g$x$19657$1MHp3Q) (g$build-void$19653$1MHp3Q))))
   (g$build-lambda$19587$1MHp3Q
     g$build-lambda$19687$1MHp3Q
     (case-lambda
       ((g$ae$19658$1MHp3Q g$vars$19659$1MHp3Q g$exp$19660$1MHp3Q)
        (list
          'case-lambda
          (list g$vars$19659$1MHp3Q g$exp$19660$1MHp3Q)))))
   (g$build-case-lambda$19588$1MHp3Q
     g$build-case-lambda$19688$1MHp3Q
     (case-lambda
       ((g$ae$19661$1MHp3Q g$vars*$19662$1MHp3Q g$exp*$19663$1MHp3Q)
        (cons
          'case-lambda
          (g$map$11835$1MHp3Q
            list
            g$vars*$19662$1MHp3Q
            g$exp*$19663$1MHp3Q)))))
   (g$build-let$19589$1MHp3Q
     g$build-let$19689$1MHp3Q
     (case-lambda
       ((g$ae$19664$1MHp3Q
          g$lhs*$19665$1MHp3Q
          g$rhs*$19666$1MHp3Q
          g$body$19667$1MHp3Q)
        (cons
          (g$build-lambda$19587$1MHp3Q
            g$ae$19664$1MHp3Q
            g$lhs*$19665$1MHp3Q
            g$body$19667$1MHp3Q)
          g$rhs*$19666$1MHp3Q))))
   (g$build-sequence$19652$1MHp3Q
     g$build-sequence$19690$1MHp3Q
     (case-lambda
       ((g$ae$19668$1MHp3Q g$exps$19669$1MHp3Q)
        ((letrec ((g$loop$19670$1MHp3Q
                    (case-lambda
                      ((g$exps$19671$1MHp3Q)
                       (if (null? (cdr g$exps$19671$1MHp3Q))
                         (car g$exps$19671$1MHp3Q)
                         (if (equal?
                               (car g$exps$19671$1MHp3Q)
                               (g$build-void$19653$1MHp3Q))
                           (g$loop$19670$1MHp3Q
                             (cdr g$exps$19671$1MHp3Q))
                           (cons 'begin g$exps$19671$1MHp3Q)))))))
           g$loop$19670$1MHp3Q)
         g$exps$19669$1MHp3Q))))
   (g$build-void$19653$1MHp3Q
     g$build-void$19691$1MHp3Q
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$19654$1MHp3Q
     g$build-letrec$19692$1MHp3Q
     (case-lambda
       ((g$ae$19672$1MHp3Q
          g$vars$19673$1MHp3Q
          g$val-exps$19674$1MHp3Q
          g$body-exp$19675$1MHp3Q)
        (if (null? g$vars$19673$1MHp3Q)
          g$body-exp$19675$1MHp3Q
          (list
            'letrec
            (g$map$11835$1MHp3Q
              list
              g$vars$19673$1MHp3Q
              g$val-exps$19674$1MHp3Q)
            g$body-exp$19675$1MHp3Q)))))
   (g$build-letrec*$19655$1MHp3Q
     g$build-letrec*$19693$1MHp3Q
     (case-lambda
       ((g$ae$19676$1MHp3Q
          g$vars$19677$1MHp3Q
          g$val-exps$19678$1MHp3Q
          g$body-exp$19679$1MHp3Q)
        (if (null? g$vars$19677$1MHp3Q)
          g$body-exp$19679$1MHp3Q
          (begin
            '#f
            (list
              'letrec*
              (g$map$11835$1MHp3Q
                list
                g$vars$19677$1MHp3Q
                g$val-exps$19678$1MHp3Q)
              g$body-exp$19679$1MHp3Q))))))
   (g$build-library-letrec*$19656$1MHp3Q
     g$build-library-letrec*$19694$1MHp3Q
     (case-lambda
       ((g$ae$19680$1MHp3Q
          g$name$19681$1MHp3Q
          g$vars$19682$1MHp3Q
          g$locs$19683$1MHp3Q
          g$val-exps$19684$1MHp3Q
          g$body-exp$19685$1MHp3Q)
        (list
          'library-letrec*
          g$name$19681$1MHp3Q
          (g$map$11835$1MHp3Q
            list
            g$vars$19682$1MHp3Q
            g$locs$19683$1MHp3Q
            g$val-exps$19684$1MHp3Q)
          g$body-exp$19685$1MHp3Q)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$19695$1MHp3Q
     g$set-cons$23707$1MHp3Q
     (case-lambda
       ((g$x$20391$1MHp3Q g$ls$20392$1MHp3Q)
        (if (g$memq$11827$1MHp3Q g$x$20391$1MHp3Q g$ls$20392$1MHp3Q)
          g$ls$20392$1MHp3Q
          (begin '#f (cons g$x$20391$1MHp3Q g$ls$20392$1MHp3Q))))))
   (g$set-union$19696$1MHp3Q
     g$set-union$23708$1MHp3Q
     (case-lambda
       ((g$ls1$20393$1MHp3Q g$ls2$20394$1MHp3Q)
        (if (null? g$ls1$20393$1MHp3Q)
          g$ls2$20394$1MHp3Q
          (if (g$memq$11827$1MHp3Q
                (car g$ls1$20393$1MHp3Q)
                g$ls2$20394$1MHp3Q)
            (g$set-union$19696$1MHp3Q
              (cdr g$ls1$20393$1MHp3Q)
              g$ls2$20394$1MHp3Q)
            (begin
              '#f
              (cons
                (car g$ls1$20393$1MHp3Q)
                (g$set-union$19696$1MHp3Q
                  (cdr g$ls1$20393$1MHp3Q)
                  g$ls2$20394$1MHp3Q))))))))
   (g$top-mark*$19698$1MHp3Q g$top-mark*$23709$1MHp3Q '(top))
   (g$top-marked?$19699$1MHp3Q
     g$top-marked?$23710$1MHp3Q
     (case-lambda
       ((g$m*$20395$1MHp3Q)
        (g$memq$11827$1MHp3Q 'top g$m*$20395$1MHp3Q))))
   (g$gen-lexical$19700$1MHp3Q
     g$gen-lexical$23711$1MHp3Q
     (case-lambda
       ((g$sym$20396$1MHp3Q)
        (if (g$symbol?$12667$1MHp3Q g$sym$20396$1MHp3Q)
          (gensym g$sym$20396$1MHp3Q)
          (if (g$stx?$19737$1MHp3Q g$sym$20396$1MHp3Q)
            (g$gen-lexical$19700$1MHp3Q
              (g$id->sym$19766$1MHp3Q g$sym$20396$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$20396$1MHp3Q)))))))
   (g$gen-global$19701$1MHp3Q
     g$gen-global$23712$1MHp3Q
     (case-lambda
       ((g$x$20397$1MHp3Q)
        (g$gen-lexical$19700$1MHp3Q g$x$20397$1MHp3Q))))
   (g$gen-label$19702$1MHp3Q
     g$gen-label$23713$1MHp3Q
     (case-lambda ((g$_$20398$1MHp3Q) (gensym))))
   (g$gen-top-level-label$19703$1MHp3Q
     g$gen-top-level-label$23714$1MHp3Q
     (case-lambda
       ((g$id$20399$1MHp3Q g$rib$20400$1MHp3Q)
        (letrec* ((g$find$20401$1MHp3Q
                    (case-lambda
                      ((g$sym$20407$1MHp3Q
                         g$mark*$20408$1MHp3Q
                         g$sym*$20409$1MHp3Q
                         g$mark**$20410$1MHp3Q
                         g$label*$20411$1MHp3Q)
                       (if (pair? g$sym*$20409$1MHp3Q)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20407$1MHp3Q
                                        (car g$sym*$20409$1MHp3Q))
                                 (begin
                                   '#f
                                   (g$same-marks?$19767$1MHp3Q
                                     g$mark*$20408$1MHp3Q
                                     (car g$mark**$20410$1MHp3Q)))
                                 '#f)
                             (car g$label*$20411$1MHp3Q)
                             (g$find$20401$1MHp3Q
                               g$sym$20407$1MHp3Q
                               g$mark*$20408$1MHp3Q
                               (cdr g$sym*$20409$1MHp3Q)
                               (cdr g$mark**$20410$1MHp3Q)
                               (cdr g$label*$20411$1MHp3Q))))
                         '#f)))))
          ((case-lambda
             ((g$sym$20402$1MHp3Q g$mark*$20403$1MHp3Q)
              ((case-lambda
                 ((g$sym*$20404$1MHp3Q)
                  ((case-lambda
                     ((g$t$20405$1MHp3Q)
                      (if g$t$20405$1MHp3Q
                        ((case-lambda
                           ((g$label$20406$1MHp3Q)
                            (if (g$imported-label->binding$19470$1MHp3Q
                                  g$label$20406$1MHp3Q)
                              (gensym)
                              (begin '#f g$label$20406$1MHp3Q))))
                         g$t$20405$1MHp3Q)
                        (begin '#f (gensym)))))
                   (if (g$memq$11827$1MHp3Q
                         g$sym$20402$1MHp3Q
                         (g$rib-sym*$19713$1MHp3Q g$rib$20400$1MHp3Q))
                     (begin
                       '#f
                       (g$find$20401$1MHp3Q
                         g$sym$20402$1MHp3Q
                         g$mark*$20403$1MHp3Q
                         g$sym*$20404$1MHp3Q
                         (g$rib-mark**$19714$1MHp3Q g$rib$20400$1MHp3Q)
                         (g$rib-label*$19715$1MHp3Q
                           g$rib$20400$1MHp3Q)))
                     '#f))))
               (g$rib-sym*$19713$1MHp3Q g$rib$20400$1MHp3Q))))
           (g$id->sym$19766$1MHp3Q g$id$20399$1MHp3Q)
           (g$stx-mark*$19740$1MHp3Q g$id$20399$1MHp3Q))))))
   (g$gen-define-label+loc$19704$1MHp3Q
     g$gen-define-label+loc$23715$1MHp3Q
     (case-lambda
       ((g$id$20412$1MHp3Q g$rib$20413$1MHp3Q g$sd?$20414$1MHp3Q)
        (if g$sd?$20414$1MHp3Q
          (values
            (gensym)
            (g$gen-lexical$19700$1MHp3Q g$id$20412$1MHp3Q))
          ((case-lambda
             ((g$env$20415$1MHp3Q)
              ((case-lambda
                 ((g$label$20416$1MHp3Q g$locs$20417$1MHp3Q)
                  (values
                    g$label$20416$1MHp3Q
                    ((case-lambda
                       ((g$t$20418$1MHp3Q)
                        (if g$t$20418$1MHp3Q
                          (cdr g$t$20418$1MHp3Q)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$20419$1MHp3Q)
                                (begin
                                  (g$set-interaction-env-locs!$20353$1MHp3Q
                                    g$env$20415$1MHp3Q
                                    (cons
                                      (cons
                                        g$label$20416$1MHp3Q
                                        g$loc$20419$1MHp3Q)
                                      g$locs$20417$1MHp3Q))
                                  g$loc$20419$1MHp3Q)))
                             (g$gen-lexical$19700$1MHp3Q
                               g$id$20412$1MHp3Q))))))
                     (g$assq$11823$1MHp3Q
                       g$label$20416$1MHp3Q
                       g$locs$20417$1MHp3Q)))))
               (g$gen-top-level-label$19703$1MHp3Q
                 g$id$20412$1MHp3Q
                 g$rib$20413$1MHp3Q)
               (g$interaction-env-locs$20350$1MHp3Q
                 g$env$20415$1MHp3Q))))
           (g$top-level-context$20390$1MHp3Q))))))
   (g$gen-define-label$19705$1MHp3Q
     g$gen-define-label$23716$1MHp3Q
     (case-lambda
       ((g$id$20420$1MHp3Q g$rib$20421$1MHp3Q g$sd?$20422$1MHp3Q)
        (if g$sd?$20422$1MHp3Q
          (gensym)
          (g$gen-top-level-label$19703$1MHp3Q
            g$id$20420$1MHp3Q
            g$rib$20421$1MHp3Q)))))
   (g$9543$19706$1MHp3Q
     g$9543$23717$1MHp3Q
     (make-record-type-descriptor
       'rib
       '#f
       'g$9546$1MHp3Q
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9545$19707$1MHp3Q g$9545$23718$1MHp3Q '#f)
   (g$9544$19708$1MHp3Q
     g$9544$23719$1MHp3Q
     (make-record-constructor-descriptor
       g$9543$19706$1MHp3Q
       '#f
       g$9545$19707$1MHp3Q))
   (g$rib?$19711$1MHp3Q
     g$rib?$23720$1MHp3Q
     (record-predicate g$9543$19706$1MHp3Q))
   (g$make-rib$19712$1MHp3Q
     g$make-rib$23721$1MHp3Q
     (record-constructor g$9544$19708$1MHp3Q))
   (g$rib-sym*$19713$1MHp3Q
     g$rib-sym*$23722$1MHp3Q
     (record-accessor g$9543$19706$1MHp3Q '0))
   (g$rib-mark**$19714$1MHp3Q
     g$rib-mark**$23723$1MHp3Q
     (record-accessor g$9543$19706$1MHp3Q '1))
   (g$rib-label*$19715$1MHp3Q
     g$rib-label*$23724$1MHp3Q
     (record-accessor g$9543$19706$1MHp3Q '2))
   (g$rib-sealed/freq$19716$1MHp3Q
     g$rib-sealed/freq$23725$1MHp3Q
     (record-accessor g$9543$19706$1MHp3Q '3))
   (g$rib-cache$19717$1MHp3Q
     g$rib-cache$23726$1MHp3Q
     (record-accessor g$9543$19706$1MHp3Q '4))
   (g$set-rib-sym*!$19718$1MHp3Q
     g$set-rib-sym*!$23727$1MHp3Q
     (record-mutator g$9543$19706$1MHp3Q '0))
   (g$set-rib-mark**!$19719$1MHp3Q
     g$set-rib-mark**!$23728$1MHp3Q
     (record-mutator g$9543$19706$1MHp3Q '1))
   (g$set-rib-label*!$19720$1MHp3Q
     g$set-rib-label*!$23729$1MHp3Q
     (record-mutator g$9543$19706$1MHp3Q '2))
   (g$set-rib-sealed/freq!$19721$1MHp3Q
     g$set-rib-sealed/freq!$23730$1MHp3Q
     (record-mutator g$9543$19706$1MHp3Q '3))
   (g$set-rib-cache!$19722$1MHp3Q
     g$set-rib-cache!$23731$1MHp3Q
     (record-mutator g$9543$19706$1MHp3Q '4))
   (g$make-empty-rib$19723$1MHp3Q
     g$make-empty-rib$23732$1MHp3Q
     (case-lambda (() (g$make-rib$19712$1MHp3Q '() '() '() '#f '#f))))
   (g$make-cache-rib$19724$1MHp3Q
     g$make-cache-rib$23733$1MHp3Q
     (case-lambda
       (()
        (g$make-rib$19712$1MHp3Q
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12774$1MHp3Q)))))
   (g$find-label$19725$1MHp3Q
     g$find-label$23734$1MHp3Q
     (case-lambda
       ((g$rib$20423$1MHp3Q g$sym$20424$1MHp3Q g$mark*$20425$1MHp3Q)
        ((case-lambda
           ((g$ht$20426$1MHp3Q)
            (if g$ht$20426$1MHp3Q
              (begin
                '#f
                ((case-lambda
                   ((g$cv$20427$1MHp3Q)
                    ((case-lambda
                       ((g$t$20428$1MHp3Q)
                        (if g$t$20428$1MHp3Q
                          (cdr g$t$20428$1MHp3Q)
                          (begin '#f '#f))))
                     (if g$cv$20427$1MHp3Q
                       (begin
                         '#f
                         (g$assp$11826$1MHp3Q
                           (case-lambda
                             ((g$m$20429$1MHp3Q)
                              (g$same-marks?$19767$1MHp3Q
                                g$mark*$20425$1MHp3Q
                                g$m$20429$1MHp3Q)))
                           g$cv$20427$1MHp3Q))
                       '#f))))
                 (g$hashtable-ref$12777$1MHp3Q
                   g$ht$20426$1MHp3Q
                   g$sym$20424$1MHp3Q
                   '#f)))
              '#f)))
         (g$rib-cache$19717$1MHp3Q g$rib$20423$1MHp3Q)))))
   (g$extend-rib!$19726$1MHp3Q
     g$extend-rib!$23735$1MHp3Q
     (case-lambda
       ((g$rib$20430$1MHp3Q
          g$id$20431$1MHp3Q
          g$label$20432$1MHp3Q
          g$sd?$20433$1MHp3Q)
        (letrec* ((g$find$20434$1MHp3Q
                    (case-lambda
                      ((g$sym$20443$1MHp3Q
                         g$mark*$20444$1MHp3Q
                         g$sym*$20445$1MHp3Q
                         g$mark**$20446$1MHp3Q
                         g$label*$20447$1MHp3Q)
                       (if (pair? g$sym*$20445$1MHp3Q)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20443$1MHp3Q
                                        (car g$sym*$20445$1MHp3Q))
                                 (begin
                                   '#f
                                   (g$same-marks?$19767$1MHp3Q
                                     g$mark*$20444$1MHp3Q
                                     (car g$mark**$20446$1MHp3Q)))
                                 '#f)
                             g$label*$20447$1MHp3Q
                             (g$find$20434$1MHp3Q
                               g$sym$20443$1MHp3Q
                               g$mark*$20444$1MHp3Q
                               (cdr g$sym*$20445$1MHp3Q)
                               (cdr g$mark**$20446$1MHp3Q)
                               (cdr g$label*$20447$1MHp3Q))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$19716$1MHp3Q g$rib$20430$1MHp3Q)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$20430$1MHp3Q)
              (void))
            ((case-lambda
               ((g$sym$20435$1MHp3Q g$mark*$20436$1MHp3Q)
                ((case-lambda
                   ((g$sym*$20437$1MHp3Q)
                    ((case-lambda
                       ((g$t$20438$1MHp3Q)
                        (if g$t$20438$1MHp3Q
                          ((case-lambda
                             ((g$p$20439$1MHp3Q)
                              (if (not (eq? g$label$20432$1MHp3Q
                                            g$p$20439$1MHp3Q))
                                (g$syntax-violation$20382$1MHp3Q
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$20431$1MHp3Q)
                                (void))))
                           g$t$20438$1MHp3Q)
                          ((case-lambda
                             ((g$t$20440$1MHp3Q)
                              (if g$t$20440$1MHp3Q
                                ((case-lambda
                                   ((g$p$20441$1MHp3Q)
                                    (if (not (eq? g$label$20432$1MHp3Q
                                                  (car g$p$20441$1MHp3Q)))
                                      (if (not g$sd?$20433$1MHp3Q)
                                        (set-car!
                                          g$p$20441$1MHp3Q
                                          g$label$20432$1MHp3Q)
                                        (begin
                                          '#f
                                          (g$syntax-violation$20382$1MHp3Q
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$20431$1MHp3Q)))
                                      (void))))
                                 g$t$20440$1MHp3Q)
                                (begin
                                  '#f
                                  (if (g$rib-cache$19717$1MHp3Q
                                        g$rib$20430$1MHp3Q)
                                    (g$hashtable-update!$12781$1MHp3Q
                                      (g$rib-cache$19717$1MHp3Q
                                        g$rib$20430$1MHp3Q)
                                      g$sym$20435$1MHp3Q
                                      (case-lambda
                                        ((g$e$20442$1MHp3Q)
                                         (cons
                                           (cons
                                             g$mark*$20436$1MHp3Q
                                             g$label$20432$1MHp3Q)
                                           g$e$20442$1MHp3Q)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$19718$1MHp3Q
                                    g$rib$20430$1MHp3Q
                                    (cons
                                      g$sym$20435$1MHp3Q
                                      g$sym*$20437$1MHp3Q))
                                  (g$set-rib-mark**!$19719$1MHp3Q
                                    g$rib$20430$1MHp3Q
                                    (cons
                                      g$mark*$20436$1MHp3Q
                                      (g$rib-mark**$19714$1MHp3Q
                                        g$rib$20430$1MHp3Q)))
                                  (g$set-rib-label*!$19720$1MHp3Q
                                    g$rib$20430$1MHp3Q
                                    (cons
                                      g$label$20432$1MHp3Q
                                      (g$rib-label*$19715$1MHp3Q
                                        g$rib$20430$1MHp3Q)))))))
                           (if (g$memq$11827$1MHp3Q
                                 g$sym$20435$1MHp3Q
                                 (g$rib-sym*$19713$1MHp3Q
                                   g$rib$20430$1MHp3Q))
                             (begin
                               '#f
                               (g$find$20434$1MHp3Q
                                 g$sym$20435$1MHp3Q
                                 g$mark*$20436$1MHp3Q
                                 g$sym*$20437$1MHp3Q
                                 (g$rib-mark**$19714$1MHp3Q
                                   g$rib$20430$1MHp3Q)
                                 (g$rib-label*$19715$1MHp3Q
                                   g$rib$20430$1MHp3Q)))
                             '#f)))))
                     (g$find-label$19725$1MHp3Q
                       g$rib$20430$1MHp3Q
                       g$sym$20435$1MHp3Q
                       g$mark*$20436$1MHp3Q))))
                 (g$rib-sym*$19713$1MHp3Q g$rib$20430$1MHp3Q))))
             (g$id->sym$19766$1MHp3Q g$id$20431$1MHp3Q)
             (g$stx-mark*$19740$1MHp3Q g$id$20431$1MHp3Q)))))))
   (g$extend-rib/nc!$19727$1MHp3Q
     g$extend-rib/nc!$23736$1MHp3Q
     (case-lambda
       ((g$rib$20448$1MHp3Q g$id$20449$1MHp3Q g$label$20450$1MHp3Q)
        ((case-lambda
           ((g$sym$20451$1MHp3Q g$mark*$20452$1MHp3Q)
            ((case-lambda
               ((g$sym*$20453$1MHp3Q)
                (begin
                  (if (g$rib-cache$19717$1MHp3Q g$rib$20448$1MHp3Q)
                    (g$hashtable-update!$12781$1MHp3Q
                      (g$rib-cache$19717$1MHp3Q g$rib$20448$1MHp3Q)
                      g$sym$20451$1MHp3Q
                      (case-lambda
                        ((g$e$20454$1MHp3Q)
                         (cons
                           (cons
                             g$mark*$20452$1MHp3Q
                             g$label$20450$1MHp3Q)
                           g$e$20454$1MHp3Q)))
                      '())
                    (void))
                  (g$set-rib-sym*!$19718$1MHp3Q
                    g$rib$20448$1MHp3Q
                    (cons g$sym$20451$1MHp3Q g$sym*$20453$1MHp3Q))
                  (g$set-rib-mark**!$19719$1MHp3Q
                    g$rib$20448$1MHp3Q
                    (cons
                      g$mark*$20452$1MHp3Q
                      (g$rib-mark**$19714$1MHp3Q g$rib$20448$1MHp3Q)))
                  (g$set-rib-label*!$19720$1MHp3Q
                    g$rib$20448$1MHp3Q
                    (cons
                      g$label$20450$1MHp3Q
                      (g$rib-label*$19715$1MHp3Q
                        g$rib$20448$1MHp3Q))))))
             (g$rib-sym*$19713$1MHp3Q g$rib$20448$1MHp3Q))))
         (g$id->sym$19766$1MHp3Q g$id$20449$1MHp3Q)
         (g$stx-mark*$19740$1MHp3Q g$id$20449$1MHp3Q)))))
   (g$make-rib-map$19728$1MHp3Q
     g$make-rib-map$23737$1MHp3Q
     (case-lambda
       ((g$sym*$20455$1MHp3Q)
        ((case-lambda
           ((g$ht$20456$1MHp3Q)
            ((letrec ((g$f$20457$1MHp3Q
                        (case-lambda
                          ((g$i$20458$1MHp3Q g$sym*$20459$1MHp3Q)
                           (if (null? g$sym*$20459$1MHp3Q)
                             g$ht$20456$1MHp3Q
                             (begin
                               (g$hashtable-update!$12781$1MHp3Q
                                 g$ht$20456$1MHp3Q
                                 (car g$sym*$20459$1MHp3Q)
                                 (case-lambda
                                   ((g$x$20460$1MHp3Q)
                                    (cons
                                      g$i$20458$1MHp3Q
                                      g$x$20460$1MHp3Q)))
                                 '())
                               (g$f$20457$1MHp3Q
                                 (+ g$i$20458$1MHp3Q '1)
                                 (cdr g$sym*$20459$1MHp3Q))))))))
               g$f$20457$1MHp3Q)
             '0
             g$sym*$20455$1MHp3Q)))
         (g$make-eq-hashtable$12774$1MHp3Q)))))
   (g$seal-rib!$19729$1MHp3Q
     g$seal-rib!$23738$1MHp3Q
     (case-lambda
       ((g$rib$20461$1MHp3Q)
        ((case-lambda
           ((g$sym*$20462$1MHp3Q)
            (if (not (null? g$sym*$20462$1MHp3Q))
              (begin
                (g$set-rib-sym*!$19718$1MHp3Q
                  g$rib$20461$1MHp3Q
                  (g$list->vector$12678$1MHp3Q g$sym*$20462$1MHp3Q))
                (g$set-rib-mark**!$19719$1MHp3Q
                  g$rib$20461$1MHp3Q
                  (g$list->vector$12678$1MHp3Q
                    (g$rib-mark**$19714$1MHp3Q g$rib$20461$1MHp3Q)))
                (g$set-rib-label*!$19720$1MHp3Q
                  g$rib$20461$1MHp3Q
                  (g$list->vector$12678$1MHp3Q
                    (g$rib-label*$19715$1MHp3Q g$rib$20461$1MHp3Q)))
                (g$set-rib-sealed/freq!$19721$1MHp3Q
                  g$rib$20461$1MHp3Q
                  (g$make-rib-map$19728$1MHp3Q g$sym*$20462$1MHp3Q)))
              (void))))
         (g$rib-sym*$19713$1MHp3Q g$rib$20461$1MHp3Q)))))
   (g$unseal-rib!$19730$1MHp3Q
     g$unseal-rib!$23739$1MHp3Q
     (case-lambda
       ((g$rib$20463$1MHp3Q)
        (if (g$rib-sealed/freq$19716$1MHp3Q g$rib$20463$1MHp3Q)
          (begin
            (g$set-rib-sealed/freq!$19721$1MHp3Q g$rib$20463$1MHp3Q '#f)
            (g$set-rib-sym*!$19718$1MHp3Q
              g$rib$20463$1MHp3Q
              (vector->list
                (g$rib-sym*$19713$1MHp3Q g$rib$20463$1MHp3Q)))
            (g$set-rib-mark**!$19719$1MHp3Q
              g$rib$20463$1MHp3Q
              (vector->list
                (g$rib-mark**$19714$1MHp3Q g$rib$20463$1MHp3Q)))
            (g$set-rib-label*!$19720$1MHp3Q
              g$rib$20463$1MHp3Q
              (vector->list
                (g$rib-label*$19715$1MHp3Q g$rib$20463$1MHp3Q))))
          (void)))))
   (g$make-full-rib$19731$1MHp3Q
     g$make-full-rib$23740$1MHp3Q
     (case-lambda
       ((g$id*$20464$1MHp3Q g$label*$20465$1MHp3Q)
        ((case-lambda
           ((g$r$20466$1MHp3Q)
            (begin
              (g$seal-rib!$19729$1MHp3Q g$r$20466$1MHp3Q)
              g$r$20466$1MHp3Q)))
         (g$make-rib$19712$1MHp3Q
           (g$map$11835$1MHp3Q
             g$id->sym$19766$1MHp3Q
             g$id*$20464$1MHp3Q)
           (g$map$11835$1MHp3Q
             g$stx-mark*$19740$1MHp3Q
             g$id*$20464$1MHp3Q)
           g$label*$20465$1MHp3Q
           '#f
           '#f)))))
   (g$9572$19732$1MHp3Q
     g$9572$23741$1MHp3Q
     (make-record-type-descriptor
       'stx
       '#f
       'g$9575$1MHp3Q
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$9574$19733$1MHp3Q g$9574$23742$1MHp3Q '#f)
   (g$9573$19734$1MHp3Q
     g$9573$23743$1MHp3Q
     (make-record-constructor-descriptor
       g$9572$19732$1MHp3Q
       '#f
       g$9574$19733$1MHp3Q))
   (g$stx?$19737$1MHp3Q
     g$stx?$23744$1MHp3Q
     (record-predicate g$9572$19732$1MHp3Q))
   (g$make-stx$19738$1MHp3Q
     g$make-stx$23745$1MHp3Q
     (record-constructor g$9573$19734$1MHp3Q))
   (g$stx-expr$19739$1MHp3Q
     g$stx-expr$23746$1MHp3Q
     (record-accessor g$9572$19732$1MHp3Q '0))
   (g$stx-mark*$19740$1MHp3Q
     g$stx-mark*$23747$1MHp3Q
     (record-accessor g$9572$19732$1MHp3Q '1))
   (g$stx-subst*$19741$1MHp3Q
     g$stx-subst*$23748$1MHp3Q
     (record-accessor g$9572$19732$1MHp3Q '2))
   (g$stx-ae*$19742$1MHp3Q
     g$stx-ae*$23749$1MHp3Q
     (record-accessor g$9572$19732$1MHp3Q '3))
   (g$set-stx-expr!$19743$1MHp3Q
     g$set-stx-expr!$23750$1MHp3Q
     (record-mutator g$9572$19732$1MHp3Q '0))
   (g$set-stx-mark*!$19744$1MHp3Q
     g$set-stx-mark*!$23751$1MHp3Q
     (record-mutator g$9572$19732$1MHp3Q '1))
   (g$set-stx-subst*!$19745$1MHp3Q
     g$set-stx-subst*!$23752$1MHp3Q
     (record-mutator g$9572$19732$1MHp3Q '2))
   (g$set-stx-ae*!$19746$1MHp3Q
     g$set-stx-ae*!$23753$1MHp3Q
     (record-mutator g$9572$19732$1MHp3Q '3))
   (g$rp$19747$1MHp3Q
     g$rp$23754$1MHp3Q
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$20467$1MHp3Q g$p$20468$1MHp3Q g$wr$20469$1MHp3Q)
          (begin
            (display '"#<syntax " g$p$20468$1MHp3Q)
            (write
              (g$stx->datum$19776$1MHp3Q g$x$20467$1MHp3Q)
              g$p$20468$1MHp3Q)
            ((case-lambda
               ((g$expr$20470$1MHp3Q)
                (if (annotation? g$expr$20470$1MHp3Q)
                  ((case-lambda
                     ((g$src$20471$1MHp3Q)
                      (if (pair? g$src$20471$1MHp3Q)
                        (begin
                          (display '" (" g$p$20468$1MHp3Q)
                          (display
                            (cdr g$src$20471$1MHp3Q)
                            g$p$20468$1MHp3Q)
                          (display '" of " g$p$20468$1MHp3Q)
                          (display
                            (car g$src$20471$1MHp3Q)
                            g$p$20468$1MHp3Q)
                          (display '")" g$p$20468$1MHp3Q))
                        (void))))
                   (annotation-source g$expr$20470$1MHp3Q))
                  (void))))
             (g$stx-expr$19739$1MHp3Q g$x$20467$1MHp3Q))
            (display '">" g$p$20468$1MHp3Q))))))
   (g$datum->stx$19748$1MHp3Q
     g$datum->stx$23755$1MHp3Q
     (case-lambda
       ((g$id$20472$1MHp3Q g$datum$20473$1MHp3Q)
        (g$make-stx$19738$1MHp3Q
          g$datum$20473$1MHp3Q
          (g$stx-mark*$19740$1MHp3Q g$id$20472$1MHp3Q)
          (g$stx-subst*$19741$1MHp3Q g$id$20472$1MHp3Q)
          (g$stx-ae*$19742$1MHp3Q g$id$20472$1MHp3Q)))))
   (g$gen-mark$19749$1MHp3Q
     g$gen-mark$23756$1MHp3Q
     (case-lambda (() (string '#\m))))
   (g$anti-mark$19750$1MHp3Q g$anti-mark$23757$1MHp3Q '#f)
   (g$anti-mark?$19751$1MHp3Q g$anti-mark?$23758$1MHp3Q not)
   (g$join-wraps$19752$1MHp3Q
     g$join-wraps$23759$1MHp3Q
     (case-lambda
       ((g$m1*$20474$1MHp3Q
          g$s1*$20475$1MHp3Q
          g$ae1*$20476$1MHp3Q
          g$e$20477$1MHp3Q)
        (letrec* ((g$cancel$20478$1MHp3Q
                    (case-lambda
                      ((g$ls1$20482$1MHp3Q g$ls2$20483$1MHp3Q)
                       ((letrec ((g$f$20484$1MHp3Q
                                   (case-lambda
                                     ((g$x$20485$1MHp3Q
                                        g$ls1$20486$1MHp3Q)
                                      (if (null? g$ls1$20486$1MHp3Q)
                                        (cdr g$ls2$20483$1MHp3Q)
                                        (cons
                                          g$x$20485$1MHp3Q
                                          (g$f$20484$1MHp3Q
                                            (car g$ls1$20486$1MHp3Q)
                                            (cdr g$ls1$20486$1MHp3Q))))))))
                          g$f$20484$1MHp3Q)
                        (car g$ls1$20482$1MHp3Q)
                        (cdr g$ls1$20482$1MHp3Q))))))
          ((case-lambda
             ((g$m2*$20479$1MHp3Q
                g$s2*$20480$1MHp3Q
                g$ae2*$20481$1MHp3Q)
              (if (if (not (null? g$m1*$20474$1MHp3Q))
                    (if (not (null? g$m2*$20479$1MHp3Q))
                      (begin
                        '#f
                        (g$anti-mark?$19751$1MHp3Q
                          (car g$m2*$20479$1MHp3Q)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$20478$1MHp3Q
                    g$m1*$20474$1MHp3Q
                    g$m2*$20479$1MHp3Q)
                  (g$cancel$20478$1MHp3Q
                    g$s1*$20475$1MHp3Q
                    g$s2*$20480$1MHp3Q)
                  (g$cancel$20478$1MHp3Q
                    g$ae1*$20476$1MHp3Q
                    g$ae2*$20481$1MHp3Q))
                (values
                  (append g$m1*$20474$1MHp3Q g$m2*$20479$1MHp3Q)
                  (append g$s1*$20475$1MHp3Q g$s2*$20480$1MHp3Q)
                  (append g$ae1*$20476$1MHp3Q g$ae2*$20481$1MHp3Q)))))
           (g$stx-mark*$19740$1MHp3Q g$e$20477$1MHp3Q)
           (g$stx-subst*$19741$1MHp3Q g$e$20477$1MHp3Q)
           (g$stx-ae*$19742$1MHp3Q g$e$20477$1MHp3Q))))))
   (g$mkstx$19753$1MHp3Q
     g$mkstx$23760$1MHp3Q
     (case-lambda
       ((g$e$20487$1MHp3Q
          g$m*$20488$1MHp3Q
          g$s*$20489$1MHp3Q
          g$ae*$20490$1MHp3Q)
        (if (if (g$stx?$19737$1MHp3Q g$e$20487$1MHp3Q)
              (begin
                '#f
                (not (g$top-marked?$19699$1MHp3Q g$m*$20488$1MHp3Q)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$19752$1MHp3Q
                 g$m*$20488$1MHp3Q
                 g$s*$20489$1MHp3Q
                 g$ae*$20490$1MHp3Q
                 g$e$20487$1MHp3Q)))
            (case-lambda
              ((g$m*$20494$1MHp3Q g$s*$20495$1MHp3Q g$ae*$20496$1MHp3Q)
               ((case-lambda
                  ((g$ae*$20497$1MHp3Q
                     g$s*$20498$1MHp3Q
                     g$m*$20499$1MHp3Q)
                   (g$make-stx$19738$1MHp3Q
                     (g$stx-expr$19739$1MHp3Q g$e$20487$1MHp3Q)
                     g$m*$20499$1MHp3Q
                     g$s*$20498$1MHp3Q
                     g$ae*$20497$1MHp3Q)))
                g$ae*$20496$1MHp3Q
                g$s*$20495$1MHp3Q
                g$m*$20494$1MHp3Q))))
          (g$make-stx$19738$1MHp3Q
            g$e$20487$1MHp3Q
            g$m*$20488$1MHp3Q
            g$s*$20489$1MHp3Q
            g$ae*$20490$1MHp3Q)))))
   (g$add-mark$19754$1MHp3Q
     g$add-mark$23761$1MHp3Q
     (case-lambda
       ((g$m$20500$1MHp3Q g$e$20501$1MHp3Q g$ae$20502$1MHp3Q)
        (g$mkstx$19753$1MHp3Q
          g$e$20501$1MHp3Q
          (list g$m$20500$1MHp3Q)
          '(shift)
          (list g$ae$20502$1MHp3Q)))))
   (g$add-subst$19755$1MHp3Q
     g$add-subst$23762$1MHp3Q
     (case-lambda
       ((g$subst$20503$1MHp3Q g$e$20504$1MHp3Q)
        (g$mkstx$19753$1MHp3Q
          g$e$20504$1MHp3Q
          '()
          (list g$subst$20503$1MHp3Q)
          '()))))
   (g$syntax-kind?$19756$1MHp3Q
     g$syntax-kind?$23763$1MHp3Q
     (case-lambda
       ((g$x$20505$1MHp3Q g$p?$20506$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$20505$1MHp3Q)
          (g$syntax-kind?$19756$1MHp3Q
            (g$stx-expr$19739$1MHp3Q g$x$20505$1MHp3Q)
            g$p?$20506$1MHp3Q)
          (if (annotation? g$x$20505$1MHp3Q)
            (g$syntax-kind?$19756$1MHp3Q
              (annotation-expression g$x$20505$1MHp3Q)
              g$p?$20506$1MHp3Q)
            (begin '#f (g$p?$20506$1MHp3Q g$x$20505$1MHp3Q)))))))
   (g$syntax-vector->list$19757$1MHp3Q
     g$syntax-vector->list$23764$1MHp3Q
     (case-lambda
       ((g$x$20507$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$20507$1MHp3Q)
          ((case-lambda
             ((g$ls$20508$1MHp3Q
                g$m*$20509$1MHp3Q
                g$s*$20510$1MHp3Q
                g$ae*$20511$1MHp3Q)
              (g$map$11835$1MHp3Q
                (case-lambda
                  ((g$x$20512$1MHp3Q)
                   (g$mkstx$19753$1MHp3Q
                     g$x$20512$1MHp3Q
                     g$m*$20509$1MHp3Q
                     g$s*$20510$1MHp3Q
                     g$ae*$20511$1MHp3Q)))
                g$ls$20508$1MHp3Q)))
           (g$syntax-vector->list$19757$1MHp3Q
             (g$stx-expr$19739$1MHp3Q g$x$20507$1MHp3Q))
           (g$stx-mark*$19740$1MHp3Q g$x$20507$1MHp3Q)
           (g$stx-subst*$19741$1MHp3Q g$x$20507$1MHp3Q)
           (g$stx-ae*$19742$1MHp3Q g$x$20507$1MHp3Q))
          (if (annotation? g$x$20507$1MHp3Q)
            (g$syntax-vector->list$19757$1MHp3Q
              (annotation-expression g$x$20507$1MHp3Q))
            (if (g$vector?$12665$1MHp3Q g$x$20507$1MHp3Q)
              (vector->list g$x$20507$1MHp3Q)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$20507$1MHp3Q))))))))
   (g$syntax-pair?$19758$1MHp3Q
     g$syntax-pair?$23765$1MHp3Q
     (case-lambda
       ((g$x$20513$1MHp3Q)
        (g$syntax-kind?$19756$1MHp3Q g$x$20513$1MHp3Q pair?))))
   (g$syntax-vector?$19759$1MHp3Q
     g$syntax-vector?$23766$1MHp3Q
     (case-lambda
       ((g$x$20514$1MHp3Q)
        (g$syntax-kind?$19756$1MHp3Q
          g$x$20514$1MHp3Q
          g$vector?$12665$1MHp3Q))))
   (g$syntax-null?$19760$1MHp3Q
     g$syntax-null?$23767$1MHp3Q
     (case-lambda
       ((g$x$20515$1MHp3Q)
        (g$syntax-kind?$19756$1MHp3Q g$x$20515$1MHp3Q null?))))
   (g$syntax-list?$19761$1MHp3Q
     g$syntax-list?$23768$1MHp3Q
     (case-lambda
       ((g$x$20516$1MHp3Q)
        ((case-lambda
           ((g$t$20517$1MHp3Q)
            (if g$t$20517$1MHp3Q
              g$t$20517$1MHp3Q
              (begin
                '#f
                (if (g$syntax-pair?$19758$1MHp3Q g$x$20516$1MHp3Q)
                  (begin
                    '#f
                    (g$syntax-list?$19761$1MHp3Q
                      (g$syntax-cdr$19763$1MHp3Q g$x$20516$1MHp3Q)))
                  '#f)))))
         (g$syntax-null?$19760$1MHp3Q g$x$20516$1MHp3Q)))))
   (g$syntax-car$19762$1MHp3Q
     g$syntax-car$23769$1MHp3Q
     (case-lambda
       ((g$x$20518$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$20518$1MHp3Q)
          (g$mkstx$19753$1MHp3Q
            (g$syntax-car$19762$1MHp3Q
              (g$stx-expr$19739$1MHp3Q g$x$20518$1MHp3Q))
            (g$stx-mark*$19740$1MHp3Q g$x$20518$1MHp3Q)
            (g$stx-subst*$19741$1MHp3Q g$x$20518$1MHp3Q)
            (g$stx-ae*$19742$1MHp3Q g$x$20518$1MHp3Q))
          (if (annotation? g$x$20518$1MHp3Q)
            (g$syntax-car$19762$1MHp3Q
              (annotation-expression g$x$20518$1MHp3Q))
            (if (pair? g$x$20518$1MHp3Q)
              (car g$x$20518$1MHp3Q)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$20518$1MHp3Q))))))))
   (g$syntax-cdr$19763$1MHp3Q
     g$syntax-cdr$23770$1MHp3Q
     (case-lambda
       ((g$x$20519$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$20519$1MHp3Q)
          (g$mkstx$19753$1MHp3Q
            (g$syntax-cdr$19763$1MHp3Q
              (g$stx-expr$19739$1MHp3Q g$x$20519$1MHp3Q))
            (g$stx-mark*$19740$1MHp3Q g$x$20519$1MHp3Q)
            (g$stx-subst*$19741$1MHp3Q g$x$20519$1MHp3Q)
            (g$stx-ae*$19742$1MHp3Q g$x$20519$1MHp3Q))
          (if (annotation? g$x$20519$1MHp3Q)
            (g$syntax-cdr$19763$1MHp3Q
              (annotation-expression g$x$20519$1MHp3Q))
            (if (pair? g$x$20519$1MHp3Q)
              (cdr g$x$20519$1MHp3Q)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$20519$1MHp3Q))))))))
   (g$syntax->list$19764$1MHp3Q
     g$syntax->list$23771$1MHp3Q
     (case-lambda
       ((g$x$20520$1MHp3Q)
        (if (g$syntax-pair?$19758$1MHp3Q g$x$20520$1MHp3Q)
          (cons
            (g$syntax-car$19762$1MHp3Q g$x$20520$1MHp3Q)
            (g$syntax->list$19764$1MHp3Q
              (g$syntax-cdr$19763$1MHp3Q g$x$20520$1MHp3Q)))
          (if (g$syntax-null?$19760$1MHp3Q g$x$20520$1MHp3Q)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$20520$1MHp3Q))))))
   (g$id?$19765$1MHp3Q
     g$id?$23772$1MHp3Q
     (case-lambda
       ((g$x$20521$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$20521$1MHp3Q)
          (begin
            '#f
            ((case-lambda
               ((g$expr$20522$1MHp3Q)
                (g$symbol?$12667$1MHp3Q
                  (if (annotation? g$expr$20522$1MHp3Q)
                    (annotation-stripped g$expr$20522$1MHp3Q)
                    g$expr$20522$1MHp3Q))))
             (g$stx-expr$19739$1MHp3Q g$x$20521$1MHp3Q)))
          '#f))))
   (g$id->sym$19766$1MHp3Q
     g$id->sym$23773$1MHp3Q
     (case-lambda
       ((g$x$20523$1MHp3Q)
        (begin
          (if (not (g$stx?$19737$1MHp3Q g$x$20523$1MHp3Q))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$20523$1MHp3Q)
            (void))
          ((case-lambda
             ((g$expr$20524$1MHp3Q)
              ((case-lambda
                 ((g$sym$20525$1MHp3Q)
                  (if (g$symbol?$12667$1MHp3Q g$sym$20525$1MHp3Q)
                    g$sym$20525$1MHp3Q
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$20523$1MHp3Q))))
               (if (annotation? g$expr$20524$1MHp3Q)
                 (annotation-stripped g$expr$20524$1MHp3Q)
                 g$expr$20524$1MHp3Q))))
           (g$stx-expr$19739$1MHp3Q g$x$20523$1MHp3Q))))))
   (g$same-marks?$19767$1MHp3Q
     g$same-marks?$23774$1MHp3Q
     (case-lambda
       ((g$x$20526$1MHp3Q g$y$20527$1MHp3Q)
        ((case-lambda
           ((g$t$20528$1MHp3Q)
            (if g$t$20528$1MHp3Q
              g$t$20528$1MHp3Q
              (begin
                '#f
                (if (pair? g$x$20526$1MHp3Q)
                  (if (pair? g$y$20527$1MHp3Q)
                    (if (eq? (car g$x$20526$1MHp3Q)
                             (car g$y$20527$1MHp3Q))
                      (begin
                        '#f
                        (g$same-marks?$19767$1MHp3Q
                          (cdr g$x$20526$1MHp3Q)
                          (cdr g$y$20527$1MHp3Q)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$20526$1MHp3Q)
           (begin '#f (null? g$y$20527$1MHp3Q))
           '#f)))))
   (g$bound-id=?$19768$1MHp3Q
     g$bound-id=?$23775$1MHp3Q
     (case-lambda
       ((g$x$20529$1MHp3Q g$y$20530$1MHp3Q)
        (if (eq? (g$id->sym$19766$1MHp3Q g$x$20529$1MHp3Q)
                 (g$id->sym$19766$1MHp3Q g$y$20530$1MHp3Q))
          (begin
            '#f
            (g$same-marks?$19767$1MHp3Q
              (g$stx-mark*$19740$1MHp3Q g$x$20529$1MHp3Q)
              (g$stx-mark*$19740$1MHp3Q g$y$20530$1MHp3Q)))
          '#f))))
   (g$free-id=?$19769$1MHp3Q
     g$free-id=?$23776$1MHp3Q
     (case-lambda
       ((g$i$20531$1MHp3Q g$j$20532$1MHp3Q)
        ((case-lambda
           ((g$t0$20533$1MHp3Q g$t1$20534$1MHp3Q)
            (if ((case-lambda
                   ((g$t$20535$1MHp3Q)
                    (if g$t$20535$1MHp3Q
                      g$t$20535$1MHp3Q
                      (begin '#f g$t1$20534$1MHp3Q))))
                 g$t0$20533$1MHp3Q)
              (eq? g$t0$20533$1MHp3Q g$t1$20534$1MHp3Q)
              (eq? (g$id->sym$19766$1MHp3Q g$i$20531$1MHp3Q)
                   (g$id->sym$19766$1MHp3Q g$j$20532$1MHp3Q)))))
         (g$id->real-label$19779$1MHp3Q g$i$20531$1MHp3Q)
         (g$id->real-label$19779$1MHp3Q g$j$20532$1MHp3Q)))))
   (g$valid-bound-ids?$19770$1MHp3Q
     g$valid-bound-ids?$23777$1MHp3Q
     (case-lambda
       ((g$id*$20536$1MHp3Q)
        (if (g$for-all$11833$1MHp3Q
              g$id?$19765$1MHp3Q
              g$id*$20536$1MHp3Q)
          (begin
            '#f
            (g$distinct-bound-ids?$19771$1MHp3Q g$id*$20536$1MHp3Q))
          '#f))))
   (g$distinct-bound-ids?$19771$1MHp3Q
     g$distinct-bound-ids?$23778$1MHp3Q
     (case-lambda
       ((g$id*$20537$1MHp3Q)
        ((case-lambda
           ((g$t$20538$1MHp3Q)
            (if g$t$20538$1MHp3Q
              g$t$20538$1MHp3Q
              (begin
                '#f
                (if (not (g$bound-id-member?$19772$1MHp3Q
                           (car g$id*$20537$1MHp3Q)
                           (cdr g$id*$20537$1MHp3Q)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$19771$1MHp3Q
                      (cdr g$id*$20537$1MHp3Q)))
                  '#f)))))
         (null? g$id*$20537$1MHp3Q)))))
   (g$bound-id-member?$19772$1MHp3Q
     g$bound-id-member?$23779$1MHp3Q
     (case-lambda
       ((g$id$20539$1MHp3Q g$id*$20540$1MHp3Q)
        (if (pair? g$id*$20540$1MHp3Q)
          (begin
            '#f
            ((case-lambda
               ((g$t$20541$1MHp3Q)
                (if g$t$20541$1MHp3Q
                  g$t$20541$1MHp3Q
                  (begin
                    '#f
                    (g$bound-id-member?$19772$1MHp3Q
                      g$id$20539$1MHp3Q
                      (cdr g$id*$20540$1MHp3Q))))))
             (g$bound-id=?$19768$1MHp3Q
               g$id$20539$1MHp3Q
               (car g$id*$20540$1MHp3Q))))
          '#f))))
   (g$self-evaluating?$19773$1MHp3Q
     g$self-evaluating?$23780$1MHp3Q
     (case-lambda
       ((g$x$20542$1MHp3Q)
        ((case-lambda
           ((g$t$20543$1MHp3Q)
            (if g$t$20543$1MHp3Q
              g$t$20543$1MHp3Q
              ((case-lambda
                 ((g$t$20544$1MHp3Q)
                  (if g$t$20544$1MHp3Q
                    g$t$20544$1MHp3Q
                    ((case-lambda
                       ((g$t$20545$1MHp3Q)
                        (if g$t$20545$1MHp3Q
                          g$t$20545$1MHp3Q
                          ((case-lambda
                             ((g$t$20546$1MHp3Q)
                              (if g$t$20546$1MHp3Q
                                g$t$20546$1MHp3Q
                                (begin
                                  '#f
                                  (g$bytevector?$12666$1MHp3Q
                                    g$x$20542$1MHp3Q)))))
                           (g$boolean?$12668$1MHp3Q
                             g$x$20542$1MHp3Q)))))
                     (g$char?$12664$1MHp3Q g$x$20542$1MHp3Q)))))
               (string? g$x$20542$1MHp3Q)))))
         (g$number?$13363$1MHp3Q g$x$20542$1MHp3Q)))))
   (g$strip-annotations$19774$1MHp3Q
     g$strip-annotations$23781$1MHp3Q
     (case-lambda
       ((g$x$20547$1MHp3Q)
        (if (pair? g$x$20547$1MHp3Q)
          (cons
            (g$strip-annotations$19774$1MHp3Q (car g$x$20547$1MHp3Q))
            (g$strip-annotations$19774$1MHp3Q (cdr g$x$20547$1MHp3Q)))
          (if (g$vector?$12665$1MHp3Q g$x$20547$1MHp3Q)
            (g$vector-map$12734$1MHp3Q
              g$strip-annotations$19774$1MHp3Q
              g$x$20547$1MHp3Q)
            (if (annotation? g$x$20547$1MHp3Q)
              (annotation-stripped g$x$20547$1MHp3Q)
              (begin '#f g$x$20547$1MHp3Q)))))))
   (g$strip$19775$1MHp3Q
     g$strip$23782$1MHp3Q
     (case-lambda
       ((g$x$20548$1MHp3Q g$m*$20549$1MHp3Q)
        (if (g$top-marked?$19699$1MHp3Q g$m*$20549$1MHp3Q)
          (if ((case-lambda
                 ((g$t$20550$1MHp3Q)
                  (if g$t$20550$1MHp3Q
                    g$t$20550$1MHp3Q
                    ((case-lambda
                       ((g$t$20551$1MHp3Q)
                        (if g$t$20551$1MHp3Q
                          g$t$20551$1MHp3Q
                          (begin
                            '#f
                            (if (g$vector?$12665$1MHp3Q
                                  g$x$20548$1MHp3Q)
                              (if (g$>$13384$1MHp3Q
                                    (vector-length g$x$20548$1MHp3Q)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$12680$1MHp3Q
                                      g$x$20548$1MHp3Q
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$20548$1MHp3Q)
                       (begin '#f (annotation? (car g$x$20548$1MHp3Q)))
                       '#f)))))
               (annotation? g$x$20548$1MHp3Q))
            (g$strip-annotations$19774$1MHp3Q g$x$20548$1MHp3Q)
            g$x$20548$1MHp3Q)
          ((letrec ((g$f$20552$1MHp3Q
                      (case-lambda
                        ((g$x$20553$1MHp3Q)
                         (if (g$stx?$19737$1MHp3Q g$x$20553$1MHp3Q)
                           (g$strip$19775$1MHp3Q
                             (g$stx-expr$19739$1MHp3Q g$x$20553$1MHp3Q)
                             (g$stx-mark*$19740$1MHp3Q
                               g$x$20553$1MHp3Q))
                           (if (annotation? g$x$20553$1MHp3Q)
                             (annotation-stripped g$x$20553$1MHp3Q)
                             (if (pair? g$x$20553$1MHp3Q)
                               ((case-lambda
                                  ((g$a$20554$1MHp3Q g$d$20555$1MHp3Q)
                                   (if (if (eq? g$a$20554$1MHp3Q
                                                (car g$x$20553$1MHp3Q))
                                         (begin
                                           '#f
                                           (eq? g$d$20555$1MHp3Q
                                                (cdr g$x$20553$1MHp3Q)))
                                         '#f)
                                     g$x$20553$1MHp3Q
                                     (cons
                                       g$a$20554$1MHp3Q
                                       g$d$20555$1MHp3Q))))
                                (g$f$20552$1MHp3Q
                                  (car g$x$20553$1MHp3Q))
                                (g$f$20552$1MHp3Q
                                  (cdr g$x$20553$1MHp3Q)))
                               (if (g$vector?$12665$1MHp3Q
                                     g$x$20553$1MHp3Q)
                                 ((case-lambda
                                    ((g$old$20556$1MHp3Q)
                                     ((case-lambda
                                        ((g$new$20557$1MHp3Q)
                                         (if (g$for-all$11833$1MHp3Q
                                               eq?
                                               g$old$20556$1MHp3Q
                                               g$new$20557$1MHp3Q)
                                           g$x$20553$1MHp3Q
                                           (g$list->vector$12678$1MHp3Q
                                             g$new$20557$1MHp3Q))))
                                      (g$map$11835$1MHp3Q
                                        g$f$20552$1MHp3Q
                                        g$old$20556$1MHp3Q))))
                                  (vector->list g$x$20553$1MHp3Q))
                                 (begin '#f g$x$20553$1MHp3Q)))))))))
             g$f$20552$1MHp3Q)
           g$x$20548$1MHp3Q)))))
   (g$stx->datum$19776$1MHp3Q
     g$stx->datum$23783$1MHp3Q
     (case-lambda
       ((g$x$20558$1MHp3Q)
        (g$strip$19775$1MHp3Q g$x$20558$1MHp3Q '()))))
   (g$same-marks*?$19777$1MHp3Q
     g$same-marks*?$23784$1MHp3Q
     (case-lambda
       ((g$mark*$20559$1MHp3Q g$mark**$20560$1MHp3Q g$si$20561$1MHp3Q)
        (if (null? g$si$20561$1MHp3Q)
          '#f
          (if (g$same-marks?$19767$1MHp3Q
                g$mark*$20559$1MHp3Q
                (g$vector-ref$12680$1MHp3Q
                  g$mark**$20560$1MHp3Q
                  (car g$si$20561$1MHp3Q)))
            (car g$si$20561$1MHp3Q)
            (g$same-marks*?$19777$1MHp3Q
              g$mark*$20559$1MHp3Q
              g$mark**$20560$1MHp3Q
              (cdr g$si$20561$1MHp3Q)))))))
   (g$id->label$19778$1MHp3Q
     g$id->label$23785$1MHp3Q
     (case-lambda
       ((g$id$20562$1MHp3Q)
        ((case-lambda
           ((g$t$20563$1MHp3Q)
            (if g$t$20563$1MHp3Q
              g$t$20563$1MHp3Q
              (begin
                '#f
                ((case-lambda
                   ((g$t$20564$1MHp3Q)
                    (if g$t$20564$1MHp3Q
                      ((case-lambda
                         ((g$env$20565$1MHp3Q)
                          ((case-lambda
                             ((g$rib$20566$1MHp3Q)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$19704$1MHp3Q
                                     g$id$20562$1MHp3Q
                                     g$rib$20566$1MHp3Q
                                     '#f)))
                                (case-lambda
                                  ((g$lab$20569$1MHp3Q
                                     g$_loc$20570$1MHp3Q)
                                   ((case-lambda
                                      ((g$_loc$20571$1MHp3Q
                                         g$lab$20572$1MHp3Q)
                                       (begin
                                         (g$extend-rib!$19726$1MHp3Q
                                           g$rib$20566$1MHp3Q
                                           g$id$20562$1MHp3Q
                                           g$lab$20572$1MHp3Q
                                           '#t)
                                         g$lab$20572$1MHp3Q)))
                                    g$_loc$20570$1MHp3Q
                                    g$lab$20569$1MHp3Q))))))
                           (g$interaction-env-rib$20348$1MHp3Q
                             g$env$20565$1MHp3Q))))
                       g$t$20564$1MHp3Q)
                      (begin '#f '#f))))
                 (g$top-level-context$20390$1MHp3Q))))))
         (g$id->real-label$19779$1MHp3Q g$id$20562$1MHp3Q)))))
   (g$id->real-label$19779$1MHp3Q
     g$id->real-label$23786$1MHp3Q
     (case-lambda
       ((g$id$20573$1MHp3Q)
        ((case-lambda
           ((g$sym$20574$1MHp3Q)
            ((letrec ((g$search$20575$1MHp3Q
                        (case-lambda
                          ((g$subst*$20576$1MHp3Q g$mark*$20577$1MHp3Q)
                           (if (null? g$subst*$20576$1MHp3Q)
                             '#f
                             (if (eq? (car g$subst*$20576$1MHp3Q)
                                      'shift)
                               (g$search$20575$1MHp3Q
                                 (cdr g$subst*$20576$1MHp3Q)
                                 (cdr g$mark*$20577$1MHp3Q))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$20578$1MHp3Q)
                                     ((case-lambda
                                        ((g$t$20579$1MHp3Q)
                                         (if g$t$20579$1MHp3Q
                                           ((case-lambda
                                              ((g$ht$20580$1MHp3Q)
                                               ((case-lambda
                                                  ((g$si$20581$1MHp3Q)
                                                   ((case-lambda
                                                      ((g$i$20582$1MHp3Q)
                                                       (if g$i$20582$1MHp3Q
                                                         (g$vector-ref$12680$1MHp3Q
                                                           (g$rib-label*$19715$1MHp3Q
                                                             g$rib$20578$1MHp3Q)
                                                           g$i$20582$1MHp3Q)
                                                         (g$search$20575$1MHp3Q
                                                           (cdr g$subst*$20576$1MHp3Q)
                                                           g$mark*$20577$1MHp3Q))))
                                                    (if g$si$20581$1MHp3Q
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$19777$1MHp3Q
                                                          g$mark*$20577$1MHp3Q
                                                          (g$rib-mark**$19714$1MHp3Q
                                                            g$rib$20578$1MHp3Q)
                                                          (g$reverse$12684$1MHp3Q
                                                            g$si$20581$1MHp3Q)))
                                                      '#f))))
                                                (g$hashtable-ref$12777$1MHp3Q
                                                  g$ht$20580$1MHp3Q
                                                  g$sym$20574$1MHp3Q
                                                  '#f))))
                                            g$t$20579$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$20583$1MHp3Q)
                                               (if g$t$20583$1MHp3Q
                                                 g$t$20583$1MHp3Q
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$20584$1MHp3Q
                                                                 (case-lambda
                                                                   ((g$sym*$20585$1MHp3Q
                                                                      g$mark**$20586$1MHp3Q
                                                                      g$label*$20587$1MHp3Q)
                                                                    (if (null?
                                                                          g$sym*$20585$1MHp3Q)
                                                                      (g$search$20575$1MHp3Q
                                                                        (cdr g$subst*$20576$1MHp3Q)
                                                                        g$mark*$20577$1MHp3Q)
                                                                      (if (if (eq? (car g$sym*$20585$1MHp3Q)
                                                                                   g$sym$20574$1MHp3Q)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$19767$1MHp3Q
                                                                                (car g$mark**$20586$1MHp3Q)
                                                                                g$mark*$20577$1MHp3Q))
                                                                            '#f)
                                                                        (car g$label*$20587$1MHp3Q)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$20584$1MHp3Q
                                                                            (cdr g$sym*$20585$1MHp3Q)
                                                                            (cdr g$mark**$20586$1MHp3Q)
                                                                            (cdr g$label*$20587$1MHp3Q)))))))))
                                                        g$f$20584$1MHp3Q)
                                                      (g$rib-sym*$19713$1MHp3Q
                                                        g$rib$20578$1MHp3Q)
                                                      (g$rib-mark**$19714$1MHp3Q
                                                        g$rib$20578$1MHp3Q)
                                                      (g$rib-label*$19715$1MHp3Q
                                                        g$rib$20578$1MHp3Q)))))))
                                            (g$find-label$19725$1MHp3Q
                                              g$rib$20578$1MHp3Q
                                              g$sym$20574$1MHp3Q
                                              g$mark*$20577$1MHp3Q)))))
                                      (g$rib-sealed/freq$19716$1MHp3Q
                                        g$rib$20578$1MHp3Q))))
                                  (car g$subst*$20576$1MHp3Q)))))))))
               g$search$20575$1MHp3Q)
             (g$stx-subst*$19741$1MHp3Q g$id$20573$1MHp3Q)
             (g$stx-mark*$19740$1MHp3Q g$id$20573$1MHp3Q))))
         (g$id->sym$19766$1MHp3Q g$id$20573$1MHp3Q)))))
   (g$label->binding$19780$1MHp3Q
     g$label->binding$23787$1MHp3Q
     (case-lambda
       ((g$x$20588$1MHp3Q g$r$20589$1MHp3Q)
        (if (not g$x$20588$1MHp3Q)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$20590$1MHp3Q)
              (if g$t$20590$1MHp3Q
                ((case-lambda
                   ((g$b$20591$1MHp3Q)
                    (if (if (pair? g$b$20591$1MHp3Q)
                          (begin
                            '#f
                            (eq? (car g$b$20591$1MHp3Q) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11835$1MHp3Q
                          g$bless$20226$1MHp3Q
                          (cdr g$b$20591$1MHp3Q)))
                      (if (if (pair? g$b$20591$1MHp3Q)
                            (begin
                              '#f
                              (eq? (car g$b$20591$1MHp3Q) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$20592$1MHp3Q g$loc$20593$1MHp3Q)
                            (cons
                              '$rtd
                              (symbol-value g$loc$20593$1MHp3Q))))
                         (g$cadr$12686$1MHp3Q g$b$20591$1MHp3Q)
                         (g$cddr$12688$1MHp3Q g$b$20591$1MHp3Q))
                        (begin '#f g$b$20591$1MHp3Q)))))
                 g$t$20590$1MHp3Q)
                ((case-lambda
                   ((g$t$20594$1MHp3Q)
                    (if g$t$20594$1MHp3Q
                      (cdr g$t$20594$1MHp3Q)
                      ((case-lambda
                         ((g$t$20595$1MHp3Q)
                          (if g$t$20595$1MHp3Q
                            ((case-lambda
                               ((g$env$20596$1MHp3Q)
                                ((case-lambda
                                   ((g$t$20597$1MHp3Q)
                                    (if g$t$20597$1MHp3Q
                                      ((case-lambda
                                         ((g$p$20598$1MHp3Q)
                                          (g$cons*$11837$1MHp3Q
                                            'lexical
                                            (cdr g$p$20598$1MHp3Q)
                                            '#f)))
                                       g$t$20597$1MHp3Q)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$11823$1MHp3Q
                                   g$x$20588$1MHp3Q
                                   (g$interaction-env-locs$20350$1MHp3Q
                                     g$env$20596$1MHp3Q)))))
                             g$t$20595$1MHp3Q)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$20390$1MHp3Q)))))
                 (g$assq$11823$1MHp3Q
                   g$x$20588$1MHp3Q
                   g$r$20589$1MHp3Q)))))
           (g$imported-label->binding$19470$1MHp3Q
             g$x$20588$1MHp3Q))))))
   (g$make-binding$19781$1MHp3Q g$make-binding$23788$1MHp3Q cons)
   (g$binding-type$19782$1MHp3Q g$binding-type$23789$1MHp3Q car)
   (g$binding-value$19783$1MHp3Q g$binding-value$23790$1MHp3Q cdr)
   (g$raise-unbound-error$19784$1MHp3Q
     g$raise-unbound-error$23791$1MHp3Q
     (case-lambda
       ((g$id$20599$1MHp3Q)
        (g$syntax-violation*$20381$1MHp3Q
          '#f
          '"unbound identifier"
          g$id$20599$1MHp3Q
          (g$make-undefined-violation$13934$1MHp3Q)))))
   (g$syntax-type$19785$1MHp3Q
     g$syntax-type$23792$1MHp3Q
     (case-lambda
       ((g$e$20600$1MHp3Q g$r$20601$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$e$20600$1MHp3Q)
          ((case-lambda
             ((g$id$20602$1MHp3Q)
              ((case-lambda
                 ((g$label$20603$1MHp3Q)
                  ((case-lambda
                     ((g$b$20604$1MHp3Q)
                      ((case-lambda
                         ((g$type$20605$1MHp3Q)
                          (begin
                            (if (not g$label$20603$1MHp3Q)
                              (g$raise-unbound-error$19784$1MHp3Q
                                g$id$20602$1MHp3Q)
                              (void))
                            ((case-lambda
                               ((g$t$20606$1MHp3Q)
                                (if (g$memv$11828$1MHp3Q
                                      g$t$20606$1MHp3Q
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$20605$1MHp3Q
                                    (g$binding-value$19783$1MHp3Q
                                      g$b$20604$1MHp3Q)
                                    g$id$20602$1MHp3Q)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$20605$1MHp3Q))))
                       (g$binding-type$19782$1MHp3Q g$b$20604$1MHp3Q))))
                   (g$label->binding$19780$1MHp3Q
                     g$label$20603$1MHp3Q
                     g$r$20601$1MHp3Q))))
               (g$id->label$19778$1MHp3Q g$id$20602$1MHp3Q))))
           g$e$20600$1MHp3Q)
          (if (g$syntax-pair?$19758$1MHp3Q g$e$20600$1MHp3Q)
            ((case-lambda
               ((g$id$20607$1MHp3Q)
                (if (g$id?$19765$1MHp3Q g$id$20607$1MHp3Q)
                  ((case-lambda
                     ((g$label$20608$1MHp3Q)
                      ((case-lambda
                         ((g$b$20609$1MHp3Q)
                          ((case-lambda
                             ((g$type$20610$1MHp3Q)
                              (begin
                                (if (not g$label$20608$1MHp3Q)
                                  (g$raise-unbound-error$19784$1MHp3Q
                                    g$id$20607$1MHp3Q)
                                  (void))
                                ((case-lambda
                                   ((g$t$20611$1MHp3Q)
                                    (if (g$memv$11828$1MHp3Q
                                          g$t$20611$1MHp3Q
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$20610$1MHp3Q
                                        (g$binding-value$19783$1MHp3Q
                                          g$b$20609$1MHp3Q)
                                        g$id$20607$1MHp3Q)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$20610$1MHp3Q))))
                           (g$binding-type$19782$1MHp3Q
                             g$b$20609$1MHp3Q))))
                       (g$label->binding$19780$1MHp3Q
                         g$label$20608$1MHp3Q
                         g$r$20601$1MHp3Q))))
                   (g$id->label$19778$1MHp3Q g$id$20607$1MHp3Q))
                  (values 'call '#f '#f))))
             (g$syntax-car$19762$1MHp3Q g$e$20600$1MHp3Q))
            (begin
              '#f
              ((case-lambda
                 ((g$d$20612$1MHp3Q)
                  (if (g$self-evaluating?$19773$1MHp3Q g$d$20612$1MHp3Q)
                    (values 'constant g$d$20612$1MHp3Q '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$19776$1MHp3Q g$e$20600$1MHp3Q))))))))
   (g$sanitize-binding$19808$1MHp3Q
     g$sanitize-binding$23793$1MHp3Q
     (case-lambda
       ((g$x$20613$1MHp3Q g$src$20614$1MHp3Q)
        (if (g$procedure?$12669$1MHp3Q g$x$20613$1MHp3Q)
          (g$cons*$11837$1MHp3Q
            'local-macro
            g$x$20613$1MHp3Q
            g$src$20614$1MHp3Q)
          (if (if (pair? g$x$20613$1MHp3Q)
                (if (eq? (car g$x$20613$1MHp3Q) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12669$1MHp3Q (cdr g$x$20613$1MHp3Q)))
                  '#f)
                '#f)
            (g$cons*$11837$1MHp3Q
              'local-macro!
              (cdr g$x$20613$1MHp3Q)
              g$src$20614$1MHp3Q)
            (if (if (pair? g$x$20613$1MHp3Q)
                  (begin '#f (eq? (car g$x$20613$1MHp3Q) '$rtd))
                  '#f)
              g$x$20613$1MHp3Q
              (if (if (pair? g$x$20613$1MHp3Q)
                    (begin '#f (eq? (car g$x$20613$1MHp3Q) 'ctv))
                    '#f)
                (g$cons*$11837$1MHp3Q
                  'local-ctv
                  (cdr g$x$20613$1MHp3Q)
                  g$src$20614$1MHp3Q)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$20613$1MHp3Q)))))))))
   (g$make-variable-transformer$19809$1MHp3Q
     g$make-variable-transformer$23794$1MHp3Q
     (case-lambda
       ((g$x$20615$1MHp3Q)
        (if (g$procedure?$12669$1MHp3Q g$x$20615$1MHp3Q)
          (cons 'macro! g$x$20615$1MHp3Q)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$20615$1MHp3Q)))))
   (g$make-compile-time-value$19810$1MHp3Q
     g$make-compile-time-value$23795$1MHp3Q
     (case-lambda ((g$x$20616$1MHp3Q) (cons 'ctv g$x$20616$1MHp3Q))))
   (g$variable-transformer?$19811$1MHp3Q
     g$variable-transformer?$23796$1MHp3Q
     (case-lambda
       ((g$x$20617$1MHp3Q)
        (if (pair? g$x$20617$1MHp3Q)
          (if (eq? (car g$x$20617$1MHp3Q) 'macro!)
            (begin
              '#f
              (g$procedure?$12669$1MHp3Q (cdr g$x$20617$1MHp3Q)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$19812$1MHp3Q
     g$variable-transformer-procedure$23797$1MHp3Q
     (case-lambda
       ((g$x$20618$1MHp3Q)
        (if (g$variable-transformer?$19811$1MHp3Q g$x$20618$1MHp3Q)
          (cdr g$x$20618$1MHp3Q)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$20618$1MHp3Q)))))
   (g$make-eval-transformer$19813$1MHp3Q
     g$make-eval-transformer$23798$1MHp3Q
     (case-lambda
       ((g$x$20619$1MHp3Q)
        (g$sanitize-binding$19808$1MHp3Q
          (eval-core (g$expanded->core$19203$1MHp3Q g$x$20619$1MHp3Q))
          g$x$20619$1MHp3Q))))
   (g$parse-define$20203$1MHp3Q
     g$parse-define$23799$1MHp3Q
     (case-lambda
       ((g$x$20620$1MHp3Q)
        ((case-lambda
           ((g$t$20621$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20622$1MHp3Q)
                (if (if g$ls/false$20622$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20623$1MHp3Q
                               g$fmls$20624$1MHp3Q
                               g$b$20625$1MHp3Q
                               g$b*$20626$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$id$20623$1MHp3Q)))
                          g$ls/false$20622$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20627$1MHp3Q
                         g$fmls$20628$1MHp3Q
                         g$b$20629$1MHp3Q
                         g$b*$20630$1MHp3Q)
                       (begin
                         (g$verify-formals$20283$1MHp3Q
                           g$fmls$20628$1MHp3Q
                           g$x$20620$1MHp3Q)
                         (values
                           g$id$20627$1MHp3Q
                           (cons
                             'defun
                             (cons
                               g$fmls$20628$1MHp3Q
                               (cons
                                 g$b$20629$1MHp3Q
                                 g$b*$20630$1MHp3Q)))))))
                    g$ls/false$20622$1MHp3Q)
                  ((case-lambda
                     ((g$t$20631$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20632$1MHp3Q)
                          (if (if g$ls/false$20632$1MHp3Q
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$20633$1MHp3Q
                                         g$val$20634$1MHp3Q)
                                       (g$id?$19765$1MHp3Q
                                         g$id$20633$1MHp3Q)))
                                    g$ls/false$20632$1MHp3Q))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$20635$1MHp3Q g$val$20636$1MHp3Q)
                                 (values
                                   g$id$20635$1MHp3Q
                                   (cons 'expr g$val$20636$1MHp3Q))))
                              g$ls/false$20632$1MHp3Q)
                            ((case-lambda
                               ((g$t$20637$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$20638$1MHp3Q)
                                    (if (if g$ls/false$20638$1MHp3Q
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$20639$1MHp3Q)
                                                 (g$id?$19765$1MHp3Q
                                                   g$id$20639$1MHp3Q)))
                                              g$ls/false$20638$1MHp3Q))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$20640$1MHp3Q)
                                           (values
                                             g$id$20640$1MHp3Q
                                             (cons
                                               'expr
                                               (g$bless$20226$1MHp3Q
                                                 '(void))))))
                                        g$ls/false$20638$1MHp3Q)
                                      (g$syntax-violation$20382$1MHp3Q
                                        '#f
                                        '"invalid syntax"
                                        g$t$20637$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$20637$1MHp3Q
                                   '(_ any)))))
                             g$t$20631$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20631$1MHp3Q
                         '(_ any any)))))
                   g$t$20621$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20621$1MHp3Q
               '(_ (any . any) any . each-any)))))
         g$x$20620$1MHp3Q))))
   (g$parse-define-syntax$20204$1MHp3Q
     g$parse-define-syntax$23800$1MHp3Q
     (case-lambda
       ((g$x$20641$1MHp3Q)
        ((case-lambda
           ((g$t$20642$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20643$1MHp3Q)
                (if (if g$ls/false$20643$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20644$1MHp3Q g$val$20645$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$id$20644$1MHp3Q)))
                          g$ls/false$20643$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20646$1MHp3Q g$val$20647$1MHp3Q)
                       (values g$id$20646$1MHp3Q g$val$20647$1MHp3Q)))
                    g$ls/false$20643$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20642$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20642$1MHp3Q
               '(_ any any)))))
         g$x$20641$1MHp3Q))))
   (g$scheme-stx-hashtable$20205$1MHp3Q
     g$scheme-stx-hashtable$23801$1MHp3Q
     (g$make-eq-hashtable$12774$1MHp3Q))
   (g$scheme-stx$20206$1MHp3Q
     g$scheme-stx$23802$1MHp3Q
     (case-lambda
       ((g$sym$20648$1MHp3Q)
        ((case-lambda
           ((g$t$20649$1MHp3Q)
            (if g$t$20649$1MHp3Q
              g$t$20649$1MHp3Q
              (begin
                '#f
                ((case-lambda
                   ((g$subst$20650$1MHp3Q)
                    ((case-lambda
                       ((g$stx$20651$1MHp3Q)
                        ((case-lambda
                           ((g$stx$20652$1MHp3Q)
                            (begin
                              (g$hashtable-set!$12778$1MHp3Q
                                g$scheme-stx-hashtable$20205$1MHp3Q
                                g$sym$20648$1MHp3Q
                                g$stx$20652$1MHp3Q)
                              g$stx$20652$1MHp3Q)))
                         ((case-lambda
                            ((g$t$20653$1MHp3Q)
                             (if g$t$20653$1MHp3Q
                               ((case-lambda
                                  ((g$x$20654$1MHp3Q)
                                   ((case-lambda
                                      ((g$name$20655$1MHp3Q
                                         g$label$20656$1MHp3Q)
                                       (g$add-subst$19755$1MHp3Q
                                         (g$make-rib$19712$1MHp3Q
                                           (list g$name$20655$1MHp3Q)
                                           (list
                                             g$top-mark*$19698$1MHp3Q)
                                           (list g$label$20656$1MHp3Q)
                                           '#f
                                           '#f)
                                         g$stx$20651$1MHp3Q)))
                                    (car g$x$20654$1MHp3Q)
                                    (cdr g$x$20654$1MHp3Q))))
                                g$t$20653$1MHp3Q)
                               (begin '#f g$stx$20651$1MHp3Q))))
                          (g$assq$11823$1MHp3Q
                            g$sym$20648$1MHp3Q
                            g$subst$20650$1MHp3Q)))))
                     (g$make-stx$19738$1MHp3Q
                       g$sym$20648$1MHp3Q
                       g$top-mark*$19698$1MHp3Q
                       '()
                       '()))))
                 (g$library-subst$19428$1MHp3Q
                   (g$find-library-by-name$19464$1MHp3Q
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12777$1MHp3Q
           g$scheme-stx-hashtable$20205$1MHp3Q
           g$sym$20648$1MHp3Q
           '#f)))))
   (g$lexical-var$20207$1MHp3Q g$lexical-var$23803$1MHp3Q car)
   (g$lexical-mutable?$20208$1MHp3Q g$lexical-mutable?$23804$1MHp3Q cdr)
   (g$set-lexical-mutable!$20209$1MHp3Q
     g$set-lexical-mutable!$23805$1MHp3Q
     set-cdr!)
   (g$add-lexical$20210$1MHp3Q
     g$add-lexical$23806$1MHp3Q
     (case-lambda
       ((g$lab$20657$1MHp3Q g$lex$20658$1MHp3Q g$r$20659$1MHp3Q)
        (cons
          (g$cons*$11837$1MHp3Q
            g$lab$20657$1MHp3Q
            'lexical
            g$lex$20658$1MHp3Q
            '#f)
          g$r$20659$1MHp3Q))))
   (g$add-lexicals$20211$1MHp3Q
     g$add-lexicals$23807$1MHp3Q
     (case-lambda
       ((g$lab*$20660$1MHp3Q g$lex*$20661$1MHp3Q g$r$20662$1MHp3Q)
        (if (null? g$lab*$20660$1MHp3Q)
          g$r$20662$1MHp3Q
          (begin
            '#f
            (g$add-lexicals$20211$1MHp3Q
              (cdr g$lab*$20660$1MHp3Q)
              (cdr g$lex*$20661$1MHp3Q)
              (g$add-lexical$20210$1MHp3Q
                (car g$lab*$20660$1MHp3Q)
                (car g$lex*$20661$1MHp3Q)
                g$r$20662$1MHp3Q)))))))
   (g$letrec-helper$20212$1MHp3Q
     g$letrec-helper$23808$1MHp3Q
     (case-lambda
       ((g$e$20663$1MHp3Q
          g$r$20664$1MHp3Q
          g$mr$20665$1MHp3Q
          g$build$20666$1MHp3Q)
        ((case-lambda
           ((g$t$20667$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20668$1MHp3Q)
                (if g$ls/false$20668$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$lhs*$20669$1MHp3Q
                         g$rhs*$20670$1MHp3Q
                         g$b$20671$1MHp3Q
                         g$b*$20672$1MHp3Q)
                       (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                  g$lhs*$20669$1MHp3Q))
                         (g$invalid-fmls-error$20228$1MHp3Q
                           g$e$20663$1MHp3Q
                           g$lhs*$20669$1MHp3Q)
                         ((case-lambda
                            ((g$lex*$20673$1MHp3Q g$lab*$20674$1MHp3Q)
                             ((case-lambda
                                ((g$rib$20675$1MHp3Q g$r$20676$1MHp3Q)
                                 ((case-lambda
                                    ((g$body$20677$1MHp3Q
                                       g$rhs*$20678$1MHp3Q)
                                     (g$build$20666$1MHp3Q
                                       '#f
                                       g$lex*$20673$1MHp3Q
                                       g$rhs*$20678$1MHp3Q
                                       g$body$20677$1MHp3Q)))
                                  (g$chi-internal$20292$1MHp3Q
                                    (g$add-subst$19755$1MHp3Q
                                      g$rib$20675$1MHp3Q
                                      (cons
                                        g$b$20671$1MHp3Q
                                        g$b*$20672$1MHp3Q))
                                    g$r$20676$1MHp3Q
                                    g$mr$20665$1MHp3Q)
                                  (g$chi-expr*$20279$1MHp3Q
                                    (g$map$11835$1MHp3Q
                                      (case-lambda
                                        ((g$x$20679$1MHp3Q)
                                         (g$add-subst$19755$1MHp3Q
                                           g$rib$20675$1MHp3Q
                                           g$x$20679$1MHp3Q)))
                                      g$rhs*$20670$1MHp3Q)
                                    g$r$20676$1MHp3Q
                                    g$mr$20665$1MHp3Q))))
                              (g$make-full-rib$19731$1MHp3Q
                                g$lhs*$20669$1MHp3Q
                                g$lab*$20674$1MHp3Q)
                              (g$add-lexicals$20211$1MHp3Q
                                g$lab*$20674$1MHp3Q
                                g$lex*$20673$1MHp3Q
                                g$r$20664$1MHp3Q))))
                          (g$map$11835$1MHp3Q
                            g$gen-lexical$19700$1MHp3Q
                            g$lhs*$20669$1MHp3Q)
                          (g$map$11835$1MHp3Q
                            g$gen-label$19702$1MHp3Q
                            g$lhs*$20669$1MHp3Q)))))
                    g$ls/false$20668$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20667$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20667$1MHp3Q
               '(_ #(each (any any)) any . each-any)))))
         g$e$20663$1MHp3Q))))
   (g$letrec-transformer$20213$1MHp3Q
     g$letrec-transformer$23809$1MHp3Q
     (case-lambda
       ((g$e$20680$1MHp3Q g$r$20681$1MHp3Q g$mr$20682$1MHp3Q)
        (g$letrec-helper$20212$1MHp3Q
          g$e$20680$1MHp3Q
          g$r$20681$1MHp3Q
          g$mr$20682$1MHp3Q
          g$build-letrec$19692$1MHp3Q))))
   (g$letrec*-transformer$20214$1MHp3Q
     g$letrec*-transformer$23810$1MHp3Q
     (case-lambda
       ((g$e$20683$1MHp3Q g$r$20684$1MHp3Q g$mr$20685$1MHp3Q)
        (g$letrec-helper$20212$1MHp3Q
          g$e$20683$1MHp3Q
          g$r$20684$1MHp3Q
          g$mr$20685$1MHp3Q
          g$build-letrec*$19693$1MHp3Q))))
   (g$fluid-let-syntax-transformer$20215$1MHp3Q
     g$fluid-let-syntax-transformer$23811$1MHp3Q
     (case-lambda
       ((g$e$20686$1MHp3Q g$r$20687$1MHp3Q g$mr$20688$1MHp3Q)
        (letrec* ((g$lookup$20689$1MHp3Q
                    (case-lambda
                      ((g$x$20699$1MHp3Q)
                       ((case-lambda
                          ((g$t$20700$1MHp3Q)
                           (if g$t$20700$1MHp3Q
                             g$t$20700$1MHp3Q
                             (begin
                               '#f
                               (g$syntax-violation$20382$1MHp3Q
                                 '#f
                                 '"unbound identifier"
                                 g$e$20686$1MHp3Q
                                 g$x$20699$1MHp3Q)))))
                        (g$id->label$19778$1MHp3Q g$x$20699$1MHp3Q))))))
          ((case-lambda
             ((g$t$20690$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$20691$1MHp3Q)
                  (if g$ls/false$20691$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$lhs*$20692$1MHp3Q
                           g$rhs*$20693$1MHp3Q
                           g$b$20694$1MHp3Q
                           g$b*$20695$1MHp3Q)
                         (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                    g$lhs*$20692$1MHp3Q))
                           (g$invalid-fmls-error$20228$1MHp3Q
                             g$e$20686$1MHp3Q
                             g$lhs*$20692$1MHp3Q)
                           ((case-lambda
                              ((g$lab*$20696$1MHp3Q g$rhs*$20697$1MHp3Q)
                               (g$chi-internal$20292$1MHp3Q
                                 (cons
                                   g$b$20694$1MHp3Q
                                   g$b*$20695$1MHp3Q)
                                 (append
                                   (g$map$11835$1MHp3Q
                                     cons
                                     g$lab*$20696$1MHp3Q
                                     g$rhs*$20697$1MHp3Q)
                                   g$r$20687$1MHp3Q)
                                 (append
                                   (g$map$11835$1MHp3Q
                                     cons
                                     g$lab*$20696$1MHp3Q
                                     g$rhs*$20697$1MHp3Q)
                                   g$mr$20688$1MHp3Q))))
                            (g$map$11835$1MHp3Q
                              g$lookup$20689$1MHp3Q
                              g$lhs*$20692$1MHp3Q)
                            (g$map$11835$1MHp3Q
                              (case-lambda
                                ((g$x$20698$1MHp3Q)
                                 (g$make-eval-transformer$19813$1MHp3Q
                                   (g$expand-transformer$20311$1MHp3Q
                                     g$x$20698$1MHp3Q
                                     g$mr$20688$1MHp3Q))))
                              g$rhs*$20693$1MHp3Q)))))
                      g$ls/false$20691$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$20690$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$20690$1MHp3Q
                 '(_ #(each (any any)) any . each-any)))))
           g$e$20686$1MHp3Q)))))
   (g$type-descriptor-transformer$20216$1MHp3Q
     g$type-descriptor-transformer$23812$1MHp3Q
     (case-lambda
       ((g$e$20701$1MHp3Q g$r$20702$1MHp3Q g$mr$20703$1MHp3Q)
        ((case-lambda
           ((g$t$20704$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20705$1MHp3Q)
                (if (if g$ls/false$20705$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20706$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$id$20706$1MHp3Q)))
                          g$ls/false$20705$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20707$1MHp3Q)
                       ((case-lambda
                          ((g$lab$20708$1MHp3Q)
                           ((case-lambda
                              ((g$b$20709$1MHp3Q)
                               ((case-lambda
                                  ((g$type$20710$1MHp3Q)
                                   (begin
                                     (if (not g$lab$20708$1MHp3Q)
                                       (g$raise-unbound-error$19784$1MHp3Q
                                         g$id$20707$1MHp3Q)
                                       (void))
                                     (if (not (if (eq? g$type$20710$1MHp3Q
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$19783$1MHp3Q
                                                           g$b$20709$1MHp3Q))))
                                                '#f))
                                       (g$syntax-violation$20382$1MHp3Q
                                         '#f
                                         '"not a record type"
                                         g$e$20701$1MHp3Q)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$19783$1MHp3Q
                                         g$b$20709$1MHp3Q)))))
                                (g$binding-type$19782$1MHp3Q
                                  g$b$20709$1MHp3Q))))
                            (g$label->binding$19780$1MHp3Q
                              g$lab$20708$1MHp3Q
                              g$r$20702$1MHp3Q))))
                        (g$id->label$19778$1MHp3Q g$id$20707$1MHp3Q))))
                    g$ls/false$20705$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20704$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20704$1MHp3Q
               '(_ any)))))
         g$e$20701$1MHp3Q))))
   (g$record-type-descriptor-transformer$20217$1MHp3Q
     g$record-type-descriptor-transformer$23813$1MHp3Q
     (case-lambda
       ((g$e$20711$1MHp3Q g$r$20712$1MHp3Q g$mr$20713$1MHp3Q)
        ((case-lambda
           ((g$t$20714$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20715$1MHp3Q)
                (if (if g$ls/false$20715$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20716$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$id$20716$1MHp3Q)))
                          g$ls/false$20715$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20717$1MHp3Q)
                       ((case-lambda
                          ((g$lab$20718$1MHp3Q)
                           ((case-lambda
                              ((g$b$20719$1MHp3Q)
                               ((case-lambda
                                  ((g$type$20720$1MHp3Q)
                                   (begin
                                     (if (not g$lab$20718$1MHp3Q)
                                       (g$raise-unbound-error$19784$1MHp3Q
                                         g$id$20717$1MHp3Q)
                                       (void))
                                     (if (not (if (eq? g$type$20720$1MHp3Q
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19783$1MHp3Q
                                                      g$b$20719$1MHp3Q)))
                                                '#f))
                                       (g$syntax-violation$20382$1MHp3Q
                                         '#f
                                         '"not a record type"
                                         g$e$20711$1MHp3Q)
                                       (void))
                                     (g$chi-expr$20281$1MHp3Q
                                       (car (g$binding-value$19783$1MHp3Q
                                              g$b$20719$1MHp3Q))
                                       g$r$20712$1MHp3Q
                                       g$mr$20713$1MHp3Q))))
                                (g$binding-type$19782$1MHp3Q
                                  g$b$20719$1MHp3Q))))
                            (g$label->binding$19780$1MHp3Q
                              g$lab$20718$1MHp3Q
                              g$r$20712$1MHp3Q))))
                        (g$id->label$19778$1MHp3Q g$id$20717$1MHp3Q))))
                    g$ls/false$20715$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20714$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20714$1MHp3Q
               '(_ any)))))
         g$e$20711$1MHp3Q))))
   (g$record-constructor-descriptor-transformer$20218$1MHp3Q
     g$record-constructor-descriptor-transformer$23814$1MHp3Q
     (case-lambda
       ((g$e$20721$1MHp3Q g$r$20722$1MHp3Q g$mr$20723$1MHp3Q)
        ((case-lambda
           ((g$t$20724$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20725$1MHp3Q)
                (if (if g$ls/false$20725$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20726$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$id$20726$1MHp3Q)))
                          g$ls/false$20725$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20727$1MHp3Q)
                       ((case-lambda
                          ((g$lab$20728$1MHp3Q)
                           ((case-lambda
                              ((g$b$20729$1MHp3Q)
                               ((case-lambda
                                  ((g$type$20730$1MHp3Q)
                                   (begin
                                     (if (not g$lab$20728$1MHp3Q)
                                       (g$raise-unbound-error$19784$1MHp3Q
                                         g$id$20727$1MHp3Q)
                                       (void))
                                     (if (not (if (eq? g$type$20730$1MHp3Q
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19783$1MHp3Q
                                                      g$b$20729$1MHp3Q)))
                                                '#f))
                                       (g$syntax-violation$20382$1MHp3Q
                                         '#f
                                         '"invalid type"
                                         g$e$20721$1MHp3Q)
                                       (void))
                                     (g$chi-expr$20281$1MHp3Q
                                       (g$cadr$12686$1MHp3Q
                                         (g$binding-value$19783$1MHp3Q
                                           g$b$20729$1MHp3Q))
                                       g$r$20722$1MHp3Q
                                       g$mr$20723$1MHp3Q))))
                                (g$binding-type$19782$1MHp3Q
                                  g$b$20729$1MHp3Q))))
                            (g$label->binding$19780$1MHp3Q
                              g$lab$20728$1MHp3Q
                              g$r$20722$1MHp3Q))))
                        (g$id->label$19778$1MHp3Q g$id$20727$1MHp3Q))))
                    g$ls/false$20725$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20724$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20724$1MHp3Q
               '(_ any)))))
         g$e$20721$1MHp3Q))))
   (g$when-macro$20219$1MHp3Q
     g$when-macro$23815$1MHp3Q
     (case-lambda
       ((g$e$20731$1MHp3Q)
        ((case-lambda
           ((g$t$20732$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20733$1MHp3Q)
                (if g$ls/false$20733$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$test$20734$1MHp3Q
                         g$e$20735$1MHp3Q
                         g$e*$20736$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (list
                           'if
                           g$test$20734$1MHp3Q
                           (cons
                             'begin
                             (cons
                               g$e$20735$1MHp3Q
                               g$e*$20736$1MHp3Q))))))
                    g$ls/false$20733$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20732$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20732$1MHp3Q
               '(_ any any . each-any)))))
         g$e$20731$1MHp3Q))))
   (g$unless-macro$20220$1MHp3Q
     g$unless-macro$23816$1MHp3Q
     (case-lambda
       ((g$e$20737$1MHp3Q)
        ((case-lambda
           ((g$t$20738$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20739$1MHp3Q)
                (if g$ls/false$20739$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$test$20740$1MHp3Q
                         g$e$20741$1MHp3Q
                         g$e*$20742$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (list
                           'if
                           (list 'not g$test$20740$1MHp3Q)
                           (cons
                             'begin
                             (cons
                               g$e$20741$1MHp3Q
                               g$e*$20742$1MHp3Q))))))
                    g$ls/false$20739$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20738$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20738$1MHp3Q
               '(_ any any . each-any)))))
         g$e$20737$1MHp3Q))))
   (g$if-transformer$20221$1MHp3Q
     g$if-transformer$23817$1MHp3Q
     (case-lambda
       ((g$e$20743$1MHp3Q g$r$20744$1MHp3Q g$mr$20745$1MHp3Q)
        ((case-lambda
           ((g$t$20746$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20747$1MHp3Q)
                (if g$ls/false$20747$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$e0$20748$1MHp3Q
                         g$e1$20749$1MHp3Q
                         g$e2$20750$1MHp3Q)
                       (list
                         'if
                         (g$chi-expr$20281$1MHp3Q
                           g$e0$20748$1MHp3Q
                           g$r$20744$1MHp3Q
                           g$mr$20745$1MHp3Q)
                         (g$chi-expr$20281$1MHp3Q
                           g$e1$20749$1MHp3Q
                           g$r$20744$1MHp3Q
                           g$mr$20745$1MHp3Q)
                         (g$chi-expr$20281$1MHp3Q
                           g$e2$20750$1MHp3Q
                           g$r$20744$1MHp3Q
                           g$mr$20745$1MHp3Q))))
                    g$ls/false$20747$1MHp3Q)
                  ((case-lambda
                     ((g$t$20751$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20752$1MHp3Q)
                          (if g$ls/false$20752$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$e0$20753$1MHp3Q g$e1$20754$1MHp3Q)
                                 (list
                                   'if
                                   (g$chi-expr$20281$1MHp3Q
                                     g$e0$20753$1MHp3Q
                                     g$r$20744$1MHp3Q
                                     g$mr$20745$1MHp3Q)
                                   (g$chi-expr$20281$1MHp3Q
                                     g$e1$20754$1MHp3Q
                                     g$r$20744$1MHp3Q
                                     g$mr$20745$1MHp3Q)
                                   (g$build-void$19691$1MHp3Q))))
                              g$ls/false$20752$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$20751$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20751$1MHp3Q
                         '(_ any any)))))
                   g$t$20746$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20746$1MHp3Q
               '(_ any any any)))))
         g$e$20743$1MHp3Q))))
   (g$case-macro$20222$1MHp3Q
     g$case-macro$23818$1MHp3Q
     (case-lambda
       ((g$e$20755$1MHp3Q)
        (letrec* ((g$build-last$20756$1MHp3Q
                    (case-lambda
                      ((g$cls$20776$1MHp3Q)
                       ((case-lambda
                          ((g$t$20777$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$20778$1MHp3Q)
                               (if g$ls/false$20778$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$e$20779$1MHp3Q
                                        g$e*$20780$1MHp3Q)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$20779$1MHp3Q
                                            g$e*$20780$1MHp3Q)))))
                                   g$ls/false$20778$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$20781$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$20782$1MHp3Q)
                                         (if g$ls/false$20782$1MHp3Q
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$20757$1MHp3Q
                                                  g$cls$20776$1MHp3Q
                                                  '(if #f #f))))
                                             g$ls/false$20782$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$20781$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$20781$1MHp3Q
                                        '_))))
                                  g$t$20777$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$20777$1MHp3Q
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$20776$1MHp3Q))))
                  (g$build-one$20757$1MHp3Q
                    (case-lambda
                      ((g$cls$20769$1MHp3Q g$k$20770$1MHp3Q)
                       ((case-lambda
                          ((g$t$20771$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$20772$1MHp3Q)
                               (if g$ls/false$20772$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$d*$20773$1MHp3Q
                                        g$e$20774$1MHp3Q
                                        g$e*$20775$1MHp3Q)
                                      (if (g$=$13381$1MHp3Q
                                            '1
                                            (length g$d*$20773$1MHp3Q))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$20773$1MHp3Q)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20774$1MHp3Q
                                              g$e*$20775$1MHp3Q))
                                          g$k$20770$1MHp3Q)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$20773$1MHp3Q))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20774$1MHp3Q
                                              g$e*$20775$1MHp3Q))
                                          g$k$20770$1MHp3Q))))
                                   g$ls/false$20772$1MHp3Q)
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"invalid syntax"
                                   g$t$20771$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$20771$1MHp3Q
                              '(each-any any . each-any)))))
                        g$cls$20769$1MHp3Q)))))
          ((case-lambda
             ((g$t$20758$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$20759$1MHp3Q)
                  (if g$ls/false$20759$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$expr$20760$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$20760$1MHp3Q))
                               '((if #f #f)))))))
                      g$ls/false$20759$1MHp3Q)
                    ((case-lambda
                       ((g$t$20761$1MHp3Q)
                        ((case-lambda
                           ((g$ls/false$20762$1MHp3Q)
                            (if g$ls/false$20762$1MHp3Q
                              (apply
                                (case-lambda
                                  ((g$expr$20763$1MHp3Q
                                     g$cls$20764$1MHp3Q
                                     g$cls*$20765$1MHp3Q)
                                   (g$bless$20226$1MHp3Q
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$20763$1MHp3Q))
                                       ((letrec ((g$f$20766$1MHp3Q
                                                   (case-lambda
                                                     ((g$cls$20767$1MHp3Q
                                                        g$cls*$20768$1MHp3Q)
                                                      (if (null?
                                                            g$cls*$20768$1MHp3Q)
                                                        (g$build-last$20756$1MHp3Q
                                                          g$cls$20767$1MHp3Q)
                                                        (g$build-one$20757$1MHp3Q
                                                          g$cls$20767$1MHp3Q
                                                          (g$f$20766$1MHp3Q
                                                            (car g$cls*$20768$1MHp3Q)
                                                            (cdr g$cls*$20768$1MHp3Q))))))))
                                          g$f$20766$1MHp3Q)
                                        g$cls$20764$1MHp3Q
                                        g$cls*$20765$1MHp3Q)))))
                                g$ls/false$20762$1MHp3Q)
                              (g$syntax-violation$20382$1MHp3Q
                                '#f
                                '"invalid syntax"
                                g$t$20761$1MHp3Q))))
                         (g$syntax-dispatch$20263$1MHp3Q
                           g$t$20761$1MHp3Q
                           '(_ any any . each-any)))))
                     g$t$20758$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$20758$1MHp3Q
                 '(_ any)))))
           g$e$20755$1MHp3Q)))))
   (g$quote-transformer$20223$1MHp3Q
     g$quote-transformer$23819$1MHp3Q
     (case-lambda
       ((g$e$20783$1MHp3Q g$r$20784$1MHp3Q g$mr$20785$1MHp3Q)
        ((case-lambda
           ((g$t$20786$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20787$1MHp3Q)
                (if g$ls/false$20787$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$datum$20788$1MHp3Q)
                       (list
                         'quote
                         (g$stx->datum$19776$1MHp3Q
                           g$datum$20788$1MHp3Q))))
                    g$ls/false$20787$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20786$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20786$1MHp3Q
               '(_ any)))))
         g$e$20783$1MHp3Q))))
   (g$case-lambda-transformer$20224$1MHp3Q
     g$case-lambda-transformer$23820$1MHp3Q
     (case-lambda
       ((g$e$20789$1MHp3Q g$r$20790$1MHp3Q g$mr$20791$1MHp3Q)
        ((case-lambda
           ((g$t$20792$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20793$1MHp3Q)
                (if g$ls/false$20793$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$fmls*$20794$1MHp3Q
                         g$b*$20795$1MHp3Q
                         g$b**$20796$1MHp3Q)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$20285$1MHp3Q
                              g$e$20789$1MHp3Q
                              g$fmls*$20794$1MHp3Q
                              (g$map$11835$1MHp3Q
                                cons
                                g$b*$20795$1MHp3Q
                                g$b**$20796$1MHp3Q)
                              g$r$20790$1MHp3Q
                              g$mr$20791$1MHp3Q)))
                         (case-lambda
                           ((g$fmls*$20799$1MHp3Q g$body*$20800$1MHp3Q)
                            ((case-lambda
                               ((g$body*$20801$1MHp3Q
                                  g$fmls*$20802$1MHp3Q)
                                (g$build-case-lambda$19688$1MHp3Q
                                  '#f
                                  g$fmls*$20802$1MHp3Q
                                  g$body*$20801$1MHp3Q)))
                             g$body*$20800$1MHp3Q
                             g$fmls*$20799$1MHp3Q))))))
                    g$ls/false$20793$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20792$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20792$1MHp3Q
               '(_ . #(each (any any . each-any)))))))
         g$e$20789$1MHp3Q))))
   (g$lambda-transformer$20225$1MHp3Q
     g$lambda-transformer$23821$1MHp3Q
     (case-lambda
       ((g$e$20803$1MHp3Q g$r$20804$1MHp3Q g$mr$20805$1MHp3Q)
        ((case-lambda
           ((g$t$20806$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20807$1MHp3Q)
                (if g$ls/false$20807$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$fmls$20808$1MHp3Q
                         g$b$20809$1MHp3Q
                         g$b*$20810$1MHp3Q)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$20284$1MHp3Q
                              g$e$20803$1MHp3Q
                              g$fmls$20808$1MHp3Q
                              (cons g$b$20809$1MHp3Q g$b*$20810$1MHp3Q)
                              g$r$20804$1MHp3Q
                              g$mr$20805$1MHp3Q)))
                         (case-lambda
                           ((g$fmls$20813$1MHp3Q g$body$20814$1MHp3Q)
                            ((case-lambda
                               ((g$body$20815$1MHp3Q
                                  g$fmls$20816$1MHp3Q)
                                (g$build-lambda$19687$1MHp3Q
                                  '#f
                                  g$fmls$20816$1MHp3Q
                                  g$body$20815$1MHp3Q)))
                             g$body$20814$1MHp3Q
                             g$fmls$20813$1MHp3Q))))))
                    g$ls/false$20807$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20806$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20806$1MHp3Q
               '(_ any any . each-any)))))
         g$e$20803$1MHp3Q))))
   (g$bless$20226$1MHp3Q
     g$bless$23822$1MHp3Q
     (case-lambda
       ((g$x$20817$1MHp3Q)
        (g$mkstx$19753$1MHp3Q
          ((letrec ((g$f$20818$1MHp3Q
                      (case-lambda
                        ((g$x$20819$1MHp3Q)
                         (if (g$stx?$19737$1MHp3Q g$x$20819$1MHp3Q)
                           g$x$20819$1MHp3Q
                           (if (pair? g$x$20819$1MHp3Q)
                             (cons
                               (g$f$20818$1MHp3Q (car g$x$20819$1MHp3Q))
                               (g$f$20818$1MHp3Q
                                 (cdr g$x$20819$1MHp3Q)))
                             (if (g$symbol?$12667$1MHp3Q
                                   g$x$20819$1MHp3Q)
                               (g$scheme-stx$20206$1MHp3Q
                                 g$x$20819$1MHp3Q)
                               (if (g$vector?$12665$1MHp3Q
                                     g$x$20819$1MHp3Q)
                                 (g$vector-map$12734$1MHp3Q
                                   g$f$20818$1MHp3Q
                                   g$x$20819$1MHp3Q)
                                 (begin '#f g$x$20819$1MHp3Q)))))))))
             g$f$20818$1MHp3Q)
           g$x$20817$1MHp3Q)
          '()
          '()
          '()))))
   (g$with-syntax-macro$20227$1MHp3Q
     g$with-syntax-macro$23823$1MHp3Q
     (case-lambda
       ((g$e$20820$1MHp3Q)
        ((case-lambda
           ((g$t$20821$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20822$1MHp3Q)
                (if g$ls/false$20822$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$pat*$20823$1MHp3Q
                         g$expr*$20824$1MHp3Q
                         g$b$20825$1MHp3Q
                         g$b*$20826$1MHp3Q)
                       ((case-lambda
                          ((g$idn*$20827$1MHp3Q)
                           (begin
                             (g$verify-formals$20283$1MHp3Q
                               (g$map$11835$1MHp3Q
                                 car
                                 g$idn*$20827$1MHp3Q)
                               g$e$20820$1MHp3Q)
                             ((case-lambda
                                ((g$t*$20828$1MHp3Q)
                                 (g$bless$20226$1MHp3Q
                                   (list
                                     'let
                                     (g$map$11835$1MHp3Q
                                       list
                                       g$t*$20828$1MHp3Q
                                       g$expr*$20824$1MHp3Q)
                                     ((letrec ((g$f$20829$1MHp3Q
                                                 (case-lambda
                                                   ((g$pat*$20830$1MHp3Q
                                                      g$t*$20831$1MHp3Q)
                                                    (if (null?
                                                          g$pat*$20830$1MHp3Q)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$20825$1MHp3Q
                                                          g$b*$20826$1MHp3Q))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$20831$1MHp3Q)
                                                          '()
                                                          (list
                                                            (car g$pat*$20830$1MHp3Q)
                                                            (g$f$20829$1MHp3Q
                                                              (cdr g$pat*$20830$1MHp3Q)
                                                              (cdr g$t*$20831$1MHp3Q)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$20830$1MHp3Q))
                                                              (car g$t*$20831$1MHp3Q))))))))))
                                        g$f$20829$1MHp3Q)
                                      g$pat*$20823$1MHp3Q
                                      g$t*$20828$1MHp3Q)))))
                              (g$generate-temporaries$20372$1MHp3Q
                                g$expr*$20824$1MHp3Q)))))
                        ((letrec ((g$f$20832$1MHp3Q
                                    (case-lambda
                                      ((g$pat*$20833$1MHp3Q)
                                       (if (null? g$pat*$20833$1MHp3Q)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$20262$1MHp3Q
                                                  (car g$pat*$20833$1MHp3Q)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$20836$1MHp3Q
                                                  g$idn*$20837$1MHp3Q)
                                                ((case-lambda
                                                   ((g$idn*$20838$1MHp3Q
                                                      g$pat$20839$1MHp3Q)
                                                    (append
                                                      g$idn*$20838$1MHp3Q
                                                      (g$f$20832$1MHp3Q
                                                        (cdr g$pat*$20833$1MHp3Q)))))
                                                 g$idn*$20837$1MHp3Q
                                                 g$pat$20836$1MHp3Q))))))))))
                           g$f$20832$1MHp3Q)
                         g$pat*$20823$1MHp3Q))))
                    g$ls/false$20822$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20821$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20821$1MHp3Q
               '(_ #(each (any any)) any . each-any)))))
         g$e$20820$1MHp3Q))))
   (g$invalid-fmls-error$20228$1MHp3Q
     g$invalid-fmls-error$23824$1MHp3Q
     (case-lambda
       ((g$stx$20840$1MHp3Q g$fmls$20841$1MHp3Q)
        ((case-lambda
           ((g$t$20842$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20843$1MHp3Q)
                (if g$ls/false$20843$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$id*$20844$1MHp3Q g$last$20845$1MHp3Q)
                       ((letrec ((g$f$20846$1MHp3Q
                                   (case-lambda
                                     ((g$id*$20847$1MHp3Q)
                                      (if (null? g$id*$20847$1MHp3Q)
                                        (values)
                                        (if (not (g$id?$19765$1MHp3Q
                                                   (car g$id*$20847$1MHp3Q)))
                                          (g$syntax-violation$20382$1MHp3Q
                                            '#f
                                            '"not an identifier"
                                            g$stx$20840$1MHp3Q
                                            (car g$id*$20847$1MHp3Q))
                                          (begin
                                            '#f
                                            (g$f$20846$1MHp3Q
                                              (cdr g$id*$20847$1MHp3Q))
                                            (if (g$bound-id-member?$19772$1MHp3Q
                                                  (car g$id*$20847$1MHp3Q)
                                                  (cdr g$id*$20847$1MHp3Q))
                                              (g$syntax-violation$20382$1MHp3Q
                                                '#f
                                                '"duplicate binding"
                                                g$stx$20840$1MHp3Q
                                                (car g$id*$20847$1MHp3Q))
                                              (void)))))))))
                          g$f$20846$1MHp3Q)
                        (if (g$id?$19765$1MHp3Q g$last$20845$1MHp3Q)
                          (cons g$last$20845$1MHp3Q g$id*$20844$1MHp3Q)
                          (if (g$syntax-null?$19760$1MHp3Q
                                g$last$20845$1MHp3Q)
                            g$id*$20844$1MHp3Q
                            (begin
                              '#f
                              (g$syntax-violation$20382$1MHp3Q
                                '#f
                                '"not an identifier"
                                g$stx$20840$1MHp3Q
                                g$last$20845$1MHp3Q)))))))
                    g$ls/false$20843$1MHp3Q)
                  ((case-lambda
                     ((g$t$20848$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20849$1MHp3Q)
                          (if g$ls/false$20849$1MHp3Q
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"malformed binding form"
                                   g$stx$20840$1MHp3Q
                                   g$fmls$20841$1MHp3Q)))
                              g$ls/false$20849$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$20848$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20848$1MHp3Q
                         '_))))
                   g$t$20842$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20842$1MHp3Q
               '#(each+ any () any)))))
         g$fmls$20841$1MHp3Q))))
   (g$let-macro$20229$1MHp3Q
     g$let-macro$23825$1MHp3Q
     (case-lambda
       ((g$stx$20850$1MHp3Q)
        ((case-lambda
           ((g$t$20851$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20852$1MHp3Q)
                (if g$ls/false$20852$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$lhs*$20853$1MHp3Q
                         g$rhs*$20854$1MHp3Q
                         g$b$20855$1MHp3Q
                         g$b*$20856$1MHp3Q)
                       (if (g$valid-bound-ids?$19770$1MHp3Q
                             g$lhs*$20853$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$20853$1MHp3Q
                                 (cons
                                   g$b$20855$1MHp3Q
                                   g$b*$20856$1MHp3Q)))
                             g$rhs*$20854$1MHp3Q))
                         (g$invalid-fmls-error$20228$1MHp3Q
                           g$stx$20850$1MHp3Q
                           g$lhs*$20853$1MHp3Q))))
                    g$ls/false$20852$1MHp3Q)
                  ((case-lambda
                     ((g$t$20857$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20858$1MHp3Q)
                          (if (if g$ls/false$20858$1MHp3Q
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$20859$1MHp3Q
                                         g$lhs*$20860$1MHp3Q
                                         g$rhs*$20861$1MHp3Q
                                         g$b$20862$1MHp3Q
                                         g$b*$20863$1MHp3Q)
                                       (g$id?$19765$1MHp3Q
                                         g$f$20859$1MHp3Q)))
                                    g$ls/false$20858$1MHp3Q))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$20864$1MHp3Q
                                   g$lhs*$20865$1MHp3Q
                                   g$rhs*$20866$1MHp3Q
                                   g$b$20867$1MHp3Q
                                   g$b*$20868$1MHp3Q)
                                 (if (g$valid-bound-ids?$19770$1MHp3Q
                                       g$lhs*$20865$1MHp3Q)
                                   (g$bless$20226$1MHp3Q
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$20864$1MHp3Q
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$20865$1MHp3Q
                                                 (cons
                                                   g$b$20867$1MHp3Q
                                                   g$b*$20868$1MHp3Q)))))
                                         g$f$20864$1MHp3Q)
                                       g$rhs*$20866$1MHp3Q))
                                   (g$invalid-fmls-error$20228$1MHp3Q
                                     g$stx$20850$1MHp3Q
                                     g$lhs*$20865$1MHp3Q))))
                              g$ls/false$20858$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$20857$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20857$1MHp3Q
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$20851$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20851$1MHp3Q
               '(_ #(each (any any)) any . each-any)))))
         g$stx$20850$1MHp3Q))))
   (g$let-values-macro$20230$1MHp3Q
     g$let-values-macro$23826$1MHp3Q
     (case-lambda
       ((g$stx$20869$1MHp3Q)
        (letrec* ((g$rename$20870$1MHp3Q
                    (case-lambda
                      ((g$x$20921$1MHp3Q
                         g$old*$20922$1MHp3Q
                         g$new*$20923$1MHp3Q)
                       (begin
                         (if (not (g$id?$19765$1MHp3Q g$x$20921$1MHp3Q))
                           (g$syntax-violation$20382$1MHp3Q
                             '#f
                             '"not an indentifier"
                             g$stx$20869$1MHp3Q
                             g$x$20921$1MHp3Q)
                           (void))
                         (if (g$bound-id-member?$19772$1MHp3Q
                               g$x$20921$1MHp3Q
                               g$old*$20922$1MHp3Q)
                           (g$syntax-violation$20382$1MHp3Q
                             '#f
                             '"duplicate binding"
                             g$stx$20869$1MHp3Q
                             g$x$20921$1MHp3Q)
                           (void))
                         ((case-lambda
                            ((g$y$20924$1MHp3Q)
                             (values
                               g$y$20924$1MHp3Q
                               (cons
                                 g$x$20921$1MHp3Q
                                 g$old*$20922$1MHp3Q)
                               (cons
                                 g$y$20924$1MHp3Q
                                 g$new*$20923$1MHp3Q))))
                          (gensym
                            (g$syntax->datum$20385$1MHp3Q
                              g$x$20921$1MHp3Q)))))))
                  (g$rename*$20871$1MHp3Q
                    (case-lambda
                      ((g$x*$20912$1MHp3Q
                         g$old*$20913$1MHp3Q
                         g$new*$20914$1MHp3Q)
                       (if (null? g$x*$20912$1MHp3Q)
                         (values
                           '()
                           g$old*$20913$1MHp3Q
                           g$new*$20914$1MHp3Q)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$20870$1MHp3Q
                                  (car g$x*$20912$1MHp3Q)
                                  g$old*$20913$1MHp3Q
                                  g$new*$20914$1MHp3Q)))
                             (case-lambda
                               ((g$x$20915$1MHp3Q
                                  g$old*$20916$1MHp3Q
                                  g$new*$20917$1MHp3Q)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$20871$1MHp3Q
                                       (cdr g$x*$20912$1MHp3Q)
                                       g$old*$20916$1MHp3Q
                                       g$new*$20917$1MHp3Q)))
                                  (case-lambda
                                    ((g$x*$20918$1MHp3Q
                                       g$old*$20919$1MHp3Q
                                       g$new*$20920$1MHp3Q)
                                     (values
                                       (cons
                                         g$x$20915$1MHp3Q
                                         g$x*$20918$1MHp3Q)
                                       g$old*$20919$1MHp3Q
                                       g$new*$20920$1MHp3Q)))))))))))))
          ((case-lambda
             ((g$t$20872$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$20873$1MHp3Q)
                  (if g$ls/false$20873$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$b$20874$1MHp3Q g$b*$20875$1MHp3Q)
                         (g$cons*$11837$1MHp3Q
                           (g$bless$20226$1MHp3Q 'let)
                           '()
                           g$b$20874$1MHp3Q
                           g$b*$20875$1MHp3Q)))
                      g$ls/false$20873$1MHp3Q)
                    ((case-lambda
                       ((g$t$20876$1MHp3Q)
                        ((case-lambda
                           ((g$ls/false$20877$1MHp3Q)
                            (if g$ls/false$20877$1MHp3Q
                              (apply
                                (case-lambda
                                  ((g$lhs*$20878$1MHp3Q
                                     g$rhs*$20879$1MHp3Q
                                     g$b$20880$1MHp3Q
                                     g$b*$20881$1MHp3Q)
                                   (g$bless$20226$1MHp3Q
                                     ((letrec ((g$f$20882$1MHp3Q
                                                 (case-lambda
                                                   ((g$lhs*$20883$1MHp3Q
                                                      g$rhs*$20884$1MHp3Q
                                                      g$old*$20885$1MHp3Q
                                                      g$new*$20886$1MHp3Q)
                                                    (if (null?
                                                          g$lhs*$20883$1MHp3Q)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11835$1MHp3Q
                                                            list
                                                            g$old*$20885$1MHp3Q
                                                            g$new*$20886$1MHp3Q)
                                                          (cons
                                                            g$b$20880$1MHp3Q
                                                            g$b*$20881$1MHp3Q)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$20887$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$ls/false$20888$1MHp3Q)
                                                                (if g$ls/false$20888$1MHp3Q
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$20889$1MHp3Q)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$20871$1MHp3Q
                                                                              g$x*$20889$1MHp3Q
                                                                              g$old*$20885$1MHp3Q
                                                                              g$new*$20886$1MHp3Q)))
                                                                         (case-lambda
                                                                           ((g$y*$20893$1MHp3Q
                                                                              g$old*$20894$1MHp3Q
                                                                              g$new*$20895$1MHp3Q)
                                                                            ((case-lambda
                                                                               ((g$new*$20896$1MHp3Q
                                                                                  g$old*$20897$1MHp3Q
                                                                                  g$y*$20898$1MHp3Q)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$20884$1MHp3Q))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$20898$1MHp3Q
                                                                                    (g$f$20882$1MHp3Q
                                                                                      (cdr g$lhs*$20883$1MHp3Q)
                                                                                      (cdr g$rhs*$20884$1MHp3Q)
                                                                                      g$old*$20897$1MHp3Q
                                                                                      g$new*$20896$1MHp3Q)))))
                                                                             g$new*$20895$1MHp3Q
                                                                             g$old*$20894$1MHp3Q
                                                                             g$y*$20893$1MHp3Q))))))
                                                                    g$ls/false$20888$1MHp3Q)
                                                                  ((case-lambda
                                                                     ((g$t$20899$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$ls/false$20900$1MHp3Q)
                                                                          (if g$ls/false$20900$1MHp3Q
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$20901$1MHp3Q
                                                                                   g$x$20902$1MHp3Q)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$20870$1MHp3Q
                                                                                        g$x$20902$1MHp3Q
                                                                                        g$old*$20885$1MHp3Q
                                                                                        g$new*$20886$1MHp3Q)))
                                                                                   (case-lambda
                                                                                     ((g$y$20903$1MHp3Q
                                                                                        g$old*$20904$1MHp3Q
                                                                                        g$new*$20905$1MHp3Q)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$20871$1MHp3Q
                                                                                             g$x*$20901$1MHp3Q
                                                                                             g$old*$20904$1MHp3Q
                                                                                             g$new*$20905$1MHp3Q)))
                                                                                        (case-lambda
                                                                                          ((g$y*$20906$1MHp3Q
                                                                                             g$old*$20907$1MHp3Q
                                                                                             g$new*$20908$1MHp3Q)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$20884$1MHp3Q))
                                                                                             (list
                                                                                               'lambda
                                                                                               (append
                                                                                                 g$y*$20906$1MHp3Q
                                                                                                 g$y$20903$1MHp3Q)
                                                                                               (g$f$20882$1MHp3Q
                                                                                                 (cdr g$lhs*$20883$1MHp3Q)
                                                                                                 (cdr g$rhs*$20884$1MHp3Q)
                                                                                                 g$old*$20907$1MHp3Q
                                                                                                 g$new*$20908$1MHp3Q)))))))))))
                                                                              g$ls/false$20900$1MHp3Q)
                                                                            ((case-lambda
                                                                               ((g$t$20909$1MHp3Q)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$20910$1MHp3Q)
                                                                                    (if g$ls/false$20910$1MHp3Q
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$20911$1MHp3Q)
                                                                                           (g$syntax-violation$20382$1MHp3Q
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$20869$1MHp3Q
                                                                                             g$others$20911$1MHp3Q)))
                                                                                        g$ls/false$20910$1MHp3Q)
                                                                                      (g$syntax-violation$20382$1MHp3Q
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$20909$1MHp3Q))))
                                                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                                                   g$t$20909$1MHp3Q
                                                                                   'any))))
                                                                             g$t$20899$1MHp3Q))))
                                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                                         g$t$20899$1MHp3Q
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$20887$1MHp3Q))))
                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                               g$t$20887$1MHp3Q
                                                               'each-any))))
                                                         (car g$lhs*$20883$1MHp3Q))))))))
                                        g$f$20882$1MHp3Q)
                                      g$lhs*$20878$1MHp3Q
                                      g$rhs*$20879$1MHp3Q
                                      '()
                                      '()))))
                                g$ls/false$20877$1MHp3Q)
                              (g$syntax-violation$20382$1MHp3Q
                                '#f
                                '"invalid syntax"
                                g$t$20876$1MHp3Q))))
                         (g$syntax-dispatch$20263$1MHp3Q
                           g$t$20876$1MHp3Q
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20872$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$20872$1MHp3Q
                 '(_ () any . each-any)))))
           g$stx$20869$1MHp3Q)))))
   (g$let*-values-macro$20231$1MHp3Q
     g$let*-values-macro$23827$1MHp3Q
     (case-lambda
       ((g$stx$20925$1MHp3Q)
        (letrec* ((g$check$20926$1MHp3Q
                    (case-lambda
                      ((g$x*$20950$1MHp3Q)
                       (if (not (null? g$x*$20950$1MHp3Q))
                         ((case-lambda
                            ((g$x$20951$1MHp3Q)
                             (begin
                               (if (not (g$id?$19765$1MHp3Q
                                          g$x$20951$1MHp3Q))
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"not an identifier"
                                   g$stx$20925$1MHp3Q
                                   g$x$20951$1MHp3Q)
                                 (void))
                               (g$check$20926$1MHp3Q
                                 (cdr g$x*$20950$1MHp3Q))
                               (if (g$bound-id-member?$19772$1MHp3Q
                                     g$x$20951$1MHp3Q
                                     (cdr g$x*$20950$1MHp3Q))
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$20925$1MHp3Q
                                   g$x$20951$1MHp3Q)
                                 (void)))))
                          (car g$x*$20950$1MHp3Q))
                         (void))))))
          ((case-lambda
             ((g$t$20927$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$20928$1MHp3Q)
                  (if g$ls/false$20928$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$b$20929$1MHp3Q g$b*$20930$1MHp3Q)
                         (g$cons*$11837$1MHp3Q
                           (g$bless$20226$1MHp3Q 'let)
                           '()
                           g$b$20929$1MHp3Q
                           g$b*$20930$1MHp3Q)))
                      g$ls/false$20928$1MHp3Q)
                    ((case-lambda
                       ((g$t$20931$1MHp3Q)
                        ((case-lambda
                           ((g$ls/false$20932$1MHp3Q)
                            (if g$ls/false$20932$1MHp3Q
                              (apply
                                (case-lambda
                                  ((g$lhs*$20933$1MHp3Q
                                     g$rhs*$20934$1MHp3Q
                                     g$b$20935$1MHp3Q
                                     g$b*$20936$1MHp3Q)
                                   (g$bless$20226$1MHp3Q
                                     ((letrec ((g$f$20937$1MHp3Q
                                                 (case-lambda
                                                   ((g$lhs*$20938$1MHp3Q
                                                      g$rhs*$20939$1MHp3Q)
                                                    (if (null?
                                                          g$lhs*$20938$1MHp3Q)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$20935$1MHp3Q
                                                          g$b*$20936$1MHp3Q))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$20940$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$ls/false$20941$1MHp3Q)
                                                                (if g$ls/false$20941$1MHp3Q
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$20942$1MHp3Q)
                                                                       (begin
                                                                         (g$check$20926$1MHp3Q
                                                                           g$x*$20942$1MHp3Q)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$20939$1MHp3Q))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$20942$1MHp3Q
                                                                             (g$f$20937$1MHp3Q
                                                                               (cdr g$lhs*$20938$1MHp3Q)
                                                                               (cdr g$rhs*$20939$1MHp3Q)))))))
                                                                    g$ls/false$20941$1MHp3Q)
                                                                  ((case-lambda
                                                                     ((g$t$20943$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$ls/false$20944$1MHp3Q)
                                                                          (if g$ls/false$20944$1MHp3Q
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$20945$1MHp3Q
                                                                                   g$x$20946$1MHp3Q)
                                                                                 (begin
                                                                                   (g$check$20926$1MHp3Q
                                                                                     (cons
                                                                                       g$x$20946$1MHp3Q
                                                                                       g$x*$20945$1MHp3Q))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$20939$1MHp3Q))
                                                                                     (list
                                                                                       'lambda
                                                                                       (append
                                                                                         g$x*$20945$1MHp3Q
                                                                                         g$x$20946$1MHp3Q)
                                                                                       (g$f$20937$1MHp3Q
                                                                                         (cdr g$lhs*$20938$1MHp3Q)
                                                                                         (cdr g$rhs*$20939$1MHp3Q)))))))
                                                                              g$ls/false$20944$1MHp3Q)
                                                                            ((case-lambda
                                                                               ((g$t$20947$1MHp3Q)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$20948$1MHp3Q)
                                                                                    (if g$ls/false$20948$1MHp3Q
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$20949$1MHp3Q)
                                                                                           (g$syntax-violation$20382$1MHp3Q
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$20925$1MHp3Q
                                                                                             g$others$20949$1MHp3Q)))
                                                                                        g$ls/false$20948$1MHp3Q)
                                                                                      (g$syntax-violation$20382$1MHp3Q
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$20947$1MHp3Q))))
                                                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                                                   g$t$20947$1MHp3Q
                                                                                   'any))))
                                                                             g$t$20943$1MHp3Q))))
                                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                                         g$t$20943$1MHp3Q
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$20940$1MHp3Q))))
                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                               g$t$20940$1MHp3Q
                                                               'each-any))))
                                                         (car g$lhs*$20938$1MHp3Q))))))))
                                        g$f$20937$1MHp3Q)
                                      g$lhs*$20933$1MHp3Q
                                      g$rhs*$20934$1MHp3Q))))
                                g$ls/false$20932$1MHp3Q)
                              (g$syntax-violation$20382$1MHp3Q
                                '#f
                                '"invalid syntax"
                                g$t$20931$1MHp3Q))))
                         (g$syntax-dispatch$20263$1MHp3Q
                           g$t$20931$1MHp3Q
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20927$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$20927$1MHp3Q
                 '(_ () any . each-any)))))
           g$stx$20925$1MHp3Q)))))
   (g$trace-lambda-macro$20232$1MHp3Q
     g$trace-lambda-macro$23828$1MHp3Q
     (case-lambda
       ((g$stx$20952$1MHp3Q)
        ((case-lambda
           ((g$t$20953$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20954$1MHp3Q)
                (if g$ls/false$20954$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$who$20955$1MHp3Q
                         g$fmls$20956$1MHp3Q
                         g$b$20957$1MHp3Q
                         g$b*$20958$1MHp3Q)
                       (if (g$valid-bound-ids?$19770$1MHp3Q
                             g$fmls$20956$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$20955$1MHp3Q)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$20956$1MHp3Q
                                 (cons
                                   g$b$20957$1MHp3Q
                                   g$b*$20958$1MHp3Q)))))
                         (g$invalid-fmls-error$20228$1MHp3Q
                           g$stx$20952$1MHp3Q
                           g$fmls$20956$1MHp3Q))))
                    g$ls/false$20954$1MHp3Q)
                  ((case-lambda
                     ((g$t$20959$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20960$1MHp3Q)
                          (if g$ls/false$20960$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$who$20961$1MHp3Q
                                   g$fmls$20962$1MHp3Q
                                   g$last$20963$1MHp3Q
                                   g$b$20964$1MHp3Q
                                   g$b*$20965$1MHp3Q)
                                 (if (g$valid-bound-ids?$19770$1MHp3Q
                                       (cons
                                         g$last$20963$1MHp3Q
                                         g$fmls$20962$1MHp3Q))
                                   (g$bless$20226$1MHp3Q
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$20961$1MHp3Q)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$20962$1MHp3Q
                                             g$last$20963$1MHp3Q)
                                           (cons
                                             g$b$20964$1MHp3Q
                                             g$b*$20965$1MHp3Q)))))
                                   (g$invalid-fmls-error$20228$1MHp3Q
                                     g$stx$20952$1MHp3Q
                                     (append
                                       g$fmls$20962$1MHp3Q
                                       g$last$20963$1MHp3Q)))))
                              g$ls/false$20960$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$20959$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20959$1MHp3Q
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$20953$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20953$1MHp3Q
               '(_ any each-any any . each-any)))))
         g$stx$20952$1MHp3Q))))
   (g$trace-define-macro$20233$1MHp3Q
     g$trace-define-macro$23829$1MHp3Q
     (case-lambda
       ((g$stx$20966$1MHp3Q)
        ((case-lambda
           ((g$t$20967$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20968$1MHp3Q)
                (if g$ls/false$20968$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$who$20969$1MHp3Q
                         g$fmls$20970$1MHp3Q
                         g$b$20971$1MHp3Q
                         g$b*$20972$1MHp3Q)
                       (if (g$valid-bound-ids?$19770$1MHp3Q
                             g$fmls$20970$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (list
                             'define
                             g$who$20969$1MHp3Q
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$20969$1MHp3Q)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$20970$1MHp3Q
                                   (cons
                                     g$b$20971$1MHp3Q
                                     g$b*$20972$1MHp3Q))))))
                         (g$invalid-fmls-error$20228$1MHp3Q
                           g$stx$20966$1MHp3Q
                           g$fmls$20970$1MHp3Q))))
                    g$ls/false$20968$1MHp3Q)
                  ((case-lambda
                     ((g$t$20973$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$20974$1MHp3Q)
                          (if g$ls/false$20974$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$who$20975$1MHp3Q
                                   g$fmls$20976$1MHp3Q
                                   g$last$20977$1MHp3Q
                                   g$b$20978$1MHp3Q
                                   g$b*$20979$1MHp3Q)
                                 (if (g$valid-bound-ids?$19770$1MHp3Q
                                       (cons
                                         g$last$20977$1MHp3Q
                                         g$fmls$20976$1MHp3Q))
                                   (g$bless$20226$1MHp3Q
                                     (list
                                       'define
                                       g$who$20975$1MHp3Q
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$20975$1MHp3Q)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$20976$1MHp3Q
                                               g$last$20977$1MHp3Q)
                                             (cons
                                               g$b$20978$1MHp3Q
                                               g$b*$20979$1MHp3Q))))))
                                   (g$invalid-fmls-error$20228$1MHp3Q
                                     g$stx$20966$1MHp3Q
                                     (append
                                       g$fmls$20976$1MHp3Q
                                       g$last$20977$1MHp3Q)))))
                              g$ls/false$20974$1MHp3Q)
                            ((case-lambda
                               ((g$t$20980$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$20981$1MHp3Q)
                                    (if g$ls/false$20981$1MHp3Q
                                      (apply
                                        (case-lambda
                                          ((g$who$20982$1MHp3Q
                                             g$expr$20983$1MHp3Q)
                                           (if (g$id?$19765$1MHp3Q
                                                 g$who$20982$1MHp3Q)
                                             (g$bless$20226$1MHp3Q
                                               (list
                                                 'define
                                                 g$who$20982$1MHp3Q
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$20983$1MHp3Q))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$20982$1MHp3Q)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$20382$1MHp3Q
                                               '#f
                                               '"invalid name"
                                               g$stx$20966$1MHp3Q))))
                                        g$ls/false$20981$1MHp3Q)
                                      (g$syntax-violation$20382$1MHp3Q
                                        '#f
                                        '"invalid syntax"
                                        g$t$20980$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$20980$1MHp3Q
                                   '(_ any any)))))
                             g$t$20973$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$20973$1MHp3Q
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$20967$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20967$1MHp3Q
               '(_ (any . each-any) any . each-any)))))
         g$stx$20966$1MHp3Q))))
   (g$trace-define-syntax-macro$20234$1MHp3Q
     g$trace-define-syntax-macro$23830$1MHp3Q
     (case-lambda
       ((g$stx$20984$1MHp3Q)
        ((case-lambda
           ((g$t$20985$1MHp3Q)
            ((case-lambda
               ((g$ls/false$20986$1MHp3Q)
                (if g$ls/false$20986$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$who$20987$1MHp3Q g$expr$20988$1MHp3Q)
                       (if (g$id?$19765$1MHp3Q g$who$20987$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (list
                             'define-syntax
                             g$who$20987$1MHp3Q
                             (list
                               'make-traced-macro
                               (list 'quote g$who$20987$1MHp3Q)
                               g$expr$20988$1MHp3Q)))
                         (g$syntax-violation$20382$1MHp3Q
                           '#f
                           '"invalid name"
                           g$stx$20984$1MHp3Q))))
                    g$ls/false$20986$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$20985$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$20985$1MHp3Q
               '(_ any any)))))
         g$stx$20984$1MHp3Q))))
   (g$trace-let/rec-syntax$20235$1MHp3Q
     g$trace-let/rec-syntax$23831$1MHp3Q
     (case-lambda
       ((g$who$20989$1MHp3Q)
        (case-lambda
          ((g$stx$20990$1MHp3Q)
           ((case-lambda
              ((g$t$20991$1MHp3Q)
               ((case-lambda
                  ((g$ls/false$20992$1MHp3Q)
                   (if g$ls/false$20992$1MHp3Q
                     (apply
                       (case-lambda
                         ((g$lhs*$20993$1MHp3Q
                            g$rhs*$20994$1MHp3Q
                            g$b$20995$1MHp3Q
                            g$b*$20996$1MHp3Q)
                          (if (g$valid-bound-ids?$19770$1MHp3Q
                                g$lhs*$20993$1MHp3Q)
                            ((case-lambda
                               ((g$rhs*$20997$1MHp3Q)
                                (g$bless$20226$1MHp3Q
                                  (cons
                                    g$who$20989$1MHp3Q
                                    (cons
                                      (g$map$11835$1MHp3Q
                                        list
                                        g$lhs*$20993$1MHp3Q
                                        g$rhs*$20997$1MHp3Q)
                                      (cons
                                        g$b$20995$1MHp3Q
                                        g$b*$20996$1MHp3Q))))))
                             (g$map$11835$1MHp3Q
                               (case-lambda
                                 ((g$lhs$20998$1MHp3Q
                                    g$rhs$20999$1MHp3Q)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$20998$1MHp3Q)
                                    g$rhs$20999$1MHp3Q)))
                               g$lhs*$20993$1MHp3Q
                               g$rhs*$20994$1MHp3Q))
                            (g$invalid-fmls-error$20228$1MHp3Q
                              g$stx$20990$1MHp3Q
                              g$lhs*$20993$1MHp3Q))))
                       g$ls/false$20992$1MHp3Q)
                     (g$syntax-violation$20382$1MHp3Q
                       '#f
                       '"invalid syntax"
                       g$t$20991$1MHp3Q))))
                (g$syntax-dispatch$20263$1MHp3Q
                  g$t$20991$1MHp3Q
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$20990$1MHp3Q))))))
   (g$trace-let-syntax-macro$20236$1MHp3Q
     g$trace-let-syntax-macro$23832$1MHp3Q
     (g$trace-let/rec-syntax$20235$1MHp3Q 'let-syntax))
   (g$trace-letrec-syntax-macro$20237$1MHp3Q
     g$trace-letrec-syntax-macro$23833$1MHp3Q
     (g$trace-let/rec-syntax$20235$1MHp3Q 'letrec-syntax))
   (g$guard-macro$20238$1MHp3Q
     g$guard-macro$23834$1MHp3Q
     (case-lambda
       ((g$x$21000$1MHp3Q)
        (letrec* ((g$gen-clauses$21001$1MHp3Q
                    (case-lambda
                      ((g$con$21013$1MHp3Q
                         g$outerk$21014$1MHp3Q
                         g$clause*$21015$1MHp3Q)
                       (letrec* ((g$f$21016$1MHp3Q
                                   (case-lambda
                                     ((g$x$21044$1MHp3Q
                                        g$k$21045$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$21046$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$21047$1MHp3Q)
                                              (if g$ls/false$21047$1MHp3Q
                                                (apply
                                                  (case-lambda
                                                    ((g$e$21048$1MHp3Q
                                                       g$p$21049$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$t$21050$1MHp3Q)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$21050$1MHp3Q
                                                               g$e$21048$1MHp3Q))
                                                           (list
                                                             'if
                                                             g$t$21050$1MHp3Q
                                                             (list
                                                               g$p$21049$1MHp3Q
                                                               g$t$21050$1MHp3Q)
                                                             g$k$21045$1MHp3Q))))
                                                      (gensym))))
                                                  g$ls/false$21047$1MHp3Q)
                                                ((case-lambda
                                                   ((g$t$21051$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$21052$1MHp3Q)
                                                        (if g$ls/false$21052$1MHp3Q
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21053$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$t$21054$1MHp3Q)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$21054$1MHp3Q
                                                                         g$e$21053$1MHp3Q))
                                                                     (list
                                                                       'if
                                                                       g$t$21054$1MHp3Q
                                                                       g$t$21054$1MHp3Q
                                                                       g$k$21045$1MHp3Q))))
                                                                (gensym))))
                                                            g$ls/false$21052$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$21055$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$21056$1MHp3Q)
                                                                  (if g$ls/false$21056$1MHp3Q
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$21057$1MHp3Q
                                                                           g$v$21058$1MHp3Q
                                                                           g$v*$21059$1MHp3Q)
                                                                         (list
                                                                           'if
                                                                           g$e$21057$1MHp3Q
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$21058$1MHp3Q
                                                                               g$v*$21059$1MHp3Q))
                                                                           g$k$21045$1MHp3Q)))
                                                                      g$ls/false$21056$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$t$21060$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21061$1MHp3Q)
                                                                            (if g$ls/false$21061$1MHp3Q
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$20382$1MHp3Q
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$21044$1MHp3Q)))
                                                                                g$ls/false$21061$1MHp3Q)
                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21060$1MHp3Q))))
                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                           g$t$21060$1MHp3Q
                                                                           '_))))
                                                                     g$t$21055$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$21055$1MHp3Q
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$21051$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$21051$1MHp3Q
                                                       '(any)))))
                                                 g$t$21046$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$21046$1MHp3Q
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$21044$1MHp3Q))))
                                 (g$f*$21017$1MHp3Q
                                   (case-lambda
                                     ((g$x*$21024$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$21025$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$21026$1MHp3Q)
                                              (if g$ls/false$21026$1MHp3Q
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$21013$1MHp3Q)
                                                       '#t)))
                                                  g$ls/false$21026$1MHp3Q)
                                                ((case-lambda
                                                   ((g$t$21027$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$21028$1MHp3Q)
                                                        (if g$ls/false$21028$1MHp3Q
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21029$1MHp3Q
                                                                 g$e*$21030$1MHp3Q)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$21029$1MHp3Q
                                                                     g$e*$21030$1MHp3Q))
                                                                 '#f)))
                                                            g$ls/false$21028$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$21031$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$21032$1MHp3Q)
                                                                  (if g$ls/false$21032$1MHp3Q
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$21033$1MHp3Q
                                                                           g$cls*$21034$1MHp3Q)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$21017$1MHp3Q
                                                                                g$cls*$21034$1MHp3Q)))
                                                                           (case-lambda
                                                                             ((g$e$21037$1MHp3Q
                                                                                g$g$21038$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$g$21039$1MHp3Q
                                                                                    g$e$21040$1MHp3Q)
                                                                                  (values
                                                                                    (g$f$21016$1MHp3Q
                                                                                      g$cls$21033$1MHp3Q
                                                                                      g$e$21040$1MHp3Q)
                                                                                    g$g$21039$1MHp3Q)))
                                                                               g$g$21038$1MHp3Q
                                                                               g$e$21037$1MHp3Q))))))
                                                                      g$ls/false$21032$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$t$21041$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21042$1MHp3Q)
                                                                            (if g$ls/false$21042$1MHp3Q
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$21043$1MHp3Q)
                                                                                   (g$syntax-violation$20382$1MHp3Q
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$21043$1MHp3Q)))
                                                                                g$ls/false$21042$1MHp3Q)
                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21041$1MHp3Q))))
                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                           g$t$21041$1MHp3Q
                                                                           'any))))
                                                                     g$t$21031$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$21031$1MHp3Q
                                                                 '(any .
                                                                       any)))))
                                                           g$t$21027$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$21027$1MHp3Q
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$21025$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$21025$1MHp3Q
                                             '()))))
                                       g$x*$21024$1MHp3Q)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$21017$1MHp3Q
                                g$clause*$21015$1MHp3Q)))
                           (case-lambda
                             ((g$code$21020$1MHp3Q
                                g$raisek$21021$1MHp3Q)
                              ((case-lambda
                                 ((g$raisek$21022$1MHp3Q
                                    g$code$21023$1MHp3Q)
                                  (if g$raisek$21022$1MHp3Q
                                    (list
                                      g$outerk$21014$1MHp3Q
                                      g$code$21023$1MHp3Q)
                                    g$code$21023$1MHp3Q)))
                               g$raisek$21021$1MHp3Q
                               g$code$21020$1MHp3Q)))))))))
          ((case-lambda
             ((g$t$21002$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$21003$1MHp3Q)
                  (if (if g$ls/false$21003$1MHp3Q
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$21004$1MHp3Q
                                 g$clause*$21005$1MHp3Q
                                 g$b$21006$1MHp3Q
                                 g$b*$21007$1MHp3Q)
                               (g$id?$19765$1MHp3Q g$con$21004$1MHp3Q)))
                            g$ls/false$21003$1MHp3Q))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$21008$1MHp3Q
                           g$clause*$21009$1MHp3Q
                           g$b$21010$1MHp3Q
                           g$b*$21011$1MHp3Q)
                         ((case-lambda
                            ((g$outerk$21012$1MHp3Q)
                             (g$bless$20226$1MHp3Q
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$21012$1MHp3Q)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$21008$1MHp3Q)
                                           (g$gen-clauses$21001$1MHp3Q
                                             g$con$21008$1MHp3Q
                                             g$outerk$21012$1MHp3Q
                                             g$clause*$21009$1MHp3Q))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$21010$1MHp3Q
                                               g$b*$21011$1MHp3Q)))))))))))
                          (gensym))))
                      g$ls/false$21003$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$21002$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$21002$1MHp3Q
                 '(_ (any . each-any) any . each-any)))))
           g$x$21000$1MHp3Q)))))
   (g$define-enumeration-macro$20239$1MHp3Q
     g$define-enumeration-macro$23835$1MHp3Q
     (case-lambda
       ((g$stx$21062$1MHp3Q)
        (letrec* ((g$set?$21063$1MHp3Q
                    (case-lambda
                      ((g$x$21076$1MHp3Q)
                       ((case-lambda
                          ((g$t$21077$1MHp3Q)
                           (if g$t$21077$1MHp3Q
                             g$t$21077$1MHp3Q
                             (begin
                               '#f
                               (if (not (g$memq$11827$1MHp3Q
                                          (car g$x$21076$1MHp3Q)
                                          (cdr g$x$21076$1MHp3Q)))
                                 (begin
                                   '#f
                                   (g$set?$21063$1MHp3Q
                                     (cdr g$x$21076$1MHp3Q)))
                                 '#f)))))
                        (null? g$x$21076$1MHp3Q)))))
                  (g$remove-dups$21064$1MHp3Q
                    (case-lambda
                      ((g$ls$21075$1MHp3Q)
                       (if (null? g$ls$21075$1MHp3Q)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$21075$1MHp3Q)
                             (g$remove-dups$21064$1MHp3Q
                               (g$remq$11842$1MHp3Q
                                 (car g$ls$21075$1MHp3Q)
                                 (cdr g$ls$21075$1MHp3Q))))))))))
          ((case-lambda
             ((g$t$21065$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$21066$1MHp3Q)
                  (if (if g$ls/false$21066$1MHp3Q
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$21067$1MHp3Q
                                 g$id*$21068$1MHp3Q
                                 g$maker$21069$1MHp3Q)
                               (if (g$id?$19765$1MHp3Q
                                     g$name$21067$1MHp3Q)
                                 (if (g$id?$19765$1MHp3Q
                                       g$maker$21069$1MHp3Q)
                                   (begin
                                     '#f
                                     (g$for-all$11833$1MHp3Q
                                       g$id?$19765$1MHp3Q
                                       g$id*$21068$1MHp3Q))
                                   '#f)
                                 '#f)))
                            g$ls/false$21066$1MHp3Q))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$21070$1MHp3Q
                           g$id*$21071$1MHp3Q
                           g$maker$21072$1MHp3Q)
                         ((case-lambda
                            ((g$name*$21073$1MHp3Q g$mk$21074$1MHp3Q)
                             (g$bless$20226$1MHp3Q
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$21074$1MHp3Q
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$21073$1MHp3Q))))
                                 (list
                                   'define-syntax
                                   g$name$21070$1MHp3Q
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$21073$1MHp3Q))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$21070$1MHp3Q)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$21072$1MHp3Q
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21072$1MHp3Q)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$21073$1MHp3Q))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21072$1MHp3Q)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$21074$1MHp3Q
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$21064$1MHp3Q
                            (g$syntax->datum$20385$1MHp3Q
                              g$id*$21071$1MHp3Q))
                          (gensym))))
                      g$ls/false$21066$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$21065$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$21065$1MHp3Q
                 '(_ any each-any any)))))
           g$stx$21062$1MHp3Q)))))
   (g$time-macro$20240$1MHp3Q
     g$time-macro$23836$1MHp3Q
     (case-lambda
       ((g$stx$21078$1MHp3Q)
        ((case-lambda
           ((g$t$21079$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21080$1MHp3Q)
                (if g$ls/false$21080$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$expr$21081$1MHp3Q)
                       ((case-lambda
                          ((g$str$21082$1MHp3Q)
                           (g$bless$20226$1MHp3Q
                             (list
                               'time-it
                               g$str$21082$1MHp3Q
                               (list
                                 'lambda
                                 '()
                                 g$expr$21081$1MHp3Q)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$18177$1MHp3Q)))
                          (case-lambda
                            ((g$p$21085$1MHp3Q g$e$21086$1MHp3Q)
                             ((case-lambda
                                ((g$e$21087$1MHp3Q g$p$21088$1MHp3Q)
                                 (begin
                                   (write
                                     (g$syntax->datum$20385$1MHp3Q
                                       g$expr$21081$1MHp3Q)
                                     g$p$21088$1MHp3Q)
                                   (g$e$21087$1MHp3Q))))
                              g$e$21086$1MHp3Q
                              g$p$21085$1MHp3Q)))))))
                    g$ls/false$21080$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21079$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21079$1MHp3Q
               '(_ any)))))
         g$stx$21078$1MHp3Q))))
   (g$delay-macro$20241$1MHp3Q
     g$delay-macro$23837$1MHp3Q
     (case-lambda
       ((g$stx$21089$1MHp3Q)
        ((case-lambda
           ((g$t$21090$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21091$1MHp3Q)
                (if g$ls/false$21091$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$expr$21092$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$21092$1MHp3Q)))))
                    g$ls/false$21091$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21090$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21090$1MHp3Q
               '(_ any)))))
         g$stx$21089$1MHp3Q))))
   (g$assert-macro$20242$1MHp3Q
     g$assert-macro$23838$1MHp3Q
     (case-lambda
       ((g$stx$21093$1MHp3Q)
        ((case-lambda
           ((g$t$21094$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21095$1MHp3Q)
                (if g$ls/false$21095$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$expr$21096$1MHp3Q)
                       ((case-lambda
                          ((g$pos$21097$1MHp3Q)
                           (g$bless$20226$1MHp3Q
                             (list
                               'unless
                               g$expr$21096$1MHp3Q
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$21096$1MHp3Q)
                                 (list 'quote g$pos$21097$1MHp3Q))))))
                        ((case-lambda
                           ((g$t$21098$1MHp3Q)
                            (if g$t$21098$1MHp3Q
                              g$t$21098$1MHp3Q
                              (begin
                                '#f
                                (g$expression-position$20377$1MHp3Q
                                  g$expr$21096$1MHp3Q)))))
                         (g$expression-position$20377$1MHp3Q
                           g$stx$21093$1MHp3Q)))))
                    g$ls/false$21095$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21094$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21094$1MHp3Q
               '(_ any)))))
         g$stx$21093$1MHp3Q))))
   (g$endianness-macro$20243$1MHp3Q
     g$endianness-macro$23839$1MHp3Q
     (case-lambda
       ((g$stx$21099$1MHp3Q)
        ((case-lambda
           ((g$t$21100$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21101$1MHp3Q)
                (if g$ls/false$21101$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$e$21102$1MHp3Q)
                       ((case-lambda
                          ((g$t$21103$1MHp3Q)
                           (if (eqv? g$t$21103$1MHp3Q 'little)
                             (g$bless$20226$1MHp3Q ''little)
                             (if (eqv? g$t$21103$1MHp3Q 'big)
                               (g$bless$20226$1MHp3Q ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$21099$1MHp3Q))))))
                        (g$syntax->datum$20385$1MHp3Q
                          g$e$21102$1MHp3Q))))
                    g$ls/false$21101$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21100$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21100$1MHp3Q
               '(_ any)))))
         g$stx$21099$1MHp3Q))))
   (g$identifier-syntax-macro$20244$1MHp3Q
     g$identifier-syntax-macro$23840$1MHp3Q
     (case-lambda
       ((g$stx$21104$1MHp3Q)
        ((case-lambda
           ((g$t$21105$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21106$1MHp3Q)
                (if g$ls/false$21106$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$expr$21107$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$21107$1MHp3Q))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$21107$1MHp3Q)
                                   '(#'(e* ...))))))))))
                    g$ls/false$21106$1MHp3Q)
                  ((case-lambda
                     ((g$t$21108$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$21109$1MHp3Q)
                          (if (if g$ls/false$21109$1MHp3Q
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$21110$1MHp3Q
                                         g$expr1$21111$1MHp3Q
                                         g$id2$21112$1MHp3Q
                                         g$expr2$21113$1MHp3Q
                                         g$expr3$21114$1MHp3Q)
                                       (if (g$id?$19765$1MHp3Q
                                             g$id1$21110$1MHp3Q)
                                         (if (g$id?$19765$1MHp3Q
                                               g$id2$21112$1MHp3Q)
                                           (begin
                                             '#f
                                             (g$id?$19765$1MHp3Q
                                               g$expr2$21113$1MHp3Q))
                                           '#f)
                                         '#f)))
                                    g$ls/false$21109$1MHp3Q))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$21115$1MHp3Q
                                   g$expr1$21116$1MHp3Q
                                   g$id2$21117$1MHp3Q
                                   g$expr2$21118$1MHp3Q
                                   g$expr3$21119$1MHp3Q)
                                 (g$bless$20226$1MHp3Q
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$21116$1MHp3Q))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$21118$1MHp3Q)
                                           (list
                                             'syntax
                                             g$expr3$21119$1MHp3Q))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$21116$1MHp3Q
                                               '(e* ...))))))))))
                              g$ls/false$21109$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$21108$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$21108$1MHp3Q
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$21105$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21105$1MHp3Q
               '(_ any)))))
         g$stx$21104$1MHp3Q))))
   (g$do-macro$20245$1MHp3Q
     g$do-macro$23841$1MHp3Q
     (case-lambda
       ((g$stx$21120$1MHp3Q)
        (letrec* ((g$bind$21121$1MHp3Q
                    (case-lambda
                      ((g$x$21133$1MHp3Q)
                       ((case-lambda
                          ((g$t$21134$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21135$1MHp3Q)
                               (if g$ls/false$21135$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$x$21136$1MHp3Q
                                        g$init$21137$1MHp3Q)
                                      (list
                                        g$x$21136$1MHp3Q
                                        g$init$21137$1MHp3Q
                                        g$x$21136$1MHp3Q)))
                                   g$ls/false$21135$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21138$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21139$1MHp3Q)
                                         (if g$ls/false$21139$1MHp3Q
                                           (apply
                                             (case-lambda
                                               ((g$x$21140$1MHp3Q
                                                  g$init$21141$1MHp3Q
                                                  g$step$21142$1MHp3Q)
                                                (list
                                                  g$x$21140$1MHp3Q
                                                  g$init$21141$1MHp3Q
                                                  g$step$21142$1MHp3Q)))
                                             g$ls/false$21139$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$21143$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$21144$1MHp3Q)
                                                   (if g$ls/false$21144$1MHp3Q
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$20382$1MHp3Q
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$21120$1MHp3Q)))
                                                       g$ls/false$21144$1MHp3Q)
                                                     (g$syntax-violation$20382$1MHp3Q
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21143$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$21143$1MHp3Q
                                                  '_))))
                                            g$t$21138$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21138$1MHp3Q
                                        '(any any any)))))
                                  g$t$21134$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21134$1MHp3Q
                              '(any any)))))
                        g$x$21133$1MHp3Q)))))
          ((case-lambda
             ((g$t$21122$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$21123$1MHp3Q)
                  (if g$ls/false$21123$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$binding*$21124$1MHp3Q
                           g$test$21125$1MHp3Q
                           g$expr*$21126$1MHp3Q
                           g$command*$21127$1MHp3Q)
                         ((case-lambda
                            ((g$t$21128$1MHp3Q)
                             ((case-lambda
                                ((g$ls/false$21129$1MHp3Q)
                                 (if g$ls/false$21129$1MHp3Q
                                   (apply
                                     (case-lambda
                                       ((g$x*$21130$1MHp3Q
                                          g$init*$21131$1MHp3Q
                                          g$step*$21132$1MHp3Q)
                                        (if (g$valid-bound-ids?$19770$1MHp3Q
                                              g$x*$21130$1MHp3Q)
                                          (g$bless$20226$1MHp3Q
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$21130$1MHp3Q
                                                    (list
                                                      'if
                                                      g$test$21125$1MHp3Q
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$21126$1MHp3Q))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$21127$1MHp3Q
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$21132$1MHp3Q))))))))
                                              (cons
                                                'loop
                                                g$init*$21131$1MHp3Q)))
                                          (g$syntax-violation$20382$1MHp3Q
                                            '#f
                                            '"invalid bindings"
                                            g$stx$21120$1MHp3Q))))
                                     g$ls/false$21129$1MHp3Q)
                                   (g$syntax-violation$20382$1MHp3Q
                                     '#f
                                     '"invalid syntax"
                                     g$t$21128$1MHp3Q))))
                              (g$syntax-dispatch$20263$1MHp3Q
                                g$t$21128$1MHp3Q
                                '#(each (any any any))))))
                          (g$map$11835$1MHp3Q
                            g$bind$21121$1MHp3Q
                            g$binding*$21124$1MHp3Q))))
                      g$ls/false$21123$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$21122$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$21122$1MHp3Q
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$21120$1MHp3Q)))))
   (g$let*-macro$20246$1MHp3Q
     g$let*-macro$23842$1MHp3Q
     (case-lambda
       ((g$stx$21145$1MHp3Q)
        ((case-lambda
           ((g$t$21146$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21147$1MHp3Q)
                (if (if g$ls/false$21147$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$21148$1MHp3Q
                               g$rhs*$21149$1MHp3Q
                               g$b$21150$1MHp3Q
                               g$b*$21151$1MHp3Q)
                             (g$for-all$11833$1MHp3Q
                               g$id?$19765$1MHp3Q
                               g$lhs*$21148$1MHp3Q)))
                          g$ls/false$21147$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$21152$1MHp3Q
                         g$rhs*$21153$1MHp3Q
                         g$b$21154$1MHp3Q
                         g$b*$21155$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         ((letrec ((g$f$21156$1MHp3Q
                                     (case-lambda
                                       ((g$x*$21157$1MHp3Q)
                                        (if (null? g$x*$21157$1MHp3Q)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$21154$1MHp3Q
                                                g$b*$21155$1MHp3Q)))
                                          (if (null?
                                                (cdr g$x*$21157$1MHp3Q))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$21157$1MHp3Q))
                                                (cons
                                                  g$b$21154$1MHp3Q
                                                  g$b*$21155$1MHp3Q)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$21157$1MHp3Q))
                                                (g$f$21156$1MHp3Q
                                                  (cdr g$x*$21157$1MHp3Q))))))))))
                            g$f$21156$1MHp3Q)
                          (g$map$11835$1MHp3Q
                            list
                            g$lhs*$21152$1MHp3Q
                            g$rhs*$21153$1MHp3Q)))))
                    g$ls/false$21147$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21146$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21146$1MHp3Q
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21145$1MHp3Q))))
   (g$or-macro$20247$1MHp3Q
     g$or-macro$23843$1MHp3Q
     (case-lambda
       ((g$stx$21158$1MHp3Q)
        ((case-lambda
           ((g$t$21159$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21160$1MHp3Q)
                (if g$ls/false$21160$1MHp3Q
                  (apply (case-lambda (() '#f)) g$ls/false$21160$1MHp3Q)
                  ((case-lambda
                     ((g$t$21161$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$21162$1MHp3Q)
                          (if g$ls/false$21162$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$e$21163$1MHp3Q g$e*$21164$1MHp3Q)
                                 (g$bless$20226$1MHp3Q
                                   ((letrec ((g$f$21165$1MHp3Q
                                               (case-lambda
                                                 ((g$e$21166$1MHp3Q
                                                    g$e*$21167$1MHp3Q)
                                                  (if (null?
                                                        g$e*$21167$1MHp3Q)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21166$1MHp3Q)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$21166$1MHp3Q))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$21165$1MHp3Q
                                                            (car g$e*$21167$1MHp3Q)
                                                            (cdr g$e*$21167$1MHp3Q))))))))))
                                      g$f$21165$1MHp3Q)
                                    g$e$21163$1MHp3Q
                                    g$e*$21164$1MHp3Q))))
                              g$ls/false$21162$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$21161$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$21161$1MHp3Q
                         '(_ any . each-any)))))
                   g$t$21159$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q g$t$21159$1MHp3Q '(_)))))
         g$stx$21158$1MHp3Q))))
   (g$and-macro$20248$1MHp3Q
     g$and-macro$23844$1MHp3Q
     (case-lambda
       ((g$stx$21168$1MHp3Q)
        ((case-lambda
           ((g$t$21169$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21170$1MHp3Q)
                (if g$ls/false$21170$1MHp3Q
                  (apply (case-lambda (() '#t)) g$ls/false$21170$1MHp3Q)
                  ((case-lambda
                     ((g$t$21171$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$21172$1MHp3Q)
                          (if g$ls/false$21172$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$e$21173$1MHp3Q g$e*$21174$1MHp3Q)
                                 (g$bless$20226$1MHp3Q
                                   ((letrec ((g$f$21175$1MHp3Q
                                               (case-lambda
                                                 ((g$e$21176$1MHp3Q
                                                    g$e*$21177$1MHp3Q)
                                                  (if (null?
                                                        g$e*$21177$1MHp3Q)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21176$1MHp3Q)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$21176$1MHp3Q
                                                          (cons
                                                            (g$f$21175$1MHp3Q
                                                              (car g$e*$21177$1MHp3Q)
                                                              (cdr g$e*$21177$1MHp3Q))
                                                            '(#f))))))))))
                                      g$f$21175$1MHp3Q)
                                    g$e$21173$1MHp3Q
                                    g$e*$21174$1MHp3Q))))
                              g$ls/false$21172$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$21171$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$21171$1MHp3Q
                         '(_ any . each-any)))))
                   g$t$21169$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q g$t$21169$1MHp3Q '(_)))))
         g$stx$21168$1MHp3Q))))
   (g$cond-macro$20249$1MHp3Q
     g$cond-macro$23845$1MHp3Q
     (case-lambda
       ((g$stx$21178$1MHp3Q)
        ((case-lambda
           ((g$t$21179$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21180$1MHp3Q)
                (if g$ls/false$21180$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$cls$21181$1MHp3Q g$cls*$21182$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         ((letrec ((g$f$21183$1MHp3Q
                                     (case-lambda
                                       ((g$cls$21184$1MHp3Q
                                          g$cls*$21185$1MHp3Q)
                                        (if (null? g$cls*$21185$1MHp3Q)
                                          ((case-lambda
                                             ((g$t$21186$1MHp3Q)
                                              ((case-lambda
                                                 ((g$ls/false$21187$1MHp3Q)
                                                  (if g$ls/false$21187$1MHp3Q
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$21188$1MHp3Q
                                                           g$e*$21189$1MHp3Q)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$21188$1MHp3Q
                                                               g$e*$21189$1MHp3Q)))))
                                                      g$ls/false$21187$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$t$21190$1MHp3Q)
                                                        ((case-lambda
                                                           ((g$ls/false$21191$1MHp3Q)
                                                            (if g$ls/false$21191$1MHp3Q
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$21192$1MHp3Q
                                                                     g$p$21193$1MHp3Q)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$21192$1MHp3Q))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$21193$1MHp3Q
                                                                         '(t))))))
                                                                g$ls/false$21191$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$t$21194$1MHp3Q)
                                                                  ((case-lambda
                                                                     ((g$ls/false$21195$1MHp3Q)
                                                                      (if g$ls/false$21195$1MHp3Q
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$21196$1MHp3Q)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$21196$1MHp3Q
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$21195$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$t$21197$1MHp3Q)
                                                                            ((case-lambda
                                                                               ((g$ls/false$21198$1MHp3Q)
                                                                                (if g$ls/false$21198$1MHp3Q
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$21199$1MHp3Q
                                                                                         g$e*$21200$1MHp3Q)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$21199$1MHp3Q
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$21200$1MHp3Q))))
                                                                                    g$ls/false$21198$1MHp3Q)
                                                                                  ((case-lambda
                                                                                     ((g$t$21201$1MHp3Q)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$21202$1MHp3Q)
                                                                                          (if g$ls/false$21202$1MHp3Q
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$20382$1MHp3Q
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$21178$1MHp3Q)))
                                                                                              g$ls/false$21202$1MHp3Q)
                                                                                            (g$syntax-violation$20382$1MHp3Q
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$21201$1MHp3Q))))
                                                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                                                         g$t$21201$1MHp3Q
                                                                                         '_))))
                                                                                   g$t$21197$1MHp3Q))))
                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                               g$t$21197$1MHp3Q
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$21194$1MHp3Q))))
                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                     g$t$21194$1MHp3Q
                                                                     '(any)))))
                                                               g$t$21190$1MHp3Q))))
                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                           g$t$21190$1MHp3Q
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$21186$1MHp3Q))))
                                               (g$syntax-dispatch$20263$1MHp3Q
                                                 g$t$21186$1MHp3Q
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$21184$1MHp3Q)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$21203$1MHp3Q)
                                                ((case-lambda
                                                   ((g$ls/false$21204$1MHp3Q)
                                                    (if g$ls/false$21204$1MHp3Q
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$21205$1MHp3Q
                                                             g$e*$21206$1MHp3Q)
                                                           (g$syntax-violation$20382$1MHp3Q
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$21178$1MHp3Q)))
                                                        g$ls/false$21204$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$t$21207$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$ls/false$21208$1MHp3Q)
                                                              (if g$ls/false$21208$1MHp3Q
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$21209$1MHp3Q
                                                                       g$p$21210$1MHp3Q)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$21209$1MHp3Q))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$21210$1MHp3Q
                                                                           '(t))
                                                                         (g$f$21183$1MHp3Q
                                                                           (car g$cls*$21185$1MHp3Q)
                                                                           (cdr g$cls*$21185$1MHp3Q))))))
                                                                  g$ls/false$21208$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$t$21211$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21212$1MHp3Q)
                                                                        (if g$ls/false$21212$1MHp3Q
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$21213$1MHp3Q)
                                                                               (list
                                                                                 'or
                                                                                 g$e$21213$1MHp3Q
                                                                                 (g$f$21183$1MHp3Q
                                                                                   (car g$cls*$21185$1MHp3Q)
                                                                                   (cdr g$cls*$21185$1MHp3Q)))))
                                                                            g$ls/false$21212$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$21214$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21215$1MHp3Q)
                                                                                  (if g$ls/false$21215$1MHp3Q
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$21216$1MHp3Q
                                                                                           g$e*$21217$1MHp3Q)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$21216$1MHp3Q
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$21217$1MHp3Q)
                                                                                           (g$f$21183$1MHp3Q
                                                                                             (car g$cls*$21185$1MHp3Q)
                                                                                             (cdr g$cls*$21185$1MHp3Q)))))
                                                                                      g$ls/false$21215$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$21218$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21219$1MHp3Q)
                                                                                            (if g$ls/false$21219$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20382$1MHp3Q
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$21178$1MHp3Q)))
                                                                                                g$ls/false$21219$1MHp3Q)
                                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21218$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$21218$1MHp3Q
                                                                                           '_))))
                                                                                     g$t$21214$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$21214$1MHp3Q
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$21211$1MHp3Q))))
                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                       g$t$21211$1MHp3Q
                                                                       '(any)))))
                                                                 g$t$21207$1MHp3Q))))
                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                             g$t$21207$1MHp3Q
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$21203$1MHp3Q))))
                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                   g$t$21203$1MHp3Q
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$21184$1MHp3Q)))))))
                            g$f$21183$1MHp3Q)
                          g$cls$21181$1MHp3Q
                          g$cls*$21182$1MHp3Q))))
                    g$ls/false$21180$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21179$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21179$1MHp3Q
               '(_ any . each-any)))))
         g$stx$21178$1MHp3Q))))
   (g$do-include$20250$1MHp3Q
     g$do-include$23846$1MHp3Q
     (case-lambda
       ((g$stx$21220$1MHp3Q g$id$21221$1MHp3Q g$filename$21222$1MHp3Q)
        ((case-lambda
           ((g$filename$21223$1MHp3Q)
            (begin
              (if (not (if (string? g$filename$21223$1MHp3Q)
                         (begin
                           '#f
                           (g$id?$19765$1MHp3Q g$id$21221$1MHp3Q))
                         '#f))
                (g$syntax-violation$20382$1MHp3Q
                  '#f
                  '"invalid syntax"
                  g$stx$21220$1MHp3Q)
                (void))
              (cons
                (g$bless$20226$1MHp3Q 'begin)
                (g$with-input-from-file$18239$1MHp3Q
                  g$filename$21223$1MHp3Q
                  (case-lambda
                    (()
                     ((letrec ((g$f$21224$1MHp3Q
                                 (case-lambda
                                   ((g$ls$21225$1MHp3Q)
                                    ((case-lambda
                                       ((g$x$21226$1MHp3Q)
                                        (if (eof-object?
                                              g$x$21226$1MHp3Q)
                                          (g$reverse$12684$1MHp3Q
                                            g$ls$21225$1MHp3Q)
                                          (begin
                                            '#f
                                            (g$f$21224$1MHp3Q
                                              (cons
                                                (g$datum->stx$19748$1MHp3Q
                                                  g$id$21221$1MHp3Q
                                                  g$x$21226$1MHp3Q)
                                                g$ls$21225$1MHp3Q))))))
                                     (read-annotated))))))
                        g$f$21224$1MHp3Q)
                      '()))))))))
         (g$stx->datum$19776$1MHp3Q g$filename$21222$1MHp3Q)))))
   (g$include-macro$20251$1MHp3Q
     g$include-macro$23847$1MHp3Q
     (case-lambda
       ((g$e$21227$1MHp3Q)
        ((case-lambda
           ((g$t$21228$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21229$1MHp3Q)
                (if g$ls/false$21229$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$id$21230$1MHp3Q g$filename$21231$1MHp3Q)
                       (g$do-include$20250$1MHp3Q
                         g$e$21227$1MHp3Q
                         g$id$21230$1MHp3Q
                         g$filename$21231$1MHp3Q)))
                    g$ls/false$21229$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21228$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21228$1MHp3Q
               '(any any)))))
         g$e$21227$1MHp3Q))))
   (g$include-into-macro$20252$1MHp3Q
     g$include-into-macro$23848$1MHp3Q
     (case-lambda
       ((g$e$21232$1MHp3Q)
        ((case-lambda
           ((g$t$21233$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21234$1MHp3Q)
                (if g$ls/false$21234$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$id$21235$1MHp3Q g$filename$21236$1MHp3Q)
                       (g$do-include$20250$1MHp3Q
                         g$e$21232$1MHp3Q
                         g$id$21235$1MHp3Q
                         g$filename$21236$1MHp3Q)))
                    g$ls/false$21234$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21233$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21233$1MHp3Q
               '(_ any any)))))
         g$e$21232$1MHp3Q))))
   (g$syntax-rules-macro$20253$1MHp3Q
     g$syntax-rules-macro$23849$1MHp3Q
     (case-lambda
       ((g$e$21237$1MHp3Q)
        ((case-lambda
           ((g$t$21238$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21239$1MHp3Q)
                (if g$ls/false$21239$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$lits$21240$1MHp3Q
                         g$pat*$21241$1MHp3Q
                         g$tmp*$21242$1MHp3Q)
                       (begin
                         (g$verify-literals$20266$1MHp3Q
                           g$lits$21240$1MHp3Q
                           g$e$21237$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$21240$1MHp3Q
                                   (g$map$11835$1MHp3Q
                                     (case-lambda
                                       ((g$pat$21243$1MHp3Q
                                          g$tmp$21244$1MHp3Q)
                                        ((case-lambda
                                           ((g$t$21245$1MHp3Q)
                                            ((case-lambda
                                               ((g$ls/false$21246$1MHp3Q)
                                                (if g$ls/false$21246$1MHp3Q
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$21247$1MHp3Q)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$21247$1MHp3Q)
                                                         (list
                                                           'syntax
                                                           g$tmp$21244$1MHp3Q))))
                                                    g$ls/false$21246$1MHp3Q)
                                                  ((case-lambda
                                                     ((g$t$21248$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$ls/false$21249$1MHp3Q)
                                                          (if g$ls/false$21249$1MHp3Q
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$20382$1MHp3Q
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$21237$1MHp3Q
                                                                   g$pat$21243$1MHp3Q)))
                                                              g$ls/false$21249$1MHp3Q)
                                                            (g$syntax-violation$20382$1MHp3Q
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$21248$1MHp3Q))))
                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                         g$t$21248$1MHp3Q
                                                         '_))))
                                                   g$t$21245$1MHp3Q))))
                                             (g$syntax-dispatch$20263$1MHp3Q
                                               g$t$21245$1MHp3Q
                                               '(_ . any)))))
                                         g$pat$21243$1MHp3Q)))
                                     g$pat*$21241$1MHp3Q
                                     g$tmp*$21242$1MHp3Q)))))))))
                    g$ls/false$21239$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21238$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21238$1MHp3Q
               '(_ each-any . #(each (any any)))))))
         g$e$21237$1MHp3Q))))
   (g$quasiquote-macro$20254$1MHp3Q
     g$quasiquote-macro$23850$1MHp3Q
     ((case-lambda
        (()
         (letrec* ((g$datum$21250$1MHp3Q
                     (case-lambda
                       ((g$x$21400$1MHp3Q)
                        (list
                          (g$scheme-stx$20206$1MHp3Q 'quote)
                          (g$mkstx$19753$1MHp3Q
                            g$x$21400$1MHp3Q
                            '()
                            '()
                            '())))))
                   (g$quasicons*$21285$1MHp3Q
                     (case-lambda
                       ((g$x$21396$1MHp3Q g$y$21397$1MHp3Q)
                        ((letrec ((g$f$21398$1MHp3Q
                                    (case-lambda
                                      ((g$x$21399$1MHp3Q)
                                       (if (null? g$x$21399$1MHp3Q)
                                         g$y$21397$1MHp3Q
                                         (g$quasicons$21286$1MHp3Q
                                           (car g$x$21399$1MHp3Q)
                                           (g$f$21398$1MHp3Q
                                             (cdr g$x$21399$1MHp3Q))))))))
                           g$f$21398$1MHp3Q)
                         g$x$21396$1MHp3Q))))
                   (g$quasicons$21286$1MHp3Q
                     (case-lambda
                       ((g$x$21377$1MHp3Q g$y$21378$1MHp3Q)
                        ((case-lambda
                           ((g$t$21379$1MHp3Q)
                            ((case-lambda
                               ((g$ls/false$21380$1MHp3Q)
                                (if g$ls/false$21380$1MHp3Q
                                  (apply
                                    (case-lambda
                                      ((g$dy$21381$1MHp3Q)
                                       ((case-lambda
                                          ((g$t$21382$1MHp3Q)
                                           ((case-lambda
                                              ((g$ls/false$21383$1MHp3Q)
                                               (if g$ls/false$21383$1MHp3Q
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$21384$1MHp3Q)
                                                      (list
                                                        (g$scheme-stx$20206$1MHp3Q
                                                          'quote)
                                                        (cons
                                                          g$dx$21384$1MHp3Q
                                                          g$dy$21381$1MHp3Q))))
                                                   g$ls/false$21383$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$t$21385$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$ls/false$21386$1MHp3Q)
                                                         (if g$ls/false$21386$1MHp3Q
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$21387$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21388$1MHp3Q)
                                                                        (if g$ls/false$21388$1MHp3Q
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$20206$1MHp3Q
                                                                                   'list)
                                                                                 g$x$21377$1MHp3Q)))
                                                                            g$ls/false$21388$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$21389$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21390$1MHp3Q)
                                                                                  (if g$ls/false$21390$1MHp3Q
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$20206$1MHp3Q
                                                                                             'cons)
                                                                                           g$x$21377$1MHp3Q
                                                                                           g$y$21378$1MHp3Q)))
                                                                                      g$ls/false$21390$1MHp3Q)
                                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$21389$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$21389$1MHp3Q
                                                                                 '_))))
                                                                           g$t$21387$1MHp3Q))))
                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                       g$t$21387$1MHp3Q
                                                                       '()))))
                                                                 g$dy$21381$1MHp3Q)))
                                                             g$ls/false$21386$1MHp3Q)
                                                           (g$syntax-violation$20382$1MHp3Q
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$21385$1MHp3Q))))
                                                      (g$syntax-dispatch$20263$1MHp3Q
                                                        g$t$21385$1MHp3Q
                                                        '_))))
                                                  g$t$21382$1MHp3Q))))
                                            (g$syntax-dispatch$20263$1MHp3Q
                                              g$t$21382$1MHp3Q
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$21377$1MHp3Q)))
                                    g$ls/false$21380$1MHp3Q)
                                  ((case-lambda
                                     ((g$t$21391$1MHp3Q)
                                      ((case-lambda
                                         ((g$ls/false$21392$1MHp3Q)
                                          (if g$ls/false$21392$1MHp3Q
                                            (apply
                                              (case-lambda
                                                ((g$stuff$21393$1MHp3Q)
                                                 (g$cons*$11837$1MHp3Q
                                                   (g$scheme-stx$20206$1MHp3Q
                                                     'list)
                                                   g$x$21377$1MHp3Q
                                                   g$stuff$21393$1MHp3Q)))
                                              g$ls/false$21392$1MHp3Q)
                                            ((case-lambda
                                               ((g$t$21394$1MHp3Q)
                                                ((case-lambda
                                                   ((g$ls/false$21395$1MHp3Q)
                                                    (if g$ls/false$21395$1MHp3Q
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$20206$1MHp3Q
                                                               'cons)
                                                             g$x$21377$1MHp3Q
                                                             g$y$21378$1MHp3Q)))
                                                        g$ls/false$21395$1MHp3Q)
                                                      (g$syntax-violation$20382$1MHp3Q
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$21394$1MHp3Q))))
                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                   g$t$21394$1MHp3Q
                                                   '_))))
                                             g$t$21391$1MHp3Q))))
                                       (g$syntax-dispatch$20263$1MHp3Q
                                         g$t$21391$1MHp3Q
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$21379$1MHp3Q))))
                             (g$syntax-dispatch$20263$1MHp3Q
                               g$t$21379$1MHp3Q
                               '(#(scheme-id quote) any)))))
                         g$y$21378$1MHp3Q))))
                   (g$quasiappend$21287$1MHp3Q
                     (case-lambda
                       ((g$x$21364$1MHp3Q g$y$21365$1MHp3Q)
                        ((case-lambda
                           ((g$ls$21366$1MHp3Q)
                            (if (null? g$ls$21366$1MHp3Q)
                              (list
                                (g$scheme-stx$20206$1MHp3Q 'quote)
                                '())
                              (if (null? (cdr g$ls$21366$1MHp3Q))
                                (car g$ls$21366$1MHp3Q)
                                (begin
                                  '#f
                                  (g$cons*$11837$1MHp3Q
                                    (g$scheme-stx$20206$1MHp3Q 'append)
                                    g$ls$21366$1MHp3Q))))))
                         ((letrec ((g$f$21367$1MHp3Q
                                     (case-lambda
                                       ((g$x$21368$1MHp3Q)
                                        (if (null? g$x$21368$1MHp3Q)
                                          ((case-lambda
                                             ((g$t$21369$1MHp3Q)
                                              ((case-lambda
                                                 ((g$ls/false$21370$1MHp3Q)
                                                  (if g$ls/false$21370$1MHp3Q
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$21370$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$t$21371$1MHp3Q)
                                                        ((case-lambda
                                                           ((g$ls/false$21372$1MHp3Q)
                                                            (if g$ls/false$21372$1MHp3Q
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$21365$1MHp3Q)))
                                                                g$ls/false$21372$1MHp3Q)
                                                              (g$syntax-violation$20382$1MHp3Q
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21371$1MHp3Q))))
                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                           g$t$21371$1MHp3Q
                                                           '_))))
                                                     g$t$21369$1MHp3Q))))
                                               (g$syntax-dispatch$20263$1MHp3Q
                                                 g$t$21369$1MHp3Q
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$21365$1MHp3Q)
                                          ((case-lambda
                                             ((g$t$21373$1MHp3Q)
                                              ((case-lambda
                                                 ((g$ls/false$21374$1MHp3Q)
                                                  (if g$ls/false$21374$1MHp3Q
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$21367$1MHp3Q
                                                           (cdr g$x$21368$1MHp3Q))))
                                                      g$ls/false$21374$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$t$21375$1MHp3Q)
                                                        ((case-lambda
                                                           ((g$ls/false$21376$1MHp3Q)
                                                            (if g$ls/false$21376$1MHp3Q
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$21368$1MHp3Q)
                                                                     (g$f$21367$1MHp3Q
                                                                       (cdr g$x$21368$1MHp3Q)))))
                                                                g$ls/false$21376$1MHp3Q)
                                                              (g$syntax-violation$20382$1MHp3Q
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21375$1MHp3Q))))
                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                           g$t$21375$1MHp3Q
                                                           '_))))
                                                     g$t$21373$1MHp3Q))))
                                               (g$syntax-dispatch$20263$1MHp3Q
                                                 g$t$21373$1MHp3Q
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$21368$1MHp3Q)))))))
                            g$f$21367$1MHp3Q)
                          g$x$21364$1MHp3Q)))))
                   (g$quasivector$21288$1MHp3Q
                     (case-lambda
                       ((g$x$21339$1MHp3Q)
                        ((case-lambda
                           ((g$pat-x$21340$1MHp3Q)
                            ((case-lambda
                               ((g$t$21341$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$21342$1MHp3Q)
                                    (if g$ls/false$21342$1MHp3Q
                                      (apply
                                        (case-lambda
                                          ((g$x*$21343$1MHp3Q)
                                           (list
                                             (g$scheme-stx$20206$1MHp3Q
                                               'quote)
                                             (g$list->vector$12678$1MHp3Q
                                               g$x*$21343$1MHp3Q))))
                                        g$ls/false$21342$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$21344$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$21345$1MHp3Q)
                                              (if g$ls/false$21345$1MHp3Q
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$21346$1MHp3Q
                                                                 (case-lambda
                                                                   ((g$x$21347$1MHp3Q
                                                                      g$k$21348$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$t$21349$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21350$1MHp3Q)
                                                                            (if g$ls/false$21350$1MHp3Q
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$21351$1MHp3Q)
                                                                                   (g$k$21348$1MHp3Q
                                                                                     (g$map$11835$1MHp3Q
                                                                                       (case-lambda
                                                                                         ((g$x$21352$1MHp3Q)
                                                                                          (list
                                                                                            (g$scheme-stx$20206$1MHp3Q
                                                                                              'quote)
                                                                                            g$x$21352$1MHp3Q)))
                                                                                       g$x*$21351$1MHp3Q))))
                                                                                g$ls/false$21350$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$t$21353$1MHp3Q)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$21354$1MHp3Q)
                                                                                      (if g$ls/false$21354$1MHp3Q
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$21355$1MHp3Q)
                                                                                             (g$k$21348$1MHp3Q
                                                                                               g$x*$21355$1MHp3Q)))
                                                                                          g$ls/false$21354$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$t$21356$1MHp3Q)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$21357$1MHp3Q)
                                                                                                (if g$ls/false$21357$1MHp3Q
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$21358$1MHp3Q
                                                                                                         g$y$21359$1MHp3Q)
                                                                                                       (g$f$21346$1MHp3Q
                                                                                                         g$y$21359$1MHp3Q
                                                                                                         (case-lambda
                                                                                                           ((g$ls$21360$1MHp3Q)
                                                                                                            (g$k$21348$1MHp3Q
                                                                                                              (cons
                                                                                                                g$x$21358$1MHp3Q
                                                                                                                g$ls$21360$1MHp3Q)))))))
                                                                                                    g$ls/false$21357$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$21361$1MHp3Q)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$21362$1MHp3Q)
                                                                                                          (if g$ls/false$21362$1MHp3Q
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$20206$1MHp3Q
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$21340$1MHp3Q)))
                                                                                                              g$ls/false$21362$1MHp3Q)
                                                                                                            (g$syntax-violation$20382$1MHp3Q
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$21361$1MHp3Q))))
                                                                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                                                                         g$t$21361$1MHp3Q
                                                                                                         '_))))
                                                                                                   g$t$21356$1MHp3Q))))
                                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                                               g$t$21356$1MHp3Q
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$21353$1MHp3Q))))
                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                     g$t$21353$1MHp3Q
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$21349$1MHp3Q))))
                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                           g$t$21349$1MHp3Q
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$21347$1MHp3Q)))))
                                                        g$f$21346$1MHp3Q)
                                                      g$x$21339$1MHp3Q
                                                      (case-lambda
                                                        ((g$ls$21363$1MHp3Q)
                                                         (g$cons*$11837$1MHp3Q
                                                           (g$scheme-stx$20206$1MHp3Q
                                                             'vector)
                                                           g$ls$21363$1MHp3Q))))))
                                                  g$ls/false$21345$1MHp3Q)
                                                (g$syntax-violation$20382$1MHp3Q
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$21344$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$21344$1MHp3Q
                                             '_))))
                                       g$t$21341$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$21341$1MHp3Q
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$21340$1MHp3Q)))
                         g$x$21339$1MHp3Q))))
                   (g$vquasi$21289$1MHp3Q
                     (case-lambda
                       ((g$p$21322$1MHp3Q g$lev$21323$1MHp3Q)
                        ((case-lambda
                           ((g$t$21324$1MHp3Q)
                            ((case-lambda
                               ((g$ls/false$21325$1MHp3Q)
                                (if g$ls/false$21325$1MHp3Q
                                  (apply
                                    (case-lambda
                                      ((g$p$21326$1MHp3Q
                                         g$q$21327$1MHp3Q)
                                       ((case-lambda
                                          ((g$t$21328$1MHp3Q)
                                           ((case-lambda
                                              ((g$ls/false$21329$1MHp3Q)
                                               (if g$ls/false$21329$1MHp3Q
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21330$1MHp3Q)
                                                      (if (g$=$13381$1MHp3Q
                                                            g$lev$21323$1MHp3Q
                                                            '0)
                                                        (g$quasicons*$21285$1MHp3Q
                                                          g$p$21330$1MHp3Q
                                                          (g$vquasi$21289$1MHp3Q
                                                            g$q$21327$1MHp3Q
                                                            g$lev$21323$1MHp3Q))
                                                        (g$quasicons$21286$1MHp3Q
                                                          (g$quasicons$21286$1MHp3Q
                                                            (g$datum$21250$1MHp3Q
                                                              'unquote)
                                                            (g$quasi$21290$1MHp3Q
                                                              g$p$21330$1MHp3Q
                                                              (- g$lev$21323$1MHp3Q
                                                                 '1)))
                                                          (g$vquasi$21289$1MHp3Q
                                                            g$q$21327$1MHp3Q
                                                            g$lev$21323$1MHp3Q)))))
                                                   g$ls/false$21329$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$t$21331$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$ls/false$21332$1MHp3Q)
                                                         (if g$ls/false$21332$1MHp3Q
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$21333$1MHp3Q)
                                                                (if (g$=$13381$1MHp3Q
                                                                      g$lev$21323$1MHp3Q
                                                                      '0)
                                                                  (g$quasiappend$21287$1MHp3Q
                                                                    g$p$21333$1MHp3Q
                                                                    (g$vquasi$21289$1MHp3Q
                                                                      g$q$21327$1MHp3Q
                                                                      g$lev$21323$1MHp3Q))
                                                                  (g$quasicons$21286$1MHp3Q
                                                                    (g$quasicons$21286$1MHp3Q
                                                                      (g$datum$21250$1MHp3Q
                                                                        'unquote-splicing)
                                                                      (g$quasi$21290$1MHp3Q
                                                                        g$p$21333$1MHp3Q
                                                                        (- g$lev$21323$1MHp3Q
                                                                           '1)))
                                                                    (g$vquasi$21289$1MHp3Q
                                                                      g$q$21327$1MHp3Q
                                                                      g$lev$21323$1MHp3Q)))))
                                                             g$ls/false$21332$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$t$21334$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$ls/false$21335$1MHp3Q)
                                                                   (if g$ls/false$21335$1MHp3Q
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$21336$1MHp3Q)
                                                                          (g$quasicons$21286$1MHp3Q
                                                                            (g$quasi$21290$1MHp3Q
                                                                              g$p$21336$1MHp3Q
                                                                              g$lev$21323$1MHp3Q)
                                                                            (g$vquasi$21289$1MHp3Q
                                                                              g$q$21327$1MHp3Q
                                                                              g$lev$21323$1MHp3Q))))
                                                                       g$ls/false$21335$1MHp3Q)
                                                                     (g$syntax-violation$20382$1MHp3Q
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$21334$1MHp3Q))))
                                                                (g$syntax-dispatch$20263$1MHp3Q
                                                                  g$t$21334$1MHp3Q
                                                                  'any))))
                                                            g$t$21331$1MHp3Q))))
                                                      (g$syntax-dispatch$20263$1MHp3Q
                                                        g$t$21331$1MHp3Q
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$21328$1MHp3Q))))
                                            (g$syntax-dispatch$20263$1MHp3Q
                                              g$t$21328$1MHp3Q
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$21326$1MHp3Q)))
                                    g$ls/false$21325$1MHp3Q)
                                  ((case-lambda
                                     ((g$t$21337$1MHp3Q)
                                      ((case-lambda
                                         ((g$ls/false$21338$1MHp3Q)
                                          (if g$ls/false$21338$1MHp3Q
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$20206$1MHp3Q
                                                     'quote)
                                                   '())))
                                              g$ls/false$21338$1MHp3Q)
                                            (g$syntax-violation$20382$1MHp3Q
                                              '#f
                                              '"invalid syntax"
                                              g$t$21337$1MHp3Q))))
                                       (g$syntax-dispatch$20263$1MHp3Q
                                         g$t$21337$1MHp3Q
                                         '()))))
                                   g$t$21324$1MHp3Q))))
                             (g$syntax-dispatch$20263$1MHp3Q
                               g$t$21324$1MHp3Q
                               '(any . any)))))
                         g$p$21322$1MHp3Q))))
                   (g$quasi$21290$1MHp3Q
                     (case-lambda
                       ((g$p$21295$1MHp3Q g$lev$21296$1MHp3Q)
                        ((case-lambda
                           ((g$t$21297$1MHp3Q)
                            ((case-lambda
                               ((g$ls/false$21298$1MHp3Q)
                                (if g$ls/false$21298$1MHp3Q
                                  (apply
                                    (case-lambda
                                      ((g$p$21299$1MHp3Q)
                                       (if (g$=$13381$1MHp3Q
                                             g$lev$21296$1MHp3Q
                                             '0)
                                         g$p$21299$1MHp3Q
                                         (g$quasicons$21286$1MHp3Q
                                           (g$datum$21250$1MHp3Q
                                             'unquote)
                                           (g$quasi$21290$1MHp3Q
                                             (list g$p$21299$1MHp3Q)
                                             (- g$lev$21296$1MHp3Q
                                                '1))))))
                                    g$ls/false$21298$1MHp3Q)
                                  ((case-lambda
                                     ((g$t$21300$1MHp3Q)
                                      ((case-lambda
                                         ((g$ls/false$21301$1MHp3Q)
                                          (if g$ls/false$21301$1MHp3Q
                                            (apply
                                              (case-lambda
                                                ((g$p$21302$1MHp3Q
                                                   g$q$21303$1MHp3Q)
                                                 (if (g$=$13381$1MHp3Q
                                                       g$lev$21296$1MHp3Q
                                                       '0)
                                                   (g$quasicons*$21285$1MHp3Q
                                                     g$p$21302$1MHp3Q
                                                     (g$quasi$21290$1MHp3Q
                                                       g$q$21303$1MHp3Q
                                                       g$lev$21296$1MHp3Q))
                                                   (g$quasicons$21286$1MHp3Q
                                                     (g$quasicons$21286$1MHp3Q
                                                       (g$datum$21250$1MHp3Q
                                                         'unquote)
                                                       (g$quasi$21290$1MHp3Q
                                                         g$p$21302$1MHp3Q
                                                         (- g$lev$21296$1MHp3Q
                                                            '1)))
                                                     (g$quasi$21290$1MHp3Q
                                                       g$q$21303$1MHp3Q
                                                       g$lev$21296$1MHp3Q)))))
                                              g$ls/false$21301$1MHp3Q)
                                            ((case-lambda
                                               ((g$t$21304$1MHp3Q)
                                                ((case-lambda
                                                   ((g$ls/false$21305$1MHp3Q)
                                                    (if g$ls/false$21305$1MHp3Q
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$21306$1MHp3Q
                                                             g$q$21307$1MHp3Q)
                                                           (if (g$=$13381$1MHp3Q
                                                                 g$lev$21296$1MHp3Q
                                                                 '0)
                                                             (g$quasiappend$21287$1MHp3Q
                                                               g$p$21306$1MHp3Q
                                                               (g$quasi$21290$1MHp3Q
                                                                 g$q$21307$1MHp3Q
                                                                 g$lev$21296$1MHp3Q))
                                                             (g$quasicons$21286$1MHp3Q
                                                               (g$quasicons$21286$1MHp3Q
                                                                 (g$datum$21250$1MHp3Q
                                                                   'unquote-splicing)
                                                                 (g$quasi$21290$1MHp3Q
                                                                   g$p$21306$1MHp3Q
                                                                   (- g$lev$21296$1MHp3Q
                                                                      '1)))
                                                               (g$quasi$21290$1MHp3Q
                                                                 g$q$21307$1MHp3Q
                                                                 g$lev$21296$1MHp3Q)))))
                                                        g$ls/false$21305$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$t$21308$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$ls/false$21309$1MHp3Q)
                                                              (if g$ls/false$21309$1MHp3Q
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$21310$1MHp3Q)
                                                                     (g$quasicons$21286$1MHp3Q
                                                                       (g$datum$21250$1MHp3Q
                                                                         'quasiquote)
                                                                       (g$quasi$21290$1MHp3Q
                                                                         (list
                                                                           g$p$21310$1MHp3Q)
                                                                         (+ g$lev$21296$1MHp3Q
                                                                            '1)))))
                                                                  g$ls/false$21309$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$t$21311$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21312$1MHp3Q)
                                                                        (if g$ls/false$21312$1MHp3Q
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$21313$1MHp3Q
                                                                                 g$q$21314$1MHp3Q)
                                                                               (g$quasicons$21286$1MHp3Q
                                                                                 (g$quasi$21290$1MHp3Q
                                                                                   g$p$21313$1MHp3Q
                                                                                   g$lev$21296$1MHp3Q)
                                                                                 (g$quasi$21290$1MHp3Q
                                                                                   g$q$21314$1MHp3Q
                                                                                   g$lev$21296$1MHp3Q))))
                                                                            g$ls/false$21312$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$21315$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21316$1MHp3Q)
                                                                                  (if (if g$ls/false$21316$1MHp3Q
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$21317$1MHp3Q)
                                                                                               (not (g$stx?$19737$1MHp3Q
                                                                                                      g$x$21317$1MHp3Q))))
                                                                                            g$ls/false$21316$1MHp3Q))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$21318$1MHp3Q)
                                                                                         (g$quasivector$21288$1MHp3Q
                                                                                           (g$vquasi$21289$1MHp3Q
                                                                                             g$x$21318$1MHp3Q
                                                                                             g$lev$21296$1MHp3Q))))
                                                                                      g$ls/false$21316$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$21319$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21320$1MHp3Q)
                                                                                            (if g$ls/false$21320$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21321$1MHp3Q)
                                                                                                   (list
                                                                                                     (g$scheme-stx$20206$1MHp3Q
                                                                                                       'quote)
                                                                                                     g$p$21321$1MHp3Q)))
                                                                                                g$ls/false$21320$1MHp3Q)
                                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21319$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$21319$1MHp3Q
                                                                                           'any))))
                                                                                     g$t$21315$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$21315$1MHp3Q
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$21311$1MHp3Q))))
                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                       g$t$21311$1MHp3Q
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$21308$1MHp3Q))))
                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                             g$t$21308$1MHp3Q
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$21304$1MHp3Q))))
                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                   g$t$21304$1MHp3Q
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21300$1MHp3Q))))
                                       (g$syntax-dispatch$20263$1MHp3Q
                                         g$t$21300$1MHp3Q
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$21297$1MHp3Q))))
                             (g$syntax-dispatch$20263$1MHp3Q
                               g$t$21297$1MHp3Q
                               '(#(scheme-id unquote) any)))))
                         g$p$21295$1MHp3Q)))))
           (case-lambda
             ((g$x$21291$1MHp3Q)
              ((case-lambda
                 ((g$t$21292$1MHp3Q)
                  ((case-lambda
                     ((g$ls/false$21293$1MHp3Q)
                      (if g$ls/false$21293$1MHp3Q
                        (apply
                          (case-lambda
                            ((g$e$21294$1MHp3Q)
                             (g$quasi$21290$1MHp3Q
                               g$e$21294$1MHp3Q
                               '0)))
                          g$ls/false$21293$1MHp3Q)
                        (g$syntax-violation$20382$1MHp3Q
                          '#f
                          '"invalid syntax"
                          g$t$21292$1MHp3Q))))
                   (g$syntax-dispatch$20263$1MHp3Q
                     g$t$21292$1MHp3Q
                     '(_ any)))))
               g$x$21291$1MHp3Q))))))))
   (g$quasisyntax-macro$20255$1MHp3Q
     g$quasisyntax-macro$23851$1MHp3Q
     ((case-lambda
        (()
         (letrec* ((g$quasi$21401$1MHp3Q
                     (case-lambda
                       ((g$p$21415$1MHp3Q g$lev$21416$1MHp3Q)
                        ((case-lambda
                           ((g$t$21417$1MHp3Q)
                            ((case-lambda
                               ((g$ls/false$21418$1MHp3Q)
                                (if g$ls/false$21418$1MHp3Q
                                  (apply
                                    (case-lambda
                                      ((g$p$21419$1MHp3Q)
                                       (if (g$=$13381$1MHp3Q
                                             g$lev$21416$1MHp3Q
                                             '0)
                                         ((case-lambda
                                            ((g$g$21420$1MHp3Q)
                                             (values
                                               (list g$g$21420$1MHp3Q)
                                               (list g$p$21419$1MHp3Q)
                                               g$g$21420$1MHp3Q)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$21401$1MHp3Q
                                                g$p$21419$1MHp3Q
                                                (- g$lev$21416$1MHp3Q
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$21424$1MHp3Q
                                                g$rhs*$21425$1MHp3Q
                                                g$p$21426$1MHp3Q)
                                              ((case-lambda
                                                 ((g$p$21427$1MHp3Q
                                                    g$rhs*$21428$1MHp3Q
                                                    g$lhs*$21429$1MHp3Q)
                                                  (values
                                                    g$lhs*$21429$1MHp3Q
                                                    g$rhs*$21428$1MHp3Q
                                                    (list
                                                      'unsyntax
                                                      g$p$21427$1MHp3Q))))
                                               g$p$21426$1MHp3Q
                                               g$rhs*$21425$1MHp3Q
                                               g$lhs*$21424$1MHp3Q)))))))
                                    g$ls/false$21418$1MHp3Q)
                                  ((case-lambda
                                     ((g$t$21430$1MHp3Q)
                                      ((case-lambda
                                         ((g$ls/false$21431$1MHp3Q)
                                          (if (if g$ls/false$21431$1MHp3Q
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$13381$1MHp3Q
                                                         g$lev$21416$1MHp3Q
                                                         '0)))
                                                    g$ls/false$21431$1MHp3Q))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$20382$1MHp3Q
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$21415$1MHp3Q)))
                                              g$ls/false$21431$1MHp3Q)
                                            ((case-lambda
                                               ((g$t$21432$1MHp3Q)
                                                ((case-lambda
                                                   ((g$ls/false$21433$1MHp3Q)
                                                    (if g$ls/false$21433$1MHp3Q
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$21434$1MHp3Q
                                                             g$q$21435$1MHp3Q)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$21401$1MHp3Q
                                                                  g$q$21435$1MHp3Q
                                                                  g$lev$21416$1MHp3Q)))
                                                             (case-lambda
                                                               ((g$lhs*$21439$1MHp3Q
                                                                  g$rhs*$21440$1MHp3Q
                                                                  g$q$21441$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$q$21442$1MHp3Q
                                                                      g$rhs*$21443$1MHp3Q
                                                                      g$lhs*$21444$1MHp3Q)
                                                                    (if (g$=$13381$1MHp3Q
                                                                          g$lev$21416$1MHp3Q
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$21445$1MHp3Q)
                                                                          (values
                                                                            (append
                                                                              g$g*$21445$1MHp3Q
                                                                              g$lhs*$21444$1MHp3Q)
                                                                            (append
                                                                              g$p*$21434$1MHp3Q
                                                                              g$rhs*$21443$1MHp3Q)
                                                                            (append
                                                                              g$g*$21445$1MHp3Q
                                                                              g$q$21442$1MHp3Q))))
                                                                       (g$map$11835$1MHp3Q
                                                                         (case-lambda
                                                                           ((g$x$21446$1MHp3Q)
                                                                            (gensym)))
                                                                         g$p*$21434$1MHp3Q))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$21401$1MHp3Q
                                                                             g$p*$21434$1MHp3Q
                                                                             (- g$lev$21416$1MHp3Q
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$21450$1MHp3Q
                                                                             g$rhs2*$21451$1MHp3Q
                                                                             g$p*$21452$1MHp3Q)
                                                                           ((case-lambda
                                                                              ((g$p*$21453$1MHp3Q
                                                                                 g$rhs2*$21454$1MHp3Q
                                                                                 g$lhs2*$21455$1MHp3Q)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$21455$1MHp3Q
                                                                                   g$lhs*$21444$1MHp3Q)
                                                                                 (append
                                                                                   g$rhs2*$21454$1MHp3Q
                                                                                   g$rhs*$21443$1MHp3Q)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$21453$1MHp3Q)
                                                                                   g$q$21442$1MHp3Q))))
                                                                            g$p*$21452$1MHp3Q
                                                                            g$rhs2*$21451$1MHp3Q
                                                                            g$lhs2*$21450$1MHp3Q)))))))
                                                                 g$q$21441$1MHp3Q
                                                                 g$rhs*$21440$1MHp3Q
                                                                 g$lhs*$21439$1MHp3Q))))))
                                                        g$ls/false$21433$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$t$21456$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$ls/false$21457$1MHp3Q)
                                                              (if g$ls/false$21457$1MHp3Q
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$21458$1MHp3Q
                                                                       g$q$21459$1MHp3Q)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$21401$1MHp3Q
                                                                            g$q$21459$1MHp3Q
                                                                            g$lev$21416$1MHp3Q)))
                                                                       (case-lambda
                                                                         ((g$lhs*$21463$1MHp3Q
                                                                            g$rhs*$21464$1MHp3Q
                                                                            g$q$21465$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$q$21466$1MHp3Q
                                                                                g$rhs*$21467$1MHp3Q
                                                                                g$lhs*$21468$1MHp3Q)
                                                                              (if (g$=$13381$1MHp3Q
                                                                                    g$lev$21416$1MHp3Q
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$21469$1MHp3Q)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11835$1MHp3Q
                                                                                          (case-lambda
                                                                                            ((g$g$21470$1MHp3Q)
                                                                                             (cons
                                                                                               g$g$21470$1MHp3Q
                                                                                               '(...))))
                                                                                          g$g*$21469$1MHp3Q)
                                                                                        g$lhs*$21468$1MHp3Q)
                                                                                      (append
                                                                                        g$p*$21458$1MHp3Q
                                                                                        g$rhs*$21467$1MHp3Q)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11835$1MHp3Q
                                                                                            (case-lambda
                                                                                              ((g$g$21471$1MHp3Q)
                                                                                               (cons
                                                                                                 g$g$21471$1MHp3Q
                                                                                                 '(...))))
                                                                                            g$g*$21469$1MHp3Q))
                                                                                        g$q$21466$1MHp3Q))))
                                                                                 (g$map$11835$1MHp3Q
                                                                                   (case-lambda
                                                                                     ((g$x$21472$1MHp3Q)
                                                                                      (gensym)))
                                                                                   g$p*$21458$1MHp3Q))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$21401$1MHp3Q
                                                                                       g$p*$21458$1MHp3Q
                                                                                       (- g$lev$21416$1MHp3Q
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$21476$1MHp3Q
                                                                                       g$rhs2*$21477$1MHp3Q
                                                                                       g$p*$21478$1MHp3Q)
                                                                                     ((case-lambda
                                                                                        ((g$p*$21479$1MHp3Q
                                                                                           g$rhs2*$21480$1MHp3Q
                                                                                           g$lhs2*$21481$1MHp3Q)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$21481$1MHp3Q
                                                                                             g$lhs*$21468$1MHp3Q)
                                                                                           (append
                                                                                             g$rhs2*$21480$1MHp3Q
                                                                                             g$rhs*$21467$1MHp3Q)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$21479$1MHp3Q)
                                                                                             g$q$21466$1MHp3Q))))
                                                                                      g$p*$21478$1MHp3Q
                                                                                      g$rhs2*$21477$1MHp3Q
                                                                                      g$lhs2*$21476$1MHp3Q)))))))
                                                                           g$q$21465$1MHp3Q
                                                                           g$rhs*$21464$1MHp3Q
                                                                           g$lhs*$21463$1MHp3Q))))))
                                                                  g$ls/false$21457$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$t$21482$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21483$1MHp3Q)
                                                                        (if (if g$ls/false$21483$1MHp3Q
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$13381$1MHp3Q
                                                                                       g$lev$21416$1MHp3Q
                                                                                       '0)))
                                                                                  g$ls/false$21483$1MHp3Q))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$20382$1MHp3Q
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$21415$1MHp3Q)))
                                                                            g$ls/false$21483$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$21484$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21485$1MHp3Q)
                                                                                  (if g$ls/false$21485$1MHp3Q
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$21486$1MHp3Q)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$21401$1MHp3Q
                                                                                                g$p$21486$1MHp3Q
                                                                                                (+ g$lev$21416$1MHp3Q
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$21490$1MHp3Q
                                                                                                g$rhs*$21491$1MHp3Q
                                                                                                g$p$21492$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$p$21493$1MHp3Q
                                                                                                    g$rhs*$21494$1MHp3Q
                                                                                                    g$lhs*$21495$1MHp3Q)
                                                                                                  (values
                                                                                                    g$lhs*$21495$1MHp3Q
                                                                                                    g$rhs*$21494$1MHp3Q
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$21493$1MHp3Q))))
                                                                                               g$p$21492$1MHp3Q
                                                                                               g$rhs*$21491$1MHp3Q
                                                                                               g$lhs*$21490$1MHp3Q))))))
                                                                                      g$ls/false$21485$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$21496$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21497$1MHp3Q)
                                                                                            (if g$ls/false$21497$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21498$1MHp3Q
                                                                                                     g$q$21499$1MHp3Q)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$21401$1MHp3Q
                                                                                                          g$p$21498$1MHp3Q
                                                                                                          g$lev$21416$1MHp3Q)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$21506$1MHp3Q
                                                                                                          g$rhs*$21507$1MHp3Q
                                                                                                          g$p$21508$1MHp3Q)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$21401$1MHp3Q
                                                                                                               g$q$21499$1MHp3Q
                                                                                                               g$lev$21416$1MHp3Q)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$21509$1MHp3Q
                                                                                                               g$rhs2*$21510$1MHp3Q
                                                                                                               g$q$21511$1MHp3Q)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$21512$1MHp3Q
                                                                                                                   g$rhs2*$21513$1MHp3Q
                                                                                                                   g$lhs2*$21514$1MHp3Q
                                                                                                                   g$p$21515$1MHp3Q
                                                                                                                   g$rhs*$21516$1MHp3Q
                                                                                                                   g$lhs*$21517$1MHp3Q)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$21514$1MHp3Q
                                                                                                                     g$lhs*$21517$1MHp3Q)
                                                                                                                   (append
                                                                                                                     g$rhs2*$21513$1MHp3Q
                                                                                                                     g$rhs*$21516$1MHp3Q)
                                                                                                                   (cons
                                                                                                                     g$p$21515$1MHp3Q
                                                                                                                     g$q$21512$1MHp3Q))))
                                                                                                              g$q$21511$1MHp3Q
                                                                                                              g$rhs2*$21510$1MHp3Q
                                                                                                              g$lhs2*$21509$1MHp3Q
                                                                                                              g$p$21508$1MHp3Q
                                                                                                              g$rhs*$21507$1MHp3Q
                                                                                                              g$lhs*$21506$1MHp3Q)))))))))
                                                                                                g$ls/false$21497$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21518$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21519$1MHp3Q)
                                                                                                      (if g$ls/false$21519$1MHp3Q
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$21520$1MHp3Q)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$21401$1MHp3Q
                                                                                                                    g$x*$21520$1MHp3Q
                                                                                                                    g$lev$21416$1MHp3Q)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$21524$1MHp3Q
                                                                                                                    g$rhs*$21525$1MHp3Q
                                                                                                                    g$x*$21526$1MHp3Q)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$21527$1MHp3Q
                                                                                                                        g$rhs*$21528$1MHp3Q
                                                                                                                        g$lhs*$21529$1MHp3Q)
                                                                                                                      (values
                                                                                                                        g$lhs*$21529$1MHp3Q
                                                                                                                        g$rhs*$21528$1MHp3Q
                                                                                                                        (g$list->vector$12678$1MHp3Q
                                                                                                                          g$x*$21527$1MHp3Q))))
                                                                                                                   g$x*$21526$1MHp3Q
                                                                                                                   g$rhs*$21525$1MHp3Q
                                                                                                                   g$lhs*$21524$1MHp3Q))))))
                                                                                                          g$ls/false$21519$1MHp3Q)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21530$1MHp3Q)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21531$1MHp3Q)
                                                                                                                (if g$ls/false$21531$1MHp3Q
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$21415$1MHp3Q)))
                                                                                                                    g$ls/false$21531$1MHp3Q)
                                                                                                                  (g$syntax-violation$20382$1MHp3Q
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21530$1MHp3Q))))
                                                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                                                               g$t$21530$1MHp3Q
                                                                                                               '_))))
                                                                                                         g$t$21518$1MHp3Q))))
                                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                                     g$t$21518$1MHp3Q
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$21496$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$21496$1MHp3Q
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$21484$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$21484$1MHp3Q
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$21482$1MHp3Q))))
                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                       g$t$21482$1MHp3Q
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$21456$1MHp3Q))))
                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                             g$t$21456$1MHp3Q
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$21432$1MHp3Q))))
                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                   g$t$21432$1MHp3Q
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21430$1MHp3Q))))
                                       (g$syntax-dispatch$20263$1MHp3Q
                                         g$t$21430$1MHp3Q
                                         '#(scheme-id unsyntax)))))
                                   g$t$21417$1MHp3Q))))
                             (g$syntax-dispatch$20263$1MHp3Q
                               g$t$21417$1MHp3Q
                               '(#(scheme-id unsyntax) any)))))
                         g$p$21415$1MHp3Q)))))
           (case-lambda
             ((g$x$21402$1MHp3Q)
              ((case-lambda
                 ((g$t$21403$1MHp3Q)
                  ((case-lambda
                     ((g$ls/false$21404$1MHp3Q)
                      (if g$ls/false$21404$1MHp3Q
                        (apply
                          (case-lambda
                            ((g$e$21405$1MHp3Q)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$21401$1MHp3Q
                                    g$e$21405$1MHp3Q
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$21409$1MHp3Q
                                    g$rhs*$21410$1MHp3Q
                                    g$v$21411$1MHp3Q)
                                  ((case-lambda
                                     ((g$v$21412$1MHp3Q
                                        g$rhs*$21413$1MHp3Q
                                        g$lhs*$21414$1MHp3Q)
                                      (g$bless$20226$1MHp3Q
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$21413$1MHp3Q)
                                          '()
                                          (list
                                            g$lhs*$21414$1MHp3Q
                                            (list
                                              'syntax
                                              g$v$21412$1MHp3Q))))))
                                   g$v$21411$1MHp3Q
                                   g$rhs*$21410$1MHp3Q
                                   g$lhs*$21409$1MHp3Q))))))
                          g$ls/false$21404$1MHp3Q)
                        (g$syntax-violation$20382$1MHp3Q
                          '#f
                          '"invalid syntax"
                          g$t$21403$1MHp3Q))))
                   (g$syntax-dispatch$20263$1MHp3Q
                     g$t$21403$1MHp3Q
                     '(_ any)))))
               g$x$21402$1MHp3Q))))))))
   (g$define-struct-macro$20256$1MHp3Q
     g$define-struct-macro$23852$1MHp3Q
     (case-lambda
       ((g$stx$21532$1MHp3Q)
        (g$syntax-violation$20382$1MHp3Q
          '#f
          '"define-struct not supported"
          g$stx$21532$1MHp3Q))))
   (g$define-record-type-macro$20257$1MHp3Q
     g$define-record-type-macro$23853$1MHp3Q
     (case-lambda
       ((g$x$21533$1MHp3Q)
        (letrec* ((g$id$21534$1MHp3Q
                    (case-lambda
                      ((g$ctxt$21786$1MHp3Q . g$str*$21787$1MHp3Q)
                       (g$datum->syntax$20384$1MHp3Q
                         g$ctxt$21786$1MHp3Q
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11835$1MHp3Q
                               (case-lambda
                                 ((g$x$21788$1MHp3Q)
                                  (if (g$symbol?$12667$1MHp3Q
                                        g$x$21788$1MHp3Q)
                                    (symbol->string g$x$21788$1MHp3Q)
                                    (if (string? g$x$21788$1MHp3Q)
                                      g$x$21788$1MHp3Q
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$21787$1MHp3Q)))))))
                  (g$get-record-name$21535$1MHp3Q
                    (case-lambda
                      ((g$spec$21777$1MHp3Q)
                       ((case-lambda
                          ((g$t$21778$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21779$1MHp3Q)
                               (if g$ls/false$21779$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$foo$21780$1MHp3Q
                                        g$make-foo$21781$1MHp3Q
                                        g$foo?$21782$1MHp3Q)
                                      g$foo$21780$1MHp3Q))
                                   g$ls/false$21779$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21783$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21784$1MHp3Q)
                                         (if g$ls/false$21784$1MHp3Q
                                           (apply
                                             (case-lambda
                                               ((g$foo$21785$1MHp3Q)
                                                g$foo$21785$1MHp3Q))
                                             g$ls/false$21784$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21783$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21783$1MHp3Q
                                        'any))))
                                  g$t$21778$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21778$1MHp3Q
                              '(any any any)))))
                        g$spec$21777$1MHp3Q))))
                  (g$get-record-constructor-name$21536$1MHp3Q
                    (case-lambda
                      ((g$spec$21767$1MHp3Q)
                       ((case-lambda
                          ((g$t$21768$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21769$1MHp3Q)
                               (if g$ls/false$21769$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$foo$21770$1MHp3Q
                                        g$make-foo$21771$1MHp3Q
                                        g$foo?$21772$1MHp3Q)
                                      g$make-foo$21771$1MHp3Q))
                                   g$ls/false$21769$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21773$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21774$1MHp3Q)
                                         (if (if g$ls/false$21774$1MHp3Q
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21775$1MHp3Q)
                                                      (g$id?$19765$1MHp3Q
                                                        g$foo$21775$1MHp3Q)))
                                                   g$ls/false$21774$1MHp3Q))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21776$1MHp3Q)
                                                (g$id$21534$1MHp3Q
                                                  g$foo$21776$1MHp3Q
                                                  '"make-"
                                                  (g$stx->datum$19776$1MHp3Q
                                                    g$foo$21776$1MHp3Q))))
                                             g$ls/false$21774$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21773$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21773$1MHp3Q
                                        'any))))
                                  g$t$21768$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21768$1MHp3Q
                              '(any any any)))))
                        g$spec$21767$1MHp3Q))))
                  (g$get-record-predicate-name$21537$1MHp3Q
                    (case-lambda
                      ((g$spec$21757$1MHp3Q)
                       ((case-lambda
                          ((g$t$21758$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21759$1MHp3Q)
                               (if g$ls/false$21759$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$foo$21760$1MHp3Q
                                        g$make-foo$21761$1MHp3Q
                                        g$foo?$21762$1MHp3Q)
                                      g$foo?$21762$1MHp3Q))
                                   g$ls/false$21759$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21763$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21764$1MHp3Q)
                                         (if (if g$ls/false$21764$1MHp3Q
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21765$1MHp3Q)
                                                      (g$id?$19765$1MHp3Q
                                                        g$foo$21765$1MHp3Q)))
                                                   g$ls/false$21764$1MHp3Q))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21766$1MHp3Q)
                                                (g$id$21534$1MHp3Q
                                                  g$foo$21766$1MHp3Q
                                                  (g$stx->datum$19776$1MHp3Q
                                                    g$foo$21766$1MHp3Q)
                                                  '"?")))
                                             g$ls/false$21764$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21763$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21763$1MHp3Q
                                        'any))))
                                  g$t$21758$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21758$1MHp3Q
                              '(any any any)))))
                        g$spec$21757$1MHp3Q))))
                  (g$get-clause$21538$1MHp3Q
                    (case-lambda
                      ((g$id$21748$1MHp3Q g$ls$21749$1MHp3Q)
                       ((case-lambda
                          ((g$t$21750$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21751$1MHp3Q)
                               (if g$ls/false$21751$1MHp3Q
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$21751$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21752$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21753$1MHp3Q)
                                         (if g$ls/false$21753$1MHp3Q
                                           (apply
                                             (case-lambda
                                               ((g$x$21754$1MHp3Q
                                                  g$rest$21755$1MHp3Q
                                                  g$ls$21756$1MHp3Q)
                                                (if (g$free-id=?$19769$1MHp3Q
                                                      (g$bless$20226$1MHp3Q
                                                        g$id$21748$1MHp3Q)
                                                      g$x$21754$1MHp3Q)
                                                  (cons
                                                    g$x$21754$1MHp3Q
                                                    g$rest$21755$1MHp3Q)
                                                  (g$get-clause$21538$1MHp3Q
                                                    g$id$21748$1MHp3Q
                                                    g$ls$21756$1MHp3Q))))
                                             g$ls/false$21753$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21752$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21752$1MHp3Q
                                        '((any . any) . any)))))
                                  g$t$21750$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21750$1MHp3Q
                              '()))))
                        g$ls$21749$1MHp3Q))))
                  (g$foo-rtd-code$21539$1MHp3Q
                    (case-lambda
                      ((g$name$21707$1MHp3Q
                         g$clause*$21708$1MHp3Q
                         g$parent-rtd-code$21709$1MHp3Q)
                       (letrec* ((g$convert-field-spec*$21710$1MHp3Q
                                   (case-lambda
                                     ((g$ls$21735$1MHp3Q)
                                      (g$list->vector$12678$1MHp3Q
                                        (g$map$11835$1MHp3Q
                                          (case-lambda
                                            ((g$x$21736$1MHp3Q)
                                             ((case-lambda
                                                ((g$t$21737$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$ls/false$21738$1MHp3Q)
                                                     (if g$ls/false$21738$1MHp3Q
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$21739$1MHp3Q
                                                              g$rest$21740$1MHp3Q)
                                                            (list
                                                              'mutable
                                                              g$name$21739$1MHp3Q)))
                                                         g$ls/false$21738$1MHp3Q)
                                                       ((case-lambda
                                                          ((g$t$21741$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$ls/false$21742$1MHp3Q)
                                                               (if g$ls/false$21742$1MHp3Q
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$21743$1MHp3Q
                                                                        g$rest$21744$1MHp3Q)
                                                                      (list
                                                                        'immutable
                                                                        g$name$21743$1MHp3Q)))
                                                                   g$ls/false$21742$1MHp3Q)
                                                                 ((case-lambda
                                                                    ((g$t$21745$1MHp3Q)
                                                                     ((case-lambda
                                                                        ((g$ls/false$21746$1MHp3Q)
                                                                         (if g$ls/false$21746$1MHp3Q
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$21747$1MHp3Q)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$21747$1MHp3Q)))
                                                                             g$ls/false$21746$1MHp3Q)
                                                                           (g$syntax-violation$20382$1MHp3Q
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$21745$1MHp3Q))))
                                                                      (g$syntax-dispatch$20263$1MHp3Q
                                                                        g$t$21745$1MHp3Q
                                                                        'any))))
                                                                  g$t$21741$1MHp3Q))))
                                                            (g$syntax-dispatch$20263$1MHp3Q
                                                              g$t$21741$1MHp3Q
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$21737$1MHp3Q))))
                                                  (g$syntax-dispatch$20263$1MHp3Q
                                                    g$t$21737$1MHp3Q
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$21736$1MHp3Q)))
                                          g$ls$21735$1MHp3Q))))))
                         ((case-lambda
                            ((g$uid-code$21711$1MHp3Q
                               g$sealed?$21712$1MHp3Q
                               g$opaque?$21713$1MHp3Q
                               g$fields$21714$1MHp3Q)
                             (g$bless$20226$1MHp3Q
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$21707$1MHp3Q)
                                 g$parent-rtd-code$21709$1MHp3Q
                                 g$uid-code$21711$1MHp3Q
                                 g$sealed?$21712$1MHp3Q
                                 g$opaque?$21713$1MHp3Q
                                 g$fields$21714$1MHp3Q))))
                          ((case-lambda
                             ((g$t$21715$1MHp3Q)
                              ((case-lambda
                                 ((g$ls/false$21716$1MHp3Q)
                                  (if g$ls/false$21716$1MHp3Q
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$21716$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$21717$1MHp3Q)
                                        ((case-lambda
                                           ((g$ls/false$21718$1MHp3Q)
                                            (if g$ls/false$21718$1MHp3Q
                                              (apply
                                                (case-lambda
                                                  ((g$uid$21719$1MHp3Q)
                                                   (list
                                                     'quote
                                                     g$uid$21719$1MHp3Q)))
                                                g$ls/false$21718$1MHp3Q)
                                              ((case-lambda
                                                 ((g$t$21720$1MHp3Q)
                                                  ((case-lambda
                                                     ((g$ls/false$21721$1MHp3Q)
                                                      (if g$ls/false$21721$1MHp3Q
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$21721$1MHp3Q)
                                                        (g$syntax-violation$20382$1MHp3Q
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$21720$1MHp3Q))))
                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                     g$t$21720$1MHp3Q
                                                     '_))))
                                               g$t$21717$1MHp3Q))))
                                         (g$syntax-dispatch$20263$1MHp3Q
                                           g$t$21717$1MHp3Q
                                           '(_ any)))))
                                     g$t$21715$1MHp3Q))))
                               (g$syntax-dispatch$20263$1MHp3Q
                                 g$t$21715$1MHp3Q
                                 '(_)))))
                           (g$get-clause$21538$1MHp3Q
                             'nongenerative
                             g$clause*$21708$1MHp3Q))
                          ((case-lambda
                             ((g$t$21722$1MHp3Q)
                              ((case-lambda
                                 ((g$ls/false$21723$1MHp3Q)
                                  (if g$ls/false$21723$1MHp3Q
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21723$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$21724$1MHp3Q)
                                        ((case-lambda
                                           ((g$ls/false$21725$1MHp3Q)
                                            (if g$ls/false$21725$1MHp3Q
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21725$1MHp3Q)
                                              (g$syntax-violation$20382$1MHp3Q
                                                '#f
                                                '"invalid syntax"
                                                g$t$21724$1MHp3Q))))
                                         (g$syntax-dispatch$20263$1MHp3Q
                                           g$t$21724$1MHp3Q
                                           '_))))
                                     g$t$21722$1MHp3Q))))
                               (g$syntax-dispatch$20263$1MHp3Q
                                 g$t$21722$1MHp3Q
                                 '(_ #(atom #t))))))
                           (g$get-clause$21538$1MHp3Q
                             'sealed
                             g$clause*$21708$1MHp3Q))
                          ((case-lambda
                             ((g$t$21726$1MHp3Q)
                              ((case-lambda
                                 ((g$ls/false$21727$1MHp3Q)
                                  (if g$ls/false$21727$1MHp3Q
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21727$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$21728$1MHp3Q)
                                        ((case-lambda
                                           ((g$ls/false$21729$1MHp3Q)
                                            (if g$ls/false$21729$1MHp3Q
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21729$1MHp3Q)
                                              (g$syntax-violation$20382$1MHp3Q
                                                '#f
                                                '"invalid syntax"
                                                g$t$21728$1MHp3Q))))
                                         (g$syntax-dispatch$20263$1MHp3Q
                                           g$t$21728$1MHp3Q
                                           '_))))
                                     g$t$21726$1MHp3Q))))
                               (g$syntax-dispatch$20263$1MHp3Q
                                 g$t$21726$1MHp3Q
                                 '(_ #(atom #t))))))
                           (g$get-clause$21538$1MHp3Q
                             'opaque
                             g$clause*$21708$1MHp3Q))
                          ((case-lambda
                             ((g$t$21730$1MHp3Q)
                              ((case-lambda
                                 ((g$ls/false$21731$1MHp3Q)
                                  (if g$ls/false$21731$1MHp3Q
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$21732$1MHp3Q)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$21710$1MHp3Q
                                             g$field-spec*$21732$1MHp3Q))))
                                      g$ls/false$21731$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$21733$1MHp3Q)
                                        ((case-lambda
                                           ((g$ls/false$21734$1MHp3Q)
                                            (if g$ls/false$21734$1MHp3Q
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$21734$1MHp3Q)
                                              (g$syntax-violation$20382$1MHp3Q
                                                '#f
                                                '"invalid syntax"
                                                g$t$21733$1MHp3Q))))
                                         (g$syntax-dispatch$20263$1MHp3Q
                                           g$t$21733$1MHp3Q
                                           '_))))
                                     g$t$21730$1MHp3Q))))
                               (g$syntax-dispatch$20263$1MHp3Q
                                 g$t$21730$1MHp3Q
                                 '(_ . each-any)))))
                           (g$get-clause$21538$1MHp3Q
                             'fields
                             g$clause*$21708$1MHp3Q)))))))
                  (g$parent-rtd-code$21540$1MHp3Q
                    (case-lambda
                      ((g$clause*$21695$1MHp3Q)
                       ((case-lambda
                          ((g$t$21696$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21697$1MHp3Q)
                               (if g$ls/false$21697$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$name$21698$1MHp3Q)
                                      (list
                                        'record-type-descriptor
                                        g$name$21698$1MHp3Q)))
                                   g$ls/false$21697$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21699$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21700$1MHp3Q)
                                         (if g$ls/false$21700$1MHp3Q
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21701$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$21702$1MHp3Q)
                                                        (if g$ls/false$21702$1MHp3Q
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21703$1MHp3Q
                                                                 g$rcd$21704$1MHp3Q)
                                                               g$rtd$21703$1MHp3Q))
                                                            g$ls/false$21702$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$21705$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$21706$1MHp3Q)
                                                                  (if g$ls/false$21706$1MHp3Q
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21706$1MHp3Q)
                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21705$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$21705$1MHp3Q
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21701$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$21701$1MHp3Q
                                                       '(_ any any)))))
                                                 (g$get-clause$21538$1MHp3Q
                                                   'parent-rtd
                                                   g$clause*$21695$1MHp3Q))))
                                             g$ls/false$21700$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21699$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21699$1MHp3Q
                                        '#(atom #f)))))
                                  g$t$21696$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21696$1MHp3Q
                              '(_ any)))))
                        (g$get-clause$21538$1MHp3Q
                          'parent
                          g$clause*$21695$1MHp3Q)))))
                  (g$parent-rcd-code$21541$1MHp3Q
                    (case-lambda
                      ((g$clause*$21683$1MHp3Q)
                       ((case-lambda
                          ((g$t$21684$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21685$1MHp3Q)
                               (if g$ls/false$21685$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$name$21686$1MHp3Q)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$21686$1MHp3Q)))
                                   g$ls/false$21685$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21687$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21688$1MHp3Q)
                                         (if g$ls/false$21688$1MHp3Q
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21689$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$21690$1MHp3Q)
                                                        (if g$ls/false$21690$1MHp3Q
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21691$1MHp3Q
                                                                 g$rcd$21692$1MHp3Q)
                                                               g$rcd$21692$1MHp3Q))
                                                            g$ls/false$21690$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$21693$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$21694$1MHp3Q)
                                                                  (if g$ls/false$21694$1MHp3Q
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21694$1MHp3Q)
                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21693$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$21693$1MHp3Q
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21689$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$21689$1MHp3Q
                                                       '(_ any any)))))
                                                 (g$get-clause$21538$1MHp3Q
                                                   'parent-rtd
                                                   g$clause*$21683$1MHp3Q))))
                                             g$ls/false$21688$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21687$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21687$1MHp3Q
                                        '#(atom #f)))))
                                  g$t$21684$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21684$1MHp3Q
                              '(_ any)))))
                        (g$get-clause$21538$1MHp3Q
                          'parent
                          g$clause*$21683$1MHp3Q)))))
                  (g$foo-rcd-code$21542$1MHp3Q
                    (case-lambda
                      ((g$clause*$21679$1MHp3Q
                         g$foo-rtd$21680$1MHp3Q
                         g$protocol$21681$1MHp3Q
                         g$parent-rcd-code$21682$1MHp3Q)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$21680$1MHp3Q
                         g$parent-rcd-code$21682$1MHp3Q
                         g$protocol$21681$1MHp3Q))))
                  (g$get-protocol-code$21543$1MHp3Q
                    (case-lambda
                      ((g$clause*$21673$1MHp3Q)
                       ((case-lambda
                          ((g$t$21674$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21675$1MHp3Q)
                               (if g$ls/false$21675$1MHp3Q
                                 (apply
                                   (case-lambda
                                     ((g$expr$21676$1MHp3Q)
                                      g$expr$21676$1MHp3Q))
                                   g$ls/false$21675$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21677$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21678$1MHp3Q)
                                         (if g$ls/false$21678$1MHp3Q
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$21678$1MHp3Q)
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$t$21677$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21677$1MHp3Q
                                        '_))))
                                  g$t$21674$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21674$1MHp3Q
                              '(_ any)))))
                        (g$get-clause$21538$1MHp3Q
                          'protocol
                          g$clause*$21673$1MHp3Q)))))
                  (g$get-fields$21544$1MHp3Q
                    (case-lambda
                      ((g$clause*$21664$1MHp3Q)
                       ((case-lambda
                          ((g$t$21665$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21666$1MHp3Q)
                               (if g$ls/false$21666$1MHp3Q
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$21666$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21667$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21668$1MHp3Q)
                                         (if g$ls/false$21668$1MHp3Q
                                           (apply
                                             (case-lambda
                                               ((g$f*$21669$1MHp3Q)
                                                g$f*$21669$1MHp3Q))
                                             g$ls/false$21668$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$21670$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$21671$1MHp3Q)
                                                   (if g$ls/false$21671$1MHp3Q
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$21672$1MHp3Q)
                                                          (g$get-fields$21544$1MHp3Q
                                                            g$rest$21672$1MHp3Q)))
                                                       g$ls/false$21671$1MHp3Q)
                                                     (g$syntax-violation$20382$1MHp3Q
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21670$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$21670$1MHp3Q
                                                  '(_ . any)))))
                                            g$t$21667$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21667$1MHp3Q
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$21665$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21665$1MHp3Q
                              '()))))
                        g$clause*$21664$1MHp3Q))))
                  (g$get-mutator-indices$21545$1MHp3Q
                    (case-lambda
                      ((g$fields$21652$1MHp3Q)
                       ((letrec ((g$f$21653$1MHp3Q
                                   (case-lambda
                                     ((g$fields$21654$1MHp3Q
                                        g$i$21655$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$21656$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$21657$1MHp3Q)
                                              (if g$ls/false$21657$1MHp3Q
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$21657$1MHp3Q)
                                                ((case-lambda
                                                   ((g$t$21658$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$21659$1MHp3Q)
                                                        (if g$ls/false$21659$1MHp3Q
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$21660$1MHp3Q)
                                                               (cons
                                                                 g$i$21655$1MHp3Q
                                                                 (g$f$21653$1MHp3Q
                                                                   g$rest$21660$1MHp3Q
                                                                   (+ g$i$21655$1MHp3Q
                                                                      '1)))))
                                                            g$ls/false$21659$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$21661$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$21662$1MHp3Q)
                                                                  (if g$ls/false$21662$1MHp3Q
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$21663$1MHp3Q)
                                                                         (g$f$21653$1MHp3Q
                                                                           g$rest$21663$1MHp3Q
                                                                           (+ g$i$21655$1MHp3Q
                                                                              '1))))
                                                                      g$ls/false$21662$1MHp3Q)
                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21661$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$21661$1MHp3Q
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$21658$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$21658$1MHp3Q
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$21656$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$21656$1MHp3Q
                                             '()))))
                                       g$fields$21654$1MHp3Q)))))
                          g$f$21653$1MHp3Q)
                        g$fields$21652$1MHp3Q
                        '0))))
                  (g$get-mutators$21546$1MHp3Q
                    (case-lambda
                      ((g$foo$21631$1MHp3Q g$fields$21632$1MHp3Q)
                       (letrec* ((g$gen-name$21633$1MHp3Q
                                   (case-lambda
                                     ((g$x$21651$1MHp3Q)
                                      (g$datum->syntax$20384$1MHp3Q
                                        g$foo$21631$1MHp3Q
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20385$1MHp3Q
                                                g$foo$21631$1MHp3Q))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20385$1MHp3Q
                                                g$x$21651$1MHp3Q))
                                            '"-set!")))))))
                         ((letrec ((g$f$21634$1MHp3Q
                                     (case-lambda
                                       ((g$fields$21635$1MHp3Q)
                                        ((case-lambda
                                           ((g$t$21636$1MHp3Q)
                                            ((case-lambda
                                               ((g$ls/false$21637$1MHp3Q)
                                                (if g$ls/false$21637$1MHp3Q
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$21637$1MHp3Q)
                                                  ((case-lambda
                                                     ((g$t$21638$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$ls/false$21639$1MHp3Q)
                                                          (if g$ls/false$21639$1MHp3Q
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21640$1MHp3Q
                                                                   g$accessor$21641$1MHp3Q
                                                                   g$mutator$21642$1MHp3Q
                                                                   g$rest$21643$1MHp3Q)
                                                                 (cons
                                                                   g$mutator$21642$1MHp3Q
                                                                   (g$f$21634$1MHp3Q
                                                                     g$rest$21643$1MHp3Q))))
                                                              g$ls/false$21639$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$t$21644$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$ls/false$21645$1MHp3Q)
                                                                    (if g$ls/false$21645$1MHp3Q
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21646$1MHp3Q
                                                                             g$rest$21647$1MHp3Q)
                                                                           (cons
                                                                             (g$gen-name$21633$1MHp3Q
                                                                               g$name$21646$1MHp3Q)
                                                                             (g$f$21634$1MHp3Q
                                                                               g$rest$21647$1MHp3Q))))
                                                                        g$ls/false$21645$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$t$21648$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21649$1MHp3Q)
                                                                              (if g$ls/false$21649$1MHp3Q
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$21650$1MHp3Q)
                                                                                     (g$f$21634$1MHp3Q
                                                                                       g$rest$21650$1MHp3Q)))
                                                                                  g$ls/false$21649$1MHp3Q)
                                                                                (g$syntax-violation$20382$1MHp3Q
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$21648$1MHp3Q))))
                                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                                             g$t$21648$1MHp3Q
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$21644$1MHp3Q))))
                                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                                   g$t$21644$1MHp3Q
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$21638$1MHp3Q))))
                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                         g$t$21638$1MHp3Q
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$21636$1MHp3Q))))
                                             (g$syntax-dispatch$20263$1MHp3Q
                                               g$t$21636$1MHp3Q
                                               '()))))
                                         g$fields$21635$1MHp3Q)))))
                            g$f$21634$1MHp3Q)
                          g$fields$21632$1MHp3Q)))))
                  (g$get-accessors$21547$1MHp3Q
                    (case-lambda
                      ((g$foo$21597$1MHp3Q g$fields$21598$1MHp3Q)
                       (letrec* ((g$gen-name$21599$1MHp3Q
                                   (case-lambda
                                     ((g$x$21630$1MHp3Q)
                                      (g$datum->syntax$20384$1MHp3Q
                                        g$foo$21597$1MHp3Q
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20385$1MHp3Q
                                                g$foo$21597$1MHp3Q))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20385$1MHp3Q
                                                g$x$21630$1MHp3Q)))))))))
                         (g$map$11835$1MHp3Q
                           (case-lambda
                             ((g$field$21600$1MHp3Q)
                              ((case-lambda
                                 ((g$t$21601$1MHp3Q)
                                  ((case-lambda
                                     ((g$ls/false$21602$1MHp3Q)
                                      (if (if g$ls/false$21602$1MHp3Q
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$21603$1MHp3Q
                                                     g$accessor$21604$1MHp3Q
                                                     g$mutator$21605$1MHp3Q)
                                                   (g$id?$19765$1MHp3Q
                                                     g$accessor$21604$1MHp3Q)))
                                                g$ls/false$21602$1MHp3Q))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$21606$1MHp3Q
                                               g$accessor$21607$1MHp3Q
                                               g$mutator$21608$1MHp3Q)
                                             g$accessor$21607$1MHp3Q))
                                          g$ls/false$21602$1MHp3Q)
                                        ((case-lambda
                                           ((g$t$21609$1MHp3Q)
                                            ((case-lambda
                                               ((g$ls/false$21610$1MHp3Q)
                                                (if (if g$ls/false$21610$1MHp3Q
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$21611$1MHp3Q
                                                               g$accessor$21612$1MHp3Q)
                                                             (g$id?$19765$1MHp3Q
                                                               g$accessor$21612$1MHp3Q)))
                                                          g$ls/false$21610$1MHp3Q))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$21613$1MHp3Q
                                                         g$accessor$21614$1MHp3Q)
                                                       g$accessor$21614$1MHp3Q))
                                                    g$ls/false$21610$1MHp3Q)
                                                  ((case-lambda
                                                     ((g$t$21615$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$ls/false$21616$1MHp3Q)
                                                          (if (if g$ls/false$21616$1MHp3Q
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$21617$1MHp3Q)
                                                                       (g$id?$19765$1MHp3Q
                                                                         g$name$21617$1MHp3Q)))
                                                                    g$ls/false$21616$1MHp3Q))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21618$1MHp3Q)
                                                                 (g$gen-name$21599$1MHp3Q
                                                                   g$name$21618$1MHp3Q)))
                                                              g$ls/false$21616$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$t$21619$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$ls/false$21620$1MHp3Q)
                                                                    (if (if g$ls/false$21620$1MHp3Q
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$21621$1MHp3Q)
                                                                                 (g$id?$19765$1MHp3Q
                                                                                   g$name$21621$1MHp3Q)))
                                                                              g$ls/false$21620$1MHp3Q))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21622$1MHp3Q)
                                                                           (g$gen-name$21599$1MHp3Q
                                                                             g$name$21622$1MHp3Q)))
                                                                        g$ls/false$21620$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$t$21623$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21624$1MHp3Q)
                                                                              (if (if g$ls/false$21624$1MHp3Q
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$21625$1MHp3Q)
                                                                                           (g$id?$19765$1MHp3Q
                                                                                             g$name$21625$1MHp3Q)))
                                                                                        g$ls/false$21624$1MHp3Q))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$21626$1MHp3Q)
                                                                                     (g$gen-name$21599$1MHp3Q
                                                                                       g$name$21626$1MHp3Q)))
                                                                                  g$ls/false$21624$1MHp3Q)
                                                                                ((case-lambda
                                                                                   ((g$t$21627$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21628$1MHp3Q)
                                                                                        (if g$ls/false$21628$1MHp3Q
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21629$1MHp3Q)
                                                                                               (g$syntax-violation$20382$1MHp3Q
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$21600$1MHp3Q)))
                                                                                            g$ls/false$21628$1MHp3Q)
                                                                                          (g$syntax-violation$20382$1MHp3Q
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21627$1MHp3Q))))
                                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                                       g$t$21627$1MHp3Q
                                                                                       'any))))
                                                                                 g$t$21623$1MHp3Q))))
                                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                                             g$t$21623$1MHp3Q
                                                                             'any))))
                                                                       g$t$21619$1MHp3Q))))
                                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                                   g$t$21619$1MHp3Q
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$21615$1MHp3Q))))
                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                         g$t$21615$1MHp3Q
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$21609$1MHp3Q))))
                                             (g$syntax-dispatch$20263$1MHp3Q
                                               g$t$21609$1MHp3Q
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$21601$1MHp3Q))))
                                   (g$syntax-dispatch$20263$1MHp3Q
                                     g$t$21601$1MHp3Q
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$21600$1MHp3Q)))
                           g$fields$21598$1MHp3Q)))))
                  (g$enumerate$21548$1MHp3Q
                    (case-lambda
                      ((g$ls$21593$1MHp3Q)
                       ((letrec ((g$f$21594$1MHp3Q
                                   (case-lambda
                                     ((g$ls$21595$1MHp3Q
                                        g$i$21596$1MHp3Q)
                                      (if (null? g$ls$21595$1MHp3Q)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$21596$1MHp3Q
                                            (g$f$21594$1MHp3Q
                                              (cdr g$ls$21595$1MHp3Q)
                                              (+ g$i$21596$1MHp3Q
                                                 '1)))))))))
                          g$f$21594$1MHp3Q)
                        g$ls$21593$1MHp3Q
                        '0))))
                  (g$do-define-record$21549$1MHp3Q
                    (case-lambda
                      ((g$namespec$21573$1MHp3Q g$clause*$21574$1MHp3Q)
                       ((case-lambda
                          ((g$foo$21575$1MHp3Q)
                           ((case-lambda
                              ((g$foo-rtd$21576$1MHp3Q)
                               ((case-lambda
                                  ((g$foo-rcd$21577$1MHp3Q)
                                   ((case-lambda
                                      ((g$protocol$21578$1MHp3Q)
                                       ((case-lambda
                                          ((g$make-foo$21579$1MHp3Q)
                                           ((case-lambda
                                              ((g$fields$21580$1MHp3Q)
                                               ((case-lambda
                                                  ((g$idx*$21581$1MHp3Q)
                                                   ((case-lambda
                                                      ((g$foo-x*$21582$1MHp3Q)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$21583$1MHp3Q)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$21584$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$foo?$21585$1MHp3Q)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$21586$1MHp3Q)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$21587$1MHp3Q)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$21588$1MHp3Q)
                                                                               (g$bless$20226$1MHp3Q
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$21576$1MHp3Q
                                                                                       g$foo-rtd-code$21586$1MHp3Q)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$21578$1MHp3Q
                                                                                         g$protocol-code$21588$1MHp3Q)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$21577$1MHp3Q
                                                                                           g$foo-rcd-code$21587$1MHp3Q)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$21575$1MHp3Q
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$21576$1MHp3Q)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$21577$1MHp3Q)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$21585$1MHp3Q
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$21576$1MHp3Q))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$21579$1MHp3Q
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$21577$1MHp3Q))
                                                                                               (append
                                                                                                 (g$map$11835$1MHp3Q
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$21589$1MHp3Q
                                                                                                        g$idx$21590$1MHp3Q)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$21589$1MHp3Q
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$21576$1MHp3Q
                                                                                                          g$idx$21590$1MHp3Q))))
                                                                                                   g$foo-x*$21582$1MHp3Q
                                                                                                   g$idx*$21581$1MHp3Q)
                                                                                                 (g$map$11835$1MHp3Q
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$21591$1MHp3Q
                                                                                                        g$idx$21592$1MHp3Q)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$21591$1MHp3Q
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$21576$1MHp3Q
                                                                                                          g$idx$21592$1MHp3Q))))
                                                                                                   g$set-foo-x!*$21583$1MHp3Q
                                                                                                   g$set-foo-idx*$21584$1MHp3Q))))))))))))
                                                                            (g$get-protocol-code$21543$1MHp3Q
                                                                              g$clause*$21574$1MHp3Q))))
                                                                        (g$foo-rcd-code$21542$1MHp3Q
                                                                          g$clause*$21574$1MHp3Q
                                                                          g$foo-rtd$21576$1MHp3Q
                                                                          g$protocol$21578$1MHp3Q
                                                                          (g$parent-rcd-code$21541$1MHp3Q
                                                                            g$clause*$21574$1MHp3Q)))))
                                                                    (g$foo-rtd-code$21539$1MHp3Q
                                                                      g$foo$21575$1MHp3Q
                                                                      g$clause*$21574$1MHp3Q
                                                                      (g$parent-rtd-code$21540$1MHp3Q
                                                                        g$clause*$21574$1MHp3Q)))))
                                                                (g$get-record-predicate-name$21537$1MHp3Q
                                                                  g$namespec$21573$1MHp3Q))))
                                                            (g$get-mutator-indices$21545$1MHp3Q
                                                              g$fields$21580$1MHp3Q))))
                                                        (g$get-mutators$21546$1MHp3Q
                                                          g$foo$21575$1MHp3Q
                                                          g$fields$21580$1MHp3Q))))
                                                    (g$get-accessors$21547$1MHp3Q
                                                      g$foo$21575$1MHp3Q
                                                      g$fields$21580$1MHp3Q))))
                                                (g$enumerate$21548$1MHp3Q
                                                  g$fields$21580$1MHp3Q))))
                                            (g$get-fields$21544$1MHp3Q
                                              g$clause*$21574$1MHp3Q))))
                                        (g$get-record-constructor-name$21536$1MHp3Q
                                          g$namespec$21573$1MHp3Q))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$21535$1MHp3Q
                          g$namespec$21573$1MHp3Q)))))
                  (g$verify-clauses$21550$1MHp3Q
                    (case-lambda
                      ((g$x$21555$1MHp3Q g$cls*$21556$1MHp3Q)
                       (letrec* ((g$valid-kwds$21557$1MHp3Q
                                   (g$map$11835$1MHp3Q
                                     g$bless$20226$1MHp3Q
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$21558$1MHp3Q
                                   (case-lambda
                                     ((g$x$21570$1MHp3Q
                                        g$ls$21571$1MHp3Q)
                                      (if (pair? g$ls$21571$1MHp3Q)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$21572$1MHp3Q)
                                              (if g$t$21572$1MHp3Q
                                                g$t$21572$1MHp3Q
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$21558$1MHp3Q
                                                    g$x$21570$1MHp3Q
                                                    (cdr g$ls$21571$1MHp3Q))))))
                                           (g$free-id=?$19769$1MHp3Q
                                             g$x$21570$1MHp3Q
                                             (car g$ls$21571$1MHp3Q))))
                                        '#f)))))
                         ((letrec ((g$f$21559$1MHp3Q
                                     (case-lambda
                                       ((g$cls*$21560$1MHp3Q
                                          g$seen*$21561$1MHp3Q)
                                        (if (not (null?
                                                   g$cls*$21560$1MHp3Q))
                                          ((case-lambda
                                             ((g$t$21562$1MHp3Q)
                                              ((case-lambda
                                                 ((g$ls/false$21563$1MHp3Q)
                                                  (if g$ls/false$21563$1MHp3Q
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$21564$1MHp3Q
                                                           g$rest$21565$1MHp3Q)
                                                         (if ((case-lambda
                                                                ((g$t$21566$1MHp3Q)
                                                                 (if g$t$21566$1MHp3Q
                                                                   g$t$21566$1MHp3Q
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$21558$1MHp3Q
                                                                            g$kwd$21564$1MHp3Q
                                                                            g$valid-kwds$21557$1MHp3Q))))))
                                                              (not (g$id?$19765$1MHp3Q
                                                                     g$kwd$21564$1MHp3Q)))
                                                           (g$syntax-violation$20382$1MHp3Q
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$21564$1MHp3Q)
                                                           (if (g$bound-id-member?$19772$1MHp3Q
                                                                 g$kwd$21564$1MHp3Q
                                                                 g$seen*$21561$1MHp3Q)
                                                             (g$syntax-violation$20382$1MHp3Q
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$21555$1MHp3Q
                                                               g$kwd$21564$1MHp3Q)
                                                             (begin
                                                               '#f
                                                               (g$f$21559$1MHp3Q
                                                                 (cdr g$cls*$21560$1MHp3Q)
                                                                 (cons
                                                                   g$kwd$21564$1MHp3Q
                                                                   g$seen*$21561$1MHp3Q)))))))
                                                      g$ls/false$21563$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$t$21567$1MHp3Q)
                                                        ((case-lambda
                                                           ((g$ls/false$21568$1MHp3Q)
                                                            (if g$ls/false$21568$1MHp3Q
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$21569$1MHp3Q)
                                                                   (g$syntax-violation$20382$1MHp3Q
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$21569$1MHp3Q)))
                                                                g$ls/false$21568$1MHp3Q)
                                                              (g$syntax-violation$20382$1MHp3Q
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21567$1MHp3Q))))
                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                           g$t$21567$1MHp3Q
                                                           'any))))
                                                     g$t$21562$1MHp3Q))))
                                               (g$syntax-dispatch$20263$1MHp3Q
                                                 g$t$21562$1MHp3Q
                                                 '(any . any)))))
                                           (car g$cls*$21560$1MHp3Q))
                                          (void))))))
                            g$f$21559$1MHp3Q)
                          g$cls*$21556$1MHp3Q
                          '()))))))
          ((case-lambda
             ((g$t$21551$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$21552$1MHp3Q)
                  (if g$ls/false$21552$1MHp3Q
                    (apply
                      (case-lambda
                        ((g$namespec$21553$1MHp3Q
                           g$clause*$21554$1MHp3Q)
                         (begin
                           (g$verify-clauses$21550$1MHp3Q
                             g$x$21533$1MHp3Q
                             g$clause*$21554$1MHp3Q)
                           (g$do-define-record$21549$1MHp3Q
                             g$namespec$21553$1MHp3Q
                             g$clause*$21554$1MHp3Q))))
                      g$ls/false$21552$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$21551$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$21551$1MHp3Q
                 '(_ any . each-any)))))
           g$x$21533$1MHp3Q)))))
   (g$define-condition-type-macro$20258$1MHp3Q
     g$define-condition-type-macro$23854$1MHp3Q
     (case-lambda
       ((g$x$21789$1MHp3Q)
        (letrec* ((g$mkname$21790$1MHp3Q
                    (case-lambda
                      ((g$name$21813$1MHp3Q g$suffix$21814$1MHp3Q)
                       (g$datum->syntax$20384$1MHp3Q
                         g$name$21813$1MHp3Q
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$20385$1MHp3Q
                                 g$name$21813$1MHp3Q))
                             g$suffix$21814$1MHp3Q)))))))
          ((case-lambda
             ((g$t$21791$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$21792$1MHp3Q)
                  (if (if g$ls/false$21792$1MHp3Q
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$21793$1MHp3Q
                                 g$name$21794$1MHp3Q
                                 g$super$21795$1MHp3Q
                                 g$constructor$21796$1MHp3Q
                                 g$predicate$21797$1MHp3Q
                                 g$field*$21798$1MHp3Q
                                 g$accessor*$21799$1MHp3Q)
                               (if (g$id?$19765$1MHp3Q
                                     g$name$21794$1MHp3Q)
                                 (if (g$id?$19765$1MHp3Q
                                       g$super$21795$1MHp3Q)
                                   (if (g$id?$19765$1MHp3Q
                                         g$constructor$21796$1MHp3Q)
                                     (if (g$id?$19765$1MHp3Q
                                           g$predicate$21797$1MHp3Q)
                                       (if (g$for-all$11833$1MHp3Q
                                             g$id?$19765$1MHp3Q
                                             g$field*$21798$1MHp3Q)
                                         (begin
                                           '#f
                                           (g$for-all$11833$1MHp3Q
                                             g$id?$19765$1MHp3Q
                                             g$accessor*$21799$1MHp3Q))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$21792$1MHp3Q))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$21800$1MHp3Q
                           g$name$21801$1MHp3Q
                           g$super$21802$1MHp3Q
                           g$constructor$21803$1MHp3Q
                           g$predicate$21804$1MHp3Q
                           g$field*$21805$1MHp3Q
                           g$accessor*$21806$1MHp3Q)
                         ((case-lambda
                            ((g$aux-accessor*$21807$1MHp3Q)
                             (g$bless$20226$1MHp3Q
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$21801$1MHp3Q
                                         g$constructor$21803$1MHp3Q
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$21802$1MHp3Q)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11835$1MHp3Q
                                               (case-lambda
                                                 ((g$field$21808$1MHp3Q
                                                    g$aux$21809$1MHp3Q)
                                                  (list
                                                    'immutable
                                                    g$field$21808$1MHp3Q
                                                    g$aux$21809$1MHp3Q)))
                                               g$field*$21805$1MHp3Q
                                               g$aux-accessor*$21807$1MHp3Q))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$21804$1MHp3Q
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$21801$1MHp3Q)))
                                     (g$map$11835$1MHp3Q
                                       (case-lambda
                                         ((g$accessor$21810$1MHp3Q
                                            g$aux$21811$1MHp3Q)
                                          (list
                                            'define
                                            g$accessor$21810$1MHp3Q
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$21801$1MHp3Q)
                                              g$aux$21811$1MHp3Q))))
                                       g$accessor*$21806$1MHp3Q
                                       g$aux-accessor*$21807$1MHp3Q)))))))
                          (g$map$11835$1MHp3Q
                            (case-lambda ((g$x$21812$1MHp3Q) (gensym)))
                            g$accessor*$21806$1MHp3Q))))
                      g$ls/false$21792$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$21791$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$21791$1MHp3Q
                 '(any any any any any . #(each (any any)))))))
           g$x$21789$1MHp3Q)))))
   (g$incorrect-usage-macro$20259$1MHp3Q
     g$incorrect-usage-macro$23855$1MHp3Q
     (case-lambda
       ((g$e$21815$1MHp3Q)
        (g$syntax-violation$20382$1MHp3Q
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$21815$1MHp3Q))))
   (g$parameterize-macro$20260$1MHp3Q
     g$parameterize-macro$23856$1MHp3Q
     (case-lambda
       ((g$e$21816$1MHp3Q)
        ((case-lambda
           ((g$t$21817$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21818$1MHp3Q)
                (if g$ls/false$21818$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$b$21819$1MHp3Q g$b*$21820$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$21819$1MHp3Q
                               g$b*$21820$1MHp3Q))))))
                    g$ls/false$21818$1MHp3Q)
                  ((case-lambda
                     ((g$t$21821$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$21822$1MHp3Q)
                          (if g$ls/false$21822$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$olhs*$21823$1MHp3Q
                                   g$orhs*$21824$1MHp3Q
                                   g$b$21825$1MHp3Q
                                   g$b*$21826$1MHp3Q)
                                 ((case-lambda
                                    ((g$lhs*$21827$1MHp3Q
                                       g$rhs*$21828$1MHp3Q)
                                     (g$bless$20226$1MHp3Q
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$21827$1MHp3Q
                                             g$rhs*$21828$1MHp3Q)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11835$1MHp3Q
                                                       (case-lambda
                                                         ((g$lhs$21829$1MHp3Q
                                                            g$rhs$21830$1MHp3Q)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$21829$1MHp3Q)))
                                                            (list
                                                              g$lhs$21829$1MHp3Q
                                                              g$rhs$21830$1MHp3Q)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$21830$1MHp3Q
                                                                '(t))))))
                                                       g$lhs*$21827$1MHp3Q
                                                       g$rhs*$21828$1MHp3Q)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$21825$1MHp3Q
                                                         g$b*$21826$1MHp3Q)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$21823$1MHp3Q
                                           g$orhs*$21824$1MHp3Q)))))
                                  (g$generate-temporaries$20372$1MHp3Q
                                    g$olhs*$21823$1MHp3Q)
                                  (g$generate-temporaries$20372$1MHp3Q
                                    g$orhs*$21824$1MHp3Q))))
                              g$ls/false$21822$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$21821$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$21821$1MHp3Q
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$21817$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21817$1MHp3Q
               '(_ () any . each-any)))))
         g$e$21816$1MHp3Q))))
   (g$foreign-call-transformer$20261$1MHp3Q
     g$foreign-call-transformer$23857$1MHp3Q
     (case-lambda
       ((g$e$21831$1MHp3Q g$r$21832$1MHp3Q g$mr$21833$1MHp3Q)
        ((case-lambda
           ((g$t$21834$1MHp3Q)
            ((case-lambda
               ((g$ls/false$21835$1MHp3Q)
                (if g$ls/false$21835$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$name$21836$1MHp3Q g$arg*$21837$1MHp3Q)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$20281$1MHp3Q
                             g$name$21836$1MHp3Q
                             g$r$21832$1MHp3Q
                             g$mr$21833$1MHp3Q)
                           (g$chi-expr*$20279$1MHp3Q
                             g$arg*$21837$1MHp3Q
                             g$r$21832$1MHp3Q
                             g$mr$21833$1MHp3Q)))))
                    g$ls/false$21835$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$21834$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$21834$1MHp3Q
               '(_ any . each-any)))))
         g$e$21831$1MHp3Q))))
   (g$convert-pattern$20262$1MHp3Q
     g$convert-pattern$23858$1MHp3Q
     (case-lambda
       ((g$pattern$21838$1MHp3Q g$keys$21839$1MHp3Q)
        (letrec* ((g$cvt*$21840$1MHp3Q
                    (case-lambda
                      ((g$p*$21920$1MHp3Q
                         g$n$21921$1MHp3Q
                         g$ids$21922$1MHp3Q)
                       (if (null? g$p*$21920$1MHp3Q)
                         (values '() g$ids$21922$1MHp3Q)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$21840$1MHp3Q
                                (cdr g$p*$21920$1MHp3Q)
                                g$n$21921$1MHp3Q
                                g$ids$21922$1MHp3Q)))
                           (case-lambda
                             ((g$y$21925$1MHp3Q g$ids$21926$1MHp3Q)
                              ((case-lambda
                                 ((g$ids$21927$1MHp3Q g$y$21928$1MHp3Q)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$21841$1MHp3Q
                                         (car g$p*$21920$1MHp3Q)
                                         g$n$21921$1MHp3Q
                                         g$ids$21927$1MHp3Q)))
                                    (case-lambda
                                      ((g$x$21931$1MHp3Q
                                         g$ids$21932$1MHp3Q)
                                       ((case-lambda
                                          ((g$ids$21933$1MHp3Q
                                             g$x$21934$1MHp3Q)
                                           (values
                                             (cons
                                               g$x$21934$1MHp3Q
                                               g$y$21928$1MHp3Q)
                                             g$ids$21933$1MHp3Q)))
                                        g$ids$21932$1MHp3Q
                                        g$x$21931$1MHp3Q))))))
                               g$ids$21926$1MHp3Q
                               g$y$21925$1MHp3Q))))))))
                  (g$cvt$21841$1MHp3Q
                    (case-lambda
                      ((g$p$21842$1MHp3Q
                         g$n$21843$1MHp3Q
                         g$ids$21844$1MHp3Q)
                       ((case-lambda
                          ((g$t$21845$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$21846$1MHp3Q)
                               (if (if g$ls/false$21846$1MHp3Q
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$21847$1MHp3Q)
                                            (g$id?$19765$1MHp3Q
                                              g$id$21847$1MHp3Q)))
                                         g$ls/false$21846$1MHp3Q))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$21848$1MHp3Q)
                                      (if (g$bound-id-member?$19772$1MHp3Q
                                            g$p$21842$1MHp3Q
                                            g$keys$21839$1MHp3Q)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$21842$1MHp3Q)
                                          g$ids$21844$1MHp3Q)
                                        (if (g$free-id=?$19769$1MHp3Q
                                              g$p$21842$1MHp3Q
                                              (g$scheme-stx$20206$1MHp3Q
                                                '_))
                                          (values '_ g$ids$21844$1MHp3Q)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$21842$1MHp3Q
                                                  g$n$21843$1MHp3Q)
                                                g$ids$21844$1MHp3Q)))))))
                                   g$ls/false$21846$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$21849$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$21850$1MHp3Q)
                                         (if (if g$ls/false$21850$1MHp3Q
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21851$1MHp3Q
                                                        g$dots$21852$1MHp3Q)
                                                      (g$ellipsis?$20264$1MHp3Q
                                                        g$dots$21852$1MHp3Q)))
                                                   g$ls/false$21850$1MHp3Q))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$21853$1MHp3Q
                                                  g$dots$21854$1MHp3Q)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$21841$1MHp3Q
                                                       g$p$21853$1MHp3Q
                                                       (+ g$n$21843$1MHp3Q
                                                          '1)
                                                       g$ids$21844$1MHp3Q)))
                                                  (case-lambda
                                                    ((g$p$21857$1MHp3Q
                                                       g$ids$21858$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$ids$21859$1MHp3Q
                                                           g$p$21860$1MHp3Q)
                                                         (values
                                                           (if (eq? g$p$21860$1MHp3Q
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$21860$1MHp3Q))
                                                           g$ids$21859$1MHp3Q)))
                                                      g$ids$21858$1MHp3Q
                                                      g$p$21857$1MHp3Q))))))
                                             g$ls/false$21850$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$21861$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$21862$1MHp3Q)
                                                   (if (if g$ls/false$21862$1MHp3Q
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$21863$1MHp3Q
                                                                  g$dots$21864$1MHp3Q
                                                                  g$ys$21865$1MHp3Q
                                                                  g$z$21866$1MHp3Q)
                                                                (g$ellipsis?$20264$1MHp3Q
                                                                  g$dots$21864$1MHp3Q)))
                                                             g$ls/false$21862$1MHp3Q))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$21867$1MHp3Q
                                                            g$dots$21868$1MHp3Q
                                                            g$ys$21869$1MHp3Q
                                                            g$z$21870$1MHp3Q)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$21841$1MHp3Q
                                                                 g$z$21870$1MHp3Q
                                                                 g$n$21843$1MHp3Q
                                                                 g$ids$21844$1MHp3Q)))
                                                            (case-lambda
                                                              ((g$z$21873$1MHp3Q
                                                                 g$ids$21874$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$ids$21875$1MHp3Q
                                                                     g$z$21876$1MHp3Q)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$21840$1MHp3Q
                                                                          g$ys$21869$1MHp3Q
                                                                          g$n$21843$1MHp3Q
                                                                          g$ids$21875$1MHp3Q)))
                                                                     (case-lambda
                                                                       ((g$ys$21879$1MHp3Q
                                                                          g$ids$21880$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ids$21881$1MHp3Q
                                                                              g$ys$21882$1MHp3Q)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$21841$1MHp3Q
                                                                                   g$x$21867$1MHp3Q
                                                                                   (+ g$n$21843$1MHp3Q
                                                                                      '1)
                                                                                   g$ids$21881$1MHp3Q)))
                                                                              (case-lambda
                                                                                ((g$x$21885$1MHp3Q
                                                                                   g$ids$21886$1MHp3Q)
                                                                                 ((case-lambda
                                                                                    ((g$ids$21887$1MHp3Q
                                                                                       g$x$21888$1MHp3Q)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$21888$1MHp3Q
                                                                                         (g$reverse$12684$1MHp3Q
                                                                                           g$ys$21882$1MHp3Q)
                                                                                         g$z$21876$1MHp3Q)
                                                                                       g$ids$21887$1MHp3Q)))
                                                                                  g$ids$21886$1MHp3Q
                                                                                  g$x$21885$1MHp3Q))))))
                                                                         g$ids$21880$1MHp3Q
                                                                         g$ys$21879$1MHp3Q))))))
                                                                g$ids$21874$1MHp3Q
                                                                g$z$21873$1MHp3Q))))))
                                                       g$ls/false$21862$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$t$21889$1MHp3Q)
                                                         ((case-lambda
                                                            ((g$ls/false$21890$1MHp3Q)
                                                             (if g$ls/false$21890$1MHp3Q
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$21891$1MHp3Q
                                                                      g$y$21892$1MHp3Q)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$21841$1MHp3Q
                                                                           g$y$21892$1MHp3Q
                                                                           g$n$21843$1MHp3Q
                                                                           g$ids$21844$1MHp3Q)))
                                                                      (case-lambda
                                                                        ((g$y$21895$1MHp3Q
                                                                           g$ids$21896$1MHp3Q)
                                                                         ((case-lambda
                                                                            ((g$ids$21897$1MHp3Q
                                                                               g$y$21898$1MHp3Q)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$21841$1MHp3Q
                                                                                    g$x$21891$1MHp3Q
                                                                                    g$n$21843$1MHp3Q
                                                                                    g$ids$21897$1MHp3Q)))
                                                                               (case-lambda
                                                                                 ((g$x$21901$1MHp3Q
                                                                                    g$ids$21902$1MHp3Q)
                                                                                  ((case-lambda
                                                                                     ((g$ids$21903$1MHp3Q
                                                                                        g$x$21904$1MHp3Q)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$21904$1MHp3Q
                                                                                          g$y$21898$1MHp3Q)
                                                                                        g$ids$21903$1MHp3Q)))
                                                                                   g$ids$21902$1MHp3Q
                                                                                   g$x$21901$1MHp3Q))))))
                                                                          g$ids$21896$1MHp3Q
                                                                          g$y$21895$1MHp3Q))))))
                                                                 g$ls/false$21890$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$t$21905$1MHp3Q)
                                                                   ((case-lambda
                                                                      ((g$ls/false$21906$1MHp3Q)
                                                                       (if g$ls/false$21906$1MHp3Q
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$21844$1MHp3Q)))
                                                                           g$ls/false$21906$1MHp3Q)
                                                                         ((case-lambda
                                                                            ((g$t$21907$1MHp3Q)
                                                                             ((case-lambda
                                                                                ((g$ls/false$21908$1MHp3Q)
                                                                                 (if (if g$ls/false$21908$1MHp3Q
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$21909$1MHp3Q)
                                                                                              (not (g$stx?$19737$1MHp3Q
                                                                                                     g$p$21909$1MHp3Q))))
                                                                                           g$ls/false$21908$1MHp3Q))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$21910$1MHp3Q)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$21841$1MHp3Q
                                                                                               g$p$21910$1MHp3Q
                                                                                               g$n$21843$1MHp3Q
                                                                                               g$ids$21844$1MHp3Q)))
                                                                                          (case-lambda
                                                                                            ((g$p$21913$1MHp3Q
                                                                                               g$ids$21914$1MHp3Q)
                                                                                             ((case-lambda
                                                                                                ((g$ids$21915$1MHp3Q
                                                                                                   g$p$21916$1MHp3Q)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$21916$1MHp3Q)
                                                                                                   g$ids$21915$1MHp3Q)))
                                                                                              g$ids$21914$1MHp3Q
                                                                                              g$p$21913$1MHp3Q))))))
                                                                                     g$ls/false$21908$1MHp3Q)
                                                                                   ((case-lambda
                                                                                      ((g$t$21917$1MHp3Q)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$21918$1MHp3Q)
                                                                                           (if g$ls/false$21918$1MHp3Q
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$21919$1MHp3Q)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$19776$1MHp3Q
                                                                                                        g$datum$21919$1MHp3Q))
                                                                                                    g$ids$21844$1MHp3Q)))
                                                                                               g$ls/false$21918$1MHp3Q)
                                                                                             (g$syntax-violation$20382$1MHp3Q
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$21917$1MHp3Q))))
                                                                                        (g$syntax-dispatch$20263$1MHp3Q
                                                                                          g$t$21917$1MHp3Q
                                                                                          'any))))
                                                                                    g$t$21907$1MHp3Q))))
                                                                              (g$syntax-dispatch$20263$1MHp3Q
                                                                                g$t$21907$1MHp3Q
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$21905$1MHp3Q))))
                                                                    (g$syntax-dispatch$20263$1MHp3Q
                                                                      g$t$21905$1MHp3Q
                                                                      '()))))
                                                                g$t$21889$1MHp3Q))))
                                                          (g$syntax-dispatch$20263$1MHp3Q
                                                            g$t$21889$1MHp3Q
                                                            '(any .
                                                                  any)))))
                                                      g$t$21861$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$21861$1MHp3Q
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$21849$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$21849$1MHp3Q
                                        '(any any)))))
                                  g$t$21845$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$21845$1MHp3Q
                              'any))))
                        g$p$21842$1MHp3Q)))))
          (g$cvt$21841$1MHp3Q g$pattern$21838$1MHp3Q '0 '())))))
   (g$syntax-dispatch$20263$1MHp3Q
     g$syntax-dispatch$23859$1MHp3Q
     (case-lambda
       ((g$e$21935$1MHp3Q g$p$21936$1MHp3Q)
        (letrec* ((g$stx^$21937$1MHp3Q
                    (case-lambda
                      ((g$e$22045$1MHp3Q
                         g$m*$22046$1MHp3Q
                         g$s*$22047$1MHp3Q
                         g$ae*$22048$1MHp3Q)
                       (if (if (null? g$m*$22046$1MHp3Q)
                             (if (null? g$s*$22047$1MHp3Q)
                               (begin '#f (null? g$ae*$22048$1MHp3Q))
                               '#f)
                             '#f)
                         g$e$22045$1MHp3Q
                         (g$mkstx$19753$1MHp3Q
                           g$e$22045$1MHp3Q
                           g$m*$22046$1MHp3Q
                           g$s*$22047$1MHp3Q
                           g$ae*$22048$1MHp3Q)))))
                  (g$match-each$21938$1MHp3Q
                    (case-lambda
                      ((g$e$22029$1MHp3Q
                         g$p$22030$1MHp3Q
                         g$m*$22031$1MHp3Q
                         g$s*$22032$1MHp3Q
                         g$ae*$22033$1MHp3Q)
                       (if (pair? g$e$22029$1MHp3Q)
                         ((case-lambda
                            ((g$first$22034$1MHp3Q)
                             (if g$first$22034$1MHp3Q
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$22035$1MHp3Q)
                                     (if g$rest$22035$1MHp3Q
                                       (begin
                                         '#f
                                         (cons
                                           g$first$22034$1MHp3Q
                                           g$rest$22035$1MHp3Q))
                                       '#f)))
                                  (g$match-each$21938$1MHp3Q
                                    (cdr g$e$22029$1MHp3Q)
                                    g$p$22030$1MHp3Q
                                    g$m*$22031$1MHp3Q
                                    g$s*$22032$1MHp3Q
                                    g$ae*$22033$1MHp3Q)))
                               '#f)))
                          (g$match$21944$1MHp3Q
                            (car g$e$22029$1MHp3Q)
                            g$p$22030$1MHp3Q
                            g$m*$22031$1MHp3Q
                            g$s*$22032$1MHp3Q
                            g$ae*$22033$1MHp3Q
                            '()))
                         (if (null? g$e$22029$1MHp3Q)
                           '()
                           (if (g$stx?$19737$1MHp3Q g$e$22029$1MHp3Q)
                             (if (not (g$top-marked?$19699$1MHp3Q
                                        g$m*$22031$1MHp3Q))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19752$1MHp3Q
                                        g$m*$22031$1MHp3Q
                                        g$s*$22032$1MHp3Q
                                        g$ae*$22033$1MHp3Q
                                        g$e$22029$1MHp3Q)))
                                   (case-lambda
                                     ((g$m*$22039$1MHp3Q
                                        g$s*$22040$1MHp3Q
                                        g$ae*$22041$1MHp3Q)
                                      ((case-lambda
                                         ((g$ae*$22042$1MHp3Q
                                            g$s*$22043$1MHp3Q
                                            g$m*$22044$1MHp3Q)
                                          (g$match-each$21938$1MHp3Q
                                            (g$stx-expr$19739$1MHp3Q
                                              g$e$22029$1MHp3Q)
                                            g$p$22030$1MHp3Q
                                            g$m*$22044$1MHp3Q
                                            g$s*$22043$1MHp3Q
                                            g$ae*$22042$1MHp3Q)))
                                       g$ae*$22041$1MHp3Q
                                       g$s*$22040$1MHp3Q
                                       g$m*$22039$1MHp3Q)))))
                               '#f)
                             (if (annotation? g$e$22029$1MHp3Q)
                               (g$match-each$21938$1MHp3Q
                                 (annotation-expression
                                   g$e$22029$1MHp3Q)
                                 g$p$22030$1MHp3Q
                                 g$m*$22031$1MHp3Q
                                 g$s*$22032$1MHp3Q
                                 g$ae*$22033$1MHp3Q)
                               (begin '#f '#f))))))))
                  (g$match-each+$21939$1MHp3Q
                    (case-lambda
                      ((g$e$21997$1MHp3Q
                         g$x-pat$21998$1MHp3Q
                         g$y-pat$21999$1MHp3Q
                         g$z-pat$22000$1MHp3Q
                         g$m*$22001$1MHp3Q
                         g$s*$22002$1MHp3Q
                         g$ae*$22003$1MHp3Q
                         g$r$22004$1MHp3Q)
                       ((letrec ((g$f$22005$1MHp3Q
                                   (case-lambda
                                     ((g$e$22006$1MHp3Q
                                        g$m*$22007$1MHp3Q
                                        g$s*$22008$1MHp3Q
                                        g$ae*$22009$1MHp3Q)
                                      (if (pair? g$e$22006$1MHp3Q)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$22005$1MHp3Q
                                               (cdr g$e$22006$1MHp3Q)
                                               g$m*$22007$1MHp3Q
                                               g$s*$22008$1MHp3Q
                                               g$ae*$22009$1MHp3Q)))
                                          (case-lambda
                                            ((g$xr*$22013$1MHp3Q
                                               g$y-pat$22014$1MHp3Q
                                               g$r$22015$1MHp3Q)
                                             ((case-lambda
                                                ((g$r$22016$1MHp3Q
                                                   g$y-pat$22017$1MHp3Q
                                                   g$xr*$22018$1MHp3Q)
                                                 (if g$r$22016$1MHp3Q
                                                   (if (null?
                                                         g$y-pat$22017$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$xr$22019$1MHp3Q)
                                                         (if g$xr$22019$1MHp3Q
                                                           (values
                                                             (cons
                                                               g$xr$22019$1MHp3Q
                                                               g$xr*$22018$1MHp3Q)
                                                             g$y-pat$22017$1MHp3Q
                                                             g$r$22016$1MHp3Q)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$21944$1MHp3Q
                                                        (car g$e$22006$1MHp3Q)
                                                        g$x-pat$21998$1MHp3Q
                                                        g$m*$22007$1MHp3Q
                                                        g$s*$22008$1MHp3Q
                                                        g$ae*$22009$1MHp3Q
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$22017$1MHp3Q)
                                                       (g$match$21944$1MHp3Q
                                                         (car g$e$22006$1MHp3Q)
                                                         (car g$y-pat$22017$1MHp3Q)
                                                         g$m*$22007$1MHp3Q
                                                         g$s*$22008$1MHp3Q
                                                         g$ae*$22009$1MHp3Q
                                                         g$r$22016$1MHp3Q)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$22015$1MHp3Q
                                              g$y-pat$22014$1MHp3Q
                                              g$xr*$22013$1MHp3Q))))
                                        (if (g$stx?$19737$1MHp3Q
                                              g$e$22006$1MHp3Q)
                                          (if (g$top-marked?$19699$1MHp3Q
                                                g$m*$22007$1MHp3Q)
                                            (values
                                              '()
                                              g$y-pat$21999$1MHp3Q
                                              (g$match$21944$1MHp3Q
                                                g$e$22006$1MHp3Q
                                                g$z-pat$22000$1MHp3Q
                                                g$m*$22007$1MHp3Q
                                                g$s*$22008$1MHp3Q
                                                g$ae*$22009$1MHp3Q
                                                g$r$22004$1MHp3Q))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$19752$1MHp3Q
                                                   g$m*$22007$1MHp3Q
                                                   g$s*$22008$1MHp3Q
                                                   g$ae*$22009$1MHp3Q
                                                   g$e$22006$1MHp3Q)))
                                              (case-lambda
                                                ((g$m*$22023$1MHp3Q
                                                   g$s*$22024$1MHp3Q
                                                   g$ae*$22025$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$ae*$22026$1MHp3Q
                                                       g$s*$22027$1MHp3Q
                                                       g$m*$22028$1MHp3Q)
                                                     (g$f$22005$1MHp3Q
                                                       (g$stx-expr$19739$1MHp3Q
                                                         g$e$22006$1MHp3Q)
                                                       g$m*$22028$1MHp3Q
                                                       g$s*$22027$1MHp3Q
                                                       g$ae*$22026$1MHp3Q)))
                                                  g$ae*$22025$1MHp3Q
                                                  g$s*$22024$1MHp3Q
                                                  g$m*$22023$1MHp3Q)))))
                                          (if (annotation?
                                                g$e$22006$1MHp3Q)
                                            (g$f$22005$1MHp3Q
                                              (annotation-expression
                                                g$e$22006$1MHp3Q)
                                              g$m*$22007$1MHp3Q
                                              g$s*$22008$1MHp3Q
                                              g$ae*$22009$1MHp3Q)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$21999$1MHp3Q
                                                (g$match$21944$1MHp3Q
                                                  g$e$22006$1MHp3Q
                                                  g$z-pat$22000$1MHp3Q
                                                  g$m*$22007$1MHp3Q
                                                  g$s*$22008$1MHp3Q
                                                  g$ae*$22009$1MHp3Q
                                                  g$r$22004$1MHp3Q))))))))))
                          g$f$22005$1MHp3Q)
                        g$e$21997$1MHp3Q
                        g$m*$22001$1MHp3Q
                        g$s*$22002$1MHp3Q
                        g$ae*$22003$1MHp3Q))))
                  (g$match-each-any$21940$1MHp3Q
                    (case-lambda
                      ((g$e$21983$1MHp3Q
                         g$m*$21984$1MHp3Q
                         g$s*$21985$1MHp3Q
                         g$ae*$21986$1MHp3Q)
                       (if (pair? g$e$21983$1MHp3Q)
                         ((case-lambda
                            ((g$l$21987$1MHp3Q)
                             (if g$l$21987$1MHp3Q
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$21937$1MHp3Q
                                     (car g$e$21983$1MHp3Q)
                                     g$m*$21984$1MHp3Q
                                     g$s*$21985$1MHp3Q
                                     g$ae*$21986$1MHp3Q)
                                   g$l$21987$1MHp3Q))
                               '#f)))
                          (g$match-each-any$21940$1MHp3Q
                            (cdr g$e$21983$1MHp3Q)
                            g$m*$21984$1MHp3Q
                            g$s*$21985$1MHp3Q
                            g$ae*$21986$1MHp3Q))
                         (if (null? g$e$21983$1MHp3Q)
                           '()
                           (if (g$stx?$19737$1MHp3Q g$e$21983$1MHp3Q)
                             (if (not (g$top-marked?$19699$1MHp3Q
                                        g$m*$21984$1MHp3Q))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19752$1MHp3Q
                                        g$m*$21984$1MHp3Q
                                        g$s*$21985$1MHp3Q
                                        g$ae*$21986$1MHp3Q
                                        g$e$21983$1MHp3Q)))
                                   (case-lambda
                                     ((g$m*$21991$1MHp3Q
                                        g$s*$21992$1MHp3Q
                                        g$ae*$21993$1MHp3Q)
                                      ((case-lambda
                                         ((g$ae*$21994$1MHp3Q
                                            g$s*$21995$1MHp3Q
                                            g$m*$21996$1MHp3Q)
                                          (g$match-each-any$21940$1MHp3Q
                                            (g$stx-expr$19739$1MHp3Q
                                              g$e$21983$1MHp3Q)
                                            g$m*$21996$1MHp3Q
                                            g$s*$21995$1MHp3Q
                                            g$ae*$21994$1MHp3Q)))
                                       g$ae*$21993$1MHp3Q
                                       g$s*$21992$1MHp3Q
                                       g$m*$21991$1MHp3Q)))))
                               '#f)
                             (if (annotation? g$e$21983$1MHp3Q)
                               (g$match-each-any$21940$1MHp3Q
                                 (annotation-expression
                                   g$e$21983$1MHp3Q)
                                 g$m*$21984$1MHp3Q
                                 g$s*$21985$1MHp3Q
                                 g$ae*$21986$1MHp3Q)
                               (begin '#f '#f))))))))
                  (g$match-empty$21941$1MHp3Q
                    (case-lambda
                      ((g$p$21980$1MHp3Q g$r$21981$1MHp3Q)
                       (if (null? g$p$21980$1MHp3Q)
                         g$r$21981$1MHp3Q
                         (if (eq? g$p$21980$1MHp3Q '_)
                           g$r$21981$1MHp3Q
                           (if (eq? g$p$21980$1MHp3Q 'any)
                             (cons '() g$r$21981$1MHp3Q)
                             (if (pair? g$p$21980$1MHp3Q)
                               (g$match-empty$21941$1MHp3Q
                                 (car g$p$21980$1MHp3Q)
                                 (g$match-empty$21941$1MHp3Q
                                   (cdr g$p$21980$1MHp3Q)
                                   g$r$21981$1MHp3Q))
                               (if (eq? g$p$21980$1MHp3Q 'each-any)
                                 (cons '() g$r$21981$1MHp3Q)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$21982$1MHp3Q)
                                       (if (eqv? g$t$21982$1MHp3Q 'each)
                                         (g$match-empty$21941$1MHp3Q
                                           (g$vector-ref$12680$1MHp3Q
                                             g$p$21980$1MHp3Q
                                             '1)
                                           g$r$21981$1MHp3Q)
                                         (if (eqv?
                                               g$t$21982$1MHp3Q
                                               'each+)
                                           (g$match-empty$21941$1MHp3Q
                                             (g$vector-ref$12680$1MHp3Q
                                               g$p$21980$1MHp3Q
                                               '1)
                                             (g$match-empty$21941$1MHp3Q
                                               (g$reverse$12684$1MHp3Q
                                                 (g$vector-ref$12680$1MHp3Q
                                                   g$p$21980$1MHp3Q
                                                   '2))
                                               (g$match-empty$21941$1MHp3Q
                                                 (g$vector-ref$12680$1MHp3Q
                                                   g$p$21980$1MHp3Q
                                                   '3)
                                                 g$r$21981$1MHp3Q)))
                                           (if (g$memv$11828$1MHp3Q
                                                 g$t$21982$1MHp3Q
                                                 '(free-id atom))
                                             g$r$21981$1MHp3Q
                                             (if (g$memv$11828$1MHp3Q
                                                   g$t$21982$1MHp3Q
                                                   '(scheme-id atom))
                                               g$r$21981$1MHp3Q
                                               (if (eqv?
                                                     g$t$21982$1MHp3Q
                                                     'vector)
                                                 (g$match-empty$21941$1MHp3Q
                                                   (g$vector-ref$12680$1MHp3Q
                                                     g$p$21980$1MHp3Q
                                                     '1)
                                                   g$r$21981$1MHp3Q)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$21980$1MHp3Q)))))))))
                                    (g$vector-ref$12680$1MHp3Q
                                      g$p$21980$1MHp3Q
                                      '0)))))))))))
                  (g$combine$21942$1MHp3Q
                    (case-lambda
                      ((g$r*$21978$1MHp3Q g$r$21979$1MHp3Q)
                       (if (null? (car g$r*$21978$1MHp3Q))
                         g$r$21979$1MHp3Q
                         (cons
                           (g$map$11835$1MHp3Q car g$r*$21978$1MHp3Q)
                           (g$combine$21942$1MHp3Q
                             (g$map$11835$1MHp3Q cdr g$r*$21978$1MHp3Q)
                             g$r$21979$1MHp3Q))))))
                  (g$match*$21943$1MHp3Q
                    (case-lambda
                      ((g$e$21960$1MHp3Q
                         g$p$21961$1MHp3Q
                         g$m*$21962$1MHp3Q
                         g$s*$21963$1MHp3Q
                         g$ae*$21964$1MHp3Q
                         g$r$21965$1MHp3Q)
                       (if (null? g$p$21961$1MHp3Q)
                         (if (null? g$e$21960$1MHp3Q)
                           (begin '#f g$r$21965$1MHp3Q)
                           '#f)
                         (if (pair? g$p$21961$1MHp3Q)
                           (if (pair? g$e$21960$1MHp3Q)
                             (begin
                               '#f
                               (g$match$21944$1MHp3Q
                                 (car g$e$21960$1MHp3Q)
                                 (car g$p$21961$1MHp3Q)
                                 g$m*$21962$1MHp3Q
                                 g$s*$21963$1MHp3Q
                                 g$ae*$21964$1MHp3Q
                                 (g$match$21944$1MHp3Q
                                   (cdr g$e$21960$1MHp3Q)
                                   (cdr g$p$21961$1MHp3Q)
                                   g$m*$21962$1MHp3Q
                                   g$s*$21963$1MHp3Q
                                   g$ae*$21964$1MHp3Q
                                   g$r$21965$1MHp3Q)))
                             '#f)
                           (if (eq? g$p$21961$1MHp3Q 'each-any)
                             ((case-lambda
                                ((g$l$21966$1MHp3Q)
                                 (if g$l$21966$1MHp3Q
                                   (begin
                                     '#f
                                     (cons
                                       g$l$21966$1MHp3Q
                                       g$r$21965$1MHp3Q))
                                   '#f)))
                              (g$match-each-any$21940$1MHp3Q
                                g$e$21960$1MHp3Q
                                g$m*$21962$1MHp3Q
                                g$s*$21963$1MHp3Q
                                g$ae*$21964$1MHp3Q))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$21967$1MHp3Q)
                                   (if (eqv? g$t$21967$1MHp3Q 'each)
                                     (if (null? g$e$21960$1MHp3Q)
                                       (g$match-empty$21941$1MHp3Q
                                         (g$vector-ref$12680$1MHp3Q
                                           g$p$21961$1MHp3Q
                                           '1)
                                         g$r$21965$1MHp3Q)
                                       ((case-lambda
                                          ((g$r*$21968$1MHp3Q)
                                           (if g$r*$21968$1MHp3Q
                                             (begin
                                               '#f
                                               (g$combine$21942$1MHp3Q
                                                 g$r*$21968$1MHp3Q
                                                 g$r$21965$1MHp3Q))
                                             '#f)))
                                        (g$match-each$21938$1MHp3Q
                                          g$e$21960$1MHp3Q
                                          (g$vector-ref$12680$1MHp3Q
                                            g$p$21961$1MHp3Q
                                            '1)
                                          g$m*$21962$1MHp3Q
                                          g$s*$21963$1MHp3Q
                                          g$ae*$21964$1MHp3Q)))
                                     (if (eqv?
                                           g$t$21967$1MHp3Q
                                           'free-id)
                                       (if (g$symbol?$12667$1MHp3Q
                                             g$e$21960$1MHp3Q)
                                         (if (g$top-marked?$19699$1MHp3Q
                                               g$m*$21962$1MHp3Q)
                                           (if (g$free-id=?$19769$1MHp3Q
                                                 (g$stx^$21937$1MHp3Q
                                                   g$e$21960$1MHp3Q
                                                   g$m*$21962$1MHp3Q
                                                   g$s*$21963$1MHp3Q
                                                   g$ae*$21964$1MHp3Q)
                                                 (g$vector-ref$12680$1MHp3Q
                                                   g$p$21961$1MHp3Q
                                                   '1))
                                             (begin
                                               '#f
                                               g$r$21965$1MHp3Q)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$21967$1MHp3Q
                                             'scheme-id)
                                         (if (g$symbol?$12667$1MHp3Q
                                               g$e$21960$1MHp3Q)
                                           (if (g$top-marked?$19699$1MHp3Q
                                                 g$m*$21962$1MHp3Q)
                                             (if (g$free-id=?$19769$1MHp3Q
                                                   (g$stx^$21937$1MHp3Q
                                                     g$e$21960$1MHp3Q
                                                     g$m*$21962$1MHp3Q
                                                     g$s*$21963$1MHp3Q
                                                     g$ae*$21964$1MHp3Q)
                                                   (g$scheme-stx$20206$1MHp3Q
                                                     (g$vector-ref$12680$1MHp3Q
                                                       g$p$21961$1MHp3Q
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$21965$1MHp3Q)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$21967$1MHp3Q
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$21939$1MHp3Q
                                                  g$e$21960$1MHp3Q
                                                  (g$vector-ref$12680$1MHp3Q
                                                    g$p$21961$1MHp3Q
                                                    '1)
                                                  (g$vector-ref$12680$1MHp3Q
                                                    g$p$21961$1MHp3Q
                                                    '2)
                                                  (g$vector-ref$12680$1MHp3Q
                                                    g$p$21961$1MHp3Q
                                                    '3)
                                                  g$m*$21962$1MHp3Q
                                                  g$s*$21963$1MHp3Q
                                                  g$ae*$21964$1MHp3Q
                                                  g$r$21965$1MHp3Q)))
                                             (case-lambda
                                               ((g$xr*$21972$1MHp3Q
                                                  g$y-pat$21973$1MHp3Q
                                                  g$r$21974$1MHp3Q)
                                                ((case-lambda
                                                   ((g$r$21975$1MHp3Q
                                                      g$y-pat$21976$1MHp3Q
                                                      g$xr*$21977$1MHp3Q)
                                                    (if g$r$21975$1MHp3Q
                                                      (if (null?
                                                            g$y-pat$21976$1MHp3Q)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$21977$1MHp3Q)
                                                            (g$match-empty$21941$1MHp3Q
                                                              (g$vector-ref$12680$1MHp3Q
                                                                g$p$21961$1MHp3Q
                                                                '1)
                                                              g$r$21975$1MHp3Q)
                                                            (g$combine$21942$1MHp3Q
                                                              g$xr*$21977$1MHp3Q
                                                              g$r$21975$1MHp3Q)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$21974$1MHp3Q
                                                 g$y-pat$21973$1MHp3Q
                                                 g$xr*$21972$1MHp3Q))))
                                           (if (eqv?
                                                 g$t$21967$1MHp3Q
                                                 'atom)
                                             (if (equal?
                                                   (g$vector-ref$12680$1MHp3Q
                                                     g$p$21961$1MHp3Q
                                                     '1)
                                                   (g$strip$19775$1MHp3Q
                                                     g$e$21960$1MHp3Q
                                                     g$m*$21962$1MHp3Q))
                                               (begin
                                                 '#f
                                                 g$r$21965$1MHp3Q)
                                               '#f)
                                             (if (eqv?
                                                   g$t$21967$1MHp3Q
                                                   'vector)
                                               (if (g$vector?$12665$1MHp3Q
                                                     g$e$21960$1MHp3Q)
                                                 (begin
                                                   '#f
                                                   (g$match$21944$1MHp3Q
                                                     (vector->list
                                                       g$e$21960$1MHp3Q)
                                                     (g$vector-ref$12680$1MHp3Q
                                                       g$p$21961$1MHp3Q
                                                       '1)
                                                     g$m*$21962$1MHp3Q
                                                     g$s*$21963$1MHp3Q
                                                     g$ae*$21964$1MHp3Q
                                                     g$r$21965$1MHp3Q))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$21961$1MHp3Q))))))))))
                                (g$vector-ref$12680$1MHp3Q
                                  g$p$21961$1MHp3Q
                                  '0)))))))))
                  (g$match$21944$1MHp3Q
                    (case-lambda
                      ((g$e$21945$1MHp3Q
                         g$p$21946$1MHp3Q
                         g$m*$21947$1MHp3Q
                         g$s*$21948$1MHp3Q
                         g$ae*$21949$1MHp3Q
                         g$r$21950$1MHp3Q)
                       (if (not g$r$21950$1MHp3Q)
                         '#f
                         (if (eq? g$p$21946$1MHp3Q '_)
                           g$r$21950$1MHp3Q
                           (if (eq? g$p$21946$1MHp3Q 'any)
                             (cons
                               (g$stx^$21937$1MHp3Q
                                 g$e$21945$1MHp3Q
                                 g$m*$21947$1MHp3Q
                                 g$s*$21948$1MHp3Q
                                 g$ae*$21949$1MHp3Q)
                               g$r$21950$1MHp3Q)
                             (if (g$stx?$19737$1MHp3Q g$e$21945$1MHp3Q)
                               (if (not (g$top-marked?$19699$1MHp3Q
                                          g$m*$21947$1MHp3Q))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$19752$1MHp3Q
                                          g$m*$21947$1MHp3Q
                                          g$s*$21948$1MHp3Q
                                          g$ae*$21949$1MHp3Q
                                          g$e$21945$1MHp3Q)))
                                     (case-lambda
                                       ((g$m*$21954$1MHp3Q
                                          g$s*$21955$1MHp3Q
                                          g$ae*$21956$1MHp3Q)
                                        ((case-lambda
                                           ((g$ae*$21957$1MHp3Q
                                              g$s*$21958$1MHp3Q
                                              g$m*$21959$1MHp3Q)
                                            (g$match$21944$1MHp3Q
                                              (g$stx-expr$19739$1MHp3Q
                                                g$e$21945$1MHp3Q)
                                              g$p$21946$1MHp3Q
                                              g$m*$21959$1MHp3Q
                                              g$s*$21958$1MHp3Q
                                              g$ae*$21957$1MHp3Q
                                              g$r$21950$1MHp3Q)))
                                         g$ae*$21956$1MHp3Q
                                         g$s*$21955$1MHp3Q
                                         g$m*$21954$1MHp3Q)))))
                                 '#f)
                               (if (annotation? g$e$21945$1MHp3Q)
                                 (g$match$21944$1MHp3Q
                                   (annotation-expression
                                     g$e$21945$1MHp3Q)
                                   g$p$21946$1MHp3Q
                                   g$m*$21947$1MHp3Q
                                   g$s*$21948$1MHp3Q
                                   g$ae*$21949$1MHp3Q
                                   g$r$21950$1MHp3Q)
                                 (begin
                                   '#f
                                   (g$match*$21943$1MHp3Q
                                     g$e$21945$1MHp3Q
                                     g$p$21946$1MHp3Q
                                     g$m*$21947$1MHp3Q
                                     g$s*$21948$1MHp3Q
                                     g$ae*$21949$1MHp3Q
                                     g$r$21950$1MHp3Q)))))))))))
          (g$match$21944$1MHp3Q
            g$e$21935$1MHp3Q
            g$p$21936$1MHp3Q
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$20264$1MHp3Q
     g$ellipsis?$23860$1MHp3Q
     (case-lambda
       ((g$x$22049$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$x$22049$1MHp3Q)
          (begin
            '#f
            (g$free-id=?$19769$1MHp3Q
              g$x$22049$1MHp3Q
              (g$scheme-stx$20206$1MHp3Q '...)))
          '#f))))
   (g$underscore?$20265$1MHp3Q
     g$underscore?$23861$1MHp3Q
     (case-lambda
       ((g$x$22050$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$x$22050$1MHp3Q)
          (begin
            '#f
            (g$free-id=?$19769$1MHp3Q
              g$x$22050$1MHp3Q
              (g$scheme-stx$20206$1MHp3Q '_)))
          '#f))))
   (g$verify-literals$20266$1MHp3Q
     g$verify-literals$23862$1MHp3Q
     (case-lambda
       ((g$lits$22051$1MHp3Q g$expr$22052$1MHp3Q)
        (g$for-each$11836$1MHp3Q
          (case-lambda
            ((g$x$22053$1MHp3Q)
             (if ((case-lambda
                    ((g$t$22054$1MHp3Q)
                     (if g$t$22054$1MHp3Q
                       g$t$22054$1MHp3Q
                       ((case-lambda
                          ((g$t$22055$1MHp3Q)
                           (if g$t$22055$1MHp3Q
                             g$t$22055$1MHp3Q
                             (begin
                               '#f
                               (g$underscore?$20265$1MHp3Q
                                 g$x$22053$1MHp3Q)))))
                        (g$ellipsis?$20264$1MHp3Q g$x$22053$1MHp3Q)))))
                  (not (g$id?$19765$1MHp3Q g$x$22053$1MHp3Q)))
               (g$syntax-violation$20382$1MHp3Q
                 '#f
                 '"invalid literal"
                 g$expr$22052$1MHp3Q
                 g$x$22053$1MHp3Q)
               (void))))
          g$lits$22051$1MHp3Q))))
   (g$syntax-case-transformer$20267$1MHp3Q
     g$syntax-case-transformer$23863$1MHp3Q
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$22056$1MHp3Q
                     (case-lambda
                       ((g$pvars$22113$1MHp3Q
                          g$expr$22114$1MHp3Q
                          g$y$22115$1MHp3Q
                          g$r$22116$1MHp3Q
                          g$mr$22117$1MHp3Q)
                        ((case-lambda
                           ((g$ids$22118$1MHp3Q g$levels$22119$1MHp3Q)
                            ((case-lambda
                               ((g$labels$22120$1MHp3Q
                                  g$new-vars$22121$1MHp3Q)
                                ((case-lambda
                                   ((g$body$22122$1MHp3Q)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$19687$1MHp3Q
                                        '#f
                                        g$new-vars$22121$1MHp3Q
                                        g$body$22122$1MHp3Q)
                                      g$y$22115$1MHp3Q)))
                                 (g$chi-expr$20281$1MHp3Q
                                   (g$add-subst$19755$1MHp3Q
                                     (g$make-full-rib$19731$1MHp3Q
                                       g$ids$22118$1MHp3Q
                                       g$labels$22120$1MHp3Q)
                                     g$expr$22114$1MHp3Q)
                                   (append
                                     (g$map$11835$1MHp3Q
                                       (case-lambda
                                         ((g$label$22123$1MHp3Q
                                            g$var$22124$1MHp3Q
                                            g$level$22125$1MHp3Q)
                                          (cons
                                            g$label$22123$1MHp3Q
                                            (g$make-binding$19781$1MHp3Q
                                              'syntax
                                              (cons
                                                g$var$22124$1MHp3Q
                                                g$level$22125$1MHp3Q)))))
                                       g$labels$22120$1MHp3Q
                                       g$new-vars$22121$1MHp3Q
                                       (g$map$11835$1MHp3Q
                                         cdr
                                         g$pvars$22113$1MHp3Q))
                                     g$r$22116$1MHp3Q)
                                   g$mr$22117$1MHp3Q))))
                             (g$map$11835$1MHp3Q
                               g$gen-label$19702$1MHp3Q
                               g$ids$22118$1MHp3Q)
                             (g$map$11835$1MHp3Q
                               g$gen-lexical$19700$1MHp3Q
                               g$ids$22118$1MHp3Q))))
                         (g$map$11835$1MHp3Q car g$pvars$22113$1MHp3Q)
                         (g$map$11835$1MHp3Q
                           cdr
                           g$pvars$22113$1MHp3Q)))))
                   (g$invalid-ids-error$22057$1MHp3Q
                     (case-lambda
                       ((g$id*$22107$1MHp3Q
                          g$e$22108$1MHp3Q
                          g$class$22109$1MHp3Q)
                        ((letrec ((g$find$22110$1MHp3Q
                                    (case-lambda
                                      ((g$id*$22111$1MHp3Q
                                         g$ok*$22112$1MHp3Q)
                                       (if (null? g$id*$22111$1MHp3Q)
                                         (g$syntax-violation$20382$1MHp3Q
                                           '#f
                                           '"invalid syntax"
                                           g$e$22108$1MHp3Q)
                                         (if (g$id?$19765$1MHp3Q
                                               (car g$id*$22111$1MHp3Q))
                                           (if (g$bound-id-member?$19772$1MHp3Q
                                                 (car g$id*$22111$1MHp3Q)
                                                 g$ok*$22112$1MHp3Q)
                                             (g$syntax-error$20379$1MHp3Q
                                               (car g$id*$22111$1MHp3Q)
                                               '"duplicate "
                                               g$class$22109$1MHp3Q)
                                             (g$find$22110$1MHp3Q
                                               (cdr g$id*$22111$1MHp3Q)
                                               (cons
                                                 (car g$id*$22111$1MHp3Q)
                                                 g$ok*$22112$1MHp3Q)))
                                           (g$syntax-error$20379$1MHp3Q
                                             (car g$id*$22111$1MHp3Q)
                                             '"invalid "
                                             g$class$22109$1MHp3Q)))))))
                           g$find$22110$1MHp3Q)
                         g$id*$22107$1MHp3Q
                         '()))))
                   (g$gen-clause$22058$1MHp3Q
                     (case-lambda
                       ((g$x$22087$1MHp3Q
                          g$keys$22088$1MHp3Q
                          g$clauses$22089$1MHp3Q
                          g$r$22090$1MHp3Q
                          g$mr$22091$1MHp3Q
                          g$pat$22092$1MHp3Q
                          g$fender$22093$1MHp3Q
                          g$expr$22094$1MHp3Q)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$20262$1MHp3Q
                               g$pat$22092$1MHp3Q
                               g$keys$22088$1MHp3Q)))
                          (case-lambda
                            ((g$p$22097$1MHp3Q g$pvars$22098$1MHp3Q)
                             ((case-lambda
                                ((g$pvars$22099$1MHp3Q g$p$22100$1MHp3Q)
                                 (if (not (g$distinct-bound-ids?$19771$1MHp3Q
                                            (g$map$11835$1MHp3Q
                                              car
                                              g$pvars$22099$1MHp3Q)))
                                   (g$invalid-ids-error$22057$1MHp3Q
                                     (g$map$11835$1MHp3Q
                                       car
                                       g$pvars$22099$1MHp3Q)
                                     g$pat$22092$1MHp3Q
                                     '"pattern variable")
                                   (if (not (g$for-all$11833$1MHp3Q
                                              (case-lambda
                                                ((g$x$22101$1MHp3Q)
                                                 (not (g$ellipsis?$20264$1MHp3Q
                                                        (car g$x$22101$1MHp3Q)))))
                                              g$pvars$22099$1MHp3Q))
                                     (g$syntax-violation$20382$1MHp3Q
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$22092$1MHp3Q)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$22102$1MHp3Q)
                                           ((case-lambda
                                              ((g$test$22103$1MHp3Q)
                                               ((case-lambda
                                                  ((g$conseq$22104$1MHp3Q)
                                                   ((case-lambda
                                                      ((g$altern$22105$1MHp3Q)
                                                       (list
                                                         (g$build-lambda$19687$1MHp3Q
                                                           '#f
                                                           (list
                                                             g$y$22102$1MHp3Q)
                                                           (list
                                                             'if
                                                             g$test$22103$1MHp3Q
                                                             g$conseq$22104$1MHp3Q
                                                             g$altern$22105$1MHp3Q))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$22087$1MHp3Q
                                                           (list
                                                             'quote
                                                             g$p$22100$1MHp3Q)))))
                                                    (g$gen-syntax-case$22059$1MHp3Q
                                                      g$x$22087$1MHp3Q
                                                      g$keys$22088$1MHp3Q
                                                      g$clauses$22089$1MHp3Q
                                                      g$r$22090$1MHp3Q
                                                      g$mr$22091$1MHp3Q))))
                                                (g$build-dispatch-call$22056$1MHp3Q
                                                  g$pvars$22099$1MHp3Q
                                                  g$expr$22094$1MHp3Q
                                                  g$y$22102$1MHp3Q
                                                  g$r$22090$1MHp3Q
                                                  g$mr$22091$1MHp3Q))))
                                            (if (eq? g$fender$22093$1MHp3Q
                                                     '#t)
                                              g$y$22102$1MHp3Q
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$22106$1MHp3Q)
                                                    (list
                                                      'if
                                                      g$y$22102$1MHp3Q
                                                      g$call$22106$1MHp3Q
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$22056$1MHp3Q
                                                   g$pvars$22099$1MHp3Q
                                                   g$fender$22093$1MHp3Q
                                                   g$y$22102$1MHp3Q
                                                   g$r$22090$1MHp3Q
                                                   g$mr$22091$1MHp3Q)))))))
                                        (g$gen-lexical$19700$1MHp3Q
                                          'tmp)))))))
                              g$pvars$22098$1MHp3Q
                              g$p$22097$1MHp3Q)))))))
                   (g$gen-syntax-case$22059$1MHp3Q
                     (case-lambda
                       ((g$x$22070$1MHp3Q
                          g$keys$22071$1MHp3Q
                          g$clauses$22072$1MHp3Q
                          g$r$22073$1MHp3Q
                          g$mr$22074$1MHp3Q)
                        (if (null? g$clauses$22072$1MHp3Q)
                          (list
                            '(primitive syntax-error)
                            g$x$22070$1MHp3Q)
                          ((case-lambda
                             ((g$t$22075$1MHp3Q)
                              ((case-lambda
                                 ((g$ls/false$22076$1MHp3Q)
                                  (if g$ls/false$22076$1MHp3Q
                                    (apply
                                      (case-lambda
                                        ((g$pat$22077$1MHp3Q
                                           g$expr$22078$1MHp3Q)
                                         (if (if (g$id?$19765$1MHp3Q
                                                   g$pat$22077$1MHp3Q)
                                               (if (not (g$bound-id-member?$19772$1MHp3Q
                                                          g$pat$22077$1MHp3Q
                                                          g$keys$22071$1MHp3Q))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$20264$1MHp3Q
                                                          g$pat$22077$1MHp3Q)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$19769$1MHp3Q
                                                 g$pat$22077$1MHp3Q
                                                 (g$scheme-stx$20206$1MHp3Q
                                                   '_))
                                             (g$chi-expr$20281$1MHp3Q
                                               g$expr$22078$1MHp3Q
                                               g$r$22073$1MHp3Q
                                               g$mr$22074$1MHp3Q)
                                             ((case-lambda
                                                ((g$lab$22079$1MHp3Q
                                                   g$lex$22080$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$body$22081$1MHp3Q)
                                                     (list
                                                       (g$build-lambda$19687$1MHp3Q
                                                         '#f
                                                         (list
                                                           g$lex$22080$1MHp3Q)
                                                         g$body$22081$1MHp3Q)
                                                       g$x$22070$1MHp3Q)))
                                                  (g$chi-expr$20281$1MHp3Q
                                                    (g$add-subst$19755$1MHp3Q
                                                      (g$make-full-rib$19731$1MHp3Q
                                                        (list
                                                          g$pat$22077$1MHp3Q)
                                                        (list
                                                          g$lab$22079$1MHp3Q))
                                                      g$expr$22078$1MHp3Q)
                                                    (cons
                                                      (cons
                                                        g$lab$22079$1MHp3Q
                                                        (g$make-binding$19781$1MHp3Q
                                                          'syntax
                                                          (cons
                                                            g$lex$22080$1MHp3Q
                                                            '0)))
                                                      g$r$22073$1MHp3Q)
                                                    g$mr$22074$1MHp3Q))))
                                              (g$gen-label$19702$1MHp3Q
                                                g$pat$22077$1MHp3Q)
                                              (g$gen-lexical$19700$1MHp3Q
                                                g$pat$22077$1MHp3Q)))
                                           (g$gen-clause$22058$1MHp3Q
                                             g$x$22070$1MHp3Q
                                             g$keys$22071$1MHp3Q
                                             (cdr g$clauses$22072$1MHp3Q)
                                             g$r$22073$1MHp3Q
                                             g$mr$22074$1MHp3Q
                                             g$pat$22077$1MHp3Q
                                             '#t
                                             g$expr$22078$1MHp3Q))))
                                      g$ls/false$22076$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$22082$1MHp3Q)
                                        ((case-lambda
                                           ((g$ls/false$22083$1MHp3Q)
                                            (if g$ls/false$22083$1MHp3Q
                                              (apply
                                                (case-lambda
                                                  ((g$pat$22084$1MHp3Q
                                                     g$fender$22085$1MHp3Q
                                                     g$expr$22086$1MHp3Q)
                                                   (g$gen-clause$22058$1MHp3Q
                                                     g$x$22070$1MHp3Q
                                                     g$keys$22071$1MHp3Q
                                                     (cdr g$clauses$22072$1MHp3Q)
                                                     g$r$22073$1MHp3Q
                                                     g$mr$22074$1MHp3Q
                                                     g$pat$22084$1MHp3Q
                                                     g$fender$22085$1MHp3Q
                                                     g$expr$22086$1MHp3Q)))
                                                g$ls/false$22083$1MHp3Q)
                                              (g$syntax-violation$20382$1MHp3Q
                                                '#f
                                                '"invalid syntax"
                                                g$t$22082$1MHp3Q))))
                                         (g$syntax-dispatch$20263$1MHp3Q
                                           g$t$22082$1MHp3Q
                                           '(any any any)))))
                                     g$t$22075$1MHp3Q))))
                               (g$syntax-dispatch$20263$1MHp3Q
                                 g$t$22075$1MHp3Q
                                 '(any any)))))
                           (car g$clauses$22072$1MHp3Q)))))))
           (case-lambda
             ((g$e$22060$1MHp3Q g$r$22061$1MHp3Q g$mr$22062$1MHp3Q)
              ((case-lambda
                 ((g$t$22063$1MHp3Q)
                  ((case-lambda
                     ((g$ls/false$22064$1MHp3Q)
                      (if g$ls/false$22064$1MHp3Q
                        (apply
                          (case-lambda
                            ((g$expr$22065$1MHp3Q
                               g$keys$22066$1MHp3Q
                               g$clauses$22067$1MHp3Q)
                             (begin
                               (g$verify-literals$20266$1MHp3Q
                                 g$keys$22066$1MHp3Q
                                 g$e$22060$1MHp3Q)
                               ((case-lambda
                                  ((g$x$22068$1MHp3Q)
                                   ((case-lambda
                                      ((g$body$22069$1MHp3Q)
                                       (list
                                         (g$build-lambda$19687$1MHp3Q
                                           '#f
                                           (list g$x$22068$1MHp3Q)
                                           g$body$22069$1MHp3Q)
                                         (g$chi-expr$20281$1MHp3Q
                                           g$expr$22065$1MHp3Q
                                           g$r$22061$1MHp3Q
                                           g$mr$22062$1MHp3Q))))
                                    (g$gen-syntax-case$22059$1MHp3Q
                                      g$x$22068$1MHp3Q
                                      g$keys$22066$1MHp3Q
                                      g$clauses$22067$1MHp3Q
                                      g$r$22061$1MHp3Q
                                      g$mr$22062$1MHp3Q))))
                                (g$gen-lexical$19700$1MHp3Q 'tmp)))))
                          g$ls/false$22064$1MHp3Q)
                        (g$syntax-violation$20382$1MHp3Q
                          '#f
                          '"invalid syntax"
                          g$t$22063$1MHp3Q))))
                   (g$syntax-dispatch$20263$1MHp3Q
                     g$t$22063$1MHp3Q
                     '(_ any each-any . each-any)))))
               g$e$22060$1MHp3Q))))))))
   (g$ellipsis-map$20268$1MHp3Q
     g$ellipsis-map$23864$1MHp3Q
     (case-lambda
       ((g$proc$22126$1MHp3Q g$ls$22127$1MHp3Q . g$ls*$22128$1MHp3Q)
        (letrec* ((g$who$22129$1MHp3Q '...))
          (begin
            (if (not (list? g$ls$22127$1MHp3Q))
              (assertion-violation
                g$who$22129$1MHp3Q
                '"not a list"
                g$ls$22127$1MHp3Q)
              (void))
            (if (not (null? g$ls*$22128$1MHp3Q))
              ((case-lambda
                 ((g$n$22130$1MHp3Q)
                  (g$for-each$11836$1MHp3Q
                    (case-lambda
                      ((g$x$22131$1MHp3Q)
                       (begin
                         (if (not (list? g$x$22131$1MHp3Q))
                           (assertion-violation
                             g$who$22129$1MHp3Q
                             '"not a list"
                             g$x$22131$1MHp3Q)
                           (void))
                         (if (not (g$=$13381$1MHp3Q
                                    (length g$x$22131$1MHp3Q)
                                    g$n$22130$1MHp3Q))
                           (assertion-violation
                             g$who$22129$1MHp3Q
                             '"length mismatch"
                             g$ls$22127$1MHp3Q
                             g$x$22131$1MHp3Q)
                           (void)))))
                    g$ls*$22128$1MHp3Q)))
               (length g$ls$22127$1MHp3Q))
              (void))
            (apply
              g$map$11835$1MHp3Q
              g$proc$22126$1MHp3Q
              g$ls$22127$1MHp3Q
              g$ls*$22128$1MHp3Q))))))
   (g$syntax-transformer$20269$1MHp3Q
     g$syntax-transformer$23865$1MHp3Q
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$22132$1MHp3Q
                     (case-lambda
                       ((g$src$22192$1MHp3Q
                          g$e$22193$1MHp3Q
                          g$r$22194$1MHp3Q
                          g$maps$22195$1MHp3Q
                          g$ellipsis?$22196$1MHp3Q
                          g$vec?$22197$1MHp3Q)
                        ((case-lambda
                           ((g$t$22198$1MHp3Q)
                            ((case-lambda
                               ((g$ls/false$22199$1MHp3Q)
                                (if (if g$ls/false$22199$1MHp3Q
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$22200$1MHp3Q)
                                             (g$ellipsis?$22196$1MHp3Q
                                               g$dots$22200$1MHp3Q)))
                                          g$ls/false$22199$1MHp3Q))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$22201$1MHp3Q)
                                       (g$syntax-violation$20382$1MHp3Q
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$22192$1MHp3Q)))
                                    g$ls/false$22199$1MHp3Q)
                                  ((case-lambda
                                     ((g$t$22202$1MHp3Q)
                                      ((case-lambda
                                         ((g$ls/false$22203$1MHp3Q)
                                          (if (if g$ls/false$22203$1MHp3Q
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$22204$1MHp3Q)
                                                       (g$id?$19765$1MHp3Q
                                                         g$id$22204$1MHp3Q)))
                                                    g$ls/false$22203$1MHp3Q))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$22205$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$label$22206$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$b$22207$1MHp3Q)
                                                         (if (eq? (g$binding-type$19782$1MHp3Q
                                                                    g$b$22207$1MHp3Q)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$22210$1MHp3Q)
                                                                    (g$gen-ref$22133$1MHp3Q
                                                                      g$src$22192$1MHp3Q
                                                                      (car g$var.lev$22210$1MHp3Q)
                                                                      (cdr g$var.lev$22210$1MHp3Q)
                                                                      g$maps$22195$1MHp3Q)))
                                                                 (g$binding-value$19783$1MHp3Q
                                                                   g$b$22207$1MHp3Q))))
                                                             (case-lambda
                                                               ((g$var$22211$1MHp3Q
                                                                  g$maps$22212$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$maps$22213$1MHp3Q
                                                                      g$var$22214$1MHp3Q)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$22214$1MHp3Q)
                                                                      g$maps$22213$1MHp3Q)))
                                                                 g$maps$22212$1MHp3Q
                                                                 g$var$22211$1MHp3Q))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$22193$1MHp3Q)
                                                             g$maps$22195$1MHp3Q))))
                                                      (g$label->binding$19780$1MHp3Q
                                                        g$label$22206$1MHp3Q
                                                        g$r$22194$1MHp3Q))))
                                                  (g$id->label$19778$1MHp3Q
                                                    g$e$22193$1MHp3Q))))
                                              g$ls/false$22203$1MHp3Q)
                                            ((case-lambda
                                               ((g$t$22215$1MHp3Q)
                                                ((case-lambda
                                                   ((g$ls/false$22216$1MHp3Q)
                                                    (if (if g$ls/false$22216$1MHp3Q
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$22217$1MHp3Q
                                                                   g$e$22218$1MHp3Q)
                                                                 (g$ellipsis?$22196$1MHp3Q
                                                                   g$dots$22217$1MHp3Q)))
                                                              g$ls/false$22216$1MHp3Q))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$22219$1MHp3Q
                                                             g$e$22220$1MHp3Q)
                                                           (if g$vec?$22197$1MHp3Q
                                                             (g$syntax-violation$20382$1MHp3Q
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$22192$1MHp3Q)
                                                             (g$gen-syntax$22132$1MHp3Q
                                                               g$src$22192$1MHp3Q
                                                               g$e$22220$1MHp3Q
                                                               g$r$22194$1MHp3Q
                                                               g$maps$22195$1MHp3Q
                                                               (case-lambda
                                                                 ((g$x$22221$1MHp3Q)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$22216$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$t$22222$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$ls/false$22223$1MHp3Q)
                                                              (if (if g$ls/false$22223$1MHp3Q
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$22224$1MHp3Q
                                                                             g$dots$22225$1MHp3Q
                                                                             g$y$22226$1MHp3Q)
                                                                           (g$ellipsis?$22196$1MHp3Q
                                                                             g$dots$22225$1MHp3Q)))
                                                                        g$ls/false$22223$1MHp3Q))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$22227$1MHp3Q
                                                                       g$dots$22228$1MHp3Q
                                                                       g$y$22229$1MHp3Q)
                                                                     ((letrec ((g$f$22230$1MHp3Q
                                                                                 (case-lambda
                                                                                   ((g$y$22231$1MHp3Q
                                                                                      g$k$22232$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$22233$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22234$1MHp3Q)
                                                                                            (if g$ls/false$22234$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$22232$1MHp3Q
                                                                                                     g$maps$22195$1MHp3Q)))
                                                                                                g$ls/false$22234$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$t$22235$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$22236$1MHp3Q)
                                                                                                      (if (if g$ls/false$22236$1MHp3Q
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$22237$1MHp3Q
                                                                                                                     g$y$22238$1MHp3Q)
                                                                                                                   (g$ellipsis?$22196$1MHp3Q
                                                                                                                     g$dots$22237$1MHp3Q)))
                                                                                                                g$ls/false$22236$1MHp3Q))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$22239$1MHp3Q
                                                                                                               g$y$22240$1MHp3Q)
                                                                                                             (g$f$22230$1MHp3Q
                                                                                                               g$y$22240$1MHp3Q
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$22241$1MHp3Q)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$22232$1MHp3Q
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$22241$1MHp3Q))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$22244$1MHp3Q
                                                                                                                         g$maps$22245$1MHp3Q)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$22246$1MHp3Q
                                                                                                                             g$x$22247$1MHp3Q)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$22246$1MHp3Q))
                                                                                                                             (g$syntax-violation$20382$1MHp3Q
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$22192$1MHp3Q)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$22135$1MHp3Q
                                                                                                                                 g$x$22247$1MHp3Q
                                                                                                                                 (car g$maps$22246$1MHp3Q))
                                                                                                                               (cdr g$maps$22246$1MHp3Q)))))
                                                                                                                        g$maps$22245$1MHp3Q
                                                                                                                        g$x$22244$1MHp3Q)))))))))
                                                                                                          g$ls/false$22236$1MHp3Q)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$22248$1MHp3Q)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$22249$1MHp3Q)
                                                                                                                (if g$ls/false$22249$1MHp3Q
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$22132$1MHp3Q
                                                                                                                              g$src$22192$1MHp3Q
                                                                                                                              g$y$22231$1MHp3Q
                                                                                                                              g$r$22194$1MHp3Q
                                                                                                                              g$maps$22195$1MHp3Q
                                                                                                                              g$ellipsis?$22196$1MHp3Q
                                                                                                                              g$vec?$22197$1MHp3Q)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$22252$1MHp3Q
                                                                                                                              g$maps$22253$1MHp3Q)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$22254$1MHp3Q
                                                                                                                                  g$y$22255$1MHp3Q)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$22232$1MHp3Q
                                                                                                                                       g$maps$22254$1MHp3Q)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$22258$1MHp3Q
                                                                                                                                       g$maps$22259$1MHp3Q)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$22260$1MHp3Q
                                                                                                                                           g$x$22261$1MHp3Q)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$22134$1MHp3Q
                                                                                                                                             g$x$22261$1MHp3Q
                                                                                                                                             g$y$22255$1MHp3Q)
                                                                                                                                           g$maps$22260$1MHp3Q)))
                                                                                                                                      g$maps$22259$1MHp3Q
                                                                                                                                      g$x$22258$1MHp3Q))))))
                                                                                                                             g$maps$22253$1MHp3Q
                                                                                                                             g$y$22252$1MHp3Q))))))
                                                                                                                    g$ls/false$22249$1MHp3Q)
                                                                                                                  (g$syntax-violation$20382$1MHp3Q
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$22248$1MHp3Q))))
                                                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                                                               g$t$22248$1MHp3Q
                                                                                                               '_))))
                                                                                                         g$t$22235$1MHp3Q))))
                                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                                     g$t$22235$1MHp3Q
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$22233$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$22233$1MHp3Q
                                                                                           '()))))
                                                                                     g$y$22231$1MHp3Q)))))
                                                                        g$f$22230$1MHp3Q)
                                                                      g$y$22229$1MHp3Q
                                                                      (case-lambda
                                                                        ((g$maps$22262$1MHp3Q)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$22132$1MHp3Q
                                                                                g$src$22192$1MHp3Q
                                                                                g$x$22227$1MHp3Q
                                                                                g$r$22194$1MHp3Q
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$22262$1MHp3Q)
                                                                                g$ellipsis?$22196$1MHp3Q
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$22265$1MHp3Q
                                                                                g$maps$22266$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$maps$22267$1MHp3Q
                                                                                    g$x$22268$1MHp3Q)
                                                                                  (if (null?
                                                                                        (car g$maps$22267$1MHp3Q))
                                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$22192$1MHp3Q)
                                                                                    (values
                                                                                      (g$gen-map$22136$1MHp3Q
                                                                                        g$x$22268$1MHp3Q
                                                                                        (car g$maps$22267$1MHp3Q))
                                                                                      (cdr g$maps$22267$1MHp3Q)))))
                                                                               g$maps$22266$1MHp3Q
                                                                               g$x$22265$1MHp3Q)))))))))
                                                                  g$ls/false$22223$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$t$22269$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22270$1MHp3Q)
                                                                        (if g$ls/false$22270$1MHp3Q
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$22271$1MHp3Q
                                                                                 g$y$22272$1MHp3Q)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$22132$1MHp3Q
                                                                                      g$src$22192$1MHp3Q
                                                                                      g$x$22271$1MHp3Q
                                                                                      g$r$22194$1MHp3Q
                                                                                      g$maps$22195$1MHp3Q
                                                                                      g$ellipsis?$22196$1MHp3Q
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$22275$1MHp3Q
                                                                                      g$maps$22276$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$maps$22277$1MHp3Q
                                                                                          g$xnew$22278$1MHp3Q)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$22132$1MHp3Q
                                                                                               g$src$22192$1MHp3Q
                                                                                               g$y$22272$1MHp3Q
                                                                                               g$r$22194$1MHp3Q
                                                                                               g$maps$22277$1MHp3Q
                                                                                               g$ellipsis?$22196$1MHp3Q
                                                                                               g$vec?$22197$1MHp3Q)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$22281$1MHp3Q
                                                                                               g$maps$22282$1MHp3Q)
                                                                                             ((case-lambda
                                                                                                ((g$maps$22283$1MHp3Q
                                                                                                   g$ynew$22284$1MHp3Q)
                                                                                                 (values
                                                                                                   (g$gen-cons$22137$1MHp3Q
                                                                                                     g$e$22193$1MHp3Q
                                                                                                     g$x$22271$1MHp3Q
                                                                                                     g$y$22272$1MHp3Q
                                                                                                     g$xnew$22278$1MHp3Q
                                                                                                     g$ynew$22284$1MHp3Q)
                                                                                                   g$maps$22283$1MHp3Q)))
                                                                                              g$maps$22282$1MHp3Q
                                                                                              g$ynew$22281$1MHp3Q))))))
                                                                                     g$maps$22276$1MHp3Q
                                                                                     g$xnew$22275$1MHp3Q))))))
                                                                            g$ls/false$22270$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$22285$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22286$1MHp3Q)
                                                                                  (if g$ls/false$22286$1MHp3Q
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$22287$1MHp3Q)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$22132$1MHp3Q
                                                                                                g$src$22192$1MHp3Q
                                                                                                g$ls$22287$1MHp3Q
                                                                                                g$r$22194$1MHp3Q
                                                                                                g$maps$22195$1MHp3Q
                                                                                                g$ellipsis?$22196$1MHp3Q
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$22290$1MHp3Q
                                                                                                g$maps$22291$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$22292$1MHp3Q
                                                                                                    g$lsnew$22293$1MHp3Q)
                                                                                                  (values
                                                                                                    (g$gen-vector$22138$1MHp3Q
                                                                                                      g$e$22193$1MHp3Q
                                                                                                      g$ls$22287$1MHp3Q
                                                                                                      g$lsnew$22293$1MHp3Q)
                                                                                                    g$maps$22292$1MHp3Q)))
                                                                                               g$maps$22291$1MHp3Q
                                                                                               g$lsnew$22290$1MHp3Q))))))
                                                                                      g$ls/false$22286$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$22294$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22295$1MHp3Q)
                                                                                            (if g$ls/false$22295$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$22193$1MHp3Q)
                                                                                                     g$maps$22195$1MHp3Q)))
                                                                                                g$ls/false$22295$1MHp3Q)
                                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$22294$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$22294$1MHp3Q
                                                                                           '_))))
                                                                                     g$t$22285$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$22285$1MHp3Q
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$22269$1MHp3Q))))
                                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                                       g$t$22269$1MHp3Q
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$22222$1MHp3Q))))
                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                             g$t$22222$1MHp3Q
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$22215$1MHp3Q))))
                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                   g$t$22215$1MHp3Q
                                                   '(any any)))))
                                             g$t$22202$1MHp3Q))))
                                       (g$syntax-dispatch$20263$1MHp3Q
                                         g$t$22202$1MHp3Q
                                         'any))))
                                   g$t$22198$1MHp3Q))))
                             (g$syntax-dispatch$20263$1MHp3Q
                               g$t$22198$1MHp3Q
                               'any))))
                         g$e$22193$1MHp3Q))))
                   (g$gen-ref$22133$1MHp3Q
                     (case-lambda
                       ((g$src$22179$1MHp3Q
                          g$var$22180$1MHp3Q
                          g$level$22181$1MHp3Q
                          g$maps$22182$1MHp3Q)
                        (if (g$=$13381$1MHp3Q g$level$22181$1MHp3Q '0)
                          (values
                            g$var$22180$1MHp3Q
                            g$maps$22182$1MHp3Q)
                          (if (null? g$maps$22182$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$22179$1MHp3Q)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$22133$1MHp3Q
                                   g$src$22179$1MHp3Q
                                   g$var$22180$1MHp3Q
                                   (- g$level$22181$1MHp3Q '1)
                                   (cdr g$maps$22182$1MHp3Q))))
                              (case-lambda
                                ((g$outer-var$22185$1MHp3Q
                                   g$outer-maps$22186$1MHp3Q)
                                 ((case-lambda
                                    ((g$outer-maps$22187$1MHp3Q
                                       g$outer-var$22188$1MHp3Q)
                                     ((case-lambda
                                        ((g$t$22189$1MHp3Q)
                                         (if g$t$22189$1MHp3Q
                                           ((case-lambda
                                              ((g$b$22190$1MHp3Q)
                                               (values
                                                 (cdr g$b$22190$1MHp3Q)
                                                 g$maps$22182$1MHp3Q)))
                                            g$t$22189$1MHp3Q)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$22191$1MHp3Q)
                                                 (values
                                                   g$inner-var$22191$1MHp3Q
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$22188$1MHp3Q
                                                         g$inner-var$22191$1MHp3Q)
                                                       (car g$maps$22182$1MHp3Q))
                                                     g$outer-maps$22187$1MHp3Q))))
                                              (g$gen-lexical$19700$1MHp3Q
                                                'tmp))))))
                                      (g$assq$11823$1MHp3Q
                                        g$outer-var$22188$1MHp3Q
                                        (car g$maps$22182$1MHp3Q)))))
                                  g$outer-maps$22186$1MHp3Q
                                  g$outer-var$22185$1MHp3Q)))))))))
                   (g$gen-append$22134$1MHp3Q
                     (case-lambda
                       ((g$x$22177$1MHp3Q g$y$22178$1MHp3Q)
                        (if (equal? g$y$22178$1MHp3Q ''())
                          g$x$22177$1MHp3Q
                          (list
                            'append
                            g$x$22177$1MHp3Q
                            g$y$22178$1MHp3Q)))))
                   (g$gen-mappend$22135$1MHp3Q
                     (case-lambda
                       ((g$e$22175$1MHp3Q g$map-env$22176$1MHp3Q)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$22136$1MHp3Q
                            g$e$22175$1MHp3Q
                            g$map-env$22176$1MHp3Q)))))
                   (g$gen-map$22136$1MHp3Q
                     (case-lambda
                       ((g$e$22166$1MHp3Q g$map-env$22167$1MHp3Q)
                        ((case-lambda
                           ((g$formals$22168$1MHp3Q
                              g$actuals$22169$1MHp3Q)
                            (if (eq? (car g$e$22166$1MHp3Q) 'ref)
                              (car g$actuals$22169$1MHp3Q)
                              (if (g$for-all$11833$1MHp3Q
                                    (case-lambda
                                      ((g$x$22170$1MHp3Q)
                                       (if (eq? (car g$x$22170$1MHp3Q)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11827$1MHp3Q
                                             (g$cadr$12686$1MHp3Q
                                               g$x$22170$1MHp3Q)
                                             g$formals$22168$1MHp3Q))
                                         '#f)))
                                    (cdr g$e$22166$1MHp3Q))
                                ((case-lambda
                                   ((g$args$22171$1MHp3Q)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$22166$1MHp3Q))
                                        g$args$22171$1MHp3Q))))
                                 (g$map$11835$1MHp3Q
                                   ((case-lambda
                                      ((g$r$22172$1MHp3Q)
                                       (case-lambda
                                         ((g$x$22173$1MHp3Q)
                                          (cdr (g$assq$11823$1MHp3Q
                                                 (g$cadr$12686$1MHp3Q
                                                   g$x$22173$1MHp3Q)
                                                 g$r$22172$1MHp3Q))))))
                                    (g$map$11835$1MHp3Q
                                      cons
                                      g$formals$22168$1MHp3Q
                                      g$actuals$22169$1MHp3Q))
                                   (cdr g$e$22166$1MHp3Q)))
                                (begin
                                  '#f
                                  (g$cons*$11837$1MHp3Q
                                    'map
                                    (list
                                      'lambda
                                      g$formals$22168$1MHp3Q
                                      g$e$22166$1MHp3Q)
                                    g$actuals$22169$1MHp3Q))))))
                         (g$map$11835$1MHp3Q cdr g$map-env$22167$1MHp3Q)
                         (g$map$11835$1MHp3Q
                           (case-lambda
                             ((g$x$22174$1MHp3Q)
                              (list 'ref (car g$x$22174$1MHp3Q))))
                           g$map-env$22167$1MHp3Q)))))
                   (g$gen-cons$22137$1MHp3Q
                     (case-lambda
                       ((g$e$22158$1MHp3Q
                          g$x$22159$1MHp3Q
                          g$y$22160$1MHp3Q
                          g$xnew$22161$1MHp3Q
                          g$ynew$22162$1MHp3Q)
                        ((case-lambda
                           ((g$t$22163$1MHp3Q)
                            (if (eqv? g$t$22163$1MHp3Q 'quote)
                              (if (eq? (car g$xnew$22161$1MHp3Q) 'quote)
                                ((case-lambda
                                   ((g$xnew$22164$1MHp3Q
                                      g$ynew$22165$1MHp3Q)
                                    (if (if (eq? g$xnew$22164$1MHp3Q
                                                 g$x$22159$1MHp3Q)
                                          (begin
                                            '#f
                                            (eq? g$ynew$22165$1MHp3Q
                                                 g$y$22160$1MHp3Q))
                                          '#f)
                                      (list 'quote g$e$22158$1MHp3Q)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$22164$1MHp3Q
                                          g$ynew$22165$1MHp3Q)))))
                                 (g$cadr$12686$1MHp3Q
                                   g$xnew$22161$1MHp3Q)
                                 (g$cadr$12686$1MHp3Q
                                   g$ynew$22162$1MHp3Q))
                                (if (null?
                                      (g$cadr$12686$1MHp3Q
                                        g$ynew$22162$1MHp3Q))
                                  (list 'list g$xnew$22161$1MHp3Q)
                                  (list
                                    'cons
                                    g$xnew$22161$1MHp3Q
                                    g$ynew$22162$1MHp3Q)))
                              (if (eqv? g$t$22163$1MHp3Q 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$22161$1MHp3Q
                                    (cdr g$ynew$22162$1MHp3Q)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$22161$1MHp3Q
                                    g$ynew$22162$1MHp3Q))))))
                         (car g$ynew$22162$1MHp3Q)))))
                   (g$gen-vector$22138$1MHp3Q
                     (case-lambda
                       ((g$e$22155$1MHp3Q
                          g$ls$22156$1MHp3Q
                          g$lsnew$22157$1MHp3Q)
                        (if (eq? (car g$lsnew$22157$1MHp3Q) 'quote)
                          (if (eq? (g$cadr$12686$1MHp3Q
                                     g$lsnew$22157$1MHp3Q)
                                   g$ls$22156$1MHp3Q)
                            (list 'quote g$e$22155$1MHp3Q)
                            (list
                              'quote
                              (g$list->vector$12678$1MHp3Q
                                (g$cadr$12686$1MHp3Q
                                  g$lsnew$22157$1MHp3Q))))
                          (if (eq? (car g$lsnew$22157$1MHp3Q) 'list)
                            (cons 'vector (cdr g$lsnew$22157$1MHp3Q))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$22157$1MHp3Q)))))))
                   (g$regen$22139$1MHp3Q
                     (case-lambda
                       ((g$x$22152$1MHp3Q)
                        ((case-lambda
                           ((g$t$22153$1MHp3Q)
                            (if (eqv? g$t$22153$1MHp3Q 'ref)
                              (g$cadr$12686$1MHp3Q g$x$22152$1MHp3Q)
                              (if (eqv? g$t$22153$1MHp3Q 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12686$1MHp3Q
                                    g$x$22152$1MHp3Q))
                                (if (eqv? g$t$22153$1MHp3Q 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12686$1MHp3Q
                                      g$x$22152$1MHp3Q))
                                  (if (eqv? g$t$22153$1MHp3Q 'lambda)
                                    (g$build-lambda$19687$1MHp3Q
                                      '#f
                                      (g$cadr$12686$1MHp3Q
                                        g$x$22152$1MHp3Q)
                                      (g$regen$22139$1MHp3Q
                                        (g$caddr$12692$1MHp3Q
                                          g$x$22152$1MHp3Q)))
                                    (if (eqv? g$t$22153$1MHp3Q 'map)
                                      ((case-lambda
                                         ((g$ls$22154$1MHp3Q)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$22154$1MHp3Q)))
                                       (g$map$11835$1MHp3Q
                                         g$regen$22139$1MHp3Q
                                         (cdr g$x$22152$1MHp3Q)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$22152$1MHp3Q))
                                          (g$map$11835$1MHp3Q
                                            g$regen$22139$1MHp3Q
                                            (cdr g$x$22152$1MHp3Q)))))))))))
                         (car g$x$22152$1MHp3Q))))))
           (case-lambda
             ((g$e$22140$1MHp3Q g$r$22141$1MHp3Q g$mr$22142$1MHp3Q)
              ((case-lambda
                 ((g$t$22143$1MHp3Q)
                  ((case-lambda
                     ((g$ls/false$22144$1MHp3Q)
                      (if g$ls/false$22144$1MHp3Q
                        (apply
                          (case-lambda
                            ((g$x$22145$1MHp3Q)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$22132$1MHp3Q
                                    g$e$22140$1MHp3Q
                                    g$x$22145$1MHp3Q
                                    g$r$22141$1MHp3Q
                                    '()
                                    g$ellipsis?$20264$1MHp3Q
                                    '#f)))
                               (case-lambda
                                 ((g$e$22148$1MHp3Q g$maps$22149$1MHp3Q)
                                  ((case-lambda
                                     ((g$maps$22150$1MHp3Q
                                        g$e$22151$1MHp3Q)
                                      (g$regen$22139$1MHp3Q
                                        g$e$22151$1MHp3Q)))
                                   g$maps$22149$1MHp3Q
                                   g$e$22148$1MHp3Q))))))
                          g$ls/false$22144$1MHp3Q)
                        (g$syntax-violation$20382$1MHp3Q
                          '#f
                          '"invalid syntax"
                          g$t$22143$1MHp3Q))))
                   (g$syntax-dispatch$20263$1MHp3Q
                     g$t$22143$1MHp3Q
                     '(_ any)))))
               g$e$22140$1MHp3Q))))))))
   (g$core-macro-transformer$20270$1MHp3Q
     g$core-macro-transformer$23866$1MHp3Q
     (case-lambda
       ((g$name$22296$1MHp3Q)
        ((case-lambda
           ((g$t$22297$1MHp3Q)
            (if (eqv? g$t$22297$1MHp3Q 'quote)
              g$quote-transformer$20223$1MHp3Q
              (if (eqv? g$t$22297$1MHp3Q 'lambda)
                g$lambda-transformer$20225$1MHp3Q
                (if (eqv? g$t$22297$1MHp3Q 'case-lambda)
                  g$case-lambda-transformer$20224$1MHp3Q
                  (if (eqv? g$t$22297$1MHp3Q 'letrec)
                    g$letrec-transformer$20213$1MHp3Q
                    (if (eqv? g$t$22297$1MHp3Q 'letrec*)
                      g$letrec*-transformer$20214$1MHp3Q
                      (if (eqv? g$t$22297$1MHp3Q 'if)
                        g$if-transformer$20221$1MHp3Q
                        (if (eqv? g$t$22297$1MHp3Q 'foreign-call)
                          g$foreign-call-transformer$20261$1MHp3Q
                          (if (eqv? g$t$22297$1MHp3Q 'syntax-case)
                            g$syntax-case-transformer$20267$1MHp3Q
                            (if (eqv? g$t$22297$1MHp3Q 'syntax)
                              g$syntax-transformer$20269$1MHp3Q
                              (if (eqv?
                                    g$t$22297$1MHp3Q
                                    'type-descriptor)
                                g$type-descriptor-transformer$20216$1MHp3Q
                                (if (eqv?
                                      g$t$22297$1MHp3Q
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$20217$1MHp3Q
                                  (if (eqv?
                                        g$t$22297$1MHp3Q
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$20218$1MHp3Q
                                    (if (eqv?
                                          g$t$22297$1MHp3Q
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$20215$1MHp3Q
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$22296$1MHp3Q)))))))))))))))))
         g$name$22296$1MHp3Q))))
   (g$file-options-macro$20271$1MHp3Q
     g$file-options-macro$23867$1MHp3Q
     (case-lambda
       ((g$x$22298$1MHp3Q)
        (letrec* ((g$valid-option?$22299$1MHp3Q
                    (case-lambda
                      ((g$x$22304$1MHp3Q)
                       (if (g$id?$19765$1MHp3Q g$x$22304$1MHp3Q)
                         (begin
                           '#f
                           (g$memq$11827$1MHp3Q
                             (g$id->sym$19766$1MHp3Q g$x$22304$1MHp3Q)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$22300$1MHp3Q)
              ((case-lambda
                 ((g$ls/false$22301$1MHp3Q)
                  (if (if g$ls/false$22301$1MHp3Q
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$22302$1MHp3Q)
                               (if (g$for-all$11833$1MHp3Q
                                     g$valid-option?$22299$1MHp3Q
                                     g$opt*$22302$1MHp3Q)
                                 (begin
                                   '#f
                                   (g$file-options-spec$18628$1MHp3Q
                                     (g$map$11835$1MHp3Q
                                       g$id->sym$19766$1MHp3Q
                                       g$opt*$22302$1MHp3Q)))
                                 '#f)))
                            g$ls/false$22301$1MHp3Q))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$22303$1MHp3Q)
                         (g$bless$20226$1MHp3Q
                           (list
                             'quote
                             (g$file-options-spec$18628$1MHp3Q
                               (g$map$11835$1MHp3Q
                                 g$id->sym$19766$1MHp3Q
                                 g$opt*$22303$1MHp3Q))))))
                      g$ls/false$22301$1MHp3Q)
                    (g$syntax-violation$20382$1MHp3Q
                      '#f
                      '"invalid syntax"
                      g$t$22300$1MHp3Q))))
               (g$syntax-dispatch$20263$1MHp3Q
                 g$t$22300$1MHp3Q
                 '(_ . each-any)))))
           g$x$22298$1MHp3Q)))))
   (g$symbol-macro$20272$1MHp3Q
     g$symbol-macro$23868$1MHp3Q
     (case-lambda
       ((g$x$22305$1MHp3Q g$set$22306$1MHp3Q)
        ((case-lambda
           ((g$t$22307$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22308$1MHp3Q)
                (if (if g$ls/false$22308$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$22309$1MHp3Q)
                             (if (g$id?$19765$1MHp3Q
                                   g$name$22309$1MHp3Q)
                               (begin
                                 '#f
                                 (g$memq$11827$1MHp3Q
                                   (g$id->sym$19766$1MHp3Q
                                     g$name$22309$1MHp3Q)
                                   g$set$22306$1MHp3Q))
                               '#f)))
                          g$ls/false$22308$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$22310$1MHp3Q)
                       (g$bless$20226$1MHp3Q
                         (list 'quote g$name$22310$1MHp3Q))))
                    g$ls/false$22308$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$22307$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22307$1MHp3Q
               '(_ any)))))
         g$x$22305$1MHp3Q))))
   (g$macro-transformer$20273$1MHp3Q
     g$macro-transformer$23869$1MHp3Q
     (case-lambda
       ((g$x$22311$1MHp3Q)
        (if (g$procedure?$12669$1MHp3Q g$x$22311$1MHp3Q)
          g$x$22311$1MHp3Q
          (if (g$symbol?$12667$1MHp3Q g$x$22311$1MHp3Q)
            ((case-lambda
               ((g$t$22312$1MHp3Q)
                (if (eqv? g$t$22312$1MHp3Q 'define-record-type)
                  g$define-record-type-macro$20257$1MHp3Q
                  (if (eqv? g$t$22312$1MHp3Q 'define-struct)
                    g$define-struct-macro$20256$1MHp3Q
                    (if (eqv? g$t$22312$1MHp3Q 'include)
                      g$include-macro$20251$1MHp3Q
                      (if (eqv? g$t$22312$1MHp3Q 'cond)
                        g$cond-macro$20249$1MHp3Q
                        (if (eqv? g$t$22312$1MHp3Q 'let)
                          g$let-macro$20229$1MHp3Q
                          (if (eqv? g$t$22312$1MHp3Q 'do)
                            g$do-macro$20245$1MHp3Q
                            (if (eqv? g$t$22312$1MHp3Q 'or)
                              g$or-macro$20247$1MHp3Q
                              (if (eqv? g$t$22312$1MHp3Q 'and)
                                g$and-macro$20248$1MHp3Q
                                (if (eqv? g$t$22312$1MHp3Q 'let*)
                                  g$let*-macro$20246$1MHp3Q
                                  (if (eqv?
                                        g$t$22312$1MHp3Q
                                        'let-values)
                                    g$let-values-macro$20230$1MHp3Q
                                    (if (eqv?
                                          g$t$22312$1MHp3Q
                                          'let*-values)
                                      g$let*-values-macro$20231$1MHp3Q
                                      (if (eqv?
                                            g$t$22312$1MHp3Q
                                            'syntax-rules)
                                        g$syntax-rules-macro$20253$1MHp3Q
                                        (if (eqv?
                                              g$t$22312$1MHp3Q
                                              'quasiquote)
                                          g$quasiquote-macro$20254$1MHp3Q
                                          (if (eqv?
                                                g$t$22312$1MHp3Q
                                                'quasisyntax)
                                            g$quasisyntax-macro$20255$1MHp3Q
                                            (if (eqv?
                                                  g$t$22312$1MHp3Q
                                                  'with-syntax)
                                              g$with-syntax-macro$20227$1MHp3Q
                                              (if (eqv?
                                                    g$t$22312$1MHp3Q
                                                    'when)
                                                g$when-macro$20219$1MHp3Q
                                                (if (eqv?
                                                      g$t$22312$1MHp3Q
                                                      'unless)
                                                  g$unless-macro$20220$1MHp3Q
                                                  (if (eqv?
                                                        g$t$22312$1MHp3Q
                                                        'case)
                                                    g$case-macro$20222$1MHp3Q
                                                    (if (eqv?
                                                          g$t$22312$1MHp3Q
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$20244$1MHp3Q
                                                      (if (eqv?
                                                            g$t$22312$1MHp3Q
                                                            'time)
                                                        g$time-macro$20240$1MHp3Q
                                                        (if (eqv?
                                                              g$t$22312$1MHp3Q
                                                              'delay)
                                                          g$delay-macro$20241$1MHp3Q
                                                          (if (eqv?
                                                                g$t$22312$1MHp3Q
                                                                'assert)
                                                            g$assert-macro$20242$1MHp3Q
                                                            (if (eqv?
                                                                  g$t$22312$1MHp3Q
                                                                  'endianness)
                                                              g$endianness-macro$20243$1MHp3Q
                                                              (if (eqv?
                                                                    g$t$22312$1MHp3Q
                                                                    'guard)
                                                                g$guard-macro$20238$1MHp3Q
                                                                (if (eqv?
                                                                      g$t$22312$1MHp3Q
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$20239$1MHp3Q
                                                                  (if (eqv?
                                                                        g$t$22312$1MHp3Q
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$20232$1MHp3Q
                                                                    (if (eqv?
                                                                          g$t$22312$1MHp3Q
                                                                          'trace-define)
                                                                      g$trace-define-macro$20233$1MHp3Q
                                                                      (if (eqv?
                                                                            g$t$22312$1MHp3Q
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$20234$1MHp3Q
                                                                        (if (eqv?
                                                                              g$t$22312$1MHp3Q
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$20236$1MHp3Q
                                                                          (if (eqv?
                                                                                g$t$22312$1MHp3Q
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$20237$1MHp3Q
                                                                            (if (eqv?
                                                                                  g$t$22312$1MHp3Q
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$20258$1MHp3Q
                                                                              (if (eqv?
                                                                                    g$t$22312$1MHp3Q
                                                                                    'parameterize)
                                                                                g$parameterize-macro$20260$1MHp3Q
                                                                                (if (eqv?
                                                                                      g$t$22312$1MHp3Q
                                                                                      'include-into)
                                                                                  g$include-into-macro$20252$1MHp3Q
                                                                                  (if (eqv?
                                                                                        g$t$22312$1MHp3Q
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$22313$1MHp3Q)
                                                                                       (g$symbol-macro$20272$1MHp3Q
                                                                                         g$x$22313$1MHp3Q
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$22312$1MHp3Q
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$22314$1MHp3Q)
                                                                                         (g$symbol-macro$20272$1MHp3Q
                                                                                           g$x$22314$1MHp3Q
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$22312$1MHp3Q
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$22315$1MHp3Q)
                                                                                           (g$symbol-macro$20272$1MHp3Q
                                                                                             g$x$22315$1MHp3Q
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$22312$1MHp3Q
                                                                                              'file-options)
                                                                                          g$file-options-macro$20271$1MHp3Q
                                                                                          (if (g$memv$11828$1MHp3Q
                                                                                                g$t$22312$1MHp3Q
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$20259$1MHp3Q
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$22311$1MHp3Q))))))))))))))))))))))))))))))))))))))))))
             g$x$22311$1MHp3Q)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$22311$1MHp3Q)))))))
   (g$local-macro-transformer$20274$1MHp3Q
     g$local-macro-transformer$23870$1MHp3Q
     (case-lambda ((g$x$22316$1MHp3Q) (car g$x$22316$1MHp3Q))))
   (g$do-macro-call$20275$1MHp3Q
     g$do-macro-call$23871$1MHp3Q
     (case-lambda
       ((g$transformer$22317$1MHp3Q
          g$expr$22318$1MHp3Q
          g$r$22319$1MHp3Q)
        (letrec* ((g$return$22320$1MHp3Q
                    (case-lambda
                      ((g$x$22328$1MHp3Q)
                       (begin
                         ((letrec ((g$f$22329$1MHp3Q
                                     (case-lambda
                                       ((g$x$22330$1MHp3Q)
                                        (if (not (g$stx?$19737$1MHp3Q
                                                   g$x$22330$1MHp3Q))
                                          (if (pair? g$x$22330$1MHp3Q)
                                            (begin
                                              (g$f$22329$1MHp3Q
                                                (car g$x$22330$1MHp3Q))
                                              (g$f$22329$1MHp3Q
                                                (cdr g$x$22330$1MHp3Q)))
                                            (if (g$vector?$12665$1MHp3Q
                                                  g$x$22330$1MHp3Q)
                                              (g$vector-for-each$12735$1MHp3Q
                                                g$f$22329$1MHp3Q
                                                g$x$22330$1MHp3Q)
                                              (if (g$symbol?$12667$1MHp3Q
                                                    g$x$22330$1MHp3Q)
                                                (g$syntax-violation$20382$1MHp3Q
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$22318$1MHp3Q
                                                  g$x$22330$1MHp3Q)
                                                (void))))
                                          (void))))))
                            g$f$22329$1MHp3Q)
                          g$x$22328$1MHp3Q)
                         (g$add-mark$19754$1MHp3Q
                           (g$gen-mark$19749$1MHp3Q)
                           g$x$22328$1MHp3Q
                           g$expr$22318$1MHp3Q))))))
          ((case-lambda
             ((g$x$22321$1MHp3Q)
              (if (g$procedure?$12669$1MHp3Q g$x$22321$1MHp3Q)
                (g$return$22320$1MHp3Q
                  (g$x$22321$1MHp3Q
                    (case-lambda
                      ((g$id$22322$1MHp3Q)
                       (begin
                         (if (not (g$id?$19765$1MHp3Q
                                    g$id$22322$1MHp3Q))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$22322$1MHp3Q)
                           (void))
                         ((case-lambda
                            ((g$label$22323$1MHp3Q)
                             ((case-lambda
                                ((g$binding$22324$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$22325$1MHp3Q)
                                     (if (eqv?
                                           g$t$22325$1MHp3Q
                                           'local-ctv)
                                       (g$cadr$12686$1MHp3Q
                                         g$binding$22324$1MHp3Q)
                                       (if (eqv?
                                             g$t$22325$1MHp3Q
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$22326$1MHp3Q
                                               g$loc$22327$1MHp3Q)
                                             (begin
                                               (g$visit-library$19472$1MHp3Q
                                                 g$lib$22326$1MHp3Q)
                                               (symbol-value
                                                 g$loc$22327$1MHp3Q))))
                                          (g$cadr$12686$1MHp3Q
                                            g$binding$22324$1MHp3Q)
                                          (g$cddr$12688$1MHp3Q
                                            g$binding$22324$1MHp3Q))
                                         (begin '#f '#f)))))
                                  (car g$binding$22324$1MHp3Q))))
                              (g$label->binding$19780$1MHp3Q
                                g$label$22323$1MHp3Q
                                g$r$22319$1MHp3Q))))
                          (g$id->label$19778$1MHp3Q
                            g$id$22322$1MHp3Q)))))))
                (g$return$22320$1MHp3Q g$x$22321$1MHp3Q))))
           (g$transformer$22317$1MHp3Q
             (g$add-mark$19754$1MHp3Q
               g$anti-mark$19750$1MHp3Q
               g$expr$22318$1MHp3Q
               '#f)))))))
   (g$chi-macro$20276$1MHp3Q
     g$chi-macro$23872$1MHp3Q
     (case-lambda
       ((g$p$22331$1MHp3Q g$e$22332$1MHp3Q g$r$22333$1MHp3Q)
        (g$do-macro-call$20275$1MHp3Q
          (g$macro-transformer$20273$1MHp3Q g$p$22331$1MHp3Q)
          g$e$22332$1MHp3Q
          g$r$22333$1MHp3Q))))
   (g$chi-local-macro$20277$1MHp3Q
     g$chi-local-macro$23873$1MHp3Q
     (case-lambda
       ((g$p$22334$1MHp3Q g$e$22335$1MHp3Q g$r$22336$1MHp3Q)
        (g$do-macro-call$20275$1MHp3Q
          (g$local-macro-transformer$20274$1MHp3Q g$p$22334$1MHp3Q)
          g$e$22335$1MHp3Q
          g$r$22336$1MHp3Q))))
   (g$chi-global-macro$20278$1MHp3Q
     g$chi-global-macro$23874$1MHp3Q
     (case-lambda
       ((g$p$22337$1MHp3Q g$e$22338$1MHp3Q g$r$22339$1MHp3Q)
        ((case-lambda
           ((g$lib$22340$1MHp3Q g$loc$22341$1MHp3Q)
            (begin
              (g$visit-library$19472$1MHp3Q g$lib$22340$1MHp3Q)
              ((case-lambda
                 ((g$x$22342$1MHp3Q)
                  ((case-lambda
                     ((g$transformer$22343$1MHp3Q)
                      (g$do-macro-call$20275$1MHp3Q
                        g$transformer$22343$1MHp3Q
                        g$e$22338$1MHp3Q
                        g$r$22339$1MHp3Q)))
                   (if (g$procedure?$12669$1MHp3Q g$x$22342$1MHp3Q)
                     g$x$22342$1MHp3Q
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$22342$1MHp3Q))))))
               (symbol-value g$loc$22341$1MHp3Q)))))
         (car g$p$22337$1MHp3Q)
         (cdr g$p$22337$1MHp3Q)))))
   (g$chi-expr*$20279$1MHp3Q
     g$chi-expr*$23875$1MHp3Q
     (case-lambda
       ((g$e*$22344$1MHp3Q g$r$22345$1MHp3Q g$mr$22346$1MHp3Q)
        (if (null? g$e*$22344$1MHp3Q)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$22347$1MHp3Q)
                (cons
                  g$e$22347$1MHp3Q
                  (g$chi-expr*$20279$1MHp3Q
                    (cdr g$e*$22344$1MHp3Q)
                    g$r$22345$1MHp3Q
                    g$mr$22346$1MHp3Q))))
             (g$chi-expr$20281$1MHp3Q
               (car g$e*$22344$1MHp3Q)
               g$r$22345$1MHp3Q
               g$mr$22346$1MHp3Q)))))))
   (g$chi-application$20280$1MHp3Q
     g$chi-application$23876$1MHp3Q
     (case-lambda
       ((g$e$22348$1MHp3Q g$r$22349$1MHp3Q g$mr$22350$1MHp3Q)
        ((case-lambda
           ((g$t$22351$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22352$1MHp3Q)
                (if g$ls/false$22352$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$rator$22353$1MHp3Q g$rands$22354$1MHp3Q)
                       ((case-lambda
                          ((g$rator$22355$1MHp3Q)
                           (cons
                             g$rator$22355$1MHp3Q
                             (g$chi-expr*$20279$1MHp3Q
                               g$rands$22354$1MHp3Q
                               g$r$22349$1MHp3Q
                               g$mr$22350$1MHp3Q))))
                        (g$chi-expr$20281$1MHp3Q
                          g$rator$22353$1MHp3Q
                          g$r$22349$1MHp3Q
                          g$mr$22350$1MHp3Q))))
                    g$ls/false$22352$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$22351$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22351$1MHp3Q
               '(any . each-any)))))
         g$e$22348$1MHp3Q))))
   (g$chi-expr$20281$1MHp3Q
     g$chi-expr$23877$1MHp3Q
     (case-lambda
       ((g$e$22356$1MHp3Q g$r$22357$1MHp3Q g$mr$22358$1MHp3Q)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$19785$1MHp3Q
               g$e$22356$1MHp3Q
               g$r$22357$1MHp3Q)))
          (case-lambda
            ((g$type$22362$1MHp3Q
               g$value$22363$1MHp3Q
               g$kwd$22364$1MHp3Q)
             ((case-lambda
                ((g$kwd$22365$1MHp3Q
                   g$value$22366$1MHp3Q
                   g$type$22367$1MHp3Q)
                 ((case-lambda
                    ((g$t$22368$1MHp3Q)
                     (if (eqv? g$t$22368$1MHp3Q 'core-macro)
                       ((case-lambda
                          ((g$transformer$22369$1MHp3Q)
                           (g$transformer$22369$1MHp3Q
                             g$e$22356$1MHp3Q
                             g$r$22357$1MHp3Q
                             g$mr$22358$1MHp3Q)))
                        (g$core-macro-transformer$20270$1MHp3Q
                          g$value$22366$1MHp3Q))
                       (if (eqv? g$t$22368$1MHp3Q 'global)
                         ((case-lambda
                            ((g$lib$22370$1MHp3Q)
                             ((case-lambda
                                ((g$loc$22371$1MHp3Q)
                                 (begin
                                   ((g$inv-collector$20318$1MHp3Q)
                                    g$lib$22370$1MHp3Q)
                                   g$loc$22371$1MHp3Q)))
                              (cdr g$value$22366$1MHp3Q))))
                          (car g$value$22366$1MHp3Q))
                         (if (eqv? g$t$22368$1MHp3Q 'core-prim)
                           ((case-lambda
                              ((g$name$22372$1MHp3Q)
                               (list 'primitive g$name$22372$1MHp3Q)))
                            g$value$22366$1MHp3Q)
                           (if (eqv? g$t$22368$1MHp3Q 'call)
                             (g$chi-application$20280$1MHp3Q
                               g$e$22356$1MHp3Q
                               g$r$22357$1MHp3Q
                               g$mr$22358$1MHp3Q)
                             (if (eqv? g$t$22368$1MHp3Q 'lexical)
                               ((case-lambda
                                  ((g$lex$22373$1MHp3Q)
                                   g$lex$22373$1MHp3Q))
                                (g$lexical-var$20207$1MHp3Q
                                  g$value$22366$1MHp3Q))
                               (if (g$memv$11828$1MHp3Q
                                     g$t$22368$1MHp3Q
                                     '(global-macro global-macro!))
                                 (g$chi-expr$20281$1MHp3Q
                                   (g$chi-global-macro$20278$1MHp3Q
                                     g$value$22366$1MHp3Q
                                     g$e$22356$1MHp3Q
                                     g$r$22357$1MHp3Q)
                                   g$r$22357$1MHp3Q
                                   g$mr$22358$1MHp3Q)
                                 (if (g$memv$11828$1MHp3Q
                                       g$t$22368$1MHp3Q
                                       '(local-macro local-macro!))
                                   (g$chi-expr$20281$1MHp3Q
                                     (g$chi-local-macro$20277$1MHp3Q
                                       g$value$22366$1MHp3Q
                                       g$e$22356$1MHp3Q
                                       g$r$22357$1MHp3Q)
                                     g$r$22357$1MHp3Q
                                     g$mr$22358$1MHp3Q)
                                   (if (g$memv$11828$1MHp3Q
                                         g$t$22368$1MHp3Q
                                         '(macro macro!))
                                     (g$chi-expr$20281$1MHp3Q
                                       (g$chi-macro$20276$1MHp3Q
                                         g$value$22366$1MHp3Q
                                         g$e$22356$1MHp3Q
                                         g$r$22357$1MHp3Q)
                                       g$r$22357$1MHp3Q
                                       g$mr$22358$1MHp3Q)
                                     (if (eqv?
                                           g$t$22368$1MHp3Q
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$22374$1MHp3Q)
                                           (list
                                             'quote
                                             g$datum$22374$1MHp3Q)))
                                        g$value$22366$1MHp3Q)
                                       (if (eqv? g$t$22368$1MHp3Q 'set!)
                                         (g$chi-set!$20282$1MHp3Q
                                           g$e$22356$1MHp3Q
                                           g$r$22357$1MHp3Q
                                           g$mr$22358$1MHp3Q)
                                         (if (eqv?
                                               g$t$22368$1MHp3Q
                                               'begin)
                                           ((case-lambda
                                              ((g$t$22375$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$22376$1MHp3Q)
                                                   (if g$ls/false$22376$1MHp3Q
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22377$1MHp3Q
                                                            g$x*$22378$1MHp3Q)
                                                          (g$build-sequence$19690$1MHp3Q
                                                            '#f
                                                            (g$chi-expr*$20279$1MHp3Q
                                                              (cons
                                                                g$x$22377$1MHp3Q
                                                                g$x*$22378$1MHp3Q)
                                                              g$r$22357$1MHp3Q
                                                              g$mr$22358$1MHp3Q))))
                                                       g$ls/false$22376$1MHp3Q)
                                                     (g$syntax-violation$20382$1MHp3Q
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22375$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$22375$1MHp3Q
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$22356$1MHp3Q)
                                           (if (g$memv$11828$1MHp3Q
                                                 g$t$22368$1MHp3Q
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$22379$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$ls/false$22380$1MHp3Q)
                                                     (if (if g$ls/false$22380$1MHp3Q
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$22381$1MHp3Q
                                                                    g$xrhs*$22382$1MHp3Q
                                                                    g$xbody$22383$1MHp3Q
                                                                    g$xbody*$22384$1MHp3Q)
                                                                  (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                                                             g$xlhs*$22381$1MHp3Q))
                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$22356$1MHp3Q)
                                                                    (void))))
                                                               g$ls/false$22380$1MHp3Q))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$22385$1MHp3Q
                                                              g$xrhs*$22386$1MHp3Q
                                                              g$xbody$22387$1MHp3Q
                                                              g$xbody*$22388$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$xlab*$22389$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$xrib$22390$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$xb*$22391$1MHp3Q)
                                                                        (g$build-sequence$19690$1MHp3Q
                                                                          '#f
                                                                          (g$chi-expr*$20279$1MHp3Q
                                                                            (g$map$11835$1MHp3Q
                                                                              (case-lambda
                                                                                ((g$x$22392$1MHp3Q)
                                                                                 (g$add-subst$19755$1MHp3Q
                                                                                   g$xrib$22390$1MHp3Q
                                                                                   g$x$22392$1MHp3Q)))
                                                                              (cons
                                                                                g$xbody$22387$1MHp3Q
                                                                                g$xbody*$22388$1MHp3Q))
                                                                            (append
                                                                              (g$map$11835$1MHp3Q
                                                                                cons
                                                                                g$xlab*$22389$1MHp3Q
                                                                                g$xb*$22391$1MHp3Q)
                                                                              g$r$22357$1MHp3Q)
                                                                            (append
                                                                              (g$map$11835$1MHp3Q
                                                                                cons
                                                                                g$xlab*$22389$1MHp3Q
                                                                                g$xb*$22391$1MHp3Q)
                                                                              g$mr$22358$1MHp3Q)))))
                                                                     (g$map$11835$1MHp3Q
                                                                       (case-lambda
                                                                         ((g$x$22393$1MHp3Q)
                                                                          (g$make-eval-transformer$19813$1MHp3Q
                                                                            (g$expand-transformer$20311$1MHp3Q
                                                                              (if (eq? g$type$22367$1MHp3Q
                                                                                       'let-syntax)
                                                                                g$x$22393$1MHp3Q
                                                                                (g$add-subst$19755$1MHp3Q
                                                                                  g$xrib$22390$1MHp3Q
                                                                                  g$x$22393$1MHp3Q))
                                                                              g$mr$22358$1MHp3Q))))
                                                                       g$xrhs*$22386$1MHp3Q))))
                                                                 (g$make-full-rib$19731$1MHp3Q
                                                                   g$xlhs*$22385$1MHp3Q
                                                                   g$xlab*$22389$1MHp3Q))))
                                                             (g$map$11835$1MHp3Q
                                                               g$gen-label$19702$1MHp3Q
                                                               g$xlhs*$22385$1MHp3Q))))
                                                         g$ls/false$22380$1MHp3Q)
                                                       (g$syntax-violation$20382$1MHp3Q
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$22379$1MHp3Q))))
                                                  (g$syntax-dispatch$20263$1MHp3Q
                                                    g$t$22379$1MHp3Q
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$22356$1MHp3Q)
                                             (if (eqv?
                                                   g$t$22368$1MHp3Q
                                                   'displaced-lexical)
                                               (g$syntax-violation$20382$1MHp3Q
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$22356$1MHp3Q)
                                               (if (eqv?
                                                     g$t$22368$1MHp3Q
                                                     'syntax)
                                                 (g$syntax-violation$20382$1MHp3Q
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$22356$1MHp3Q)
                                                 (if (g$memv$11828$1MHp3Q
                                                       g$t$22368$1MHp3Q
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$20382$1MHp3Q
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$22394$1MHp3Q)
                                                           (if (eqv?
                                                                 g$t$22394$1MHp3Q
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$22394$1MHp3Q
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$22394$1MHp3Q
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$22394$1MHp3Q
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$22394$1MHp3Q
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$22394$1MHp3Q
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$22367$1MHp3Q)
                                                       '" was found where an expression was expected")
                                                     g$e$22356$1MHp3Q)
                                                   (if (eqv?
                                                         g$t$22368$1MHp3Q
                                                         'mutable)
                                                     (g$syntax-violation$20382$1MHp3Q
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$22356$1MHp3Q)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$20382$1MHp3Q
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$22356$1MHp3Q))))))))))))))))))))
                  g$type$22367$1MHp3Q)))
              g$kwd$22364$1MHp3Q
              g$value$22363$1MHp3Q
              g$type$22362$1MHp3Q)))))))
   (g$chi-set!$20282$1MHp3Q
     g$chi-set!$23878$1MHp3Q
     (case-lambda
       ((g$e$22395$1MHp3Q g$r$22396$1MHp3Q g$mr$22397$1MHp3Q)
        ((case-lambda
           ((g$t$22398$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22399$1MHp3Q)
                (if (if g$ls/false$22399$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$22400$1MHp3Q g$v$22401$1MHp3Q)
                             (g$id?$19765$1MHp3Q g$x$22400$1MHp3Q)))
                          g$ls/false$22399$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$22402$1MHp3Q g$v$22403$1MHp3Q)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$19785$1MHp3Q
                              g$x$22402$1MHp3Q
                              g$r$22396$1MHp3Q)))
                         (case-lambda
                           ((g$type$22407$1MHp3Q
                              g$value$22408$1MHp3Q
                              g$kwd$22409$1MHp3Q)
                            ((case-lambda
                               ((g$kwd$22410$1MHp3Q
                                  g$value$22411$1MHp3Q
                                  g$type$22412$1MHp3Q)
                                ((case-lambda
                                   ((g$t$22413$1MHp3Q)
                                    (if (eqv? g$t$22413$1MHp3Q 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$20209$1MHp3Q
                                          g$value$22411$1MHp3Q
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$20207$1MHp3Q
                                            g$value$22411$1MHp3Q)
                                          (g$chi-expr$20281$1MHp3Q
                                            g$v$22403$1MHp3Q
                                            g$r$22396$1MHp3Q
                                            g$mr$22397$1MHp3Q)))
                                      (if (eqv?
                                            g$t$22413$1MHp3Q
                                            'core-prim)
                                        (g$syntax-violation$20382$1MHp3Q
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$22395$1MHp3Q)
                                        (if (eqv?
                                              g$t$22413$1MHp3Q
                                              'global)
                                          (g$syntax-violation$20382$1MHp3Q
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$22395$1MHp3Q)
                                          (if (eqv?
                                                g$t$22413$1MHp3Q
                                                'global-macro!)
                                            (g$chi-expr$20281$1MHp3Q
                                              (g$chi-global-macro$20278$1MHp3Q
                                                g$value$22411$1MHp3Q
                                                g$e$22395$1MHp3Q
                                                g$r$22396$1MHp3Q)
                                              g$r$22396$1MHp3Q
                                              g$mr$22397$1MHp3Q)
                                            (if (eqv?
                                                  g$t$22413$1MHp3Q
                                                  'local-macro!)
                                              (g$chi-expr$20281$1MHp3Q
                                                (g$chi-local-macro$20277$1MHp3Q
                                                  g$value$22411$1MHp3Q
                                                  g$e$22395$1MHp3Q
                                                  g$r$22396$1MHp3Q)
                                                g$r$22396$1MHp3Q
                                                g$mr$22397$1MHp3Q)
                                              (if (eqv?
                                                    g$t$22413$1MHp3Q
                                                    'mutable)
                                                (g$syntax-violation$20382$1MHp3Q
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$22395$1MHp3Q)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$20382$1MHp3Q
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$22395$1MHp3Q))))))))))
                                 g$type$22412$1MHp3Q)))
                             g$kwd$22409$1MHp3Q
                             g$value$22408$1MHp3Q
                             g$type$22407$1MHp3Q))))))
                    g$ls/false$22399$1MHp3Q)
                  (g$syntax-violation$20382$1MHp3Q
                    '#f
                    '"invalid syntax"
                    g$t$22398$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22398$1MHp3Q
               '(_ any any)))))
         g$e$22395$1MHp3Q))))
   (g$verify-formals$20283$1MHp3Q
     g$verify-formals$23879$1MHp3Q
     (case-lambda
       ((g$fmls$22414$1MHp3Q g$stx$22415$1MHp3Q)
        ((case-lambda
           ((g$t$22416$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22417$1MHp3Q)
                (if g$ls/false$22417$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$x*$22418$1MHp3Q)
                       (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                  g$x*$22418$1MHp3Q))
                         (g$invalid-fmls-error$20228$1MHp3Q
                           g$stx$22415$1MHp3Q
                           g$fmls$22414$1MHp3Q)
                         (void))))
                    g$ls/false$22417$1MHp3Q)
                  ((case-lambda
                     ((g$t$22419$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$22420$1MHp3Q)
                          (if g$ls/false$22420$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$x*$22421$1MHp3Q g$x$22422$1MHp3Q)
                                 (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                            (cons
                                              g$x$22422$1MHp3Q
                                              g$x*$22421$1MHp3Q)))
                                   (g$invalid-fmls-error$20228$1MHp3Q
                                     g$stx$22415$1MHp3Q
                                     g$fmls$22414$1MHp3Q)
                                   (void))))
                              g$ls/false$22420$1MHp3Q)
                            ((case-lambda
                               ((g$t$22423$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$22424$1MHp3Q)
                                    (if g$ls/false$22424$1MHp3Q
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$stx$22415$1MHp3Q)))
                                        g$ls/false$22424$1MHp3Q)
                                      (g$syntax-violation$20382$1MHp3Q
                                        '#f
                                        '"invalid syntax"
                                        g$t$22423$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$22423$1MHp3Q
                                   '_))))
                             g$t$22419$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$22419$1MHp3Q
                         '#(each+ any () any)))))
                   g$t$22416$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22416$1MHp3Q
               'each-any))))
         g$fmls$22414$1MHp3Q))))
   (g$chi-lambda-clause$20284$1MHp3Q
     g$chi-lambda-clause$23880$1MHp3Q
     (case-lambda
       ((g$stx$22425$1MHp3Q
          g$fmls$22426$1MHp3Q
          g$body*$22427$1MHp3Q
          g$r$22428$1MHp3Q
          g$mr$22429$1MHp3Q)
        ((case-lambda
           ((g$t$22430$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22431$1MHp3Q)
                (if g$ls/false$22431$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$x*$22432$1MHp3Q)
                       (begin
                         (g$verify-formals$20283$1MHp3Q
                           g$fmls$22426$1MHp3Q
                           g$stx$22425$1MHp3Q)
                         ((case-lambda
                            ((g$lex*$22433$1MHp3Q g$lab*$22434$1MHp3Q)
                             (values
                               g$lex*$22433$1MHp3Q
                               (g$chi-internal$20292$1MHp3Q
                                 (g$add-subst$19755$1MHp3Q
                                   (g$make-full-rib$19731$1MHp3Q
                                     g$x*$22432$1MHp3Q
                                     g$lab*$22434$1MHp3Q)
                                   g$body*$22427$1MHp3Q)
                                 (g$add-lexicals$20211$1MHp3Q
                                   g$lab*$22434$1MHp3Q
                                   g$lex*$22433$1MHp3Q
                                   g$r$22428$1MHp3Q)
                                 g$mr$22429$1MHp3Q))))
                          (g$map$11835$1MHp3Q
                            g$gen-lexical$19700$1MHp3Q
                            g$x*$22432$1MHp3Q)
                          (g$map$11835$1MHp3Q
                            g$gen-label$19702$1MHp3Q
                            g$x*$22432$1MHp3Q)))))
                    g$ls/false$22431$1MHp3Q)
                  ((case-lambda
                     ((g$t$22435$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$22436$1MHp3Q)
                          (if g$ls/false$22436$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$x*$22437$1MHp3Q g$x$22438$1MHp3Q)
                                 (begin
                                   (g$verify-formals$20283$1MHp3Q
                                     g$fmls$22426$1MHp3Q
                                     g$stx$22425$1MHp3Q)
                                   ((case-lambda
                                      ((g$lex*$22439$1MHp3Q
                                         g$lab*$22440$1MHp3Q
                                         g$lex$22441$1MHp3Q
                                         g$lab$22442$1MHp3Q)
                                       (values
                                         (append
                                           g$lex*$22439$1MHp3Q
                                           g$lex$22441$1MHp3Q)
                                         (g$chi-internal$20292$1MHp3Q
                                           (g$add-subst$19755$1MHp3Q
                                             (g$make-full-rib$19731$1MHp3Q
                                               (cons
                                                 g$x$22438$1MHp3Q
                                                 g$x*$22437$1MHp3Q)
                                               (cons
                                                 g$lab$22442$1MHp3Q
                                                 g$lab*$22440$1MHp3Q))
                                             g$body*$22427$1MHp3Q)
                                           (g$add-lexicals$20211$1MHp3Q
                                             (cons
                                               g$lab$22442$1MHp3Q
                                               g$lab*$22440$1MHp3Q)
                                             (cons
                                               g$lex$22441$1MHp3Q
                                               g$lex*$22439$1MHp3Q)
                                             g$r$22428$1MHp3Q)
                                           g$mr$22429$1MHp3Q))))
                                    (g$map$11835$1MHp3Q
                                      g$gen-lexical$19700$1MHp3Q
                                      g$x*$22437$1MHp3Q)
                                    (g$map$11835$1MHp3Q
                                      g$gen-label$19702$1MHp3Q
                                      g$x*$22437$1MHp3Q)
                                    (g$gen-lexical$19700$1MHp3Q
                                      g$x$22438$1MHp3Q)
                                    (g$gen-label$19702$1MHp3Q
                                      g$x$22438$1MHp3Q)))))
                              g$ls/false$22436$1MHp3Q)
                            ((case-lambda
                               ((g$t$22443$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$22444$1MHp3Q)
                                    (if g$ls/false$22444$1MHp3Q
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20382$1MHp3Q
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$22426$1MHp3Q)))
                                        g$ls/false$22444$1MHp3Q)
                                      (g$syntax-violation$20382$1MHp3Q
                                        '#f
                                        '"invalid syntax"
                                        g$t$22443$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$22443$1MHp3Q
                                   '_))))
                             g$t$22435$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$22435$1MHp3Q
                         '#(each+ any () any)))))
                   g$t$22430$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22430$1MHp3Q
               'each-any))))
         g$fmls$22426$1MHp3Q))))
   (g$chi-lambda-clause*$20285$1MHp3Q
     g$chi-lambda-clause*$23881$1MHp3Q
     (case-lambda
       ((g$stx$22445$1MHp3Q
          g$fmls*$22446$1MHp3Q
          g$body**$22447$1MHp3Q
          g$r$22448$1MHp3Q
          g$mr$22449$1MHp3Q)
        (if (null? g$fmls*$22446$1MHp3Q)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20284$1MHp3Q
                   g$stx$22445$1MHp3Q
                   (car g$fmls*$22446$1MHp3Q)
                   (car g$body**$22447$1MHp3Q)
                   g$r$22448$1MHp3Q
                   g$mr$22449$1MHp3Q)))
              (case-lambda
                ((g$a$22452$1MHp3Q g$b$22453$1MHp3Q)
                 ((case-lambda
                    ((g$b$22454$1MHp3Q g$a$22455$1MHp3Q)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$20285$1MHp3Q
                            g$stx$22445$1MHp3Q
                            (cdr g$fmls*$22446$1MHp3Q)
                            (cdr g$body**$22447$1MHp3Q)
                            g$r$22448$1MHp3Q
                            g$mr$22449$1MHp3Q)))
                       (case-lambda
                         ((g$a*$22458$1MHp3Q g$b*$22459$1MHp3Q)
                          ((case-lambda
                             ((g$b*$22460$1MHp3Q g$a*$22461$1MHp3Q)
                              (values
                                (cons
                                  g$a$22455$1MHp3Q
                                  g$a*$22461$1MHp3Q)
                                (cons
                                  g$b$22454$1MHp3Q
                                  g$b*$22460$1MHp3Q))))
                           g$b*$22459$1MHp3Q
                           g$a*$22458$1MHp3Q))))))
                  g$b$22453$1MHp3Q
                  g$a$22452$1MHp3Q)))))))))
   (g$chi-defun$20286$1MHp3Q
     g$chi-defun$23882$1MHp3Q
     (case-lambda
       ((g$x$22462$1MHp3Q g$r$22463$1MHp3Q g$mr$22464$1MHp3Q)
        ((case-lambda
           ((g$fmls$22465$1MHp3Q g$body*$22466$1MHp3Q)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20284$1MHp3Q
                   g$fmls$22465$1MHp3Q
                   g$fmls$22465$1MHp3Q
                   g$body*$22466$1MHp3Q
                   g$r$22463$1MHp3Q
                   g$mr$22464$1MHp3Q)))
              (case-lambda
                ((g$fmls$22469$1MHp3Q g$body$22470$1MHp3Q)
                 ((case-lambda
                    ((g$body$22471$1MHp3Q g$fmls$22472$1MHp3Q)
                     (g$build-lambda$19687$1MHp3Q
                       '#f
                       g$fmls$22472$1MHp3Q
                       g$body$22471$1MHp3Q)))
                  g$body$22470$1MHp3Q
                  g$fmls$22469$1MHp3Q))))))
         (car g$x$22462$1MHp3Q)
         (cdr g$x$22462$1MHp3Q)))))
   (g$chi-rhs$20287$1MHp3Q
     g$chi-rhs$23883$1MHp3Q
     (case-lambda
       ((g$rhs$22473$1MHp3Q g$r$22474$1MHp3Q g$mr$22475$1MHp3Q)
        ((case-lambda
           ((g$t$22476$1MHp3Q)
            (if (eqv? g$t$22476$1MHp3Q 'defun)
              (g$chi-defun$20286$1MHp3Q
                (cdr g$rhs$22473$1MHp3Q)
                g$r$22474$1MHp3Q
                g$mr$22475$1MHp3Q)
              (if (eqv? g$t$22476$1MHp3Q 'expr)
                ((case-lambda
                   ((g$expr$22477$1MHp3Q)
                    (g$chi-expr$20281$1MHp3Q
                      g$expr$22477$1MHp3Q
                      g$r$22474$1MHp3Q
                      g$mr$22475$1MHp3Q)))
                 (cdr g$rhs$22473$1MHp3Q))
                (if (eqv? g$t$22476$1MHp3Q 'top-expr)
                  ((case-lambda
                     ((g$expr$22478$1MHp3Q)
                      (g$build-sequence$19690$1MHp3Q
                        '#f
                        (list
                          (g$chi-expr$20281$1MHp3Q
                            g$expr$22478$1MHp3Q
                            g$r$22474$1MHp3Q
                            g$mr$22475$1MHp3Q)
                          (g$build-void$19691$1MHp3Q)))))
                   (cdr g$rhs$22473$1MHp3Q))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$22473$1MHp3Q)))))))
         (car g$rhs$22473$1MHp3Q)))))
   (g$expand-interaction-rhs*/init*$20288$1MHp3Q
     g$expand-interaction-rhs*/init*$23884$1MHp3Q
     (case-lambda
       ((g$lhs*$22479$1MHp3Q
          g$rhs*$22480$1MHp3Q
          g$init*$22481$1MHp3Q
          g$r$22482$1MHp3Q
          g$mr$22483$1MHp3Q)
        ((letrec ((g$f$22484$1MHp3Q
                    (case-lambda
                      ((g$lhs*$22485$1MHp3Q g$rhs*$22486$1MHp3Q)
                       (if (null? g$lhs*$22485$1MHp3Q)
                         (g$map$11835$1MHp3Q
                           (case-lambda
                             ((g$x$22487$1MHp3Q)
                              (g$chi-expr$20281$1MHp3Q
                                g$x$22487$1MHp3Q
                                g$r$22482$1MHp3Q
                                g$mr$22483$1MHp3Q)))
                           g$init*$22481$1MHp3Q)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$22488$1MHp3Q g$rhs$22489$1MHp3Q)
                               ((case-lambda
                                  ((g$t$22490$1MHp3Q)
                                   (if (eqv? g$t$22490$1MHp3Q 'defun)
                                     ((case-lambda
                                        ((g$rhs$22491$1MHp3Q)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$22488$1MHp3Q
                                             g$rhs$22491$1MHp3Q)
                                           (g$f$22484$1MHp3Q
                                             (cdr g$lhs*$22485$1MHp3Q)
                                             (cdr g$rhs*$22486$1MHp3Q)))))
                                      (g$chi-defun$20286$1MHp3Q
                                        (cdr g$rhs$22489$1MHp3Q)
                                        g$r$22482$1MHp3Q
                                        g$mr$22483$1MHp3Q))
                                     (if (eqv? g$t$22490$1MHp3Q 'expr)
                                       ((case-lambda
                                          ((g$rhs$22492$1MHp3Q)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$22488$1MHp3Q
                                               g$rhs$22492$1MHp3Q)
                                             (g$f$22484$1MHp3Q
                                               (cdr g$lhs*$22485$1MHp3Q)
                                               (cdr g$rhs*$22486$1MHp3Q)))))
                                        (g$chi-expr$20281$1MHp3Q
                                          (cdr g$rhs$22489$1MHp3Q)
                                          g$r$22482$1MHp3Q
                                          g$mr$22483$1MHp3Q))
                                       (if (eqv?
                                             g$t$22490$1MHp3Q
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$22493$1MHp3Q)
                                             (cons
                                               g$e$22493$1MHp3Q
                                               (g$f$22484$1MHp3Q
                                                 (cdr g$lhs*$22485$1MHp3Q)
                                                 (cdr g$rhs*$22486$1MHp3Q)))))
                                          (g$chi-expr$20281$1MHp3Q
                                            (cdr g$rhs$22489$1MHp3Q)
                                            g$r$22482$1MHp3Q
                                            g$mr$22483$1MHp3Q))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$22489$1MHp3Q)))))))
                                (car g$rhs$22489$1MHp3Q))))
                            (car g$lhs*$22485$1MHp3Q)
                            (car g$rhs*$22486$1MHp3Q))))))))
           g$f$22484$1MHp3Q)
         g$lhs*$22479$1MHp3Q
         g$rhs*$22480$1MHp3Q))))
   (g$chi-rhs*$20289$1MHp3Q
     g$chi-rhs*$23885$1MHp3Q
     (case-lambda
       ((g$rhs*$22494$1MHp3Q g$r$22495$1MHp3Q g$mr$22496$1MHp3Q)
        ((letrec ((g$f$22497$1MHp3Q
                    (case-lambda
                      ((g$ls$22498$1MHp3Q)
                       (if (null? g$ls$22498$1MHp3Q)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$22499$1MHp3Q)
                               (cons
                                 g$a$22499$1MHp3Q
                                 (g$f$22497$1MHp3Q
                                   (cdr g$ls$22498$1MHp3Q)))))
                            (g$chi-rhs$20287$1MHp3Q
                              (car g$ls$22498$1MHp3Q)
                              g$r$22495$1MHp3Q
                              g$mr$22496$1MHp3Q))))))))
           g$f$22497$1MHp3Q)
         g$rhs*$22494$1MHp3Q))))
   (g$find-bound=?$20290$1MHp3Q
     g$find-bound=?$23886$1MHp3Q
     (case-lambda
       ((g$x$22500$1MHp3Q g$lhs*$22501$1MHp3Q g$rhs*$22502$1MHp3Q)
        (if (null? g$lhs*$22501$1MHp3Q)
          '#f
          (if (g$bound-id=?$19768$1MHp3Q
                g$x$22500$1MHp3Q
                (car g$lhs*$22501$1MHp3Q))
            (car g$rhs*$22502$1MHp3Q)
            (begin
              '#f
              (g$find-bound=?$20290$1MHp3Q
                g$x$22500$1MHp3Q
                (cdr g$lhs*$22501$1MHp3Q)
                (cdr g$rhs*$22502$1MHp3Q))))))))
   (g$find-dups$20291$1MHp3Q
     g$find-dups$23887$1MHp3Q
     (case-lambda
       ((g$ls$22503$1MHp3Q)
        ((letrec ((g$f$22504$1MHp3Q
                    (case-lambda
                      ((g$ls$22505$1MHp3Q g$dups$22506$1MHp3Q)
                       (if (null? g$ls$22505$1MHp3Q)
                         g$dups$22506$1MHp3Q
                         ((case-lambda
                            ((g$t$22507$1MHp3Q)
                             (if g$t$22507$1MHp3Q
                               ((case-lambda
                                  ((g$x$22508$1MHp3Q)
                                   (g$f$22504$1MHp3Q
                                     (cdr g$ls$22505$1MHp3Q)
                                     (cons
                                       (list
                                         (car g$ls$22505$1MHp3Q)
                                         g$x$22508$1MHp3Q)
                                       g$dups$22506$1MHp3Q))))
                                g$t$22507$1MHp3Q)
                               (begin
                                 '#f
                                 (g$f$22504$1MHp3Q
                                   (cdr g$ls$22505$1MHp3Q)
                                   g$dups$22506$1MHp3Q)))))
                          (g$find-bound=?$20290$1MHp3Q
                            (car g$ls$22505$1MHp3Q)
                            (cdr g$ls$22505$1MHp3Q)
                            (cdr g$ls$22505$1MHp3Q))))))))
           g$f$22504$1MHp3Q)
         g$ls$22503$1MHp3Q
         '()))))
   (g$chi-internal$20292$1MHp3Q
     g$chi-internal$23888$1MHp3Q
     (case-lambda
       ((g$e*$22509$1MHp3Q g$r$22510$1MHp3Q g$mr$22511$1MHp3Q)
        ((case-lambda
           ((g$rib$22512$1MHp3Q)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$20310$1MHp3Q
                   (g$map$11835$1MHp3Q
                     (case-lambda
                       ((g$x$22521$1MHp3Q)
                        (g$add-subst$19755$1MHp3Q
                          g$rib$22512$1MHp3Q
                          g$x$22521$1MHp3Q)))
                     (g$syntax->list$19764$1MHp3Q g$e*$22509$1MHp3Q))
                   g$r$22510$1MHp3Q
                   g$mr$22511$1MHp3Q
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$22512$1MHp3Q
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$22522$1MHp3Q
                   g$r$22523$1MHp3Q
                   g$mr$22524$1MHp3Q
                   g$lex*$22525$1MHp3Q
                   g$rhs*$22526$1MHp3Q
                   g$mod**$22527$1MHp3Q
                   g$kwd*$22528$1MHp3Q
                   g$_exp*$22529$1MHp3Q)
                 ((case-lambda
                    ((g$_exp*$22530$1MHp3Q
                       g$kwd*$22531$1MHp3Q
                       g$mod**$22532$1MHp3Q
                       g$rhs*$22533$1MHp3Q
                       g$lex*$22534$1MHp3Q
                       g$mr$22535$1MHp3Q
                       g$r$22536$1MHp3Q
                       g$e*$22537$1MHp3Q)
                     (begin
                       (if (null? g$e*$22537$1MHp3Q)
                         (g$syntax-violation$20382$1MHp3Q
                           '#f
                           '"no expression in body"
                           g$e*$22537$1MHp3Q)
                         (void))
                       ((case-lambda
                          ((g$init*$22538$1MHp3Q)
                           ((case-lambda
                              ((g$rhs*$22539$1MHp3Q)
                               (g$build-letrec*$19693$1MHp3Q
                                 '#f
                                 (g$reverse$12684$1MHp3Q
                                   g$lex*$22534$1MHp3Q)
                                 (g$reverse$12684$1MHp3Q
                                   g$rhs*$22539$1MHp3Q)
                                 (g$build-sequence$19690$1MHp3Q
                                   '#f
                                   g$init*$22538$1MHp3Q))))
                            (g$chi-rhs*$20289$1MHp3Q
                              g$rhs*$22533$1MHp3Q
                              g$r$22536$1MHp3Q
                              g$mr$22535$1MHp3Q))))
                        (g$chi-expr*$20279$1MHp3Q
                          (append
                            (apply
                              append
                              (g$reverse$12684$1MHp3Q
                                g$mod**$22532$1MHp3Q))
                            g$e*$22537$1MHp3Q)
                          g$r$22536$1MHp3Q
                          g$mr$22535$1MHp3Q)))))
                  g$_exp*$22529$1MHp3Q
                  g$kwd*$22528$1MHp3Q
                  g$mod**$22527$1MHp3Q
                  g$rhs*$22526$1MHp3Q
                  g$lex*$22525$1MHp3Q
                  g$mr$22524$1MHp3Q
                  g$r$22523$1MHp3Q
                  g$e*$22522$1MHp3Q))))))
         (g$make-empty-rib$19723$1MHp3Q)))))
   (g$parse-module$20293$1MHp3Q
     g$parse-module$23889$1MHp3Q
     (case-lambda
       ((g$e$22540$1MHp3Q)
        ((case-lambda
           ((g$t$22541$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22542$1MHp3Q)
                (if g$ls/false$22542$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$export*$22543$1MHp3Q g$b*$22544$1MHp3Q)
                       (begin
                         (if (not (g$for-all$11833$1MHp3Q
                                    g$id?$19765$1MHp3Q
                                    g$export*$22543$1MHp3Q))
                           (g$syntax-violation$20382$1MHp3Q
                             '#f
                             '"module exports must be identifiers"
                             g$e$22540$1MHp3Q)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12678$1MHp3Q
                             g$export*$22543$1MHp3Q)
                           g$b*$22544$1MHp3Q))))
                    g$ls/false$22542$1MHp3Q)
                  ((case-lambda
                     ((g$t$22545$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$22546$1MHp3Q)
                          (if g$ls/false$22546$1MHp3Q
                            (apply
                              (case-lambda
                                ((g$name$22547$1MHp3Q
                                   g$export*$22548$1MHp3Q
                                   g$b*$22549$1MHp3Q)
                                 (begin
                                   (if (not (g$id?$19765$1MHp3Q
                                              g$name$22547$1MHp3Q))
                                     (g$syntax-violation$20382$1MHp3Q
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$22540$1MHp3Q)
                                     (void))
                                   (if (not (g$for-all$11833$1MHp3Q
                                              g$id?$19765$1MHp3Q
                                              g$export*$22548$1MHp3Q))
                                     (g$syntax-violation$20382$1MHp3Q
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$22540$1MHp3Q)
                                     (void))
                                   (values
                                     g$name$22547$1MHp3Q
                                     (g$list->vector$12678$1MHp3Q
                                       g$export*$22548$1MHp3Q)
                                     g$b*$22549$1MHp3Q))))
                              g$ls/false$22546$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$22545$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$22545$1MHp3Q
                         '(_ any each-any . each-any)))))
                   g$t$22541$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22541$1MHp3Q
               '(_ each-any . each-any)))))
         g$e$22540$1MHp3Q))))
   (g$9857$20294$1MHp3Q
     g$9857$23890$1MHp3Q
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9860$1MHp3Q
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$9859$20295$1MHp3Q g$9859$23891$1MHp3Q '#f)
   (g$9858$20296$1MHp3Q
     g$9858$23892$1MHp3Q
     (make-record-constructor-descriptor
       g$9857$20294$1MHp3Q
       '#f
       g$9859$20295$1MHp3Q))
   (g$module-interface?$20299$1MHp3Q
     g$module-interface?$23893$1MHp3Q
     (record-predicate g$9857$20294$1MHp3Q))
   (g$make-module-interface$20300$1MHp3Q
     g$make-module-interface$23894$1MHp3Q
     (record-constructor g$9858$20296$1MHp3Q))
   (g$module-interface-first-mark$20301$1MHp3Q
     g$module-interface-first-mark$23895$1MHp3Q
     (record-accessor g$9857$20294$1MHp3Q '0))
   (g$module-interface-exp-id-vec$20302$1MHp3Q
     g$module-interface-exp-id-vec$23896$1MHp3Q
     (record-accessor g$9857$20294$1MHp3Q '1))
   (g$module-interface-exp-lab-vec$20303$1MHp3Q
     g$module-interface-exp-lab-vec$23897$1MHp3Q
     (record-accessor g$9857$20294$1MHp3Q '2))
   (g$set-module-interface-first-mark!$20304$1MHp3Q
     g$set-module-interface-first-mark!$23898$1MHp3Q
     (record-mutator g$9857$20294$1MHp3Q '0))
   (g$set-module-interface-exp-id-vec!$20305$1MHp3Q
     g$set-module-interface-exp-id-vec!$23899$1MHp3Q
     (record-mutator g$9857$20294$1MHp3Q '1))
   (g$set-module-interface-exp-lab-vec!$20306$1MHp3Q
     g$set-module-interface-exp-lab-vec!$23900$1MHp3Q
     (record-mutator g$9857$20294$1MHp3Q '2))
   (g$module-interface-exp-id*$20307$1MHp3Q
     g$module-interface-exp-id*$23901$1MHp3Q
     (case-lambda
       ((g$iface$22550$1MHp3Q g$id$22551$1MHp3Q)
        (letrec* ((g$diff-marks$22552$1MHp3Q
                    (case-lambda
                      ((g$ls$22556$1MHp3Q g$x$22557$1MHp3Q)
                       (begin
                         (if (null? g$ls$22556$1MHp3Q)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$22558$1MHp3Q)
                             (if (eq? g$a$22558$1MHp3Q g$x$22557$1MHp3Q)
                               '()
                               (cons
                                 g$a$22558$1MHp3Q
                                 (g$diff-marks$22552$1MHp3Q
                                   (cdr g$ls$22556$1MHp3Q)
                                   g$x$22557$1MHp3Q)))))
                          (car g$ls$22556$1MHp3Q)))))))
          ((case-lambda
             ((g$diff$22553$1MHp3Q g$id-vec$22554$1MHp3Q)
              (if (null? g$diff$22553$1MHp3Q)
                g$id-vec$22554$1MHp3Q
                (g$vector-map$12734$1MHp3Q
                  (case-lambda
                    ((g$x$22555$1MHp3Q)
                     (g$make-stx$19738$1MHp3Q
                       (g$stx-expr$19739$1MHp3Q g$x$22555$1MHp3Q)
                       (append
                         g$diff$22553$1MHp3Q
                         (g$stx-mark*$19740$1MHp3Q g$x$22555$1MHp3Q))
                       '()
                       '())))
                  g$id-vec$22554$1MHp3Q))))
           (g$diff-marks$22552$1MHp3Q
             (g$stx-mark*$19740$1MHp3Q g$id$22551$1MHp3Q)
             (g$module-interface-first-mark$20301$1MHp3Q
               g$iface$22550$1MHp3Q))
           (g$module-interface-exp-id-vec$20302$1MHp3Q
             g$iface$22550$1MHp3Q))))))
   (g$syntax-transpose$20308$1MHp3Q
     g$syntax-transpose$23902$1MHp3Q
     (case-lambda
       ((g$object$22559$1MHp3Q
          g$base-id$22560$1MHp3Q
          g$new-id$22561$1MHp3Q)
        (letrec* ((g$who$22562$1MHp3Q 'syntax-transpose)
                  (g$err$22563$1MHp3Q
                    (case-lambda
                      ((g$msg$22605$1MHp3Q . g$args$22606$1MHp3Q)
                       (apply
                         assertion-violation
                         g$who$22562$1MHp3Q
                         g$msg$22605$1MHp3Q
                         g$args$22606$1MHp3Q))))
                  (g$split$22564$1MHp3Q
                    (case-lambda
                      ((g$s*$22598$1MHp3Q)
                       (if (eq? (car g$s*$22598$1MHp3Q) 'shift)
                         (values (list 'shift) (cdr g$s*$22598$1MHp3Q))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$22564$1MHp3Q
                                  (cdr g$s*$22598$1MHp3Q))))
                             (case-lambda
                               ((g$s1*$22601$1MHp3Q g$s2*$22602$1MHp3Q)
                                ((case-lambda
                                   ((g$s2*$22603$1MHp3Q
                                      g$s1*$22604$1MHp3Q)
                                    (values
                                      (cons
                                        (car g$s*$22598$1MHp3Q)
                                        g$s1*$22604$1MHp3Q)
                                      g$s2*$22603$1MHp3Q)))
                                 g$s2*$22602$1MHp3Q
                                 g$s1*$22601$1MHp3Q)))))))))
                  (g$final$22565$1MHp3Q
                    (case-lambda
                      ((g$s*$22596$1MHp3Q)
                       (if ((case-lambda
                              ((g$t$22597$1MHp3Q)
                               (if g$t$22597$1MHp3Q
                                 g$t$22597$1MHp3Q
                                 (begin
                                   '#f
                                   (eq? (car g$s*$22596$1MHp3Q)
                                        'shift)))))
                            (null? g$s*$22596$1MHp3Q))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$22596$1MHp3Q)
                             (g$final$22565$1MHp3Q
                               (cdr g$s*$22596$1MHp3Q))))))))
                  (g$diff$22566$1MHp3Q
                    (case-lambda
                      ((g$m$22576$1MHp3Q
                         g$m*$22577$1MHp3Q
                         g$s*$22578$1MHp3Q
                         g$ae*$22579$1MHp3Q)
                       (if (null? g$m*$22577$1MHp3Q)
                         (g$err$22563$1MHp3Q
                           '"unmatched identifiers"
                           g$base-id$22560$1MHp3Q
                           g$new-id$22561$1MHp3Q)
                         ((case-lambda
                            ((g$m1$22580$1MHp3Q)
                             (if (eq? g$m$22576$1MHp3Q
                                      g$m1$22580$1MHp3Q)
                               (values
                                 '()
                                 (g$final$22565$1MHp3Q
                                   g$s*$22578$1MHp3Q)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$22564$1MHp3Q
                                      g$s*$22578$1MHp3Q)))
                                 (case-lambda
                                   ((g$s1*$22583$1MHp3Q
                                      g$s2*$22584$1MHp3Q)
                                    ((case-lambda
                                       ((g$s2*$22585$1MHp3Q
                                          g$s1*$22586$1MHp3Q)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$22566$1MHp3Q
                                               g$m$22576$1MHp3Q
                                               (cdr g$m*$22577$1MHp3Q)
                                               g$s2*$22585$1MHp3Q
                                               (cdr g$ae*$22579$1MHp3Q))))
                                          (case-lambda
                                            ((g$nm*$22590$1MHp3Q
                                               g$ns*$22591$1MHp3Q
                                               g$nae*$22592$1MHp3Q)
                                             ((case-lambda
                                                ((g$nae*$22593$1MHp3Q
                                                   g$ns*$22594$1MHp3Q
                                                   g$nm*$22595$1MHp3Q)
                                                 (values
                                                   (cons
                                                     g$m1$22580$1MHp3Q
                                                     g$nm*$22595$1MHp3Q)
                                                   (append
                                                     g$s1*$22586$1MHp3Q
                                                     g$ns*$22594$1MHp3Q)
                                                   (cons
                                                     (car g$ae*$22579$1MHp3Q)
                                                     g$nae*$22593$1MHp3Q))))
                                              g$nae*$22592$1MHp3Q
                                              g$ns*$22591$1MHp3Q
                                              g$nm*$22590$1MHp3Q))))))
                                     g$s2*$22584$1MHp3Q
                                     g$s1*$22583$1MHp3Q)))))))
                          (car g$m*$22577$1MHp3Q)))))))
          (begin
            (if (not (g$id?$19765$1MHp3Q g$base-id$22560$1MHp3Q))
              (g$err$22563$1MHp3Q
                '"not an identifier"
                g$base-id$22560$1MHp3Q)
              (void))
            (if (not (g$id?$19765$1MHp3Q g$new-id$22561$1MHp3Q))
              (g$err$22563$1MHp3Q
                '"not an identifier"
                g$new-id$22561$1MHp3Q)
              (void))
            (if (not (g$free-identifier=?$20373$1MHp3Q
                       g$base-id$22560$1MHp3Q
                       g$new-id$22561$1MHp3Q))
              (g$err$22563$1MHp3Q
                '"not the same identifier"
                g$base-id$22560$1MHp3Q
                g$new-id$22561$1MHp3Q)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$22566$1MHp3Q
                   (car (g$stx-mark*$19740$1MHp3Q
                          g$base-id$22560$1MHp3Q))
                   (g$stx-mark*$19740$1MHp3Q g$new-id$22561$1MHp3Q)
                   (g$stx-subst*$19741$1MHp3Q g$new-id$22561$1MHp3Q)
                   (g$stx-ae*$19742$1MHp3Q g$new-id$22561$1MHp3Q))))
              (case-lambda
                ((g$m*$22570$1MHp3Q
                   g$s*$22571$1MHp3Q
                   g$ae*$22572$1MHp3Q)
                 ((case-lambda
                    ((g$ae*$22573$1MHp3Q
                       g$s*$22574$1MHp3Q
                       g$m*$22575$1MHp3Q)
                     (if (if (null? g$m*$22575$1MHp3Q)
                           (begin '#f (null? g$s*$22574$1MHp3Q))
                           '#f)
                       g$object$22559$1MHp3Q
                       (g$mkstx$19753$1MHp3Q
                         g$object$22559$1MHp3Q
                         g$m*$22575$1MHp3Q
                         g$s*$22574$1MHp3Q
                         g$ae*$22573$1MHp3Q))))
                  g$ae*$22572$1MHp3Q
                  g$s*$22571$1MHp3Q
                  g$m*$22570$1MHp3Q)))))))))
   (g$chi-internal-module$20309$1MHp3Q
     g$chi-internal-module$23903$1MHp3Q
     (case-lambda
       ((g$e$22607$1MHp3Q
          g$r$22608$1MHp3Q
          g$mr$22609$1MHp3Q
          g$lex*$22610$1MHp3Q
          g$rhs*$22611$1MHp3Q
          g$mod**$22612$1MHp3Q
          g$kwd*$22613$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$parse-module$20293$1MHp3Q g$e$22607$1MHp3Q)))
          (case-lambda
            ((g$name$22617$1MHp3Q
               g$exp-id*$22618$1MHp3Q
               g$e*$22619$1MHp3Q)
             ((case-lambda
                ((g$e*$22620$1MHp3Q
                   g$exp-id*$22621$1MHp3Q
                   g$name$22622$1MHp3Q)
                 ((case-lambda
                    ((g$rib$22623$1MHp3Q)
                     ((case-lambda
                        ((g$e*$22624$1MHp3Q)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$20310$1MHp3Q
                                g$e*$22624$1MHp3Q
                                g$r$22608$1MHp3Q
                                g$mr$22609$1MHp3Q
                                g$lex*$22610$1MHp3Q
                                g$rhs*$22611$1MHp3Q
                                g$mod**$22612$1MHp3Q
                                g$kwd*$22613$1MHp3Q
                                '()
                                g$rib$22623$1MHp3Q
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$22633$1MHp3Q
                                g$r$22634$1MHp3Q
                                g$mr$22635$1MHp3Q
                                g$lex*$22636$1MHp3Q
                                g$rhs*$22637$1MHp3Q
                                g$mod**$22638$1MHp3Q
                                g$kwd*$22639$1MHp3Q
                                g$_exp*$22640$1MHp3Q)
                              ((case-lambda
                                 ((g$_exp*$22641$1MHp3Q
                                    g$kwd*$22642$1MHp3Q
                                    g$mod**$22643$1MHp3Q
                                    g$rhs*$22644$1MHp3Q
                                    g$lex*$22645$1MHp3Q
                                    g$mr$22646$1MHp3Q
                                    g$r$22647$1MHp3Q
                                    g$e*$22648$1MHp3Q)
                                  ((case-lambda
                                     ((g$exp-lab*$22649$1MHp3Q
                                        g$mod**$22650$1MHp3Q)
                                      (if (not g$name$22622$1MHp3Q)
                                        (values
                                          g$lex*$22645$1MHp3Q
                                          g$rhs*$22644$1MHp3Q
                                          g$exp-id*$22621$1MHp3Q
                                          g$exp-lab*$22649$1MHp3Q
                                          g$r$22647$1MHp3Q
                                          g$mr$22646$1MHp3Q
                                          g$mod**$22650$1MHp3Q
                                          g$kwd*$22642$1MHp3Q)
                                        ((case-lambda
                                           ((g$lab$22651$1MHp3Q
                                              g$iface$22652$1MHp3Q)
                                            (values
                                              g$lex*$22645$1MHp3Q
                                              g$rhs*$22644$1MHp3Q
                                              (vector
                                                g$name$22622$1MHp3Q)
                                              (vector
                                                g$lab$22651$1MHp3Q)
                                              (cons
                                                (cons
                                                  g$lab$22651$1MHp3Q
                                                  (cons
                                                    '$module
                                                    g$iface$22652$1MHp3Q))
                                                g$r$22647$1MHp3Q)
                                              (cons
                                                (cons
                                                  g$lab$22651$1MHp3Q
                                                  (cons
                                                    '$module
                                                    g$iface$22652$1MHp3Q))
                                                g$mr$22646$1MHp3Q)
                                              g$mod**$22650$1MHp3Q
                                              g$kwd*$22642$1MHp3Q)))
                                         (g$gen-label$19702$1MHp3Q
                                           'module)
                                         (g$make-module-interface$20300$1MHp3Q
                                           (car (g$stx-mark*$19740$1MHp3Q
                                                  g$name$22622$1MHp3Q))
                                           (g$vector-map$12734$1MHp3Q
                                             (case-lambda
                                               ((g$x$22653$1MHp3Q)
                                                (g$make-stx$19738$1MHp3Q
                                                  (g$stx-expr$19739$1MHp3Q
                                                    g$x$22653$1MHp3Q)
                                                  (g$stx-mark*$19740$1MHp3Q
                                                    g$x$22653$1MHp3Q)
                                                  '()
                                                  '())))
                                             g$exp-id*$22621$1MHp3Q)
                                           g$exp-lab*$22649$1MHp3Q)))))
                                   (g$vector-map$12734$1MHp3Q
                                     (case-lambda
                                       ((g$x$22654$1MHp3Q)
                                        ((case-lambda
                                           ((g$t$22655$1MHp3Q)
                                            (if g$t$22655$1MHp3Q
                                              g$t$22655$1MHp3Q
                                              (begin
                                                '#f
                                                (g$syntax-violation$20382$1MHp3Q
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$22654$1MHp3Q)))))
                                         (g$id->label$19778$1MHp3Q
                                           (g$make-stx$19738$1MHp3Q
                                             (g$id->sym$19766$1MHp3Q
                                               g$x$22654$1MHp3Q)
                                             (g$stx-mark*$19740$1MHp3Q
                                               g$x$22654$1MHp3Q)
                                             (list g$rib$22623$1MHp3Q)
                                             '())))))
                                     g$exp-id*$22621$1MHp3Q)
                                   (cons
                                     g$e*$22648$1MHp3Q
                                     g$mod**$22643$1MHp3Q))))
                               g$_exp*$22640$1MHp3Q
                               g$kwd*$22639$1MHp3Q
                               g$mod**$22638$1MHp3Q
                               g$rhs*$22637$1MHp3Q
                               g$lex*$22636$1MHp3Q
                               g$mr$22635$1MHp3Q
                               g$r$22634$1MHp3Q
                               g$e*$22633$1MHp3Q))))))
                      (g$map$11835$1MHp3Q
                        (case-lambda
                          ((g$x$22656$1MHp3Q)
                           (g$add-subst$19755$1MHp3Q
                             g$rib$22623$1MHp3Q
                             g$x$22656$1MHp3Q)))
                        (g$syntax->list$19764$1MHp3Q
                          g$e*$22620$1MHp3Q)))))
                  (g$make-empty-rib$19723$1MHp3Q))))
              g$e*$22619$1MHp3Q
              g$exp-id*$22618$1MHp3Q
              g$name$22617$1MHp3Q)))))))
   (g$chi-body*$20310$1MHp3Q
     g$chi-body*$23904$1MHp3Q
     (case-lambda
       ((g$e*$22657$1MHp3Q
          g$r$22658$1MHp3Q
          g$mr$22659$1MHp3Q
          g$lex*$22660$1MHp3Q
          g$rhs*$22661$1MHp3Q
          g$mod**$22662$1MHp3Q
          g$kwd*$22663$1MHp3Q
          g$exp*$22664$1MHp3Q
          g$rib$22665$1MHp3Q
          g$mix?$22666$1MHp3Q
          g$sd?$22667$1MHp3Q)
        (if (null? g$e*$22657$1MHp3Q)
          (values
            g$e*$22657$1MHp3Q
            g$r$22658$1MHp3Q
            g$mr$22659$1MHp3Q
            g$lex*$22660$1MHp3Q
            g$rhs*$22661$1MHp3Q
            g$mod**$22662$1MHp3Q
            g$kwd*$22663$1MHp3Q
            g$exp*$22664$1MHp3Q)
          (begin
            '#f
            ((case-lambda
               ((g$e$22668$1MHp3Q)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$19785$1MHp3Q
                       g$e$22668$1MHp3Q
                       g$r$22658$1MHp3Q)))
                  (case-lambda
                    ((g$type$22672$1MHp3Q
                       g$value$22673$1MHp3Q
                       g$kwd$22674$1MHp3Q)
                     ((case-lambda
                        ((g$kwd$22675$1MHp3Q
                           g$value$22676$1MHp3Q
                           g$type$22677$1MHp3Q)
                         ((case-lambda
                            ((g$kwd*$22678$1MHp3Q)
                             ((case-lambda
                                ((g$t$22679$1MHp3Q)
                                 (if (eqv? g$t$22679$1MHp3Q 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$20203$1MHp3Q
                                          g$e$22668$1MHp3Q)))
                                     (case-lambda
                                       ((g$id$22682$1MHp3Q
                                          g$rhs$22683$1MHp3Q)
                                        ((case-lambda
                                           ((g$rhs$22684$1MHp3Q
                                              g$id$22685$1MHp3Q)
                                            (begin
                                              (if (g$bound-id-member?$19772$1MHp3Q
                                                    g$id$22685$1MHp3Q
                                                    g$kwd*$22678$1MHp3Q)
                                                (g$syntax-violation$20382$1MHp3Q
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$22668$1MHp3Q)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$19704$1MHp3Q
                                                     g$id$22685$1MHp3Q
                                                     g$rib$22665$1MHp3Q
                                                     g$sd?$22667$1MHp3Q)))
                                                (case-lambda
                                                  ((g$lab$22688$1MHp3Q
                                                     g$lex$22689$1MHp3Q)
                                                   ((case-lambda
                                                      ((g$lex$22690$1MHp3Q
                                                         g$lab$22691$1MHp3Q)
                                                       (begin
                                                         (g$extend-rib!$19726$1MHp3Q
                                                           g$rib$22665$1MHp3Q
                                                           g$id$22685$1MHp3Q
                                                           g$lab$22691$1MHp3Q
                                                           g$sd?$22667$1MHp3Q)
                                                         (g$chi-body*$20310$1MHp3Q
                                                           (cdr g$e*$22657$1MHp3Q)
                                                           (g$add-lexical$20210$1MHp3Q
                                                             g$lab$22691$1MHp3Q
                                                             g$lex$22690$1MHp3Q
                                                             g$r$22658$1MHp3Q)
                                                           g$mr$22659$1MHp3Q
                                                           (cons
                                                             g$lex$22690$1MHp3Q
                                                             g$lex*$22660$1MHp3Q)
                                                           (cons
                                                             g$rhs$22684$1MHp3Q
                                                             g$rhs*$22661$1MHp3Q)
                                                           g$mod**$22662$1MHp3Q
                                                           g$kwd*$22678$1MHp3Q
                                                           g$exp*$22664$1MHp3Q
                                                           g$rib$22665$1MHp3Q
                                                           g$mix?$22666$1MHp3Q
                                                           g$sd?$22667$1MHp3Q))))
                                                    g$lex$22689$1MHp3Q
                                                    g$lab$22688$1MHp3Q)))))))
                                         g$rhs$22683$1MHp3Q
                                         g$id$22682$1MHp3Q))))
                                   (if (eqv?
                                         g$t$22679$1MHp3Q
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$20204$1MHp3Q
                                            g$e$22668$1MHp3Q)))
                                       (case-lambda
                                         ((g$id$22694$1MHp3Q
                                            g$rhs$22695$1MHp3Q)
                                          ((case-lambda
                                             ((g$rhs$22696$1MHp3Q
                                                g$id$22697$1MHp3Q)
                                              (begin
                                                (if (g$bound-id-member?$19772$1MHp3Q
                                                      g$id$22697$1MHp3Q
                                                      g$kwd*$22678$1MHp3Q)
                                                  (g$syntax-violation$20382$1MHp3Q
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$22668$1MHp3Q)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$22698$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$22699$1MHp3Q)
                                                        (begin
                                                          (g$extend-rib!$19726$1MHp3Q
                                                            g$rib$22665$1MHp3Q
                                                            g$id$22697$1MHp3Q
                                                            g$lab$22698$1MHp3Q
                                                            g$sd?$22667$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$b$22700$1MHp3Q)
                                                              (g$chi-body*$20310$1MHp3Q
                                                                (cdr g$e*$22657$1MHp3Q)
                                                                (cons
                                                                  (cons
                                                                    g$lab$22698$1MHp3Q
                                                                    g$b$22700$1MHp3Q)
                                                                  g$r$22658$1MHp3Q)
                                                                (cons
                                                                  (cons
                                                                    g$lab$22698$1MHp3Q
                                                                    g$b$22700$1MHp3Q)
                                                                  g$mr$22659$1MHp3Q)
                                                                g$lex*$22660$1MHp3Q
                                                                g$rhs*$22661$1MHp3Q
                                                                g$mod**$22662$1MHp3Q
                                                                g$kwd*$22678$1MHp3Q
                                                                g$exp*$22664$1MHp3Q
                                                                g$rib$22665$1MHp3Q
                                                                g$mix?$22666$1MHp3Q
                                                                g$sd?$22667$1MHp3Q)))
                                                           (g$make-eval-transformer$19813$1MHp3Q
                                                             g$expanded-rhs$22699$1MHp3Q)))))
                                                     (g$expand-transformer$20311$1MHp3Q
                                                       g$rhs$22696$1MHp3Q
                                                       g$mr$22659$1MHp3Q))))
                                                 (g$gen-define-label$19705$1MHp3Q
                                                   g$id$22697$1MHp3Q
                                                   g$rib$22665$1MHp3Q
                                                   g$sd?$22667$1MHp3Q)))))
                                           g$rhs$22695$1MHp3Q
                                           g$id$22694$1MHp3Q))))
                                     (if (g$memv$11828$1MHp3Q
                                           g$t$22679$1MHp3Q
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$22701$1MHp3Q)
                                           ((case-lambda
                                              ((g$ls/false$22702$1MHp3Q)
                                               (if (if g$ls/false$22702$1MHp3Q
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$22703$1MHp3Q
                                                              g$xrhs*$22704$1MHp3Q
                                                              g$xbody*$22705$1MHp3Q)
                                                            (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                                                       g$xlhs*$22703$1MHp3Q))
                                                              (g$syntax-violation$20382$1MHp3Q
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$22668$1MHp3Q)
                                                              (void))))
                                                         g$ls/false$22702$1MHp3Q))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$22706$1MHp3Q
                                                        g$xrhs*$22707$1MHp3Q
                                                        g$xbody*$22708$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$xlab*$22709$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$xrib$22710$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$xb*$22711$1MHp3Q)
                                                                  (g$chi-body*$20310$1MHp3Q
                                                                    (append
                                                                      (g$map$11835$1MHp3Q
                                                                        (case-lambda
                                                                          ((g$x$22712$1MHp3Q)
                                                                           (g$add-subst$19755$1MHp3Q
                                                                             g$xrib$22710$1MHp3Q
                                                                             g$x$22712$1MHp3Q)))
                                                                        g$xbody*$22708$1MHp3Q)
                                                                      (cdr g$e*$22657$1MHp3Q))
                                                                    (append
                                                                      (g$map$11835$1MHp3Q
                                                                        cons
                                                                        g$xlab*$22709$1MHp3Q
                                                                        g$xb*$22711$1MHp3Q)
                                                                      g$r$22658$1MHp3Q)
                                                                    (append
                                                                      (g$map$11835$1MHp3Q
                                                                        cons
                                                                        g$xlab*$22709$1MHp3Q
                                                                        g$xb*$22711$1MHp3Q)
                                                                      g$mr$22659$1MHp3Q)
                                                                    g$lex*$22660$1MHp3Q
                                                                    g$rhs*$22661$1MHp3Q
                                                                    g$mod**$22662$1MHp3Q
                                                                    g$kwd*$22678$1MHp3Q
                                                                    g$exp*$22664$1MHp3Q
                                                                    g$rib$22665$1MHp3Q
                                                                    g$mix?$22666$1MHp3Q
                                                                    g$sd?$22667$1MHp3Q)))
                                                               (g$map$11835$1MHp3Q
                                                                 (case-lambda
                                                                   ((g$x$22713$1MHp3Q)
                                                                    (g$make-eval-transformer$19813$1MHp3Q
                                                                      (g$expand-transformer$20311$1MHp3Q
                                                                        (if (eq? g$type$22677$1MHp3Q
                                                                                 'let-syntax)
                                                                          g$x$22713$1MHp3Q
                                                                          (g$add-subst$19755$1MHp3Q
                                                                            g$xrib$22710$1MHp3Q
                                                                            g$x$22713$1MHp3Q))
                                                                        g$mr$22659$1MHp3Q))))
                                                                 g$xrhs*$22707$1MHp3Q))))
                                                           (g$make-full-rib$19731$1MHp3Q
                                                             g$xlhs*$22706$1MHp3Q
                                                             g$xlab*$22709$1MHp3Q))))
                                                       (g$map$11835$1MHp3Q
                                                         g$gen-label$19702$1MHp3Q
                                                         g$xlhs*$22706$1MHp3Q))))
                                                   g$ls/false$22702$1MHp3Q)
                                                 (g$syntax-violation$20382$1MHp3Q
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$22701$1MHp3Q))))
                                            (g$syntax-dispatch$20263$1MHp3Q
                                              g$t$22701$1MHp3Q
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$22668$1MHp3Q)
                                       (if (eqv?
                                             g$t$22679$1MHp3Q
                                             'begin)
                                         ((case-lambda
                                            ((g$t$22714$1MHp3Q)
                                             ((case-lambda
                                                ((g$ls/false$22715$1MHp3Q)
                                                 (if g$ls/false$22715$1MHp3Q
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$22716$1MHp3Q)
                                                        (g$chi-body*$20310$1MHp3Q
                                                          (append
                                                            g$x*$22716$1MHp3Q
                                                            (cdr g$e*$22657$1MHp3Q))
                                                          g$r$22658$1MHp3Q
                                                          g$mr$22659$1MHp3Q
                                                          g$lex*$22660$1MHp3Q
                                                          g$rhs*$22661$1MHp3Q
                                                          g$mod**$22662$1MHp3Q
                                                          g$kwd*$22678$1MHp3Q
                                                          g$exp*$22664$1MHp3Q
                                                          g$rib$22665$1MHp3Q
                                                          g$mix?$22666$1MHp3Q
                                                          g$sd?$22667$1MHp3Q)))
                                                     g$ls/false$22715$1MHp3Q)
                                                   (g$syntax-violation$20382$1MHp3Q
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$22714$1MHp3Q))))
                                              (g$syntax-dispatch$20263$1MHp3Q
                                                g$t$22714$1MHp3Q
                                                '(_ . each-any)))))
                                          g$e$22668$1MHp3Q)
                                         (if (g$memv$11828$1MHp3Q
                                               g$t$22679$1MHp3Q
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$20310$1MHp3Q
                                             (cons
                                               (g$add-subst$19755$1MHp3Q
                                                 g$rib$22665$1MHp3Q
                                                 (g$chi-global-macro$20278$1MHp3Q
                                                   g$value$22676$1MHp3Q
                                                   g$e$22668$1MHp3Q
                                                   g$r$22658$1MHp3Q))
                                               (cdr g$e*$22657$1MHp3Q))
                                             g$r$22658$1MHp3Q
                                             g$mr$22659$1MHp3Q
                                             g$lex*$22660$1MHp3Q
                                             g$rhs*$22661$1MHp3Q
                                             g$mod**$22662$1MHp3Q
                                             g$kwd*$22678$1MHp3Q
                                             g$exp*$22664$1MHp3Q
                                             g$rib$22665$1MHp3Q
                                             g$mix?$22666$1MHp3Q
                                             g$sd?$22667$1MHp3Q)
                                           (if (g$memv$11828$1MHp3Q
                                                 g$t$22679$1MHp3Q
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$20310$1MHp3Q
                                               (cons
                                                 (g$add-subst$19755$1MHp3Q
                                                   g$rib$22665$1MHp3Q
                                                   (g$chi-local-macro$20277$1MHp3Q
                                                     g$value$22676$1MHp3Q
                                                     g$e$22668$1MHp3Q
                                                     g$r$22658$1MHp3Q))
                                                 (cdr g$e*$22657$1MHp3Q))
                                               g$r$22658$1MHp3Q
                                               g$mr$22659$1MHp3Q
                                               g$lex*$22660$1MHp3Q
                                               g$rhs*$22661$1MHp3Q
                                               g$mod**$22662$1MHp3Q
                                               g$kwd*$22678$1MHp3Q
                                               g$exp*$22664$1MHp3Q
                                               g$rib$22665$1MHp3Q
                                               g$mix?$22666$1MHp3Q
                                               g$sd?$22667$1MHp3Q)
                                             (if (g$memv$11828$1MHp3Q
                                                   g$t$22679$1MHp3Q
                                                   '(macro macro!))
                                               (g$chi-body*$20310$1MHp3Q
                                                 (cons
                                                   (g$add-subst$19755$1MHp3Q
                                                     g$rib$22665$1MHp3Q
                                                     (g$chi-macro$20276$1MHp3Q
                                                       g$value$22676$1MHp3Q
                                                       g$e$22668$1MHp3Q
                                                       g$r$22658$1MHp3Q))
                                                   (cdr g$e*$22657$1MHp3Q))
                                                 g$r$22658$1MHp3Q
                                                 g$mr$22659$1MHp3Q
                                                 g$lex*$22660$1MHp3Q
                                                 g$rhs*$22661$1MHp3Q
                                                 g$mod**$22662$1MHp3Q
                                                 g$kwd*$22678$1MHp3Q
                                                 g$exp*$22664$1MHp3Q
                                                 g$rib$22665$1MHp3Q
                                                 g$mix?$22666$1MHp3Q
                                                 g$sd?$22667$1MHp3Q)
                                               (if (eqv?
                                                     g$t$22679$1MHp3Q
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$20309$1MHp3Q
                                                        g$e$22668$1MHp3Q
                                                        g$r$22658$1MHp3Q
                                                        g$mr$22659$1MHp3Q
                                                        g$lex*$22660$1MHp3Q
                                                        g$rhs*$22661$1MHp3Q
                                                        g$mod**$22662$1MHp3Q
                                                        g$kwd*$22678$1MHp3Q)))
                                                   (case-lambda
                                                     ((g$lex*$22725$1MHp3Q
                                                        g$rhs*$22726$1MHp3Q
                                                        g$m-exp-id*$22727$1MHp3Q
                                                        g$m-exp-lab*$22728$1MHp3Q
                                                        g$r$22729$1MHp3Q
                                                        g$mr$22730$1MHp3Q
                                                        g$mod**$22731$1MHp3Q
                                                        g$kwd*$22732$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$kwd*$22733$1MHp3Q
                                                            g$mod**$22734$1MHp3Q
                                                            g$mr$22735$1MHp3Q
                                                            g$r$22736$1MHp3Q
                                                            g$m-exp-lab*$22737$1MHp3Q
                                                            g$m-exp-id*$22738$1MHp3Q
                                                            g$rhs*$22739$1MHp3Q
                                                            g$lex*$22740$1MHp3Q)
                                                          (begin
                                                            (g$vector-for-each$12735$1MHp3Q
                                                              (case-lambda
                                                                ((g$id$22741$1MHp3Q
                                                                   g$lab$22742$1MHp3Q)
                                                                 (g$extend-rib!$19726$1MHp3Q
                                                                   g$rib$22665$1MHp3Q
                                                                   g$id$22741$1MHp3Q
                                                                   g$lab$22742$1MHp3Q
                                                                   g$sd?$22667$1MHp3Q)))
                                                              g$m-exp-id*$22738$1MHp3Q
                                                              g$m-exp-lab*$22737$1MHp3Q)
                                                            (g$chi-body*$20310$1MHp3Q
                                                              (cdr g$e*$22657$1MHp3Q)
                                                              g$r$22736$1MHp3Q
                                                              g$mr$22735$1MHp3Q
                                                              g$lex*$22740$1MHp3Q
                                                              g$rhs*$22739$1MHp3Q
                                                              g$mod**$22734$1MHp3Q
                                                              g$kwd*$22733$1MHp3Q
                                                              g$exp*$22664$1MHp3Q
                                                              g$rib$22665$1MHp3Q
                                                              g$mix?$22666$1MHp3Q
                                                              g$sd?$22667$1MHp3Q))))
                                                       g$kwd*$22732$1MHp3Q
                                                       g$mod**$22731$1MHp3Q
                                                       g$mr$22730$1MHp3Q
                                                       g$r$22729$1MHp3Q
                                                       g$m-exp-lab*$22728$1MHp3Q
                                                       g$m-exp-id*$22727$1MHp3Q
                                                       g$rhs*$22726$1MHp3Q
                                                       g$lex*$22725$1MHp3Q))))
                                                 (if (eqv?
                                                       g$t$22679$1MHp3Q
                                                       'library)
                                                   (begin
                                                     (g$library-expander$20366$1MHp3Q
                                                       (g$stx->datum$19776$1MHp3Q
                                                         g$e$22668$1MHp3Q))
                                                     (g$chi-body*$20310$1MHp3Q
                                                       (cdr g$e*$22657$1MHp3Q)
                                                       g$r$22658$1MHp3Q
                                                       g$mr$22659$1MHp3Q
                                                       g$lex*$22660$1MHp3Q
                                                       g$rhs*$22661$1MHp3Q
                                                       g$mod**$22662$1MHp3Q
                                                       g$kwd*$22678$1MHp3Q
                                                       g$exp*$22664$1MHp3Q
                                                       g$rib$22665$1MHp3Q
                                                       g$mix?$22666$1MHp3Q
                                                       g$sd?$22667$1MHp3Q))
                                                   (if (eqv?
                                                         g$t$22679$1MHp3Q
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$22743$1MHp3Q)
                                                         ((case-lambda
                                                            ((g$ls/false$22744$1MHp3Q)
                                                             (if g$ls/false$22744$1MHp3Q
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$22745$1MHp3Q)
                                                                    (g$chi-body*$20310$1MHp3Q
                                                                      (cdr g$e*$22657$1MHp3Q)
                                                                      g$r$22658$1MHp3Q
                                                                      g$mr$22659$1MHp3Q
                                                                      g$lex*$22660$1MHp3Q
                                                                      g$rhs*$22661$1MHp3Q
                                                                      g$mod**$22662$1MHp3Q
                                                                      g$kwd*$22678$1MHp3Q
                                                                      (append
                                                                        g$exp-decl*$22745$1MHp3Q
                                                                        g$exp*$22664$1MHp3Q)
                                                                      g$rib$22665$1MHp3Q
                                                                      g$mix?$22666$1MHp3Q
                                                                      g$sd?$22667$1MHp3Q)))
                                                                 g$ls/false$22744$1MHp3Q)
                                                               (g$syntax-violation$20382$1MHp3Q
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$22743$1MHp3Q))))
                                                          (g$syntax-dispatch$20263$1MHp3Q
                                                            g$t$22743$1MHp3Q
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$22668$1MHp3Q)
                                                     (if (eqv?
                                                           g$t$22679$1MHp3Q
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$22746$1MHp3Q
                                                                       (case-lambda
                                                                         ((g$e$22788$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$22789$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22790$1MHp3Q)
                                                                                  (if (if g$ls/false$22790$1MHp3Q
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$22791$1MHp3Q)
                                                                                               (g$id?$19765$1MHp3Q
                                                                                                 g$id$22791$1MHp3Q)))
                                                                                            g$ls/false$22790$1MHp3Q))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$22792$1MHp3Q)
                                                                                         '#t))
                                                                                      g$ls/false$22790$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$22793$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22794$1MHp3Q)
                                                                                            (if g$ls/false$22794$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$22795$1MHp3Q)
                                                                                                   '#f))
                                                                                                g$ls/false$22794$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$t$22796$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$22797$1MHp3Q)
                                                                                                      (if g$ls/false$22797$1MHp3Q
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$20382$1MHp3Q
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$22788$1MHp3Q)))
                                                                                                          g$ls/false$22797$1MHp3Q)
                                                                                                        (g$syntax-violation$20382$1MHp3Q
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$22796$1MHp3Q))))
                                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                                     g$t$22796$1MHp3Q
                                                                                                     '_))))
                                                                                               g$t$22793$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$22793$1MHp3Q
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$22789$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$22789$1MHp3Q
                                                                                 '(_ any)))))
                                                                           g$e$22788$1MHp3Q))))
                                                                     (g$module-import$22747$1MHp3Q
                                                                       (case-lambda
                                                                         ((g$e$22771$1MHp3Q
                                                                            g$r$22772$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$22773$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22774$1MHp3Q)
                                                                                  (if (if g$ls/false$22774$1MHp3Q
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$22775$1MHp3Q)
                                                                                               (g$id?$19765$1MHp3Q
                                                                                                 g$id$22775$1MHp3Q)))
                                                                                            g$ls/false$22774$1MHp3Q))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$22776$1MHp3Q)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$19785$1MHp3Q
                                                                                                g$id$22776$1MHp3Q
                                                                                                g$r$22772$1MHp3Q)))
                                                                                           (case-lambda
                                                                                             ((g$type$22780$1MHp3Q
                                                                                                g$value$22781$1MHp3Q
                                                                                                g$kwd$22782$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$22783$1MHp3Q
                                                                                                    g$value$22784$1MHp3Q
                                                                                                    g$type$22785$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$22786$1MHp3Q)
                                                                                                      (if (eqv?
                                                                                                            g$t$22786$1MHp3Q
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$22787$1MHp3Q)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$20307$1MHp3Q
                                                                                                                g$iface$22787$1MHp3Q
                                                                                                                g$id$22776$1MHp3Q)
                                                                                                              (g$module-interface-exp-lab-vec$20303$1MHp3Q
                                                                                                                g$iface$22787$1MHp3Q))))
                                                                                                         g$value$22784$1MHp3Q)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$20382$1MHp3Q
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$22771$1MHp3Q)))))
                                                                                                   g$type$22785$1MHp3Q)))
                                                                                               g$kwd$22782$1MHp3Q
                                                                                               g$value$22781$1MHp3Q
                                                                                               g$type$22780$1MHp3Q))))))
                                                                                      g$ls/false$22774$1MHp3Q)
                                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$22773$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$22773$1MHp3Q
                                                                                 '(_ any)))))
                                                                           g$e$22771$1MHp3Q))))
                                                                     (g$library-import$22748$1MHp3Q
                                                                       (case-lambda
                                                                         ((g$e$22757$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$t$22758$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22759$1MHp3Q)
                                                                                  (if g$ls/false$22759$1MHp3Q
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$22760$1MHp3Q
                                                                                           g$imp*$22761$1MHp3Q)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$20315$1MHp3Q
                                                                                                (g$syntax->datum$20385$1MHp3Q
                                                                                                  g$imp*$22761$1MHp3Q))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$22764$1MHp3Q
                                                                                                g$subst-labels$22765$1MHp3Q)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$22766$1MHp3Q
                                                                                                    g$subst-names$22767$1MHp3Q)
                                                                                                  (values
                                                                                                    (g$vector-map$12734$1MHp3Q
                                                                                                      (case-lambda
                                                                                                        ((g$name$22768$1MHp3Q)
                                                                                                         (g$datum->stx$19748$1MHp3Q
                                                                                                           g$ctxt$22760$1MHp3Q
                                                                                                           g$name$22768$1MHp3Q)))
                                                                                                      g$subst-names$22767$1MHp3Q)
                                                                                                    g$subst-labels$22766$1MHp3Q)))
                                                                                               g$subst-labels$22765$1MHp3Q
                                                                                               g$subst-names$22764$1MHp3Q))))))
                                                                                      g$ls/false$22759$1MHp3Q)
                                                                                    ((case-lambda
                                                                                       ((g$t$22769$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22770$1MHp3Q)
                                                                                            (if g$ls/false$22770$1MHp3Q
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20382$1MHp3Q
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$22757$1MHp3Q)))
                                                                                                g$ls/false$22770$1MHp3Q)
                                                                                              (g$syntax-violation$20382$1MHp3Q
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$22769$1MHp3Q))))
                                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                                           g$t$22769$1MHp3Q
                                                                                           '_))))
                                                                                     g$t$22758$1MHp3Q))))
                                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                                 g$t$22758$1MHp3Q
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$22757$1MHp3Q)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$22746$1MHp3Q
                                                                          g$e$22668$1MHp3Q)
                                                                      (g$module-import$22747$1MHp3Q
                                                                        g$e$22668$1MHp3Q
                                                                        g$r$22658$1MHp3Q)
                                                                      (g$library-import$22748$1MHp3Q
                                                                        g$e$22668$1MHp3Q))))
                                                                 (case-lambda
                                                                   ((g$id*$22751$1MHp3Q
                                                                      g$lab*$22752$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$lab*$22753$1MHp3Q
                                                                          g$id*$22754$1MHp3Q)
                                                                        (g$vector-for-each$12735$1MHp3Q
                                                                          (case-lambda
                                                                            ((g$id$22755$1MHp3Q
                                                                               g$lab$22756$1MHp3Q)
                                                                             (g$extend-rib!$19726$1MHp3Q
                                                                               g$rib$22665$1MHp3Q
                                                                               g$id$22755$1MHp3Q
                                                                               g$lab$22756$1MHp3Q
                                                                               g$sd?$22667$1MHp3Q)))
                                                                          g$id*$22754$1MHp3Q
                                                                          g$lab*$22753$1MHp3Q)))
                                                                     g$lab*$22752$1MHp3Q
                                                                     g$id*$22751$1MHp3Q))))
                                                               (g$chi-body*$20310$1MHp3Q
                                                                 (cdr g$e*$22657$1MHp3Q)
                                                                 g$r$22658$1MHp3Q
                                                                 g$mr$22659$1MHp3Q
                                                                 g$lex*$22660$1MHp3Q
                                                                 g$rhs*$22661$1MHp3Q
                                                                 g$mod**$22662$1MHp3Q
                                                                 g$kwd*$22678$1MHp3Q
                                                                 g$exp*$22664$1MHp3Q
                                                                 g$rib$22665$1MHp3Q
                                                                 g$mix?$22666$1MHp3Q
                                                                 g$sd?$22667$1MHp3Q))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$22666$1MHp3Q
                                                           (g$chi-body*$20310$1MHp3Q
                                                             (cdr g$e*$22657$1MHp3Q)
                                                             g$r$22658$1MHp3Q
                                                             g$mr$22659$1MHp3Q
                                                             (cons
                                                               (g$gen-lexical$19700$1MHp3Q
                                                                 'dummy)
                                                               g$lex*$22660$1MHp3Q)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$22668$1MHp3Q)
                                                               g$rhs*$22661$1MHp3Q)
                                                             g$mod**$22662$1MHp3Q
                                                             g$kwd*$22678$1MHp3Q
                                                             g$exp*$22664$1MHp3Q
                                                             g$rib$22665$1MHp3Q
                                                             '#t
                                                             g$sd?$22667$1MHp3Q)
                                                           (values
                                                             g$e*$22657$1MHp3Q
                                                             g$r$22658$1MHp3Q
                                                             g$mr$22659$1MHp3Q
                                                             g$lex*$22660$1MHp3Q
                                                             g$rhs*$22661$1MHp3Q
                                                             g$mod**$22662$1MHp3Q
                                                             g$kwd*$22678$1MHp3Q
                                                             g$exp*$22664$1MHp3Q))))))))))))))))
                              g$type$22677$1MHp3Q)))
                          (if (g$id?$19765$1MHp3Q g$kwd$22675$1MHp3Q)
                            (cons
                              g$kwd$22675$1MHp3Q
                              g$kwd*$22663$1MHp3Q)
                            g$kwd*$22663$1MHp3Q))))
                      g$kwd$22674$1MHp3Q
                      g$value$22673$1MHp3Q
                      g$type$22672$1MHp3Q))))))
             (car g$e*$22657$1MHp3Q)))))))
   (g$expand-transformer$20311$1MHp3Q
     g$expand-transformer$23905$1MHp3Q
     (case-lambda
       ((g$expr$22798$1MHp3Q g$r$22799$1MHp3Q)
        ((case-lambda
           ((g$rtc$22800$1MHp3Q)
            ((case-lambda
               ((g$expanded-rhs$22801$1MHp3Q)
                (begin
                  (g$for-each$11836$1MHp3Q
                    ((case-lambda
                       ((g$mark-visit$22802$1MHp3Q)
                        (case-lambda
                          ((g$x$22803$1MHp3Q)
                           (begin
                             (g$invoke-library$19471$1MHp3Q
                               g$x$22803$1MHp3Q)
                             (g$mark-visit$22802$1MHp3Q
                               g$x$22803$1MHp3Q))))))
                     (g$vis-collector$20319$1MHp3Q))
                    (g$rtc$22800$1MHp3Q))
                  g$expanded-rhs$22801$1MHp3Q)))
             ((case-lambda
                ((g$inv-collector$22808$1MHp3Q
                   g$vis-collector$22809$1MHp3Q
                   g$inv-collector$22810$1MHp3Q
                   g$vis-collector$22811$1MHp3Q)
                 ((case-lambda
                    ((g$swap$22812$1MHp3Q)
                     (dynamic-wind
                       g$swap$22812$1MHp3Q
                       (case-lambda
                         (()
                          (g$chi-expr$20281$1MHp3Q
                            g$expr$22798$1MHp3Q
                            g$r$22799$1MHp3Q
                            g$r$22799$1MHp3Q)))
                       g$swap$22812$1MHp3Q)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$22813$1MHp3Q)
                           (begin
                             (g$inv-collector$22808$1MHp3Q
                               g$inv-collector$22810$1MHp3Q)
                             (set! g$inv-collector$22810$1MHp3Q
                               g$t$22813$1MHp3Q))))
                        (g$inv-collector$22808$1MHp3Q))
                       ((case-lambda
                          ((g$t$22814$1MHp3Q)
                           (begin
                             (g$vis-collector$22809$1MHp3Q
                               g$vis-collector$22811$1MHp3Q)
                             (set! g$vis-collector$22811$1MHp3Q
                               g$t$22814$1MHp3Q))))
                        (g$vis-collector$22809$1MHp3Q))))))))
              g$inv-collector$20318$1MHp3Q
              g$vis-collector$20319$1MHp3Q
              g$rtc$22800$1MHp3Q
              (case-lambda ((g$x$22815$1MHp3Q) (values)))))))
         (g$make-collector$20317$1MHp3Q)))))
   (g$parse-exports$20312$1MHp3Q
     g$parse-exports$23906$1MHp3Q
     (case-lambda
       ((g$exp*$22816$1MHp3Q)
        ((letrec ((g$f$22817$1MHp3Q
                    (case-lambda
                      ((g$exp*$22818$1MHp3Q
                         g$int*$22819$1MHp3Q
                         g$ext*$22820$1MHp3Q)
                       (if (null? g$exp*$22818$1MHp3Q)
                         (begin
                           (if (not (g$valid-bound-ids?$19770$1MHp3Q
                                      g$ext*$22820$1MHp3Q))
                             (g$syntax-violation$20382$1MHp3Q
                               'export
                               '"invalid exports"
                               (g$find-dups$20291$1MHp3Q
                                 g$ext*$22820$1MHp3Q))
                             (void))
                           (values
                             (g$map$11835$1MHp3Q
                               g$syntax->datum$20385$1MHp3Q
                               g$ext*$22820$1MHp3Q)
                             g$int*$22819$1MHp3Q))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$22821$1MHp3Q)
                               ((case-lambda
                                  ((g$ls/false$22822$1MHp3Q)
                                   (if g$ls/false$22822$1MHp3Q
                                     (apply
                                       (case-lambda
                                         ((g$rename$22823$1MHp3Q
                                            g$i*$22824$1MHp3Q
                                            g$e*$22825$1MHp3Q)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                g$rename$22823$1MHp3Q)
                                                              'rename)
                                                       (if (g$for-all$11833$1MHp3Q
                                                             g$id?$19765$1MHp3Q
                                                             g$i*$22824$1MHp3Q)
                                                         (begin
                                                           '#f
                                                           (g$for-all$11833$1MHp3Q
                                                             g$id?$19765$1MHp3Q
                                                             g$e*$22825$1MHp3Q))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$20382$1MHp3Q
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$22818$1MHp3Q))
                                              (void))
                                            (g$f$22817$1MHp3Q
                                              (cdr g$exp*$22818$1MHp3Q)
                                              (append
                                                g$i*$22824$1MHp3Q
                                                g$int*$22819$1MHp3Q)
                                              (append
                                                g$e*$22825$1MHp3Q
                                                g$ext*$22820$1MHp3Q)))))
                                       g$ls/false$22822$1MHp3Q)
                                     ((case-lambda
                                        ((g$t$22826$1MHp3Q)
                                         ((case-lambda
                                            ((g$ls/false$22827$1MHp3Q)
                                             (if g$ls/false$22827$1MHp3Q
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$22828$1MHp3Q)
                                                    (begin
                                                      (if (not (g$id?$19765$1MHp3Q
                                                                 g$ie$22828$1MHp3Q))
                                                        (g$syntax-violation$20382$1MHp3Q
                                                          'export
                                                          '"invalid export"
                                                          g$ie$22828$1MHp3Q)
                                                        (void))
                                                      (g$f$22817$1MHp3Q
                                                        (cdr g$exp*$22818$1MHp3Q)
                                                        (cons
                                                          g$ie$22828$1MHp3Q
                                                          g$int*$22819$1MHp3Q)
                                                        (cons
                                                          g$ie$22828$1MHp3Q
                                                          g$ext*$22820$1MHp3Q)))))
                                                 g$ls/false$22827$1MHp3Q)
                                               (g$syntax-violation$20382$1MHp3Q
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$22826$1MHp3Q))))
                                          (g$syntax-dispatch$20263$1MHp3Q
                                            g$t$22826$1MHp3Q
                                            'any))))
                                      g$t$22821$1MHp3Q))))
                                (g$syntax-dispatch$20263$1MHp3Q
                                  g$t$22821$1MHp3Q
                                  '(any . #(each (any any)))))))
                            (car g$exp*$22818$1MHp3Q))))))))
           g$f$22817$1MHp3Q)
         g$exp*$22816$1MHp3Q
         '()
         '()))))
   (g$parse-library-name$20313$1MHp3Q
     g$parse-library-name$23907$1MHp3Q
     (case-lambda
       ((g$spec$22829$1MHp3Q)
        (letrec* ((g$parse$22830$1MHp3Q
                    (case-lambda
                      ((g$x$22837$1MHp3Q)
                       ((case-lambda
                          ((g$t$22838$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$22839$1MHp3Q)
                               (if (if g$ls/false$22839$1MHp3Q
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$22840$1MHp3Q)
                                            (g$for-all$11833$1MHp3Q
                                              (case-lambda
                                                ((g$x$22841$1MHp3Q)
                                                 ((case-lambda
                                                    ((g$x$22842$1MHp3Q)
                                                     (if (g$integer?$13372$1MHp3Q
                                                           g$x$22842$1MHp3Q)
                                                       (begin
                                                         '#f
                                                         (g$exact?$13367$1MHp3Q
                                                           g$x$22842$1MHp3Q))
                                                       '#f)))
                                                  (g$syntax->datum$20385$1MHp3Q
                                                    g$x$22841$1MHp3Q))))
                                              g$v*$22840$1MHp3Q)))
                                         g$ls/false$22839$1MHp3Q))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$22843$1MHp3Q)
                                      (values
                                        '()
                                        (g$map$11835$1MHp3Q
                                          g$syntax->datum$20385$1MHp3Q
                                          g$v*$22843$1MHp3Q))))
                                   g$ls/false$22839$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$22844$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$22845$1MHp3Q)
                                         (if (if g$ls/false$22845$1MHp3Q
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$22846$1MHp3Q
                                                        g$rest$22847$1MHp3Q)
                                                      (g$symbol?$12667$1MHp3Q
                                                        (g$syntax->datum$20385$1MHp3Q
                                                          g$x$22846$1MHp3Q))))
                                                   g$ls/false$22845$1MHp3Q))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$22848$1MHp3Q
                                                  g$rest$22849$1MHp3Q)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$22830$1MHp3Q
                                                       g$rest$22849$1MHp3Q)))
                                                  (case-lambda
                                                    ((g$x*$22852$1MHp3Q
                                                       g$v*$22853$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$v*$22854$1MHp3Q
                                                           g$x*$22855$1MHp3Q)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$20385$1MHp3Q
                                                               g$x$22848$1MHp3Q)
                                                             g$x*$22855$1MHp3Q)
                                                           g$v*$22854$1MHp3Q)))
                                                      g$v*$22853$1MHp3Q
                                                      g$x*$22852$1MHp3Q))))))
                                             g$ls/false$22845$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$22856$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$22857$1MHp3Q)
                                                   (if g$ls/false$22857$1MHp3Q
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$22857$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$t$22858$1MHp3Q)
                                                         ((case-lambda
                                                            ((g$ls/false$22859$1MHp3Q)
                                                             (if g$ls/false$22859$1MHp3Q
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$20382$1MHp3Q
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$22829$1MHp3Q)))
                                                                 g$ls/false$22859$1MHp3Q)
                                                               (g$syntax-violation$20382$1MHp3Q
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$22858$1MHp3Q))))
                                                          (g$syntax-dispatch$20263$1MHp3Q
                                                            g$t$22858$1MHp3Q
                                                            '_))))
                                                      g$t$22856$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$22856$1MHp3Q
                                                  '()))))
                                            g$t$22844$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$22844$1MHp3Q
                                        '(any . any)))))
                                  g$t$22838$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$22838$1MHp3Q
                              '(each-any)))))
                        g$x$22837$1MHp3Q)))))
          (call-with-values
            (case-lambda
              (() (g$parse$22830$1MHp3Q g$spec$22829$1MHp3Q)))
            (case-lambda
              ((g$name*$22833$1MHp3Q g$ver*$22834$1MHp3Q)
               ((case-lambda
                  ((g$ver*$22835$1MHp3Q g$name*$22836$1MHp3Q)
                   (begin
                     (if (null? g$name*$22836$1MHp3Q)
                       (g$syntax-violation$20382$1MHp3Q
                         '#f
                         '"empty library name"
                         g$spec$22829$1MHp3Q)
                       (void))
                     (values
                       g$name*$22836$1MHp3Q
                       g$ver*$22835$1MHp3Q))))
                g$ver*$22834$1MHp3Q
                g$name*$22833$1MHp3Q))))))))
   (g$parse-library$20314$1MHp3Q
     g$parse-library$23908$1MHp3Q
     (case-lambda
       ((g$e$22860$1MHp3Q)
        ((case-lambda
           ((g$t$22861$1MHp3Q)
            ((case-lambda
               ((g$ls/false$22862$1MHp3Q)
                (if (if g$ls/false$22862$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$22863$1MHp3Q
                               g$name*$22864$1MHp3Q
                               g$export$22865$1MHp3Q
                               g$exp*$22866$1MHp3Q
                               g$import$22867$1MHp3Q
                               g$imp*$22868$1MHp3Q
                               g$b*$22869$1MHp3Q)
                             (if (eq? (g$syntax->datum$20385$1MHp3Q
                                        g$export$22865$1MHp3Q)
                                      'export)
                               (if (eq? (g$syntax->datum$20385$1MHp3Q
                                          g$import$22867$1MHp3Q)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$20385$1MHp3Q
                                          g$library$22863$1MHp3Q)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$22862$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$22870$1MHp3Q
                         g$name*$22871$1MHp3Q
                         g$export$22872$1MHp3Q
                         g$exp*$22873$1MHp3Q
                         g$import$22874$1MHp3Q
                         g$imp*$22875$1MHp3Q
                         g$b*$22876$1MHp3Q)
                       (values
                         g$name*$22871$1MHp3Q
                         g$exp*$22873$1MHp3Q
                         g$imp*$22875$1MHp3Q
                         g$b*$22876$1MHp3Q)))
                    g$ls/false$22862$1MHp3Q)
                  ((case-lambda
                     ((g$t$22877$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$22878$1MHp3Q)
                          (if g$ls/false$22878$1MHp3Q
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20382$1MHp3Q
                                   '#f
                                   '"malformed library"
                                   g$e$22860$1MHp3Q)))
                              g$ls/false$22878$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$22877$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$22877$1MHp3Q
                         '_))))
                   g$t$22861$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$22861$1MHp3Q
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$22860$1MHp3Q))))
   (g$parse-import-spec*$20315$1MHp3Q
     g$parse-import-spec*$23909$1MHp3Q
     (case-lambda
       ((g$imp*$22879$1MHp3Q)
        (letrec* ((g$idsyn?$22880$1MHp3Q
                    (case-lambda
                      ((g$x$23140$1MHp3Q)
                       (g$symbol?$12667$1MHp3Q
                         (g$syntax->datum$20385$1MHp3Q
                           g$x$23140$1MHp3Q)))))
                  (g$dup-error$22881$1MHp3Q
                    (case-lambda
                      ((g$name$23139$1MHp3Q)
                       (g$syntax-violation$20382$1MHp3Q
                         'import
                         '"two imports with different bindings"
                         g$name$23139$1MHp3Q))))
                  (g$merge-substs$22882$1MHp3Q
                    (case-lambda
                      ((g$s$23130$1MHp3Q g$subst$23131$1MHp3Q)
                       (letrec* ((g$insert-to-subst$23132$1MHp3Q
                                   (case-lambda
                                     ((g$a$23133$1MHp3Q
                                        g$subst$23134$1MHp3Q)
                                      ((case-lambda
                                         ((g$name$23135$1MHp3Q
                                            g$label$23136$1MHp3Q)
                                          ((case-lambda
                                             ((g$t$23137$1MHp3Q)
                                              (if g$t$23137$1MHp3Q
                                                ((case-lambda
                                                   ((g$x$23138$1MHp3Q)
                                                    (if (eq? (cdr g$x$23138$1MHp3Q)
                                                             g$label$23136$1MHp3Q)
                                                      g$subst$23134$1MHp3Q
                                                      (begin
                                                        '#f
                                                        (g$dup-error$22881$1MHp3Q
                                                          g$name$23135$1MHp3Q)))))
                                                 g$t$23137$1MHp3Q)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$23133$1MHp3Q
                                                    g$subst$23134$1MHp3Q)))))
                                           (g$assq$11823$1MHp3Q
                                             g$name$23135$1MHp3Q
                                             g$subst$23134$1MHp3Q))))
                                       (car g$a$23133$1MHp3Q)
                                       (cdr g$a$23133$1MHp3Q))))))
                         (if (null? g$s$23130$1MHp3Q)
                           g$subst$23131$1MHp3Q
                           (begin
                             '#f
                             (g$insert-to-subst$23132$1MHp3Q
                               (car g$s$23130$1MHp3Q)
                               (g$merge-substs$22882$1MHp3Q
                                 (cdr g$s$23130$1MHp3Q)
                                 g$subst$23131$1MHp3Q))))))))
                  (g$exclude*$22883$1MHp3Q
                    (case-lambda
                      ((g$sym*$23106$1MHp3Q g$subst$23107$1MHp3Q)
                       (letrec* ((g$exclude$23108$1MHp3Q
                                   (case-lambda
                                     ((g$sym$23121$1MHp3Q
                                        g$subst$23122$1MHp3Q)
                                      (if (null? g$subst$23122$1MHp3Q)
                                        (g$syntax-violation$20382$1MHp3Q
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$23121$1MHp3Q)
                                        (if (eq? g$sym$23121$1MHp3Q
                                                 (g$caar$12685$1MHp3Q
                                                   g$subst$23122$1MHp3Q))
                                          (values
                                            (g$cdar$12687$1MHp3Q
                                              g$subst$23122$1MHp3Q)
                                            (cdr g$subst$23122$1MHp3Q))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$23123$1MHp3Q)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$23108$1MHp3Q
                                                       g$sym$23121$1MHp3Q
                                                       (cdr g$subst$23122$1MHp3Q))))
                                                  (case-lambda
                                                    ((g$old$23126$1MHp3Q
                                                       g$subst$23127$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$subst$23128$1MHp3Q
                                                           g$old$23129$1MHp3Q)
                                                         (values
                                                           g$old$23129$1MHp3Q
                                                           (cons
                                                             g$a$23123$1MHp3Q
                                                             g$subst$23128$1MHp3Q))))
                                                      g$subst$23127$1MHp3Q
                                                      g$old$23126$1MHp3Q))))))
                                             (car g$subst$23122$1MHp3Q)))))))))
                         (if (null? g$sym*$23106$1MHp3Q)
                           (values '() g$subst$23107$1MHp3Q)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$23108$1MHp3Q
                                    (car g$sym*$23106$1MHp3Q)
                                    g$subst$23107$1MHp3Q)))
                               (case-lambda
                                 ((g$old$23111$1MHp3Q
                                    g$subst$23112$1MHp3Q)
                                  ((case-lambda
                                     ((g$subst$23113$1MHp3Q
                                        g$old$23114$1MHp3Q)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$22883$1MHp3Q
                                             (cdr g$sym*$23106$1MHp3Q)
                                             g$subst$23113$1MHp3Q)))
                                        (case-lambda
                                          ((g$old*$23117$1MHp3Q
                                             g$subst$23118$1MHp3Q)
                                           ((case-lambda
                                              ((g$subst$23119$1MHp3Q
                                                 g$old*$23120$1MHp3Q)
                                               (values
                                                 (cons
                                                   g$old$23114$1MHp3Q
                                                   g$old*$23120$1MHp3Q)
                                                 g$subst$23119$1MHp3Q)))
                                            g$subst$23118$1MHp3Q
                                            g$old*$23117$1MHp3Q))))))
                                   g$subst$23112$1MHp3Q
                                   g$old$23111$1MHp3Q))))))))))
                  (g$find*$22884$1MHp3Q
                    (case-lambda
                      ((g$sym*$23102$1MHp3Q g$subst$23103$1MHp3Q)
                       (g$map$11835$1MHp3Q
                         (case-lambda
                           ((g$x$23104$1MHp3Q)
                            ((case-lambda
                               ((g$t$23105$1MHp3Q)
                                (if g$t$23105$1MHp3Q
                                  (cdr g$t$23105$1MHp3Q)
                                  (begin
                                    '#f
                                    (g$syntax-violation$20382$1MHp3Q
                                      'import
                                      '"cannot find identifier"
                                      g$x$23104$1MHp3Q)))))
                             (g$assq$11823$1MHp3Q
                               g$x$23104$1MHp3Q
                               g$subst$23103$1MHp3Q))))
                         g$sym*$23102$1MHp3Q))))
                  (g$rem*$22885$1MHp3Q
                    (case-lambda
                      ((g$sym*$23098$1MHp3Q g$subst$23099$1MHp3Q)
                       ((letrec ((g$f$23100$1MHp3Q
                                   (case-lambda
                                     ((g$subst$23101$1MHp3Q)
                                      (if (null? g$subst$23101$1MHp3Q)
                                        '()
                                        (if (g$memq$11827$1MHp3Q
                                              (g$caar$12685$1MHp3Q
                                                g$subst$23101$1MHp3Q)
                                              g$sym*$23098$1MHp3Q)
                                          (g$f$23100$1MHp3Q
                                            (cdr g$subst$23101$1MHp3Q))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$23101$1MHp3Q)
                                              (g$f$23100$1MHp3Q
                                                (cdr g$subst$23101$1MHp3Q))))))))))
                          g$f$23100$1MHp3Q)
                        g$subst$23099$1MHp3Q))))
                  (g$remove-dups$22886$1MHp3Q
                    (case-lambda
                      ((g$ls$23097$1MHp3Q)
                       (if (null? g$ls$23097$1MHp3Q)
                         '()
                         (if (g$memq$11827$1MHp3Q
                               (car g$ls$23097$1MHp3Q)
                               (cdr g$ls$23097$1MHp3Q))
                           (g$remove-dups$22886$1MHp3Q
                             (cdr g$ls$23097$1MHp3Q))
                           (begin
                             '#f
                             (cons
                               (car g$ls$23097$1MHp3Q)
                               (g$remove-dups$22886$1MHp3Q
                                 (cdr g$ls$23097$1MHp3Q)))))))))
                  (g$parse-library-name$22887$1MHp3Q
                    (case-lambda
                      ((g$spec$22981$1MHp3Q)
                       (letrec* ((g$subversion?$22982$1MHp3Q
                                   (case-lambda
                                     ((g$x$23095$1MHp3Q)
                                      ((case-lambda
                                         ((g$x$23096$1MHp3Q)
                                          (if (g$integer?$13372$1MHp3Q
                                                g$x$23096$1MHp3Q)
                                            (if (g$exact?$13367$1MHp3Q
                                                  g$x$23096$1MHp3Q)
                                              (begin
                                                '#f
                                                (g$>=$13385$1MHp3Q
                                                  g$x$23096$1MHp3Q
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$20385$1MHp3Q
                                         g$x$23095$1MHp3Q)))))
                                 (g$subversion-pred$22983$1MHp3Q
                                   (case-lambda
                                     ((g$x*$23047$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$23048$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$23049$1MHp3Q)
                                              (if (if g$ls/false$23049$1MHp3Q
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$23050$1MHp3Q)
                                                           (g$subversion?$22982$1MHp3Q
                                                             g$n$23050$1MHp3Q)))
                                                        g$ls/false$23049$1MHp3Q))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$23051$1MHp3Q)
                                                     (case-lambda
                                                       ((g$x$23052$1MHp3Q)
                                                        (g$=$13381$1MHp3Q
                                                          g$x$23052$1MHp3Q
                                                          (g$syntax->datum$20385$1MHp3Q
                                                            g$n$23051$1MHp3Q))))))
                                                  g$ls/false$23049$1MHp3Q)
                                                ((case-lambda
                                                   ((g$t$23053$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$23054$1MHp3Q)
                                                        (if (if g$ls/false$23054$1MHp3Q
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$23055$1MHp3Q
                                                                       g$sub*$23056$1MHp3Q)
                                                                     (eq? (g$syntax->datum$20385$1MHp3Q
                                                                            g$p?$23055$1MHp3Q)
                                                                          'and)))
                                                                  g$ls/false$23054$1MHp3Q))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$23057$1MHp3Q
                                                                 g$sub*$23058$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$p*$23059$1MHp3Q)
                                                                   (case-lambda
                                                                     ((g$x$23060$1MHp3Q)
                                                                      (g$for-all$11833$1MHp3Q
                                                                        (case-lambda
                                                                          ((g$p$23061$1MHp3Q)
                                                                           (g$p$23061$1MHp3Q
                                                                             g$x$23060$1MHp3Q)))
                                                                        g$p*$23059$1MHp3Q)))))
                                                                (g$map$11835$1MHp3Q
                                                                  g$subversion-pred$22983$1MHp3Q
                                                                  g$sub*$23058$1MHp3Q))))
                                                            g$ls/false$23054$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$23062$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$23063$1MHp3Q)
                                                                  (if (if g$ls/false$23063$1MHp3Q
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$23064$1MHp3Q
                                                                                 g$sub*$23065$1MHp3Q)
                                                                               (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                      g$p?$23064$1MHp3Q)
                                                                                    'or)))
                                                                            g$ls/false$23063$1MHp3Q))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$23066$1MHp3Q
                                                                           g$sub*$23067$1MHp3Q)
                                                                         ((case-lambda
                                                                            ((g$p*$23068$1MHp3Q)
                                                                             (case-lambda
                                                                               ((g$x$23069$1MHp3Q)
                                                                                (g$exists$11834$1MHp3Q
                                                                                  (case-lambda
                                                                                    ((g$p$23070$1MHp3Q)
                                                                                     (g$p$23070$1MHp3Q
                                                                                       g$x$23069$1MHp3Q)))
                                                                                  g$p*$23068$1MHp3Q)))))
                                                                          (g$map$11835$1MHp3Q
                                                                            g$subversion-pred$22983$1MHp3Q
                                                                            g$sub*$23067$1MHp3Q))))
                                                                      g$ls/false$23063$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$t$23071$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23072$1MHp3Q)
                                                                            (if (if g$ls/false$23072$1MHp3Q
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$23073$1MHp3Q
                                                                                           g$sub$23074$1MHp3Q)
                                                                                         (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                g$p?$23073$1MHp3Q)
                                                                                              'not)))
                                                                                      g$ls/false$23072$1MHp3Q))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$23075$1MHp3Q
                                                                                     g$sub$23076$1MHp3Q)
                                                                                   ((case-lambda
                                                                                      ((g$p$23077$1MHp3Q)
                                                                                       (case-lambda
                                                                                         ((g$x$23078$1MHp3Q)
                                                                                          (not (g$p$23077$1MHp3Q
                                                                                                 g$x$23078$1MHp3Q))))))
                                                                                    (g$subversion-pred$22983$1MHp3Q
                                                                                      g$sub$23076$1MHp3Q))))
                                                                                g$ls/false$23072$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$t$23079$1MHp3Q)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23080$1MHp3Q)
                                                                                      (if (if g$ls/false$23080$1MHp3Q
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$23081$1MHp3Q
                                                                                                     g$n$23082$1MHp3Q)
                                                                                                   (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                              g$p?$23081$1MHp3Q)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$22982$1MHp3Q
                                                                                                         g$n$23082$1MHp3Q))
                                                                                                     '#f)))
                                                                                                g$ls/false$23080$1MHp3Q))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$23083$1MHp3Q
                                                                                               g$n$23084$1MHp3Q)
                                                                                             (case-lambda
                                                                                               ((g$x$23085$1MHp3Q)
                                                                                                (g$<=$13383$1MHp3Q
                                                                                                  g$x$23085$1MHp3Q
                                                                                                  (g$syntax->datum$20385$1MHp3Q
                                                                                                    g$n$23084$1MHp3Q))))))
                                                                                          g$ls/false$23080$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$t$23086$1MHp3Q)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23087$1MHp3Q)
                                                                                                (if (if g$ls/false$23087$1MHp3Q
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$23088$1MHp3Q
                                                                                                               g$n$23089$1MHp3Q)
                                                                                                             (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                                        g$p?$23088$1MHp3Q)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$22982$1MHp3Q
                                                                                                                   g$n$23089$1MHp3Q))
                                                                                                               '#f)))
                                                                                                          g$ls/false$23087$1MHp3Q))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$23090$1MHp3Q
                                                                                                         g$n$23091$1MHp3Q)
                                                                                                       (case-lambda
                                                                                                         ((g$x$23092$1MHp3Q)
                                                                                                          (g$>=$13385$1MHp3Q
                                                                                                            g$x$23092$1MHp3Q
                                                                                                            (g$syntax->datum$20385$1MHp3Q
                                                                                                              g$n$23091$1MHp3Q))))))
                                                                                                    g$ls/false$23087$1MHp3Q)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23093$1MHp3Q)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$23094$1MHp3Q)
                                                                                                          (if g$ls/false$23094$1MHp3Q
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$20382$1MHp3Q
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$22981$1MHp3Q
                                                                                                                   g$x*$23047$1MHp3Q)))
                                                                                                              g$ls/false$23094$1MHp3Q)
                                                                                                            (g$syntax-violation$20382$1MHp3Q
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$23093$1MHp3Q))))
                                                                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                                                                         g$t$23093$1MHp3Q
                                                                                                         '_))))
                                                                                                   g$t$23086$1MHp3Q))))
                                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                                               g$t$23086$1MHp3Q
                                                                                               '(any any)))))
                                                                                         g$t$23079$1MHp3Q))))
                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                     g$t$23079$1MHp3Q
                                                                                     '(any any)))))
                                                                               g$t$23071$1MHp3Q))))
                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                           g$t$23071$1MHp3Q
                                                                           '(any any)))))
                                                                     g$t$23062$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$23062$1MHp3Q
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23053$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$23053$1MHp3Q
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23048$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$23048$1MHp3Q
                                             'any))))
                                       g$x*$23047$1MHp3Q))))
                                 (g$version-pred$22984$1MHp3Q
                                   (case-lambda
                                     ((g$x*$23007$1MHp3Q)
                                      ((case-lambda
                                         ((g$t$23008$1MHp3Q)
                                          ((case-lambda
                                             ((g$ls/false$23009$1MHp3Q)
                                              (if g$ls/false$23009$1MHp3Q
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$23010$1MHp3Q)
                                                        '#t))))
                                                  g$ls/false$23009$1MHp3Q)
                                                ((case-lambda
                                                   ((g$t$23011$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$ls/false$23012$1MHp3Q)
                                                        (if (if g$ls/false$23012$1MHp3Q
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$23013$1MHp3Q
                                                                       g$ver*$23014$1MHp3Q)
                                                                     (eq? (g$syntax->datum$20385$1MHp3Q
                                                                            g$c$23013$1MHp3Q)
                                                                          'and)))
                                                                  g$ls/false$23012$1MHp3Q))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$23015$1MHp3Q
                                                                 g$ver*$23016$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$p*$23017$1MHp3Q)
                                                                   (case-lambda
                                                                     ((g$x$23018$1MHp3Q)
                                                                      (g$for-all$11833$1MHp3Q
                                                                        (case-lambda
                                                                          ((g$p$23019$1MHp3Q)
                                                                           (g$p$23019$1MHp3Q
                                                                             g$x$23018$1MHp3Q)))
                                                                        g$p*$23017$1MHp3Q)))))
                                                                (g$map$11835$1MHp3Q
                                                                  g$version-pred$22984$1MHp3Q
                                                                  g$ver*$23016$1MHp3Q))))
                                                            g$ls/false$23012$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$t$23020$1MHp3Q)
                                                              ((case-lambda
                                                                 ((g$ls/false$23021$1MHp3Q)
                                                                  (if (if g$ls/false$23021$1MHp3Q
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$23022$1MHp3Q
                                                                                 g$ver*$23023$1MHp3Q)
                                                                               (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                      g$c$23022$1MHp3Q)
                                                                                    'or)))
                                                                            g$ls/false$23021$1MHp3Q))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$23024$1MHp3Q
                                                                           g$ver*$23025$1MHp3Q)
                                                                         ((case-lambda
                                                                            ((g$p*$23026$1MHp3Q)
                                                                             (case-lambda
                                                                               ((g$x$23027$1MHp3Q)
                                                                                (g$exists$11834$1MHp3Q
                                                                                  (case-lambda
                                                                                    ((g$p$23028$1MHp3Q)
                                                                                     (g$p$23028$1MHp3Q
                                                                                       g$x$23027$1MHp3Q)))
                                                                                  g$p*$23026$1MHp3Q)))))
                                                                          (g$map$11835$1MHp3Q
                                                                            g$version-pred$22984$1MHp3Q
                                                                            g$ver*$23025$1MHp3Q))))
                                                                      g$ls/false$23021$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$t$23029$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23030$1MHp3Q)
                                                                            (if (if g$ls/false$23030$1MHp3Q
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$23031$1MHp3Q
                                                                                           g$ver$23032$1MHp3Q)
                                                                                         (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                g$c$23031$1MHp3Q)
                                                                                              'not)))
                                                                                      g$ls/false$23030$1MHp3Q))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$23033$1MHp3Q
                                                                                     g$ver$23034$1MHp3Q)
                                                                                   ((case-lambda
                                                                                      ((g$p$23035$1MHp3Q)
                                                                                       (case-lambda
                                                                                         ((g$x$23036$1MHp3Q)
                                                                                          (not (g$p$23035$1MHp3Q
                                                                                                 g$x$23036$1MHp3Q))))))
                                                                                    (g$version-pred$22984$1MHp3Q
                                                                                      g$ver$23034$1MHp3Q))))
                                                                                g$ls/false$23030$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$t$23037$1MHp3Q)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23038$1MHp3Q)
                                                                                      (if g$ls/false$23038$1MHp3Q
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$23039$1MHp3Q)
                                                                                             ((case-lambda
                                                                                                ((g$p*$23040$1MHp3Q)
                                                                                                 (case-lambda
                                                                                                   ((g$x$23041$1MHp3Q)
                                                                                                    ((letrec ((g$f$23042$1MHp3Q
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$23043$1MHp3Q
                                                                                                                     g$x$23044$1MHp3Q)
                                                                                                                   (if (null?
                                                                                                                         g$p*$23043$1MHp3Q)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$23044$1MHp3Q)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$23043$1MHp3Q)
                                                                                                                              (car g$x$23044$1MHp3Q))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$23042$1MHp3Q
                                                                                                                               (cdr g$p*$23043$1MHp3Q)
                                                                                                                               (cdr g$x$23044$1MHp3Q)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$23042$1MHp3Q)
                                                                                                     g$p*$23040$1MHp3Q
                                                                                                     g$x$23041$1MHp3Q)))))
                                                                                              (g$map$11835$1MHp3Q
                                                                                                g$subversion-pred$22983$1MHp3Q
                                                                                                g$sub*$23039$1MHp3Q))))
                                                                                          g$ls/false$23038$1MHp3Q)
                                                                                        ((case-lambda
                                                                                           ((g$t$23045$1MHp3Q)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23046$1MHp3Q)
                                                                                                (if g$ls/false$23046$1MHp3Q
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$20382$1MHp3Q
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$22981$1MHp3Q
                                                                                                         g$x*$23007$1MHp3Q)))
                                                                                                    g$ls/false$23046$1MHp3Q)
                                                                                                  (g$syntax-violation$20382$1MHp3Q
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$23045$1MHp3Q))))
                                                                                             (g$syntax-dispatch$20263$1MHp3Q
                                                                                               g$t$23045$1MHp3Q
                                                                                               '_))))
                                                                                         g$t$23037$1MHp3Q))))
                                                                                   (g$syntax-dispatch$20263$1MHp3Q
                                                                                     g$t$23037$1MHp3Q
                                                                                     'each-any))))
                                                                               g$t$23029$1MHp3Q))))
                                                                         (g$syntax-dispatch$20263$1MHp3Q
                                                                           g$t$23029$1MHp3Q
                                                                           '(any any)))))
                                                                     g$t$23020$1MHp3Q))))
                                                               (g$syntax-dispatch$20263$1MHp3Q
                                                                 g$t$23020$1MHp3Q
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23011$1MHp3Q))))
                                                     (g$syntax-dispatch$20263$1MHp3Q
                                                       g$t$23011$1MHp3Q
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23008$1MHp3Q))))
                                           (g$syntax-dispatch$20263$1MHp3Q
                                             g$t$23008$1MHp3Q
                                             '()))))
                                       g$x*$23007$1MHp3Q)))))
                         ((letrec ((g$f$22985$1MHp3Q
                                     (case-lambda
                                       ((g$x$22986$1MHp3Q)
                                        ((case-lambda
                                           ((g$t$22987$1MHp3Q)
                                            ((case-lambda
                                               ((g$ls/false$22988$1MHp3Q)
                                                (if g$ls/false$22988$1MHp3Q
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$22989$1MHp3Q)
                                                       (values
                                                         '()
                                                         (g$version-pred$22984$1MHp3Q
                                                           g$version-spec*$22989$1MHp3Q))))
                                                    g$ls/false$22988$1MHp3Q)
                                                  ((case-lambda
                                                     ((g$t$22990$1MHp3Q)
                                                      ((case-lambda
                                                         ((g$ls/false$22991$1MHp3Q)
                                                          (if (if g$ls/false$22991$1MHp3Q
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$22992$1MHp3Q
                                                                         g$x*$22993$1MHp3Q)
                                                                       (g$idsyn?$22880$1MHp3Q
                                                                         g$x$22992$1MHp3Q)))
                                                                    g$ls/false$22991$1MHp3Q))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$22994$1MHp3Q
                                                                   g$x*$22995$1MHp3Q)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$22985$1MHp3Q
                                                                        g$x*$22995$1MHp3Q)))
                                                                   (case-lambda
                                                                     ((g$name$22998$1MHp3Q
                                                                        g$pred$22999$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$pred$23000$1MHp3Q
                                                                            g$name$23001$1MHp3Q)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$20385$1MHp3Q
                                                                                g$x$22994$1MHp3Q)
                                                                              g$name$23001$1MHp3Q)
                                                                            g$pred$23000$1MHp3Q)))
                                                                       g$pred$22999$1MHp3Q
                                                                       g$name$22998$1MHp3Q))))))
                                                              g$ls/false$22991$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$t$23002$1MHp3Q)
                                                                ((case-lambda
                                                                   ((g$ls/false$23003$1MHp3Q)
                                                                    (if g$ls/false$23003$1MHp3Q
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$23004$1MHp3Q)
                                                                                '#t)))))
                                                                        g$ls/false$23003$1MHp3Q)
                                                                      ((case-lambda
                                                                         ((g$t$23005$1MHp3Q)
                                                                          ((case-lambda
                                                                             ((g$ls/false$23006$1MHp3Q)
                                                                              (if g$ls/false$23006$1MHp3Q
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$20382$1MHp3Q
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$22981$1MHp3Q)))
                                                                                  g$ls/false$23006$1MHp3Q)
                                                                                (g$syntax-violation$20382$1MHp3Q
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$23005$1MHp3Q))))
                                                                           (g$syntax-dispatch$20263$1MHp3Q
                                                                             g$t$23005$1MHp3Q
                                                                             '_))))
                                                                       g$t$23002$1MHp3Q))))
                                                                 (g$syntax-dispatch$20263$1MHp3Q
                                                                   g$t$23002$1MHp3Q
                                                                   '()))))
                                                             g$t$22990$1MHp3Q))))
                                                       (g$syntax-dispatch$20263$1MHp3Q
                                                         g$t$22990$1MHp3Q
                                                         '(any .
                                                               any)))))
                                                   g$t$22987$1MHp3Q))))
                                             (g$syntax-dispatch$20263$1MHp3Q
                                               g$t$22987$1MHp3Q
                                               '(each-any)))))
                                         g$x$22986$1MHp3Q)))))
                            g$f$22985$1MHp3Q)
                          g$spec$22981$1MHp3Q)))))
                  (g$import-library$22888$1MHp3Q
                    (case-lambda
                      ((g$spec*$22973$1MHp3Q)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$22887$1MHp3Q
                              g$spec*$22973$1MHp3Q)))
                         (case-lambda
                           ((g$name$22976$1MHp3Q g$pred$22977$1MHp3Q)
                            ((case-lambda
                               ((g$pred$22978$1MHp3Q
                                  g$name$22979$1MHp3Q)
                                (begin
                                  (if (null? g$name$22979$1MHp3Q)
                                    (g$syntax-violation$20382$1MHp3Q
                                      'import
                                      '"empty library name"
                                      g$spec*$22973$1MHp3Q)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$22980$1MHp3Q)
                                      (begin
                                        (if (not g$lib$22980$1MHp3Q)
                                          (g$syntax-violation$20382$1MHp3Q
                                            'import
                                            '"cannot find library with required name"
                                            g$name$22979$1MHp3Q)
                                          (void))
                                        (if (not (g$pred$22978$1MHp3Q
                                                   (g$library-version$19424$1MHp3Q
                                                     g$lib$22980$1MHp3Q)))
                                          (g$syntax-violation$20382$1MHp3Q
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$22973$1MHp3Q
                                            g$lib$22980$1MHp3Q)
                                          (void))
                                        ((g$imp-collector$20320$1MHp3Q)
                                         g$lib$22980$1MHp3Q)
                                        (g$library-subst$19428$1MHp3Q
                                          g$lib$22980$1MHp3Q))))
                                   (g$find-library-by-name$19464$1MHp3Q
                                     g$name$22979$1MHp3Q)))))
                             g$pred$22977$1MHp3Q
                             g$name$22976$1MHp3Q)))))))
                  (g$get-import$22889$1MHp3Q
                    (case-lambda
                      ((g$spec$22902$1MHp3Q)
                       ((case-lambda
                          ((g$t$22903$1MHp3Q)
                           ((case-lambda
                              ((g$ls/false$22904$1MHp3Q)
                               (if (if g$ls/false$22904$1MHp3Q
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$22905$1MHp3Q
                                              g$x*$22906$1MHp3Q)
                                            (not (g$memq$11827$1MHp3Q
                                                   (g$syntax->datum$20385$1MHp3Q
                                                     g$x$22905$1MHp3Q)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$22904$1MHp3Q))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$22907$1MHp3Q
                                        g$x*$22908$1MHp3Q)
                                      (g$import-library$22888$1MHp3Q
                                        (cons
                                          g$x$22907$1MHp3Q
                                          g$x*$22908$1MHp3Q))))
                                   g$ls/false$22904$1MHp3Q)
                                 ((case-lambda
                                    ((g$t$22909$1MHp3Q)
                                     ((case-lambda
                                        ((g$ls/false$22910$1MHp3Q)
                                         (if (if g$ls/false$22910$1MHp3Q
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$22911$1MHp3Q
                                                        g$isp$22912$1MHp3Q
                                                        g$old*$22913$1MHp3Q
                                                        g$new*$22914$1MHp3Q)
                                                      (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                 g$rename$22911$1MHp3Q)
                                                               'rename)
                                                        (if (g$for-all$11833$1MHp3Q
                                                              g$idsyn?$22880$1MHp3Q
                                                              g$old*$22913$1MHp3Q)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11833$1MHp3Q
                                                              g$idsyn?$22880$1MHp3Q
                                                              g$new*$22914$1MHp3Q))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$22910$1MHp3Q))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$22915$1MHp3Q
                                                  g$isp$22916$1MHp3Q
                                                  g$old*$22917$1MHp3Q
                                                  g$new*$22918$1MHp3Q)
                                                ((case-lambda
                                                   ((g$subst$22919$1MHp3Q
                                                      g$old*$22920$1MHp3Q
                                                      g$new*$22921$1MHp3Q)
                                                    ((case-lambda
                                                       ((g$old-label*$22922$1MHp3Q)
                                                        ((case-lambda
                                                           ((g$subst$22923$1MHp3Q)
                                                            (g$merge-substs$22882$1MHp3Q
                                                              (g$map$11835$1MHp3Q
                                                                cons
                                                                g$new*$22921$1MHp3Q
                                                                g$old-label*$22922$1MHp3Q)
                                                              g$subst$22923$1MHp3Q)))
                                                         (g$rem*$22885$1MHp3Q
                                                           g$old*$22920$1MHp3Q
                                                           g$subst$22919$1MHp3Q))))
                                                     (g$find*$22884$1MHp3Q
                                                       g$old*$22920$1MHp3Q
                                                       g$subst$22919$1MHp3Q))))
                                                 (g$get-import$22889$1MHp3Q
                                                   g$isp$22916$1MHp3Q)
                                                 (g$map$11835$1MHp3Q
                                                   g$syntax->datum$20385$1MHp3Q
                                                   g$old*$22917$1MHp3Q)
                                                 (g$map$11835$1MHp3Q
                                                   g$syntax->datum$20385$1MHp3Q
                                                   g$new*$22918$1MHp3Q))))
                                             g$ls/false$22910$1MHp3Q)
                                           ((case-lambda
                                              ((g$t$22924$1MHp3Q)
                                               ((case-lambda
                                                  ((g$ls/false$22925$1MHp3Q)
                                                   (if (if g$ls/false$22925$1MHp3Q
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$22926$1MHp3Q
                                                                  g$isp$22927$1MHp3Q
                                                                  g$sym*$22928$1MHp3Q)
                                                                (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                           g$except$22926$1MHp3Q)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11833$1MHp3Q
                                                                      g$idsyn?$22880$1MHp3Q
                                                                      g$sym*$22928$1MHp3Q))
                                                                  '#f)))
                                                             g$ls/false$22925$1MHp3Q))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$22929$1MHp3Q
                                                            g$isp$22930$1MHp3Q
                                                            g$sym*$22931$1MHp3Q)
                                                          ((case-lambda
                                                             ((g$subst$22932$1MHp3Q)
                                                              (g$rem*$22885$1MHp3Q
                                                                (g$map$11835$1MHp3Q
                                                                  g$syntax->datum$20385$1MHp3Q
                                                                  g$sym*$22931$1MHp3Q)
                                                                g$subst$22932$1MHp3Q)))
                                                           (g$get-import$22889$1MHp3Q
                                                             g$isp$22930$1MHp3Q))))
                                                       g$ls/false$22925$1MHp3Q)
                                                     ((case-lambda
                                                        ((g$t$22933$1MHp3Q)
                                                         ((case-lambda
                                                            ((g$ls/false$22934$1MHp3Q)
                                                             (if (if g$ls/false$22934$1MHp3Q
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$22935$1MHp3Q
                                                                            g$isp$22936$1MHp3Q
                                                                            g$sym*$22937$1MHp3Q)
                                                                          (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                     g$only$22935$1MHp3Q)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11833$1MHp3Q
                                                                                g$idsyn?$22880$1MHp3Q
                                                                                g$sym*$22937$1MHp3Q))
                                                                            '#f)))
                                                                       g$ls/false$22934$1MHp3Q))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$22938$1MHp3Q
                                                                      g$isp$22939$1MHp3Q
                                                                      g$sym*$22940$1MHp3Q)
                                                                    ((case-lambda
                                                                       ((g$subst$22941$1MHp3Q
                                                                          g$sym*$22942$1MHp3Q)
                                                                        ((case-lambda
                                                                           ((g$sym*$22943$1MHp3Q)
                                                                            ((case-lambda
                                                                               ((g$lab*$22944$1MHp3Q)
                                                                                (g$map$11835$1MHp3Q
                                                                                  cons
                                                                                  g$sym*$22943$1MHp3Q
                                                                                  g$lab*$22944$1MHp3Q)))
                                                                             (g$find*$22884$1MHp3Q
                                                                               g$sym*$22943$1MHp3Q
                                                                               g$subst$22941$1MHp3Q))))
                                                                         (g$remove-dups$22886$1MHp3Q
                                                                           g$sym*$22942$1MHp3Q))))
                                                                     (g$get-import$22889$1MHp3Q
                                                                       g$isp$22939$1MHp3Q)
                                                                     (g$map$11835$1MHp3Q
                                                                       g$syntax->datum$20385$1MHp3Q
                                                                       g$sym*$22940$1MHp3Q))))
                                                                 g$ls/false$22934$1MHp3Q)
                                                               ((case-lambda
                                                                  ((g$t$22945$1MHp3Q)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22946$1MHp3Q)
                                                                       (if (if g$ls/false$22946$1MHp3Q
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$22947$1MHp3Q
                                                                                      g$isp$22948$1MHp3Q
                                                                                      g$p$22949$1MHp3Q)
                                                                                    (if (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                               g$prefix$22947$1MHp3Q)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$22880$1MHp3Q
                                                                                          g$p$22949$1MHp3Q))
                                                                                      '#f)))
                                                                                 g$ls/false$22946$1MHp3Q))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$22950$1MHp3Q
                                                                                g$isp$22951$1MHp3Q
                                                                                g$p$22952$1MHp3Q)
                                                                              ((case-lambda
                                                                                 ((g$subst$22953$1MHp3Q
                                                                                    g$prefix$22954$1MHp3Q)
                                                                                  (g$map$11835$1MHp3Q
                                                                                    (case-lambda
                                                                                      ((g$x$22955$1MHp3Q)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$22954$1MHp3Q
                                                                                             (symbol->string
                                                                                               (car g$x$22955$1MHp3Q))))
                                                                                         (cdr g$x$22955$1MHp3Q))))
                                                                                    g$subst$22953$1MHp3Q)))
                                                                               (g$get-import$22889$1MHp3Q
                                                                                 g$isp$22951$1MHp3Q)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$20385$1MHp3Q
                                                                                   g$p$22952$1MHp3Q)))))
                                                                           g$ls/false$22946$1MHp3Q)
                                                                         ((case-lambda
                                                                            ((g$t$22956$1MHp3Q)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22957$1MHp3Q)
                                                                                 (if (if g$ls/false$22957$1MHp3Q
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$22958$1MHp3Q
                                                                                                g$spec*$22959$1MHp3Q)
                                                                                              (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                     g$library$22958$1MHp3Q)
                                                                                                   'library)))
                                                                                           g$ls/false$22957$1MHp3Q))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$22960$1MHp3Q
                                                                                          g$spec*$22961$1MHp3Q)
                                                                                        (g$import-library$22888$1MHp3Q
                                                                                          g$spec*$22961$1MHp3Q)))
                                                                                     g$ls/false$22957$1MHp3Q)
                                                                                   ((case-lambda
                                                                                      ((g$t$22962$1MHp3Q)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22963$1MHp3Q)
                                                                                           (if (if g$ls/false$22963$1MHp3Q
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$22964$1MHp3Q
                                                                                                          g$isp$22965$1MHp3Q
                                                                                                          g$rest$22966$1MHp3Q)
                                                                                                        (eq? (g$syntax->datum$20385$1MHp3Q
                                                                                                               g$for$22964$1MHp3Q)
                                                                                                             'for)))
                                                                                                     g$ls/false$22963$1MHp3Q))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$22967$1MHp3Q
                                                                                                    g$isp$22968$1MHp3Q
                                                                                                    g$rest$22969$1MHp3Q)
                                                                                                  (g$get-import$22889$1MHp3Q
                                                                                                    g$isp$22968$1MHp3Q)))
                                                                                               g$ls/false$22963$1MHp3Q)
                                                                                             ((case-lambda
                                                                                                ((g$t$22970$1MHp3Q)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$22971$1MHp3Q)
                                                                                                     (if g$ls/false$22971$1MHp3Q
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$22972$1MHp3Q)
                                                                                                            (g$syntax-violation$20382$1MHp3Q
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$22972$1MHp3Q)))
                                                                                                         g$ls/false$22971$1MHp3Q)
                                                                                                       (g$syntax-violation$20382$1MHp3Q
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$22970$1MHp3Q))))
                                                                                                  (g$syntax-dispatch$20263$1MHp3Q
                                                                                                    g$t$22970$1MHp3Q
                                                                                                    'any))))
                                                                                              g$t$22962$1MHp3Q))))
                                                                                        (g$syntax-dispatch$20263$1MHp3Q
                                                                                          g$t$22962$1MHp3Q
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$22956$1MHp3Q))))
                                                                              (g$syntax-dispatch$20263$1MHp3Q
                                                                                g$t$22956$1MHp3Q
                                                                                '(any each-any)))))
                                                                          g$t$22945$1MHp3Q))))
                                                                    (g$syntax-dispatch$20263$1MHp3Q
                                                                      g$t$22945$1MHp3Q
                                                                      '(any any
                                                                            any)))))
                                                                g$t$22933$1MHp3Q))))
                                                          (g$syntax-dispatch$20263$1MHp3Q
                                                            g$t$22933$1MHp3Q
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$22924$1MHp3Q))))
                                                (g$syntax-dispatch$20263$1MHp3Q
                                                  g$t$22924$1MHp3Q
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$22909$1MHp3Q))))
                                      (g$syntax-dispatch$20263$1MHp3Q
                                        g$t$22909$1MHp3Q
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$22903$1MHp3Q))))
                            (g$syntax-dispatch$20263$1MHp3Q
                              g$t$22903$1MHp3Q
                              '(any . each-any)))))
                        g$spec$22902$1MHp3Q))))
                  (g$add-imports!$22890$1MHp3Q
                    (case-lambda
                      ((g$imp$22894$1MHp3Q g$h$22895$1MHp3Q)
                       ((case-lambda
                          ((g$subst$22896$1MHp3Q)
                           (g$for-each$11836$1MHp3Q
                             (case-lambda
                               ((g$x$22897$1MHp3Q)
                                ((case-lambda
                                   ((g$name$22898$1MHp3Q
                                      g$label$22899$1MHp3Q)
                                    ((case-lambda
                                       ((g$t$22900$1MHp3Q)
                                        (if g$t$22900$1MHp3Q
                                          ((case-lambda
                                             ((g$l$22901$1MHp3Q)
                                              (if (not (eq? g$l$22901$1MHp3Q
                                                            g$label$22899$1MHp3Q))
                                                (g$dup-error$22881$1MHp3Q
                                                  g$name$22898$1MHp3Q)
                                                (void))))
                                           g$t$22900$1MHp3Q)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$12778$1MHp3Q
                                              g$h$22895$1MHp3Q
                                              g$name$22898$1MHp3Q
                                              g$label$22899$1MHp3Q)))))
                                     (g$hashtable-ref$12777$1MHp3Q
                                       g$h$22895$1MHp3Q
                                       g$name$22898$1MHp3Q
                                       '#f))))
                                 (car g$x$22897$1MHp3Q)
                                 (cdr g$x$22897$1MHp3Q))))
                             g$subst$22896$1MHp3Q)))
                        (g$get-import$22889$1MHp3Q
                          g$imp$22894$1MHp3Q))))))
          ((letrec ((g$f$22891$1MHp3Q
                      (case-lambda
                        ((g$imp*$22892$1MHp3Q g$h$22893$1MHp3Q)
                         (if (null? g$imp*$22892$1MHp3Q)
                           (hashtable-entries g$h$22893$1MHp3Q)
                           (begin
                             '#f
                             (g$add-imports!$22890$1MHp3Q
                               (car g$imp*$22892$1MHp3Q)
                               g$h$22893$1MHp3Q)
                             (g$f$22891$1MHp3Q
                               (cdr g$imp*$22892$1MHp3Q)
                               g$h$22893$1MHp3Q)))))))
             g$f$22891$1MHp3Q)
           g$imp*$22879$1MHp3Q
           (g$make-eq-hashtable$12774$1MHp3Q))))))
   (g$make-top-rib$20316$1MHp3Q
     g$make-top-rib$23910$1MHp3Q
     (case-lambda
       ((g$names$23141$1MHp3Q g$labels$23142$1MHp3Q)
        ((case-lambda
           ((g$rib$23143$1MHp3Q)
            (begin
              (g$vector-for-each$12735$1MHp3Q
                (case-lambda
                  ((g$name$23144$1MHp3Q g$label$23145$1MHp3Q)
                   (begin
                     (if (not (g$symbol?$12667$1MHp3Q
                                g$name$23144$1MHp3Q))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$23144$1MHp3Q)
                       (void))
                     (g$extend-rib/nc!$19727$1MHp3Q
                       g$rib$23143$1MHp3Q
                       (g$make-stx$19738$1MHp3Q
                         g$name$23144$1MHp3Q
                         g$top-mark*$19698$1MHp3Q
                         '()
                         '())
                       g$label$23145$1MHp3Q))))
                g$names$23141$1MHp3Q
                g$labels$23142$1MHp3Q)
              g$rib$23143$1MHp3Q)))
         (g$make-cache-rib$19724$1MHp3Q)))))
   (g$make-collector$20317$1MHp3Q
     g$make-collector$23911$1MHp3Q
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$23146$1MHp3Q)
            (case-lambda
              (() g$ls$23146$1MHp3Q)
              ((g$x$23147$1MHp3Q)
               (set! g$ls$23146$1MHp3Q
                 (g$set-cons$19695$1MHp3Q
                   g$x$23147$1MHp3Q
                   g$ls$23146$1MHp3Q))))))
         '()))))
   (g$inv-collector$20318$1MHp3Q
     g$inv-collector$23912$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         (g$args$23148$1MHp3Q
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23149$1MHp3Q)
          (begin
            (if (not (g$procedure?$12669$1MHp3Q g$x$23149$1MHp3Q))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$23149$1MHp3Q)
              (void))
            g$x$23149$1MHp3Q)))))
   (g$vis-collector$20319$1MHp3Q
     g$vis-collector$23913$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         (g$args$23150$1MHp3Q
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23151$1MHp3Q)
          (begin
            (if (not (g$procedure?$12669$1MHp3Q g$x$23151$1MHp3Q))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$23151$1MHp3Q)
              (void))
            g$x$23151$1MHp3Q)))))
   (g$imp-collector$20320$1MHp3Q
     g$imp-collector$23914$1MHp3Q
     (g$make-parameter$18626$1MHp3Q
       (case-lambda
         (g$args$23152$1MHp3Q
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23153$1MHp3Q)
          (begin
            (if (not (g$procedure?$12669$1MHp3Q g$x$23153$1MHp3Q))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$23153$1MHp3Q)
              (void))
            g$x$23153$1MHp3Q)))))
   (g$chi-library-internal$20321$1MHp3Q
     g$chi-library-internal$23915$1MHp3Q
     (case-lambda
       ((g$e*$23154$1MHp3Q g$rib$23155$1MHp3Q g$mix?$23156$1MHp3Q)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20310$1MHp3Q
               g$e*$23154$1MHp3Q
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$23155$1MHp3Q
               g$mix?$23156$1MHp3Q
               '#t)))
          (case-lambda
            ((g$e*$23165$1MHp3Q
               g$r$23166$1MHp3Q
               g$mr$23167$1MHp3Q
               g$lex*$23168$1MHp3Q
               g$rhs*$23169$1MHp3Q
               g$mod**$23170$1MHp3Q
               g$_kwd*$23171$1MHp3Q
               g$exp*$23172$1MHp3Q)
             ((case-lambda
                ((g$exp*$23173$1MHp3Q
                   g$_kwd*$23174$1MHp3Q
                   g$mod**$23175$1MHp3Q
                   g$rhs*$23176$1MHp3Q
                   g$lex*$23177$1MHp3Q
                   g$mr$23178$1MHp3Q
                   g$r$23179$1MHp3Q
                   g$e*$23180$1MHp3Q)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12684$1MHp3Q g$mod**$23175$1MHp3Q))
                     g$e*$23180$1MHp3Q)
                   g$r$23179$1MHp3Q
                   g$mr$23178$1MHp3Q
                   (g$reverse$12684$1MHp3Q g$lex*$23177$1MHp3Q)
                   (g$reverse$12684$1MHp3Q g$rhs*$23176$1MHp3Q)
                   g$exp*$23173$1MHp3Q)))
              g$exp*$23172$1MHp3Q
              g$_kwd*$23171$1MHp3Q
              g$mod**$23170$1MHp3Q
              g$rhs*$23169$1MHp3Q
              g$lex*$23168$1MHp3Q
              g$mr$23167$1MHp3Q
              g$r$23166$1MHp3Q
              g$e*$23165$1MHp3Q)))))))
   (g$chi-interaction-expr$20322$1MHp3Q
     g$chi-interaction-expr$23916$1MHp3Q
     (case-lambda
       ((g$e$23181$1MHp3Q g$rib$23182$1MHp3Q g$r$23183$1MHp3Q)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20310$1MHp3Q
               (list g$e$23181$1MHp3Q)
               g$r$23183$1MHp3Q
               g$r$23183$1MHp3Q
               '()
               '()
               '()
               '()
               '()
               g$rib$23182$1MHp3Q
               '#t
               '#f)))
          (case-lambda
            ((g$e*$23192$1MHp3Q
               g$r$23193$1MHp3Q
               g$mr$23194$1MHp3Q
               g$lex*$23195$1MHp3Q
               g$rhs*$23196$1MHp3Q
               g$mod**$23197$1MHp3Q
               g$_kwd*$23198$1MHp3Q
               g$_exp*$23199$1MHp3Q)
             ((case-lambda
                ((g$_exp*$23200$1MHp3Q
                   g$_kwd*$23201$1MHp3Q
                   g$mod**$23202$1MHp3Q
                   g$rhs*$23203$1MHp3Q
                   g$lex*$23204$1MHp3Q
                   g$mr$23205$1MHp3Q
                   g$r$23206$1MHp3Q
                   g$e*$23207$1MHp3Q)
                 ((case-lambda
                    ((g$e*$23208$1MHp3Q)
                     ((case-lambda
                        ((g$e$23209$1MHp3Q)
                         (values g$e$23209$1MHp3Q g$r$23206$1MHp3Q)))
                      (if (null? g$e*$23208$1MHp3Q)
                        (g$build-void$19691$1MHp3Q)
                        (if (null? (cdr g$e*$23208$1MHp3Q))
                          (car g$e*$23208$1MHp3Q)
                          (begin
                            '#f
                            (g$build-sequence$19690$1MHp3Q
                              '#f
                              g$e*$23208$1MHp3Q)))))))
                  (g$expand-interaction-rhs*/init*$20288$1MHp3Q
                    (g$reverse$12684$1MHp3Q g$lex*$23204$1MHp3Q)
                    (g$reverse$12684$1MHp3Q g$rhs*$23203$1MHp3Q)
                    (append
                      (apply
                        append
                        (g$reverse$12684$1MHp3Q g$mod**$23202$1MHp3Q))
                      g$e*$23207$1MHp3Q)
                    g$r$23206$1MHp3Q
                    g$mr$23205$1MHp3Q))))
              g$_exp*$23199$1MHp3Q
              g$_kwd*$23198$1MHp3Q
              g$mod**$23197$1MHp3Q
              g$rhs*$23196$1MHp3Q
              g$lex*$23195$1MHp3Q
              g$mr$23194$1MHp3Q
              g$r$23193$1MHp3Q
              g$e*$23192$1MHp3Q)))))))
   (g$library-body-expander$20323$1MHp3Q
     g$library-body-expander$23917$1MHp3Q
     (case-lambda
       ((g$name$23210$1MHp3Q
          g$main-exp*$23211$1MHp3Q
          g$imp*$23212$1MHp3Q
          g$b*$23213$1MHp3Q
          g$mix?$23214$1MHp3Q)
        (letrec* ((g$itc$23215$1MHp3Q (g$make-collector$20317$1MHp3Q)))
          ((case-lambda
             ((g$imp-collector$23220$1MHp3Q
                g$top-level-context$23221$1MHp3Q
                g$imp-collector$23222$1MHp3Q
                g$top-level-context$23223$1MHp3Q)
              ((case-lambda
                 ((g$swap$23224$1MHp3Q)
                  (dynamic-wind
                    g$swap$23224$1MHp3Q
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$20315$1MHp3Q
                              g$imp*$23212$1MHp3Q)))
                         (case-lambda
                           ((g$subst-names$23227$1MHp3Q
                              g$subst-labels$23228$1MHp3Q)
                            ((case-lambda
                               ((g$subst-labels$23229$1MHp3Q
                                  g$subst-names$23230$1MHp3Q)
                                ((case-lambda
                                   ((g$rib$23231$1MHp3Q)
                                    (letrec* ((g$wrap$23232$1MHp3Q
                                                (case-lambda
                                                  ((g$x$23294$1MHp3Q)
                                                   (g$make-stx$19738$1MHp3Q
                                                     g$x$23294$1MHp3Q
                                                     g$top-mark*$19698$1MHp3Q
                                                     (list
                                                       g$rib$23231$1MHp3Q)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$23233$1MHp3Q
                                            g$main-exp*$23234$1MHp3Q
                                            g$rtc$23235$1MHp3Q
                                            g$vtc$23236$1MHp3Q)
                                          ((case-lambda
                                             ((g$inv-collector$23241$1MHp3Q
                                                g$vis-collector$23242$1MHp3Q
                                                g$inv-collector$23243$1MHp3Q
                                                g$vis-collector$23244$1MHp3Q)
                                              ((case-lambda
                                                 ((g$swap$23245$1MHp3Q)
                                                  (dynamic-wind
                                                    g$swap$23245$1MHp3Q
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$20321$1MHp3Q
                                                              g$b*$23233$1MHp3Q
                                                              g$rib$23231$1MHp3Q
                                                              g$mix?$23214$1MHp3Q)))
                                                         (case-lambda
                                                           ((g$init*$23252$1MHp3Q
                                                              g$r$23253$1MHp3Q
                                                              g$mr$23254$1MHp3Q
                                                              g$lex*$23255$1MHp3Q
                                                              g$rhs*$23256$1MHp3Q
                                                              g$internal-exp*$23257$1MHp3Q)
                                                            ((case-lambda
                                                               ((g$internal-exp*$23258$1MHp3Q
                                                                  g$rhs*$23259$1MHp3Q
                                                                  g$lex*$23260$1MHp3Q
                                                                  g$mr$23261$1MHp3Q
                                                                  g$r$23262$1MHp3Q
                                                                  g$init*$23263$1MHp3Q)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$20312$1MHp3Q
                                                                       (append
                                                                         g$main-exp*$23234$1MHp3Q
                                                                         g$internal-exp*$23258$1MHp3Q))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$23266$1MHp3Q
                                                                       g$exp-id*$23267$1MHp3Q)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$23268$1MHp3Q
                                                                           g$exp-name*$23269$1MHp3Q)
                                                                         (begin
                                                                           (g$seal-rib!$19729$1MHp3Q
                                                                             g$rib$23231$1MHp3Q)
                                                                           ((case-lambda
                                                                              ((g$init*$23270$1MHp3Q)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$23271$1MHp3Q)
                                                                                   (begin
                                                                                     (g$unseal-rib!$19730$1MHp3Q
                                                                                       g$rib$23231$1MHp3Q)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$23272$1MHp3Q
                                                                                           g$export-subst$23273$1MHp3Q)
                                                                                         (letrec* ((g$errstr$23274$1MHp3Q
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$20371$1MHp3Q
                                                                                                  g$lex*$23260$1MHp3Q
                                                                                                  g$loc*$23272$1MHp3Q
                                                                                                  g$r$23262$1MHp3Q)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$23278$1MHp3Q
                                                                                                  g$global*$23279$1MHp3Q
                                                                                                  g$macro*$23280$1MHp3Q)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$23281$1MHp3Q
                                                                                                      g$global*$23282$1MHp3Q
                                                                                                      g$export-env$23283$1MHp3Q)
                                                                                                    (begin
                                                                                                      (g$for-each$11836$1MHp3Q
                                                                                                        (case-lambda
                                                                                                          ((g$s$23284$1MHp3Q)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$23285$1MHp3Q
                                                                                                                 g$label$23286$1MHp3Q)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$23287$1MHp3Q)
                                                                                                                   (if g$p$23287$1MHp3Q
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$23288$1MHp3Q)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$23289$1MHp3Q)
                                                                                                                             (if (eq? g$type$23289$1MHp3Q
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$20382$1MHp3Q
                                                                                                                                 'export
                                                                                                                                 g$errstr$23274$1MHp3Q
                                                                                                                                 g$name$23285$1MHp3Q)
                                                                                                                               (void))))
                                                                                                                          (car g$b$23288$1MHp3Q))))
                                                                                                                      (cdr g$p$23287$1MHp3Q))
                                                                                                                     (void))))
                                                                                                                (g$assq$11823$1MHp3Q
                                                                                                                  g$label$23286$1MHp3Q
                                                                                                                  g$export-env$23283$1MHp3Q))))
                                                                                                            (car g$s$23284$1MHp3Q)
                                                                                                            (cdr g$s$23284$1MHp3Q))))
                                                                                                        g$export-subst$23273$1MHp3Q)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$23290$1MHp3Q
                                                                                                            g$invoke-definitions$23291$1MHp3Q)
                                                                                                          (values
                                                                                                            (g$itc$23215$1MHp3Q)
                                                                                                            (g$rtc$23235$1MHp3Q)
                                                                                                            (g$vtc$23236$1MHp3Q)
                                                                                                            (g$build-sequence$19690$1MHp3Q
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$23291$1MHp3Q
                                                                                                                (list
                                                                                                                  g$invoke-body$23290$1MHp3Q)))
                                                                                                            g$macro*$23281$1MHp3Q
                                                                                                            g$export-subst$23273$1MHp3Q
                                                                                                            g$export-env$23283$1MHp3Q)))
                                                                                                       (g$build-library-letrec*$19694$1MHp3Q
                                                                                                         '#f
                                                                                                         g$name$23210$1MHp3Q
                                                                                                         g$lex*$23260$1MHp3Q
                                                                                                         g$loc*$23272$1MHp3Q
                                                                                                         g$rhs*$23271$1MHp3Q
                                                                                                         (if (null?
                                                                                                               g$init*$23270$1MHp3Q)
                                                                                                           (g$build-void$19691$1MHp3Q)
                                                                                                           (g$build-sequence$19690$1MHp3Q
                                                                                                             '#f
                                                                                                             g$init*$23270$1MHp3Q)))
                                                                                                       (g$map$11835$1MHp3Q
                                                                                                         g$build-global-define$19686$1MHp3Q
                                                                                                         (g$map$11835$1MHp3Q
                                                                                                           cdr
                                                                                                           g$global*$23282$1MHp3Q))))))
                                                                                                 g$macro*$23280$1MHp3Q
                                                                                                 g$global*$23279$1MHp3Q
                                                                                                 g$export-env$23278$1MHp3Q)))))))
                                                                                      (g$map$11835$1MHp3Q
                                                                                        g$gen-global$19701$1MHp3Q
                                                                                        g$lex*$23260$1MHp3Q)
                                                                                      (g$make-export-subst$20370$1MHp3Q
                                                                                        g$exp-name*$23269$1MHp3Q
                                                                                        g$exp-id*$23268$1MHp3Q)))))
                                                                                (g$chi-rhs*$20289$1MHp3Q
                                                                                  g$rhs*$23259$1MHp3Q
                                                                                  g$r$23262$1MHp3Q
                                                                                  g$mr$23261$1MHp3Q))))
                                                                            (g$chi-expr*$20279$1MHp3Q
                                                                              g$init*$23263$1MHp3Q
                                                                              g$r$23262$1MHp3Q
                                                                              g$mr$23261$1MHp3Q)))))
                                                                      g$exp-id*$23267$1MHp3Q
                                                                      g$exp-name*$23266$1MHp3Q))))))
                                                             g$internal-exp*$23257$1MHp3Q
                                                             g$rhs*$23256$1MHp3Q
                                                             g$lex*$23255$1MHp3Q
                                                             g$mr$23254$1MHp3Q
                                                             g$r$23253$1MHp3Q
                                                             g$init*$23252$1MHp3Q))))))
                                                    g$swap$23245$1MHp3Q)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$23292$1MHp3Q)
                                                        (begin
                                                          (g$inv-collector$23241$1MHp3Q
                                                            g$inv-collector$23243$1MHp3Q)
                                                          (set! g$inv-collector$23243$1MHp3Q
                                                            g$t$23292$1MHp3Q))))
                                                     (g$inv-collector$23241$1MHp3Q))
                                                    ((case-lambda
                                                       ((g$t$23293$1MHp3Q)
                                                        (begin
                                                          (g$vis-collector$23242$1MHp3Q
                                                            g$vis-collector$23244$1MHp3Q)
                                                          (set! g$vis-collector$23244$1MHp3Q
                                                            g$t$23293$1MHp3Q))))
                                                     (g$vis-collector$23242$1MHp3Q))))))))
                                           g$inv-collector$20318$1MHp3Q
                                           g$vis-collector$20319$1MHp3Q
                                           g$rtc$23235$1MHp3Q
                                           g$vtc$23236$1MHp3Q)))
                                       (g$map$11835$1MHp3Q
                                         g$wrap$23232$1MHp3Q
                                         g$b*$23213$1MHp3Q)
                                       (g$map$11835$1MHp3Q
                                         g$wrap$23232$1MHp3Q
                                         g$main-exp*$23211$1MHp3Q)
                                       (g$make-collector$20317$1MHp3Q)
                                       (g$make-collector$20317$1MHp3Q)))))
                                 (g$make-top-rib$20316$1MHp3Q
                                   g$subst-names$23230$1MHp3Q
                                   g$subst-labels$23229$1MHp3Q))))
                             g$subst-labels$23228$1MHp3Q
                             g$subst-names$23227$1MHp3Q))))))
                    g$swap$23224$1MHp3Q)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$23295$1MHp3Q)
                        (begin
                          (g$imp-collector$23220$1MHp3Q
                            g$imp-collector$23222$1MHp3Q)
                          (set! g$imp-collector$23222$1MHp3Q
                            g$t$23295$1MHp3Q))))
                     (g$imp-collector$23220$1MHp3Q))
                    ((case-lambda
                       ((g$t$23296$1MHp3Q)
                        (begin
                          (g$top-level-context$23221$1MHp3Q
                            g$top-level-context$23223$1MHp3Q)
                          (set! g$top-level-context$23223$1MHp3Q
                            g$t$23296$1MHp3Q))))
                     (g$top-level-context$23221$1MHp3Q))))))))
           g$imp-collector$20320$1MHp3Q
           g$top-level-context$20390$1MHp3Q
           g$itc$23215$1MHp3Q
           '#f)))))
   (g$core-library-expander$20324$1MHp3Q
     g$core-library-expander$23918$1MHp3Q
     (case-lambda
       ((g$e$23297$1MHp3Q g$verify-name$23298$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$parse-library$20314$1MHp3Q g$e$23297$1MHp3Q)))
          (case-lambda
            ((g$name*$23303$1MHp3Q
               g$exp*$23304$1MHp3Q
               g$imp*$23305$1MHp3Q
               g$b*$23306$1MHp3Q)
             ((case-lambda
                ((g$b*$23307$1MHp3Q
                   g$imp*$23308$1MHp3Q
                   g$exp*$23309$1MHp3Q
                   g$name*$23310$1MHp3Q)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$20313$1MHp3Q
                        g$name*$23310$1MHp3Q)))
                   (case-lambda
                     ((g$name$23313$1MHp3Q g$ver$23314$1MHp3Q)
                      ((case-lambda
                         ((g$ver$23315$1MHp3Q g$name$23316$1MHp3Q)
                          (begin
                            (g$verify-name$23298$1MHp3Q
                              g$name$23316$1MHp3Q)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$20323$1MHp3Q
                                   g$name$23316$1MHp3Q
                                   g$exp*$23309$1MHp3Q
                                   g$imp*$23308$1MHp3Q
                                   g$b*$23307$1MHp3Q
                                   '#f)))
                              (case-lambda
                                ((g$imp*$23324$1MHp3Q
                                   g$invoke-req*$23325$1MHp3Q
                                   g$visit-req*$23326$1MHp3Q
                                   g$invoke-code$23327$1MHp3Q
                                   g$visit-code$23328$1MHp3Q
                                   g$export-subst$23329$1MHp3Q
                                   g$export-env$23330$1MHp3Q)
                                 ((case-lambda
                                    ((g$export-env$23331$1MHp3Q
                                       g$export-subst$23332$1MHp3Q
                                       g$visit-code$23333$1MHp3Q
                                       g$invoke-code$23334$1MHp3Q
                                       g$visit-req*$23335$1MHp3Q
                                       g$invoke-req*$23336$1MHp3Q
                                       g$imp*$23337$1MHp3Q)
                                     (values
                                       g$name$23316$1MHp3Q
                                       g$ver$23315$1MHp3Q
                                       g$imp*$23337$1MHp3Q
                                       g$invoke-req*$23336$1MHp3Q
                                       g$visit-req*$23335$1MHp3Q
                                       g$invoke-code$23334$1MHp3Q
                                       g$visit-code$23333$1MHp3Q
                                       g$export-subst$23332$1MHp3Q
                                       g$export-env$23331$1MHp3Q)))
                                  g$export-env$23330$1MHp3Q
                                  g$export-subst$23329$1MHp3Q
                                  g$visit-code$23328$1MHp3Q
                                  g$invoke-code$23327$1MHp3Q
                                  g$visit-req*$23326$1MHp3Q
                                  g$invoke-req*$23325$1MHp3Q
                                  g$imp*$23324$1MHp3Q)))))))
                       g$ver$23314$1MHp3Q
                       g$name$23313$1MHp3Q))))))
              g$b*$23306$1MHp3Q
              g$imp*$23305$1MHp3Q
              g$exp*$23304$1MHp3Q
              g$name*$23303$1MHp3Q)))))))
   (g$parse-top-level-program$20325$1MHp3Q
     g$parse-top-level-program$23919$1MHp3Q
     (case-lambda
       ((g$e*$23338$1MHp3Q)
        ((case-lambda
           ((g$t$23339$1MHp3Q)
            ((case-lambda
               ((g$ls/false$23340$1MHp3Q)
                (if (if g$ls/false$23340$1MHp3Q
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$23341$1MHp3Q
                               g$imp*$23342$1MHp3Q
                               g$b*$23343$1MHp3Q)
                             (eq? (g$syntax->datum$20385$1MHp3Q
                                    g$import$23341$1MHp3Q)
                                  'import)))
                          g$ls/false$23340$1MHp3Q))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$23344$1MHp3Q
                         g$imp*$23345$1MHp3Q
                         g$b*$23346$1MHp3Q)
                       (values g$imp*$23345$1MHp3Q g$b*$23346$1MHp3Q)))
                    g$ls/false$23340$1MHp3Q)
                  ((case-lambda
                     ((g$t$23347$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$23348$1MHp3Q)
                          (if (if g$ls/false$23348$1MHp3Q
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$23349$1MHp3Q
                                         g$x$23350$1MHp3Q
                                         g$y$23351$1MHp3Q)
                                       (eq? (g$syntax->datum$20385$1MHp3Q
                                              g$import$23349$1MHp3Q)
                                            'import)))
                                    g$ls/false$23348$1MHp3Q))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$23352$1MHp3Q
                                   g$x$23353$1MHp3Q
                                   g$y$23354$1MHp3Q)
                                 (g$syntax-violation$20382$1MHp3Q
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$19762$1MHp3Q
                                     g$e*$23338$1MHp3Q))))
                              g$ls/false$23348$1MHp3Q)
                            ((case-lambda
                               ((g$t$23355$1MHp3Q)
                                ((case-lambda
                                   ((g$ls/false$23356$1MHp3Q)
                                    (if g$ls/false$23356$1MHp3Q
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$23356$1MHp3Q)
                                      (g$syntax-violation$20382$1MHp3Q
                                        '#f
                                        '"invalid syntax"
                                        g$t$23355$1MHp3Q))))
                                 (g$syntax-dispatch$20263$1MHp3Q
                                   g$t$23355$1MHp3Q
                                   '_))))
                             g$t$23347$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$23347$1MHp3Q
                         '((any . any) . any)))))
                   g$t$23339$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$23339$1MHp3Q
               '((any . each-any) . each-any)))))
         g$e*$23338$1MHp3Q))))
   (g$top-level-expander$20326$1MHp3Q
     g$top-level-expander$23920$1MHp3Q
     (case-lambda
       ((g$e*$23357$1MHp3Q)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$20325$1MHp3Q
               g$e*$23357$1MHp3Q)))
          (case-lambda
            ((g$imp*$23360$1MHp3Q g$b*$23361$1MHp3Q)
             ((case-lambda
                ((g$b*$23362$1MHp3Q g$imp*$23363$1MHp3Q)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$20323$1MHp3Q
                        '()
                        '()
                        g$imp*$23363$1MHp3Q
                        g$b*$23362$1MHp3Q
                        '#t)))
                   (case-lambda
                     ((g$imp*$23371$1MHp3Q
                        g$invoke-req*$23372$1MHp3Q
                        g$visit-req*$23373$1MHp3Q
                        g$invoke-code$23374$1MHp3Q
                        g$visit-code$23375$1MHp3Q
                        g$export-subst$23376$1MHp3Q
                        g$export-env$23377$1MHp3Q)
                      ((case-lambda
                         ((g$export-env$23378$1MHp3Q
                            g$export-subst$23379$1MHp3Q
                            g$visit-code$23380$1MHp3Q
                            g$invoke-code$23381$1MHp3Q
                            g$visit-req*$23382$1MHp3Q
                            g$invoke-req*$23383$1MHp3Q
                            g$imp*$23384$1MHp3Q)
                          (values
                            g$invoke-req*$23383$1MHp3Q
                            g$invoke-code$23381$1MHp3Q)))
                       g$export-env$23377$1MHp3Q
                       g$export-subst$23376$1MHp3Q
                       g$visit-code$23375$1MHp3Q
                       g$invoke-code$23374$1MHp3Q
                       g$visit-req*$23373$1MHp3Q
                       g$invoke-req*$23372$1MHp3Q
                       g$imp*$23371$1MHp3Q))))))
              g$b*$23361$1MHp3Q
              g$imp*$23360$1MHp3Q)))))))
   (g$9893$20327$1MHp3Q
     g$9893$23921$1MHp3Q
     (make-record-type-descriptor
       'env
       '#f
       'g$9896$1MHp3Q
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9895$20328$1MHp3Q g$9895$23922$1MHp3Q '#f)
   (g$9894$20329$1MHp3Q
     g$9894$23923$1MHp3Q
     (make-record-constructor-descriptor
       g$9893$20327$1MHp3Q
       '#f
       g$9895$20328$1MHp3Q))
   (g$env?$20332$1MHp3Q
     g$env?$23924$1MHp3Q
     (record-predicate g$9893$20327$1MHp3Q))
   (g$make-env$20333$1MHp3Q
     g$make-env$23925$1MHp3Q
     (record-constructor g$9894$20329$1MHp3Q))
   (g$env-names$20334$1MHp3Q
     g$env-names$23926$1MHp3Q
     (record-accessor g$9893$20327$1MHp3Q '0))
   (g$env-labels$20335$1MHp3Q
     g$env-labels$23927$1MHp3Q
     (record-accessor g$9893$20327$1MHp3Q '1))
   (g$env-itc$20336$1MHp3Q
     g$env-itc$23928$1MHp3Q
     (record-accessor g$9893$20327$1MHp3Q '2))
   (g$set-env-names!$20337$1MHp3Q
     g$set-env-names!$23929$1MHp3Q
     (record-mutator g$9893$20327$1MHp3Q '0))
   (g$set-env-labels!$20338$1MHp3Q
     g$set-env-labels!$23930$1MHp3Q
     (record-mutator g$9893$20327$1MHp3Q '1))
   (g$set-env-itc!$20339$1MHp3Q
     g$set-env-itc!$23931$1MHp3Q
     (record-mutator g$9893$20327$1MHp3Q '2))
   (g$rp$20340$1MHp3Q
     g$rp$23932$1MHp3Q
     (make-record-printer
       'env
       (case-lambda
         ((g$x$23385$1MHp3Q g$p$23386$1MHp3Q g$wr$23387$1MHp3Q)
          (display '"#<environment>" g$p$23386$1MHp3Q)))))
   (g$9910$20341$1MHp3Q
     g$9910$23933$1MHp3Q
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9913$1MHp3Q
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9912$20342$1MHp3Q g$9912$23934$1MHp3Q '#f)
   (g$9911$20343$1MHp3Q
     g$9911$23935$1MHp3Q
     (make-record-constructor-descriptor
       g$9910$20341$1MHp3Q
       '#f
       g$9912$20342$1MHp3Q))
   (g$interaction-env?$20346$1MHp3Q
     g$interaction-env?$23936$1MHp3Q
     (record-predicate g$9910$20341$1MHp3Q))
   (g$make-interaction-env$20347$1MHp3Q
     g$make-interaction-env$23937$1MHp3Q
     (record-constructor g$9911$20343$1MHp3Q))
   (g$interaction-env-rib$20348$1MHp3Q
     g$interaction-env-rib$23938$1MHp3Q
     (record-accessor g$9910$20341$1MHp3Q '0))
   (g$interaction-env-r$20349$1MHp3Q
     g$interaction-env-r$23939$1MHp3Q
     (record-accessor g$9910$20341$1MHp3Q '1))
   (g$interaction-env-locs$20350$1MHp3Q
     g$interaction-env-locs$23940$1MHp3Q
     (record-accessor g$9910$20341$1MHp3Q '2))
   (g$set-interaction-env-rib!$20351$1MHp3Q
     g$set-interaction-env-rib!$23941$1MHp3Q
     (record-mutator g$9910$20341$1MHp3Q '0))
   (g$set-interaction-env-r!$20352$1MHp3Q
     g$set-interaction-env-r!$23942$1MHp3Q
     (record-mutator g$9910$20341$1MHp3Q '1))
   (g$set-interaction-env-locs!$20353$1MHp3Q
     g$set-interaction-env-locs!$23943$1MHp3Q
     (record-mutator g$9910$20341$1MHp3Q '2))
   (g$rp$20354$1MHp3Q
     g$rp$23944$1MHp3Q
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$23388$1MHp3Q g$p$23389$1MHp3Q g$wr$23390$1MHp3Q)
          (display '"#<environment>" g$p$23389$1MHp3Q)))))
   (g$interaction-environment-symbols$20355$1MHp3Q
     g$interaction-environment-symbols$23945$1MHp3Q
     (case-lambda
       (()
        (g$environment-symbols$20359$1MHp3Q
          (g$interaction-environment$20389$1MHp3Q)))))
   (g$environment-bindings$20356$1MHp3Q
     g$environment-bindings$23946$1MHp3Q
     (case-lambda
       ((g$e$23391$1MHp3Q)
        (vector->list
          (g$vector-map$12734$1MHp3Q
            (case-lambda
              ((g$name$23392$1MHp3Q g$label$23393$1MHp3Q)
               (g$parse-binding$20357$1MHp3Q
                 (cons
                   g$name$23392$1MHp3Q
                   (g$imported-label->binding$19470$1MHp3Q
                     g$label$23393$1MHp3Q)))))
            (g$env-names$20334$1MHp3Q g$e$23391$1MHp3Q)
            (g$env-labels$20335$1MHp3Q g$e$23391$1MHp3Q))))))
   (g$parse-binding$20357$1MHp3Q
     g$parse-binding$23947$1MHp3Q
     (case-lambda
       ((g$b$23394$1MHp3Q)
        (cons
          (car g$b$23394$1MHp3Q)
          ((case-lambda
             ((g$t$23395$1MHp3Q)
              (if (g$memv$11828$1MHp3Q
                    g$t$23395$1MHp3Q
                    '(core-prim global))
                'procedure
                (if (g$memv$11828$1MHp3Q
                      g$t$23395$1MHp3Q
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$23395$1MHp3Q '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$23394$1MHp3Q)
                               (g$cadr$12686$1MHp3Q g$b$23394$1MHp3Q))
                        'syntax
                        'unknown)))))))
           (g$cadr$12686$1MHp3Q g$b$23394$1MHp3Q))))))
   (g$environment?$20358$1MHp3Q
     g$environment?$23948$1MHp3Q
     (case-lambda
       ((g$x$23396$1MHp3Q)
        ((case-lambda
           ((g$t$23397$1MHp3Q)
            (if g$t$23397$1MHp3Q
              g$t$23397$1MHp3Q
              (begin
                '#f
                (g$interaction-env?$20346$1MHp3Q g$x$23396$1MHp3Q)))))
         (g$env?$20332$1MHp3Q g$x$23396$1MHp3Q)))))
   (g$environment-symbols$20359$1MHp3Q
     g$environment-symbols$23949$1MHp3Q
     (case-lambda
       ((g$x$23398$1MHp3Q)
        (if (g$env?$20332$1MHp3Q g$x$23398$1MHp3Q)
          (vector->list (g$env-names$20334$1MHp3Q g$x$23398$1MHp3Q))
          (if (g$interaction-env?$20346$1MHp3Q g$x$23398$1MHp3Q)
            (g$map$11835$1MHp3Q
              values
              (g$rib-sym*$19713$1MHp3Q
                (g$interaction-env-rib$20348$1MHp3Q g$x$23398$1MHp3Q)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$23398$1MHp3Q)))))))
   (g$environment$20360$1MHp3Q
     g$environment$23950$1MHp3Q
     (case-lambda
       (g$imp*$23399$1MHp3Q
        ((case-lambda
           ((g$itc$23400$1MHp3Q)
            ((case-lambda
               ((g$imp-collector$23403$1MHp3Q
                  g$imp-collector$23404$1MHp3Q)
                ((case-lambda
                   ((g$swap$23405$1MHp3Q)
                    (dynamic-wind
                      g$swap$23405$1MHp3Q
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$20315$1MHp3Q
                                g$imp*$23399$1MHp3Q)))
                           (case-lambda
                             ((g$subst-names$23408$1MHp3Q
                                g$subst-labels$23409$1MHp3Q)
                              ((case-lambda
                                 ((g$subst-labels$23410$1MHp3Q
                                    g$subst-names$23411$1MHp3Q)
                                  (g$make-env$20333$1MHp3Q
                                    g$subst-names$23411$1MHp3Q
                                    g$subst-labels$23410$1MHp3Q
                                    g$itc$23400$1MHp3Q)))
                               g$subst-labels$23409$1MHp3Q
                               g$subst-names$23408$1MHp3Q))))))
                      g$swap$23405$1MHp3Q)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$23412$1MHp3Q)
                        (begin
                          (g$imp-collector$23403$1MHp3Q
                            g$imp-collector$23404$1MHp3Q)
                          (set! g$imp-collector$23404$1MHp3Q
                            g$t$23412$1MHp3Q))))
                     (g$imp-collector$23403$1MHp3Q)))))))
             g$imp-collector$20320$1MHp3Q
             g$itc$23400$1MHp3Q)))
         (g$make-collector$20317$1MHp3Q)))))
   (g$null-environment$20361$1MHp3Q
     g$null-environment$23951$1MHp3Q
     (case-lambda
       ((g$n$23413$1MHp3Q)
        (begin
          (if (not (eqv? g$n$23413$1MHp3Q '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$23413$1MHp3Q)
            (void))
          (g$environment$20360$1MHp3Q '(psyntax null-environment-5))))))
   (g$scheme-report-environment$20362$1MHp3Q
     g$scheme-report-environment$23952$1MHp3Q
     (case-lambda
       ((g$n$23414$1MHp3Q)
        (begin
          (if (not (eqv? g$n$23414$1MHp3Q '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$23414$1MHp3Q)
            (void))
          (g$environment$20360$1MHp3Q
            '(psyntax scheme-report-environment-5))))))
   (g$expand$20363$1MHp3Q
     g$expand$23953$1MHp3Q
     (case-lambda
       ((g$x$23415$1MHp3Q g$env$23416$1MHp3Q)
        (if (g$env?$20332$1MHp3Q g$env$23416$1MHp3Q)
          ((case-lambda
             ((g$rib$23417$1MHp3Q)
              ((case-lambda
                 ((g$x$23418$1MHp3Q
                    g$itc$23419$1MHp3Q
                    g$rtc$23420$1MHp3Q
                    g$vtc$23421$1MHp3Q)
                  ((case-lambda
                     ((g$x$23422$1MHp3Q)
                      (begin
                        (g$seal-rib!$19729$1MHp3Q g$rib$23417$1MHp3Q)
                        (values
                          g$x$23422$1MHp3Q
                          (g$rtc$23420$1MHp3Q)))))
                   ((case-lambda
                      ((g$top-level-context$23431$1MHp3Q
                         g$inv-collector$23432$1MHp3Q
                         g$vis-collector$23433$1MHp3Q
                         g$imp-collector$23434$1MHp3Q
                         g$top-level-context$23435$1MHp3Q
                         g$inv-collector$23436$1MHp3Q
                         g$vis-collector$23437$1MHp3Q
                         g$imp-collector$23438$1MHp3Q)
                       ((case-lambda
                          ((g$swap$23439$1MHp3Q)
                           (dynamic-wind
                             g$swap$23439$1MHp3Q
                             (case-lambda
                               (()
                                (g$chi-expr$20281$1MHp3Q
                                  g$x$23418$1MHp3Q
                                  '()
                                  '())))
                             g$swap$23439$1MHp3Q)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$23440$1MHp3Q)
                                 (begin
                                   (g$top-level-context$23431$1MHp3Q
                                     g$top-level-context$23435$1MHp3Q)
                                   (set! g$top-level-context$23435$1MHp3Q
                                     g$t$23440$1MHp3Q))))
                              (g$top-level-context$23431$1MHp3Q))
                             ((case-lambda
                                ((g$t$23441$1MHp3Q)
                                 (begin
                                   (g$inv-collector$23432$1MHp3Q
                                     g$inv-collector$23436$1MHp3Q)
                                   (set! g$inv-collector$23436$1MHp3Q
                                     g$t$23441$1MHp3Q))))
                              (g$inv-collector$23432$1MHp3Q))
                             ((case-lambda
                                ((g$t$23442$1MHp3Q)
                                 (begin
                                   (g$vis-collector$23433$1MHp3Q
                                     g$vis-collector$23437$1MHp3Q)
                                   (set! g$vis-collector$23437$1MHp3Q
                                     g$t$23442$1MHp3Q))))
                              (g$vis-collector$23433$1MHp3Q))
                             ((case-lambda
                                ((g$t$23443$1MHp3Q)
                                 (begin
                                   (g$imp-collector$23434$1MHp3Q
                                     g$imp-collector$23438$1MHp3Q)
                                   (set! g$imp-collector$23438$1MHp3Q
                                     g$t$23443$1MHp3Q))))
                              (g$imp-collector$23434$1MHp3Q))))))))
                    g$top-level-context$20390$1MHp3Q
                    g$inv-collector$20318$1MHp3Q
                    g$vis-collector$20319$1MHp3Q
                    g$imp-collector$20320$1MHp3Q
                    '#f
                    g$rtc$23420$1MHp3Q
                    g$vtc$23421$1MHp3Q
                    g$itc$23419$1MHp3Q))))
               (g$make-stx$19738$1MHp3Q
                 g$x$23415$1MHp3Q
                 g$top-mark*$19698$1MHp3Q
                 (list g$rib$23417$1MHp3Q)
                 '())
               (g$env-itc$20336$1MHp3Q g$env$23416$1MHp3Q)
               (g$make-collector$20317$1MHp3Q)
               (g$make-collector$20317$1MHp3Q))))
           (g$make-top-rib$20316$1MHp3Q
             (g$env-names$20334$1MHp3Q g$env$23416$1MHp3Q)
             (g$env-labels$20335$1MHp3Q g$env$23416$1MHp3Q)))
          (if (g$interaction-env?$20346$1MHp3Q g$env$23416$1MHp3Q)
            ((case-lambda
               ((g$rib$23444$1MHp3Q g$r$23445$1MHp3Q g$rtc$23446$1MHp3Q)
                ((case-lambda
                   ((g$x$23447$1MHp3Q)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$23458$1MHp3Q
                               g$inv-collector$23459$1MHp3Q
                               g$vis-collector$23460$1MHp3Q
                               g$imp-collector$23461$1MHp3Q
                               g$top-level-context$23462$1MHp3Q
                               g$inv-collector$23463$1MHp3Q
                               g$vis-collector$23464$1MHp3Q
                               g$imp-collector$23465$1MHp3Q)
                             ((case-lambda
                                ((g$swap$23466$1MHp3Q)
                                 (dynamic-wind
                                   g$swap$23466$1MHp3Q
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$20322$1MHp3Q
                                        g$x$23447$1MHp3Q
                                        g$rib$23444$1MHp3Q
                                        g$r$23445$1MHp3Q)))
                                   g$swap$23466$1MHp3Q)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$23467$1MHp3Q)
                                       (begin
                                         (g$top-level-context$23458$1MHp3Q
                                           g$top-level-context$23462$1MHp3Q)
                                         (set! g$top-level-context$23462$1MHp3Q
                                           g$t$23467$1MHp3Q))))
                                    (g$top-level-context$23458$1MHp3Q))
                                   ((case-lambda
                                      ((g$t$23468$1MHp3Q)
                                       (begin
                                         (g$inv-collector$23459$1MHp3Q
                                           g$inv-collector$23463$1MHp3Q)
                                         (set! g$inv-collector$23463$1MHp3Q
                                           g$t$23468$1MHp3Q))))
                                    (g$inv-collector$23459$1MHp3Q))
                                   ((case-lambda
                                      ((g$t$23469$1MHp3Q)
                                       (begin
                                         (g$vis-collector$23460$1MHp3Q
                                           g$vis-collector$23464$1MHp3Q)
                                         (set! g$vis-collector$23464$1MHp3Q
                                           g$t$23469$1MHp3Q))))
                                    (g$vis-collector$23460$1MHp3Q))
                                   ((case-lambda
                                      ((g$t$23470$1MHp3Q)
                                       (begin
                                         (g$imp-collector$23461$1MHp3Q
                                           g$imp-collector$23465$1MHp3Q)
                                         (set! g$imp-collector$23465$1MHp3Q
                                           g$t$23470$1MHp3Q))))
                                    (g$imp-collector$23461$1MHp3Q))))))))
                          g$top-level-context$20390$1MHp3Q
                          g$inv-collector$20318$1MHp3Q
                          g$vis-collector$20319$1MHp3Q
                          g$imp-collector$20320$1MHp3Q
                          g$env$23416$1MHp3Q
                          g$rtc$23446$1MHp3Q
                          (g$make-collector$20317$1MHp3Q)
                          (g$make-collector$20317$1MHp3Q))))
                      (case-lambda
                        ((g$e$23471$1MHp3Q g$r^$23472$1MHp3Q)
                         ((case-lambda
                            ((g$r^$23473$1MHp3Q g$e$23474$1MHp3Q)
                             (begin
                               (g$set-interaction-env-r!$20352$1MHp3Q
                                 g$env$23416$1MHp3Q
                                 g$r^$23473$1MHp3Q)
                               (values
                                 g$e$23474$1MHp3Q
                                 (g$rtc$23446$1MHp3Q)))))
                          g$r^$23472$1MHp3Q
                          g$e$23471$1MHp3Q))))))
                 (g$make-stx$19738$1MHp3Q
                   g$x$23415$1MHp3Q
                   g$top-mark*$19698$1MHp3Q
                   (list g$rib$23444$1MHp3Q)
                   '()))))
             (g$interaction-env-rib$20348$1MHp3Q g$env$23416$1MHp3Q)
             (g$interaction-env-r$20349$1MHp3Q g$env$23416$1MHp3Q)
             (g$make-collector$20317$1MHp3Q))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$23416$1MHp3Q)))))))
   (g$eval$20364$1MHp3Q
     g$eval$23954$1MHp3Q
     (case-lambda
       ((g$x$23475$1MHp3Q g$env$23476$1MHp3Q)
        (begin
          (if (not (g$environment?$20358$1MHp3Q g$env$23476$1MHp3Q))
            (error 'eval '"not an environment" g$env$23476$1MHp3Q)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20363$1MHp3Q
                 g$x$23475$1MHp3Q
                 g$env$23476$1MHp3Q)))
            (case-lambda
              ((g$x$23479$1MHp3Q g$invoke-req*$23480$1MHp3Q)
               ((case-lambda
                  ((g$invoke-req*$23481$1MHp3Q g$x$23482$1MHp3Q)
                   (begin
                     (g$for-each$11836$1MHp3Q
                       g$invoke-library$19471$1MHp3Q
                       g$invoke-req*$23481$1MHp3Q)
                     (eval-core
                       (g$expanded->core$19203$1MHp3Q
                         g$x$23482$1MHp3Q)))))
                g$invoke-req*$23480$1MHp3Q
                g$x$23479$1MHp3Q))))))))
   (g$expand->core$20365$1MHp3Q
     g$expand->core$23955$1MHp3Q
     (case-lambda
       ((g$x$23483$1MHp3Q g$env$23484$1MHp3Q)
        (begin
          (if (not (g$environment?$20358$1MHp3Q g$env$23484$1MHp3Q))
            (error 'eval '"not an environment" g$env$23484$1MHp3Q)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20363$1MHp3Q
                 g$x$23483$1MHp3Q
                 g$env$23484$1MHp3Q)))
            (case-lambda
              ((g$x$23487$1MHp3Q g$invoke-req*$23488$1MHp3Q)
               ((case-lambda
                  ((g$invoke-req*$23489$1MHp3Q g$x$23490$1MHp3Q)
                   (begin
                     (g$for-each$11836$1MHp3Q
                       g$invoke-library$19471$1MHp3Q
                       g$invoke-req*$23489$1MHp3Q)
                     (g$expanded->core$19203$1MHp3Q g$x$23490$1MHp3Q))))
                g$invoke-req*$23488$1MHp3Q
                g$x$23487$1MHp3Q))))))))
   (g$library-expander$20366$1MHp3Q
     g$library-expander$23956$1MHp3Q
     (case-lambda
       ((g$x$23491$1MHp3Q
          g$filename$23492$1MHp3Q
          g$verify-name$23493$1MHp3Q)
        (letrec* ((g$build-visit-code$23494$1MHp3Q
                    (case-lambda
                      ((g$macro*$23537$1MHp3Q)
                       (if (null? g$macro*$23537$1MHp3Q)
                         (g$build-void$19691$1MHp3Q)
                         (g$build-sequence$19690$1MHp3Q
                           '#f
                           (g$map$11835$1MHp3Q
                             (case-lambda
                               ((g$x$23538$1MHp3Q)
                                ((case-lambda
                                   ((g$loc$23539$1MHp3Q
                                      g$src$23540$1MHp3Q)
                                    (list
                                      'set!
                                      g$loc$23539$1MHp3Q
                                      g$src$23540$1MHp3Q)))
                                 (car g$x$23538$1MHp3Q)
                                 (g$cddr$12688$1MHp3Q
                                   g$x$23538$1MHp3Q))))
                             g$macro*$23537$1MHp3Q))))))
                  (g$visit!$23495$1MHp3Q
                    (case-lambda
                      ((g$macro*$23533$1MHp3Q)
                       (g$for-each$11836$1MHp3Q
                         (case-lambda
                           ((g$x$23534$1MHp3Q)
                            ((case-lambda
                               ((g$loc$23535$1MHp3Q g$proc$23536$1MHp3Q)
                                (set-symbol-value!
                                  g$loc$23535$1MHp3Q
                                  g$proc$23536$1MHp3Q)))
                             (car g$x$23534$1MHp3Q)
                             (g$cadr$12686$1MHp3Q g$x$23534$1MHp3Q))))
                         g$macro*$23533$1MHp3Q)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$20324$1MHp3Q
                 g$x$23491$1MHp3Q
                 g$verify-name$23493$1MHp3Q)))
            (case-lambda
              ((g$name$23505$1MHp3Q
                 g$ver$23506$1MHp3Q
                 g$imp*$23507$1MHp3Q
                 g$inv*$23508$1MHp3Q
                 g$vis*$23509$1MHp3Q
                 g$invoke-code$23510$1MHp3Q
                 g$macro*$23511$1MHp3Q
                 g$export-subst$23512$1MHp3Q
                 g$export-env$23513$1MHp3Q)
               ((case-lambda
                  ((g$export-env$23514$1MHp3Q
                     g$export-subst$23515$1MHp3Q
                     g$macro*$23516$1MHp3Q
                     g$invoke-code$23517$1MHp3Q
                     g$vis*$23518$1MHp3Q
                     g$inv*$23519$1MHp3Q
                     g$imp*$23520$1MHp3Q
                     g$ver$23521$1MHp3Q
                     g$name$23522$1MHp3Q)
                   ((case-lambda
                      ((g$id$23523$1MHp3Q
                         g$name$23524$1MHp3Q
                         g$ver$23525$1MHp3Q
                         g$imp*$23526$1MHp3Q
                         g$vis*$23527$1MHp3Q
                         g$inv*$23528$1MHp3Q
                         g$visit-proc$23529$1MHp3Q
                         g$invoke-proc$23530$1MHp3Q
                         g$visit-code$23531$1MHp3Q
                         g$invoke-code$23532$1MHp3Q)
                       (begin
                         (g$install-library$19469$1MHp3Q
                           g$id$23523$1MHp3Q
                           g$name$23524$1MHp3Q
                           g$ver$23525$1MHp3Q
                           g$imp*$23526$1MHp3Q
                           g$vis*$23527$1MHp3Q
                           g$inv*$23528$1MHp3Q
                           g$export-subst$23515$1MHp3Q
                           g$export-env$23514$1MHp3Q
                           g$visit-proc$23529$1MHp3Q
                           g$invoke-proc$23530$1MHp3Q
                           g$visit-code$23531$1MHp3Q
                           g$invoke-code$23532$1MHp3Q
                           '#t
                           g$filename$23492$1MHp3Q)
                         (values
                           g$id$23523$1MHp3Q
                           g$name$23524$1MHp3Q
                           g$ver$23525$1MHp3Q
                           g$imp*$23526$1MHp3Q
                           g$vis*$23527$1MHp3Q
                           g$inv*$23528$1MHp3Q
                           g$invoke-code$23532$1MHp3Q
                           g$visit-code$23531$1MHp3Q
                           g$export-subst$23515$1MHp3Q
                           g$export-env$23514$1MHp3Q))))
                    (gensym)
                    g$name$23522$1MHp3Q
                    g$ver$23521$1MHp3Q
                    (g$map$11835$1MHp3Q
                      g$library-spec$19475$1MHp3Q
                      g$imp*$23520$1MHp3Q)
                    (g$map$11835$1MHp3Q
                      g$library-spec$19475$1MHp3Q
                      g$vis*$23518$1MHp3Q)
                    (g$map$11835$1MHp3Q
                      g$library-spec$19475$1MHp3Q
                      g$inv*$23519$1MHp3Q)
                    (case-lambda
                      (()
                       (g$visit!$23495$1MHp3Q g$macro*$23516$1MHp3Q)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$19203$1MHp3Q
                           g$invoke-code$23517$1MHp3Q))))
                    (g$build-visit-code$23494$1MHp3Q
                      g$macro*$23516$1MHp3Q)
                    g$invoke-code$23517$1MHp3Q)))
                g$export-env$23513$1MHp3Q
                g$export-subst$23512$1MHp3Q
                g$macro*$23511$1MHp3Q
                g$invoke-code$23510$1MHp3Q
                g$vis*$23509$1MHp3Q
                g$inv*$23508$1MHp3Q
                g$imp*$23507$1MHp3Q
                g$ver$23506$1MHp3Q
                g$name$23505$1MHp3Q))))))
       ((g$x$23541$1MHp3Q g$filename$23542$1MHp3Q)
        (g$library-expander$20366$1MHp3Q
          g$x$23541$1MHp3Q
          g$filename$23542$1MHp3Q
          (case-lambda ((g$x$23543$1MHp3Q) (values)))))
       ((g$x$23544$1MHp3Q)
        (g$library-expander$20366$1MHp3Q
          g$x$23544$1MHp3Q
          '#f
          (case-lambda ((g$x$23545$1MHp3Q) (values)))))))
   (g$boot-library-expand$20367$1MHp3Q
     g$boot-library-expand$23957$1MHp3Q
     (case-lambda
       ((g$x$23546$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$library-expander$20366$1MHp3Q g$x$23546$1MHp3Q)))
          (case-lambda
            ((g$id$23557$1MHp3Q
               g$name$23558$1MHp3Q
               g$ver$23559$1MHp3Q
               g$imp*$23560$1MHp3Q
               g$vis*$23561$1MHp3Q
               g$inv*$23562$1MHp3Q
               g$invoke-code$23563$1MHp3Q
               g$visit-code$23564$1MHp3Q
               g$export-subst$23565$1MHp3Q
               g$export-env$23566$1MHp3Q)
             ((case-lambda
                ((g$export-env$23567$1MHp3Q
                   g$export-subst$23568$1MHp3Q
                   g$visit-code$23569$1MHp3Q
                   g$invoke-code$23570$1MHp3Q
                   g$inv*$23571$1MHp3Q
                   g$vis*$23572$1MHp3Q
                   g$imp*$23573$1MHp3Q
                   g$ver$23574$1MHp3Q
                   g$name$23575$1MHp3Q
                   g$id$23576$1MHp3Q)
                 (values
                   g$name$23575$1MHp3Q
                   g$invoke-code$23570$1MHp3Q
                   g$export-subst$23568$1MHp3Q
                   g$export-env$23567$1MHp3Q)))
              g$export-env$23566$1MHp3Q
              g$export-subst$23565$1MHp3Q
              g$visit-code$23564$1MHp3Q
              g$invoke-code$23563$1MHp3Q
              g$inv*$23562$1MHp3Q
              g$vis*$23561$1MHp3Q
              g$imp*$23560$1MHp3Q
              g$ver$23559$1MHp3Q
              g$name$23558$1MHp3Q
              g$id$23557$1MHp3Q)))))))
   (g$rev-map-append$20368$1MHp3Q
     g$rev-map-append$23958$1MHp3Q
     (case-lambda
       ((g$f$23577$1MHp3Q g$ls$23578$1MHp3Q g$ac$23579$1MHp3Q)
        (if (null? g$ls$23578$1MHp3Q)
          g$ac$23579$1MHp3Q
          (begin
            '#f
            (g$rev-map-append$20368$1MHp3Q
              g$f$23577$1MHp3Q
              (cdr g$ls$23578$1MHp3Q)
              (cons
                (g$f$23577$1MHp3Q (car g$ls$23578$1MHp3Q))
                g$ac$23579$1MHp3Q)))))))
   (g$build-exports$20369$1MHp3Q
     g$build-exports$23959$1MHp3Q
     (case-lambda
       ((g$lex*+loc*$23580$1MHp3Q g$init*$23581$1MHp3Q)
        (g$build-sequence$19690$1MHp3Q
          '#f
          (cons
            (g$build-void$19691$1MHp3Q)
            (g$rev-map-append$20368$1MHp3Q
              (case-lambda
                ((g$x$23582$1MHp3Q)
                 (list
                   'set!
                   (cdr g$x$23582$1MHp3Q)
                   (car g$x$23582$1MHp3Q))))
              g$lex*+loc*$23580$1MHp3Q
              g$init*$23581$1MHp3Q))))))
   (g$make-export-subst$20370$1MHp3Q
     g$make-export-subst$23960$1MHp3Q
     (case-lambda
       ((g$name*$23583$1MHp3Q g$id*$23584$1MHp3Q)
        (g$map$11835$1MHp3Q
          (case-lambda
            ((g$name$23585$1MHp3Q g$id$23586$1MHp3Q)
             ((case-lambda
                ((g$label$23587$1MHp3Q)
                 (begin
                   (if (not g$label$23587$1MHp3Q)
                     (g$syntax-violation$20382$1MHp3Q
                       '#f
                       '"cannot export unbound identifier"
                       g$id$23586$1MHp3Q)
                     (void))
                   (cons g$name$23585$1MHp3Q g$label$23587$1MHp3Q))))
              (g$id->label$19778$1MHp3Q g$id$23586$1MHp3Q))))
          g$name*$23583$1MHp3Q
          g$id*$23584$1MHp3Q))))
   (g$make-export-env/macros$20371$1MHp3Q
     g$make-export-env/macros$23961$1MHp3Q
     (case-lambda
       ((g$lex*$23588$1MHp3Q g$loc*$23589$1MHp3Q g$r$23590$1MHp3Q)
        (letrec* ((g$lookup$23591$1MHp3Q
                    (case-lambda
                      ((g$x$23607$1MHp3Q)
                       ((letrec ((g$f$23608$1MHp3Q
                                   (case-lambda
                                     ((g$x$23609$1MHp3Q
                                        g$lex*$23610$1MHp3Q
                                        g$loc*$23611$1MHp3Q)
                                      (if (pair? g$lex*$23610$1MHp3Q)
                                        (if (eq? g$x$23609$1MHp3Q
                                                 (car g$lex*$23610$1MHp3Q))
                                          (car g$loc*$23611$1MHp3Q)
                                          (g$f$23608$1MHp3Q
                                            g$x$23609$1MHp3Q
                                            (cdr g$lex*$23610$1MHp3Q)
                                            (cdr g$loc*$23611$1MHp3Q)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$23608$1MHp3Q)
                        g$x$23607$1MHp3Q
                        g$lex*$23588$1MHp3Q
                        g$loc*$23589$1MHp3Q)))))
          ((letrec ((g$f$23592$1MHp3Q
                      (case-lambda
                        ((g$r$23593$1MHp3Q
                           g$env$23594$1MHp3Q
                           g$global*$23595$1MHp3Q
                           g$macro*$23596$1MHp3Q)
                         (if (null? g$r$23593$1MHp3Q)
                           (values
                             g$env$23594$1MHp3Q
                             g$global*$23595$1MHp3Q
                             g$macro*$23596$1MHp3Q)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$23597$1MHp3Q)
                                 ((case-lambda
                                    ((g$label$23598$1MHp3Q
                                       g$b$23599$1MHp3Q)
                                     ((case-lambda
                                        ((g$t$23600$1MHp3Q)
                                         (if (eqv?
                                               g$t$23600$1MHp3Q
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$23601$1MHp3Q)
                                               ((case-lambda
                                                  ((g$loc$23602$1MHp3Q
                                                     g$type$23603$1MHp3Q)
                                                   (g$f$23592$1MHp3Q
                                                     (cdr g$r$23593$1MHp3Q)
                                                     (cons
                                                       (g$cons*$11837$1MHp3Q
                                                         g$label$23598$1MHp3Q
                                                         g$type$23603$1MHp3Q
                                                         g$loc$23602$1MHp3Q)
                                                       g$env$23594$1MHp3Q)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$20207$1MHp3Q
                                                           g$v$23601$1MHp3Q)
                                                         g$loc$23602$1MHp3Q)
                                                       g$global*$23595$1MHp3Q)
                                                     g$macro*$23596$1MHp3Q)))
                                                (g$lookup$23591$1MHp3Q
                                                  (g$lexical-var$20207$1MHp3Q
                                                    g$v$23601$1MHp3Q))
                                                (if (g$lexical-mutable?$20208$1MHp3Q
                                                      g$v$23601$1MHp3Q)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$19783$1MHp3Q
                                              g$b$23599$1MHp3Q))
                                           (if (eqv?
                                                 g$t$23600$1MHp3Q
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$23604$1MHp3Q)
                                                 (g$f$23592$1MHp3Q
                                                   (cdr g$r$23593$1MHp3Q)
                                                   (cons
                                                     (g$cons*$11837$1MHp3Q
                                                       g$label$23598$1MHp3Q
                                                       'global-macro
                                                       g$loc$23604$1MHp3Q)
                                                     g$env$23594$1MHp3Q)
                                                   g$global*$23595$1MHp3Q
                                                   (cons
                                                     (cons
                                                       g$loc$23604$1MHp3Q
                                                       (g$binding-value$19783$1MHp3Q
                                                         g$b$23599$1MHp3Q))
                                                     g$macro*$23596$1MHp3Q))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$23600$1MHp3Q
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$23605$1MHp3Q)
                                                   (g$f$23592$1MHp3Q
                                                     (cdr g$r$23593$1MHp3Q)
                                                     (cons
                                                       (g$cons*$11837$1MHp3Q
                                                         g$label$23598$1MHp3Q
                                                         'global-macro!
                                                         g$loc$23605$1MHp3Q)
                                                       g$env$23594$1MHp3Q)
                                                     g$global*$23595$1MHp3Q
                                                     (cons
                                                       (cons
                                                         g$loc$23605$1MHp3Q
                                                         (g$binding-value$19783$1MHp3Q
                                                           g$b$23599$1MHp3Q))
                                                       g$macro*$23596$1MHp3Q))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$23600$1MHp3Q
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$23606$1MHp3Q)
                                                     (g$f$23592$1MHp3Q
                                                       (cdr g$r$23593$1MHp3Q)
                                                       (cons
                                                         (g$cons*$11837$1MHp3Q
                                                           g$label$23598$1MHp3Q
                                                           'global-ctv
                                                           g$loc$23606$1MHp3Q)
                                                         g$env$23594$1MHp3Q)
                                                       g$global*$23595$1MHp3Q
                                                       (cons
                                                         (cons
                                                           g$loc$23606$1MHp3Q
                                                           (g$binding-value$19783$1MHp3Q
                                                             g$b$23599$1MHp3Q))
                                                         g$macro*$23596$1MHp3Q))))
                                                  (gensym))
                                                 (if (g$memv$11828$1MHp3Q
                                                       g$t$23600$1MHp3Q
                                                       '($rtd $module))
                                                   (g$f$23592$1MHp3Q
                                                     (cdr g$r$23593$1MHp3Q)
                                                     (cons
                                                       g$x$23597$1MHp3Q
                                                       g$env$23594$1MHp3Q)
                                                     g$global*$23595$1MHp3Q
                                                     g$macro*$23596$1MHp3Q)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$19782$1MHp3Q
                                                         g$b$23599$1MHp3Q)
                                                       (g$binding-value$19783$1MHp3Q
                                                         g$b$23599$1MHp3Q))))))))))
                                      (g$binding-type$19782$1MHp3Q
                                        g$b$23599$1MHp3Q))))
                                  (car g$x$23597$1MHp3Q)
                                  (cdr g$x$23597$1MHp3Q))))
                              (car g$r$23593$1MHp3Q))))))))
             g$f$23592$1MHp3Q)
           g$r$23590$1MHp3Q
           '()
           '()
           '())))))
   (g$generate-temporaries$20372$1MHp3Q
     g$generate-temporaries$23962$1MHp3Q
     (case-lambda
       ((g$ls$23612$1MHp3Q)
        ((case-lambda
           ((g$t$23613$1MHp3Q)
            ((case-lambda
               ((g$ls/false$23614$1MHp3Q)
                (if g$ls/false$23614$1MHp3Q
                  (apply
                    (case-lambda
                      ((g$ls$23615$1MHp3Q)
                       (g$map$11835$1MHp3Q
                         (case-lambda
                           ((g$x$23616$1MHp3Q)
                            (g$make-stx$19738$1MHp3Q
                              ((case-lambda
                                 ((g$x$23617$1MHp3Q)
                                  (if ((case-lambda
                                         ((g$t$23618$1MHp3Q)
                                          (if g$t$23618$1MHp3Q
                                            g$t$23618$1MHp3Q
                                            (begin
                                              '#f
                                              (string?
                                                g$x$23617$1MHp3Q)))))
                                       (g$symbol?$12667$1MHp3Q
                                         g$x$23617$1MHp3Q))
                                    (gensym g$x$23617$1MHp3Q)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$20385$1MHp3Q
                                 g$x$23616$1MHp3Q))
                              g$top-mark*$19698$1MHp3Q
                              '()
                              '())))
                         g$ls$23615$1MHp3Q)))
                    g$ls/false$23614$1MHp3Q)
                  ((case-lambda
                     ((g$t$23619$1MHp3Q)
                      ((case-lambda
                         ((g$ls/false$23620$1MHp3Q)
                          (if g$ls/false$23620$1MHp3Q
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$23620$1MHp3Q)
                            (g$syntax-violation$20382$1MHp3Q
                              '#f
                              '"invalid syntax"
                              g$t$23619$1MHp3Q))))
                       (g$syntax-dispatch$20263$1MHp3Q
                         g$t$23619$1MHp3Q
                         '_))))
                   g$t$23613$1MHp3Q))))
             (g$syntax-dispatch$20263$1MHp3Q
               g$t$23613$1MHp3Q
               'each-any))))
         g$ls$23612$1MHp3Q))))
   (g$free-identifier=?$20373$1MHp3Q
     g$free-identifier=?$23963$1MHp3Q
     (case-lambda
       ((g$x$23621$1MHp3Q g$y$23622$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$x$23621$1MHp3Q)
          (if (g$id?$19765$1MHp3Q g$y$23622$1MHp3Q)
            (g$free-id=?$19769$1MHp3Q g$x$23621$1MHp3Q g$y$23622$1MHp3Q)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$23622$1MHp3Q))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$23621$1MHp3Q)))))
   (g$bound-identifier=?$20374$1MHp3Q
     g$bound-identifier=?$23964$1MHp3Q
     (case-lambda
       ((g$x$23623$1MHp3Q g$y$23624$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$x$23623$1MHp3Q)
          (if (g$id?$19765$1MHp3Q g$y$23624$1MHp3Q)
            (g$bound-id=?$19768$1MHp3Q
              g$x$23623$1MHp3Q
              g$y$23624$1MHp3Q)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$23624$1MHp3Q))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$23623$1MHp3Q)))))
   (g$make-source-condition$20375$1MHp3Q
     g$make-source-condition$23965$1MHp3Q
     (case-lambda
       ((g$x$23625$1MHp3Q)
        (letrec* ((g$12883$23626$1MHp3Q
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$13822$1MHp3Q
                      'g$12886$1MHp3Q
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12885$23627$1MHp3Q '#f)
                  (g$12884$23628$1MHp3Q
                    (make-record-constructor-descriptor
                      g$12883$23626$1MHp3Q
                      g$&condition-rcd$13823$1MHp3Q
                      g$12885$23627$1MHp3Q))
                  (g$12882$23631$1MHp3Q
                    (record-predicate g$12883$23626$1MHp3Q))
                  (g$make-source-condition$23632$1MHp3Q
                    (record-constructor g$12884$23628$1MHp3Q))
                  (g$12880$23633$1MHp3Q
                    (record-accessor g$12883$23626$1MHp3Q '0))
                  (g$12881$23634$1MHp3Q
                    (record-accessor g$12883$23626$1MHp3Q '1))
                  (g$source-condition?$23635$1MHp3Q
                    (condition-predicate g$12883$23626$1MHp3Q))
                  (g$source-filename$23636$1MHp3Q
                    (condition-accessor
                      g$12883$23626$1MHp3Q
                      g$12880$23633$1MHp3Q))
                  (g$source-character$23637$1MHp3Q
                    (condition-accessor
                      g$12883$23626$1MHp3Q
                      g$12881$23634$1MHp3Q)))
          (if (pair? g$x$23625$1MHp3Q)
            (g$make-source-condition$23632$1MHp3Q
              (car g$x$23625$1MHp3Q)
              (cdr g$x$23625$1MHp3Q))
            (condition))))))
   (g$extract-position-condition$20376$1MHp3Q
     g$extract-position-condition$23966$1MHp3Q
     (case-lambda
       ((g$x$23638$1MHp3Q)
        (g$make-source-condition$20375$1MHp3Q
          (g$expression-position$20377$1MHp3Q g$x$23638$1MHp3Q)))))
   (g$expression-position$20377$1MHp3Q
     g$expression-position$23967$1MHp3Q
     (case-lambda
       ((g$x$23639$1MHp3Q)
        (if (g$stx?$19737$1MHp3Q g$x$23639$1MHp3Q)
          (begin
            '#f
            ((case-lambda
               ((g$x$23640$1MHp3Q)
                (if (annotation? g$x$23640$1MHp3Q)
                  (begin '#f (annotation-source g$x$23640$1MHp3Q))
                  '#f)))
             (g$stx-expr$19739$1MHp3Q g$x$23639$1MHp3Q)))
          '#f))))
   (g$assertion-error$20378$1MHp3Q
     g$assertion-error$23968$1MHp3Q
     (case-lambda
       ((g$expr$23641$1MHp3Q g$pos$23642$1MHp3Q)
        (raise
          (condition
            (g$make-assertion-violation$13870$1MHp3Q)
            (g$make-who-condition$13888$1MHp3Q 'assert)
            (g$make-message-condition$13828$1MHp3Q '"assertion failed")
            (g$make-irritants-condition$13878$1MHp3Q
              (list g$expr$23641$1MHp3Q))
            (g$make-source-condition$20375$1MHp3Q
              g$pos$23642$1MHp3Q))))))
   (g$syntax-error$20379$1MHp3Q
     g$syntax-error$23969$1MHp3Q
     (case-lambda
       ((g$x$23643$1MHp3Q . g$args$23644$1MHp3Q)
        (begin
          (if (not (g$for-all$11833$1MHp3Q string? g$args$23644$1MHp3Q))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$23644$1MHp3Q)
            (void))
          (raise
            (condition
              (g$make-message-condition$13828$1MHp3Q
                (if (null? g$args$23644$1MHp3Q)
                  '"invalid syntax"
                  (apply string-append g$args$23644$1MHp3Q)))
              (g$make-syntax-violation$13922$1MHp3Q
                (g$syntax->datum$20385$1MHp3Q g$x$23643$1MHp3Q)
                '#f)
              (g$extract-position-condition$20376$1MHp3Q
                g$x$23643$1MHp3Q)
              (g$extract-trace$20380$1MHp3Q g$x$23643$1MHp3Q)))))))
   (g$extract-trace$20380$1MHp3Q
     g$extract-trace$23970$1MHp3Q
     (case-lambda
       ((g$x$23645$1MHp3Q)
        (letrec* ((g$12908$23646$1MHp3Q
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$13822$1MHp3Q
                      'g$12911$1MHp3Q
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12910$23647$1MHp3Q '#f)
                  (g$12909$23648$1MHp3Q
                    (make-record-constructor-descriptor
                      g$12908$23646$1MHp3Q
                      g$&condition-rcd$13823$1MHp3Q
                      g$12910$23647$1MHp3Q))
                  (g$12907$23651$1MHp3Q
                    (record-predicate g$12908$23646$1MHp3Q))
                  (g$make-trace$23652$1MHp3Q
                    (record-constructor g$12909$23648$1MHp3Q))
                  (g$12906$23653$1MHp3Q
                    (record-accessor g$12908$23646$1MHp3Q '0))
                  (g$trace?$23654$1MHp3Q
                    (condition-predicate g$12908$23646$1MHp3Q))
                  (g$trace-form$23655$1MHp3Q
                    (condition-accessor
                      g$12908$23646$1MHp3Q
                      g$12906$23653$1MHp3Q)))
          ((letrec ((g$f$23656$1MHp3Q
                      (case-lambda
                        ((g$x$23657$1MHp3Q)
                         (if (g$stx?$19737$1MHp3Q g$x$23657$1MHp3Q)
                           (apply
                             condition
                             (g$make-trace$23652$1MHp3Q
                               g$x$23657$1MHp3Q)
                             (g$map$11835$1MHp3Q
                               g$f$23656$1MHp3Q
                               (g$stx-ae*$19742$1MHp3Q
                                 g$x$23657$1MHp3Q)))
                           (if (annotation? g$x$23657$1MHp3Q)
                             (g$make-trace$23652$1MHp3Q
                               (g$make-stx$19738$1MHp3Q
                                 g$x$23657$1MHp3Q
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$23656$1MHp3Q)
           g$x$23645$1MHp3Q)))))
   (g$syntax-violation*$20381$1MHp3Q
     g$syntax-violation*$23971$1MHp3Q
     (case-lambda
       ((g$who$23658$1MHp3Q
          g$msg$23659$1MHp3Q
          g$form$23660$1MHp3Q
          g$condition-object$23661$1MHp3Q)
        (begin
          (if (not (string? g$msg$23659$1MHp3Q))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$23659$1MHp3Q)
            (void))
          ((case-lambda
             ((g$who$23662$1MHp3Q)
              (raise
                (condition
                  (if g$who$23662$1MHp3Q
                    (g$make-who-condition$13888$1MHp3Q
                      g$who$23662$1MHp3Q)
                    (condition))
                  (g$make-message-condition$13828$1MHp3Q
                    g$msg$23659$1MHp3Q)
                  g$condition-object$23661$1MHp3Q
                  (g$extract-position-condition$20376$1MHp3Q
                    g$form$23660$1MHp3Q)
                  (g$extract-trace$20380$1MHp3Q g$form$23660$1MHp3Q)))))
           (if ((case-lambda
                  ((g$t$23663$1MHp3Q)
                   (if g$t$23663$1MHp3Q
                     g$t$23663$1MHp3Q
                     (begin
                       '#f
                       (g$symbol?$12667$1MHp3Q g$who$23658$1MHp3Q)))))
                (string? g$who$23658$1MHp3Q))
             g$who$23658$1MHp3Q
             (if (not g$who$23658$1MHp3Q)
               ((case-lambda
                  ((g$t$23664$1MHp3Q)
                   ((case-lambda
                      ((g$ls/false$23665$1MHp3Q)
                       (if (if g$ls/false$23665$1MHp3Q
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$23666$1MHp3Q)
                                    (g$id?$19765$1MHp3Q
                                      g$id$23666$1MHp3Q)))
                                 g$ls/false$23665$1MHp3Q))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$23667$1MHp3Q)
                              (g$syntax->datum$20385$1MHp3Q
                                g$id$23667$1MHp3Q)))
                           g$ls/false$23665$1MHp3Q)
                         ((case-lambda
                            ((g$t$23668$1MHp3Q)
                             ((case-lambda
                                ((g$ls/false$23669$1MHp3Q)
                                 (if (if g$ls/false$23669$1MHp3Q
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$23670$1MHp3Q
                                                g$rest$23671$1MHp3Q)
                                              (g$id?$19765$1MHp3Q
                                                g$id$23670$1MHp3Q)))
                                           g$ls/false$23669$1MHp3Q))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$23672$1MHp3Q
                                          g$rest$23673$1MHp3Q)
                                        (g$syntax->datum$20385$1MHp3Q
                                          g$id$23672$1MHp3Q)))
                                     g$ls/false$23669$1MHp3Q)
                                   ((case-lambda
                                      ((g$t$23674$1MHp3Q)
                                       ((case-lambda
                                          ((g$ls/false$23675$1MHp3Q)
                                           (if g$ls/false$23675$1MHp3Q
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$23675$1MHp3Q)
                                             (g$syntax-violation$20382$1MHp3Q
                                               '#f
                                               '"invalid syntax"
                                               g$t$23674$1MHp3Q))))
                                        (g$syntax-dispatch$20263$1MHp3Q
                                          g$t$23674$1MHp3Q
                                          '_))))
                                    g$t$23668$1MHp3Q))))
                              (g$syntax-dispatch$20263$1MHp3Q
                                g$t$23668$1MHp3Q
                                '(any . any)))))
                          g$t$23664$1MHp3Q))))
                    (g$syntax-dispatch$20263$1MHp3Q
                      g$t$23664$1MHp3Q
                      'any))))
                g$form$23660$1MHp3Q)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$23658$1MHp3Q)))))))))
   (g$syntax-violation$20382$1MHp3Q
     g$syntax-violation$23972$1MHp3Q
     (case-lambda
       ((g$who$23676$1MHp3Q g$msg$23677$1MHp3Q g$form$23678$1MHp3Q)
        (g$syntax-violation$20382$1MHp3Q
          g$who$23676$1MHp3Q
          g$msg$23677$1MHp3Q
          g$form$23678$1MHp3Q
          '#f))
       ((g$who$23679$1MHp3Q
          g$msg$23680$1MHp3Q
          g$form$23681$1MHp3Q
          g$subform$23682$1MHp3Q)
        (g$syntax-violation*$20381$1MHp3Q
          g$who$23679$1MHp3Q
          g$msg$23680$1MHp3Q
          g$form$23681$1MHp3Q
          (g$make-syntax-violation$13922$1MHp3Q
            (g$syntax->datum$20385$1MHp3Q g$form$23681$1MHp3Q)
            (g$syntax->datum$20385$1MHp3Q g$subform$23682$1MHp3Q))))))
   (g$identifier?$20383$1MHp3Q
     g$identifier?$23973$1MHp3Q
     (case-lambda
       ((g$x$23683$1MHp3Q) (g$id?$19765$1MHp3Q g$x$23683$1MHp3Q))))
   (g$datum->syntax$20384$1MHp3Q
     g$datum->syntax$23974$1MHp3Q
     (case-lambda
       ((g$id$23684$1MHp3Q g$datum$23685$1MHp3Q)
        (if (g$id?$19765$1MHp3Q g$id$23684$1MHp3Q)
          (g$datum->stx$19748$1MHp3Q
            g$id$23684$1MHp3Q
            g$datum$23685$1MHp3Q)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$23684$1MHp3Q)))))
   (g$syntax->datum$20385$1MHp3Q
     g$syntax->datum$23975$1MHp3Q
     (case-lambda
       ((g$x$23686$1MHp3Q)
        (g$stx->datum$19776$1MHp3Q g$x$23686$1MHp3Q))))
   (g$compile-r6rs-top-level$20386$1MHp3Q
     g$compile-r6rs-top-level$23976$1MHp3Q
     (case-lambda
       ((g$x*$23687$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20326$1MHp3Q g$x*$23687$1MHp3Q)))
          (case-lambda
            ((g$lib*$23690$1MHp3Q g$invoke-code$23691$1MHp3Q)
             ((case-lambda
                ((g$invoke-code$23692$1MHp3Q g$lib*$23693$1MHp3Q)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11836$1MHp3Q
                        g$invoke-library$19471$1MHp3Q
                        g$lib*$23693$1MHp3Q)
                      (eval-core
                        (g$expanded->core$19203$1MHp3Q
                          g$invoke-code$23692$1MHp3Q)))))))
              g$invoke-code$23691$1MHp3Q
              g$lib*$23690$1MHp3Q)))))))
   (g$pre-compile-r6rs-top-level$20387$1MHp3Q
     g$pre-compile-r6rs-top-level$23977$1MHp3Q
     (case-lambda
       ((g$x*$23694$1MHp3Q)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20326$1MHp3Q g$x*$23694$1MHp3Q)))
          (case-lambda
            ((g$lib*$23697$1MHp3Q g$invoke-code$23698$1MHp3Q)
             ((case-lambda
                ((g$invoke-code$23699$1MHp3Q g$lib*$23700$1MHp3Q)
                 (begin
                   (g$for-each$11836$1MHp3Q
                     g$invoke-library$19471$1MHp3Q
                     g$lib*$23700$1MHp3Q)
                   (compile-core
                     (g$expanded->core$19203$1MHp3Q
                       g$invoke-code$23699$1MHp3Q)))))
              g$invoke-code$23698$1MHp3Q
              g$lib*$23697$1MHp3Q)))))))
   (g$new-interaction-environment$20388$1MHp3Q
     g$new-interaction-environment$23978$1MHp3Q
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$23701$1MHp3Q g$rib$23702$1MHp3Q)
            (begin
              ((case-lambda
                 ((g$subst$23703$1MHp3Q)
                  (begin
                    (g$set-rib-sym*!$19718$1MHp3Q
                      g$rib$23702$1MHp3Q
                      (g$map$11835$1MHp3Q car g$subst$23703$1MHp3Q))
                    (g$set-rib-mark**!$19719$1MHp3Q
                      g$rib$23702$1MHp3Q
                      (g$map$11835$1MHp3Q
                        (case-lambda
                          ((g$x$23704$1MHp3Q) g$top-mark*$19698$1MHp3Q))
                        g$subst$23703$1MHp3Q))
                    (g$set-rib-label*!$19720$1MHp3Q
                      g$rib$23702$1MHp3Q
                      (g$map$11835$1MHp3Q cdr g$subst$23703$1MHp3Q)))))
               (g$library-subst$19428$1MHp3Q g$lib$23701$1MHp3Q))
              (g$make-interaction-env$20347$1MHp3Q
                g$rib$23702$1MHp3Q
                '()
                '()))))
         (g$find-library-by-name$19464$1MHp3Q '(ironscheme))
         (g$make-empty-rib$19723$1MHp3Q)))))
   (g$interaction-environment$20389$1MHp3Q
     g$interaction-environment$23979$1MHp3Q
     ((case-lambda
        ((g$e$23705$1MHp3Q)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$23706$1MHp3Q)
                (if g$t$23706$1MHp3Q
                  g$t$23706$1MHp3Q
                  (begin
                    '#f
                    (begin
                      (set! g$e$23705$1MHp3Q
                        (g$new-interaction-environment$20388$1MHp3Q))
                      g$e$23705$1MHp3Q)))))
             g$e$23705$1MHp3Q)))))
      '#f))
   (g$top-level-context$20390$1MHp3Q
     g$top-level-context$23980$1MHp3Q
     (g$make-parameter$18626$1MHp3Q '#f)))
  (g$current-library-expander$19461$1MHp3Q
    g$library-expander$20366$1MHp3Q))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$19200$1MHp3Q
      (case-lambda
        ((g$x$24061$1MHp3Q)
         ((case-lambda
            ((g$t$24062$1MHp3Q)
             (if g$t$24062$1MHp3Q
               (cdr g$t$24062$1MHp3Q)
               (begin '#f '#f))))
          (g$assq$11823$1MHp3Q
            g$x$24061$1MHp3Q
            '((ellipsis-map . g$ellipsis-map$23864$1MHp3Q)
              (&no-nans-rcd . g$&no-nans-rcd$14057$1MHp3Q)
              (&no-nans-rtd . g$&no-nans-rtd$14056$1MHp3Q)
              (&no-infinities-rcd . g$&no-infinities-rcd$14049$1MHp3Q)
              (&no-infinities-rtd . g$&no-infinities-rtd$14048$1MHp3Q)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$14041$1MHp3Q)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$14040$1MHp3Q)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$14031$1MHp3Q)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$14030$1MHp3Q)
              (&i/o-port-rcd . g$&i/o-port-rcd$14023$1MHp3Q)
              (&i/o-port-rtd . g$&i/o-port-rtd$14022$1MHp3Q)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$14013$1MHp3Q)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$14012$1MHp3Q)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$14005$1MHp3Q)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$14004$1MHp3Q)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$13997$1MHp3Q)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$13996$1MHp3Q)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$13989$1MHp3Q)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$13988$1MHp3Q)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$13981$1MHp3Q)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$13980$1MHp3Q)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$13971$1MHp3Q)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$13970$1MHp3Q)
              (&i/o-write-rcd . g$&i/o-write-rcd$13961$1MHp3Q)
              (&i/o-write-rtd . g$&i/o-write-rtd$13960$1MHp3Q)
              (&i/o-read-rcd . g$&i/o-read-rcd$13953$1MHp3Q)
              (&i/o-read-rtd . g$&i/o-read-rtd$13952$1MHp3Q)
              (&i/o-rcd . g$&i/o-rcd$13945$1MHp3Q)
              (&i/o-rtd . g$&i/o-rtd$13944$1MHp3Q)
              (&undefined-rcd . g$&undefined-rcd$13937$1MHp3Q)
              (&undefined-rtd . g$&undefined-rtd$13936$1MHp3Q)
              (&syntax-rcd . g$&syntax-rcd$13929$1MHp3Q)
              (&syntax-rtd . g$&syntax-rtd$13928$1MHp3Q)
              (&lexical-rcd . g$&lexical-rcd$13917$1MHp3Q)
              (&lexical-rtd . g$&lexical-rtd$13916$1MHp3Q)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$13909$1MHp3Q)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$13908$1MHp3Q)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$13901$1MHp3Q)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$13900$1MHp3Q)
              (&who-rcd . g$&who-rcd$13893$1MHp3Q)
              (&who-rtd . g$&who-rtd$13892$1MHp3Q)
              (&irritants-rcd . g$&irritants-rcd$13883$1MHp3Q)
              (&irritants-rtd . g$&irritants-rtd$13882$1MHp3Q)
              (&assertion-rcd . g$&assertion-rcd$13873$1MHp3Q)
              (&assertion-rtd . g$&assertion-rtd$13872$1MHp3Q)
              (&violation-rcd . g$&violation-rcd$13865$1MHp3Q)
              (&violation-rtd . g$&violation-rtd$13864$1MHp3Q)
              (&error-rcd . g$&error-rcd$13857$1MHp3Q)
              (&error-rtd . g$&error-rtd$13856$1MHp3Q)
              (&serious-rcd . g$&serious-rcd$13849$1MHp3Q)
              (&serious-rtd . g$&serious-rtd$13848$1MHp3Q)
              (&warning-rcd . g$&warning-rcd$13841$1MHp3Q)
              (&warning-rtd . g$&warning-rtd$13840$1MHp3Q)
              (&message-rcd . g$&message-rcd$13833$1MHp3Q)
              (&message-rtd . g$&message-rtd$13832$1MHp3Q)
              (&condition-rcd . g$&condition-rcd$13823$1MHp3Q)
              (&condition-rtd . g$&condition-rtd$13822$1MHp3Q)
              (tanh . g$tanh$13403$1MHp3Q)
              (cosh . g$cosh$13401$1MHp3Q)
              (sinh . g$sinh$13398$1MHp3Q)
              (make-list . g$make-list$11818$1MHp3Q)
              (last-pair . g$last-pair$11817$1MHp3Q)
              (ironscheme-build . g$ironscheme-build$24052$1MHp3Q)
              (syntax-error . g$syntax-error$23969$1MHp3Q)
              (syntax-dispatch . g$syntax-dispatch$23859$1MHp3Q)
              (compile-system-libraries
                .
                g$compile-system-libraries$24056$1MHp3Q)
              (compile->closure . g$compile->closure$24058$1MHp3Q)
              (compile . g$compile$24057$1MHp3Q)
              (load . g$load$24051$1MHp3Q)
              (interaction-environment
                .
                g$interaction-environment$23979$1MHp3Q)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$14279$1MHp3Q)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$14278$1MHp3Q)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$14277$1MHp3Q)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$14276$1MHp3Q)
              (string-ci>? . g$string-ci>?$14268$1MHp3Q)
              (string-ci>=? . g$string-ci>=?$14270$1MHp3Q)
              (string-ci=? . g$string-ci=?$14266$1MHp3Q)
              (string-ci<? . g$string-ci<?$14267$1MHp3Q)
              (string-ci<=? . g$string-ci<=?$14269$1MHp3Q)
              (char-ci>? . g$char-ci>?$14273$1MHp3Q)
              (char-ci>=? . g$char-ci>=?$14275$1MHp3Q)
              (char-ci=? . g$char-ci=?$14271$1MHp3Q)
              (char-ci<? . g$char-ci<?$14272$1MHp3Q)
              (char-ci<=? . g$char-ci<=?$14274$1MHp3Q)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$23797$1MHp3Q)
              (variable-transformer?
                .
                g$variable-transformer?$23796$1MHp3Q)
              (make-variable-transformer
                .
                g$make-variable-transformer$23794$1MHp3Q)
              (identifier? . g$identifier?$23973$1MHp3Q)
              (generate-temporaries
                .
                g$generate-temporaries$23962$1MHp3Q)
              (free-identifier=? . g$free-identifier=?$23963$1MHp3Q)
              (syntax->datum . g$syntax->datum$23975$1MHp3Q)
              (datum->syntax . g$datum->syntax$23974$1MHp3Q)
              (bound-identifier=? . g$bound-identifier=?$23964$1MHp3Q)
              (delete-file . g$delete-file$12793$1MHp3Q)
              (file-exists? . g$file-exists?$12792$1MHp3Q)
              (list-sort . g$list-sort$14121$1MHp3Q)
              (make-eqv-hashtable . g$make-eqv-hashtable$12775$1MHp3Q)
              (make-eq-hashtable . g$make-eq-hashtable$12774$1MHp3Q)
              (hashtable-update! . g$hashtable-update!$12781$1MHp3Q)
              (hashtable-size . g$hashtable-size$12776$1MHp3Q)
              (hashtable-set! . g$hashtable-set!$12778$1MHp3Q)
              (hashtable-ref . g$hashtable-ref$12777$1MHp3Q)
              (hashtable-delete! . g$hashtable-delete!$12779$1MHp3Q)
              (hashtable-contains? . g$hashtable-contains?$12780$1MHp3Q)
              (hashtable-clear! . g$hashtable-clear!$12782$1MHp3Q)
              (call-with-output-file
                .
                g$call-with-output-file$18242$1MHp3Q)
              (call-with-input-file
                .
                g$call-with-input-file$18241$1MHp3Q)
              (write-char . g$write-char$18238$1MHp3Q)
              (with-output-to-file . g$with-output-to-file$18240$1MHp3Q)
              (with-input-from-file
                .
                g$with-input-from-file$18239$1MHp3Q)
              (read-char . g$read-char$18237$1MHp3Q)
              (peek-char . g$peek-char$18236$1MHp3Q)
              (newline . g$newline$18243$1MHp3Q)
              (put-datum . g$put-datum$18173$1MHp3Q)
              (port? . g$port?$18178$1MHp3Q)
              (open-string-output-port
                .
                g$open-string-output-port$18177$1MHp3Q)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$13958$1MHp3Q)
              (make-i/o-read-error . g$make-i/o-read-error$13950$1MHp3Q)
              (make-i/o-port-error . g$make-i/o-port-error$14018$1MHp3Q)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$13966$1MHp3Q)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$13976$1MHp3Q)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$13986$1MHp3Q)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$13994$1MHp3Q)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$14010$1MHp3Q)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$14002$1MHp3Q)
              (make-i/o-error . g$make-i/o-error$13942$1MHp3Q)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$14036$1MHp3Q)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$14028$1MHp3Q)
              (i/o-write-error? . g$i/o-write-error?$13959$1MHp3Q)
              (i/o-read-error? . g$i/o-read-error?$13951$1MHp3Q)
              (i/o-port-error? . g$i/o-port-error?$14020$1MHp3Q)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$13968$1MHp3Q)
              (i/o-error-position . g$i/o-error-position$13969$1MHp3Q)
              (i/o-filename-error? . g$i/o-filename-error?$13978$1MHp3Q)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$13987$1MHp3Q)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$13995$1MHp3Q)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$14011$1MHp3Q)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$14003$1MHp3Q)
              (i/o-error? . g$i/o-error?$13943$1MHp3Q)
              (i/o-error-port . g$i/o-error-port$14021$1MHp3Q)
              (i/o-error-filename . g$i/o-error-filename$13979$1MHp3Q)
              (i/o-encoding-error? . g$i/o-encoding-error?$14038$1MHp3Q)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$14039$1MHp3Q)
              (i/o-decoding-error? . g$i/o-decoding-error?$14029$1MHp3Q)
              (get-datum . g$get-datum$18174$1MHp3Q)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$18179$1MHp3Q)
              (call-with-port . g$call-with-port$18180$1MHp3Q)
              (scheme-report-environment
                .
                g$scheme-report-environment$23952$1MHp3Q)
              (quotient . g$quotient$14088$1MHp3Q)
              (null-environment . g$null-environment$23951$1MHp3Q)
              (remainder . g$remainder$14089$1MHp3Q)
              (modulo . g$modulo$14090$1MHp3Q)
              (inexact->exact . g$inexact->exact$14085$1MHp3Q)
              (force . g$force$14092$1MHp3Q)
              (exact->inexact . g$exact->inexact$14086$1MHp3Q)
              (command-line . g$command-line$24047$1MHp3Q)
              (remove . g$remove$11840$1MHp3Q)
              (remv . g$remv$11841$1MHp3Q)
              (remp . g$remp$11821$1MHp3Q)
              (remq . g$remq$11842$1MHp3Q)
              (partition . g$partition$11820$1MHp3Q)
              (memv . g$memv$11828$1MHp3Q)
              (memq . g$memq$11827$1MHp3Q)
              (memp . g$memp$11830$1MHp3Q)
              (member . g$member$11829$1MHp3Q)
              (exists . g$exists$11834$1MHp3Q)
              (for-all . g$for-all$11833$1MHp3Q)
              (fold-right . g$fold-right$11839$1MHp3Q)
              (fold-left . g$fold-left$11838$1MHp3Q)
              (find . g$find$11819$1MHp3Q)
              (filter . g$filter$11822$1MHp3Q)
              (cons* . g$cons*$11837$1MHp3Q)
              (assv . g$assv$11824$1MHp3Q)
              (assq . g$assq$11823$1MHp3Q)
              (assp . g$assp$11826$1MHp3Q)
              (assoc . g$assoc$11825$1MHp3Q)
              (eval . g$eval$23954$1MHp3Q)
              (environment . g$environment$23950$1MHp3Q)
              (make-enumeration . g$make-enumeration$18379$1MHp3Q)
              (enum-set=? . g$enum-set=?$18386$1MHp3Q)
              (enum-set-universe . g$enum-set-universe$18380$1MHp3Q)
              (enum-set-union . g$enum-set-union$18387$1MHp3Q)
              (enum-set-subset? . g$enum-set-subset?$18385$1MHp3Q)
              (enum-set-projection . g$enum-set-projection$18391$1MHp3Q)
              (enum-set-member? . g$enum-set-member?$18384$1MHp3Q)
              (enum-set-intersection
                .
                g$enum-set-intersection$18388$1MHp3Q)
              (enum-set-indexer . g$enum-set-indexer$18381$1MHp3Q)
              (enum-set-difference . g$enum-set-difference$18389$1MHp3Q)
              (enum-set-constructor
                .
                g$enum-set-constructor$18382$1MHp3Q)
              (enum-set-complement . g$enum-set-complement$18390$1MHp3Q)
              (enum-set->list . g$enum-set->list$18383$1MHp3Q)
              (who-condition? . g$who-condition?$13890$1MHp3Q)
              (warning? . g$warning?$13839$1MHp3Q)
              (violation? . g$violation?$13863$1MHp3Q)
              (undefined-violation?
                .
                g$undefined-violation?$13935$1MHp3Q)
              (syntax-violation? . g$syntax-violation?$13925$1MHp3Q)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$13927$1MHp3Q)
              (syntax-violation-form
                .
                g$syntax-violation-form$13926$1MHp3Q)
              (syntax-violation . g$syntax-violation$23972$1MHp3Q)
              (serious-condition? . g$serious-condition?$13847$1MHp3Q)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$13899$1MHp3Q)
              (message-condition? . g$message-condition?$13830$1MHp3Q)
              (make-who-condition . g$make-who-condition$13888$1MHp3Q)
              (make-warning . g$make-warning$13838$1MHp3Q)
              (make-violation . g$make-violation$13862$1MHp3Q)
              (make-undefined-violation
                .
                g$make-undefined-violation$13934$1MHp3Q)
              (make-syntax-violation
                .
                g$make-syntax-violation$13922$1MHp3Q)
              (make-serious-condition
                .
                g$make-serious-condition$13846$1MHp3Q)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$13898$1MHp3Q)
              (make-message-condition
                .
                g$make-message-condition$13828$1MHp3Q)
              (make-lexical-violation
                .
                g$make-lexical-violation$13914$1MHp3Q)
              (make-irritants-condition
                .
                g$make-irritants-condition$13878$1MHp3Q)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$13906$1MHp3Q)
              (make-error . g$make-error$13854$1MHp3Q)
              (make-assertion-violation
                .
                g$make-assertion-violation$13870$1MHp3Q)
              (lexical-violation? . g$lexical-violation?$13915$1MHp3Q)
              (irritants-condition?
                .
                g$irritants-condition?$13880$1MHp3Q)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$13907$1MHp3Q)
              (error? . g$error?$13855$1MHp3Q)
              (condition-who . g$condition-who$13891$1MHp3Q)
              (condition-message . g$condition-message$13831$1MHp3Q)
              (condition-irritants . g$condition-irritants$13881$1MHp3Q)
              (assertion-violation?
                .
                g$assertion-violation?$13871$1MHp3Q)
              (native-endianness . g$native-endianness$12906$1MHp3Q)
              (bytevector? . g$bytevector?$12666$1MHp3Q)
              (bytevector-u64-set! . g$bytevector-u64-set!$12927$1MHp3Q)
              (bytevector-u64-ref . g$bytevector-u64-ref$12923$1MHp3Q)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$12929$1MHp3Q)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$12925$1MHp3Q)
              (bytevector-u32-set! . g$bytevector-u32-set!$12919$1MHp3Q)
              (bytevector-u32-ref . g$bytevector-u32-ref$12915$1MHp3Q)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$12921$1MHp3Q)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$12917$1MHp3Q)
              (bytevector-u16-set! . g$bytevector-u16-set!$12911$1MHp3Q)
              (bytevector-u16-ref . g$bytevector-u16-ref$12907$1MHp3Q)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$12913$1MHp3Q)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$12909$1MHp3Q)
              (bytevector-s64-set! . g$bytevector-s64-set!$12928$1MHp3Q)
              (bytevector-s64-ref . g$bytevector-s64-ref$12924$1MHp3Q)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$12930$1MHp3Q)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$12926$1MHp3Q)
              (bytevector-s32-set! . g$bytevector-s32-set!$12920$1MHp3Q)
              (bytevector-s32-ref . g$bytevector-s32-ref$12916$1MHp3Q)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$12922$1MHp3Q)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$12918$1MHp3Q)
              (bytevector-s16-set! . g$bytevector-s16-set!$12912$1MHp3Q)
              (bytevector-s16-ref . g$bytevector-s16-ref$12908$1MHp3Q)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$12914$1MHp3Q)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$12910$1MHp3Q)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$12933$1MHp3Q)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$12931$1MHp3Q)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$12934$1MHp3Q)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$12932$1MHp3Q)
              (no-nans-violation? . g$no-nans-violation?$14055$1MHp3Q)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$14047$1MHp3Q)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$14054$1MHp3Q)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$14046$1MHp3Q)
              (real->flonum . g$real->flonum$13361$1MHp3Q)
              (flzero? . g$flzero?$18146$1MHp3Q)
              (fltruncate . g$fltruncate$18141$1MHp3Q)
              (fltan . g$fltan$18130$1MHp3Q)
              (flsqrt . g$flsqrt$18135$1MHp3Q)
              (flsin . g$flsin$18128$1MHp3Q)
              (flround . g$flround$18142$1MHp3Q)
              (flpositive? . g$flpositive?$18144$1MHp3Q)
              (flonum? . g$flonum?$12671$1MHp3Q)
              (flodd? . g$flodd?$18148$1MHp3Q)
              (flnumerator . g$flnumerator$18106$1MHp3Q)
              (flnegative? . g$flnegative?$18145$1MHp3Q)
              (flnan? . g$flnan?$18127$1MHp3Q)
              (flmod0 . g$flmod0$18118$1MHp3Q)
              (flmod . g$flmod$18117$1MHp3Q)
              (flmin . g$flmin$18150$1MHp3Q)
              (flmax . g$flmax$18149$1MHp3Q)
              (fllog . g$fllog$18134$1MHp3Q)
              (flinteger? . g$flinteger?$18123$1MHp3Q)
              (flinfinite? . g$flinfinite?$18126$1MHp3Q)
              (flfloor . g$flfloor$18140$1MHp3Q)
              (flfinite? . g$flfinite?$18124$1MHp3Q)
              (flexpt . g$flexpt$18137$1MHp3Q)
              (flexp . g$flexp$18136$1MHp3Q)
              (fleven? . g$fleven?$18147$1MHp3Q)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$18122$1MHp3Q)
              (fldiv0 . g$fldiv0$18115$1MHp3Q)
              (fldiv-and-mod . g$fldiv-and-mod$18119$1MHp3Q)
              (fldiv . g$fldiv$18121$1MHp3Q)
              (fldenominator . g$fldenominator$18105$1MHp3Q)
              (flcos . g$flcos$18129$1MHp3Q)
              (flceiling . g$flceiling$18138$1MHp3Q)
              (flatan . g$flatan$18133$1MHp3Q)
              (flasin . g$flasin$18131$1MHp3Q)
              (flacos . g$flacos$18132$1MHp3Q)
              (flabs . g$flabs$18143$1MHp3Q)
              (fl>? . g$fl>?$18112$1MHp3Q)
              (fl>=? . g$fl>=?$18113$1MHp3Q)
              (fl=? . g$fl=?$18109$1MHp3Q)
              (fl<? . g$fl<?$18110$1MHp3Q)
              (fl<=? . g$fl<=?$18111$1MHp3Q)
              (fl/ . g$fl/$18108$1MHp3Q)
              (fl- . g$fl-$18107$1MHp3Q)
              (fl+ . g$fl+$18103$1MHp3Q)
              (fl* . g$fl*$18104$1MHp3Q)
              (fixnum->flonum . g$fixnum->flonum$13362$1MHp3Q)
              (fxzero? . g$fxzero?$16588$1MHp3Q)
              (fxxor . g$fxxor$16572$1MHp3Q)
              (fxrotate-bit-field . g$fxrotate-bit-field$16608$1MHp3Q)
              (fxreverse-bit-field . g$fxreverse-bit-field$16609$1MHp3Q)
              (fxpositive? . g$fxpositive?$16584$1MHp3Q)
              (fxodd? . g$fxodd?$16592$1MHp3Q)
              (fxnot . g$fxnot$16564$1MHp3Q)
              (fxnegative? . g$fxnegative?$16586$1MHp3Q)
              (fxmod0 . g$fxmod0$16577$1MHp3Q)
              (fxmod . g$fxmod$16576$1MHp3Q)
              (fxmin . g$fxmin$16594$1MHp3Q)
              (fxmax . g$fxmax$16593$1MHp3Q)
              (fxlength . g$fxlength$16561$1MHp3Q)
              (fxior . g$fxior$16571$1MHp3Q)
              (fxif . g$fxif$16599$1MHp3Q)
              (fxfirst-bit-set . g$fxfirst-bit-set$16562$1MHp3Q)
              (fxeven? . g$fxeven?$16590$1MHp3Q)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$16582$1MHp3Q)
              (fxdiv0 . g$fxdiv0$16580$1MHp3Q)
              (fxdiv-and-mod . g$fxdiv-and-mod$16578$1MHp3Q)
              (fxdiv . g$fxdiv$16574$1MHp3Q)
              (fxcopy-bit-field . g$fxcopy-bit-field$16605$1MHp3Q)
              (fxcopy-bit . g$fxcopy-bit$16601$1MHp3Q)
              (fxbit-set? . g$fxbit-set?$16563$1MHp3Q)
              (fxbit-field . g$fxbit-field$16603$1MHp3Q)
              (fxbit-count . g$fxbit-count$16559$1MHp3Q)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$16607$1MHp3Q)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$16606$1MHp3Q)
              (fxarithmetic-shift . g$fxarithmetic-shift$16557$1MHp3Q)
              (fxand . g$fxand$16570$1MHp3Q)
              (fx>? . g$fx>?$16568$1MHp3Q)
              (fx>=? . g$fx>=?$16569$1MHp3Q)
              (fx=? . g$fx=?$16565$1MHp3Q)
              (fx<? . g$fx<?$16566$1MHp3Q)
              (fx<=? . g$fx<=?$16567$1MHp3Q)
              (fx-/carry . g$fx-/carry$16596$1MHp3Q)
              (fx- . g$fx-$16554$1MHp3Q)
              (fx+/carry . g$fx+/carry$16597$1MHp3Q)
              (fx+ . g$fx+$16552$1MHp3Q)
              (fx*/carry . g$fx*/carry$16595$1MHp3Q)
              (fx* . g$fx*$16553$1MHp3Q)
              (greatest-fixnum . g$greatest-fixnum$16550$1MHp3Q)
              (least-fixnum . g$least-fixnum$16551$1MHp3Q)
              (fixnum-width . g$fixnum-width$12672$1MHp3Q)
              (fixnum? . g$fixnum?$12670$1MHp3Q)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$14317$1MHp3Q)
              (bitwise-if . g$bitwise-if$14311$1MHp3Q)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$14314$1MHp3Q)
              (bitwise-copy-bit . g$bitwise-copy-bit$14312$1MHp3Q)
              (bitwise-bit-field . g$bitwise-bit-field$14313$1MHp3Q)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$14316$1MHp3Q)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$14315$1MHp3Q)
              (zero? . g$zero?$13376$1MHp3Q)
              (vector? . g$vector?$12665$1MHp3Q)
              (vector-set! . g$vector-set!$12681$1MHp3Q)
              (vector-ref . g$vector-ref$12680$1MHp3Q)
              (vector-map . g$vector-map$12734$1MHp3Q)
              (vector-for-each . g$vector-for-each$12735$1MHp3Q)
              (vector-fill! . g$vector-fill!$12682$1MHp3Q)
              (truncate . g$truncate$13410$1MHp3Q)
              (tan . g$tan$13402$1MHp3Q)
              (symbol? . g$symbol?$12667$1MHp3Q)
              (symbol=? . g$symbol=?$12724$1MHp3Q)
              (string>? . g$string>?$12721$1MHp3Q)
              (string>=? . g$string>=?$12723$1MHp3Q)
              (string=? . g$string=?$12719$1MHp3Q)
              (string<? . g$string<?$12720$1MHp3Q)
              (string<=? . g$string<=?$12722$1MHp3Q)
              (string-for-each . g$string-for-each$12736$1MHp3Q)
              (sqrt . g$sqrt$13412$1MHp3Q)
              (sin . g$sin$13396$1MHp3Q)
              (round . g$round$13411$1MHp3Q)
              (reverse . g$reverse$12684$1MHp3Q)
              (real? . g$real?$13370$1MHp3Q)
              (real-valued? . g$real-valued?$13373$1MHp3Q)
              (real-part . g$real-part$13393$1MHp3Q)
              (rationalize . g$rationalize$12731$1MHp3Q)
              (rational? . g$rational?$13371$1MHp3Q)
              (rational-valued? . g$rational-valued?$13374$1MHp3Q)
              (procedure? . g$procedure?$12669$1MHp3Q)
              (positive? . g$positive?$13377$1MHp3Q)
              (odd? . g$odd?$12714$1MHp3Q)
              (numerator . g$numerator$13391$1MHp3Q)
              (number? . g$number?$13363$1MHp3Q)
              (negative? . g$negative?$13378$1MHp3Q)
              (nan? . g$nan?$13364$1MHp3Q)
              (min . g$min$12716$1MHp3Q)
              (max . g$max$12715$1MHp3Q)
              (map . g$map$11835$1MHp3Q)
              (make-rectangular . g$make-rectangular$13386$1MHp3Q)
              (make-polar . g$make-polar$13387$1MHp3Q)
              (magnitude . g$magnitude$13389$1MHp3Q)
              (log . g$log$13405$1MHp3Q)
              (list-tail . g$list-tail$11815$1MHp3Q)
              (list-ref . g$list-ref$11816$1MHp3Q)
              (list->vector . g$list->vector$12678$1MHp3Q)
              (list->string . g$list->string$12679$1MHp3Q)
              (lcm . g$lcm$12718$1MHp3Q)
              (integer? . g$integer?$13372$1MHp3Q)
              (integer-valued? . g$integer-valued?$13375$1MHp3Q)
              (infinite? . g$infinite?$13366$1MHp3Q)
              (inexact? . g$inexact?$13368$1MHp3Q)
              (inexact . g$inexact$13379$1MHp3Q)
              (imag-part . g$imag-part$13394$1MHp3Q)
              (gcd . g$gcd$12717$1MHp3Q)
              (for-each . g$for-each$11836$1MHp3Q)
              (floor . g$floor$13408$1MHp3Q)
              (finite? . g$finite?$13365$1MHp3Q)
              (expt . g$expt$13414$1MHp3Q)
              (exp . g$exp$13395$1MHp3Q)
              (exact? . g$exact?$13367$1MHp3Q)
              (exact-integer-sqrt . g$exact-integer-sqrt$13413$1MHp3Q)
              (exact . g$exact$13380$1MHp3Q)
              (even? . g$even?$12713$1MHp3Q)
              (div0-and-mod0 . g$div0-and-mod0$12677$1MHp3Q)
              (mod0 . g$mod0$12675$1MHp3Q)
              (div0 . g$div0$12673$1MHp3Q)
              (div-and-mod . g$div-and-mod$12676$1MHp3Q)
              (mod . g$mod$12674$1MHp3Q)
              (div . g$div$13406$1MHp3Q)
              (denominator . g$denominator$13392$1MHp3Q)
              (cos . g$cos$13399$1MHp3Q)
              (complex? . g$complex?$13369$1MHp3Q)
              (char? . g$char?$12664$1MHp3Q)
              (char>? . g$char>?$12728$1MHp3Q)
              (char>=? . g$char>=?$12730$1MHp3Q)
              (char=? . g$char=?$12726$1MHp3Q)
              (char<? . g$char<?$12727$1MHp3Q)
              (char<=? . g$char<=?$12729$1MHp3Q)
              (ceiling . g$ceiling$13409$1MHp3Q)
              (cddddr . g$cddddr$12712$1MHp3Q)
              (cdddar . g$cdddar$12711$1MHp3Q)
              (cddadr . g$cddadr$12710$1MHp3Q)
              (cddaar . g$cddaar$12709$1MHp3Q)
              (cdaddr . g$cdaddr$12708$1MHp3Q)
              (cdadar . g$cdadar$12707$1MHp3Q)
              (cdaadr . g$cdaadr$12706$1MHp3Q)
              (cdaaar . g$cdaaar$12705$1MHp3Q)
              (cadddr . g$cadddr$12704$1MHp3Q)
              (caddar . g$caddar$12703$1MHp3Q)
              (cadadr . g$cadadr$12702$1MHp3Q)
              (cadaar . g$cadaar$12701$1MHp3Q)
              (caaddr . g$caaddr$12700$1MHp3Q)
              (caadar . g$caadar$12699$1MHp3Q)
              (caaadr . g$caaadr$12698$1MHp3Q)
              (caaaar . g$caaaar$12697$1MHp3Q)
              (cdddr . g$cdddr$12696$1MHp3Q)
              (cddar . g$cddar$12695$1MHp3Q)
              (cdadr . g$cdadr$12694$1MHp3Q)
              (cdaar . g$cdaar$12693$1MHp3Q)
              (caddr . g$caddr$12692$1MHp3Q)
              (cadar . g$cadar$12691$1MHp3Q)
              (caadr . g$caadr$12690$1MHp3Q)
              (caaar . g$caaar$12689$1MHp3Q)
              (cddr . g$cddr$12688$1MHp3Q)
              (cdar . g$cdar$12687$1MHp3Q)
              (cadr . g$cadr$12686$1MHp3Q)
              (caar . g$caar$12685$1MHp3Q)
              (boolean? . g$boolean?$12668$1MHp3Q)
              (boolean=? . g$boolean=?$12725$1MHp3Q)
              (atan . g$atan$13404$1MHp3Q)
              (asin . g$asin$13397$1MHp3Q)
              (angle . g$angle$13388$1MHp3Q)
              (acos . g$acos$13400$1MHp3Q)
              (abs . g$abs$13407$1MHp3Q)
              (>= . g$>=$13385$1MHp3Q)
              (> . g$>$13384$1MHp3Q)
              (= . g$=$13381$1MHp3Q)
              (<= . g$<=$13383$1MHp3Q)
              (< . g$<$13382$1MHp3Q)
              (enum-set? . g$enum?$18360$1MHp3Q)
              (make-promise . g$make-promise$14091$1MHp3Q)
              (load/unload . g$load/unload$24050$1MHp3Q)
              (load/args . g$load/args$24049$1MHp3Q)
              (printf . g$printf$18415$1MHp3Q)
              (fprintf . g$fprintf$18416$1MHp3Q)
              (format . g$format$18417$1MHp3Q)
              (trace-printer . g$trace-printer$24046$1MHp3Q)
              (make-traced-macro . g$make-traced-macro$18421$1MHp3Q)
              (assertion-error . g$assertion-error$23968$1MHp3Q)
              (make-parameter . g$make-parameter$18626$1MHp3Q)
              (environment-bindings
                .
                g$environment-bindings$23946$1MHp3Q)
              (environment-symbols . g$environment-symbols$23949$1MHp3Q)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$23945$1MHp3Q)
              (library-path . g$library-path$19453$1MHp3Q)
              (make-compile-time-value
                .
                g$make-compile-time-value$23795$1MHp3Q)
              (expand->core . g$expand->core$23955$1MHp3Q)
              (expand . g$expand$23953$1MHp3Q)
              (syntax-transpose . g$syntax-transpose$23902$1MHp3Q)
              (convert->cps . g$convert->cps$19154$1MHp3Q)
              (installed-libraries . g$installed-libraries$19474$1MHp3Q)
              (uninstall-library . g$uninstall-library$19465$1MHp3Q)
              (pretty-gensyms . g$pretty-gensyms$18834$1MHp3Q)
              (pretty-width . g$pretty-width$18831$1MHp3Q)
              (pretty-print . g$pretty-print$18836$1MHp3Q)))))))
    (g$install-library$19469$1MHp3Q
      'g$13456$1MHp3Q
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$6005$1MHp3Q)
        (cosh . g$6003$1MHp3Q)
        (sinh . g$6000$1MHp3Q)
        (make-guid . g$13449$1MHp3Q)
        (unspecified? . g$13448$1MHp3Q)
        (make-list . g$5152$1MHp3Q)
        (last-pair . g$5151$1MHp3Q)
        (load-r5rs . g$13447$1MHp3Q)
        (license . g$13446$1MHp3Q)
        (stacktrace . g$13445$1MHp3Q)
        (ironscheme-build . g$12978$1MHp3Q)
        (remove-location . g$13429$1MHp3Q)
        (set-symbol-value! . g$13428$1MHp3Q)
        (symbol-value . g$13427$1MHp3Q)
        (symbol-bound? . g$13426$1MHp3Q)
        (ungensym . g$13425$1MHp3Q)
        (gensym . g$13424$1MHp3Q)
        (void . g$13423$1MHp3Q)
        (compile-system-libraries . g$12982$1MHp3Q)
        (compile->closure . g$12984$1MHp3Q)
        (compile . g$12983$1MHp3Q)
        (load . g$12977$1MHp3Q)
        (interaction-environment . g$9961$1MHp3Q)
        (string-upcase . g$13418$1MHp3Q)
        (string-titlecase . g$13417$1MHp3Q)
        (string-normalize-nfkd . g$6716$1MHp3Q)
        (string-normalize-nfkc . g$6715$1MHp3Q)
        (string-normalize-nfd . g$6714$1MHp3Q)
        (string-normalize-nfc . g$6713$1MHp3Q)
        (string-foldcase . g$13416$1MHp3Q)
        (string-downcase . g$13415$1MHp3Q)
        (string-ci>? . g$6700$1MHp3Q)
        (string-ci>=? . g$6702$1MHp3Q)
        (string-ci=? . g$6698$1MHp3Q)
        (string-ci<? . g$6699$1MHp3Q)
        (string-ci<=? . g$6701$1MHp3Q)
        (char-whitespace? . g$13414$1MHp3Q)
        (char-upper-case? . g$13413$1MHp3Q)
        (char-title-case? . g$13412$1MHp3Q)
        (char-numeric? . g$13411$1MHp3Q)
        (char-lower-case? . g$13410$1MHp3Q)
        (char-general-category . g$13409$1MHp3Q)
        (char-upcase . g$13408$1MHp3Q)
        (char-titlecase . g$13407$1MHp3Q)
        (char-foldcase . g$13406$1MHp3Q)
        (char-downcase . g$13405$1MHp3Q)
        (char-ci>? . g$6710$1MHp3Q)
        (char-ci>=? . g$6712$1MHp3Q)
        (char-ci=? . g$6708$1MHp3Q)
        (char-ci<? . g$6709$1MHp3Q)
        (char-ci<=? . g$6711$1MHp3Q)
        (char-alphabetic? . g$13404$1MHp3Q)
        (make-variable-transformer . g$9635$1MHp3Q)
        (identifier? . g$9955$1MHp3Q)
        (generate-temporaries . g$9944$1MHp3Q)
        (free-identifier=? . g$9945$1MHp3Q)
        (syntax->datum . g$9957$1MHp3Q)
        (datum->syntax . g$9956$1MHp3Q)
        (bound-identifier=? . g$9946$1MHp3Q)
        (record-type-descriptor? . g$13403$1MHp3Q)
        (record-predicate . g$13402$1MHp3Q)
        (record-mutator . g$13401$1MHp3Q)
        (record-constructor . g$13400$1MHp3Q)
        (record-accessor . g$13399$1MHp3Q)
        (make-record-type-descriptor . g$13398$1MHp3Q)
        (make-record-constructor-descriptor . g$13397$1MHp3Q)
        (record? . g$13396$1MHp3Q)
        (record-type-uid . g$13395$1MHp3Q)
        (record-type-sealed? . g$13394$1MHp3Q)
        (record-type-parent . g$13393$1MHp3Q)
        (record-type-opaque? . g$13392$1MHp3Q)
        (record-type-name . g$13391$1MHp3Q)
        (record-type-generative? . g$13390$1MHp3Q)
        (record-type-field-names . g$13389$1MHp3Q)
        (record-rtd . g$13388$1MHp3Q)
        (record-field-mutable? . g$13387$1MHp3Q)
        (delete-file . g$5812$1MHp3Q)
        (file-exists? . g$5811$1MHp3Q)
        (vector-sort! . g$13386$1MHp3Q)
        (vector-sort . g$13385$1MHp3Q)
        (list-sort . g$6669$1MHp3Q)
        (symbol-hash . g$13384$1MHp3Q)
        (string-ci-hash . g$13383$1MHp3Q)
        (string-hash . g$13382$1MHp3Q)
        (equal-hash . g$13381$1MHp3Q)
        (hashtable-equivalence-function . g$13380$1MHp3Q)
        (make-hashtable . g$13379$1MHp3Q)
        (hashtable-hash-function . g$13378$1MHp3Q)
        (make-eqv-hashtable . g$5779$1MHp3Q)
        (make-eq-hashtable . g$5778$1MHp3Q)
        (hashtable? . g$13377$1MHp3Q)
        (hashtable-update! . g$5785$1MHp3Q)
        (hashtable-size . g$5780$1MHp3Q)
        (hashtable-set! . g$5782$1MHp3Q)
        (hashtable-ref . g$5781$1MHp3Q)
        (hashtable-mutable? . g$13376$1MHp3Q)
        (hashtable-keys . g$13375$1MHp3Q)
        (hashtable-entries . g$13374$1MHp3Q)
        (hashtable-delete! . g$5783$1MHp3Q)
        (hashtable-copy . g$13373$1MHp3Q)
        (hashtable-contains? . g$5784$1MHp3Q)
        (hashtable-clear! . g$5786$1MHp3Q)
        (call-with-output-file . g$8459$1MHp3Q)
        (call-with-input-file . g$8458$1MHp3Q)
        (write-char . g$8450$1MHp3Q)
        (write . g$13372$1MHp3Q)
        (with-output-to-file . g$8457$1MHp3Q)
        (with-input-from-file . g$8456$1MHp3Q)
        (read-char . g$8449$1MHp3Q)
        (read . g$13371$1MHp3Q)
        (peek-char . g$8448$1MHp3Q)
        (open-output-file . g$13370$1MHp3Q)
        (open-input-file . g$13369$1MHp3Q)
        (newline . g$8460$1MHp3Q)
        (display . g$13368$1MHp3Q)
        (close-output-port . g$13367$1MHp3Q)
        (close-input-port . g$13366$1MHp3Q)
        (eof-object? . g$13365$1MHp3Q)
        (eof-object . g$13364$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (utf-8-codec . g$13358$1MHp3Q)
        (utf-16-codec . g$13357$1MHp3Q)
        (transcoder-error-handling-mode . g$13356$1MHp3Q)
        (transcoder-eol-style . g$13355$1MHp3Q)
        (transcoder-codec . g$13354$1MHp3Q)
        (transcoded-port . g$13353$1MHp3Q)
        (textual-port? . g$13352$1MHp3Q)
        (string->bytevector . g$13351$1MHp3Q)
        (standard-output-port . g$13350$1MHp3Q)
        (standard-input-port . g$13349$1MHp3Q)
        (standard-error-port . g$13348$1MHp3Q)
        (set-port-position! . g$13347$1MHp3Q)
        (put-u8 . g$13346$1MHp3Q)
        (put-string . g$13345$1MHp3Q)
        (put-datum . g$8428$1MHp3Q)
        (put-char . g$13344$1MHp3Q)
        (put-bytevector . g$13343$1MHp3Q)
        (port? . g$8433$1MHp3Q)
        (port-transcoder . g$13342$1MHp3Q)
        (port-position . g$13341$1MHp3Q)
        (port-has-set-port-position!? . g$13340$1MHp3Q)
        (port-has-port-position? . g$13339$1MHp3Q)
        (port-eof? . g$13338$1MHp3Q)
        (output-port-buffer-mode . g$13337$1MHp3Q)
        (open-string-output-port . g$8432$1MHp3Q)
        (open-string-input-port . g$13336$1MHp3Q)
        (open-file-output-port . g$13335$1MHp3Q)
        (open-file-input/output-port . g$13334$1MHp3Q)
        (open-file-input-port . g$13333$1MHp3Q)
        (open-bytevector-output-port . g$13332$1MHp3Q)
        (open-bytevector-input-port . g$13331$1MHp3Q)
        (native-transcoder . g$13330$1MHp3Q)
        (native-eol-style . g$13329$1MHp3Q)
        (make-transcoder . g$13328$1MHp3Q)
        (latin-1-codec . g$13327$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (make-i/o-encoding-error . g$6602$1MHp3Q)
        (make-i/o-decoding-error . g$6589$1MHp3Q)
        (make-custom-textual-output-port . g$13326$1MHp3Q)
        (make-custom-textual-input/output-port . g$13325$1MHp3Q)
        (make-custom-textual-input-port . g$13324$1MHp3Q)
        (make-custom-binary-output-port . g$13323$1MHp3Q)
        (make-custom-binary-input/output-port . g$13322$1MHp3Q)
        (make-custom-binary-input-port . g$13321$1MHp3Q)
        (make-bytevector . g$13320$1MHp3Q)
        (lookahead-u8 . g$13319$1MHp3Q)
        (lookahead-char . g$13318$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (i/o-encoding-error? . g$6604$1MHp3Q)
        (i/o-encoding-error-char . g$6605$1MHp3Q)
        (i/o-decoding-error? . g$6590$1MHp3Q)
        (get-u8 . g$13317$1MHp3Q)
        (get-string-n! . g$13316$1MHp3Q)
        (get-string-n . g$13315$1MHp3Q)
        (get-string-all . g$13314$1MHp3Q)
        (get-line . g$13313$1MHp3Q)
        (get-datum . g$8429$1MHp3Q)
        (get-char . g$13312$1MHp3Q)
        (get-bytevector-some . g$13311$1MHp3Q)
        (get-bytevector-n! . g$13310$1MHp3Q)
        (get-bytevector-n . g$13309$1MHp3Q)
        (get-bytevector-all . g$13308$1MHp3Q)
        (flush-output-port . g$13307$1MHp3Q)
        (close-port . g$13306$1MHp3Q)
        (call-with-string-output-port . g$8434$1MHp3Q)
        (call-with-port . g$8435$1MHp3Q)
        (call-with-bytevector-output-port . g$13305$1MHp3Q)
        (bytevector->string . g$13304$1MHp3Q)
        (buffer-mode? . g$13303$1MHp3Q)
        (binary-port? . g$13302$1MHp3Q)
        (scheme-report-environment . g$9934$1MHp3Q)
        (quotient . g$6648$1MHp3Q)
        (null-environment . g$9933$1MHp3Q)
        (remainder . g$6649$1MHp3Q)
        (modulo . g$6650$1MHp3Q)
        (inexact->exact . g$6645$1MHp3Q)
        (force . g$6652$1MHp3Q)
        (exact->inexact . g$6646$1MHp3Q)
        (exit . g$13301$1MHp3Q)
        (command-line . g$12973$1MHp3Q)
        (string-fill! . g$13300$1MHp3Q)
        (string-set! . g$13299$1MHp3Q)
        (set-cdr! . g$13298$1MHp3Q)
        (set-car! . g$13297$1MHp3Q)
        (remove . g$5174$1MHp3Q)
        (remv . g$5175$1MHp3Q)
        (remp . g$5155$1MHp3Q)
        (remq . g$5176$1MHp3Q)
        (partition . g$5154$1MHp3Q)
        (memv . g$5162$1MHp3Q)
        (memq . g$5161$1MHp3Q)
        (memp . g$5164$1MHp3Q)
        (member . g$5163$1MHp3Q)
        (exists . g$5168$1MHp3Q)
        (for-all . g$5167$1MHp3Q)
        (fold-right . g$5173$1MHp3Q)
        (fold-left . g$5172$1MHp3Q)
        (find . g$5153$1MHp3Q)
        (filter . g$5156$1MHp3Q)
        (cons* . g$5171$1MHp3Q)
        (assv . g$5158$1MHp3Q)
        (assq . g$5157$1MHp3Q)
        (assp . g$5160$1MHp3Q)
        (assoc . g$5159$1MHp3Q)
        (with-exception-handler . g$13296$1MHp3Q)
        (raise-continuable . g$13295$1MHp3Q)
        (raise . g$13294$1MHp3Q)
        (eval . g$9936$1MHp3Q)
        (environment . g$9932$1MHp3Q)
        (make-enumeration . g$8520$1MHp3Q)
        (enum-set=? . g$8527$1MHp3Q)
        (enum-set-universe . g$8521$1MHp3Q)
        (enum-set-union . g$8528$1MHp3Q)
        (enum-set-subset? . g$8526$1MHp3Q)
        (enum-set-projection . g$8532$1MHp3Q)
        (enum-set-member? . g$8525$1MHp3Q)
        (enum-set-intersection . g$8529$1MHp3Q)
        (enum-set-indexer . g$8522$1MHp3Q)
        (enum-set-difference . g$8530$1MHp3Q)
        (enum-set-constructor . g$8523$1MHp3Q)
        (enum-set-complement . g$8531$1MHp3Q)
        (enum-set->list . g$8524$1MHp3Q)
        (who-condition? . g$6371$1MHp3Q)
        (warning? . g$6290$1MHp3Q)
        (violation? . g$6329$1MHp3Q)
        (undefined-violation? . g$6441$1MHp3Q)
        (syntax-violation? . g$6426$1MHp3Q)
        (syntax-violation-subform . g$6428$1MHp3Q)
        (syntax-violation-form . g$6427$1MHp3Q)
        (syntax-violation . g$9954$1MHp3Q)
        (simple-conditions . g$13293$1MHp3Q)
        (serious-condition? . g$6303$1MHp3Q)
        (non-continuable-violation? . g$6385$1MHp3Q)
        (message-condition? . g$6276$1MHp3Q)
        (make-who-condition . g$6369$1MHp3Q)
        (make-warning . g$6289$1MHp3Q)
        (make-violation . g$6328$1MHp3Q)
        (make-undefined-violation . g$6440$1MHp3Q)
        (make-syntax-violation . g$6423$1MHp3Q)
        (make-serious-condition . g$6302$1MHp3Q)
        (make-non-continuable-violation . g$6384$1MHp3Q)
        (make-message-condition . g$6274$1MHp3Q)
        (make-lexical-violation . g$6410$1MHp3Q)
        (make-irritants-condition . g$6354$1MHp3Q)
        (make-implementation-restriction-violation . g$6397$1MHp3Q)
        (make-error . g$6315$1MHp3Q)
        (make-assertion-violation . g$6341$1MHp3Q)
        (lexical-violation? . g$6411$1MHp3Q)
        (irritants-condition? . g$6356$1MHp3Q)
        (implementation-restriction-violation? . g$6398$1MHp3Q)
        (error? . g$6316$1MHp3Q)
        (condition-who . g$6372$1MHp3Q)
        (condition-predicate . g$13292$1MHp3Q)
        (condition-message . g$6277$1MHp3Q)
        (condition-irritants . g$6357$1MHp3Q)
        (condition-accessor . g$13291$1MHp3Q)
        (condition . g$13290$1MHp3Q)
        (assertion-violation? . g$6342$1MHp3Q)
        (condition? . g$13289$1MHp3Q)
        (utf32->string . g$13288$1MHp3Q)
        (utf16->string . g$13287$1MHp3Q)
        (utf8->string . g$13286$1MHp3Q)
        (uint-list->bytevector . g$13285$1MHp3Q)
        (u8-list->bytevector . g$13284$1MHp3Q)
        (string->utf8 . g$13283$1MHp3Q)
        (string->utf32 . g$13282$1MHp3Q)
        (string->utf16 . g$13281$1MHp3Q)
        (sint-list->bytevector . g$13280$1MHp3Q)
        (native-endianness . g$5818$1MHp3Q)
        (bytevector? . g$5508$1MHp3Q)
        (bytevector=? . g$13279$1MHp3Q)
        (bytevector-uint-set! . g$13278$1MHp3Q)
        (bytevector-uint-ref . g$13277$1MHp3Q)
        (bytevector-u8-set! . g$13276$1MHp3Q)
        (bytevector-u8-ref . g$13275$1MHp3Q)
        (bytevector-u64-set! . g$5839$1MHp3Q)
        (bytevector-u64-ref . g$5835$1MHp3Q)
        (bytevector-u64-native-set! . g$5841$1MHp3Q)
        (bytevector-u64-native-ref . g$5837$1MHp3Q)
        (bytevector-u32-set! . g$5831$1MHp3Q)
        (bytevector-u32-ref . g$5827$1MHp3Q)
        (bytevector-u32-native-set! . g$5833$1MHp3Q)
        (bytevector-u32-native-ref . g$5829$1MHp3Q)
        (bytevector-u16-set! . g$5823$1MHp3Q)
        (bytevector-u16-ref . g$5819$1MHp3Q)
        (bytevector-u16-native-set! . g$5825$1MHp3Q)
        (bytevector-u16-native-ref . g$5821$1MHp3Q)
        (bytevector-sint-set! . g$13274$1MHp3Q)
        (bytevector-sint-ref . g$13273$1MHp3Q)
        (bytevector-s8-set! . g$13272$1MHp3Q)
        (bytevector-s8-ref . g$13271$1MHp3Q)
        (bytevector-s64-set! . g$5840$1MHp3Q)
        (bytevector-s64-ref . g$5836$1MHp3Q)
        (bytevector-s64-native-set! . g$5842$1MHp3Q)
        (bytevector-s64-native-ref . g$5838$1MHp3Q)
        (bytevector-s32-set! . g$5832$1MHp3Q)
        (bytevector-s32-ref . g$5828$1MHp3Q)
        (bytevector-s32-native-set! . g$5834$1MHp3Q)
        (bytevector-s32-native-ref . g$5830$1MHp3Q)
        (bytevector-s16-set! . g$5824$1MHp3Q)
        (bytevector-s16-ref . g$5820$1MHp3Q)
        (bytevector-s16-native-set! . g$5826$1MHp3Q)
        (bytevector-s16-native-ref . g$5822$1MHp3Q)
        (bytevector-length . g$13270$1MHp3Q)
        (bytevector-ieee-single-set! . g$13269$1MHp3Q)
        (bytevector-ieee-single-ref . g$13268$1MHp3Q)
        (bytevector-ieee-single-native-set! . g$5845$1MHp3Q)
        (bytevector-ieee-single-native-ref . g$5843$1MHp3Q)
        (bytevector-ieee-double-set! . g$13267$1MHp3Q)
        (bytevector-ieee-double-ref . g$13266$1MHp3Q)
        (bytevector-ieee-double-native-set! . g$5846$1MHp3Q)
        (bytevector-ieee-double-native-ref . g$5844$1MHp3Q)
        (bytevector-fill! . g$13265$1MHp3Q)
        (bytevector-copy! . g$13264$1MHp3Q)
        (bytevector-copy . g$13263$1MHp3Q)
        (bytevector->uint-list . g$13262$1MHp3Q)
        (bytevector->u8-list . g$13261$1MHp3Q)
        (bytevector->sint-list . g$13260$1MHp3Q)
        (no-nans-violation? . g$6631$1MHp3Q)
        (no-infinities-violation? . g$6618$1MHp3Q)
        (make-no-nans-violation . g$6630$1MHp3Q)
        (make-no-infinities-violation . g$6617$1MHp3Q)
        (real->flonum . g$5949$1MHp3Q)
        (flzero? . g$7870$1MHp3Q)
        (fltruncate . g$7865$1MHp3Q)
        (fltan . g$7851$1MHp3Q)
        (flsqrt . g$7856$1MHp3Q)
        (flsin . g$7849$1MHp3Q)
        (flround . g$7866$1MHp3Q)
        (flpositive? . g$7868$1MHp3Q)
        (flonum? . g$5513$1MHp3Q)
        (flodd? . g$7872$1MHp3Q)
        (flnumerator . g$7815$1MHp3Q)
        (flnegative? . g$7869$1MHp3Q)
        (flnan? . g$7848$1MHp3Q)
        (flmod0 . g$7833$1MHp3Q)
        (flmod . g$7832$1MHp3Q)
        (flmin . g$7874$1MHp3Q)
        (flmax . g$7873$1MHp3Q)
        (fllog . g$7855$1MHp3Q)
        (flinteger? . g$7841$1MHp3Q)
        (flinfinite? . g$7847$1MHp3Q)
        (flfloor . g$7864$1MHp3Q)
        (flfinite? . g$7842$1MHp3Q)
        (flexpt . g$7858$1MHp3Q)
        (flexp . g$7857$1MHp3Q)
        (fleven? . g$7871$1MHp3Q)
        (fldiv0-and-mod0 . g$7840$1MHp3Q)
        (fldiv0 . g$7827$1MHp3Q)
        (fldiv-and-mod . g$7834$1MHp3Q)
        (fldiv . g$7839$1MHp3Q)
        (fldenominator . g$7814$1MHp3Q)
        (flcos . g$7850$1MHp3Q)
        (flceiling . g$7859$1MHp3Q)
        (flatan . g$7854$1MHp3Q)
        (flasin . g$7852$1MHp3Q)
        (flacos . g$7853$1MHp3Q)
        (flabs . g$7867$1MHp3Q)
        (fl>? . g$7821$1MHp3Q)
        (fl>=? . g$7822$1MHp3Q)
        (fl=? . g$7818$1MHp3Q)
        (fl<? . g$7819$1MHp3Q)
        (fl<=? . g$7820$1MHp3Q)
        (fl/ . g$7817$1MHp3Q)
        (fl- . g$7816$1MHp3Q)
        (fl+ . g$7812$1MHp3Q)
        (fl* . g$7813$1MHp3Q)
        (fixnum->flonum . g$5950$1MHp3Q)
        (fxzero? . g$6912$1MHp3Q)
        (fxxor . g$6875$1MHp3Q)
        (fxrotate-bit-field . g$6950$1MHp3Q)
        (fxreverse-bit-field . g$6951$1MHp3Q)
        (fxpositive? . g$6902$1MHp3Q)
        (fxodd? . g$6922$1MHp3Q)
        (fxnot . g$6856$1MHp3Q)
        (fxnegative? . g$6907$1MHp3Q)
        (fxmod0 . g$6886$1MHp3Q)
        (fxmod . g$6885$1MHp3Q)
        (fxmin . g$6924$1MHp3Q)
        (fxmax . g$6923$1MHp3Q)
        (fxlength . g$6853$1MHp3Q)
        (fxior . g$6874$1MHp3Q)
        (fxif . g$6932$1MHp3Q)
        (fxfirst-bit-set . g$6854$1MHp3Q)
        (fxeven? . g$6917$1MHp3Q)
        (fxdiv0-and-mod0 . g$6897$1MHp3Q)
        (fxdiv0 . g$6892$1MHp3Q)
        (fxdiv-and-mod . g$6887$1MHp3Q)
        (fxdiv . g$6880$1MHp3Q)
        (fxcopy-bit-field . g$6947$1MHp3Q)
        (fxcopy-bit . g$6937$1MHp3Q)
        (fxbit-set? . g$6855$1MHp3Q)
        (fxbit-field . g$6942$1MHp3Q)
        (fxbit-count . g$6848$1MHp3Q)
        (fxarithmetic-shift-right . g$6949$1MHp3Q)
        (fxarithmetic-shift-left . g$6948$1MHp3Q)
        (fxarithmetic-shift . g$6843$1MHp3Q)
        (fxand . g$6873$1MHp3Q)
        (fx>? . g$6865$1MHp3Q)
        (fx>=? . g$6866$1MHp3Q)
        (fx=? . g$6862$1MHp3Q)
        (fx<? . g$6863$1MHp3Q)
        (fx<=? . g$6864$1MHp3Q)
        (fx-/carry . g$6926$1MHp3Q)
        (fx- . g$6837$1MHp3Q)
        (fx+/carry . g$6927$1MHp3Q)
        (fx+ . g$6835$1MHp3Q)
        (fx*/carry . g$6925$1MHp3Q)
        (fx* . g$6836$1MHp3Q)
        (greatest-fixnum . g$6806$1MHp3Q)
        (least-fixnum . g$6807$1MHp3Q)
        (fixnum-width . g$5514$1MHp3Q)
        (fixnum? . g$5512$1MHp3Q)
        (bitwise-rotate-bit-field . g$6780$1MHp3Q)
        (bitwise-reverse-bit-field . g$13259$1MHp3Q)
        (bitwise-length . g$13258$1MHp3Q)
        (bitwise-if . g$6774$1MHp3Q)
        (bitwise-first-bit-set . g$13257$1MHp3Q)
        (bitwise-copy-bit-field . g$6777$1MHp3Q)
        (bitwise-copy-bit . g$6775$1MHp3Q)
        (bitwise-bit-set? . g$13256$1MHp3Q)
        (bitwise-bit-field . g$6776$1MHp3Q)
        (bitwise-bit-count . g$13255$1MHp3Q)
        (bitwise-xor . g$13254$1MHp3Q)
        (bitwise-ior . g$13253$1MHp3Q)
        (bitwise-and . g$13252$1MHp3Q)
        (bitwise-not . g$13251$1MHp3Q)
        (bitwise-arithmetic-shift-right . g$6779$1MHp3Q)
        (bitwise-arithmetic-shift-left . g$6778$1MHp3Q)
        (bitwise-arithmetic-shift . g$13250$1MHp3Q)
        (zero? . g$5964$1MHp3Q)
        (vector? . g$5507$1MHp3Q)
        (vector-set! . g$5523$1MHp3Q)
        (vector-ref . g$5522$1MHp3Q)
        (vector-map . g$5586$1MHp3Q)
        (vector-length . g$13249$1MHp3Q)
        (vector-for-each . g$5587$1MHp3Q)
        (vector-fill! . g$5524$1MHp3Q)
        (vector->list . g$13248$1MHp3Q)
        (vector . g$13247$1MHp3Q)
        (values . g$13246$1MHp3Q)
        (truncate . g$6012$1MHp3Q)
        (tan . g$6004$1MHp3Q)
        (symbol? . g$5509$1MHp3Q)
        (symbol=? . g$5571$1MHp3Q)
        (symbol->string . g$13245$1MHp3Q)
        (substring . g$13244$1MHp3Q)
        (string? . g$13243$1MHp3Q)
        (string>? . g$5568$1MHp3Q)
        (string>=? . g$5570$1MHp3Q)
        (string=? . g$5566$1MHp3Q)
        (string<? . g$5567$1MHp3Q)
        (string<=? . g$5569$1MHp3Q)
        (string-ref . g$13242$1MHp3Q)
        (string-length . g$13241$1MHp3Q)
        (string-for-each . g$5588$1MHp3Q)
        (string-copy . g$13240$1MHp3Q)
        (string-append . g$13239$1MHp3Q)
        (string->symbol . g$13238$1MHp3Q)
        (string->number . g$13237$1MHp3Q)
        (string->list . g$13236$1MHp3Q)
        (string . g$13235$1MHp3Q)
        (sqrt . g$6014$1MHp3Q)
        (sin . g$5998$1MHp3Q)
        (round . g$6013$1MHp3Q)
        (reverse . g$5526$1MHp3Q)
        (real? . g$5958$1MHp3Q)
        (real-valued? . g$5961$1MHp3Q)
        (real-part . g$5991$1MHp3Q)
        (rationalize . g$5583$1MHp3Q)
        (rational? . g$5959$1MHp3Q)
        (rational-valued? . g$5962$1MHp3Q)
        (procedure? . g$5511$1MHp3Q)
        (positive? . g$5965$1MHp3Q)
        (pair? . g$13234$1MHp3Q)
        (odd? . g$5556$1MHp3Q)
        (numerator . g$5989$1MHp3Q)
        (number? . g$5951$1MHp3Q)
        (number->string . g$13233$1MHp3Q)
        (null? . g$13232$1MHp3Q)
        (not . g$13231$1MHp3Q)
        (negative? . g$5966$1MHp3Q)
        (nan? . g$5952$1MHp3Q)
        (min . g$5558$1MHp3Q)
        (max . g$5557$1MHp3Q)
        (map . g$5169$1MHp3Q)
        (make-vector . g$13230$1MHp3Q)
        (make-string . g$13229$1MHp3Q)
        (make-rectangular . g$5984$1MHp3Q)
        (make-polar . g$5985$1MHp3Q)
        (magnitude . g$5987$1MHp3Q)
        (log . g$6007$1MHp3Q)
        (list? . g$13228$1MHp3Q)
        (list-tail . g$5149$1MHp3Q)
        (list-ref . g$5150$1MHp3Q)
        (list->vector . g$5520$1MHp3Q)
        (list->string . g$5521$1MHp3Q)
        (list . g$13227$1MHp3Q)
        (length . g$13226$1MHp3Q)
        (lcm . g$5560$1MHp3Q)
        (integer? . g$5960$1MHp3Q)
        (integer-valued? . g$5963$1MHp3Q)
        (integer->char . g$13225$1MHp3Q)
        (infinite? . g$5954$1MHp3Q)
        (inexact? . g$5956$1MHp3Q)
        (inexact . g$5967$1MHp3Q)
        (imag-part . g$5992$1MHp3Q)
        (gcd . g$5559$1MHp3Q)
        (for-each . g$5170$1MHp3Q)
        (floor . g$6010$1MHp3Q)
        (finite? . g$5953$1MHp3Q)
        (expt . g$6016$1MHp3Q)
        (exp . g$5997$1MHp3Q)
        (exact? . g$5955$1MHp3Q)
        (exact-integer-sqrt . g$6015$1MHp3Q)
        (exact . g$5968$1MHp3Q)
        (even? . g$5555$1MHp3Q)
        (error . g$13224$1MHp3Q)
        (eqv? . g$13223$1MHp3Q)
        (equal? . g$13222$1MHp3Q)
        (eq? . g$13221$1MHp3Q)
        (dynamic-wind . g$13220$1MHp3Q)
        (div0-and-mod0 . g$5519$1MHp3Q)
        (mod0 . g$5517$1MHp3Q)
        (div0 . g$5515$1MHp3Q)
        (div-and-mod . g$5518$1MHp3Q)
        (mod . g$5516$1MHp3Q)
        (div . g$6008$1MHp3Q)
        (denominator . g$5990$1MHp3Q)
        (cos . g$6001$1MHp3Q)
        (cons . g$13219$1MHp3Q)
        (complex? . g$5957$1MHp3Q)
        (char? . g$5506$1MHp3Q)
        (char>? . g$5580$1MHp3Q)
        (char>=? . g$5582$1MHp3Q)
        (char=? . g$5578$1MHp3Q)
        (char<? . g$5579$1MHp3Q)
        (char<=? . g$5581$1MHp3Q)
        (char->integer . g$13218$1MHp3Q)
        (ceiling . g$6011$1MHp3Q)
        (call-with-values . g$13217$1MHp3Q)
        (call/cc . g$13216$1MHp3Q)
        (call-with-current-continuation . g$13215$1MHp3Q)
        (cddddr . g$5554$1MHp3Q)
        (cdddar . g$5553$1MHp3Q)
        (cddadr . g$5552$1MHp3Q)
        (cddaar . g$5551$1MHp3Q)
        (cdaddr . g$5550$1MHp3Q)
        (cdadar . g$5549$1MHp3Q)
        (cdaadr . g$5548$1MHp3Q)
        (cdaaar . g$5547$1MHp3Q)
        (cadddr . g$5546$1MHp3Q)
        (caddar . g$5545$1MHp3Q)
        (cadadr . g$5544$1MHp3Q)
        (cadaar . g$5543$1MHp3Q)
        (caaddr . g$5542$1MHp3Q)
        (caadar . g$5541$1MHp3Q)
        (caaadr . g$5540$1MHp3Q)
        (caaaar . g$5539$1MHp3Q)
        (cdddr . g$5538$1MHp3Q)
        (cddar . g$5537$1MHp3Q)
        (cdadr . g$5536$1MHp3Q)
        (cdaar . g$5535$1MHp3Q)
        (caddr . g$5534$1MHp3Q)
        (cadar . g$5533$1MHp3Q)
        (caadr . g$5532$1MHp3Q)
        (caaar . g$5531$1MHp3Q)
        (cddr . g$5530$1MHp3Q)
        (cdar . g$5529$1MHp3Q)
        (cadr . g$5528$1MHp3Q)
        (caar . g$5527$1MHp3Q)
        (cdr . g$13214$1MHp3Q)
        (car . g$13213$1MHp3Q)
        (boolean? . g$5510$1MHp3Q)
        (boolean=? . g$5572$1MHp3Q)
        (atan . g$6006$1MHp3Q)
        (assertion-violation . g$13212$1MHp3Q)
        (asin . g$5999$1MHp3Q)
        (apply . g$13211$1MHp3Q)
        (append . g$13210$1MHp3Q)
        (angle . g$5986$1MHp3Q)
        (acos . g$6002$1MHp3Q)
        (abs . g$6009$1MHp3Q)
        (/ . g$13209$1MHp3Q)
        (* . g$13208$1MHp3Q)
        (- . g$13207$1MHp3Q)
        (+ . g$13206$1MHp3Q)
        (>= . g$5983$1MHp3Q)
        (> . g$5982$1MHp3Q)
        (= . g$5979$1MHp3Q)
        (<= . g$5981$1MHp3Q)
        (< . g$5980$1MHp3Q)
        (deserialize-port . g$13169$1MHp3Q)
        (serialize-port . g$13168$1MHp3Q)
        (enum-set? . g$8497$1MHp3Q)
        (load/unload . g$12976$1MHp3Q)
        (load/args . g$12975$1MHp3Q)
        (printf . g$8606$1MHp3Q)
        (fprintf . g$8607$1MHp3Q)
        (format . g$8608$1MHp3Q)
        (procedure-form . g$13167$1MHp3Q)
        (procedure-environment . g$13166$1MHp3Q)
        (procedure-name . g$13165$1MHp3Q)
        (procedure-arity . g$13164$1MHp3Q)
        (gc-collect . g$13163$1MHp3Q)
        (typeof . g$13162$1MHp3Q)
        (clr-type? . g$13161$1MHp3Q)
        (get-clr-type . g$13160$1MHp3Q)
        (vector-append . g$13158$1MHp3Q)
        (vector-filter . g$13157$1MHp3Q)
        (vector-reverse! . g$13156$1MHp3Q)
        (vector-contains? . g$13155$1MHp3Q)
        (vector-index-of . g$13154$1MHp3Q)
        (vector-copy . g$13153$1MHp3Q)
        (vector-binary-search . g$13152$1MHp3Q)
        (string-ci-compare . g$13151$1MHp3Q)
        (string-compare . g$13150$1MHp3Q)
        (string-format . g$13149$1MHp3Q)
        (trace-printer . g$12972$1MHp3Q)
        (time-it . g$13147$1MHp3Q)
        (make-parameter . g$8635$1MHp3Q)
        (open-tcp-input/output-port . g$13144$1MHp3Q)
        (hashtable-for-each . g$13143$1MHp3Q)
        (hashtable-map . g$13142$1MHp3Q)
        (environment-bindings . g$9928$1MHp3Q)
        (environment-symbols . g$9931$1MHp3Q)
        (interaction-environment-symbols . g$9927$1MHp3Q)
        (optimization-level . g$13141$1MHp3Q)
        (library-path . g$9257$1MHp3Q)
        (make-compile-time-value . g$9636$1MHp3Q)
        (expand->core . g$9937$1MHp3Q)
        (expand . g$9935$1MHp3Q)
        (syntax-transpose . g$9874$1MHp3Q)
        (convert->cps . g$8954$1MHp3Q)
        (installed-libraries . g$9278$1MHp3Q)
        (uninstall-library . g$9269$1MHp3Q)
        (pretty-gensyms . g$8718$1MHp3Q)
        (pretty-width . g$8715$1MHp3Q)
        (pretty-print . g$8720$1MHp3Q)
        (pointer+ . g$13135$1MHp3Q)
        (&no-nans . g$13134$1MHp3Q)
        (&no-infinities . g$13133$1MHp3Q)
        (&i/o-encoding . g$13132$1MHp3Q)
        (&i/o-decoding . g$13131$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q)
        (&non-continuable . g$13120$1MHp3Q)
        (&undefined . g$13119$1MHp3Q)
        (&syntax . g$13118$1MHp3Q)
        (&lexical . g$13117$1MHp3Q)
        (&implementation-restriction . g$13116$1MHp3Q)
        (&who . g$13115$1MHp3Q)
        (&irritants . g$13114$1MHp3Q)
        (&assertion . g$13113$1MHp3Q)
        (&violation . g$13112$1MHp3Q)
        (&error . g$13111$1MHp3Q)
        (&serious . g$13110$1MHp3Q)
        (&warning . g$13109$1MHp3Q)
        (&message . g$13108$1MHp3Q)
        (&condition . g$13107$1MHp3Q)
        (define-condition-type . g$13106$1MHp3Q)
        (define-enumeration . g$13105$1MHp3Q)
        (define-record-type . g$13104$1MHp3Q)
        (parent-rtd . g$13103$1MHp3Q)
        (nongenerative . g$13102$1MHp3Q)
        (opaque . g$13101$1MHp3Q)
        (sealed . g$13100$1MHp3Q)
        (protocol . g$13099$1MHp3Q)
        (parent . g$13098$1MHp3Q)
        (immutable . g$13097$1MHp3Q)
        (mutable . g$13096$1MHp3Q)
        (fields . g$13095$1MHp3Q)
        (error-handling-mode . g$13094$1MHp3Q)
        (file-options . g$13093$1MHp3Q)
        (buffer-mode . g$13092$1MHp3Q)
        (eol-style . g$13091$1MHp3Q)
        (guard . g$13090$1MHp3Q)
        (trace-letrec-syntax . g$13089$1MHp3Q)
        (trace-let-syntax . g$13088$1MHp3Q)
        (trace-define-syntax . g$13087$1MHp3Q)
        (trace-define . g$13086$1MHp3Q)
        (trace-lambda . g$13085$1MHp3Q)
        (unsyntax-splicing . g$13084$1MHp3Q)
        (unsyntax . g$13083$1MHp3Q)
        (unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (_ . g$13080$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (assert . g$13076$1MHp3Q)
        (endianness . g$13075$1MHp3Q)
        (delay . g$13074$1MHp3Q)
        (time . g$13073$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (do . g$13070$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (identifier-syntax . g$13066$1MHp3Q)
        (with-syntax . g$13065$1MHp3Q)
        (quasisyntax . g$13064$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (include-into . g$13061$1MHp3Q)
        (include . g$13060$1MHp3Q)
        (let-values . g$13058$1MHp3Q)
        (let*-values . g$13057$1MHp3Q)
        (record-constructor-descriptor . g$13056$1MHp3Q)
        (record-type-descriptor . g$13055$1MHp3Q)
        (fluid-let-syntax . g$13054$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (parameterize . g$13052$1MHp3Q)
        (unless . g$13051$1MHp3Q)
        (when . g$13050$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec* . g$13048$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (case-lambda . g$13045$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (syntax . g$13043$1MHp3Q)
        (syntax-case . g$13042$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (export . g$13036$1MHp3Q)
        (import . g$13035$1MHp3Q)
        (library . g$13034$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (module . g$13032$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13457$1MHp3Q
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13145$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13458$1MHp3Q
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13454$1MHp3Q)
        (annotation-source . g$13453$1MHp3Q)
        (annotation-expression . g$13452$1MHp3Q)
        (annotation? . g$13451$1MHp3Q)
        (read-annotated . g$13450$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13459$1MHp3Q
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13422$1MHp3Q)
        (serialize-library . g$13421$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13460$1MHp3Q
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13420$1MHp3Q)
        (variable-transformer-procedure . g$9638$1MHp3Q)
        (variable-transformer? . g$9637$1MHp3Q)
        (eqv-hash . g$13171$1MHp3Q)
        (reverse! . g$13170$1MHp3Q)
        (make-promise . g$6651$1MHp3Q)
        (format . g$8608$1MHp3Q)
        (get-command-line . g$13159$1MHp3Q)
        (make-traced-procedure . g$13148$1MHp3Q)
        (make-traced-macro . g$8628$1MHp3Q)
        (assertion-error . g$9950$1MHp3Q)
        (library-locator . g$13146$1MHp3Q)
        (get-library-paths . g$13145$1MHp3Q)
        (library-path . g$9257$1MHp3Q)
        (inexact=? . g$13140$1MHp3Q)
        (bignum-sqrt-exact . g$13139$1MHp3Q)
        (bignum-sqrt . g$13138$1MHp3Q)
        (inexact-compare . g$13137$1MHp3Q)
        (exact-compare . g$13136$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13461$1MHp3Q
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($fl>=? . g$13205$1MHp3Q)
        ($fl>? . g$13204$1MHp3Q)
        ($fl<=? . g$13203$1MHp3Q)
        ($fl<? . g$13202$1MHp3Q)
        ($fl- . g$13201$1MHp3Q)
        ($fl/ . g$13200$1MHp3Q)
        ($fl* . g$13199$1MHp3Q)
        ($fl+ . g$13198$1MHp3Q)
        ($fl=? . g$13197$1MHp3Q)
        ($try . g$13196$1MHp3Q)
        ($fxarithmetic-shift-right . g$13195$1MHp3Q)
        ($fxarithmetic-shift-left . g$13194$1MHp3Q)
        ($$fx- . g$13193$1MHp3Q)
        ($$fx* . g$13192$1MHp3Q)
        ($$fx+ . g$13191$1MHp3Q)
        ($fxnot . g$13190$1MHp3Q)
        ($fxxor . g$13189$1MHp3Q)
        ($fxior . g$13188$1MHp3Q)
        ($fxand . g$13187$1MHp3Q)
        ($fx>=? . g$13186$1MHp3Q)
        ($fx>? . g$13185$1MHp3Q)
        ($fx<=? . g$13184$1MHp3Q)
        ($fx<? . g$13183$1MHp3Q)
        ($fx- . g$13182$1MHp3Q)
        ($fxmod0 . g$13181$1MHp3Q)
        ($fxdiv0 . g$13180$1MHp3Q)
        ($fx* . g$13179$1MHp3Q)
        ($fx+ . g$13178$1MHp3Q)
        ($fx=? . g$13177$1MHp3Q)
        ($vector-set! . g$13176$1MHp3Q)
        ($vector-ref . g$13175$1MHp3Q)
        ($cdr . g$13174$1MHp3Q)
        ($car . g$13173$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13462$1MHp3Q
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13172$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13463$1MHp3Q
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13444$1MHp3Q)
        (ffi-callback-internal . g$13443$1MHp3Q)
        (ffi-callout-internal . g$13442$1MHp3Q)
        (define-clr-class-internal . g$13441$1MHp3Q)
        (clr-field-set!-internal . g$13440$1MHp3Q)
        (clr-field-get-internal . g$13439$1MHp3Q)
        (clr-cast-internal . g$13438$1MHp3Q)
        (clr-call-internal . g$13437$1MHp3Q)
        (clr-new-internal . g$13436$1MHp3Q)
        (clr-new-array-internal . g$13435$1MHp3Q)
        (clr-is-internal . g$13434$1MHp3Q)
        (clr-reference-internal . g$13433$1MHp3Q)
        (clr-using-internal . g$13432$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13464$1MHp3Q
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (delay . g$13074$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (do . g$13070$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13465$1MHp3Q
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13419$1MHp3Q)
        (string-ci>? . g$6700$1MHp3Q)
        (string-ci>=? . g$6702$1MHp3Q)
        (string-ci=? . g$6698$1MHp3Q)
        (string-ci<? . g$6699$1MHp3Q)
        (string-ci<=? . g$6701$1MHp3Q)
        (char-whitespace? . g$13414$1MHp3Q)
        (char-upper-case? . g$13413$1MHp3Q)
        (char-numeric? . g$13411$1MHp3Q)
        (char-lower-case? . g$13410$1MHp3Q)
        (char-upcase . g$13408$1MHp3Q)
        (char-downcase . g$13405$1MHp3Q)
        (char-ci>? . g$6710$1MHp3Q)
        (char-ci>=? . g$6712$1MHp3Q)
        (char-ci=? . g$6708$1MHp3Q)
        (char-ci<? . g$6709$1MHp3Q)
        (char-ci<=? . g$6711$1MHp3Q)
        (char-alphabetic? . g$13404$1MHp3Q)
        (call-with-output-file . g$8459$1MHp3Q)
        (call-with-input-file . g$8458$1MHp3Q)
        (write-char . g$8450$1MHp3Q)
        (write . g$13372$1MHp3Q)
        (with-output-to-file . g$8457$1MHp3Q)
        (with-input-from-file . g$8456$1MHp3Q)
        (read-char . g$8449$1MHp3Q)
        (read . g$13371$1MHp3Q)
        (peek-char . g$8448$1MHp3Q)
        (open-output-file . g$13370$1MHp3Q)
        (open-input-file . g$13369$1MHp3Q)
        (newline . g$8460$1MHp3Q)
        (display . g$13368$1MHp3Q)
        (close-output-port . g$13367$1MHp3Q)
        (close-input-port . g$13366$1MHp3Q)
        (eof-object? . g$13365$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (scheme-report-environment . g$9934$1MHp3Q)
        (quotient . g$6648$1MHp3Q)
        (null-environment . g$9933$1MHp3Q)
        (remainder . g$6649$1MHp3Q)
        (modulo . g$6650$1MHp3Q)
        (inexact->exact . g$6645$1MHp3Q)
        (force . g$6652$1MHp3Q)
        (exact->inexact . g$6646$1MHp3Q)
        (string-fill! . g$13300$1MHp3Q)
        (string-set! . g$13299$1MHp3Q)
        (set-cdr! . g$13298$1MHp3Q)
        (set-car! . g$13297$1MHp3Q)
        (memv . g$5162$1MHp3Q)
        (memq . g$5161$1MHp3Q)
        (member . g$5163$1MHp3Q)
        (assv . g$5158$1MHp3Q)
        (assq . g$5157$1MHp3Q)
        (assoc . g$5159$1MHp3Q)
        (eval . g$9936$1MHp3Q)
        (zero? . g$5964$1MHp3Q)
        (vector? . g$5507$1MHp3Q)
        (vector-set! . g$5523$1MHp3Q)
        (vector-ref . g$5522$1MHp3Q)
        (vector-length . g$13249$1MHp3Q)
        (vector-fill! . g$5524$1MHp3Q)
        (vector->list . g$13248$1MHp3Q)
        (vector . g$13247$1MHp3Q)
        (values . g$13246$1MHp3Q)
        (truncate . g$6012$1MHp3Q)
        (tan . g$6004$1MHp3Q)
        (symbol? . g$5509$1MHp3Q)
        (symbol->string . g$13245$1MHp3Q)
        (substring . g$13244$1MHp3Q)
        (string? . g$13243$1MHp3Q)
        (string>? . g$5568$1MHp3Q)
        (string>=? . g$5570$1MHp3Q)
        (string=? . g$5566$1MHp3Q)
        (string<? . g$5567$1MHp3Q)
        (string<=? . g$5569$1MHp3Q)
        (string-ref . g$13242$1MHp3Q)
        (string-length . g$13241$1MHp3Q)
        (string-copy . g$13240$1MHp3Q)
        (string-append . g$13239$1MHp3Q)
        (string->symbol . g$13238$1MHp3Q)
        (string->number . g$13237$1MHp3Q)
        (string->list . g$13236$1MHp3Q)
        (string . g$13235$1MHp3Q)
        (sqrt . g$6014$1MHp3Q)
        (sin . g$5998$1MHp3Q)
        (round . g$6013$1MHp3Q)
        (reverse . g$5526$1MHp3Q)
        (real? . g$5958$1MHp3Q)
        (real-part . g$5991$1MHp3Q)
        (rationalize . g$5583$1MHp3Q)
        (rational? . g$5959$1MHp3Q)
        (procedure? . g$5511$1MHp3Q)
        (positive? . g$5965$1MHp3Q)
        (pair? . g$13234$1MHp3Q)
        (odd? . g$5556$1MHp3Q)
        (numerator . g$5989$1MHp3Q)
        (number? . g$5951$1MHp3Q)
        (number->string . g$13233$1MHp3Q)
        (null? . g$13232$1MHp3Q)
        (not . g$13231$1MHp3Q)
        (negative? . g$5966$1MHp3Q)
        (min . g$5558$1MHp3Q)
        (max . g$5557$1MHp3Q)
        (map . g$5169$1MHp3Q)
        (make-vector . g$13230$1MHp3Q)
        (make-string . g$13229$1MHp3Q)
        (make-rectangular . g$5984$1MHp3Q)
        (make-polar . g$5985$1MHp3Q)
        (magnitude . g$5987$1MHp3Q)
        (log . g$6007$1MHp3Q)
        (list? . g$13228$1MHp3Q)
        (list-tail . g$5149$1MHp3Q)
        (list-ref . g$5150$1MHp3Q)
        (list->vector . g$5520$1MHp3Q)
        (list->string . g$5521$1MHp3Q)
        (list . g$13227$1MHp3Q)
        (length . g$13226$1MHp3Q)
        (lcm . g$5560$1MHp3Q)
        (integer? . g$5960$1MHp3Q)
        (integer->char . g$13225$1MHp3Q)
        (inexact? . g$5956$1MHp3Q)
        (imag-part . g$5992$1MHp3Q)
        (gcd . g$5559$1MHp3Q)
        (for-each . g$5170$1MHp3Q)
        (floor . g$6010$1MHp3Q)
        (expt . g$6016$1MHp3Q)
        (exp . g$5997$1MHp3Q)
        (exact? . g$5955$1MHp3Q)
        (even? . g$5555$1MHp3Q)
        (eqv? . g$13223$1MHp3Q)
        (equal? . g$13222$1MHp3Q)
        (eq? . g$13221$1MHp3Q)
        (dynamic-wind . g$13220$1MHp3Q)
        (denominator . g$5990$1MHp3Q)
        (cos . g$6001$1MHp3Q)
        (cons . g$13219$1MHp3Q)
        (complex? . g$5957$1MHp3Q)
        (char? . g$5506$1MHp3Q)
        (char>? . g$5580$1MHp3Q)
        (char>=? . g$5582$1MHp3Q)
        (char=? . g$5578$1MHp3Q)
        (char<? . g$5579$1MHp3Q)
        (char<=? . g$5581$1MHp3Q)
        (char->integer . g$13218$1MHp3Q)
        (ceiling . g$6011$1MHp3Q)
        (call-with-values . g$13217$1MHp3Q)
        (call-with-current-continuation . g$13215$1MHp3Q)
        (cddddr . g$5554$1MHp3Q)
        (cdddar . g$5553$1MHp3Q)
        (cddadr . g$5552$1MHp3Q)
        (cddaar . g$5551$1MHp3Q)
        (cdaddr . g$5550$1MHp3Q)
        (cdadar . g$5549$1MHp3Q)
        (cdaadr . g$5548$1MHp3Q)
        (cdaaar . g$5547$1MHp3Q)
        (cadddr . g$5546$1MHp3Q)
        (caddar . g$5545$1MHp3Q)
        (cadadr . g$5544$1MHp3Q)
        (cadaar . g$5543$1MHp3Q)
        (caaddr . g$5542$1MHp3Q)
        (caadar . g$5541$1MHp3Q)
        (caaadr . g$5540$1MHp3Q)
        (caaaar . g$5539$1MHp3Q)
        (cdddr . g$5538$1MHp3Q)
        (cddar . g$5537$1MHp3Q)
        (cdadr . g$5536$1MHp3Q)
        (cdaar . g$5535$1MHp3Q)
        (caddr . g$5534$1MHp3Q)
        (cadar . g$5533$1MHp3Q)
        (caadr . g$5532$1MHp3Q)
        (caaar . g$5531$1MHp3Q)
        (cddr . g$5530$1MHp3Q)
        (cdar . g$5529$1MHp3Q)
        (cadr . g$5528$1MHp3Q)
        (caar . g$5527$1MHp3Q)
        (cdr . g$13214$1MHp3Q)
        (car . g$13213$1MHp3Q)
        (boolean? . g$5510$1MHp3Q)
        (atan . g$6006$1MHp3Q)
        (asin . g$5999$1MHp3Q)
        (apply . g$13211$1MHp3Q)
        (append . g$13210$1MHp3Q)
        (angle . g$5986$1MHp3Q)
        (acos . g$6002$1MHp3Q)
        (abs . g$6009$1MHp3Q)
        (/ . g$13209$1MHp3Q)
        (* . g$13208$1MHp3Q)
        (- . g$13207$1MHp3Q)
        (+ . g$13206$1MHp3Q)
        (>= . g$5983$1MHp3Q)
        (> . g$5982$1MHp3Q)
        (= . g$5979$1MHp3Q)
        (<= . g$5981$1MHp3Q)
        (< . g$5980$1MHp3Q)
        (unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (delay . g$13074$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (do . g$13070$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13466$1MHp3Q
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13418$1MHp3Q)
        (string-titlecase . g$13417$1MHp3Q)
        (string-normalize-nfkd . g$6716$1MHp3Q)
        (string-normalize-nfkc . g$6715$1MHp3Q)
        (string-normalize-nfd . g$6714$1MHp3Q)
        (string-normalize-nfc . g$6713$1MHp3Q)
        (string-foldcase . g$13416$1MHp3Q)
        (string-downcase . g$13415$1MHp3Q)
        (string-ci>? . g$6700$1MHp3Q)
        (string-ci>=? . g$6702$1MHp3Q)
        (string-ci=? . g$6698$1MHp3Q)
        (string-ci<? . g$6699$1MHp3Q)
        (string-ci<=? . g$6701$1MHp3Q)
        (char-whitespace? . g$13414$1MHp3Q)
        (char-upper-case? . g$13413$1MHp3Q)
        (char-title-case? . g$13412$1MHp3Q)
        (char-numeric? . g$13411$1MHp3Q)
        (char-lower-case? . g$13410$1MHp3Q)
        (char-general-category . g$13409$1MHp3Q)
        (char-upcase . g$13408$1MHp3Q)
        (char-titlecase . g$13407$1MHp3Q)
        (char-foldcase . g$13406$1MHp3Q)
        (char-downcase . g$13405$1MHp3Q)
        (char-ci>? . g$6710$1MHp3Q)
        (char-ci>=? . g$6712$1MHp3Q)
        (char-ci=? . g$6708$1MHp3Q)
        (char-ci<? . g$6709$1MHp3Q)
        (char-ci<=? . g$6711$1MHp3Q)
        (char-alphabetic? . g$13404$1MHp3Q)
        (make-variable-transformer . g$9635$1MHp3Q)
        (identifier? . g$9955$1MHp3Q)
        (generate-temporaries . g$9944$1MHp3Q)
        (free-identifier=? . g$9945$1MHp3Q)
        (syntax->datum . g$9957$1MHp3Q)
        (datum->syntax . g$9956$1MHp3Q)
        (bound-identifier=? . g$9946$1MHp3Q)
        (record-type-descriptor? . g$13403$1MHp3Q)
        (record-predicate . g$13402$1MHp3Q)
        (record-mutator . g$13401$1MHp3Q)
        (record-constructor . g$13400$1MHp3Q)
        (record-accessor . g$13399$1MHp3Q)
        (make-record-type-descriptor . g$13398$1MHp3Q)
        (make-record-constructor-descriptor . g$13397$1MHp3Q)
        (record? . g$13396$1MHp3Q)
        (record-type-uid . g$13395$1MHp3Q)
        (record-type-sealed? . g$13394$1MHp3Q)
        (record-type-parent . g$13393$1MHp3Q)
        (record-type-opaque? . g$13392$1MHp3Q)
        (record-type-name . g$13391$1MHp3Q)
        (record-type-generative? . g$13390$1MHp3Q)
        (record-type-field-names . g$13389$1MHp3Q)
        (record-rtd . g$13388$1MHp3Q)
        (record-field-mutable? . g$13387$1MHp3Q)
        (delete-file . g$5812$1MHp3Q)
        (file-exists? . g$5811$1MHp3Q)
        (vector-sort! . g$13386$1MHp3Q)
        (vector-sort . g$13385$1MHp3Q)
        (list-sort . g$6669$1MHp3Q)
        (symbol-hash . g$13384$1MHp3Q)
        (string-ci-hash . g$13383$1MHp3Q)
        (string-hash . g$13382$1MHp3Q)
        (equal-hash . g$13381$1MHp3Q)
        (hashtable-equivalence-function . g$13380$1MHp3Q)
        (make-hashtable . g$13379$1MHp3Q)
        (hashtable-hash-function . g$13378$1MHp3Q)
        (make-eqv-hashtable . g$5779$1MHp3Q)
        (make-eq-hashtable . g$5778$1MHp3Q)
        (hashtable? . g$13377$1MHp3Q)
        (hashtable-update! . g$5785$1MHp3Q)
        (hashtable-size . g$5780$1MHp3Q)
        (hashtable-set! . g$5782$1MHp3Q)
        (hashtable-ref . g$5781$1MHp3Q)
        (hashtable-mutable? . g$13376$1MHp3Q)
        (hashtable-keys . g$13375$1MHp3Q)
        (hashtable-entries . g$13374$1MHp3Q)
        (hashtable-delete! . g$5783$1MHp3Q)
        (hashtable-copy . g$13373$1MHp3Q)
        (hashtable-contains? . g$5784$1MHp3Q)
        (hashtable-clear! . g$5786$1MHp3Q)
        (call-with-output-file . g$8459$1MHp3Q)
        (call-with-input-file . g$8458$1MHp3Q)
        (write-char . g$8450$1MHp3Q)
        (write . g$13372$1MHp3Q)
        (with-output-to-file . g$8457$1MHp3Q)
        (with-input-from-file . g$8456$1MHp3Q)
        (read-char . g$8449$1MHp3Q)
        (read . g$13371$1MHp3Q)
        (peek-char . g$8448$1MHp3Q)
        (open-output-file . g$13370$1MHp3Q)
        (open-input-file . g$13369$1MHp3Q)
        (newline . g$8460$1MHp3Q)
        (display . g$13368$1MHp3Q)
        (close-output-port . g$13367$1MHp3Q)
        (close-input-port . g$13366$1MHp3Q)
        (eof-object? . g$13365$1MHp3Q)
        (eof-object . g$13364$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (utf-8-codec . g$13358$1MHp3Q)
        (utf-16-codec . g$13357$1MHp3Q)
        (transcoder-error-handling-mode . g$13356$1MHp3Q)
        (transcoder-eol-style . g$13355$1MHp3Q)
        (transcoder-codec . g$13354$1MHp3Q)
        (transcoded-port . g$13353$1MHp3Q)
        (textual-port? . g$13352$1MHp3Q)
        (string->bytevector . g$13351$1MHp3Q)
        (standard-output-port . g$13350$1MHp3Q)
        (standard-input-port . g$13349$1MHp3Q)
        (standard-error-port . g$13348$1MHp3Q)
        (set-port-position! . g$13347$1MHp3Q)
        (put-u8 . g$13346$1MHp3Q)
        (put-string . g$13345$1MHp3Q)
        (put-datum . g$8428$1MHp3Q)
        (put-char . g$13344$1MHp3Q)
        (put-bytevector . g$13343$1MHp3Q)
        (port? . g$8433$1MHp3Q)
        (port-transcoder . g$13342$1MHp3Q)
        (port-position . g$13341$1MHp3Q)
        (port-has-set-port-position!? . g$13340$1MHp3Q)
        (port-has-port-position? . g$13339$1MHp3Q)
        (port-eof? . g$13338$1MHp3Q)
        (output-port-buffer-mode . g$13337$1MHp3Q)
        (open-string-output-port . g$8432$1MHp3Q)
        (open-string-input-port . g$13336$1MHp3Q)
        (open-file-output-port . g$13335$1MHp3Q)
        (open-file-input/output-port . g$13334$1MHp3Q)
        (open-file-input-port . g$13333$1MHp3Q)
        (open-bytevector-output-port . g$13332$1MHp3Q)
        (open-bytevector-input-port . g$13331$1MHp3Q)
        (native-transcoder . g$13330$1MHp3Q)
        (native-eol-style . g$13329$1MHp3Q)
        (make-transcoder . g$13328$1MHp3Q)
        (latin-1-codec . g$13327$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (make-i/o-encoding-error . g$6602$1MHp3Q)
        (make-i/o-decoding-error . g$6589$1MHp3Q)
        (make-custom-textual-output-port . g$13326$1MHp3Q)
        (make-custom-textual-input/output-port . g$13325$1MHp3Q)
        (make-custom-textual-input-port . g$13324$1MHp3Q)
        (make-custom-binary-output-port . g$13323$1MHp3Q)
        (make-custom-binary-input/output-port . g$13322$1MHp3Q)
        (make-custom-binary-input-port . g$13321$1MHp3Q)
        (make-bytevector . g$13320$1MHp3Q)
        (lookahead-u8 . g$13319$1MHp3Q)
        (lookahead-char . g$13318$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (i/o-encoding-error? . g$6604$1MHp3Q)
        (i/o-encoding-error-char . g$6605$1MHp3Q)
        (i/o-decoding-error? . g$6590$1MHp3Q)
        (get-u8 . g$13317$1MHp3Q)
        (get-string-n! . g$13316$1MHp3Q)
        (get-string-n . g$13315$1MHp3Q)
        (get-string-all . g$13314$1MHp3Q)
        (get-line . g$13313$1MHp3Q)
        (get-datum . g$8429$1MHp3Q)
        (get-char . g$13312$1MHp3Q)
        (get-bytevector-some . g$13311$1MHp3Q)
        (get-bytevector-n! . g$13310$1MHp3Q)
        (get-bytevector-n . g$13309$1MHp3Q)
        (get-bytevector-all . g$13308$1MHp3Q)
        (flush-output-port . g$13307$1MHp3Q)
        (close-port . g$13306$1MHp3Q)
        (call-with-string-output-port . g$8434$1MHp3Q)
        (call-with-port . g$8435$1MHp3Q)
        (call-with-bytevector-output-port . g$13305$1MHp3Q)
        (bytevector->string . g$13304$1MHp3Q)
        (buffer-mode? . g$13303$1MHp3Q)
        (binary-port? . g$13302$1MHp3Q)
        (exit . g$13301$1MHp3Q)
        (command-line . g$12973$1MHp3Q)
        (remove . g$5174$1MHp3Q)
        (remv . g$5175$1MHp3Q)
        (remp . g$5155$1MHp3Q)
        (remq . g$5176$1MHp3Q)
        (partition . g$5154$1MHp3Q)
        (memv . g$5162$1MHp3Q)
        (memq . g$5161$1MHp3Q)
        (memp . g$5164$1MHp3Q)
        (member . g$5163$1MHp3Q)
        (exists . g$5168$1MHp3Q)
        (for-all . g$5167$1MHp3Q)
        (fold-right . g$5173$1MHp3Q)
        (fold-left . g$5172$1MHp3Q)
        (find . g$5153$1MHp3Q)
        (filter . g$5156$1MHp3Q)
        (cons* . g$5171$1MHp3Q)
        (assv . g$5158$1MHp3Q)
        (assq . g$5157$1MHp3Q)
        (assp . g$5160$1MHp3Q)
        (assoc . g$5159$1MHp3Q)
        (with-exception-handler . g$13296$1MHp3Q)
        (raise-continuable . g$13295$1MHp3Q)
        (raise . g$13294$1MHp3Q)
        (make-enumeration . g$8520$1MHp3Q)
        (enum-set=? . g$8527$1MHp3Q)
        (enum-set-universe . g$8521$1MHp3Q)
        (enum-set-union . g$8528$1MHp3Q)
        (enum-set-subset? . g$8526$1MHp3Q)
        (enum-set-projection . g$8532$1MHp3Q)
        (enum-set-member? . g$8525$1MHp3Q)
        (enum-set-intersection . g$8529$1MHp3Q)
        (enum-set-indexer . g$8522$1MHp3Q)
        (enum-set-difference . g$8530$1MHp3Q)
        (enum-set-constructor . g$8523$1MHp3Q)
        (enum-set-complement . g$8531$1MHp3Q)
        (enum-set->list . g$8524$1MHp3Q)
        (who-condition? . g$6371$1MHp3Q)
        (warning? . g$6290$1MHp3Q)
        (violation? . g$6329$1MHp3Q)
        (undefined-violation? . g$6441$1MHp3Q)
        (syntax-violation? . g$6426$1MHp3Q)
        (syntax-violation-subform . g$6428$1MHp3Q)
        (syntax-violation-form . g$6427$1MHp3Q)
        (syntax-violation . g$9954$1MHp3Q)
        (simple-conditions . g$13293$1MHp3Q)
        (serious-condition? . g$6303$1MHp3Q)
        (non-continuable-violation? . g$6385$1MHp3Q)
        (message-condition? . g$6276$1MHp3Q)
        (make-who-condition . g$6369$1MHp3Q)
        (make-warning . g$6289$1MHp3Q)
        (make-violation . g$6328$1MHp3Q)
        (make-undefined-violation . g$6440$1MHp3Q)
        (make-syntax-violation . g$6423$1MHp3Q)
        (make-serious-condition . g$6302$1MHp3Q)
        (make-non-continuable-violation . g$6384$1MHp3Q)
        (make-message-condition . g$6274$1MHp3Q)
        (make-lexical-violation . g$6410$1MHp3Q)
        (make-irritants-condition . g$6354$1MHp3Q)
        (make-implementation-restriction-violation . g$6397$1MHp3Q)
        (make-error . g$6315$1MHp3Q)
        (make-assertion-violation . g$6341$1MHp3Q)
        (lexical-violation? . g$6411$1MHp3Q)
        (irritants-condition? . g$6356$1MHp3Q)
        (implementation-restriction-violation? . g$6398$1MHp3Q)
        (error? . g$6316$1MHp3Q)
        (condition-who . g$6372$1MHp3Q)
        (condition-predicate . g$13292$1MHp3Q)
        (condition-message . g$6277$1MHp3Q)
        (condition-irritants . g$6357$1MHp3Q)
        (condition-accessor . g$13291$1MHp3Q)
        (condition . g$13290$1MHp3Q)
        (assertion-violation? . g$6342$1MHp3Q)
        (condition? . g$13289$1MHp3Q)
        (utf32->string . g$13288$1MHp3Q)
        (utf16->string . g$13287$1MHp3Q)
        (utf8->string . g$13286$1MHp3Q)
        (uint-list->bytevector . g$13285$1MHp3Q)
        (u8-list->bytevector . g$13284$1MHp3Q)
        (string->utf8 . g$13283$1MHp3Q)
        (string->utf32 . g$13282$1MHp3Q)
        (string->utf16 . g$13281$1MHp3Q)
        (sint-list->bytevector . g$13280$1MHp3Q)
        (native-endianness . g$5818$1MHp3Q)
        (bytevector? . g$5508$1MHp3Q)
        (bytevector=? . g$13279$1MHp3Q)
        (bytevector-uint-set! . g$13278$1MHp3Q)
        (bytevector-uint-ref . g$13277$1MHp3Q)
        (bytevector-u8-set! . g$13276$1MHp3Q)
        (bytevector-u8-ref . g$13275$1MHp3Q)
        (bytevector-u64-set! . g$5839$1MHp3Q)
        (bytevector-u64-ref . g$5835$1MHp3Q)
        (bytevector-u64-native-set! . g$5841$1MHp3Q)
        (bytevector-u64-native-ref . g$5837$1MHp3Q)
        (bytevector-u32-set! . g$5831$1MHp3Q)
        (bytevector-u32-ref . g$5827$1MHp3Q)
        (bytevector-u32-native-set! . g$5833$1MHp3Q)
        (bytevector-u32-native-ref . g$5829$1MHp3Q)
        (bytevector-u16-set! . g$5823$1MHp3Q)
        (bytevector-u16-ref . g$5819$1MHp3Q)
        (bytevector-u16-native-set! . g$5825$1MHp3Q)
        (bytevector-u16-native-ref . g$5821$1MHp3Q)
        (bytevector-sint-set! . g$13274$1MHp3Q)
        (bytevector-sint-ref . g$13273$1MHp3Q)
        (bytevector-s8-set! . g$13272$1MHp3Q)
        (bytevector-s8-ref . g$13271$1MHp3Q)
        (bytevector-s64-set! . g$5840$1MHp3Q)
        (bytevector-s64-ref . g$5836$1MHp3Q)
        (bytevector-s64-native-set! . g$5842$1MHp3Q)
        (bytevector-s64-native-ref . g$5838$1MHp3Q)
        (bytevector-s32-set! . g$5832$1MHp3Q)
        (bytevector-s32-ref . g$5828$1MHp3Q)
        (bytevector-s32-native-set! . g$5834$1MHp3Q)
        (bytevector-s32-native-ref . g$5830$1MHp3Q)
        (bytevector-s16-set! . g$5824$1MHp3Q)
        (bytevector-s16-ref . g$5820$1MHp3Q)
        (bytevector-s16-native-set! . g$5826$1MHp3Q)
        (bytevector-s16-native-ref . g$5822$1MHp3Q)
        (bytevector-length . g$13270$1MHp3Q)
        (bytevector-ieee-single-set! . g$13269$1MHp3Q)
        (bytevector-ieee-single-ref . g$13268$1MHp3Q)
        (bytevector-ieee-single-native-set! . g$5845$1MHp3Q)
        (bytevector-ieee-single-native-ref . g$5843$1MHp3Q)
        (bytevector-ieee-double-set! . g$13267$1MHp3Q)
        (bytevector-ieee-double-ref . g$13266$1MHp3Q)
        (bytevector-ieee-double-native-set! . g$5846$1MHp3Q)
        (bytevector-ieee-double-native-ref . g$5844$1MHp3Q)
        (bytevector-fill! . g$13265$1MHp3Q)
        (bytevector-copy! . g$13264$1MHp3Q)
        (bytevector-copy . g$13263$1MHp3Q)
        (bytevector->uint-list . g$13262$1MHp3Q)
        (bytevector->u8-list . g$13261$1MHp3Q)
        (bytevector->sint-list . g$13260$1MHp3Q)
        (no-nans-violation? . g$6631$1MHp3Q)
        (no-infinities-violation? . g$6618$1MHp3Q)
        (make-no-nans-violation . g$6630$1MHp3Q)
        (make-no-infinities-violation . g$6617$1MHp3Q)
        (real->flonum . g$5949$1MHp3Q)
        (flzero? . g$7870$1MHp3Q)
        (fltruncate . g$7865$1MHp3Q)
        (fltan . g$7851$1MHp3Q)
        (flsqrt . g$7856$1MHp3Q)
        (flsin . g$7849$1MHp3Q)
        (flround . g$7866$1MHp3Q)
        (flpositive? . g$7868$1MHp3Q)
        (flonum? . g$5513$1MHp3Q)
        (flodd? . g$7872$1MHp3Q)
        (flnumerator . g$7815$1MHp3Q)
        (flnegative? . g$7869$1MHp3Q)
        (flnan? . g$7848$1MHp3Q)
        (flmod0 . g$7833$1MHp3Q)
        (flmod . g$7832$1MHp3Q)
        (flmin . g$7874$1MHp3Q)
        (flmax . g$7873$1MHp3Q)
        (fllog . g$7855$1MHp3Q)
        (flinteger? . g$7841$1MHp3Q)
        (flinfinite? . g$7847$1MHp3Q)
        (flfloor . g$7864$1MHp3Q)
        (flfinite? . g$7842$1MHp3Q)
        (flexpt . g$7858$1MHp3Q)
        (flexp . g$7857$1MHp3Q)
        (fleven? . g$7871$1MHp3Q)
        (fldiv0-and-mod0 . g$7840$1MHp3Q)
        (fldiv0 . g$7827$1MHp3Q)
        (fldiv-and-mod . g$7834$1MHp3Q)
        (fldiv . g$7839$1MHp3Q)
        (fldenominator . g$7814$1MHp3Q)
        (flcos . g$7850$1MHp3Q)
        (flceiling . g$7859$1MHp3Q)
        (flatan . g$7854$1MHp3Q)
        (flasin . g$7852$1MHp3Q)
        (flacos . g$7853$1MHp3Q)
        (flabs . g$7867$1MHp3Q)
        (fl>? . g$7821$1MHp3Q)
        (fl>=? . g$7822$1MHp3Q)
        (fl=? . g$7818$1MHp3Q)
        (fl<? . g$7819$1MHp3Q)
        (fl<=? . g$7820$1MHp3Q)
        (fl/ . g$7817$1MHp3Q)
        (fl- . g$7816$1MHp3Q)
        (fl+ . g$7812$1MHp3Q)
        (fl* . g$7813$1MHp3Q)
        (fixnum->flonum . g$5950$1MHp3Q)
        (fxzero? . g$6912$1MHp3Q)
        (fxxor . g$6875$1MHp3Q)
        (fxrotate-bit-field . g$6950$1MHp3Q)
        (fxreverse-bit-field . g$6951$1MHp3Q)
        (fxpositive? . g$6902$1MHp3Q)
        (fxodd? . g$6922$1MHp3Q)
        (fxnot . g$6856$1MHp3Q)
        (fxnegative? . g$6907$1MHp3Q)
        (fxmod0 . g$6886$1MHp3Q)
        (fxmod . g$6885$1MHp3Q)
        (fxmin . g$6924$1MHp3Q)
        (fxmax . g$6923$1MHp3Q)
        (fxlength . g$6853$1MHp3Q)
        (fxior . g$6874$1MHp3Q)
        (fxif . g$6932$1MHp3Q)
        (fxfirst-bit-set . g$6854$1MHp3Q)
        (fxeven? . g$6917$1MHp3Q)
        (fxdiv0-and-mod0 . g$6897$1MHp3Q)
        (fxdiv0 . g$6892$1MHp3Q)
        (fxdiv-and-mod . g$6887$1MHp3Q)
        (fxdiv . g$6880$1MHp3Q)
        (fxcopy-bit-field . g$6947$1MHp3Q)
        (fxcopy-bit . g$6937$1MHp3Q)
        (fxbit-set? . g$6855$1MHp3Q)
        (fxbit-field . g$6942$1MHp3Q)
        (fxbit-count . g$6848$1MHp3Q)
        (fxarithmetic-shift-right . g$6949$1MHp3Q)
        (fxarithmetic-shift-left . g$6948$1MHp3Q)
        (fxarithmetic-shift . g$6843$1MHp3Q)
        (fxand . g$6873$1MHp3Q)
        (fx>? . g$6865$1MHp3Q)
        (fx>=? . g$6866$1MHp3Q)
        (fx=? . g$6862$1MHp3Q)
        (fx<? . g$6863$1MHp3Q)
        (fx<=? . g$6864$1MHp3Q)
        (fx-/carry . g$6926$1MHp3Q)
        (fx- . g$6837$1MHp3Q)
        (fx+/carry . g$6927$1MHp3Q)
        (fx+ . g$6835$1MHp3Q)
        (fx*/carry . g$6925$1MHp3Q)
        (fx* . g$6836$1MHp3Q)
        (greatest-fixnum . g$6806$1MHp3Q)
        (least-fixnum . g$6807$1MHp3Q)
        (fixnum-width . g$5514$1MHp3Q)
        (fixnum? . g$5512$1MHp3Q)
        (bitwise-rotate-bit-field . g$6780$1MHp3Q)
        (bitwise-reverse-bit-field . g$13259$1MHp3Q)
        (bitwise-length . g$13258$1MHp3Q)
        (bitwise-if . g$6774$1MHp3Q)
        (bitwise-first-bit-set . g$13257$1MHp3Q)
        (bitwise-copy-bit-field . g$6777$1MHp3Q)
        (bitwise-copy-bit . g$6775$1MHp3Q)
        (bitwise-bit-set? . g$13256$1MHp3Q)
        (bitwise-bit-field . g$6776$1MHp3Q)
        (bitwise-bit-count . g$13255$1MHp3Q)
        (bitwise-xor . g$13254$1MHp3Q)
        (bitwise-ior . g$13253$1MHp3Q)
        (bitwise-and . g$13252$1MHp3Q)
        (bitwise-not . g$13251$1MHp3Q)
        (bitwise-arithmetic-shift-right . g$6779$1MHp3Q)
        (bitwise-arithmetic-shift-left . g$6778$1MHp3Q)
        (bitwise-arithmetic-shift . g$13250$1MHp3Q)
        (zero? . g$5964$1MHp3Q)
        (vector? . g$5507$1MHp3Q)
        (vector-set! . g$5523$1MHp3Q)
        (vector-ref . g$5522$1MHp3Q)
        (vector-map . g$5586$1MHp3Q)
        (vector-length . g$13249$1MHp3Q)
        (vector-for-each . g$5587$1MHp3Q)
        (vector-fill! . g$5524$1MHp3Q)
        (vector->list . g$13248$1MHp3Q)
        (vector . g$13247$1MHp3Q)
        (values . g$13246$1MHp3Q)
        (truncate . g$6012$1MHp3Q)
        (tan . g$6004$1MHp3Q)
        (symbol? . g$5509$1MHp3Q)
        (symbol=? . g$5571$1MHp3Q)
        (symbol->string . g$13245$1MHp3Q)
        (substring . g$13244$1MHp3Q)
        (string? . g$13243$1MHp3Q)
        (string>? . g$5568$1MHp3Q)
        (string>=? . g$5570$1MHp3Q)
        (string=? . g$5566$1MHp3Q)
        (string<? . g$5567$1MHp3Q)
        (string<=? . g$5569$1MHp3Q)
        (string-ref . g$13242$1MHp3Q)
        (string-length . g$13241$1MHp3Q)
        (string-for-each . g$5588$1MHp3Q)
        (string-copy . g$13240$1MHp3Q)
        (string-append . g$13239$1MHp3Q)
        (string->symbol . g$13238$1MHp3Q)
        (string->number . g$13237$1MHp3Q)
        (string->list . g$13236$1MHp3Q)
        (string . g$13235$1MHp3Q)
        (sqrt . g$6014$1MHp3Q)
        (sin . g$5998$1MHp3Q)
        (round . g$6013$1MHp3Q)
        (reverse . g$5526$1MHp3Q)
        (real? . g$5958$1MHp3Q)
        (real-valued? . g$5961$1MHp3Q)
        (real-part . g$5991$1MHp3Q)
        (rationalize . g$5583$1MHp3Q)
        (rational? . g$5959$1MHp3Q)
        (rational-valued? . g$5962$1MHp3Q)
        (procedure? . g$5511$1MHp3Q)
        (positive? . g$5965$1MHp3Q)
        (pair? . g$13234$1MHp3Q)
        (odd? . g$5556$1MHp3Q)
        (numerator . g$5989$1MHp3Q)
        (number? . g$5951$1MHp3Q)
        (number->string . g$13233$1MHp3Q)
        (null? . g$13232$1MHp3Q)
        (not . g$13231$1MHp3Q)
        (negative? . g$5966$1MHp3Q)
        (nan? . g$5952$1MHp3Q)
        (min . g$5558$1MHp3Q)
        (max . g$5557$1MHp3Q)
        (map . g$5169$1MHp3Q)
        (make-vector . g$13230$1MHp3Q)
        (make-string . g$13229$1MHp3Q)
        (make-rectangular . g$5984$1MHp3Q)
        (make-polar . g$5985$1MHp3Q)
        (magnitude . g$5987$1MHp3Q)
        (log . g$6007$1MHp3Q)
        (list? . g$13228$1MHp3Q)
        (list-tail . g$5149$1MHp3Q)
        (list-ref . g$5150$1MHp3Q)
        (list->vector . g$5520$1MHp3Q)
        (list->string . g$5521$1MHp3Q)
        (list . g$13227$1MHp3Q)
        (length . g$13226$1MHp3Q)
        (lcm . g$5560$1MHp3Q)
        (integer? . g$5960$1MHp3Q)
        (integer-valued? . g$5963$1MHp3Q)
        (integer->char . g$13225$1MHp3Q)
        (infinite? . g$5954$1MHp3Q)
        (inexact? . g$5956$1MHp3Q)
        (inexact . g$5967$1MHp3Q)
        (imag-part . g$5992$1MHp3Q)
        (gcd . g$5559$1MHp3Q)
        (for-each . g$5170$1MHp3Q)
        (floor . g$6010$1MHp3Q)
        (finite? . g$5953$1MHp3Q)
        (expt . g$6016$1MHp3Q)
        (exp . g$5997$1MHp3Q)
        (exact? . g$5955$1MHp3Q)
        (exact-integer-sqrt . g$6015$1MHp3Q)
        (exact . g$5968$1MHp3Q)
        (even? . g$5555$1MHp3Q)
        (error . g$13224$1MHp3Q)
        (eqv? . g$13223$1MHp3Q)
        (equal? . g$13222$1MHp3Q)
        (eq? . g$13221$1MHp3Q)
        (dynamic-wind . g$13220$1MHp3Q)
        (div0-and-mod0 . g$5519$1MHp3Q)
        (mod0 . g$5517$1MHp3Q)
        (div0 . g$5515$1MHp3Q)
        (div-and-mod . g$5518$1MHp3Q)
        (mod . g$5516$1MHp3Q)
        (div . g$6008$1MHp3Q)
        (denominator . g$5990$1MHp3Q)
        (cos . g$6001$1MHp3Q)
        (cons . g$13219$1MHp3Q)
        (complex? . g$5957$1MHp3Q)
        (char? . g$5506$1MHp3Q)
        (char>? . g$5580$1MHp3Q)
        (char>=? . g$5582$1MHp3Q)
        (char=? . g$5578$1MHp3Q)
        (char<? . g$5579$1MHp3Q)
        (char<=? . g$5581$1MHp3Q)
        (char->integer . g$13218$1MHp3Q)
        (ceiling . g$6011$1MHp3Q)
        (call-with-values . g$13217$1MHp3Q)
        (call/cc . g$13216$1MHp3Q)
        (call-with-current-continuation . g$13215$1MHp3Q)
        (cddddr . g$5554$1MHp3Q)
        (cdddar . g$5553$1MHp3Q)
        (cddadr . g$5552$1MHp3Q)
        (cddaar . g$5551$1MHp3Q)
        (cdaddr . g$5550$1MHp3Q)
        (cdadar . g$5549$1MHp3Q)
        (cdaadr . g$5548$1MHp3Q)
        (cdaaar . g$5547$1MHp3Q)
        (cadddr . g$5546$1MHp3Q)
        (caddar . g$5545$1MHp3Q)
        (cadadr . g$5544$1MHp3Q)
        (cadaar . g$5543$1MHp3Q)
        (caaddr . g$5542$1MHp3Q)
        (caadar . g$5541$1MHp3Q)
        (caaadr . g$5540$1MHp3Q)
        (caaaar . g$5539$1MHp3Q)
        (cdddr . g$5538$1MHp3Q)
        (cddar . g$5537$1MHp3Q)
        (cdadr . g$5536$1MHp3Q)
        (cdaar . g$5535$1MHp3Q)
        (caddr . g$5534$1MHp3Q)
        (cadar . g$5533$1MHp3Q)
        (caadr . g$5532$1MHp3Q)
        (caaar . g$5531$1MHp3Q)
        (cddr . g$5530$1MHp3Q)
        (cdar . g$5529$1MHp3Q)
        (cadr . g$5528$1MHp3Q)
        (caar . g$5527$1MHp3Q)
        (cdr . g$13214$1MHp3Q)
        (car . g$13213$1MHp3Q)
        (boolean? . g$5510$1MHp3Q)
        (boolean=? . g$5572$1MHp3Q)
        (atan . g$6006$1MHp3Q)
        (assertion-violation . g$13212$1MHp3Q)
        (asin . g$5999$1MHp3Q)
        (apply . g$13211$1MHp3Q)
        (append . g$13210$1MHp3Q)
        (angle . g$5986$1MHp3Q)
        (acos . g$6002$1MHp3Q)
        (abs . g$6009$1MHp3Q)
        (/ . g$13209$1MHp3Q)
        (* . g$13208$1MHp3Q)
        (- . g$13207$1MHp3Q)
        (+ . g$13206$1MHp3Q)
        (>= . g$5983$1MHp3Q)
        (> . g$5982$1MHp3Q)
        (= . g$5979$1MHp3Q)
        (<= . g$5981$1MHp3Q)
        (< . g$5980$1MHp3Q)
        (&no-nans . g$13134$1MHp3Q)
        (&no-infinities . g$13133$1MHp3Q)
        (&i/o-encoding . g$13132$1MHp3Q)
        (&i/o-decoding . g$13131$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q)
        (&non-continuable . g$13120$1MHp3Q)
        (&undefined . g$13119$1MHp3Q)
        (&syntax . g$13118$1MHp3Q)
        (&lexical . g$13117$1MHp3Q)
        (&implementation-restriction . g$13116$1MHp3Q)
        (&who . g$13115$1MHp3Q)
        (&irritants . g$13114$1MHp3Q)
        (&assertion . g$13113$1MHp3Q)
        (&violation . g$13112$1MHp3Q)
        (&error . g$13111$1MHp3Q)
        (&serious . g$13110$1MHp3Q)
        (&warning . g$13109$1MHp3Q)
        (&message . g$13108$1MHp3Q)
        (&condition . g$13107$1MHp3Q)
        (define-condition-type . g$13106$1MHp3Q)
        (define-enumeration . g$13105$1MHp3Q)
        (define-record-type . g$13104$1MHp3Q)
        (parent-rtd . g$13103$1MHp3Q)
        (nongenerative . g$13102$1MHp3Q)
        (opaque . g$13101$1MHp3Q)
        (sealed . g$13100$1MHp3Q)
        (protocol . g$13099$1MHp3Q)
        (parent . g$13098$1MHp3Q)
        (immutable . g$13097$1MHp3Q)
        (mutable . g$13096$1MHp3Q)
        (fields . g$13095$1MHp3Q)
        (error-handling-mode . g$13094$1MHp3Q)
        (file-options . g$13093$1MHp3Q)
        (buffer-mode . g$13092$1MHp3Q)
        (eol-style . g$13091$1MHp3Q)
        (guard . g$13090$1MHp3Q)
        (unsyntax-splicing . g$13084$1MHp3Q)
        (unsyntax . g$13083$1MHp3Q)
        (unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (_ . g$13080$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (assert . g$13076$1MHp3Q)
        (endianness . g$13075$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (do . g$13070$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (identifier-syntax . g$13066$1MHp3Q)
        (with-syntax . g$13065$1MHp3Q)
        (quasisyntax . g$13064$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (let-values . g$13058$1MHp3Q)
        (let*-values . g$13057$1MHp3Q)
        (record-constructor-descriptor . g$13056$1MHp3Q)
        (record-type-descriptor . g$13055$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (unless . g$13051$1MHp3Q)
        (when . g$13050$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec* . g$13048$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (case-lambda . g$13045$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (syntax . g$13043$1MHp3Q)
        (syntax-case . g$13042$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13467$1MHp3Q
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$9934$1MHp3Q)
        (quotient . g$6648$1MHp3Q)
        (null-environment . g$9933$1MHp3Q)
        (remainder . g$6649$1MHp3Q)
        (modulo . g$6650$1MHp3Q)
        (inexact->exact . g$6645$1MHp3Q)
        (force . g$6652$1MHp3Q)
        (exact->inexact . g$6646$1MHp3Q)
        (delay . g$13074$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13468$1MHp3Q
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13070$1MHp3Q)
        (unless . g$13051$1MHp3Q)
        (when . g$13050$1MHp3Q)
        (case-lambda . g$13045$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13469$1MHp3Q
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9936$1MHp3Q) (environment . g$9932$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13470$1MHp3Q
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13298$1MHp3Q) (set-car! . g$13297$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13471$1MHp3Q
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13300$1MHp3Q) (string-set! . g$13299$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13472$1MHp3Q
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13301$1MHp3Q) (command-line . g$12973$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13473$1MHp3Q
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9635$1MHp3Q)
        (identifier? . g$9955$1MHp3Q)
        (generate-temporaries . g$9944$1MHp3Q)
        (free-identifier=? . g$9945$1MHp3Q)
        (syntax->datum . g$9957$1MHp3Q)
        (datum->syntax . g$9956$1MHp3Q)
        (bound-identifier=? . g$9946$1MHp3Q)
        (syntax-violation . g$9954$1MHp3Q)
        (unsyntax-splicing . g$13084$1MHp3Q)
        (unsyntax . g$13083$1MHp3Q)
        (_ . g$13080$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (with-syntax . g$13065$1MHp3Q)
        (quasisyntax . g$13064$1MHp3Q)
        (syntax . g$13043$1MHp3Q)
        (syntax-case . g$13042$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13474$1MHp3Q
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5812$1MHp3Q)
        (file-exists? . g$5811$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13475$1MHp3Q
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13386$1MHp3Q)
        (vector-sort . g$13385$1MHp3Q)
        (list-sort . g$6669$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13476$1MHp3Q
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5964$1MHp3Q)
        (vector? . g$5507$1MHp3Q)
        (vector-set! . g$5523$1MHp3Q)
        (vector-ref . g$5522$1MHp3Q)
        (vector-map . g$5586$1MHp3Q)
        (vector-length . g$13249$1MHp3Q)
        (vector-for-each . g$5587$1MHp3Q)
        (vector-fill! . g$5524$1MHp3Q)
        (vector->list . g$13248$1MHp3Q)
        (vector . g$13247$1MHp3Q)
        (values . g$13246$1MHp3Q)
        (truncate . g$6012$1MHp3Q)
        (tan . g$6004$1MHp3Q)
        (symbol? . g$5509$1MHp3Q)
        (symbol=? . g$5571$1MHp3Q)
        (symbol->string . g$13245$1MHp3Q)
        (substring . g$13244$1MHp3Q)
        (string? . g$13243$1MHp3Q)
        (string>? . g$5568$1MHp3Q)
        (string>=? . g$5570$1MHp3Q)
        (string=? . g$5566$1MHp3Q)
        (string<? . g$5567$1MHp3Q)
        (string<=? . g$5569$1MHp3Q)
        (string-ref . g$13242$1MHp3Q)
        (string-length . g$13241$1MHp3Q)
        (string-for-each . g$5588$1MHp3Q)
        (string-copy . g$13240$1MHp3Q)
        (string-append . g$13239$1MHp3Q)
        (string->symbol . g$13238$1MHp3Q)
        (string->number . g$13237$1MHp3Q)
        (string->list . g$13236$1MHp3Q)
        (string . g$13235$1MHp3Q)
        (sqrt . g$6014$1MHp3Q)
        (sin . g$5998$1MHp3Q)
        (round . g$6013$1MHp3Q)
        (reverse . g$5526$1MHp3Q)
        (real? . g$5958$1MHp3Q)
        (real-valued? . g$5961$1MHp3Q)
        (real-part . g$5991$1MHp3Q)
        (rationalize . g$5583$1MHp3Q)
        (rational? . g$5959$1MHp3Q)
        (rational-valued? . g$5962$1MHp3Q)
        (procedure? . g$5511$1MHp3Q)
        (positive? . g$5965$1MHp3Q)
        (pair? . g$13234$1MHp3Q)
        (odd? . g$5556$1MHp3Q)
        (numerator . g$5989$1MHp3Q)
        (number? . g$5951$1MHp3Q)
        (number->string . g$13233$1MHp3Q)
        (null? . g$13232$1MHp3Q)
        (not . g$13231$1MHp3Q)
        (negative? . g$5966$1MHp3Q)
        (nan? . g$5952$1MHp3Q)
        (min . g$5558$1MHp3Q)
        (max . g$5557$1MHp3Q)
        (map . g$5169$1MHp3Q)
        (make-vector . g$13230$1MHp3Q)
        (make-string . g$13229$1MHp3Q)
        (make-rectangular . g$5984$1MHp3Q)
        (make-polar . g$5985$1MHp3Q)
        (magnitude . g$5987$1MHp3Q)
        (log . g$6007$1MHp3Q)
        (list? . g$13228$1MHp3Q)
        (list-tail . g$5149$1MHp3Q)
        (list-ref . g$5150$1MHp3Q)
        (list->vector . g$5520$1MHp3Q)
        (list->string . g$5521$1MHp3Q)
        (list . g$13227$1MHp3Q)
        (length . g$13226$1MHp3Q)
        (lcm . g$5560$1MHp3Q)
        (integer? . g$5960$1MHp3Q)
        (integer-valued? . g$5963$1MHp3Q)
        (integer->char . g$13225$1MHp3Q)
        (infinite? . g$5954$1MHp3Q)
        (inexact? . g$5956$1MHp3Q)
        (inexact . g$5967$1MHp3Q)
        (imag-part . g$5992$1MHp3Q)
        (gcd . g$5559$1MHp3Q)
        (for-each . g$5170$1MHp3Q)
        (floor . g$6010$1MHp3Q)
        (finite? . g$5953$1MHp3Q)
        (expt . g$6016$1MHp3Q)
        (exp . g$5997$1MHp3Q)
        (exact? . g$5955$1MHp3Q)
        (exact-integer-sqrt . g$6015$1MHp3Q)
        (exact . g$5968$1MHp3Q)
        (even? . g$5555$1MHp3Q)
        (error . g$13224$1MHp3Q)
        (eqv? . g$13223$1MHp3Q)
        (equal? . g$13222$1MHp3Q)
        (eq? . g$13221$1MHp3Q)
        (dynamic-wind . g$13220$1MHp3Q)
        (div0-and-mod0 . g$5519$1MHp3Q)
        (mod0 . g$5517$1MHp3Q)
        (div0 . g$5515$1MHp3Q)
        (div-and-mod . g$5518$1MHp3Q)
        (mod . g$5516$1MHp3Q)
        (div . g$6008$1MHp3Q)
        (denominator . g$5990$1MHp3Q)
        (cos . g$6001$1MHp3Q)
        (cons . g$13219$1MHp3Q)
        (complex? . g$5957$1MHp3Q)
        (char? . g$5506$1MHp3Q)
        (char>? . g$5580$1MHp3Q)
        (char>=? . g$5582$1MHp3Q)
        (char=? . g$5578$1MHp3Q)
        (char<? . g$5579$1MHp3Q)
        (char<=? . g$5581$1MHp3Q)
        (char->integer . g$13218$1MHp3Q)
        (ceiling . g$6011$1MHp3Q)
        (call-with-values . g$13217$1MHp3Q)
        (call/cc . g$13216$1MHp3Q)
        (call-with-current-continuation . g$13215$1MHp3Q)
        (cddddr . g$5554$1MHp3Q)
        (cdddar . g$5553$1MHp3Q)
        (cddadr . g$5552$1MHp3Q)
        (cddaar . g$5551$1MHp3Q)
        (cdaddr . g$5550$1MHp3Q)
        (cdadar . g$5549$1MHp3Q)
        (cdaadr . g$5548$1MHp3Q)
        (cdaaar . g$5547$1MHp3Q)
        (cadddr . g$5546$1MHp3Q)
        (caddar . g$5545$1MHp3Q)
        (cadadr . g$5544$1MHp3Q)
        (cadaar . g$5543$1MHp3Q)
        (caaddr . g$5542$1MHp3Q)
        (caadar . g$5541$1MHp3Q)
        (caaadr . g$5540$1MHp3Q)
        (caaaar . g$5539$1MHp3Q)
        (cdddr . g$5538$1MHp3Q)
        (cddar . g$5537$1MHp3Q)
        (cdadr . g$5536$1MHp3Q)
        (cdaar . g$5535$1MHp3Q)
        (caddr . g$5534$1MHp3Q)
        (cadar . g$5533$1MHp3Q)
        (caadr . g$5532$1MHp3Q)
        (caaar . g$5531$1MHp3Q)
        (cddr . g$5530$1MHp3Q)
        (cdar . g$5529$1MHp3Q)
        (cadr . g$5528$1MHp3Q)
        (caar . g$5527$1MHp3Q)
        (cdr . g$13214$1MHp3Q)
        (car . g$13213$1MHp3Q)
        (boolean? . g$5510$1MHp3Q)
        (boolean=? . g$5572$1MHp3Q)
        (atan . g$6006$1MHp3Q)
        (assertion-violation . g$13212$1MHp3Q)
        (asin . g$5999$1MHp3Q)
        (apply . g$13211$1MHp3Q)
        (append . g$13210$1MHp3Q)
        (angle . g$5986$1MHp3Q)
        (acos . g$6002$1MHp3Q)
        (abs . g$6009$1MHp3Q)
        (/ . g$13209$1MHp3Q)
        (* . g$13208$1MHp3Q)
        (- . g$13207$1MHp3Q)
        (+ . g$13206$1MHp3Q)
        (>= . g$5983$1MHp3Q)
        (> . g$5982$1MHp3Q)
        (= . g$5979$1MHp3Q)
        (<= . g$5981$1MHp3Q)
        (< . g$5980$1MHp3Q)
        (unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (_ . g$13080$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (assert . g$13076$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (identifier-syntax . g$13066$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (let-values . g$13058$1MHp3Q)
        (let*-values . g$13057$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec* . g$13048$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13477$1MHp3Q
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5174$1MHp3Q)
        (remv . g$5175$1MHp3Q)
        (remp . g$5155$1MHp3Q)
        (remq . g$5176$1MHp3Q)
        (partition . g$5154$1MHp3Q)
        (memv . g$5162$1MHp3Q)
        (memq . g$5161$1MHp3Q)
        (memp . g$5164$1MHp3Q)
        (member . g$5163$1MHp3Q)
        (exists . g$5168$1MHp3Q)
        (for-all . g$5167$1MHp3Q)
        (fold-right . g$5173$1MHp3Q)
        (fold-left . g$5172$1MHp3Q)
        (find . g$5153$1MHp3Q)
        (filter . g$5156$1MHp3Q)
        (cons* . g$5171$1MHp3Q)
        (assv . g$5158$1MHp3Q)
        (assq . g$5157$1MHp3Q)
        (assp . g$5160$1MHp3Q)
        (assoc . g$5159$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13478$1MHp3Q
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8459$1MHp3Q)
        (call-with-input-file . g$8458$1MHp3Q)
        (write-char . g$8450$1MHp3Q)
        (write . g$13372$1MHp3Q)
        (with-output-to-file . g$8457$1MHp3Q)
        (with-input-from-file . g$8456$1MHp3Q)
        (read-char . g$8449$1MHp3Q)
        (read . g$13371$1MHp3Q)
        (peek-char . g$8448$1MHp3Q)
        (open-output-file . g$13370$1MHp3Q)
        (open-input-file . g$13369$1MHp3Q)
        (newline . g$8460$1MHp3Q)
        (display . g$13368$1MHp3Q)
        (close-output-port . g$13367$1MHp3Q)
        (close-input-port . g$13366$1MHp3Q)
        (eof-object? . g$13365$1MHp3Q)
        (eof-object . g$13364$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13479$1MHp3Q
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$13320$1MHp3Q)
        (utf32->string . g$13288$1MHp3Q)
        (utf16->string . g$13287$1MHp3Q)
        (utf8->string . g$13286$1MHp3Q)
        (uint-list->bytevector . g$13285$1MHp3Q)
        (u8-list->bytevector . g$13284$1MHp3Q)
        (string->utf8 . g$13283$1MHp3Q)
        (string->utf32 . g$13282$1MHp3Q)
        (string->utf16 . g$13281$1MHp3Q)
        (sint-list->bytevector . g$13280$1MHp3Q)
        (native-endianness . g$5818$1MHp3Q)
        (bytevector? . g$5508$1MHp3Q)
        (bytevector=? . g$13279$1MHp3Q)
        (bytevector-uint-set! . g$13278$1MHp3Q)
        (bytevector-uint-ref . g$13277$1MHp3Q)
        (bytevector-u8-set! . g$13276$1MHp3Q)
        (bytevector-u8-ref . g$13275$1MHp3Q)
        (bytevector-u64-set! . g$5839$1MHp3Q)
        (bytevector-u64-ref . g$5835$1MHp3Q)
        (bytevector-u64-native-set! . g$5841$1MHp3Q)
        (bytevector-u64-native-ref . g$5837$1MHp3Q)
        (bytevector-u32-set! . g$5831$1MHp3Q)
        (bytevector-u32-ref . g$5827$1MHp3Q)
        (bytevector-u32-native-set! . g$5833$1MHp3Q)
        (bytevector-u32-native-ref . g$5829$1MHp3Q)
        (bytevector-u16-set! . g$5823$1MHp3Q)
        (bytevector-u16-ref . g$5819$1MHp3Q)
        (bytevector-u16-native-set! . g$5825$1MHp3Q)
        (bytevector-u16-native-ref . g$5821$1MHp3Q)
        (bytevector-sint-set! . g$13274$1MHp3Q)
        (bytevector-sint-ref . g$13273$1MHp3Q)
        (bytevector-s8-set! . g$13272$1MHp3Q)
        (bytevector-s8-ref . g$13271$1MHp3Q)
        (bytevector-s64-set! . g$5840$1MHp3Q)
        (bytevector-s64-ref . g$5836$1MHp3Q)
        (bytevector-s64-native-set! . g$5842$1MHp3Q)
        (bytevector-s64-native-ref . g$5838$1MHp3Q)
        (bytevector-s32-set! . g$5832$1MHp3Q)
        (bytevector-s32-ref . g$5828$1MHp3Q)
        (bytevector-s32-native-set! . g$5834$1MHp3Q)
        (bytevector-s32-native-ref . g$5830$1MHp3Q)
        (bytevector-s16-set! . g$5824$1MHp3Q)
        (bytevector-s16-ref . g$5820$1MHp3Q)
        (bytevector-s16-native-set! . g$5826$1MHp3Q)
        (bytevector-s16-native-ref . g$5822$1MHp3Q)
        (bytevector-length . g$13270$1MHp3Q)
        (bytevector-ieee-single-set! . g$13269$1MHp3Q)
        (bytevector-ieee-single-ref . g$13268$1MHp3Q)
        (bytevector-ieee-single-native-set! . g$5845$1MHp3Q)
        (bytevector-ieee-single-native-ref . g$5843$1MHp3Q)
        (bytevector-ieee-double-set! . g$13267$1MHp3Q)
        (bytevector-ieee-double-ref . g$13266$1MHp3Q)
        (bytevector-ieee-double-native-set! . g$5846$1MHp3Q)
        (bytevector-ieee-double-native-ref . g$5844$1MHp3Q)
        (bytevector-fill! . g$13265$1MHp3Q)
        (bytevector-copy! . g$13264$1MHp3Q)
        (bytevector-copy . g$13263$1MHp3Q)
        (bytevector->uint-list . g$13262$1MHp3Q)
        (bytevector->u8-list . g$13261$1MHp3Q)
        (bytevector->sint-list . g$13260$1MHp3Q)
        (endianness . g$13075$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13480$1MHp3Q
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13418$1MHp3Q)
        (string-titlecase . g$13417$1MHp3Q)
        (string-normalize-nfkd . g$6716$1MHp3Q)
        (string-normalize-nfkc . g$6715$1MHp3Q)
        (string-normalize-nfd . g$6714$1MHp3Q)
        (string-normalize-nfc . g$6713$1MHp3Q)
        (string-foldcase . g$13416$1MHp3Q)
        (string-downcase . g$13415$1MHp3Q)
        (string-ci>? . g$6700$1MHp3Q)
        (string-ci>=? . g$6702$1MHp3Q)
        (string-ci=? . g$6698$1MHp3Q)
        (string-ci<? . g$6699$1MHp3Q)
        (string-ci<=? . g$6701$1MHp3Q)
        (char-whitespace? . g$13414$1MHp3Q)
        (char-upper-case? . g$13413$1MHp3Q)
        (char-title-case? . g$13412$1MHp3Q)
        (char-numeric? . g$13411$1MHp3Q)
        (char-lower-case? . g$13410$1MHp3Q)
        (char-general-category . g$13409$1MHp3Q)
        (char-upcase . g$13408$1MHp3Q)
        (char-titlecase . g$13407$1MHp3Q)
        (char-foldcase . g$13406$1MHp3Q)
        (char-downcase . g$13405$1MHp3Q)
        (char-ci>? . g$6710$1MHp3Q)
        (char-ci>=? . g$6712$1MHp3Q)
        (char-ci=? . g$6708$1MHp3Q)
        (char-ci<? . g$6709$1MHp3Q)
        (char-ci<=? . g$6711$1MHp3Q)
        (char-alphabetic? . g$13404$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13481$1MHp3Q
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13296$1MHp3Q)
        (raise-continuable . g$13295$1MHp3Q)
        (raise . g$13294$1MHp3Q)
        (guard . g$13090$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13482$1MHp3Q
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6780$1MHp3Q)
        (bitwise-reverse-bit-field . g$13259$1MHp3Q)
        (bitwise-length . g$13258$1MHp3Q)
        (bitwise-if . g$6774$1MHp3Q)
        (bitwise-first-bit-set . g$13257$1MHp3Q)
        (bitwise-copy-bit-field . g$6777$1MHp3Q)
        (bitwise-copy-bit . g$6775$1MHp3Q)
        (bitwise-bit-set? . g$13256$1MHp3Q)
        (bitwise-bit-field . g$6776$1MHp3Q)
        (bitwise-bit-count . g$13255$1MHp3Q)
        (bitwise-xor . g$13254$1MHp3Q)
        (bitwise-ior . g$13253$1MHp3Q)
        (bitwise-and . g$13252$1MHp3Q)
        (bitwise-not . g$13251$1MHp3Q)
        (bitwise-arithmetic-shift-right . g$6779$1MHp3Q)
        (bitwise-arithmetic-shift-left . g$6778$1MHp3Q)
        (bitwise-arithmetic-shift . g$13250$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13483$1MHp3Q
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6912$1MHp3Q)
        (fxxor . g$6875$1MHp3Q)
        (fxrotate-bit-field . g$6950$1MHp3Q)
        (fxreverse-bit-field . g$6951$1MHp3Q)
        (fxpositive? . g$6902$1MHp3Q)
        (fxodd? . g$6922$1MHp3Q)
        (fxnot . g$6856$1MHp3Q)
        (fxnegative? . g$6907$1MHp3Q)
        (fxmod0 . g$6886$1MHp3Q)
        (fxmod . g$6885$1MHp3Q)
        (fxmin . g$6924$1MHp3Q)
        (fxmax . g$6923$1MHp3Q)
        (fxlength . g$6853$1MHp3Q)
        (fxior . g$6874$1MHp3Q)
        (fxif . g$6932$1MHp3Q)
        (fxfirst-bit-set . g$6854$1MHp3Q)
        (fxeven? . g$6917$1MHp3Q)
        (fxdiv0-and-mod0 . g$6897$1MHp3Q)
        (fxdiv0 . g$6892$1MHp3Q)
        (fxdiv-and-mod . g$6887$1MHp3Q)
        (fxdiv . g$6880$1MHp3Q)
        (fxcopy-bit-field . g$6947$1MHp3Q)
        (fxcopy-bit . g$6937$1MHp3Q)
        (fxbit-set? . g$6855$1MHp3Q)
        (fxbit-field . g$6942$1MHp3Q)
        (fxbit-count . g$6848$1MHp3Q)
        (fxarithmetic-shift-right . g$6949$1MHp3Q)
        (fxarithmetic-shift-left . g$6948$1MHp3Q)
        (fxarithmetic-shift . g$6843$1MHp3Q)
        (fxand . g$6873$1MHp3Q)
        (fx>? . g$6865$1MHp3Q)
        (fx>=? . g$6866$1MHp3Q)
        (fx=? . g$6862$1MHp3Q)
        (fx<? . g$6863$1MHp3Q)
        (fx<=? . g$6864$1MHp3Q)
        (fx-/carry . g$6926$1MHp3Q)
        (fx- . g$6837$1MHp3Q)
        (fx+/carry . g$6927$1MHp3Q)
        (fx+ . g$6835$1MHp3Q)
        (fx*/carry . g$6925$1MHp3Q)
        (fx* . g$6836$1MHp3Q)
        (greatest-fixnum . g$6806$1MHp3Q)
        (least-fixnum . g$6807$1MHp3Q)
        (fixnum-width . g$5514$1MHp3Q)
        (fixnum? . g$5512$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13484$1MHp3Q
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6631$1MHp3Q)
        (no-infinities-violation? . g$6618$1MHp3Q)
        (make-no-nans-violation . g$6630$1MHp3Q)
        (make-no-infinities-violation . g$6617$1MHp3Q)
        (real->flonum . g$5949$1MHp3Q)
        (flzero? . g$7870$1MHp3Q)
        (fltruncate . g$7865$1MHp3Q)
        (fltan . g$7851$1MHp3Q)
        (flsqrt . g$7856$1MHp3Q)
        (flsin . g$7849$1MHp3Q)
        (flround . g$7866$1MHp3Q)
        (flpositive? . g$7868$1MHp3Q)
        (flonum? . g$5513$1MHp3Q)
        (flodd? . g$7872$1MHp3Q)
        (flnumerator . g$7815$1MHp3Q)
        (flnegative? . g$7869$1MHp3Q)
        (flnan? . g$7848$1MHp3Q)
        (flmod0 . g$7833$1MHp3Q)
        (flmod . g$7832$1MHp3Q)
        (flmin . g$7874$1MHp3Q)
        (flmax . g$7873$1MHp3Q)
        (fllog . g$7855$1MHp3Q)
        (flinteger? . g$7841$1MHp3Q)
        (flinfinite? . g$7847$1MHp3Q)
        (flfloor . g$7864$1MHp3Q)
        (flfinite? . g$7842$1MHp3Q)
        (flexpt . g$7858$1MHp3Q)
        (flexp . g$7857$1MHp3Q)
        (fleven? . g$7871$1MHp3Q)
        (fldiv0-and-mod0 . g$7840$1MHp3Q)
        (fldiv0 . g$7827$1MHp3Q)
        (fldiv-and-mod . g$7834$1MHp3Q)
        (fldiv . g$7839$1MHp3Q)
        (fldenominator . g$7814$1MHp3Q)
        (flcos . g$7850$1MHp3Q)
        (flceiling . g$7859$1MHp3Q)
        (flatan . g$7854$1MHp3Q)
        (flasin . g$7852$1MHp3Q)
        (flacos . g$7853$1MHp3Q)
        (flabs . g$7867$1MHp3Q)
        (fl>? . g$7821$1MHp3Q)
        (fl>=? . g$7822$1MHp3Q)
        (fl=? . g$7818$1MHp3Q)
        (fl<? . g$7819$1MHp3Q)
        (fl<=? . g$7820$1MHp3Q)
        (fl/ . g$7817$1MHp3Q)
        (fl- . g$7816$1MHp3Q)
        (fl+ . g$7812$1MHp3Q)
        (fl* . g$7813$1MHp3Q)
        (fixnum->flonum . g$5950$1MHp3Q)
        (&no-nans . g$13134$1MHp3Q)
        (&no-infinities . g$13133$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13485$1MHp3Q
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13384$1MHp3Q)
        (string-ci-hash . g$13383$1MHp3Q)
        (string-hash . g$13382$1MHp3Q)
        (equal-hash . g$13381$1MHp3Q)
        (hashtable-equivalence-function . g$13380$1MHp3Q)
        (make-hashtable . g$13379$1MHp3Q)
        (hashtable-hash-function . g$13378$1MHp3Q)
        (make-eqv-hashtable . g$5779$1MHp3Q)
        (make-eq-hashtable . g$5778$1MHp3Q)
        (hashtable? . g$13377$1MHp3Q)
        (hashtable-update! . g$5785$1MHp3Q)
        (hashtable-size . g$5780$1MHp3Q)
        (hashtable-set! . g$5782$1MHp3Q)
        (hashtable-ref . g$5781$1MHp3Q)
        (hashtable-mutable? . g$13376$1MHp3Q)
        (hashtable-keys . g$13375$1MHp3Q)
        (hashtable-entries . g$13374$1MHp3Q)
        (hashtable-delete! . g$5783$1MHp3Q)
        (hashtable-copy . g$13373$1MHp3Q)
        (hashtable-contains? . g$5784$1MHp3Q)
        (hashtable-clear! . g$5786$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13486$1MHp3Q
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13365$1MHp3Q)
        (eof-object . g$13364$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (utf-8-codec . g$13358$1MHp3Q)
        (utf-16-codec . g$13357$1MHp3Q)
        (transcoder-error-handling-mode . g$13356$1MHp3Q)
        (transcoder-eol-style . g$13355$1MHp3Q)
        (transcoder-codec . g$13354$1MHp3Q)
        (transcoded-port . g$13353$1MHp3Q)
        (textual-port? . g$13352$1MHp3Q)
        (string->bytevector . g$13351$1MHp3Q)
        (standard-output-port . g$13350$1MHp3Q)
        (standard-input-port . g$13349$1MHp3Q)
        (standard-error-port . g$13348$1MHp3Q)
        (set-port-position! . g$13347$1MHp3Q)
        (put-u8 . g$13346$1MHp3Q)
        (put-string . g$13345$1MHp3Q)
        (put-datum . g$8428$1MHp3Q)
        (put-char . g$13344$1MHp3Q)
        (put-bytevector . g$13343$1MHp3Q)
        (port? . g$8433$1MHp3Q)
        (port-transcoder . g$13342$1MHp3Q)
        (port-position . g$13341$1MHp3Q)
        (port-has-set-port-position!? . g$13340$1MHp3Q)
        (port-has-port-position? . g$13339$1MHp3Q)
        (port-eof? . g$13338$1MHp3Q)
        (output-port-buffer-mode . g$13337$1MHp3Q)
        (open-string-output-port . g$8432$1MHp3Q)
        (open-string-input-port . g$13336$1MHp3Q)
        (open-file-output-port . g$13335$1MHp3Q)
        (open-file-input/output-port . g$13334$1MHp3Q)
        (open-file-input-port . g$13333$1MHp3Q)
        (open-bytevector-output-port . g$13332$1MHp3Q)
        (open-bytevector-input-port . g$13331$1MHp3Q)
        (native-transcoder . g$13330$1MHp3Q)
        (native-eol-style . g$13329$1MHp3Q)
        (make-transcoder . g$13328$1MHp3Q)
        (latin-1-codec . g$13327$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (make-i/o-encoding-error . g$6602$1MHp3Q)
        (make-i/o-decoding-error . g$6589$1MHp3Q)
        (make-custom-textual-output-port . g$13326$1MHp3Q)
        (make-custom-textual-input/output-port . g$13325$1MHp3Q)
        (make-custom-textual-input-port . g$13324$1MHp3Q)
        (make-custom-binary-output-port . g$13323$1MHp3Q)
        (make-custom-binary-input/output-port . g$13322$1MHp3Q)
        (make-custom-binary-input-port . g$13321$1MHp3Q)
        (lookahead-u8 . g$13319$1MHp3Q)
        (lookahead-char . g$13318$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (i/o-encoding-error? . g$6604$1MHp3Q)
        (i/o-encoding-error-char . g$6605$1MHp3Q)
        (i/o-decoding-error? . g$6590$1MHp3Q)
        (get-u8 . g$13317$1MHp3Q)
        (get-string-n! . g$13316$1MHp3Q)
        (get-string-n . g$13315$1MHp3Q)
        (get-string-all . g$13314$1MHp3Q)
        (get-line . g$13313$1MHp3Q)
        (get-datum . g$8429$1MHp3Q)
        (get-char . g$13312$1MHp3Q)
        (get-bytevector-some . g$13311$1MHp3Q)
        (get-bytevector-n! . g$13310$1MHp3Q)
        (get-bytevector-n . g$13309$1MHp3Q)
        (get-bytevector-all . g$13308$1MHp3Q)
        (flush-output-port . g$13307$1MHp3Q)
        (close-port . g$13306$1MHp3Q)
        (call-with-string-output-port . g$8434$1MHp3Q)
        (call-with-port . g$8435$1MHp3Q)
        (call-with-bytevector-output-port . g$13305$1MHp3Q)
        (bytevector->string . g$13304$1MHp3Q)
        (buffer-mode? . g$13303$1MHp3Q)
        (binary-port? . g$13302$1MHp3Q)
        (&i/o-encoding . g$13132$1MHp3Q)
        (&i/o-decoding . g$13131$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q)
        (error-handling-mode . g$13094$1MHp3Q)
        (file-options . g$13093$1MHp3Q)
        (buffer-mode . g$13092$1MHp3Q)
        (eol-style . g$13091$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13487$1MHp3Q
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8520$1MHp3Q)
        (enum-set=? . g$8527$1MHp3Q)
        (enum-set-universe . g$8521$1MHp3Q)
        (enum-set-union . g$8528$1MHp3Q)
        (enum-set-subset? . g$8526$1MHp3Q)
        (enum-set-projection . g$8532$1MHp3Q)
        (enum-set-member? . g$8525$1MHp3Q)
        (enum-set-intersection . g$8529$1MHp3Q)
        (enum-set-indexer . g$8522$1MHp3Q)
        (enum-set-difference . g$8530$1MHp3Q)
        (enum-set-constructor . g$8523$1MHp3Q)
        (enum-set-complement . g$8531$1MHp3Q)
        (enum-set->list . g$8524$1MHp3Q)
        (define-enumeration . g$13105$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13488$1MHp3Q
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6371$1MHp3Q)
        (warning? . g$6290$1MHp3Q)
        (violation? . g$6329$1MHp3Q)
        (undefined-violation? . g$6441$1MHp3Q)
        (syntax-violation? . g$6426$1MHp3Q)
        (syntax-violation-subform . g$6428$1MHp3Q)
        (syntax-violation-form . g$6427$1MHp3Q)
        (simple-conditions . g$13293$1MHp3Q)
        (serious-condition? . g$6303$1MHp3Q)
        (non-continuable-violation? . g$6385$1MHp3Q)
        (message-condition? . g$6276$1MHp3Q)
        (make-who-condition . g$6369$1MHp3Q)
        (make-warning . g$6289$1MHp3Q)
        (make-violation . g$6328$1MHp3Q)
        (make-undefined-violation . g$6440$1MHp3Q)
        (make-syntax-violation . g$6423$1MHp3Q)
        (make-serious-condition . g$6302$1MHp3Q)
        (make-non-continuable-violation . g$6384$1MHp3Q)
        (make-message-condition . g$6274$1MHp3Q)
        (make-lexical-violation . g$6410$1MHp3Q)
        (make-irritants-condition . g$6354$1MHp3Q)
        (make-implementation-restriction-violation . g$6397$1MHp3Q)
        (make-error . g$6315$1MHp3Q)
        (make-assertion-violation . g$6341$1MHp3Q)
        (lexical-violation? . g$6411$1MHp3Q)
        (irritants-condition? . g$6356$1MHp3Q)
        (implementation-restriction-violation? . g$6398$1MHp3Q)
        (error? . g$6316$1MHp3Q)
        (condition-who . g$6372$1MHp3Q)
        (condition-predicate . g$13292$1MHp3Q)
        (condition-message . g$6277$1MHp3Q)
        (condition-irritants . g$6357$1MHp3Q)
        (condition-accessor . g$13291$1MHp3Q)
        (condition . g$13290$1MHp3Q)
        (assertion-violation? . g$6342$1MHp3Q)
        (condition? . g$13289$1MHp3Q)
        (&non-continuable . g$13120$1MHp3Q)
        (&undefined . g$13119$1MHp3Q)
        (&syntax . g$13118$1MHp3Q)
        (&lexical . g$13117$1MHp3Q)
        (&implementation-restriction . g$13116$1MHp3Q)
        (&who . g$13115$1MHp3Q)
        (&irritants . g$13114$1MHp3Q)
        (&assertion . g$13113$1MHp3Q)
        (&violation . g$13112$1MHp3Q)
        (&error . g$13111$1MHp3Q)
        (&serious . g$13110$1MHp3Q)
        (&warning . g$13109$1MHp3Q)
        (&message . g$13108$1MHp3Q)
        (&condition . g$13107$1MHp3Q)
        (define-condition-type . g$13106$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13489$1MHp3Q
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13396$1MHp3Q)
        (record-type-uid . g$13395$1MHp3Q)
        (record-type-sealed? . g$13394$1MHp3Q)
        (record-type-parent . g$13393$1MHp3Q)
        (record-type-opaque? . g$13392$1MHp3Q)
        (record-type-name . g$13391$1MHp3Q)
        (record-type-generative? . g$13390$1MHp3Q)
        (record-type-field-names . g$13389$1MHp3Q)
        (record-rtd . g$13388$1MHp3Q)
        (record-field-mutable? . g$13387$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13490$1MHp3Q
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13403$1MHp3Q)
        (record-predicate . g$13402$1MHp3Q)
        (record-mutator . g$13401$1MHp3Q)
        (record-constructor . g$13400$1MHp3Q)
        (record-accessor . g$13399$1MHp3Q)
        (make-record-type-descriptor . g$13398$1MHp3Q)
        (make-record-constructor-descriptor . g$13397$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13491$1MHp3Q
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13104$1MHp3Q)
        (parent-rtd . g$13103$1MHp3Q)
        (nongenerative . g$13102$1MHp3Q)
        (opaque . g$13101$1MHp3Q)
        (sealed . g$13100$1MHp3Q)
        (protocol . g$13099$1MHp3Q)
        (parent . g$13098$1MHp3Q)
        (immutable . g$13097$1MHp3Q)
        (mutable . g$13096$1MHp3Q)
        (fields . g$13095$1MHp3Q)
        (record-constructor-descriptor . g$13056$1MHp3Q)
        (record-type-descriptor . g$13055$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13492$1MHp3Q
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9831$1MHp3Q)
        (&no-nans-rcd . g$6633$1MHp3Q)
        (&no-nans-rtd . g$6632$1MHp3Q)
        (&no-infinities-rcd . g$6620$1MHp3Q)
        (&no-infinities-rtd . g$6619$1MHp3Q)
        (&i/o-encoding-rcd . g$6607$1MHp3Q)
        (&i/o-encoding-rtd . g$6606$1MHp3Q)
        (&i/o-decoding-rcd . g$6592$1MHp3Q)
        (&i/o-decoding-rtd . g$6591$1MHp3Q)
        (&i/o-port-rcd . g$6579$1MHp3Q)
        (&i/o-port-rtd . g$6578$1MHp3Q)
        (&i/o-file-does-not-exist-rcd . g$6564$1MHp3Q)
        (&i/o-file-does-not-exist-rtd . g$6563$1MHp3Q)
        (&i/o-file-already-exists-rcd . g$6551$1MHp3Q)
        (&i/o-file-already-exists-rtd . g$6550$1MHp3Q)
        (&i/o-file-is-read-only-rcd . g$6538$1MHp3Q)
        (&i/o-file-is-read-only-rtd . g$6537$1MHp3Q)
        (&i/o-file-protection-rcd . g$6525$1MHp3Q)
        (&i/o-file-protection-rtd . g$6524$1MHp3Q)
        (&i/o-filename-rcd . g$6512$1MHp3Q)
        (&i/o-filename-rtd . g$6511$1MHp3Q)
        (&i/o-invalid-position-rcd . g$6497$1MHp3Q)
        (&i/o-invalid-position-rtd . g$6496$1MHp3Q)
        (&i/o-write-rcd . g$6482$1MHp3Q)
        (&i/o-write-rtd . g$6481$1MHp3Q)
        (&i/o-read-rcd . g$6469$1MHp3Q)
        (&i/o-read-rtd . g$6468$1MHp3Q)
        (&i/o-rcd . g$6456$1MHp3Q)
        (&i/o-rtd . g$6455$1MHp3Q)
        (&undefined-rcd . g$6443$1MHp3Q)
        (&undefined-rtd . g$6442$1MHp3Q)
        (&syntax-rcd . g$6430$1MHp3Q)
        (&syntax-rtd . g$6429$1MHp3Q)
        (&lexical-rcd . g$6413$1MHp3Q)
        (&lexical-rtd . g$6412$1MHp3Q)
        (&implementation-restriction-rcd . g$6400$1MHp3Q)
        (&implementation-restriction-rtd . g$6399$1MHp3Q)
        (&non-continuable-rcd . g$6387$1MHp3Q)
        (&non-continuable-rtd . g$6386$1MHp3Q)
        (&who-rcd . g$6374$1MHp3Q)
        (&who-rtd . g$6373$1MHp3Q)
        (&irritants-rcd . g$6359$1MHp3Q)
        (&irritants-rtd . g$6358$1MHp3Q)
        (&assertion-rcd . g$6344$1MHp3Q)
        (&assertion-rtd . g$6343$1MHp3Q)
        (&violation-rcd . g$6331$1MHp3Q)
        (&violation-rtd . g$6330$1MHp3Q)
        (&error-rcd . g$6318$1MHp3Q)
        (&error-rtd . g$6317$1MHp3Q)
        (&serious-rcd . g$6305$1MHp3Q)
        (&serious-rtd . g$6304$1MHp3Q)
        (&warning-rcd . g$6292$1MHp3Q)
        (&warning-rtd . g$6291$1MHp3Q)
        (&message-rcd . g$6279$1MHp3Q)
        (&message-rtd . g$6278$1MHp3Q)
        (&condition-rcd . g$6239$1MHp3Q)
        (&condition-rtd . g$6238$1MHp3Q)
        (library-letrec* . g$13455$1MHp3Q)
        (annotation-stripped . g$13454$1MHp3Q)
        (annotation-source . g$13453$1MHp3Q)
        (annotation-expression . g$13452$1MHp3Q)
        (annotation? . g$13451$1MHp3Q)
        (read-annotated . g$13450$1MHp3Q)
        (tanh . g$6005$1MHp3Q)
        (cosh . g$6003$1MHp3Q)
        (sinh . g$6000$1MHp3Q)
        (make-guid . g$13449$1MHp3Q)
        (unspecified? . g$13448$1MHp3Q)
        (make-list . g$5152$1MHp3Q)
        (last-pair . g$5151$1MHp3Q)
        (load-r5rs . g$13447$1MHp3Q)
        (license . g$13446$1MHp3Q)
        (stacktrace . g$13445$1MHp3Q)
        (ironscheme-build . g$12978$1MHp3Q)
        (pinvoke-call-internal . g$13444$1MHp3Q)
        (ffi-callback-internal . g$13443$1MHp3Q)
        (ffi-callout-internal . g$13442$1MHp3Q)
        (define-clr-class-internal . g$13441$1MHp3Q)
        (clr-field-set!-internal . g$13440$1MHp3Q)
        (clr-field-get-internal . g$13439$1MHp3Q)
        (clr-cast-internal . g$13438$1MHp3Q)
        (clr-call-internal . g$13437$1MHp3Q)
        (clr-new-internal . g$13436$1MHp3Q)
        (clr-new-array-internal . g$13435$1MHp3Q)
        (clr-is-internal . g$13434$1MHp3Q)
        (clr-reference-internal . g$13433$1MHp3Q)
        (clr-using-internal . g$13432$1MHp3Q)
        (syntax-error . g$9951$1MHp3Q)
        (syntax-dispatch . g$9826$1MHp3Q)
        (compile-core . g$13431$1MHp3Q)
        (eval-core . g$13430$1MHp3Q)
        (remove-location . g$13429$1MHp3Q)
        (set-symbol-value! . g$13428$1MHp3Q)
        (symbol-value . g$13427$1MHp3Q)
        (symbol-bound? . g$13426$1MHp3Q)
        (ungensym . g$13425$1MHp3Q)
        (gensym . g$13424$1MHp3Q)
        (void . g$13423$1MHp3Q)
        (load-serialized-library . g$13422$1MHp3Q)
        (serialize-library . g$13421$1MHp3Q)
        (compile-system-libraries . g$12982$1MHp3Q)
        (compile->closure . g$12984$1MHp3Q)
        (compile . g$12983$1MHp3Q)
        (load . g$12977$1MHp3Q)
        (string-normalize . g$13420$1MHp3Q)
        (interaction-environment . g$9961$1MHp3Q)
        (char-ready? . g$13419$1MHp3Q)
        (string-upcase . g$13418$1MHp3Q)
        (string-titlecase . g$13417$1MHp3Q)
        (string-normalize-nfkd . g$6716$1MHp3Q)
        (string-normalize-nfkc . g$6715$1MHp3Q)
        (string-normalize-nfd . g$6714$1MHp3Q)
        (string-normalize-nfc . g$6713$1MHp3Q)
        (string-foldcase . g$13416$1MHp3Q)
        (string-downcase . g$13415$1MHp3Q)
        (string-ci>? . g$6700$1MHp3Q)
        (string-ci>=? . g$6702$1MHp3Q)
        (string-ci=? . g$6698$1MHp3Q)
        (string-ci<? . g$6699$1MHp3Q)
        (string-ci<=? . g$6701$1MHp3Q)
        (char-whitespace? . g$13414$1MHp3Q)
        (char-upper-case? . g$13413$1MHp3Q)
        (char-title-case? . g$13412$1MHp3Q)
        (char-numeric? . g$13411$1MHp3Q)
        (char-lower-case? . g$13410$1MHp3Q)
        (char-general-category . g$13409$1MHp3Q)
        (char-upcase . g$13408$1MHp3Q)
        (char-titlecase . g$13407$1MHp3Q)
        (char-foldcase . g$13406$1MHp3Q)
        (char-downcase . g$13405$1MHp3Q)
        (char-ci>? . g$6710$1MHp3Q)
        (char-ci>=? . g$6712$1MHp3Q)
        (char-ci=? . g$6708$1MHp3Q)
        (char-ci<? . g$6709$1MHp3Q)
        (char-ci<=? . g$6711$1MHp3Q)
        (char-alphabetic? . g$13404$1MHp3Q)
        (variable-transformer-procedure . g$9638$1MHp3Q)
        (variable-transformer? . g$9637$1MHp3Q)
        (make-variable-transformer . g$9635$1MHp3Q)
        (identifier? . g$9955$1MHp3Q)
        (generate-temporaries . g$9944$1MHp3Q)
        (free-identifier=? . g$9945$1MHp3Q)
        (syntax->datum . g$9957$1MHp3Q)
        (datum->syntax . g$9956$1MHp3Q)
        (bound-identifier=? . g$9946$1MHp3Q)
        (record-type-descriptor? . g$13403$1MHp3Q)
        (record-predicate . g$13402$1MHp3Q)
        (record-mutator . g$13401$1MHp3Q)
        (record-constructor . g$13400$1MHp3Q)
        (record-accessor . g$13399$1MHp3Q)
        (make-record-type-descriptor . g$13398$1MHp3Q)
        (make-record-constructor-descriptor . g$13397$1MHp3Q)
        (record? . g$13396$1MHp3Q)
        (record-type-uid . g$13395$1MHp3Q)
        (record-type-sealed? . g$13394$1MHp3Q)
        (record-type-parent . g$13393$1MHp3Q)
        (record-type-opaque? . g$13392$1MHp3Q)
        (record-type-name . g$13391$1MHp3Q)
        (record-type-generative? . g$13390$1MHp3Q)
        (record-type-field-names . g$13389$1MHp3Q)
        (record-rtd . g$13388$1MHp3Q)
        (record-field-mutable? . g$13387$1MHp3Q)
        (delete-file . g$5812$1MHp3Q)
        (file-exists? . g$5811$1MHp3Q)
        (vector-sort! . g$13386$1MHp3Q)
        (vector-sort . g$13385$1MHp3Q)
        (list-sort . g$6669$1MHp3Q)
        (symbol-hash . g$13384$1MHp3Q)
        (string-ci-hash . g$13383$1MHp3Q)
        (string-hash . g$13382$1MHp3Q)
        (equal-hash . g$13381$1MHp3Q)
        (hashtable-equivalence-function . g$13380$1MHp3Q)
        (make-hashtable . g$13379$1MHp3Q)
        (hashtable-hash-function . g$13378$1MHp3Q)
        (make-eqv-hashtable . g$5779$1MHp3Q)
        (make-eq-hashtable . g$5778$1MHp3Q)
        (hashtable? . g$13377$1MHp3Q)
        (hashtable-update! . g$5785$1MHp3Q)
        (hashtable-size . g$5780$1MHp3Q)
        (hashtable-set! . g$5782$1MHp3Q)
        (hashtable-ref . g$5781$1MHp3Q)
        (hashtable-mutable? . g$13376$1MHp3Q)
        (hashtable-keys . g$13375$1MHp3Q)
        (hashtable-entries . g$13374$1MHp3Q)
        (hashtable-delete! . g$5783$1MHp3Q)
        (hashtable-copy . g$13373$1MHp3Q)
        (hashtable-contains? . g$5784$1MHp3Q)
        (hashtable-clear! . g$5786$1MHp3Q)
        (call-with-output-file . g$8459$1MHp3Q)
        (call-with-input-file . g$8458$1MHp3Q)
        (write-char . g$8450$1MHp3Q)
        (write . g$13372$1MHp3Q)
        (with-output-to-file . g$8457$1MHp3Q)
        (with-input-from-file . g$8456$1MHp3Q)
        (read-char . g$8449$1MHp3Q)
        (read . g$13371$1MHp3Q)
        (peek-char . g$8448$1MHp3Q)
        (open-output-file . g$13370$1MHp3Q)
        (open-input-file . g$13369$1MHp3Q)
        (newline . g$8460$1MHp3Q)
        (display . g$13368$1MHp3Q)
        (close-output-port . g$13367$1MHp3Q)
        (close-input-port . g$13366$1MHp3Q)
        (eof-object? . g$13365$1MHp3Q)
        (eof-object . g$13364$1MHp3Q)
        (current-error-port . g$13363$1MHp3Q)
        (current-output-port . g$13362$1MHp3Q)
        (current-input-port . g$13361$1MHp3Q)
        (output-port? . g$13360$1MHp3Q)
        (input-port? . g$13359$1MHp3Q)
        (utf-8-codec . g$13358$1MHp3Q)
        (utf-16-codec . g$13357$1MHp3Q)
        (transcoder-error-handling-mode . g$13356$1MHp3Q)
        (transcoder-eol-style . g$13355$1MHp3Q)
        (transcoder-codec . g$13354$1MHp3Q)
        (transcoded-port . g$13353$1MHp3Q)
        (textual-port? . g$13352$1MHp3Q)
        (string->bytevector . g$13351$1MHp3Q)
        (standard-output-port . g$13350$1MHp3Q)
        (standard-input-port . g$13349$1MHp3Q)
        (standard-error-port . g$13348$1MHp3Q)
        (set-port-position! . g$13347$1MHp3Q)
        (put-u8 . g$13346$1MHp3Q)
        (put-string . g$13345$1MHp3Q)
        (put-datum . g$8428$1MHp3Q)
        (put-char . g$13344$1MHp3Q)
        (put-bytevector . g$13343$1MHp3Q)
        (port? . g$8433$1MHp3Q)
        (port-transcoder . g$13342$1MHp3Q)
        (port-position . g$13341$1MHp3Q)
        (port-has-set-port-position!? . g$13340$1MHp3Q)
        (port-has-port-position? . g$13339$1MHp3Q)
        (port-eof? . g$13338$1MHp3Q)
        (output-port-buffer-mode . g$13337$1MHp3Q)
        (open-string-output-port . g$8432$1MHp3Q)
        (open-string-input-port . g$13336$1MHp3Q)
        (open-file-output-port . g$13335$1MHp3Q)
        (open-file-input/output-port . g$13334$1MHp3Q)
        (open-file-input-port . g$13333$1MHp3Q)
        (open-bytevector-output-port . g$13332$1MHp3Q)
        (open-bytevector-input-port . g$13331$1MHp3Q)
        (native-transcoder . g$13330$1MHp3Q)
        (native-eol-style . g$13329$1MHp3Q)
        (make-transcoder . g$13328$1MHp3Q)
        (latin-1-codec . g$13327$1MHp3Q)
        (make-i/o-write-error . g$6479$1MHp3Q)
        (make-i/o-read-error . g$6466$1MHp3Q)
        (make-i/o-port-error . g$6574$1MHp3Q)
        (make-i/o-invalid-position-error . g$6492$1MHp3Q)
        (make-i/o-filename-error . g$6507$1MHp3Q)
        (make-i/o-file-protection-error . g$6522$1MHp3Q)
        (make-i/o-file-is-read-only-error . g$6535$1MHp3Q)
        (make-i/o-file-does-not-exist-error . g$6561$1MHp3Q)
        (make-i/o-file-already-exists-error . g$6548$1MHp3Q)
        (make-i/o-error . g$6453$1MHp3Q)
        (make-i/o-encoding-error . g$6602$1MHp3Q)
        (make-i/o-decoding-error . g$6589$1MHp3Q)
        (make-custom-textual-output-port . g$13326$1MHp3Q)
        (make-custom-textual-input/output-port . g$13325$1MHp3Q)
        (make-custom-textual-input-port . g$13324$1MHp3Q)
        (make-custom-binary-output-port . g$13323$1MHp3Q)
        (make-custom-binary-input/output-port . g$13322$1MHp3Q)
        (make-custom-binary-input-port . g$13321$1MHp3Q)
        (make-bytevector . g$13320$1MHp3Q)
        (lookahead-u8 . g$13319$1MHp3Q)
        (lookahead-char . g$13318$1MHp3Q)
        (i/o-write-error? . g$6480$1MHp3Q)
        (i/o-read-error? . g$6467$1MHp3Q)
        (i/o-port-error? . g$6576$1MHp3Q)
        (i/o-invalid-position-error? . g$6494$1MHp3Q)
        (i/o-error-position . g$6495$1MHp3Q)
        (i/o-filename-error? . g$6509$1MHp3Q)
        (i/o-file-protection-error? . g$6523$1MHp3Q)
        (i/o-file-is-read-only-error? . g$6536$1MHp3Q)
        (i/o-file-does-not-exist-error? . g$6562$1MHp3Q)
        (i/o-file-already-exists-error? . g$6549$1MHp3Q)
        (i/o-error? . g$6454$1MHp3Q)
        (i/o-error-port . g$6577$1MHp3Q)
        (i/o-error-filename . g$6510$1MHp3Q)
        (i/o-encoding-error? . g$6604$1MHp3Q)
        (i/o-encoding-error-char . g$6605$1MHp3Q)
        (i/o-decoding-error? . g$6590$1MHp3Q)
        (get-u8 . g$13317$1MHp3Q)
        (get-string-n! . g$13316$1MHp3Q)
        (get-string-n . g$13315$1MHp3Q)
        (get-string-all . g$13314$1MHp3Q)
        (get-line . g$13313$1MHp3Q)
        (get-datum . g$8429$1MHp3Q)
        (get-char . g$13312$1MHp3Q)
        (get-bytevector-some . g$13311$1MHp3Q)
        (get-bytevector-n! . g$13310$1MHp3Q)
        (get-bytevector-n . g$13309$1MHp3Q)
        (get-bytevector-all . g$13308$1MHp3Q)
        (flush-output-port . g$13307$1MHp3Q)
        (close-port . g$13306$1MHp3Q)
        (call-with-string-output-port . g$8434$1MHp3Q)
        (call-with-port . g$8435$1MHp3Q)
        (call-with-bytevector-output-port . g$13305$1MHp3Q)
        (bytevector->string . g$13304$1MHp3Q)
        (buffer-mode? . g$13303$1MHp3Q)
        (binary-port? . g$13302$1MHp3Q)
        (scheme-report-environment . g$9934$1MHp3Q)
        (quotient . g$6648$1MHp3Q)
        (null-environment . g$9933$1MHp3Q)
        (remainder . g$6649$1MHp3Q)
        (modulo . g$6650$1MHp3Q)
        (inexact->exact . g$6645$1MHp3Q)
        (force . g$6652$1MHp3Q)
        (exact->inexact . g$6646$1MHp3Q)
        (exit . g$13301$1MHp3Q)
        (command-line . g$12973$1MHp3Q)
        (string-fill! . g$13300$1MHp3Q)
        (string-set! . g$13299$1MHp3Q)
        (set-cdr! . g$13298$1MHp3Q)
        (set-car! . g$13297$1MHp3Q)
        (remove . g$5174$1MHp3Q)
        (remv . g$5175$1MHp3Q)
        (remp . g$5155$1MHp3Q)
        (remq . g$5176$1MHp3Q)
        (partition . g$5154$1MHp3Q)
        (memv . g$5162$1MHp3Q)
        (memq . g$5161$1MHp3Q)
        (memp . g$5164$1MHp3Q)
        (member . g$5163$1MHp3Q)
        (exists . g$5168$1MHp3Q)
        (for-all . g$5167$1MHp3Q)
        (fold-right . g$5173$1MHp3Q)
        (fold-left . g$5172$1MHp3Q)
        (find . g$5153$1MHp3Q)
        (filter . g$5156$1MHp3Q)
        (cons* . g$5171$1MHp3Q)
        (assv . g$5158$1MHp3Q)
        (assq . g$5157$1MHp3Q)
        (assp . g$5160$1MHp3Q)
        (assoc . g$5159$1MHp3Q)
        (with-exception-handler . g$13296$1MHp3Q)
        (raise-continuable . g$13295$1MHp3Q)
        (raise . g$13294$1MHp3Q)
        (eval . g$9936$1MHp3Q)
        (environment . g$9932$1MHp3Q)
        (make-enumeration . g$8520$1MHp3Q)
        (enum-set=? . g$8527$1MHp3Q)
        (enum-set-universe . g$8521$1MHp3Q)
        (enum-set-union . g$8528$1MHp3Q)
        (enum-set-subset? . g$8526$1MHp3Q)
        (enum-set-projection . g$8532$1MHp3Q)
        (enum-set-member? . g$8525$1MHp3Q)
        (enum-set-intersection . g$8529$1MHp3Q)
        (enum-set-indexer . g$8522$1MHp3Q)
        (enum-set-difference . g$8530$1MHp3Q)
        (enum-set-constructor . g$8523$1MHp3Q)
        (enum-set-complement . g$8531$1MHp3Q)
        (enum-set->list . g$8524$1MHp3Q)
        (who-condition? . g$6371$1MHp3Q)
        (warning? . g$6290$1MHp3Q)
        (violation? . g$6329$1MHp3Q)
        (undefined-violation? . g$6441$1MHp3Q)
        (syntax-violation? . g$6426$1MHp3Q)
        (syntax-violation-subform . g$6428$1MHp3Q)
        (syntax-violation-form . g$6427$1MHp3Q)
        (syntax-violation . g$9954$1MHp3Q)
        (simple-conditions . g$13293$1MHp3Q)
        (serious-condition? . g$6303$1MHp3Q)
        (non-continuable-violation? . g$6385$1MHp3Q)
        (message-condition? . g$6276$1MHp3Q)
        (make-who-condition . g$6369$1MHp3Q)
        (make-warning . g$6289$1MHp3Q)
        (make-violation . g$6328$1MHp3Q)
        (make-undefined-violation . g$6440$1MHp3Q)
        (make-syntax-violation . g$6423$1MHp3Q)
        (make-serious-condition . g$6302$1MHp3Q)
        (make-non-continuable-violation . g$6384$1MHp3Q)
        (make-message-condition . g$6274$1MHp3Q)
        (make-lexical-violation . g$6410$1MHp3Q)
        (make-irritants-condition . g$6354$1MHp3Q)
        (make-implementation-restriction-violation . g$6397$1MHp3Q)
        (make-error . g$6315$1MHp3Q)
        (make-assertion-violation . g$6341$1MHp3Q)
        (lexical-violation? . g$6411$1MHp3Q)
        (irritants-condition? . g$6356$1MHp3Q)
        (implementation-restriction-violation? . g$6398$1MHp3Q)
        (error? . g$6316$1MHp3Q)
        (condition-who . g$6372$1MHp3Q)
        (condition-predicate . g$13292$1MHp3Q)
        (condition-message . g$6277$1MHp3Q)
        (condition-irritants . g$6357$1MHp3Q)
        (condition-accessor . g$13291$1MHp3Q)
        (condition . g$13290$1MHp3Q)
        (assertion-violation? . g$6342$1MHp3Q)
        (condition? . g$13289$1MHp3Q)
        (utf32->string . g$13288$1MHp3Q)
        (utf16->string . g$13287$1MHp3Q)
        (utf8->string . g$13286$1MHp3Q)
        (uint-list->bytevector . g$13285$1MHp3Q)
        (u8-list->bytevector . g$13284$1MHp3Q)
        (string->utf8 . g$13283$1MHp3Q)
        (string->utf32 . g$13282$1MHp3Q)
        (string->utf16 . g$13281$1MHp3Q)
        (sint-list->bytevector . g$13280$1MHp3Q)
        (native-endianness . g$5818$1MHp3Q)
        (bytevector? . g$5508$1MHp3Q)
        (bytevector=? . g$13279$1MHp3Q)
        (bytevector-uint-set! . g$13278$1MHp3Q)
        (bytevector-uint-ref . g$13277$1MHp3Q)
        (bytevector-u8-set! . g$13276$1MHp3Q)
        (bytevector-u8-ref . g$13275$1MHp3Q)
        (bytevector-u64-set! . g$5839$1MHp3Q)
        (bytevector-u64-ref . g$5835$1MHp3Q)
        (bytevector-u64-native-set! . g$5841$1MHp3Q)
        (bytevector-u64-native-ref . g$5837$1MHp3Q)
        (bytevector-u32-set! . g$5831$1MHp3Q)
        (bytevector-u32-ref . g$5827$1MHp3Q)
        (bytevector-u32-native-set! . g$5833$1MHp3Q)
        (bytevector-u32-native-ref . g$5829$1MHp3Q)
        (bytevector-u16-set! . g$5823$1MHp3Q)
        (bytevector-u16-ref . g$5819$1MHp3Q)
        (bytevector-u16-native-set! . g$5825$1MHp3Q)
        (bytevector-u16-native-ref . g$5821$1MHp3Q)
        (bytevector-sint-set! . g$13274$1MHp3Q)
        (bytevector-sint-ref . g$13273$1MHp3Q)
        (bytevector-s8-set! . g$13272$1MHp3Q)
        (bytevector-s8-ref . g$13271$1MHp3Q)
        (bytevector-s64-set! . g$5840$1MHp3Q)
        (bytevector-s64-ref . g$5836$1MHp3Q)
        (bytevector-s64-native-set! . g$5842$1MHp3Q)
        (bytevector-s64-native-ref . g$5838$1MHp3Q)
        (bytevector-s32-set! . g$5832$1MHp3Q)
        (bytevector-s32-ref . g$5828$1MHp3Q)
        (bytevector-s32-native-set! . g$5834$1MHp3Q)
        (bytevector-s32-native-ref . g$5830$1MHp3Q)
        (bytevector-s16-set! . g$5824$1MHp3Q)
        (bytevector-s16-ref . g$5820$1MHp3Q)
        (bytevector-s16-native-set! . g$5826$1MHp3Q)
        (bytevector-s16-native-ref . g$5822$1MHp3Q)
        (bytevector-length . g$13270$1MHp3Q)
        (bytevector-ieee-single-set! . g$13269$1MHp3Q)
        (bytevector-ieee-single-ref . g$13268$1MHp3Q)
        (bytevector-ieee-single-native-set! . g$5845$1MHp3Q)
        (bytevector-ieee-single-native-ref . g$5843$1MHp3Q)
        (bytevector-ieee-double-set! . g$13267$1MHp3Q)
        (bytevector-ieee-double-ref . g$13266$1MHp3Q)
        (bytevector-ieee-double-native-set! . g$5846$1MHp3Q)
        (bytevector-ieee-double-native-ref . g$5844$1MHp3Q)
        (bytevector-fill! . g$13265$1MHp3Q)
        (bytevector-copy! . g$13264$1MHp3Q)
        (bytevector-copy . g$13263$1MHp3Q)
        (bytevector->uint-list . g$13262$1MHp3Q)
        (bytevector->u8-list . g$13261$1MHp3Q)
        (bytevector->sint-list . g$13260$1MHp3Q)
        (no-nans-violation? . g$6631$1MHp3Q)
        (no-infinities-violation? . g$6618$1MHp3Q)
        (make-no-nans-violation . g$6630$1MHp3Q)
        (make-no-infinities-violation . g$6617$1MHp3Q)
        (real->flonum . g$5949$1MHp3Q)
        (flzero? . g$7870$1MHp3Q)
        (fltruncate . g$7865$1MHp3Q)
        (fltan . g$7851$1MHp3Q)
        (flsqrt . g$7856$1MHp3Q)
        (flsin . g$7849$1MHp3Q)
        (flround . g$7866$1MHp3Q)
        (flpositive? . g$7868$1MHp3Q)
        (flonum? . g$5513$1MHp3Q)
        (flodd? . g$7872$1MHp3Q)
        (flnumerator . g$7815$1MHp3Q)
        (flnegative? . g$7869$1MHp3Q)
        (flnan? . g$7848$1MHp3Q)
        (flmod0 . g$7833$1MHp3Q)
        (flmod . g$7832$1MHp3Q)
        (flmin . g$7874$1MHp3Q)
        (flmax . g$7873$1MHp3Q)
        (fllog . g$7855$1MHp3Q)
        (flinteger? . g$7841$1MHp3Q)
        (flinfinite? . g$7847$1MHp3Q)
        (flfloor . g$7864$1MHp3Q)
        (flfinite? . g$7842$1MHp3Q)
        (flexpt . g$7858$1MHp3Q)
        (flexp . g$7857$1MHp3Q)
        (fleven? . g$7871$1MHp3Q)
        (fldiv0-and-mod0 . g$7840$1MHp3Q)
        (fldiv0 . g$7827$1MHp3Q)
        (fldiv-and-mod . g$7834$1MHp3Q)
        (fldiv . g$7839$1MHp3Q)
        (fldenominator . g$7814$1MHp3Q)
        (flcos . g$7850$1MHp3Q)
        (flceiling . g$7859$1MHp3Q)
        (flatan . g$7854$1MHp3Q)
        (flasin . g$7852$1MHp3Q)
        (flacos . g$7853$1MHp3Q)
        (flabs . g$7867$1MHp3Q)
        (fl>? . g$7821$1MHp3Q)
        (fl>=? . g$7822$1MHp3Q)
        (fl=? . g$7818$1MHp3Q)
        (fl<? . g$7819$1MHp3Q)
        (fl<=? . g$7820$1MHp3Q)
        (fl/ . g$7817$1MHp3Q)
        (fl- . g$7816$1MHp3Q)
        (fl+ . g$7812$1MHp3Q)
        (fl* . g$7813$1MHp3Q)
        (fixnum->flonum . g$5950$1MHp3Q)
        (fxzero? . g$6912$1MHp3Q)
        (fxxor . g$6875$1MHp3Q)
        (fxrotate-bit-field . g$6950$1MHp3Q)
        (fxreverse-bit-field . g$6951$1MHp3Q)
        (fxpositive? . g$6902$1MHp3Q)
        (fxodd? . g$6922$1MHp3Q)
        (fxnot . g$6856$1MHp3Q)
        (fxnegative? . g$6907$1MHp3Q)
        (fxmod0 . g$6886$1MHp3Q)
        (fxmod . g$6885$1MHp3Q)
        (fxmin . g$6924$1MHp3Q)
        (fxmax . g$6923$1MHp3Q)
        (fxlength . g$6853$1MHp3Q)
        (fxior . g$6874$1MHp3Q)
        (fxif . g$6932$1MHp3Q)
        (fxfirst-bit-set . g$6854$1MHp3Q)
        (fxeven? . g$6917$1MHp3Q)
        (fxdiv0-and-mod0 . g$6897$1MHp3Q)
        (fxdiv0 . g$6892$1MHp3Q)
        (fxdiv-and-mod . g$6887$1MHp3Q)
        (fxdiv . g$6880$1MHp3Q)
        (fxcopy-bit-field . g$6947$1MHp3Q)
        (fxcopy-bit . g$6937$1MHp3Q)
        (fxbit-set? . g$6855$1MHp3Q)
        (fxbit-field . g$6942$1MHp3Q)
        (fxbit-count . g$6848$1MHp3Q)
        (fxarithmetic-shift-right . g$6949$1MHp3Q)
        (fxarithmetic-shift-left . g$6948$1MHp3Q)
        (fxarithmetic-shift . g$6843$1MHp3Q)
        (fxand . g$6873$1MHp3Q)
        (fx>? . g$6865$1MHp3Q)
        (fx>=? . g$6866$1MHp3Q)
        (fx=? . g$6862$1MHp3Q)
        (fx<? . g$6863$1MHp3Q)
        (fx<=? . g$6864$1MHp3Q)
        (fx-/carry . g$6926$1MHp3Q)
        (fx- . g$6837$1MHp3Q)
        (fx+/carry . g$6927$1MHp3Q)
        (fx+ . g$6835$1MHp3Q)
        (fx*/carry . g$6925$1MHp3Q)
        (fx* . g$6836$1MHp3Q)
        (greatest-fixnum . g$6806$1MHp3Q)
        (least-fixnum . g$6807$1MHp3Q)
        (fixnum-width . g$5514$1MHp3Q)
        (fixnum? . g$5512$1MHp3Q)
        (bitwise-rotate-bit-field . g$6780$1MHp3Q)
        (bitwise-reverse-bit-field . g$13259$1MHp3Q)
        (bitwise-length . g$13258$1MHp3Q)
        (bitwise-if . g$6774$1MHp3Q)
        (bitwise-first-bit-set . g$13257$1MHp3Q)
        (bitwise-copy-bit-field . g$6777$1MHp3Q)
        (bitwise-copy-bit . g$6775$1MHp3Q)
        (bitwise-bit-set? . g$13256$1MHp3Q)
        (bitwise-bit-field . g$6776$1MHp3Q)
        (bitwise-bit-count . g$13255$1MHp3Q)
        (bitwise-xor . g$13254$1MHp3Q)
        (bitwise-ior . g$13253$1MHp3Q)
        (bitwise-and . g$13252$1MHp3Q)
        (bitwise-not . g$13251$1MHp3Q)
        (bitwise-arithmetic-shift-right . g$6779$1MHp3Q)
        (bitwise-arithmetic-shift-left . g$6778$1MHp3Q)
        (bitwise-arithmetic-shift . g$13250$1MHp3Q)
        (zero? . g$5964$1MHp3Q)
        (vector? . g$5507$1MHp3Q)
        (vector-set! . g$5523$1MHp3Q)
        (vector-ref . g$5522$1MHp3Q)
        (vector-map . g$5586$1MHp3Q)
        (vector-length . g$13249$1MHp3Q)
        (vector-for-each . g$5587$1MHp3Q)
        (vector-fill! . g$5524$1MHp3Q)
        (vector->list . g$13248$1MHp3Q)
        (vector . g$13247$1MHp3Q)
        (values . g$13246$1MHp3Q)
        (truncate . g$6012$1MHp3Q)
        (tan . g$6004$1MHp3Q)
        (symbol? . g$5509$1MHp3Q)
        (symbol=? . g$5571$1MHp3Q)
        (symbol->string . g$13245$1MHp3Q)
        (substring . g$13244$1MHp3Q)
        (string? . g$13243$1MHp3Q)
        (string>? . g$5568$1MHp3Q)
        (string>=? . g$5570$1MHp3Q)
        (string=? . g$5566$1MHp3Q)
        (string<? . g$5567$1MHp3Q)
        (string<=? . g$5569$1MHp3Q)
        (string-ref . g$13242$1MHp3Q)
        (string-length . g$13241$1MHp3Q)
        (string-for-each . g$5588$1MHp3Q)
        (string-copy . g$13240$1MHp3Q)
        (string-append . g$13239$1MHp3Q)
        (string->symbol . g$13238$1MHp3Q)
        (string->number . g$13237$1MHp3Q)
        (string->list . g$13236$1MHp3Q)
        (string . g$13235$1MHp3Q)
        (sqrt . g$6014$1MHp3Q)
        (sin . g$5998$1MHp3Q)
        (round . g$6013$1MHp3Q)
        (reverse . g$5526$1MHp3Q)
        (real? . g$5958$1MHp3Q)
        (real-valued? . g$5961$1MHp3Q)
        (real-part . g$5991$1MHp3Q)
        (rationalize . g$5583$1MHp3Q)
        (rational? . g$5959$1MHp3Q)
        (rational-valued? . g$5962$1MHp3Q)
        (procedure? . g$5511$1MHp3Q)
        (positive? . g$5965$1MHp3Q)
        (pair? . g$13234$1MHp3Q)
        (odd? . g$5556$1MHp3Q)
        (numerator . g$5989$1MHp3Q)
        (number? . g$5951$1MHp3Q)
        (number->string . g$13233$1MHp3Q)
        (null? . g$13232$1MHp3Q)
        (not . g$13231$1MHp3Q)
        (negative? . g$5966$1MHp3Q)
        (nan? . g$5952$1MHp3Q)
        (min . g$5558$1MHp3Q)
        (max . g$5557$1MHp3Q)
        (map . g$5169$1MHp3Q)
        (make-vector . g$13230$1MHp3Q)
        (make-string . g$13229$1MHp3Q)
        (make-rectangular . g$5984$1MHp3Q)
        (make-polar . g$5985$1MHp3Q)
        (magnitude . g$5987$1MHp3Q)
        (log . g$6007$1MHp3Q)
        (list? . g$13228$1MHp3Q)
        (list-tail . g$5149$1MHp3Q)
        (list-ref . g$5150$1MHp3Q)
        (list->vector . g$5520$1MHp3Q)
        (list->string . g$5521$1MHp3Q)
        (list . g$13227$1MHp3Q)
        (length . g$13226$1MHp3Q)
        (lcm . g$5560$1MHp3Q)
        (integer? . g$5960$1MHp3Q)
        (integer-valued? . g$5963$1MHp3Q)
        (integer->char . g$13225$1MHp3Q)
        (infinite? . g$5954$1MHp3Q)
        (inexact? . g$5956$1MHp3Q)
        (inexact . g$5967$1MHp3Q)
        (imag-part . g$5992$1MHp3Q)
        (gcd . g$5559$1MHp3Q)
        (for-each . g$5170$1MHp3Q)
        (floor . g$6010$1MHp3Q)
        (finite? . g$5953$1MHp3Q)
        (expt . g$6016$1MHp3Q)
        (exp . g$5997$1MHp3Q)
        (exact? . g$5955$1MHp3Q)
        (exact-integer-sqrt . g$6015$1MHp3Q)
        (exact . g$5968$1MHp3Q)
        (even? . g$5555$1MHp3Q)
        (error . g$13224$1MHp3Q)
        (eqv? . g$13223$1MHp3Q)
        (equal? . g$13222$1MHp3Q)
        (eq? . g$13221$1MHp3Q)
        (dynamic-wind . g$13220$1MHp3Q)
        (div0-and-mod0 . g$5519$1MHp3Q)
        (mod0 . g$5517$1MHp3Q)
        (div0 . g$5515$1MHp3Q)
        (div-and-mod . g$5518$1MHp3Q)
        (mod . g$5516$1MHp3Q)
        (div . g$6008$1MHp3Q)
        (denominator . g$5990$1MHp3Q)
        (cos . g$6001$1MHp3Q)
        (cons . g$13219$1MHp3Q)
        (complex? . g$5957$1MHp3Q)
        (char? . g$5506$1MHp3Q)
        (char>? . g$5580$1MHp3Q)
        (char>=? . g$5582$1MHp3Q)
        (char=? . g$5578$1MHp3Q)
        (char<? . g$5579$1MHp3Q)
        (char<=? . g$5581$1MHp3Q)
        (char->integer . g$13218$1MHp3Q)
        (ceiling . g$6011$1MHp3Q)
        (call-with-values . g$13217$1MHp3Q)
        (call/cc . g$13216$1MHp3Q)
        (call-with-current-continuation . g$13215$1MHp3Q)
        (cddddr . g$5554$1MHp3Q)
        (cdddar . g$5553$1MHp3Q)
        (cddadr . g$5552$1MHp3Q)
        (cddaar . g$5551$1MHp3Q)
        (cdaddr . g$5550$1MHp3Q)
        (cdadar . g$5549$1MHp3Q)
        (cdaadr . g$5548$1MHp3Q)
        (cdaaar . g$5547$1MHp3Q)
        (cadddr . g$5546$1MHp3Q)
        (caddar . g$5545$1MHp3Q)
        (cadadr . g$5544$1MHp3Q)
        (cadaar . g$5543$1MHp3Q)
        (caaddr . g$5542$1MHp3Q)
        (caadar . g$5541$1MHp3Q)
        (caaadr . g$5540$1MHp3Q)
        (caaaar . g$5539$1MHp3Q)
        (cdddr . g$5538$1MHp3Q)
        (cddar . g$5537$1MHp3Q)
        (cdadr . g$5536$1MHp3Q)
        (cdaar . g$5535$1MHp3Q)
        (caddr . g$5534$1MHp3Q)
        (cadar . g$5533$1MHp3Q)
        (caadr . g$5532$1MHp3Q)
        (caaar . g$5531$1MHp3Q)
        (cddr . g$5530$1MHp3Q)
        (cdar . g$5529$1MHp3Q)
        (cadr . g$5528$1MHp3Q)
        (caar . g$5527$1MHp3Q)
        (cdr . g$13214$1MHp3Q)
        (car . g$13213$1MHp3Q)
        (boolean? . g$5510$1MHp3Q)
        (boolean=? . g$5572$1MHp3Q)
        (atan . g$6006$1MHp3Q)
        (assertion-violation . g$13212$1MHp3Q)
        (asin . g$5999$1MHp3Q)
        (apply . g$13211$1MHp3Q)
        (append . g$13210$1MHp3Q)
        (angle . g$5986$1MHp3Q)
        (acos . g$6002$1MHp3Q)
        (abs . g$6009$1MHp3Q)
        (/ . g$13209$1MHp3Q)
        (* . g$13208$1MHp3Q)
        (- . g$13207$1MHp3Q)
        (+ . g$13206$1MHp3Q)
        (>= . g$5983$1MHp3Q)
        (> . g$5982$1MHp3Q)
        (= . g$5979$1MHp3Q)
        (<= . g$5981$1MHp3Q)
        (< . g$5980$1MHp3Q)
        ($fl>=? . g$13205$1MHp3Q)
        ($fl>? . g$13204$1MHp3Q)
        ($fl<=? . g$13203$1MHp3Q)
        ($fl<? . g$13202$1MHp3Q)
        ($fl- . g$13201$1MHp3Q)
        ($fl/ . g$13200$1MHp3Q)
        ($fl* . g$13199$1MHp3Q)
        ($fl+ . g$13198$1MHp3Q)
        ($fl=? . g$13197$1MHp3Q)
        ($try . g$13196$1MHp3Q)
        ($fxarithmetic-shift-right . g$13195$1MHp3Q)
        ($fxarithmetic-shift-left . g$13194$1MHp3Q)
        ($$fx- . g$13193$1MHp3Q)
        ($$fx* . g$13192$1MHp3Q)
        ($$fx+ . g$13191$1MHp3Q)
        ($fxnot . g$13190$1MHp3Q)
        ($fxxor . g$13189$1MHp3Q)
        ($fxior . g$13188$1MHp3Q)
        ($fxand . g$13187$1MHp3Q)
        ($fx>=? . g$13186$1MHp3Q)
        ($fx>? . g$13185$1MHp3Q)
        ($fx<=? . g$13184$1MHp3Q)
        ($fx<? . g$13183$1MHp3Q)
        ($fx- . g$13182$1MHp3Q)
        ($fxmod0 . g$13181$1MHp3Q)
        ($fxdiv0 . g$13180$1MHp3Q)
        ($fx* . g$13179$1MHp3Q)
        ($fx+ . g$13178$1MHp3Q)
        ($fx=? . g$13177$1MHp3Q)
        ($vector-set! . g$13176$1MHp3Q)
        ($vector-ref . g$13175$1MHp3Q)
        ($cdr . g$13174$1MHp3Q)
        ($car . g$13173$1MHp3Q)
        (make-record-printer . g$13172$1MHp3Q)
        (eqv-hash . g$13171$1MHp3Q)
        (reverse! . g$13170$1MHp3Q)
        (deserialize-port . g$13169$1MHp3Q)
        (serialize-port . g$13168$1MHp3Q)
        (enum-set? . g$8497$1MHp3Q)
        (make-promise . g$6651$1MHp3Q)
        (load/unload . g$12976$1MHp3Q)
        (load/args . g$12975$1MHp3Q)
        (printf . g$8606$1MHp3Q)
        (fprintf . g$8607$1MHp3Q)
        (format . g$8608$1MHp3Q)
        (procedure-form . g$13167$1MHp3Q)
        (procedure-environment . g$13166$1MHp3Q)
        (procedure-name . g$13165$1MHp3Q)
        (procedure-arity . g$13164$1MHp3Q)
        (gc-collect . g$13163$1MHp3Q)
        (typeof . g$13162$1MHp3Q)
        (clr-type? . g$13161$1MHp3Q)
        (get-clr-type . g$13160$1MHp3Q)
        (get-command-line . g$13159$1MHp3Q)
        (vector-append . g$13158$1MHp3Q)
        (vector-filter . g$13157$1MHp3Q)
        (vector-reverse! . g$13156$1MHp3Q)
        (vector-contains? . g$13155$1MHp3Q)
        (vector-index-of . g$13154$1MHp3Q)
        (vector-copy . g$13153$1MHp3Q)
        (vector-binary-search . g$13152$1MHp3Q)
        (string-ci-compare . g$13151$1MHp3Q)
        (string-compare . g$13150$1MHp3Q)
        (string-format . g$13149$1MHp3Q)
        (trace-printer . g$12972$1MHp3Q)
        (make-traced-procedure . g$13148$1MHp3Q)
        (make-traced-macro . g$8628$1MHp3Q)
        (assertion-error . g$9950$1MHp3Q)
        (time-it . g$13147$1MHp3Q)
        (make-parameter . g$8635$1MHp3Q)
        (library-locator . g$13146$1MHp3Q)
        (get-library-paths . g$13145$1MHp3Q)
        (open-tcp-input/output-port . g$13144$1MHp3Q)
        (hashtable-for-each . g$13143$1MHp3Q)
        (hashtable-map . g$13142$1MHp3Q)
        (environment-bindings . g$9928$1MHp3Q)
        (environment-symbols . g$9931$1MHp3Q)
        (interaction-environment-symbols . g$9927$1MHp3Q)
        (optimization-level . g$13141$1MHp3Q)
        (library-path . g$9257$1MHp3Q)
        (make-compile-time-value . g$9636$1MHp3Q)
        (expand->core . g$9937$1MHp3Q)
        (expand . g$9935$1MHp3Q)
        (syntax-transpose . g$9874$1MHp3Q)
        (convert->cps . g$8954$1MHp3Q)
        (inexact=? . g$13140$1MHp3Q)
        (bignum-sqrt-exact . g$13139$1MHp3Q)
        (bignum-sqrt . g$13138$1MHp3Q)
        (inexact-compare . g$13137$1MHp3Q)
        (exact-compare . g$13136$1MHp3Q)
        (installed-libraries . g$9278$1MHp3Q)
        (uninstall-library . g$9269$1MHp3Q)
        (pretty-gensyms . g$8718$1MHp3Q)
        (pretty-width . g$8715$1MHp3Q)
        (pretty-print . g$8720$1MHp3Q)
        (pointer+ . g$13135$1MHp3Q)
        (&no-nans . g$13134$1MHp3Q)
        (&no-infinities . g$13133$1MHp3Q)
        (&i/o-encoding . g$13132$1MHp3Q)
        (&i/o-decoding . g$13131$1MHp3Q)
        (&i/o-port . g$13130$1MHp3Q)
        (&i/o-file-does-not-exist . g$13129$1MHp3Q)
        (&i/o-file-already-exists . g$13128$1MHp3Q)
        (&i/o-file-is-read-only . g$13127$1MHp3Q)
        (&i/o-file-protection . g$13126$1MHp3Q)
        (&i/o-filename . g$13125$1MHp3Q)
        (&i/o-invalid-position . g$13124$1MHp3Q)
        (&i/o-write . g$13123$1MHp3Q)
        (&i/o-read . g$13122$1MHp3Q)
        (&i/o . g$13121$1MHp3Q)
        (&non-continuable . g$13120$1MHp3Q)
        (&undefined . g$13119$1MHp3Q)
        (&syntax . g$13118$1MHp3Q)
        (&lexical . g$13117$1MHp3Q)
        (&implementation-restriction . g$13116$1MHp3Q)
        (&who . g$13115$1MHp3Q)
        (&irritants . g$13114$1MHp3Q)
        (&assertion . g$13113$1MHp3Q)
        (&violation . g$13112$1MHp3Q)
        (&error . g$13111$1MHp3Q)
        (&serious . g$13110$1MHp3Q)
        (&warning . g$13109$1MHp3Q)
        (&message . g$13108$1MHp3Q)
        (&condition . g$13107$1MHp3Q)
        (define-condition-type . g$13106$1MHp3Q)
        (define-enumeration . g$13105$1MHp3Q)
        (define-record-type . g$13104$1MHp3Q)
        (parent-rtd . g$13103$1MHp3Q)
        (nongenerative . g$13102$1MHp3Q)
        (opaque . g$13101$1MHp3Q)
        (sealed . g$13100$1MHp3Q)
        (protocol . g$13099$1MHp3Q)
        (parent . g$13098$1MHp3Q)
        (immutable . g$13097$1MHp3Q)
        (mutable . g$13096$1MHp3Q)
        (fields . g$13095$1MHp3Q)
        (error-handling-mode . g$13094$1MHp3Q)
        (file-options . g$13093$1MHp3Q)
        (buffer-mode . g$13092$1MHp3Q)
        (eol-style . g$13091$1MHp3Q)
        (guard . g$13090$1MHp3Q)
        (trace-letrec-syntax . g$13089$1MHp3Q)
        (trace-let-syntax . g$13088$1MHp3Q)
        (trace-define-syntax . g$13087$1MHp3Q)
        (trace-define . g$13086$1MHp3Q)
        (trace-lambda . g$13085$1MHp3Q)
        (unsyntax-splicing . g$13084$1MHp3Q)
        (unsyntax . g$13083$1MHp3Q)
        (unquote-splicing . g$13082$1MHp3Q)
        (unquote . g$13081$1MHp3Q)
        (_ . g$13080$1MHp3Q)
        (else . g$13079$1MHp3Q)
        (=> . g$13078$1MHp3Q)
        (... . g$13077$1MHp3Q)
        (assert . g$13076$1MHp3Q)
        (endianness . g$13075$1MHp3Q)
        (delay . g$13074$1MHp3Q)
        (time . g$13073$1MHp3Q)
        (or . g$13072$1MHp3Q)
        (and . g$13071$1MHp3Q)
        (do . g$13070$1MHp3Q)
        (cond . g$13069$1MHp3Q)
        (let* . g$13068$1MHp3Q)
        (let . g$13067$1MHp3Q)
        (identifier-syntax . g$13066$1MHp3Q)
        (with-syntax . g$13065$1MHp3Q)
        (quasisyntax . g$13064$1MHp3Q)
        (quasiquote . g$13063$1MHp3Q)
        (syntax-rules . g$13062$1MHp3Q)
        (include-into . g$13061$1MHp3Q)
        (include . g$13060$1MHp3Q)
        (define-struct . g$13059$1MHp3Q)
        (let-values . g$13058$1MHp3Q)
        (let*-values . g$13057$1MHp3Q)
        (record-constructor-descriptor . g$13056$1MHp3Q)
        (record-type-descriptor . g$13055$1MHp3Q)
        (fluid-let-syntax . g$13054$1MHp3Q)
        (case . g$13053$1MHp3Q)
        (parameterize . g$13052$1MHp3Q)
        (unless . g$13051$1MHp3Q)
        (when . g$13050$1MHp3Q)
        (if . g$13049$1MHp3Q)
        (letrec* . g$13048$1MHp3Q)
        (letrec . g$13047$1MHp3Q)
        (type-descriptor . g$13046$1MHp3Q)
        (case-lambda . g$13045$1MHp3Q)
        (lambda . g$13044$1MHp3Q)
        (syntax . g$13043$1MHp3Q)
        (syntax-case . g$13042$1MHp3Q)
        (quote . g$13041$1MHp3Q)
        (foreign-call . g$13040$1MHp3Q)
        (letrec-syntax . g$13039$1MHp3Q)
        (let-syntax . g$13038$1MHp3Q)
        (set! . g$13037$1MHp3Q)
        (export . g$13036$1MHp3Q)
        (import . g$13035$1MHp3Q)
        (library . g$13034$1MHp3Q)
        (begin . g$13033$1MHp3Q)
        (module . g$13032$1MHp3Q)
        (define-syntax . g$13031$1MHp3Q)
        (define . g$13030$1MHp3Q))
      '((g$9831$1MHp3Q core-prim . ellipsis-map)
        (g$6633$1MHp3Q core-prim . &no-nans-rcd)
        (g$6632$1MHp3Q core-prim . &no-nans-rtd)
        (g$6620$1MHp3Q core-prim . &no-infinities-rcd)
        (g$6619$1MHp3Q core-prim . &no-infinities-rtd)
        (g$6607$1MHp3Q core-prim . &i/o-encoding-rcd)
        (g$6606$1MHp3Q core-prim . &i/o-encoding-rtd)
        (g$6592$1MHp3Q core-prim . &i/o-decoding-rcd)
        (g$6591$1MHp3Q core-prim . &i/o-decoding-rtd)
        (g$6579$1MHp3Q core-prim . &i/o-port-rcd)
        (g$6578$1MHp3Q core-prim . &i/o-port-rtd)
        (g$6564$1MHp3Q core-prim . &i/o-file-does-not-exist-rcd)
        (g$6563$1MHp3Q core-prim . &i/o-file-does-not-exist-rtd)
        (g$6551$1MHp3Q core-prim . &i/o-file-already-exists-rcd)
        (g$6550$1MHp3Q core-prim . &i/o-file-already-exists-rtd)
        (g$6538$1MHp3Q core-prim . &i/o-file-is-read-only-rcd)
        (g$6537$1MHp3Q core-prim . &i/o-file-is-read-only-rtd)
        (g$6525$1MHp3Q core-prim . &i/o-file-protection-rcd)
        (g$6524$1MHp3Q core-prim . &i/o-file-protection-rtd)
        (g$6512$1MHp3Q core-prim . &i/o-filename-rcd)
        (g$6511$1MHp3Q core-prim . &i/o-filename-rtd)
        (g$6497$1MHp3Q core-prim . &i/o-invalid-position-rcd)
        (g$6496$1MHp3Q core-prim . &i/o-invalid-position-rtd)
        (g$6482$1MHp3Q core-prim . &i/o-write-rcd)
        (g$6481$1MHp3Q core-prim . &i/o-write-rtd)
        (g$6469$1MHp3Q core-prim . &i/o-read-rcd)
        (g$6468$1MHp3Q core-prim . &i/o-read-rtd)
        (g$6456$1MHp3Q core-prim . &i/o-rcd)
        (g$6455$1MHp3Q core-prim . &i/o-rtd)
        (g$6443$1MHp3Q core-prim . &undefined-rcd)
        (g$6442$1MHp3Q core-prim . &undefined-rtd)
        (g$6430$1MHp3Q core-prim . &syntax-rcd)
        (g$6429$1MHp3Q core-prim . &syntax-rtd)
        (g$6413$1MHp3Q core-prim . &lexical-rcd)
        (g$6412$1MHp3Q core-prim . &lexical-rtd)
        (g$6400$1MHp3Q core-prim . &implementation-restriction-rcd)
        (g$6399$1MHp3Q core-prim . &implementation-restriction-rtd)
        (g$6387$1MHp3Q core-prim . &non-continuable-rcd)
        (g$6386$1MHp3Q core-prim . &non-continuable-rtd)
        (g$6374$1MHp3Q core-prim . &who-rcd)
        (g$6373$1MHp3Q core-prim . &who-rtd)
        (g$6359$1MHp3Q core-prim . &irritants-rcd)
        (g$6358$1MHp3Q core-prim . &irritants-rtd)
        (g$6344$1MHp3Q core-prim . &assertion-rcd)
        (g$6343$1MHp3Q core-prim . &assertion-rtd)
        (g$6331$1MHp3Q core-prim . &violation-rcd)
        (g$6330$1MHp3Q core-prim . &violation-rtd)
        (g$6318$1MHp3Q core-prim . &error-rcd)
        (g$6317$1MHp3Q core-prim . &error-rtd)
        (g$6305$1MHp3Q core-prim . &serious-rcd)
        (g$6304$1MHp3Q core-prim . &serious-rtd)
        (g$6292$1MHp3Q core-prim . &warning-rcd)
        (g$6291$1MHp3Q core-prim . &warning-rtd)
        (g$6279$1MHp3Q core-prim . &message-rcd)
        (g$6278$1MHp3Q core-prim . &message-rtd)
        (g$6239$1MHp3Q core-prim . &condition-rcd)
        (g$6238$1MHp3Q core-prim . &condition-rtd)
        (g$13455$1MHp3Q core-prim . library-letrec*)
        (g$13454$1MHp3Q core-prim . annotation-stripped)
        (g$13453$1MHp3Q core-prim . annotation-source)
        (g$13452$1MHp3Q core-prim . annotation-expression)
        (g$13451$1MHp3Q core-prim . annotation?)
        (g$13450$1MHp3Q core-prim . read-annotated)
        (g$6005$1MHp3Q core-prim . tanh)
        (g$6003$1MHp3Q core-prim . cosh)
        (g$6000$1MHp3Q core-prim . sinh)
        (g$13449$1MHp3Q core-prim . make-guid)
        (g$13448$1MHp3Q core-prim . unspecified?)
        (g$5152$1MHp3Q core-prim . make-list)
        (g$5151$1MHp3Q core-prim . last-pair)
        (g$13447$1MHp3Q core-prim . load-r5rs)
        (g$13446$1MHp3Q core-prim . license)
        (g$13445$1MHp3Q core-prim . stacktrace)
        (g$12978$1MHp3Q core-prim . ironscheme-build)
        (g$13444$1MHp3Q core-prim . pinvoke-call-internal)
        (g$13443$1MHp3Q core-prim . ffi-callback-internal)
        (g$13442$1MHp3Q core-prim . ffi-callout-internal)
        (g$13441$1MHp3Q core-prim . define-clr-class-internal)
        (g$13440$1MHp3Q core-prim . clr-field-set!-internal)
        (g$13439$1MHp3Q core-prim . clr-field-get-internal)
        (g$13438$1MHp3Q core-prim . clr-cast-internal)
        (g$13437$1MHp3Q core-prim . clr-call-internal)
        (g$13436$1MHp3Q core-prim . clr-new-internal)
        (g$13435$1MHp3Q core-prim . clr-new-array-internal)
        (g$13434$1MHp3Q core-prim . clr-is-internal)
        (g$13433$1MHp3Q core-prim . clr-reference-internal)
        (g$13432$1MHp3Q core-prim . clr-using-internal)
        (g$9951$1MHp3Q core-prim . syntax-error)
        (g$9826$1MHp3Q core-prim . syntax-dispatch)
        (g$13431$1MHp3Q core-prim . compile-core)
        (g$13430$1MHp3Q core-prim . eval-core)
        (g$13429$1MHp3Q core-prim . remove-location)
        (g$13428$1MHp3Q core-prim . set-symbol-value!)
        (g$13427$1MHp3Q core-prim . symbol-value)
        (g$13426$1MHp3Q core-prim . symbol-bound?)
        (g$13425$1MHp3Q core-prim . ungensym)
        (g$13424$1MHp3Q core-prim . gensym)
        (g$13423$1MHp3Q core-prim . void)
        (g$13422$1MHp3Q core-prim . load-serialized-library)
        (g$13421$1MHp3Q core-prim . serialize-library)
        (g$12982$1MHp3Q core-prim . compile-system-libraries)
        (g$12984$1MHp3Q core-prim . compile->closure)
        (g$12983$1MHp3Q core-prim . compile)
        (g$12977$1MHp3Q core-prim . load)
        (g$13420$1MHp3Q core-prim . string-normalize)
        (g$9961$1MHp3Q core-prim . interaction-environment)
        (g$13419$1MHp3Q core-prim . char-ready?)
        (g$13418$1MHp3Q core-prim . string-upcase)
        (g$13417$1MHp3Q core-prim . string-titlecase)
        (g$6716$1MHp3Q core-prim . string-normalize-nfkd)
        (g$6715$1MHp3Q core-prim . string-normalize-nfkc)
        (g$6714$1MHp3Q core-prim . string-normalize-nfd)
        (g$6713$1MHp3Q core-prim . string-normalize-nfc)
        (g$13416$1MHp3Q core-prim . string-foldcase)
        (g$13415$1MHp3Q core-prim . string-downcase)
        (g$6700$1MHp3Q core-prim . string-ci>?)
        (g$6702$1MHp3Q core-prim . string-ci>=?)
        (g$6698$1MHp3Q core-prim . string-ci=?)
        (g$6699$1MHp3Q core-prim . string-ci<?)
        (g$6701$1MHp3Q core-prim . string-ci<=?)
        (g$13414$1MHp3Q core-prim . char-whitespace?)
        (g$13413$1MHp3Q core-prim . char-upper-case?)
        (g$13412$1MHp3Q core-prim . char-title-case?)
        (g$13411$1MHp3Q core-prim . char-numeric?)
        (g$13410$1MHp3Q core-prim . char-lower-case?)
        (g$13409$1MHp3Q core-prim . char-general-category)
        (g$13408$1MHp3Q core-prim . char-upcase)
        (g$13407$1MHp3Q core-prim . char-titlecase)
        (g$13406$1MHp3Q core-prim . char-foldcase)
        (g$13405$1MHp3Q core-prim . char-downcase)
        (g$6710$1MHp3Q core-prim . char-ci>?)
        (g$6712$1MHp3Q core-prim . char-ci>=?)
        (g$6708$1MHp3Q core-prim . char-ci=?)
        (g$6709$1MHp3Q core-prim . char-ci<?)
        (g$6711$1MHp3Q core-prim . char-ci<=?)
        (g$13404$1MHp3Q core-prim . char-alphabetic?)
        (g$9638$1MHp3Q core-prim . variable-transformer-procedure)
        (g$9637$1MHp3Q core-prim . variable-transformer?)
        (g$9635$1MHp3Q core-prim . make-variable-transformer)
        (g$9955$1MHp3Q core-prim . identifier?)
        (g$9944$1MHp3Q core-prim . generate-temporaries)
        (g$9945$1MHp3Q core-prim . free-identifier=?)
        (g$9957$1MHp3Q core-prim . syntax->datum)
        (g$9956$1MHp3Q core-prim . datum->syntax)
        (g$9946$1MHp3Q core-prim . bound-identifier=?)
        (g$13403$1MHp3Q core-prim . record-type-descriptor?)
        (g$13402$1MHp3Q core-prim . record-predicate)
        (g$13401$1MHp3Q core-prim . record-mutator)
        (g$13400$1MHp3Q core-prim . record-constructor)
        (g$13399$1MHp3Q core-prim . record-accessor)
        (g$13398$1MHp3Q core-prim . make-record-type-descriptor)
        (g$13397$1MHp3Q core-prim . make-record-constructor-descriptor)
        (g$13396$1MHp3Q core-prim . record?)
        (g$13395$1MHp3Q core-prim . record-type-uid)
        (g$13394$1MHp3Q core-prim . record-type-sealed?)
        (g$13393$1MHp3Q core-prim . record-type-parent)
        (g$13392$1MHp3Q core-prim . record-type-opaque?)
        (g$13391$1MHp3Q core-prim . record-type-name)
        (g$13390$1MHp3Q core-prim . record-type-generative?)
        (g$13389$1MHp3Q core-prim . record-type-field-names)
        (g$13388$1MHp3Q core-prim . record-rtd)
        (g$13387$1MHp3Q core-prim . record-field-mutable?)
        (g$5812$1MHp3Q core-prim . delete-file)
        (g$5811$1MHp3Q core-prim . file-exists?)
        (g$13386$1MHp3Q core-prim . vector-sort!)
        (g$13385$1MHp3Q core-prim . vector-sort)
        (g$6669$1MHp3Q core-prim . list-sort)
        (g$13384$1MHp3Q core-prim . symbol-hash)
        (g$13383$1MHp3Q core-prim . string-ci-hash)
        (g$13382$1MHp3Q core-prim . string-hash)
        (g$13381$1MHp3Q core-prim . equal-hash)
        (g$13380$1MHp3Q core-prim . hashtable-equivalence-function)
        (g$13379$1MHp3Q core-prim . make-hashtable)
        (g$13378$1MHp3Q core-prim . hashtable-hash-function)
        (g$5779$1MHp3Q core-prim . make-eqv-hashtable)
        (g$5778$1MHp3Q core-prim . make-eq-hashtable)
        (g$13377$1MHp3Q core-prim . hashtable?)
        (g$5785$1MHp3Q core-prim . hashtable-update!)
        (g$5780$1MHp3Q core-prim . hashtable-size)
        (g$5782$1MHp3Q core-prim . hashtable-set!)
        (g$5781$1MHp3Q core-prim . hashtable-ref)
        (g$13376$1MHp3Q core-prim . hashtable-mutable?)
        (g$13375$1MHp3Q core-prim . hashtable-keys)
        (g$13374$1MHp3Q core-prim . hashtable-entries)
        (g$5783$1MHp3Q core-prim . hashtable-delete!)
        (g$13373$1MHp3Q core-prim . hashtable-copy)
        (g$5784$1MHp3Q core-prim . hashtable-contains?)
        (g$5786$1MHp3Q core-prim . hashtable-clear!)
        (g$8459$1MHp3Q core-prim . call-with-output-file)
        (g$8458$1MHp3Q core-prim . call-with-input-file)
        (g$8450$1MHp3Q core-prim . write-char)
        (g$13372$1MHp3Q core-prim . write)
        (g$8457$1MHp3Q core-prim . with-output-to-file)
        (g$8456$1MHp3Q core-prim . with-input-from-file)
        (g$8449$1MHp3Q core-prim . read-char)
        (g$13371$1MHp3Q core-prim . read)
        (g$8448$1MHp3Q core-prim . peek-char)
        (g$13370$1MHp3Q core-prim . open-output-file)
        (g$13369$1MHp3Q core-prim . open-input-file)
        (g$8460$1MHp3Q core-prim . newline)
        (g$13368$1MHp3Q core-prim . display)
        (g$13367$1MHp3Q core-prim . close-output-port)
        (g$13366$1MHp3Q core-prim . close-input-port)
        (g$13365$1MHp3Q core-prim . eof-object?)
        (g$13364$1MHp3Q core-prim . eof-object)
        (g$13363$1MHp3Q core-prim . current-error-port)
        (g$13362$1MHp3Q core-prim . current-output-port)
        (g$13361$1MHp3Q core-prim . current-input-port)
        (g$13360$1MHp3Q core-prim . output-port?)
        (g$13359$1MHp3Q core-prim . input-port?)
        (g$13358$1MHp3Q core-prim . utf-8-codec)
        (g$13357$1MHp3Q core-prim . utf-16-codec)
        (g$13356$1MHp3Q core-prim . transcoder-error-handling-mode)
        (g$13355$1MHp3Q core-prim . transcoder-eol-style)
        (g$13354$1MHp3Q core-prim . transcoder-codec)
        (g$13353$1MHp3Q core-prim . transcoded-port)
        (g$13352$1MHp3Q core-prim . textual-port?)
        (g$13351$1MHp3Q core-prim . string->bytevector)
        (g$13350$1MHp3Q core-prim . standard-output-port)
        (g$13349$1MHp3Q core-prim . standard-input-port)
        (g$13348$1MHp3Q core-prim . standard-error-port)
        (g$13347$1MHp3Q core-prim . set-port-position!)
        (g$13346$1MHp3Q core-prim . put-u8)
        (g$13345$1MHp3Q core-prim . put-string)
        (g$8428$1MHp3Q core-prim . put-datum)
        (g$13344$1MHp3Q core-prim . put-char)
        (g$13343$1MHp3Q core-prim . put-bytevector)
        (g$8433$1MHp3Q core-prim . port?)
        (g$13342$1MHp3Q core-prim . port-transcoder)
        (g$13341$1MHp3Q core-prim . port-position)
        (g$13340$1MHp3Q core-prim . port-has-set-port-position!?)
        (g$13339$1MHp3Q core-prim . port-has-port-position?)
        (g$13338$1MHp3Q core-prim . port-eof?)
        (g$13337$1MHp3Q core-prim . output-port-buffer-mode)
        (g$8432$1MHp3Q core-prim . open-string-output-port)
        (g$13336$1MHp3Q core-prim . open-string-input-port)
        (g$13335$1MHp3Q core-prim . open-file-output-port)
        (g$13334$1MHp3Q core-prim . open-file-input/output-port)
        (g$13333$1MHp3Q core-prim . open-file-input-port)
        (g$13332$1MHp3Q core-prim . open-bytevector-output-port)
        (g$13331$1MHp3Q core-prim . open-bytevector-input-port)
        (g$13330$1MHp3Q core-prim . native-transcoder)
        (g$13329$1MHp3Q core-prim . native-eol-style)
        (g$13328$1MHp3Q core-prim . make-transcoder)
        (g$13327$1MHp3Q core-prim . latin-1-codec)
        (g$6479$1MHp3Q core-prim . make-i/o-write-error)
        (g$6466$1MHp3Q core-prim . make-i/o-read-error)
        (g$6574$1MHp3Q core-prim . make-i/o-port-error)
        (g$6492$1MHp3Q core-prim . make-i/o-invalid-position-error)
        (g$6507$1MHp3Q core-prim . make-i/o-filename-error)
        (g$6522$1MHp3Q core-prim . make-i/o-file-protection-error)
        (g$6535$1MHp3Q core-prim . make-i/o-file-is-read-only-error)
        (g$6561$1MHp3Q core-prim . make-i/o-file-does-not-exist-error)
        (g$6548$1MHp3Q core-prim . make-i/o-file-already-exists-error)
        (g$6453$1MHp3Q core-prim . make-i/o-error)
        (g$6602$1MHp3Q core-prim . make-i/o-encoding-error)
        (g$6589$1MHp3Q core-prim . make-i/o-decoding-error)
        (g$13326$1MHp3Q core-prim . make-custom-textual-output-port)
        (g$13325$1MHp3Q
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13324$1MHp3Q core-prim . make-custom-textual-input-port)
        (g$13323$1MHp3Q core-prim . make-custom-binary-output-port)
        (g$13322$1MHp3Q
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13321$1MHp3Q core-prim . make-custom-binary-input-port)
        (g$13320$1MHp3Q core-prim . make-bytevector)
        (g$13319$1MHp3Q core-prim . lookahead-u8)
        (g$13318$1MHp3Q core-prim . lookahead-char)
        (g$6480$1MHp3Q core-prim . i/o-write-error?)
        (g$6467$1MHp3Q core-prim . i/o-read-error?)
        (g$6576$1MHp3Q core-prim . i/o-port-error?)
        (g$6494$1MHp3Q core-prim . i/o-invalid-position-error?)
        (g$6495$1MHp3Q core-prim . i/o-error-position)
        (g$6509$1MHp3Q core-prim . i/o-filename-error?)
        (g$6523$1MHp3Q core-prim . i/o-file-protection-error?)
        (g$6536$1MHp3Q core-prim . i/o-file-is-read-only-error?)
        (g$6562$1MHp3Q core-prim . i/o-file-does-not-exist-error?)
        (g$6549$1MHp3Q core-prim . i/o-file-already-exists-error?)
        (g$6454$1MHp3Q core-prim . i/o-error?)
        (g$6577$1MHp3Q core-prim . i/o-error-port)
        (g$6510$1MHp3Q core-prim . i/o-error-filename)
        (g$6604$1MHp3Q core-prim . i/o-encoding-error?)
        (g$6605$1MHp3Q core-prim . i/o-encoding-error-char)
        (g$6590$1MHp3Q core-prim . i/o-decoding-error?)
        (g$13317$1MHp3Q core-prim . get-u8)
        (g$13316$1MHp3Q core-prim . get-string-n!)
        (g$13315$1MHp3Q core-prim . get-string-n)
        (g$13314$1MHp3Q core-prim . get-string-all)
        (g$13313$1MHp3Q core-prim . get-line)
        (g$8429$1MHp3Q core-prim . get-datum)
        (g$13312$1MHp3Q core-prim . get-char)
        (g$13311$1MHp3Q core-prim . get-bytevector-some)
        (g$13310$1MHp3Q core-prim . get-bytevector-n!)
        (g$13309$1MHp3Q core-prim . get-bytevector-n)
        (g$13308$1MHp3Q core-prim . get-bytevector-all)
        (g$13307$1MHp3Q core-prim . flush-output-port)
        (g$13306$1MHp3Q core-prim . close-port)
        (g$8434$1MHp3Q core-prim . call-with-string-output-port)
        (g$8435$1MHp3Q core-prim . call-with-port)
        (g$13305$1MHp3Q core-prim . call-with-bytevector-output-port)
        (g$13304$1MHp3Q core-prim . bytevector->string)
        (g$13303$1MHp3Q core-prim . buffer-mode?)
        (g$13302$1MHp3Q core-prim . binary-port?)
        (g$9934$1MHp3Q core-prim . scheme-report-environment)
        (g$6648$1MHp3Q core-prim . quotient)
        (g$9933$1MHp3Q core-prim . null-environment)
        (g$6649$1MHp3Q core-prim . remainder)
        (g$6650$1MHp3Q core-prim . modulo)
        (g$6645$1MHp3Q core-prim . inexact->exact)
        (g$6652$1MHp3Q core-prim . force)
        (g$6646$1MHp3Q core-prim . exact->inexact)
        (g$13301$1MHp3Q core-prim . exit)
        (g$12973$1MHp3Q core-prim . command-line)
        (g$13300$1MHp3Q core-prim . string-fill!)
        (g$13299$1MHp3Q core-prim . string-set!)
        (g$13298$1MHp3Q core-prim . set-cdr!)
        (g$13297$1MHp3Q core-prim . set-car!)
        (g$5174$1MHp3Q core-prim . remove)
        (g$5175$1MHp3Q core-prim . remv)
        (g$5155$1MHp3Q core-prim . remp)
        (g$5176$1MHp3Q core-prim . remq)
        (g$5154$1MHp3Q core-prim . partition)
        (g$5162$1MHp3Q core-prim . memv)
        (g$5161$1MHp3Q core-prim . memq)
        (g$5164$1MHp3Q core-prim . memp)
        (g$5163$1MHp3Q core-prim . member)
        (g$5168$1MHp3Q core-prim . exists)
        (g$5167$1MHp3Q core-prim . for-all)
        (g$5173$1MHp3Q core-prim . fold-right)
        (g$5172$1MHp3Q core-prim . fold-left)
        (g$5153$1MHp3Q core-prim . find)
        (g$5156$1MHp3Q core-prim . filter)
        (g$5171$1MHp3Q core-prim . cons*)
        (g$5158$1MHp3Q core-prim . assv)
        (g$5157$1MHp3Q core-prim . assq)
        (g$5160$1MHp3Q core-prim . assp)
        (g$5159$1MHp3Q core-prim . assoc)
        (g$13296$1MHp3Q core-prim . with-exception-handler)
        (g$13295$1MHp3Q core-prim . raise-continuable)
        (g$13294$1MHp3Q core-prim . raise)
        (g$9936$1MHp3Q core-prim . eval)
        (g$9932$1MHp3Q core-prim . environment)
        (g$8520$1MHp3Q core-prim . make-enumeration)
        (g$8527$1MHp3Q core-prim . enum-set=?)
        (g$8521$1MHp3Q core-prim . enum-set-universe)
        (g$8528$1MHp3Q core-prim . enum-set-union)
        (g$8526$1MHp3Q core-prim . enum-set-subset?)
        (g$8532$1MHp3Q core-prim . enum-set-projection)
        (g$8525$1MHp3Q core-prim . enum-set-member?)
        (g$8529$1MHp3Q core-prim . enum-set-intersection)
        (g$8522$1MHp3Q core-prim . enum-set-indexer)
        (g$8530$1MHp3Q core-prim . enum-set-difference)
        (g$8523$1MHp3Q core-prim . enum-set-constructor)
        (g$8531$1MHp3Q core-prim . enum-set-complement)
        (g$8524$1MHp3Q core-prim . enum-set->list)
        (g$6371$1MHp3Q core-prim . who-condition?)
        (g$6290$1MHp3Q core-prim . warning?)
        (g$6329$1MHp3Q core-prim . violation?)
        (g$6441$1MHp3Q core-prim . undefined-violation?)
        (g$6426$1MHp3Q core-prim . syntax-violation?)
        (g$6428$1MHp3Q core-prim . syntax-violation-subform)
        (g$6427$1MHp3Q core-prim . syntax-violation-form)
        (g$9954$1MHp3Q core-prim . syntax-violation)
        (g$13293$1MHp3Q core-prim . simple-conditions)
        (g$6303$1MHp3Q core-prim . serious-condition?)
        (g$6385$1MHp3Q core-prim . non-continuable-violation?)
        (g$6276$1MHp3Q core-prim . message-condition?)
        (g$6369$1MHp3Q core-prim . make-who-condition)
        (g$6289$1MHp3Q core-prim . make-warning)
        (g$6328$1MHp3Q core-prim . make-violation)
        (g$6440$1MHp3Q core-prim . make-undefined-violation)
        (g$6423$1MHp3Q core-prim . make-syntax-violation)
        (g$6302$1MHp3Q core-prim . make-serious-condition)
        (g$6384$1MHp3Q core-prim . make-non-continuable-violation)
        (g$6274$1MHp3Q core-prim . make-message-condition)
        (g$6410$1MHp3Q core-prim . make-lexical-violation)
        (g$6354$1MHp3Q core-prim . make-irritants-condition)
        (g$6397$1MHp3Q
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6315$1MHp3Q core-prim . make-error)
        (g$6341$1MHp3Q core-prim . make-assertion-violation)
        (g$6411$1MHp3Q core-prim . lexical-violation?)
        (g$6356$1MHp3Q core-prim . irritants-condition?)
        (g$6398$1MHp3Q
          core-prim
          .
          implementation-restriction-violation?)
        (g$6316$1MHp3Q core-prim . error?)
        (g$6372$1MHp3Q core-prim . condition-who)
        (g$13292$1MHp3Q core-prim . condition-predicate)
        (g$6277$1MHp3Q core-prim . condition-message)
        (g$6357$1MHp3Q core-prim . condition-irritants)
        (g$13291$1MHp3Q core-prim . condition-accessor)
        (g$13290$1MHp3Q core-prim . condition)
        (g$6342$1MHp3Q core-prim . assertion-violation?)
        (g$13289$1MHp3Q core-prim . condition?)
        (g$13288$1MHp3Q core-prim . utf32->string)
        (g$13287$1MHp3Q core-prim . utf16->string)
        (g$13286$1MHp3Q core-prim . utf8->string)
        (g$13285$1MHp3Q core-prim . uint-list->bytevector)
        (g$13284$1MHp3Q core-prim . u8-list->bytevector)
        (g$13283$1MHp3Q core-prim . string->utf8)
        (g$13282$1MHp3Q core-prim . string->utf32)
        (g$13281$1MHp3Q core-prim . string->utf16)
        (g$13280$1MHp3Q core-prim . sint-list->bytevector)
        (g$5818$1MHp3Q core-prim . native-endianness)
        (g$5508$1MHp3Q core-prim . bytevector?)
        (g$13279$1MHp3Q core-prim . bytevector=?)
        (g$13278$1MHp3Q core-prim . bytevector-uint-set!)
        (g$13277$1MHp3Q core-prim . bytevector-uint-ref)
        (g$13276$1MHp3Q core-prim . bytevector-u8-set!)
        (g$13275$1MHp3Q core-prim . bytevector-u8-ref)
        (g$5839$1MHp3Q core-prim . bytevector-u64-set!)
        (g$5835$1MHp3Q core-prim . bytevector-u64-ref)
        (g$5841$1MHp3Q core-prim . bytevector-u64-native-set!)
        (g$5837$1MHp3Q core-prim . bytevector-u64-native-ref)
        (g$5831$1MHp3Q core-prim . bytevector-u32-set!)
        (g$5827$1MHp3Q core-prim . bytevector-u32-ref)
        (g$5833$1MHp3Q core-prim . bytevector-u32-native-set!)
        (g$5829$1MHp3Q core-prim . bytevector-u32-native-ref)
        (g$5823$1MHp3Q core-prim . bytevector-u16-set!)
        (g$5819$1MHp3Q core-prim . bytevector-u16-ref)
        (g$5825$1MHp3Q core-prim . bytevector-u16-native-set!)
        (g$5821$1MHp3Q core-prim . bytevector-u16-native-ref)
        (g$13274$1MHp3Q core-prim . bytevector-sint-set!)
        (g$13273$1MHp3Q core-prim . bytevector-sint-ref)
        (g$13272$1MHp3Q core-prim . bytevector-s8-set!)
        (g$13271$1MHp3Q core-prim . bytevector-s8-ref)
        (g$5840$1MHp3Q core-prim . bytevector-s64-set!)
        (g$5836$1MHp3Q core-prim . bytevector-s64-ref)
        (g$5842$1MHp3Q core-prim . bytevector-s64-native-set!)
        (g$5838$1MHp3Q core-prim . bytevector-s64-native-ref)
        (g$5832$1MHp3Q core-prim . bytevector-s32-set!)
        (g$5828$1MHp3Q core-prim . bytevector-s32-ref)
        (g$5834$1MHp3Q core-prim . bytevector-s32-native-set!)
        (g$5830$1MHp3Q core-prim . bytevector-s32-native-ref)
        (g$5824$1MHp3Q core-prim . bytevector-s16-set!)
        (g$5820$1MHp3Q core-prim . bytevector-s16-ref)
        (g$5826$1MHp3Q core-prim . bytevector-s16-native-set!)
        (g$5822$1MHp3Q core-prim . bytevector-s16-native-ref)
        (g$13270$1MHp3Q core-prim . bytevector-length)
        (g$13269$1MHp3Q core-prim . bytevector-ieee-single-set!)
        (g$13268$1MHp3Q core-prim . bytevector-ieee-single-ref)
        (g$5845$1MHp3Q core-prim . bytevector-ieee-single-native-set!)
        (g$5843$1MHp3Q core-prim . bytevector-ieee-single-native-ref)
        (g$13267$1MHp3Q core-prim . bytevector-ieee-double-set!)
        (g$13266$1MHp3Q core-prim . bytevector-ieee-double-ref)
        (g$5846$1MHp3Q core-prim . bytevector-ieee-double-native-set!)
        (g$5844$1MHp3Q core-prim . bytevector-ieee-double-native-ref)
        (g$13265$1MHp3Q core-prim . bytevector-fill!)
        (g$13264$1MHp3Q core-prim . bytevector-copy!)
        (g$13263$1MHp3Q core-prim . bytevector-copy)
        (g$13262$1MHp3Q core-prim . bytevector->uint-list)
        (g$13261$1MHp3Q core-prim . bytevector->u8-list)
        (g$13260$1MHp3Q core-prim . bytevector->sint-list)
        (g$6631$1MHp3Q core-prim . no-nans-violation?)
        (g$6618$1MHp3Q core-prim . no-infinities-violation?)
        (g$6630$1MHp3Q core-prim . make-no-nans-violation)
        (g$6617$1MHp3Q core-prim . make-no-infinities-violation)
        (g$5949$1MHp3Q core-prim . real->flonum)
        (g$7870$1MHp3Q core-prim . flzero?)
        (g$7865$1MHp3Q core-prim . fltruncate)
        (g$7851$1MHp3Q core-prim . fltan)
        (g$7856$1MHp3Q core-prim . flsqrt)
        (g$7849$1MHp3Q core-prim . flsin)
        (g$7866$1MHp3Q core-prim . flround)
        (g$7868$1MHp3Q core-prim . flpositive?)
        (g$5513$1MHp3Q core-prim . flonum?)
        (g$7872$1MHp3Q core-prim . flodd?)
        (g$7815$1MHp3Q core-prim . flnumerator)
        (g$7869$1MHp3Q core-prim . flnegative?)
        (g$7848$1MHp3Q core-prim . flnan?)
        (g$7833$1MHp3Q core-prim . flmod0)
        (g$7832$1MHp3Q core-prim . flmod)
        (g$7874$1MHp3Q core-prim . flmin)
        (g$7873$1MHp3Q core-prim . flmax)
        (g$7855$1MHp3Q core-prim . fllog)
        (g$7841$1MHp3Q core-prim . flinteger?)
        (g$7847$1MHp3Q core-prim . flinfinite?)
        (g$7864$1MHp3Q core-prim . flfloor)
        (g$7842$1MHp3Q core-prim . flfinite?)
        (g$7858$1MHp3Q core-prim . flexpt)
        (g$7857$1MHp3Q core-prim . flexp)
        (g$7871$1MHp3Q core-prim . fleven?)
        (g$7840$1MHp3Q core-prim . fldiv0-and-mod0)
        (g$7827$1MHp3Q core-prim . fldiv0)
        (g$7834$1MHp3Q core-prim . fldiv-and-mod)
        (g$7839$1MHp3Q core-prim . fldiv)
        (g$7814$1MHp3Q core-prim . fldenominator)
        (g$7850$1MHp3Q core-prim . flcos)
        (g$7859$1MHp3Q core-prim . flceiling)
        (g$7854$1MHp3Q core-prim . flatan)
        (g$7852$1MHp3Q core-prim . flasin)
        (g$7853$1MHp3Q core-prim . flacos)
        (g$7867$1MHp3Q core-prim . flabs)
        (g$7821$1MHp3Q core-prim . fl>?)
        (g$7822$1MHp3Q core-prim . fl>=?)
        (g$7818$1MHp3Q core-prim . fl=?)
        (g$7819$1MHp3Q core-prim . fl<?)
        (g$7820$1MHp3Q core-prim . fl<=?)
        (g$7817$1MHp3Q core-prim . fl/)
        (g$7816$1MHp3Q core-prim . fl-)
        (g$7812$1MHp3Q core-prim . fl+)
        (g$7813$1MHp3Q core-prim . fl*)
        (g$5950$1MHp3Q core-prim . fixnum->flonum)
        (g$6912$1MHp3Q core-prim . fxzero?)
        (g$6875$1MHp3Q core-prim . fxxor)
        (g$6950$1MHp3Q core-prim . fxrotate-bit-field)
        (g$6951$1MHp3Q core-prim . fxreverse-bit-field)
        (g$6902$1MHp3Q core-prim . fxpositive?)
        (g$6922$1MHp3Q core-prim . fxodd?)
        (g$6856$1MHp3Q core-prim . fxnot)
        (g$6907$1MHp3Q core-prim . fxnegative?)
        (g$6886$1MHp3Q core-prim . fxmod0)
        (g$6885$1MHp3Q core-prim . fxmod)
        (g$6924$1MHp3Q core-prim . fxmin)
        (g$6923$1MHp3Q core-prim . fxmax)
        (g$6853$1MHp3Q core-prim . fxlength)
        (g$6874$1MHp3Q core-prim . fxior)
        (g$6932$1MHp3Q core-prim . fxif)
        (g$6854$1MHp3Q core-prim . fxfirst-bit-set)
        (g$6917$1MHp3Q core-prim . fxeven?)
        (g$6897$1MHp3Q core-prim . fxdiv0-and-mod0)
        (g$6892$1MHp3Q core-prim . fxdiv0)
        (g$6887$1MHp3Q core-prim . fxdiv-and-mod)
        (g$6880$1MHp3Q core-prim . fxdiv)
        (g$6947$1MHp3Q core-prim . fxcopy-bit-field)
        (g$6937$1MHp3Q core-prim . fxcopy-bit)
        (g$6855$1MHp3Q core-prim . fxbit-set?)
        (g$6942$1MHp3Q core-prim . fxbit-field)
        (g$6848$1MHp3Q core-prim . fxbit-count)
        (g$6949$1MHp3Q core-prim . fxarithmetic-shift-right)
        (g$6948$1MHp3Q core-prim . fxarithmetic-shift-left)
        (g$6843$1MHp3Q core-prim . fxarithmetic-shift)
        (g$6873$1MHp3Q core-prim . fxand)
        (g$6865$1MHp3Q core-prim . fx>?)
        (g$6866$1MHp3Q core-prim . fx>=?)
        (g$6862$1MHp3Q core-prim . fx=?)
        (g$6863$1MHp3Q core-prim . fx<?)
        (g$6864$1MHp3Q core-prim . fx<=?)
        (g$6926$1MHp3Q core-prim . fx-/carry)
        (g$6837$1MHp3Q core-prim . fx-)
        (g$6927$1MHp3Q core-prim . fx+/carry)
        (g$6835$1MHp3Q core-prim . fx+)
        (g$6925$1MHp3Q core-prim . fx*/carry)
        (g$6836$1MHp3Q core-prim . fx*)
        (g$6806$1MHp3Q core-prim . greatest-fixnum)
        (g$6807$1MHp3Q core-prim . least-fixnum)
        (g$5514$1MHp3Q core-prim . fixnum-width)
        (g$5512$1MHp3Q core-prim . fixnum?)
        (g$6780$1MHp3Q core-prim . bitwise-rotate-bit-field)
        (g$13259$1MHp3Q core-prim . bitwise-reverse-bit-field)
        (g$13258$1MHp3Q core-prim . bitwise-length)
        (g$6774$1MHp3Q core-prim . bitwise-if)
        (g$13257$1MHp3Q core-prim . bitwise-first-bit-set)
        (g$6777$1MHp3Q core-prim . bitwise-copy-bit-field)
        (g$6775$1MHp3Q core-prim . bitwise-copy-bit)
        (g$13256$1MHp3Q core-prim . bitwise-bit-set?)
        (g$6776$1MHp3Q core-prim . bitwise-bit-field)
        (g$13255$1MHp3Q core-prim . bitwise-bit-count)
        (g$13254$1MHp3Q core-prim . bitwise-xor)
        (g$13253$1MHp3Q core-prim . bitwise-ior)
        (g$13252$1MHp3Q core-prim . bitwise-and)
        (g$13251$1MHp3Q core-prim . bitwise-not)
        (g$6779$1MHp3Q core-prim . bitwise-arithmetic-shift-right)
        (g$6778$1MHp3Q core-prim . bitwise-arithmetic-shift-left)
        (g$13250$1MHp3Q core-prim . bitwise-arithmetic-shift)
        (g$5964$1MHp3Q core-prim . zero?)
        (g$5507$1MHp3Q core-prim . vector?)
        (g$5523$1MHp3Q core-prim . vector-set!)
        (g$5522$1MHp3Q core-prim . vector-ref)
        (g$5586$1MHp3Q core-prim . vector-map)
        (g$13249$1MHp3Q core-prim . vector-length)
        (g$5587$1MHp3Q core-prim . vector-for-each)
        (g$5524$1MHp3Q core-prim . vector-fill!)
        (g$13248$1MHp3Q core-prim . vector->list)
        (g$13247$1MHp3Q core-prim . vector)
        (g$13246$1MHp3Q core-prim . values)
        (g$6012$1MHp3Q core-prim . truncate)
        (g$6004$1MHp3Q core-prim . tan)
        (g$5509$1MHp3Q core-prim . symbol?)
        (g$5571$1MHp3Q core-prim . symbol=?)
        (g$13245$1MHp3Q core-prim . symbol->string)
        (g$13244$1MHp3Q core-prim . substring)
        (g$13243$1MHp3Q core-prim . string?)
        (g$5568$1MHp3Q core-prim . string>?)
        (g$5570$1MHp3Q core-prim . string>=?)
        (g$5566$1MHp3Q core-prim . string=?)
        (g$5567$1MHp3Q core-prim . string<?)
        (g$5569$1MHp3Q core-prim . string<=?)
        (g$13242$1MHp3Q core-prim . string-ref)
        (g$13241$1MHp3Q core-prim . string-length)
        (g$5588$1MHp3Q core-prim . string-for-each)
        (g$13240$1MHp3Q core-prim . string-copy)
        (g$13239$1MHp3Q core-prim . string-append)
        (g$13238$1MHp3Q core-prim . string->symbol)
        (g$13237$1MHp3Q core-prim . string->number)
        (g$13236$1MHp3Q core-prim . string->list)
        (g$13235$1MHp3Q core-prim . string)
        (g$6014$1MHp3Q core-prim . sqrt)
        (g$5998$1MHp3Q core-prim . sin)
        (g$6013$1MHp3Q core-prim . round)
        (g$5526$1MHp3Q core-prim . reverse)
        (g$5958$1MHp3Q core-prim . real?)
        (g$5961$1MHp3Q core-prim . real-valued?)
        (g$5991$1MHp3Q core-prim . real-part)
        (g$5583$1MHp3Q core-prim . rationalize)
        (g$5959$1MHp3Q core-prim . rational?)
        (g$5962$1MHp3Q core-prim . rational-valued?)
        (g$5511$1MHp3Q core-prim . procedure?)
        (g$5965$1MHp3Q core-prim . positive?)
        (g$13234$1MHp3Q core-prim . pair?)
        (g$5556$1MHp3Q core-prim . odd?)
        (g$5989$1MHp3Q core-prim . numerator)
        (g$5951$1MHp3Q core-prim . number?)
        (g$13233$1MHp3Q core-prim . number->string)
        (g$13232$1MHp3Q core-prim . null?)
        (g$13231$1MHp3Q core-prim . not)
        (g$5966$1MHp3Q core-prim . negative?)
        (g$5952$1MHp3Q core-prim . nan?)
        (g$5558$1MHp3Q core-prim . min)
        (g$5557$1MHp3Q core-prim . max)
        (g$5169$1MHp3Q core-prim . map)
        (g$13230$1MHp3Q core-prim . make-vector)
        (g$13229$1MHp3Q core-prim . make-string)
        (g$5984$1MHp3Q core-prim . make-rectangular)
        (g$5985$1MHp3Q core-prim . make-polar)
        (g$5987$1MHp3Q core-prim . magnitude)
        (g$6007$1MHp3Q core-prim . log)
        (g$13228$1MHp3Q core-prim . list?)
        (g$5149$1MHp3Q core-prim . list-tail)
        (g$5150$1MHp3Q core-prim . list-ref)
        (g$5520$1MHp3Q core-prim . list->vector)
        (g$5521$1MHp3Q core-prim . list->string)
        (g$13227$1MHp3Q core-prim . list)
        (g$13226$1MHp3Q core-prim . length)
        (g$5560$1MHp3Q core-prim . lcm)
        (g$5960$1MHp3Q core-prim . integer?)
        (g$5963$1MHp3Q core-prim . integer-valued?)
        (g$13225$1MHp3Q core-prim . integer->char)
        (g$5954$1MHp3Q core-prim . infinite?)
        (g$5956$1MHp3Q core-prim . inexact?)
        (g$5967$1MHp3Q core-prim . inexact)
        (g$5992$1MHp3Q core-prim . imag-part)
        (g$5559$1MHp3Q core-prim . gcd)
        (g$5170$1MHp3Q core-prim . for-each)
        (g$6010$1MHp3Q core-prim . floor)
        (g$5953$1MHp3Q core-prim . finite?)
        (g$6016$1MHp3Q core-prim . expt)
        (g$5997$1MHp3Q core-prim . exp)
        (g$5955$1MHp3Q core-prim . exact?)
        (g$6015$1MHp3Q core-prim . exact-integer-sqrt)
        (g$5968$1MHp3Q core-prim . exact)
        (g$5555$1MHp3Q core-prim . even?)
        (g$13224$1MHp3Q core-prim . error)
        (g$13223$1MHp3Q core-prim . eqv?)
        (g$13222$1MHp3Q core-prim . equal?)
        (g$13221$1MHp3Q core-prim . eq?)
        (g$13220$1MHp3Q core-prim . dynamic-wind)
        (g$5519$1MHp3Q core-prim . div0-and-mod0)
        (g$5517$1MHp3Q core-prim . mod0)
        (g$5515$1MHp3Q core-prim . div0)
        (g$5518$1MHp3Q core-prim . div-and-mod)
        (g$5516$1MHp3Q core-prim . mod)
        (g$6008$1MHp3Q core-prim . div)
        (g$5990$1MHp3Q core-prim . denominator)
        (g$6001$1MHp3Q core-prim . cos)
        (g$13219$1MHp3Q core-prim . cons)
        (g$5957$1MHp3Q core-prim . complex?)
        (g$5506$1MHp3Q core-prim . char?)
        (g$5580$1MHp3Q core-prim . char>?)
        (g$5582$1MHp3Q core-prim . char>=?)
        (g$5578$1MHp3Q core-prim . char=?)
        (g$5579$1MHp3Q core-prim . char<?)
        (g$5581$1MHp3Q core-prim . char<=?)
        (g$13218$1MHp3Q core-prim . char->integer)
        (g$6011$1MHp3Q core-prim . ceiling)
        (g$13217$1MHp3Q core-prim . call-with-values)
        (g$13216$1MHp3Q core-prim . call/cc)
        (g$13215$1MHp3Q core-prim . call-with-current-continuation)
        (g$5554$1MHp3Q core-prim . cddddr)
        (g$5553$1MHp3Q core-prim . cdddar)
        (g$5552$1MHp3Q core-prim . cddadr)
        (g$5551$1MHp3Q core-prim . cddaar)
        (g$5550$1MHp3Q core-prim . cdaddr)
        (g$5549$1MHp3Q core-prim . cdadar)
        (g$5548$1MHp3Q core-prim . cdaadr)
        (g$5547$1MHp3Q core-prim . cdaaar)
        (g$5546$1MHp3Q core-prim . cadddr)
        (g$5545$1MHp3Q core-prim . caddar)
        (g$5544$1MHp3Q core-prim . cadadr)
        (g$5543$1MHp3Q core-prim . cadaar)
        (g$5542$1MHp3Q core-prim . caaddr)
        (g$5541$1MHp3Q core-prim . caadar)
        (g$5540$1MHp3Q core-prim . caaadr)
        (g$5539$1MHp3Q core-prim . caaaar)
        (g$5538$1MHp3Q core-prim . cdddr)
        (g$5537$1MHp3Q core-prim . cddar)
        (g$5536$1MHp3Q core-prim . cdadr)
        (g$5535$1MHp3Q core-prim . cdaar)
        (g$5534$1MHp3Q core-prim . caddr)
        (g$5533$1MHp3Q core-prim . cadar)
        (g$5532$1MHp3Q core-prim . caadr)
        (g$5531$1MHp3Q core-prim . caaar)
        (g$5530$1MHp3Q core-prim . cddr)
        (g$5529$1MHp3Q core-prim . cdar)
        (g$5528$1MHp3Q core-prim . cadr)
        (g$5527$1MHp3Q core-prim . caar)
        (g$13214$1MHp3Q core-prim . cdr)
        (g$13213$1MHp3Q core-prim . car)
        (g$5510$1MHp3Q core-prim . boolean?)
        (g$5572$1MHp3Q core-prim . boolean=?)
        (g$6006$1MHp3Q core-prim . atan)
        (g$13212$1MHp3Q core-prim . assertion-violation)
        (g$5999$1MHp3Q core-prim . asin)
        (g$13211$1MHp3Q core-prim . apply)
        (g$13210$1MHp3Q core-prim . append)
        (g$5986$1MHp3Q core-prim . angle)
        (g$6002$1MHp3Q core-prim . acos)
        (g$6009$1MHp3Q core-prim . abs)
        (g$13209$1MHp3Q core-prim . /)
        (g$13208$1MHp3Q core-prim . *)
        (g$13207$1MHp3Q core-prim . -)
        (g$13206$1MHp3Q core-prim . +)
        (g$5983$1MHp3Q core-prim . >=)
        (g$5982$1MHp3Q core-prim . >)
        (g$5979$1MHp3Q core-prim . =)
        (g$5981$1MHp3Q core-prim . <=)
        (g$5980$1MHp3Q core-prim . <)
        (g$13205$1MHp3Q core-prim . $fl>=?)
        (g$13204$1MHp3Q core-prim . $fl>?)
        (g$13203$1MHp3Q core-prim . $fl<=?)
        (g$13202$1MHp3Q core-prim . $fl<?)
        (g$13201$1MHp3Q core-prim . $fl-)
        (g$13200$1MHp3Q core-prim . $fl/)
        (g$13199$1MHp3Q core-prim . $fl*)
        (g$13198$1MHp3Q core-prim . $fl+)
        (g$13197$1MHp3Q core-prim . $fl=?)
        (g$13196$1MHp3Q core-prim . $try)
        (g$13195$1MHp3Q core-prim . $fxarithmetic-shift-right)
        (g$13194$1MHp3Q core-prim . $fxarithmetic-shift-left)
        (g$13193$1MHp3Q core-prim . $$fx-)
        (g$13192$1MHp3Q core-prim . $$fx*)
        (g$13191$1MHp3Q core-prim . $$fx+)
        (g$13190$1MHp3Q core-prim . $fxnot)
        (g$13189$1MHp3Q core-prim . $fxxor)
        (g$13188$1MHp3Q core-prim . $fxior)
        (g$13187$1MHp3Q core-prim . $fxand)
        (g$13186$1MHp3Q core-prim . $fx>=?)
        (g$13185$1MHp3Q core-prim . $fx>?)
        (g$13184$1MHp3Q core-prim . $fx<=?)
        (g$13183$1MHp3Q core-prim . $fx<?)
        (g$13182$1MHp3Q core-prim . $fx-)
        (g$13181$1MHp3Q core-prim . $fxmod0)
        (g$13180$1MHp3Q core-prim . $fxdiv0)
        (g$13179$1MHp3Q core-prim . $fx*)
        (g$13178$1MHp3Q core-prim . $fx+)
        (g$13177$1MHp3Q core-prim . $fx=?)
        (g$13176$1MHp3Q core-prim . $vector-set!)
        (g$13175$1MHp3Q core-prim . $vector-ref)
        (g$13174$1MHp3Q core-prim . $cdr)
        (g$13173$1MHp3Q core-prim . $car)
        (g$13172$1MHp3Q core-prim . make-record-printer)
        (g$13171$1MHp3Q core-prim . eqv-hash)
        (g$13170$1MHp3Q core-prim . reverse!)
        (g$13169$1MHp3Q core-prim . deserialize-port)
        (g$13168$1MHp3Q core-prim . serialize-port)
        (g$8497$1MHp3Q core-prim . enum-set?)
        (g$6651$1MHp3Q core-prim . make-promise)
        (g$12976$1MHp3Q core-prim . load/unload)
        (g$12975$1MHp3Q core-prim . load/args)
        (g$8606$1MHp3Q core-prim . printf)
        (g$8607$1MHp3Q core-prim . fprintf)
        (g$8608$1MHp3Q core-prim . format)
        (g$13167$1MHp3Q core-prim . procedure-form)
        (g$13166$1MHp3Q core-prim . procedure-environment)
        (g$13165$1MHp3Q core-prim . procedure-name)
        (g$13164$1MHp3Q core-prim . procedure-arity)
        (g$13163$1MHp3Q core-prim . gc-collect)
        (g$13162$1MHp3Q core-prim . typeof)
        (g$13161$1MHp3Q core-prim . clr-type?)
        (g$13160$1MHp3Q core-prim . get-clr-type)
        (g$13159$1MHp3Q core-prim . get-command-line)
        (g$13158$1MHp3Q core-prim . vector-append)
        (g$13157$1MHp3Q core-prim . vector-filter)
        (g$13156$1MHp3Q core-prim . vector-reverse!)
        (g$13155$1MHp3Q core-prim . vector-contains?)
        (g$13154$1MHp3Q core-prim . vector-index-of)
        (g$13153$1MHp3Q core-prim . vector-copy)
        (g$13152$1MHp3Q core-prim . vector-binary-search)
        (g$13151$1MHp3Q core-prim . string-ci-compare)
        (g$13150$1MHp3Q core-prim . string-compare)
        (g$13149$1MHp3Q core-prim . string-format)
        (g$12972$1MHp3Q core-prim . trace-printer)
        (g$13148$1MHp3Q core-prim . make-traced-procedure)
        (g$8628$1MHp3Q core-prim . make-traced-macro)
        (g$9950$1MHp3Q core-prim . assertion-error)
        (g$13147$1MHp3Q core-prim . time-it)
        (g$8635$1MHp3Q core-prim . make-parameter)
        (g$13146$1MHp3Q core-prim . library-locator)
        (g$13145$1MHp3Q core-prim . get-library-paths)
        (g$13144$1MHp3Q core-prim . open-tcp-input/output-port)
        (g$13143$1MHp3Q core-prim . hashtable-for-each)
        (g$13142$1MHp3Q core-prim . hashtable-map)
        (g$9928$1MHp3Q core-prim . environment-bindings)
        (g$9931$1MHp3Q core-prim . environment-symbols)
        (g$9927$1MHp3Q core-prim . interaction-environment-symbols)
        (g$13141$1MHp3Q core-prim . optimization-level)
        (g$9257$1MHp3Q core-prim . library-path)
        (g$9636$1MHp3Q core-prim . make-compile-time-value)
        (g$9937$1MHp3Q core-prim . expand->core)
        (g$9935$1MHp3Q core-prim . expand)
        (g$9874$1MHp3Q core-prim . syntax-transpose)
        (g$8954$1MHp3Q core-prim . convert->cps)
        (g$13140$1MHp3Q core-prim . inexact=?)
        (g$13139$1MHp3Q core-prim . bignum-sqrt-exact)
        (g$13138$1MHp3Q core-prim . bignum-sqrt)
        (g$13137$1MHp3Q core-prim . inexact-compare)
        (g$13136$1MHp3Q core-prim . exact-compare)
        (g$9278$1MHp3Q core-prim . installed-libraries)
        (g$9269$1MHp3Q core-prim . uninstall-library)
        (g$8718$1MHp3Q core-prim . pretty-gensyms)
        (g$8715$1MHp3Q core-prim . pretty-width)
        (g$8720$1MHp3Q core-prim . pretty-print)
        (g$13135$1MHp3Q core-prim . pointer+)
        (g$13134$1MHp3Q $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13133$1MHp3Q $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13132$1MHp3Q $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13131$1MHp3Q $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13130$1MHp3Q $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13129$1MHp3Q
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13128$1MHp3Q
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13127$1MHp3Q
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13126$1MHp3Q
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13125$1MHp3Q $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13124$1MHp3Q
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13123$1MHp3Q $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13122$1MHp3Q $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13121$1MHp3Q $core-rtd &i/o-rtd &i/o-rcd)
        (g$13120$1MHp3Q
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13119$1MHp3Q $core-rtd &undefined-rtd &undefined-rcd)
        (g$13118$1MHp3Q $core-rtd &syntax-rtd &syntax-rcd)
        (g$13117$1MHp3Q $core-rtd &lexical-rtd &lexical-rcd)
        (g$13116$1MHp3Q
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13115$1MHp3Q $core-rtd &who-rtd &who-rcd)
        (g$13114$1MHp3Q $core-rtd &irritants-rtd &irritants-rcd)
        (g$13113$1MHp3Q $core-rtd &assertion-rtd &assertion-rcd)
        (g$13112$1MHp3Q $core-rtd &violation-rtd &violation-rcd)
        (g$13111$1MHp3Q $core-rtd &error-rtd &error-rcd)
        (g$13110$1MHp3Q $core-rtd &serious-rtd &serious-rcd)
        (g$13109$1MHp3Q $core-rtd &warning-rtd &warning-rcd)
        (g$13108$1MHp3Q $core-rtd &message-rtd &message-rcd)
        (g$13107$1MHp3Q $core-rtd &condition-rtd &condition-rcd)
        (g$13106$1MHp3Q macro . define-condition-type)
        (g$13105$1MHp3Q macro . define-enumeration)
        (g$13104$1MHp3Q macro . define-record-type)
        (g$13103$1MHp3Q macro . parent-rtd)
        (g$13102$1MHp3Q macro . nongenerative)
        (g$13101$1MHp3Q macro . opaque)
        (g$13100$1MHp3Q macro . sealed)
        (g$13099$1MHp3Q macro . protocol)
        (g$13098$1MHp3Q macro . parent)
        (g$13097$1MHp3Q macro . immutable)
        (g$13096$1MHp3Q macro . mutable)
        (g$13095$1MHp3Q macro . fields)
        (g$13094$1MHp3Q macro . error-handling-mode)
        (g$13093$1MHp3Q macro . file-options)
        (g$13092$1MHp3Q macro . buffer-mode)
        (g$13091$1MHp3Q macro . eol-style)
        (g$13090$1MHp3Q macro . guard)
        (g$13089$1MHp3Q macro . trace-letrec-syntax)
        (g$13088$1MHp3Q macro . trace-let-syntax)
        (g$13087$1MHp3Q macro . trace-define-syntax)
        (g$13086$1MHp3Q macro . trace-define)
        (g$13085$1MHp3Q macro . trace-lambda)
        (g$13084$1MHp3Q macro . unsyntax-splicing)
        (g$13083$1MHp3Q macro . unsyntax)
        (g$13082$1MHp3Q macro . unquote-splicing)
        (g$13081$1MHp3Q macro . unquote)
        (g$13080$1MHp3Q macro . _)
        (g$13079$1MHp3Q macro . else)
        (g$13078$1MHp3Q macro . =>)
        (g$13077$1MHp3Q macro . ...)
        (g$13076$1MHp3Q macro . assert)
        (g$13075$1MHp3Q macro . endianness)
        (g$13074$1MHp3Q macro . delay)
        (g$13073$1MHp3Q macro . time)
        (g$13072$1MHp3Q macro . or)
        (g$13071$1MHp3Q macro . and)
        (g$13070$1MHp3Q macro . do)
        (g$13069$1MHp3Q macro . cond)
        (g$13068$1MHp3Q macro . let*)
        (g$13067$1MHp3Q macro . let)
        (g$13066$1MHp3Q macro . identifier-syntax)
        (g$13065$1MHp3Q macro . with-syntax)
        (g$13064$1MHp3Q macro . quasisyntax)
        (g$13063$1MHp3Q macro . quasiquote)
        (g$13062$1MHp3Q macro . syntax-rules)
        (g$13061$1MHp3Q macro . include-into)
        (g$13060$1MHp3Q macro . include)
        (g$13059$1MHp3Q macro . define-struct)
        (g$13058$1MHp3Q macro . let-values)
        (g$13057$1MHp3Q macro . let*-values)
        (g$13056$1MHp3Q core-macro . record-constructor-descriptor)
        (g$13055$1MHp3Q core-macro . record-type-descriptor)
        (g$13054$1MHp3Q core-macro . fluid-let-syntax)
        (g$13053$1MHp3Q macro . case)
        (g$13052$1MHp3Q macro . parameterize)
        (g$13051$1MHp3Q macro . unless)
        (g$13050$1MHp3Q macro . when)
        (g$13049$1MHp3Q core-macro . if)
        (g$13048$1MHp3Q core-macro . letrec*)
        (g$13047$1MHp3Q core-macro . letrec)
        (g$13046$1MHp3Q core-macro . type-descriptor)
        (g$13045$1MHp3Q core-macro . case-lambda)
        (g$13044$1MHp3Q core-macro . lambda)
        (g$13043$1MHp3Q core-macro . syntax)
        (g$13042$1MHp3Q core-macro . syntax-case)
        (g$13041$1MHp3Q core-macro . quote)
        (g$13040$1MHp3Q core-macro . foreign-call)
        (g$13039$1MHp3Q letrec-syntax)
        (g$13038$1MHp3Q let-syntax)
        (g$13037$1MHp3Q set!)
        (g$13036$1MHp3Q export)
        (g$13035$1MHp3Q import)
        (g$13034$1MHp3Q library)
        (g$13033$1MHp3Q begin)
        (g$13032$1MHp3Q module)
        (g$13031$1MHp3Q define-syntax)
        (g$13030$1MHp3Q define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19469$1MHp3Q
      'g$13493$1MHp3Q
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13431$1MHp3Q)
        (eval-core . g$13430$1MHp3Q)
        (set-symbol-value! . g$13428$1MHp3Q)
        (symbol-value . g$13427$1MHp3Q)
        (gensym . g$13424$1MHp3Q)
        (void . g$13423$1MHp3Q))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$23981$1MHp3Q
     g$trace-printer$24046$1MHp3Q
     (g$make-parameter$18626$1MHp3Q g$pretty-print$18836$1MHp3Q))
   (g$command-line$23982$1MHp3Q
     g$command-line$24047$1MHp3Q
     (g$make-parameter$18626$1MHp3Q (get-command-line)))
   (g$local-library-path$23983$1MHp3Q
     g$local-library-path$24048$1MHp3Q
     (case-lambda
       ((g$filename$23997$1MHp3Q)
        (cons
          (g$get-directory-name$12794$1MHp3Q g$filename$23997$1MHp3Q)
          (g$library-path$19453$1MHp3Q)))))
   (g$load/args$23984$1MHp3Q
     g$load/args$24049$1MHp3Q
     (case-lambda
       ((g$filename$23998$1MHp3Q . g$args$23999$1MHp3Q)
        (begin
          (apply
            g$load-r6rs-top-level$23994$1MHp3Q
            g$filename$23998$1MHp3Q
            'load
            g$args$23999$1MHp3Q)
          (void)))))
   (g$load/unload$23985$1MHp3Q
     g$load/unload$24050$1MHp3Q
     (case-lambda
       ((g$filename$24000$1MHp3Q)
        ((case-lambda
           ((g$libs$24001$1MHp3Q)
            (begin
              (g$load$23986$1MHp3Q g$filename$24000$1MHp3Q)
              (g$for-each$11836$1MHp3Q
                (case-lambda
                  ((g$lib$24002$1MHp3Q)
                   (if (not (g$memq$11827$1MHp3Q
                              g$lib$24002$1MHp3Q
                              g$libs$24001$1MHp3Q))
                     (g$uninstall-library$19465$1MHp3Q
                       g$lib$24002$1MHp3Q)
                     (void))))
                (g$installed-libraries$19474$1MHp3Q)))))
         (g$installed-libraries$19474$1MHp3Q)))))
   (g$load$23986$1MHp3Q
     g$load$24051$1MHp3Q
     (case-lambda
       ((g$filename$24003$1MHp3Q)
        (begin
          (apply
            g$load-r6rs-top-level$23994$1MHp3Q
            g$filename$24003$1MHp3Q
            'load
            (cdr (g$command-line$23982$1MHp3Q)))
          (void)))))
   (g$ironscheme-build$23987$1MHp3Q
     g$ironscheme-build$24052$1MHp3Q
     (case-lambda
       (() (g$ironscheme-build$23987$1MHp3Q '#f))
       ((g$cps?$24004$1MHp3Q)
        (begin
          (g$call-with-output-file$18242$1MHp3Q
            '"build-options.ss"
            (case-lambda
              ((g$p$24005$1MHp3Q)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$24004$1MHp3Q)
                   g$p$24005$1MHp3Q)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$24004$1MHp3Q))
                   g$p$24005$1MHp3Q)
                 (g$newline$18243$1MHp3Q g$p$24005$1MHp3Q)))))
          (g$load$23986$1MHp3Q '"ironscheme-buildscript.ss")))))
   (g$foreground-color$23988$1MHp3Q
     g$foreground-color$24053$1MHp3Q
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$24006$1MHp3Q)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$24006$1MHp3Q))))
   (g$system-exception?$23989$1MHp3Q
     g$system-exception?$24054$1MHp3Q
     (case-lambda
       ((g$e$24007$1MHp3Q)
        (clr-is-internal 'SystemException g$e$24007$1MHp3Q))))
   (g$eval-top-level$23990$1MHp3Q
     g$eval-top-level$24055$1MHp3Q
     (case-lambda
       ((g$x$24008$1MHp3Q)
        (call/cc
          (case-lambda
            ((g$k$24009$1MHp3Q)
             (with-exception-handler
               (case-lambda
                 ((g$e$24010$1MHp3Q)
                  ((case-lambda
                     ((g$serious?$24011$1MHp3Q)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$24016$1MHp3Q
                              g$current-output-port$24017$1MHp3Q
                              g$foreground-color$24018$1MHp3Q
                              g$current-output-port$24019$1MHp3Q)
                            ((case-lambda
                               ((g$swap$24020$1MHp3Q)
                                (dynamic-wind
                                  g$swap$24020$1MHp3Q
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$24011$1MHp3Q
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$24010$1MHp3Q)
                                       (g$newline$18243$1MHp3Q))))
                                  g$swap$24020$1MHp3Q)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$24021$1MHp3Q)
                                      (begin
                                        (g$foreground-color$24016$1MHp3Q
                                          g$foreground-color$24018$1MHp3Q)
                                        (set! g$foreground-color$24018$1MHp3Q
                                          g$t$24021$1MHp3Q))))
                                   (g$foreground-color$24016$1MHp3Q))
                                  ((case-lambda
                                     ((g$t$24022$1MHp3Q)
                                      (begin
                                        (g$current-output-port$24017$1MHp3Q
                                          g$current-output-port$24019$1MHp3Q)
                                        (set! g$current-output-port$24019$1MHp3Q
                                          g$t$24022$1MHp3Q))))
                                   (g$current-output-port$24017$1MHp3Q))))))))
                         g$foreground-color$23988$1MHp3Q
                         current-output-port
                         (if g$serious?$24011$1MHp3Q 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$24011$1MHp3Q
                          (g$k$24009$1MHp3Q)
                          (void)))))
                   ((case-lambda
                      ((g$t$24023$1MHp3Q)
                       (if g$t$24023$1MHp3Q
                         g$t$24023$1MHp3Q
                         (begin
                           '#f
                           (g$system-exception?$23989$1MHp3Q
                             g$e$24010$1MHp3Q)))))
                    (g$serious-condition?$13847$1MHp3Q
                      g$e$24010$1MHp3Q)))))
               (case-lambda
                 (()
                  (g$eval$23954$1MHp3Q
                    g$x$24008$1MHp3Q
                    (g$interaction-environment$23979$1MHp3Q)))))))))))
   (g$compile-system-libraries$23991$1MHp3Q
     g$compile-system-libraries$24056$1MHp3Q
     (case-lambda
       (()
        (g$eval-top-level$23990$1MHp3Q
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$23992$1MHp3Q
     g$compile$24057$1MHp3Q
     (case-lambda
       ((g$filename$24024$1MHp3Q)
        (g$load-r6rs-top-level$23994$1MHp3Q
          g$filename$24024$1MHp3Q
          'compile))))
   (g$compile->closure$23993$1MHp3Q
     g$compile->closure$24058$1MHp3Q
     (case-lambda
       ((g$filename$24025$1MHp3Q)
        (g$load-r6rs-top-level$23994$1MHp3Q
          g$filename$24025$1MHp3Q
          'closure))))
   (g$load-r6rs-top-level$23994$1MHp3Q
     g$load-r6rs-top-level$24059$1MHp3Q
     (case-lambda
       ((g$filename$24026$1MHp3Q
          g$how$24027$1MHp3Q
          .
          g$args$24028$1MHp3Q)
        ((case-lambda
           ((g$library-path$24031$1MHp3Q g$library-path$24032$1MHp3Q)
            ((case-lambda
               ((g$swap$24033$1MHp3Q)
                (dynamic-wind
                  g$swap$24033$1MHp3Q
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$24034$1MHp3Q)
                         ((case-lambda
                            ((g$t$24035$1MHp3Q)
                             (if (eqv? g$t$24035$1MHp3Q 'closure)
                               (g$pre-compile-r6rs-top-level$23977$1MHp3Q
                                 g$x*$24034$1MHp3Q)
                               (if (eqv? g$t$24035$1MHp3Q 'load)
                                 ((case-lambda
                                    ((g$command-line$24038$1MHp3Q
                                       g$command-line$24039$1MHp3Q)
                                     ((case-lambda
                                        ((g$swap$24040$1MHp3Q)
                                         (dynamic-wind
                                           g$swap$24040$1MHp3Q
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$23976$1MHp3Q
                                                 g$x*$24034$1MHp3Q))))
                                           g$swap$24040$1MHp3Q)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$24041$1MHp3Q)
                                             (begin
                                               (g$command-line$24038$1MHp3Q
                                                 g$command-line$24039$1MHp3Q)
                                               (set! g$command-line$24039$1MHp3Q
                                                 g$t$24041$1MHp3Q))))
                                          (g$command-line$24038$1MHp3Q)))))))
                                  g$command-line$23982$1MHp3Q
                                  (cons
                                    g$filename$24026$1MHp3Q
                                    (g$map$11835$1MHp3Q
                                      (case-lambda
                                        ((g$x$24042$1MHp3Q)
                                         (g$format$18417$1MHp3Q
                                           '"~a"
                                           g$x$24042$1MHp3Q)))
                                      g$args$24028$1MHp3Q)))
                                 (if (eqv? g$t$24035$1MHp3Q 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$23976$1MHp3Q
                                       g$x*$24034$1MHp3Q)
                                     (g$serialize-all$19457$1MHp3Q
                                       serialize-library
                                       g$compile-core-expr$19204$1MHp3Q))
                                   (if '#f '#f (void)))))))
                          g$how$24027$1MHp3Q)))
                      (g$with-input-from-file$18239$1MHp3Q
                        g$filename$24026$1MHp3Q
                        (case-lambda
                          (()
                           ((letrec ((g$f$24043$1MHp3Q
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$24044$1MHp3Q)
                                              (if (eof-object?
                                                    g$x$24044$1MHp3Q)
                                                '()
                                                (cons
                                                  g$x$24044$1MHp3Q
                                                  (g$f$24043$1MHp3Q)))))
                                           (read-annotated))))))
                              g$f$24043$1MHp3Q))))))))
                  g$swap$24033$1MHp3Q)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$24045$1MHp3Q)
                    (begin
                      (g$library-path$24031$1MHp3Q
                        g$library-path$24032$1MHp3Q)
                      (set! g$library-path$24032$1MHp3Q
                        g$t$24045$1MHp3Q))))
                 (g$library-path$24031$1MHp3Q)))))))
         g$library-path$19453$1MHp3Q
         (g$local-library-path$23983$1MHp3Q g$filename$24026$1MHp3Q)))))
   (g$fo$23995$1MHp3Q
     g$fo$24060$1MHp3Q
     (g$make-enumeration$18379$1MHp3Q
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$19458$1MHp3Q
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$23996$1MHp3Q)
         (if (g$serious-condition?$13847$1MHp3Q g$ex$23996$1MHp3Q)
           (raise g$ex$23996$1MHp3Q)
           (begin
             '#f
             (display g$ex$23996$1MHp3Q)
             (g$newline$18243$1MHp3Q))))))
    (set-symbol-value! 'load g$load$23986$1MHp3Q)
    (set-symbol-value! 'compile g$compile$23992$1MHp3Q)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$23993$1MHp3Q)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$23990$1MHp3Q)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$23945$1MHp3Q)
    (set-symbol-value! 'expanded2core g$expanded->core$19203$1MHp3Q)
    (set-symbol-value! 'trace-printer g$trace-printer$23981$1MHp3Q)
    (set-symbol-value! 'convert->cps g$convert->cps$19154$1MHp3Q)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$18627$1MHp3Q
      (g$enum-set-constructor$18382$1MHp3Q g$fo$23995$1MHp3Q))
    (g$library-path$19453$1MHp3Q (get-library-paths))
    (g$library-extensions$19454$1MHp3Q
      (cons '".ironscheme.sls" (g$library-extensions$19454$1MHp3Q)))))

