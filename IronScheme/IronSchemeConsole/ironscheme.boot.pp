;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5329$XGD4L
     g$caar$5401$XGD4L
     (case-lambda ((g$x$5360$XGD4L) (car (car g$x$5360$XGD4L)))))
   (g$cadr$5330$XGD4L
     g$cadr$5402$XGD4L
     (case-lambda ((g$x$5361$XGD4L) (car (cdr g$x$5361$XGD4L)))))
   (g$cdar$5331$XGD4L
     g$cdar$5403$XGD4L
     (case-lambda ((g$x$5362$XGD4L) (cdr (car g$x$5362$XGD4L)))))
   (g$cddr$5332$XGD4L
     g$cddr$5404$XGD4L
     (case-lambda ((g$x$5363$XGD4L) (cdr (cdr g$x$5363$XGD4L)))))
   (g$caaar$5333$XGD4L
     g$caaar$5405$XGD4L
     (case-lambda
       ((g$x$5364$XGD4L) (g$caar$5329$XGD4L (car g$x$5364$XGD4L)))))
   (g$caadr$5334$XGD4L
     g$caadr$5406$XGD4L
     (case-lambda
       ((g$x$5365$XGD4L) (g$caar$5329$XGD4L (cdr g$x$5365$XGD4L)))))
   (g$cadar$5335$XGD4L
     g$cadar$5407$XGD4L
     (case-lambda
       ((g$x$5366$XGD4L) (g$cadr$5330$XGD4L (car g$x$5366$XGD4L)))))
   (g$caddr$5336$XGD4L
     g$caddr$5408$XGD4L
     (case-lambda
       ((g$x$5367$XGD4L) (g$cadr$5330$XGD4L (cdr g$x$5367$XGD4L)))))
   (g$cdaar$5337$XGD4L
     g$cdaar$5409$XGD4L
     (case-lambda
       ((g$x$5368$XGD4L) (g$cdar$5331$XGD4L (car g$x$5368$XGD4L)))))
   (g$cdadr$5338$XGD4L
     g$cdadr$5410$XGD4L
     (case-lambda
       ((g$x$5369$XGD4L) (g$cdar$5331$XGD4L (cdr g$x$5369$XGD4L)))))
   (g$cddar$5339$XGD4L
     g$cddar$5411$XGD4L
     (case-lambda
       ((g$x$5370$XGD4L) (g$cddr$5332$XGD4L (car g$x$5370$XGD4L)))))
   (g$cdddr$5340$XGD4L
     g$cdddr$5412$XGD4L
     (case-lambda
       ((g$x$5371$XGD4L) (g$cddr$5332$XGD4L (cdr g$x$5371$XGD4L)))))
   (g$caaaar$5341$XGD4L
     g$caaaar$5413$XGD4L
     (case-lambda
       ((g$x$5372$XGD4L) (g$caaar$5333$XGD4L (car g$x$5372$XGD4L)))))
   (g$caaadr$5342$XGD4L
     g$caaadr$5414$XGD4L
     (case-lambda
       ((g$x$5373$XGD4L) (g$caaar$5333$XGD4L (cdr g$x$5373$XGD4L)))))
   (g$caadar$5343$XGD4L
     g$caadar$5415$XGD4L
     (case-lambda
       ((g$x$5374$XGD4L) (g$caadr$5334$XGD4L (car g$x$5374$XGD4L)))))
   (g$caaddr$5344$XGD4L
     g$caaddr$5416$XGD4L
     (case-lambda
       ((g$x$5375$XGD4L) (g$caadr$5334$XGD4L (cdr g$x$5375$XGD4L)))))
   (g$cadaar$5345$XGD4L
     g$cadaar$5417$XGD4L
     (case-lambda
       ((g$x$5376$XGD4L) (g$cadar$5335$XGD4L (car g$x$5376$XGD4L)))))
   (g$cadadr$5346$XGD4L
     g$cadadr$5418$XGD4L
     (case-lambda
       ((g$x$5377$XGD4L) (g$cadar$5335$XGD4L (cdr g$x$5377$XGD4L)))))
   (g$caddar$5347$XGD4L
     g$caddar$5419$XGD4L
     (case-lambda
       ((g$x$5378$XGD4L) (g$caddr$5336$XGD4L (car g$x$5378$XGD4L)))))
   (g$cadddr$5348$XGD4L
     g$cadddr$5420$XGD4L
     (case-lambda
       ((g$x$5379$XGD4L) (g$caddr$5336$XGD4L (cdr g$x$5379$XGD4L)))))
   (g$cdaaar$5349$XGD4L
     g$cdaaar$5421$XGD4L
     (case-lambda
       ((g$x$5380$XGD4L) (g$cdaar$5337$XGD4L (car g$x$5380$XGD4L)))))
   (g$cdaadr$5350$XGD4L
     g$cdaadr$5422$XGD4L
     (case-lambda
       ((g$x$5381$XGD4L) (g$cdaar$5337$XGD4L (cdr g$x$5381$XGD4L)))))
   (g$cdadar$5351$XGD4L
     g$cdadar$5423$XGD4L
     (case-lambda
       ((g$x$5382$XGD4L) (g$cdadr$5338$XGD4L (car g$x$5382$XGD4L)))))
   (g$cdaddr$5352$XGD4L
     g$cdaddr$5424$XGD4L
     (case-lambda
       ((g$x$5383$XGD4L) (g$cdadr$5338$XGD4L (cdr g$x$5383$XGD4L)))))
   (g$cddaar$5353$XGD4L
     g$cddaar$5425$XGD4L
     (case-lambda
       ((g$x$5384$XGD4L) (g$cddar$5339$XGD4L (car g$x$5384$XGD4L)))))
   (g$cddadr$5354$XGD4L
     g$cddadr$5426$XGD4L
     (case-lambda
       ((g$x$5385$XGD4L) (g$cddar$5339$XGD4L (cdr g$x$5385$XGD4L)))))
   (g$cdddar$5355$XGD4L
     g$cdddar$5427$XGD4L
     (case-lambda
       ((g$x$5386$XGD4L) (g$cdddr$5340$XGD4L (car g$x$5386$XGD4L)))))
   (g$cddddr$5356$XGD4L
     g$cddddr$5428$XGD4L
     (case-lambda
       ((g$x$5387$XGD4L) (g$cdddr$5340$XGD4L (cdr g$x$5387$XGD4L)))))
   (g$rationalize$5357$XGD4L
     g$rationalize$5429$XGD4L
     (case-lambda
       ((g$x$5388$XGD4L g$e$5389$XGD4L)
        (apply / (g$find-ratio$5358$XGD4L g$x$5388$XGD4L g$e$5389$XGD4L)))))
   (g$find-ratio$5358$XGD4L
     g$find-ratio$5430$XGD4L
     (case-lambda
       ((g$x$5390$XGD4L g$e$5391$XGD4L)
        (g$find-ratio-between$5359$XGD4L
          (- g$x$5390$XGD4L g$e$5391$XGD4L)
          (+ g$x$5390$XGD4L g$e$5391$XGD4L)))))
   (g$find-ratio-between$5359$XGD4L
     g$find-ratio-between$5431$XGD4L
     (case-lambda
       ((g$x$5392$XGD4L g$y$5393$XGD4L)
        (letrec* ((g$sr$5394$XGD4L
                    (case-lambda
                      ((g$x$5396$XGD4L g$y$5397$XGD4L)
                       ((case-lambda
                          ((g$fx$5398$XGD4L g$fy$5399$XGD4L)
                           (if (>= g$fx$5398$XGD4L g$x$5396$XGD4L)
                             (list g$fx$5398$XGD4L '1)
                             (if (= g$fx$5398$XGD4L g$fy$5399$XGD4L)
                               ((case-lambda
                                  ((g$rat$5400$XGD4L)
                                   (list
                                     (+ (g$cadr$5330$XGD4L g$rat$5400$XGD4L)
                                        (* g$fx$5398$XGD4L
                                           (car g$rat$5400$XGD4L)))
                                     (car g$rat$5400$XGD4L))))
                                (g$sr$5394$XGD4L
                                  (/ (- g$y$5397$XGD4L g$fy$5399$XGD4L))
                                  (/ (- g$x$5396$XGD4L g$fx$5398$XGD4L))))
                               (list (+ '1 g$fx$5398$XGD4L) '1)))))
                        (exact (floor g$x$5396$XGD4L))
                        (exact (floor g$y$5397$XGD4L)))))))
          (if (< g$y$5393$XGD4L g$x$5392$XGD4L)
            (g$find-ratio-between$5359$XGD4L g$y$5393$XGD4L g$x$5392$XGD4L)
            (if (>= g$x$5392$XGD4L g$y$5393$XGD4L)
              (list g$x$5392$XGD4L '1)
              (if (positive? g$x$5392$XGD4L)
                (g$sr$5394$XGD4L g$x$5392$XGD4L g$y$5393$XGD4L)
                (if (negative? g$y$5393$XGD4L)
                  ((case-lambda
                     ((g$rat$5395$XGD4L)
                      (list
                        (- (car g$rat$5395$XGD4L))
                        (g$cadr$5330$XGD4L g$rat$5395$XGD4L))))
                   (g$sr$5394$XGD4L (- g$y$5393$XGD4L) (- g$x$5392$XGD4L)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5627$XGD4L g$using$5662$XGD4L (clr-using-internal 'system))
   (g$using$5629$XGD4L
     g$using$5663$XGD4L
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5630$XGD4L
     g$make-eq-hashtable$5664$XGD4L
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5641$XGD4L)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5641$XGD4L)))))
   (g$make-eqv-hashtable$5631$XGD4L
     g$make-eqv-hashtable$5665$XGD4L
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5642$XGD4L) (make-hashtable eqv-hash eqv? g$k$5642$XGD4L))))
   (g$hashtable-size$5632$XGD4L
     g$hashtable-size$5666$XGD4L
     (case-lambda
       ((g$ht$5643$XGD4L)
        (clr-call-internal 'hashtable 'get_count g$ht$5643$XGD4L))))
   (g$hashtable-ref$5633$XGD4L
     g$hashtable-ref$5667$XGD4L
     (case-lambda
       ((g$ht$5644$XGD4L g$key$5645$XGD4L g$default$5646$XGD4L)
        (letrec* ((g$r$5647$XGD4L
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5644$XGD4L
                      g$key$5645$XGD4L)))
          (if (not (null? g$r$5647$XGD4L))
            g$r$5647$XGD4L
            g$default$5646$XGD4L)))))
   (g$hashtable-set!$5634$XGD4L
     g$hashtable-set!$5668$XGD4L
     (case-lambda
       ((g$ht$5648$XGD4L g$key$5649$XGD4L g$obj$5650$XGD4L)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5648$XGD4L
          g$key$5649$XGD4L
          g$obj$5650$XGD4L))))
   (g$hashtable-delete!$5635$XGD4L
     g$hashtable-delete!$5669$XGD4L
     (case-lambda
       ((g$ht$5651$XGD4L g$key$5652$XGD4L)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5651$XGD4L
          g$key$5652$XGD4L))))
   (g$hashtable-contains?$5636$XGD4L
     g$hashtable-contains?$5670$XGD4L
     (case-lambda
       ((g$ht$5653$XGD4L g$key$5654$XGD4L)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5653$XGD4L
          g$key$5654$XGD4L))))
   (g$hashtable-update!$5637$XGD4L
     g$hashtable-update!$5671$XGD4L
     (case-lambda
       ((g$ht$5655$XGD4L
          g$key$5656$XGD4L
          g$proc$5657$XGD4L
          g$default$5658$XGD4L)
        (g$hashtable-set!$5634$XGD4L
          g$ht$5655$XGD4L
          g$key$5656$XGD4L
          (g$proc$5657$XGD4L
            (g$hashtable-ref$5633$XGD4L
              g$ht$5655$XGD4L
              g$key$5656$XGD4L
              g$default$5658$XGD4L))))))
   (g$hashtable-clear!$5638$XGD4L
     g$hashtable-clear!$5672$XGD4L
     (case-lambda
       ((g$ht$5659$XGD4L)
        (clr-call-internal 'hashtable 'clear g$ht$5659$XGD4L))
       ((g$ht$5660$XGD4L g$k$5661$XGD4L)
        (clr-call-internal 'hashtable 'clear g$ht$5660$XGD4L))))
   (g$clear-usings$5640$XGD4L
     g$clear-usings$5673$XGD4L
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5675$XGD4L g$using$5741$XGD4L (clr-using-internal 'system.io))
   (g$file-exists?$5676$XGD4L
     g$file-exists?$5742$XGD4L
     (case-lambda
       ((g$fn$5704$XGD4L)
        (clr-call-internal 'file 'exists '() g$fn$5704$XGD4L))))
   (g$delete-file$5677$XGD4L
     g$delete-file$5743$XGD4L
     (case-lambda
       ((g$fn$5705$XGD4L)
        (clr-call-internal 'file 'delete '() g$fn$5705$XGD4L))))
   (g$file-copy$5678$XGD4L
     g$file-copy$5744$XGD4L
     (case-lambda
       ((g$from$5706$XGD4L g$to$5707$XGD4L)
        (g$file-copy$5678$XGD4L g$from$5706$XGD4L g$to$5707$XGD4L '#f))
       ((g$from$5708$XGD4L g$to$5709$XGD4L g$overwrite?$5710$XGD4L)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5708$XGD4L
          g$to$5709$XGD4L
          g$overwrite?$5710$XGD4L))))
   (g$file-move$5679$XGD4L
     g$file-move$5745$XGD4L
     (case-lambda
       ((g$from$5711$XGD4L g$to$5712$XGD4L)
        (clr-call-internal 'file 'move '() g$from$5711$XGD4L g$to$5712$XGD4L))))
   (g$file-create-time$5680$XGD4L
     g$file-create-time$5746$XGD4L
     (case-lambda
       ((g$fn$5713$XGD4L)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5713$XGD4L))))
   (g$file-access-time$5681$XGD4L
     g$file-access-time$5747$XGD4L
     (case-lambda
       ((g$fn$5714$XGD4L)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5714$XGD4L))))
   (g$file-modified-time$5682$XGD4L
     g$file-modified-time$5748$XGD4L
     (case-lambda
       ((g$fn$5715$XGD4L)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5715$XGD4L))))
   (g$directory-exists?$5683$XGD4L
     g$directory-exists?$5749$XGD4L
     (case-lambda
       ((g$fn$5716$XGD4L)
        (clr-call-internal 'directory 'exists '() g$fn$5716$XGD4L))))
   (g$delete-directory$5684$XGD4L
     g$delete-directory$5750$XGD4L
     (case-lambda
       ((g$dir$5717$XGD4L)
        (g$delete-directory$5684$XGD4L g$dir$5717$XGD4L '#f))
       ((g$dir$5718$XGD4L g$recursive?$5719$XGD4L)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5718$XGD4L
          g$recursive?$5719$XGD4L))))
   (g$directory-move$5685$XGD4L
     g$directory-move$5751$XGD4L
     (case-lambda
       ((g$from$5720$XGD4L g$to$5721$XGD4L)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5720$XGD4L
          g$to$5721$XGD4L))))
   (g$create-directory$5686$XGD4L
     g$create-directory$5752$XGD4L
     (case-lambda
       ((g$name$5722$XGD4L)
        (clr-call-internal 'directory 'createdirectory '() g$name$5722$XGD4L))))
   (g$get-files$5687$XGD4L
     g$get-files$5753$XGD4L
     (case-lambda
       ((g$dir$5723$XGD4L) (g$get-files$5687$XGD4L g$dir$5723$XGD4L '"*"))
       ((g$dir$5724$XGD4L g$pattern$5725$XGD4L)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5724$XGD4L
          g$pattern$5725$XGD4L))))
   (g$get-directories$5688$XGD4L
     g$get-directories$5754$XGD4L
     (case-lambda
       ((g$dir$5726$XGD4L)
        (g$get-directories$5688$XGD4L g$dir$5726$XGD4L '"*"))
       ((g$dir$5727$XGD4L g$pattern$5728$XGD4L)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5727$XGD4L
          g$pattern$5728$XGD4L))))
   (g$change-extension$5689$XGD4L
     g$change-extension$5755$XGD4L
     (case-lambda
       ((g$path$5729$XGD4L g$extension$5730$XGD4L)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5729$XGD4L
          g$extension$5730$XGD4L))))
   (g$path-combine$5690$XGD4L
     g$path-combine$5756$XGD4L
     (case-lambda
       ((g$path1$5731$XGD4L g$path2$5732$XGD4L)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5731$XGD4L
          g$path2$5732$XGD4L))))
   (g$get-directory-name$5691$XGD4L
     g$get-directory-name$5757$XGD4L
     (case-lambda
       ((g$path$5733$XGD4L)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5733$XGD4L))))
   (g$get-extension$5692$XGD4L
     g$get-extension$5758$XGD4L
     (case-lambda
       ((g$path$5734$XGD4L)
        (clr-call-internal 'path 'getextension '() g$path$5734$XGD4L))))
   (g$get-filename$5693$XGD4L
     g$get-filename$5759$XGD4L
     (case-lambda
       ((g$path$5735$XGD4L)
        (clr-call-internal 'path 'getfilename '() g$path$5735$XGD4L))))
   (g$get-filename-without-extension$5694$XGD4L
     g$get-filename-without-extension$5760$XGD4L
     (case-lambda
       ((g$path$5736$XGD4L)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5736$XGD4L))))
   (g$get-full-path$5695$XGD4L
     g$get-full-path$5761$XGD4L
     (case-lambda
       ((g$path$5737$XGD4L)
        (clr-call-internal 'path 'getfullpath '() g$path$5737$XGD4L))))
   (g$get-path-root$5696$XGD4L
     g$get-path-root$5762$XGD4L
     (case-lambda
       ((g$path$5738$XGD4L)
        (clr-call-internal 'path 'getpathroot '() g$path$5738$XGD4L))))
   (g$get-random-filename$5697$XGD4L
     g$get-random-filename$5763$XGD4L
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5698$XGD4L
     g$get-temp-filename$5764$XGD4L
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5699$XGD4L
     g$get-temp-path$5765$XGD4L
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5700$XGD4L
     g$path-rooted?$5766$XGD4L
     (case-lambda
       ((g$path$5739$XGD4L)
        (clr-call-internal 'path 'ispathrooted '() g$path$5739$XGD4L))))
   (g$path-has-extension?$5701$XGD4L
     g$path-has-extension?$5767$XGD4L
     (case-lambda
       ((g$path$5740$XGD4L)
        (clr-call-internal 'path 'hasextension '() g$path$5740$XGD4L))))
   (g$clear-usings$5703$XGD4L
     g$clear-usings$5768$XGD4L
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5769$XGD4L
     g$find$5860$XGD4L
     (case-lambda
       ((g$proc$5788$XGD4L g$l$5789$XGD4L)
        (if (null? g$l$5789$XGD4L)
          '#f
          ((case-lambda
             ((g$e$5790$XGD4L)
              (if (g$proc$5788$XGD4L g$e$5790$XGD4L)
                g$e$5790$XGD4L
                (g$find$5769$XGD4L g$proc$5788$XGD4L (cdr g$l$5789$XGD4L)))))
           (car g$l$5789$XGD4L))))))
   (g$partition$5770$XGD4L
     g$partition$5861$XGD4L
     (case-lambda
       ((g$proc$5791$XGD4L g$l$5792$XGD4L)
        ((letrec ((g$f$5793$XGD4L
                    (case-lambda
                      ((g$l$5794$XGD4L g$a$5795$XGD4L g$b$5796$XGD4L)
                       (if (null? g$l$5794$XGD4L)
                         (values
                           (reverse! g$a$5795$XGD4L)
                           (reverse! g$b$5796$XGD4L))
                         ((case-lambda
                            ((g$e$5797$XGD4L)
                             (if (g$proc$5791$XGD4L g$e$5797$XGD4L)
                               (g$f$5793$XGD4L
                                 (cdr g$l$5794$XGD4L)
                                 (cons g$e$5797$XGD4L g$a$5795$XGD4L)
                                 g$b$5796$XGD4L)
                               (g$f$5793$XGD4L
                                 (cdr g$l$5794$XGD4L)
                                 g$a$5795$XGD4L
                                 (cons g$e$5797$XGD4L g$b$5796$XGD4L)))))
                          (car g$l$5794$XGD4L)))))))
           g$f$5793$XGD4L)
         g$l$5792$XGD4L
         '()
         '()))))
   (g$remp$5771$XGD4L
     g$remp$5862$XGD4L
     (case-lambda
       ((g$proc$5798$XGD4L g$l$5799$XGD4L)
        ((letrec ((g$f$5800$XGD4L
                    (case-lambda
                      ((g$l$5801$XGD4L g$a$5802$XGD4L)
                       (if (null? g$l$5801$XGD4L)
                         (reverse! g$a$5802$XGD4L)
                         ((case-lambda
                            ((g$e$5803$XGD4L)
                             (if (g$proc$5798$XGD4L g$e$5803$XGD4L)
                               (g$f$5800$XGD4L
                                 (cdr g$l$5801$XGD4L)
                                 g$a$5802$XGD4L)
                               (g$f$5800$XGD4L
                                 (cdr g$l$5801$XGD4L)
                                 (cons g$e$5803$XGD4L g$a$5802$XGD4L)))))
                          (car g$l$5801$XGD4L)))))))
           g$f$5800$XGD4L)
         g$l$5799$XGD4L
         '()))))
   (g$filter$5772$XGD4L
     g$filter$5863$XGD4L
     (case-lambda
       ((g$proc$5804$XGD4L g$l$5805$XGD4L)
        ((letrec ((g$f$5806$XGD4L
                    (case-lambda
                      ((g$l$5807$XGD4L g$a$5808$XGD4L)
                       (if (null? g$l$5807$XGD4L)
                         (reverse! g$a$5808$XGD4L)
                         ((case-lambda
                            ((g$e$5809$XGD4L)
                             (if (g$proc$5804$XGD4L g$e$5809$XGD4L)
                               (g$f$5806$XGD4L
                                 (cdr g$l$5807$XGD4L)
                                 (cons g$e$5809$XGD4L g$a$5808$XGD4L))
                               (g$f$5806$XGD4L
                                 (cdr g$l$5807$XGD4L)
                                 g$a$5808$XGD4L))))
                          (car g$l$5807$XGD4L)))))))
           g$f$5806$XGD4L)
         g$l$5805$XGD4L
         '()))))
   (g$assv$5773$XGD4L
     g$assv$5864$XGD4L
     (case-lambda
       ((g$obj$5810$XGD4L g$lst$5811$XGD4L)
        (if (null? g$lst$5811$XGD4L)
          '#f
          ((case-lambda
             ((g$c$5812$XGD4L)
              (if (eqv? g$obj$5810$XGD4L (car g$c$5812$XGD4L))
                g$c$5812$XGD4L
                (g$assv$5773$XGD4L g$obj$5810$XGD4L (cdr g$lst$5811$XGD4L)))))
           (car g$lst$5811$XGD4L))))))
   (g$assoc$5774$XGD4L
     g$assoc$5865$XGD4L
     (case-lambda
       ((g$obj$5813$XGD4L g$lst$5814$XGD4L)
        (if (null? g$lst$5814$XGD4L)
          '#f
          ((case-lambda
             ((g$c$5815$XGD4L)
              (if (equal? g$obj$5813$XGD4L (car g$c$5815$XGD4L))
                g$c$5815$XGD4L
                (g$assoc$5774$XGD4L g$obj$5813$XGD4L (cdr g$lst$5814$XGD4L)))))
           (car g$lst$5814$XGD4L))))))
   (g$assp$5775$XGD4L
     g$assp$5866$XGD4L
     (case-lambda
       ((g$p?$5816$XGD4L g$lst$5817$XGD4L)
        (if (null? g$lst$5817$XGD4L)
          '#f
          ((case-lambda
             ((g$c$5818$XGD4L)
              (if (g$p?$5816$XGD4L (car g$c$5818$XGD4L))
                g$c$5818$XGD4L
                (g$assp$5775$XGD4L g$p?$5816$XGD4L (cdr g$lst$5817$XGD4L)))))
           (car g$lst$5817$XGD4L))))))
   (g$member$5776$XGD4L
     g$member$5867$XGD4L
     (case-lambda
       ((g$obj$5819$XGD4L g$lst$5820$XGD4L)
        (if (null? g$lst$5820$XGD4L)
          '#f
          (if (equal? g$obj$5819$XGD4L (car g$lst$5820$XGD4L))
            g$lst$5820$XGD4L
            (g$member$5776$XGD4L g$obj$5819$XGD4L (cdr g$lst$5820$XGD4L)))))))
   (g$memp$5777$XGD4L
     g$memp$5868$XGD4L
     (case-lambda
       ((g$p?$5821$XGD4L g$lst$5822$XGD4L)
        (if (null? g$lst$5822$XGD4L)
          '#f
          (if (g$p?$5821$XGD4L (car g$lst$5822$XGD4L))
            g$lst$5822$XGD4L
            (g$memp$5777$XGD4L g$p?$5821$XGD4L (cdr g$lst$5822$XGD4L)))))))
   (g$all-empty?$5778$XGD4L
     g$all-empty?$5869$XGD4L
     (case-lambda
       ((g$ls$5823$XGD4L)
        ((case-lambda
           ((g$t$5824$XGD4L)
            (if g$t$5824$XGD4L
              g$t$5824$XGD4L
              (begin
                '#f
                (if (null? (car g$ls$5823$XGD4L))
                  (begin '#f (g$all-empty?$5778$XGD4L (cdr g$ls$5823$XGD4L)))
                  '#f)))))
         (null? g$ls$5823$XGD4L)))))
   (g$split$5779$XGD4L
     g$split$5870$XGD4L
     (case-lambda
       ((g$ls$5825$XGD4L)
        (if (null? g$ls$5825$XGD4L)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5779$XGD4L (cdr g$ls$5825$XGD4L))))
            (case-lambda
              ((g$cars$5826$XGD4L g$cdrs$5827$XGD4L)
               ((case-lambda
                  ((g$a$5828$XGD4L)
                   (values
                     (cons (car g$a$5828$XGD4L) g$cars$5826$XGD4L)
                     (cons (cdr g$a$5828$XGD4L) g$cdrs$5827$XGD4L))))
                (car g$ls$5825$XGD4L)))))))))
   (g$for-all$5780$XGD4L
     g$for-all$5871$XGD4L
     (case-lambda
       ((g$f$5829$XGD4L . g$args$5830$XGD4L)
        (if (g$all-empty?$5778$XGD4L g$args$5830$XGD4L)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5779$XGD4L g$args$5830$XGD4L)))
            (case-lambda
              ((g$cars$5831$XGD4L g$cdrs$5832$XGD4L)
               (if (apply g$f$5829$XGD4L g$cars$5831$XGD4L)
                 (begin
                   '#f
                   (apply
                     g$for-all$5780$XGD4L
                     g$f$5829$XGD4L
                     g$cdrs$5832$XGD4L))
                 '#f))))))))
   (g$exists$5781$XGD4L
     g$exists$5872$XGD4L
     (case-lambda
       ((g$f$5833$XGD4L . g$args$5834$XGD4L)
        (if (g$all-empty?$5778$XGD4L g$args$5834$XGD4L)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5779$XGD4L g$args$5834$XGD4L)))
            (case-lambda
              ((g$cars$5835$XGD4L g$cdrs$5836$XGD4L)
               ((case-lambda
                  ((g$t$5837$XGD4L)
                   (if g$t$5837$XGD4L
                     g$t$5837$XGD4L
                     (begin
                       '#f
                       (apply
                         g$exists$5781$XGD4L
                         g$f$5833$XGD4L
                         g$cdrs$5836$XGD4L)))))
                (apply g$f$5833$XGD4L g$cars$5835$XGD4L)))))))))
   (g$cons*$5782$XGD4L
     g$cons*$5873$XGD4L
     (case-lambda
       ((g$a$5838$XGD4L . g$rest$5839$XGD4L)
        ((letrec ((g$f$5840$XGD4L
                    (case-lambda
                      ((g$a$5841$XGD4L g$rest$5842$XGD4L)
                       (if (null? g$rest$5842$XGD4L)
                         g$a$5841$XGD4L
                         (cons
                           g$a$5841$XGD4L
                           (g$f$5840$XGD4L
                             (car g$rest$5842$XGD4L)
                             (cdr g$rest$5842$XGD4L))))))))
           g$f$5840$XGD4L)
         g$a$5838$XGD4L
         g$rest$5839$XGD4L))))
   (g$fold-left$5783$XGD4L
     g$fold-left$5874$XGD4L
     (case-lambda
       ((g$combine$5843$XGD4L
          g$nil$5844$XGD4L
          g$list1$5845$XGD4L
          .
          g$lists$5846$XGD4L)
        (if (null? g$list1$5845$XGD4L)
          g$nil$5844$XGD4L
          (apply
            g$fold-left$5783$XGD4L
            (g$cons*$5782$XGD4L
              g$combine$5843$XGD4L
              (apply
                g$combine$5843$XGD4L
                (g$cons*$5782$XGD4L
                  g$nil$5844$XGD4L
                  (car g$list1$5845$XGD4L)
                  (map car g$lists$5846$XGD4L)))
              (cdr g$list1$5845$XGD4L)
              (map cdr g$lists$5846$XGD4L)))))))
   (g$fold-right$5784$XGD4L
     g$fold-right$5875$XGD4L
     (case-lambda
       ((g$combine$5847$XGD4L
          g$nil$5848$XGD4L
          g$list1$5849$XGD4L
          .
          g$lists$5850$XGD4L)
        (if (null? g$list1$5849$XGD4L)
          g$nil$5848$XGD4L
          (apply
            g$combine$5847$XGD4L
            (append
              (list (car g$list1$5849$XGD4L))
              (map car g$lists$5850$XGD4L)
              (list
                (apply
                  g$fold-right$5784$XGD4L
                  (g$cons*$5782$XGD4L
                    g$combine$5847$XGD4L
                    g$nil$5848$XGD4L
                    (cdr g$list1$5849$XGD4L)
                    (map cdr g$lists$5850$XGD4L))))))))))
   (g$remove$5785$XGD4L
     g$remove$5876$XGD4L
     (case-lambda
       ((g$obj$5851$XGD4L g$list$5852$XGD4L)
        (g$remp$5771$XGD4L
          (case-lambda
            ((g$x$5853$XGD4L) (equal? g$obj$5851$XGD4L g$x$5853$XGD4L)))
          g$list$5852$XGD4L))))
   (g$remv$5786$XGD4L
     g$remv$5877$XGD4L
     (case-lambda
       ((g$obj$5854$XGD4L g$list$5855$XGD4L)
        (g$remp$5771$XGD4L
          (case-lambda
            ((g$x$5856$XGD4L) (eqv? g$obj$5854$XGD4L g$x$5856$XGD4L)))
          g$list$5855$XGD4L))))
   (g$remq$5787$XGD4L
     g$remq$5878$XGD4L
     (case-lambda
       ((g$obj$5857$XGD4L g$list$5858$XGD4L)
        (g$remp$5771$XGD4L
          (case-lambda ((g$x$5859$XGD4L) (eq? g$obj$5857$XGD4L g$x$5859$XGD4L)))
          g$list$5858$XGD4L)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5879$XGD4L
     g$native-endianness$5990$XGD4L
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5880$XGD4L
     g$bytevector-u16-ref$5991$XGD4L
     (case-lambda
       ((g$bytevector$5908$XGD4L g$k$5909$XGD4L g$endianness$5910$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5908$XGD4L
          g$k$5909$XGD4L
          g$endianness$5910$XGD4L
          '2))))
   (g$bytevector-s16-ref$5881$XGD4L
     g$bytevector-s16-ref$5992$XGD4L
     (case-lambda
       ((g$bytevector$5911$XGD4L g$k$5912$XGD4L g$endianness$5913$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5911$XGD4L
          g$k$5912$XGD4L
          g$endianness$5913$XGD4L
          '2))))
   (g$bytevector-u16-native-ref$5882$XGD4L
     g$bytevector-u16-native-ref$5993$XGD4L
     (case-lambda
       ((g$bytevector$5914$XGD4L g$k$5915$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5914$XGD4L
          g$k$5915$XGD4L
          (g$native-endianness$5879$XGD4L)
          '2))))
   (g$bytevector-s16-native-ref$5883$XGD4L
     g$bytevector-s16-native-ref$5994$XGD4L
     (case-lambda
       ((g$bytevector$5916$XGD4L g$k$5917$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5916$XGD4L
          g$k$5917$XGD4L
          (g$native-endianness$5879$XGD4L)
          '2))))
   (g$bytevector-u16-set!$5884$XGD4L
     g$bytevector-u16-set!$5995$XGD4L
     (case-lambda
       ((g$bytevector$5918$XGD4L
          g$k$5919$XGD4L
          g$n$5920$XGD4L
          g$endianness$5921$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5918$XGD4L
          g$k$5919$XGD4L
          g$endianness$5921$XGD4L
          '2))))
   (g$bytevector-s16-set!$5885$XGD4L
     g$bytevector-s16-set!$5996$XGD4L
     (case-lambda
       ((g$bytevector$5922$XGD4L
          g$k$5923$XGD4L
          g$n$5924$XGD4L
          g$endianness$5925$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5922$XGD4L
          g$k$5923$XGD4L
          g$endianness$5925$XGD4L
          '2))))
   (g$bytevector-u16-native-set!$5886$XGD4L
     g$bytevector-u16-native-set!$5997$XGD4L
     (case-lambda
       ((g$bytevector$5926$XGD4L g$k$5927$XGD4L g$n$5928$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5926$XGD4L
          g$k$5927$XGD4L
          (g$native-endianness$5879$XGD4L)
          '2))))
   (g$bytevector-s16-native-set!$5887$XGD4L
     g$bytevector-s16-native-set!$5998$XGD4L
     (case-lambda
       ((g$bytevector$5929$XGD4L g$k$5930$XGD4L g$n$5931$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5929$XGD4L
          g$k$5930$XGD4L
          (g$native-endianness$5879$XGD4L)
          '2))))
   (g$bytevector-u32-ref$5888$XGD4L
     g$bytevector-u32-ref$5999$XGD4L
     (case-lambda
       ((g$bytevector$5932$XGD4L g$k$5933$XGD4L g$endianness$5934$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5932$XGD4L
          g$k$5933$XGD4L
          g$endianness$5934$XGD4L
          '4))))
   (g$bytevector-s32-ref$5889$XGD4L
     g$bytevector-s32-ref$6000$XGD4L
     (case-lambda
       ((g$bytevector$5935$XGD4L g$k$5936$XGD4L g$endianness$5937$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5935$XGD4L
          g$k$5936$XGD4L
          g$endianness$5937$XGD4L
          '4))))
   (g$bytevector-u32-native-ref$5890$XGD4L
     g$bytevector-u32-native-ref$6001$XGD4L
     (case-lambda
       ((g$bytevector$5938$XGD4L g$k$5939$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5938$XGD4L
          g$k$5939$XGD4L
          (g$native-endianness$5879$XGD4L)
          '4))))
   (g$bytevector-s32-native-ref$5891$XGD4L
     g$bytevector-s32-native-ref$6002$XGD4L
     (case-lambda
       ((g$bytevector$5940$XGD4L g$k$5941$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5940$XGD4L
          g$k$5941$XGD4L
          (g$native-endianness$5879$XGD4L)
          '4))))
   (g$bytevector-u32-set!$5892$XGD4L
     g$bytevector-u32-set!$6003$XGD4L
     (case-lambda
       ((g$bytevector$5942$XGD4L
          g$k$5943$XGD4L
          g$n$5944$XGD4L
          g$endianness$5945$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5942$XGD4L
          g$k$5943$XGD4L
          g$endianness$5945$XGD4L
          '4))))
   (g$bytevector-s32-set!$5893$XGD4L
     g$bytevector-s32-set!$6004$XGD4L
     (case-lambda
       ((g$bytevector$5946$XGD4L
          g$k$5947$XGD4L
          g$n$5948$XGD4L
          g$endianness$5949$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5946$XGD4L
          g$k$5947$XGD4L
          g$endianness$5949$XGD4L
          '4))))
   (g$bytevector-u32-native-set!$5894$XGD4L
     g$bytevector-u32-native-set!$6005$XGD4L
     (case-lambda
       ((g$bytevector$5950$XGD4L g$k$5951$XGD4L g$n$5952$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5950$XGD4L
          g$k$5951$XGD4L
          (g$native-endianness$5879$XGD4L)
          '4))))
   (g$bytevector-s32-native-set!$5895$XGD4L
     g$bytevector-s32-native-set!$6006$XGD4L
     (case-lambda
       ((g$bytevector$5953$XGD4L g$k$5954$XGD4L g$n$5955$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5953$XGD4L
          g$k$5954$XGD4L
          (g$native-endianness$5879$XGD4L)
          '4))))
   (g$bytevector-u64-ref$5896$XGD4L
     g$bytevector-u64-ref$6007$XGD4L
     (case-lambda
       ((g$bytevector$5956$XGD4L g$k$5957$XGD4L g$endianness$5958$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5956$XGD4L
          g$k$5957$XGD4L
          g$endianness$5958$XGD4L
          '8))))
   (g$bytevector-s64-ref$5897$XGD4L
     g$bytevector-s64-ref$6008$XGD4L
     (case-lambda
       ((g$bytevector$5959$XGD4L g$k$5960$XGD4L g$endianness$5961$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5959$XGD4L
          g$k$5960$XGD4L
          g$endianness$5961$XGD4L
          '8))))
   (g$bytevector-u64-native-ref$5898$XGD4L
     g$bytevector-u64-native-ref$6009$XGD4L
     (case-lambda
       ((g$bytevector$5962$XGD4L g$k$5963$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5962$XGD4L
          g$k$5963$XGD4L
          (g$native-endianness$5879$XGD4L)
          '8))))
   (g$bytevector-s64-native-ref$5899$XGD4L
     g$bytevector-s64-native-ref$6010$XGD4L
     (case-lambda
       ((g$bytevector$5964$XGD4L g$k$5965$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5964$XGD4L
          g$k$5965$XGD4L
          (g$native-endianness$5879$XGD4L)
          '8))))
   (g$bytevector-u64-set!$5900$XGD4L
     g$bytevector-u64-set!$6011$XGD4L
     (case-lambda
       ((g$bytevector$5966$XGD4L
          g$k$5967$XGD4L
          g$n$5968$XGD4L
          g$endianness$5969$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5966$XGD4L
          g$k$5967$XGD4L
          g$endianness$5969$XGD4L
          '8))))
   (g$bytevector-s64-set!$5901$XGD4L
     g$bytevector-s64-set!$6012$XGD4L
     (case-lambda
       ((g$bytevector$5970$XGD4L
          g$k$5971$XGD4L
          g$n$5972$XGD4L
          g$endianness$5973$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5970$XGD4L
          g$k$5971$XGD4L
          g$endianness$5973$XGD4L
          '8))))
   (g$bytevector-u64-native-set!$5902$XGD4L
     g$bytevector-u64-native-set!$6013$XGD4L
     (case-lambda
       ((g$bytevector$5974$XGD4L g$k$5975$XGD4L g$n$5976$XGD4L)
        (bytevector-uint-ref
          g$bytevector$5974$XGD4L
          g$k$5975$XGD4L
          (g$native-endianness$5879$XGD4L)
          '8))))
   (g$bytevector-s64-native-set!$5903$XGD4L
     g$bytevector-s64-native-set!$6014$XGD4L
     (case-lambda
       ((g$bytevector$5977$XGD4L g$k$5978$XGD4L g$n$5979$XGD4L)
        (bytevector-sint-ref
          g$bytevector$5977$XGD4L
          g$k$5978$XGD4L
          (g$native-endianness$5879$XGD4L)
          '8))))
   (g$bytevector-ieee-single-native-ref$5904$XGD4L
     g$bytevector-ieee-single-native-ref$6015$XGD4L
     (case-lambda
       ((g$bytevector$5980$XGD4L g$k$5981$XGD4L)
        (bytevector-ieee-single-ref
          g$bytevector$5980$XGD4L
          g$k$5981$XGD4L
          (g$native-endianness$5879$XGD4L)))))
   (g$bytevector-ieee-double-native-ref$5905$XGD4L
     g$bytevector-ieee-double-native-ref$6016$XGD4L
     (case-lambda
       ((g$bytevector$5982$XGD4L g$k$5983$XGD4L)
        (bytevector-ieee-double-ref
          g$bytevector$5982$XGD4L
          g$k$5983$XGD4L
          (g$native-endianness$5879$XGD4L)))))
   (g$bytevector-ieee-single-native-set!$5906$XGD4L
     g$bytevector-ieee-single-native-set!$6017$XGD4L
     (case-lambda
       ((g$bytevector$5984$XGD4L g$k$5985$XGD4L g$x$5986$XGD4L)
        (bytevector-ieee-single-set!
          g$bytevector$5984$XGD4L
          g$k$5985$XGD4L
          g$x$5986$XGD4L
          (g$native-endianness$5879$XGD4L)))))
   (g$bytevector-ieee-double-native-set!$5907$XGD4L
     g$bytevector-ieee-double-native-set!$6018$XGD4L
     (case-lambda
       ((g$bytevector$5987$XGD4L g$k$5988$XGD4L g$x$5989$XGD4L)
        (bytevector-ieee-double-set!
          g$bytevector$5987$XGD4L
          g$k$5988$XGD4L
          g$x$5989$XGD4L
          (g$native-endianness$5879$XGD4L))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6890$6019$XGD4L
     g$6890$6114$XGD4L
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6893$XGD4L
       '#f
       '#f
       '#()))
   (g$6892$6020$XGD4L g$6892$6115$XGD4L '#f)
   (g$6891$6021$XGD4L
     g$6891$6116$XGD4L
     (make-record-constructor-descriptor
       g$6890$6019$XGD4L
       '#f
       g$6892$6020$XGD4L))
   (g$&condition?$6022$XGD4L
     g$&condition?$6117$XGD4L
     (record-predicate g$6890$6019$XGD4L))
   (g$make-&condition$6023$XGD4L
     g$make-&condition$6118$XGD4L
     (record-constructor g$6891$6021$XGD4L))
   (g$&condition-rtd$6024$XGD4L
     g$&condition-rtd$6119$XGD4L
     g$6890$6019$XGD4L)
   (g$&condition-rcd$6025$XGD4L
     g$&condition-rcd$6120$XGD4L
     g$6891$6021$XGD4L)
   (g$6906$6026$XGD4L
     g$6906$6121$XGD4L
     (make-record-type-descriptor
       '&message
       g$6890$6019$XGD4L
       'g$6909$XGD4L
       '#f
       '#f
       '#((immutable message))))
   (g$6908$6027$XGD4L g$6908$6122$XGD4L '#f)
   (g$6907$6028$XGD4L
     g$6907$6123$XGD4L
     (make-record-constructor-descriptor
       g$6906$6026$XGD4L
       g$6891$6021$XGD4L
       g$6908$6027$XGD4L))
   (g$6905$6029$XGD4L
     g$6905$6124$XGD4L
     (record-predicate g$6906$6026$XGD4L))
   (g$make-message-condition$6030$XGD4L
     g$make-message-condition$6125$XGD4L
     (record-constructor g$6907$6028$XGD4L))
   (g$6904$6031$XGD4L
     g$6904$6126$XGD4L
     (record-accessor g$6906$6026$XGD4L '0))
   (g$message-condition?$6032$XGD4L
     g$message-condition?$6127$XGD4L
     (condition-predicate g$6906$6026$XGD4L))
   (g$condition-message$6033$XGD4L
     g$condition-message$6128$XGD4L
     (condition-accessor g$6906$6026$XGD4L g$6904$6031$XGD4L))
   (g$6922$6034$XGD4L
     g$6922$6129$XGD4L
     (make-record-type-descriptor
       '&warning
       g$6890$6019$XGD4L
       'g$6925$XGD4L
       '#f
       '#f
       '#()))
   (g$6924$6035$XGD4L g$6924$6130$XGD4L '#f)
   (g$6923$6036$XGD4L
     g$6923$6131$XGD4L
     (make-record-constructor-descriptor
       g$6922$6034$XGD4L
       g$6891$6021$XGD4L
       g$6924$6035$XGD4L))
   (g$6921$6037$XGD4L
     g$6921$6132$XGD4L
     (record-predicate g$6922$6034$XGD4L))
   (g$make-warning$6038$XGD4L
     g$make-warning$6133$XGD4L
     (record-constructor g$6923$6036$XGD4L))
   (g$warning?$6039$XGD4L
     g$warning?$6134$XGD4L
     (condition-predicate g$6922$6034$XGD4L))
   (g$6936$6040$XGD4L
     g$6936$6135$XGD4L
     (make-record-type-descriptor
       '&serious
       g$6890$6019$XGD4L
       'g$6939$XGD4L
       '#f
       '#f
       '#()))
   (g$6938$6041$XGD4L g$6938$6136$XGD4L '#f)
   (g$6937$6042$XGD4L
     g$6937$6137$XGD4L
     (make-record-constructor-descriptor
       g$6936$6040$XGD4L
       g$6891$6021$XGD4L
       g$6938$6041$XGD4L))
   (g$6935$6043$XGD4L
     g$6935$6138$XGD4L
     (record-predicate g$6936$6040$XGD4L))
   (g$make-serious-condition$6044$XGD4L
     g$make-serious-condition$6139$XGD4L
     (record-constructor g$6937$6042$XGD4L))
   (g$serious-condition?$6045$XGD4L
     g$serious-condition?$6140$XGD4L
     (condition-predicate g$6936$6040$XGD4L))
   (g$6950$6046$XGD4L
     g$6950$6141$XGD4L
     (make-record-type-descriptor
       '&error
       g$6936$6040$XGD4L
       'g$6953$XGD4L
       '#f
       '#f
       '#()))
   (g$6952$6047$XGD4L g$6952$6142$XGD4L '#f)
   (g$6951$6048$XGD4L
     g$6951$6143$XGD4L
     (make-record-constructor-descriptor
       g$6950$6046$XGD4L
       g$6937$6042$XGD4L
       g$6952$6047$XGD4L))
   (g$6949$6049$XGD4L
     g$6949$6144$XGD4L
     (record-predicate g$6950$6046$XGD4L))
   (g$make-error$6050$XGD4L
     g$make-error$6145$XGD4L
     (record-constructor g$6951$6048$XGD4L))
   (g$error?$6051$XGD4L
     g$error?$6146$XGD4L
     (condition-predicate g$6950$6046$XGD4L))
   (g$6964$6052$XGD4L
     g$6964$6147$XGD4L
     (make-record-type-descriptor
       '&violation
       g$6936$6040$XGD4L
       'g$6967$XGD4L
       '#f
       '#f
       '#()))
   (g$6966$6053$XGD4L g$6966$6148$XGD4L '#f)
   (g$6965$6054$XGD4L
     g$6965$6149$XGD4L
     (make-record-constructor-descriptor
       g$6964$6052$XGD4L
       g$6937$6042$XGD4L
       g$6966$6053$XGD4L))
   (g$6963$6055$XGD4L
     g$6963$6150$XGD4L
     (record-predicate g$6964$6052$XGD4L))
   (g$make-violation$6056$XGD4L
     g$make-violation$6151$XGD4L
     (record-constructor g$6965$6054$XGD4L))
   (g$violation?$6057$XGD4L
     g$violation?$6152$XGD4L
     (condition-predicate g$6964$6052$XGD4L))
   (g$6978$6058$XGD4L
     g$6978$6153$XGD4L
     (make-record-type-descriptor
       '&assertion
       g$6964$6052$XGD4L
       'g$6981$XGD4L
       '#f
       '#f
       '#()))
   (g$6980$6059$XGD4L g$6980$6154$XGD4L '#f)
   (g$6979$6060$XGD4L
     g$6979$6155$XGD4L
     (make-record-constructor-descriptor
       g$6978$6058$XGD4L
       g$6965$6054$XGD4L
       g$6980$6059$XGD4L))
   (g$6977$6061$XGD4L
     g$6977$6156$XGD4L
     (record-predicate g$6978$6058$XGD4L))
   (g$make-assertion-violation$6062$XGD4L
     g$make-assertion-violation$6157$XGD4L
     (record-constructor g$6979$6060$XGD4L))
   (g$assertion-violation?$6063$XGD4L
     g$assertion-violation?$6158$XGD4L
     (condition-predicate g$6978$6058$XGD4L))
   (g$6993$6064$XGD4L
     g$6993$6159$XGD4L
     (make-record-type-descriptor
       '&irritants
       g$6890$6019$XGD4L
       'g$6996$XGD4L
       '#f
       '#f
       '#((immutable irritants))))
   (g$6995$6065$XGD4L g$6995$6160$XGD4L '#f)
   (g$6994$6066$XGD4L
     g$6994$6161$XGD4L
     (make-record-constructor-descriptor
       g$6993$6064$XGD4L
       g$6891$6021$XGD4L
       g$6995$6065$XGD4L))
   (g$6992$6067$XGD4L
     g$6992$6162$XGD4L
     (record-predicate g$6993$6064$XGD4L))
   (g$make-irritants-condition$6068$XGD4L
     g$make-irritants-condition$6163$XGD4L
     (record-constructor g$6994$6066$XGD4L))
   (g$6991$6069$XGD4L
     g$6991$6164$XGD4L
     (record-accessor g$6993$6064$XGD4L '0))
   (g$irritants-condition?$6070$XGD4L
     g$irritants-condition?$6165$XGD4L
     (condition-predicate g$6993$6064$XGD4L))
   (g$condition-irritants$6071$XGD4L
     g$condition-irritants$6166$XGD4L
     (condition-accessor g$6993$6064$XGD4L g$6991$6069$XGD4L))
   (g$7010$6072$XGD4L
     g$7010$6167$XGD4L
     (make-record-type-descriptor
       '&who
       g$6890$6019$XGD4L
       'g$7013$XGD4L
       '#f
       '#f
       '#((immutable who))))
   (g$7012$6073$XGD4L g$7012$6168$XGD4L '#f)
   (g$7011$6074$XGD4L
     g$7011$6169$XGD4L
     (make-record-constructor-descriptor
       g$7010$6072$XGD4L
       g$6891$6021$XGD4L
       g$7012$6073$XGD4L))
   (g$7009$6075$XGD4L
     g$7009$6170$XGD4L
     (record-predicate g$7010$6072$XGD4L))
   (g$make-who-condition$6076$XGD4L
     g$make-who-condition$6171$XGD4L
     (record-constructor g$7011$6074$XGD4L))
   (g$7008$6077$XGD4L
     g$7008$6172$XGD4L
     (record-accessor g$7010$6072$XGD4L '0))
   (g$who-condition?$6078$XGD4L
     g$who-condition?$6173$XGD4L
     (condition-predicate g$7010$6072$XGD4L))
   (g$condition-who$6079$XGD4L
     g$condition-who$6174$XGD4L
     (condition-accessor g$7010$6072$XGD4L g$7008$6077$XGD4L))
   (g$7026$6080$XGD4L
     g$7026$6175$XGD4L
     (make-record-type-descriptor
       '&non-continuable
       g$6964$6052$XGD4L
       'g$7029$XGD4L
       '#f
       '#f
       '#()))
   (g$7028$6081$XGD4L g$7028$6176$XGD4L '#f)
   (g$7027$6082$XGD4L
     g$7027$6177$XGD4L
     (make-record-constructor-descriptor
       g$7026$6080$XGD4L
       g$6965$6054$XGD4L
       g$7028$6081$XGD4L))
   (g$7025$6083$XGD4L
     g$7025$6178$XGD4L
     (record-predicate g$7026$6080$XGD4L))
   (g$make-non-continuable-violation$6084$XGD4L
     g$make-non-continuable-violation$6179$XGD4L
     (record-constructor g$7027$6082$XGD4L))
   (g$non-continuable-violation?$6085$XGD4L
     g$non-continuable-violation?$6180$XGD4L
     (condition-predicate g$7026$6080$XGD4L))
   (g$7040$6086$XGD4L
     g$7040$6181$XGD4L
     (make-record-type-descriptor
       '&implementation-restriction
       g$6964$6052$XGD4L
       'g$7043$XGD4L
       '#f
       '#f
       '#()))
   (g$7042$6087$XGD4L g$7042$6182$XGD4L '#f)
   (g$7041$6088$XGD4L
     g$7041$6183$XGD4L
     (make-record-constructor-descriptor
       g$7040$6086$XGD4L
       g$6965$6054$XGD4L
       g$7042$6087$XGD4L))
   (g$7039$6089$XGD4L
     g$7039$6184$XGD4L
     (record-predicate g$7040$6086$XGD4L))
   (g$make-implementation-restriction-violation$6090$XGD4L
     g$make-implementation-restriction-violation$6185$XGD4L
     (record-constructor g$7041$6088$XGD4L))
   (g$implementation-restriction-violation?$6091$XGD4L
     g$implementation-restriction-violation?$6186$XGD4L
     (condition-predicate g$7040$6086$XGD4L))
   (g$7054$6092$XGD4L
     g$7054$6187$XGD4L
     (make-record-type-descriptor
       '&lexical
       g$6964$6052$XGD4L
       'g$7057$XGD4L
       '#f
       '#f
       '#()))
   (g$7056$6093$XGD4L g$7056$6188$XGD4L '#f)
   (g$7055$6094$XGD4L
     g$7055$6189$XGD4L
     (make-record-constructor-descriptor
       g$7054$6092$XGD4L
       g$6965$6054$XGD4L
       g$7056$6093$XGD4L))
   (g$7053$6095$XGD4L
     g$7053$6190$XGD4L
     (record-predicate g$7054$6092$XGD4L))
   (g$make-lexical-violation$6096$XGD4L
     g$make-lexical-violation$6191$XGD4L
     (record-constructor g$7055$6094$XGD4L))
   (g$lexical-violation?$6097$XGD4L
     g$lexical-violation?$6192$XGD4L
     (condition-predicate g$7054$6092$XGD4L))
   (g$7070$6098$XGD4L
     g$7070$6193$XGD4L
     (make-record-type-descriptor
       '&syntax
       g$6964$6052$XGD4L
       'g$7073$XGD4L
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7072$6099$XGD4L g$7072$6194$XGD4L '#f)
   (g$7071$6100$XGD4L
     g$7071$6195$XGD4L
     (make-record-constructor-descriptor
       g$7070$6098$XGD4L
       g$6965$6054$XGD4L
       g$7072$6099$XGD4L))
   (g$7069$6101$XGD4L
     g$7069$6196$XGD4L
     (record-predicate g$7070$6098$XGD4L))
   (g$make-syntax-violation$6102$XGD4L
     g$make-syntax-violation$6197$XGD4L
     (record-constructor g$7071$6100$XGD4L))
   (g$7067$6103$XGD4L
     g$7067$6198$XGD4L
     (record-accessor g$7070$6098$XGD4L '0))
   (g$7068$6104$XGD4L
     g$7068$6199$XGD4L
     (record-accessor g$7070$6098$XGD4L '1))
   (g$syntax-violation?$6105$XGD4L
     g$syntax-violation?$6200$XGD4L
     (condition-predicate g$7070$6098$XGD4L))
   (g$syntax-violation-form$6106$XGD4L
     g$syntax-violation-form$6201$XGD4L
     (condition-accessor g$7070$6098$XGD4L g$7067$6103$XGD4L))
   (g$syntax-violation-subform$6107$XGD4L
     g$syntax-violation-subform$6202$XGD4L
     (condition-accessor g$7070$6098$XGD4L g$7068$6104$XGD4L))
   (g$7088$6108$XGD4L
     g$7088$6203$XGD4L
     (make-record-type-descriptor
       '&undefined
       g$6964$6052$XGD4L
       'g$7091$XGD4L
       '#f
       '#f
       '#()))
   (g$7090$6109$XGD4L g$7090$6204$XGD4L '#f)
   (g$7089$6110$XGD4L
     g$7089$6205$XGD4L
     (make-record-constructor-descriptor
       g$7088$6108$XGD4L
       g$6965$6054$XGD4L
       g$7090$6109$XGD4L))
   (g$7087$6111$XGD4L
     g$7087$6206$XGD4L
     (record-predicate g$7088$6108$XGD4L))
   (g$make-undefined-violation$6112$XGD4L
     g$make-undefined-violation$6207$XGD4L
     (record-constructor g$7089$6110$XGD4L))
   (g$undefined-violation?$6113$XGD4L
     g$undefined-violation?$6208$XGD4L
     (condition-predicate g$7088$6108$XGD4L)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6209$XGD4L
     g$append!$6215$XGD4L
     (case-lambda
       ((g$a$6210$XGD4L . g$b$6211$XGD4L)
        (if (null? g$a$6210$XGD4L)
          g$b$6211$XGD4L
          (if (null? g$b$6211$XGD4L)
            g$a$6210$XGD4L
            (begin
              ((letrec ((g$f$6212$XGD4L
                          (case-lambda
                            ((g$a$6213$XGD4L)
                             ((case-lambda
                                ((g$n$6214$XGD4L)
                                 (if (null? g$n$6214$XGD4L)
                                   (set-cdr! g$a$6213$XGD4L g$b$6211$XGD4L)
                                   (g$f$6212$XGD4L g$n$6214$XGD4L))))
                              (cdr g$a$6213$XGD4L))))))
                 g$f$6212$XGD4L)
               g$a$6210$XGD4L)
              g$a$6210$XGD4L)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6216$XGD4L
     g$sign$6227$XGD4L
     (case-lambda
       ((g$n$6220$XGD4L)
        (if (> g$n$6220$XGD4L '0) '1 (if (< g$n$6220$XGD4L '0) '-1 '0)))))
   (g$quotient$6217$XGD4L
     g$quotient$6228$XGD4L
     (case-lambda
       ((g$n1$6221$XGD4L g$n2$6222$XGD4L)
        (* (g$sign$6216$XGD4L g$n1$6221$XGD4L)
           (g$sign$6216$XGD4L g$n2$6222$XGD4L)
           (div (abs g$n1$6221$XGD4L) (abs g$n2$6222$XGD4L))))))
   (g$remainder$6218$XGD4L
     g$remainder$6229$XGD4L
     (case-lambda
       ((g$n1$6223$XGD4L g$n2$6224$XGD4L)
        (* (g$sign$6216$XGD4L g$n1$6223$XGD4L)
           (mod (abs g$n1$6223$XGD4L) (abs g$n2$6224$XGD4L))))))
   (g$modulo$6219$XGD4L
     g$modulo$6230$XGD4L
     (case-lambda
       ((g$n1$6225$XGD4L g$n2$6226$XGD4L)
        (* (g$sign$6216$XGD4L g$n2$6226$XGD4L)
           (mod (* (g$sign$6216$XGD4L g$n2$6226$XGD4L) g$n1$6225$XGD4L)
                (abs g$n2$6226$XGD4L)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6231$XGD4L
     g$split$6257$XGD4L
     (case-lambda
       ((g$ls$6234$XGD4L)
        ((letrec ((g$loop$6235$XGD4L
                    (case-lambda
                      ((g$rest$6236$XGD4L g$left$6237$XGD4L g$right$6238$XGD4L)
                       (if (null? g$rest$6236$XGD4L)
                         (cons g$left$6237$XGD4L g$right$6238$XGD4L)
                         (if (null? (cdr g$rest$6236$XGD4L))
                           (cons
                             (cons (car g$rest$6236$XGD4L) g$left$6237$XGD4L)
                             g$right$6238$XGD4L)
                           (g$loop$6235$XGD4L
                             (g$cddr$5404$XGD4L g$rest$6236$XGD4L)
                             (cons (car g$rest$6236$XGD4L) g$left$6237$XGD4L)
                             (cons
                               (g$cadr$5402$XGD4L g$rest$6236$XGD4L)
                               g$right$6238$XGD4L))))))))
           g$loop$6235$XGD4L)
         g$ls$6234$XGD4L
         '()
         '()))))
   (g$reverse-it$6232$XGD4L
     g$reverse-it$6258$XGD4L
     (case-lambda
       ((g$head$6239$XGD4L g$tail$6240$XGD4L)
        (if (null? g$head$6239$XGD4L)
          g$tail$6240$XGD4L
          ((case-lambda
             ((g$hd$6241$XGD4L g$tl$6242$XGD4L)
              (g$reverse-it$6232$XGD4L
                g$tl$6242$XGD4L
                (cons g$hd$6241$XGD4L g$tail$6240$XGD4L))))
           (car g$head$6239$XGD4L)
           (cdr g$head$6239$XGD4L))))))
   (g$list-sort$6233$XGD4L
     g$list-sort$6259$XGD4L
     (case-lambda
       ((g$precedes?$6243$XGD4L g$ls$6244$XGD4L)
        ((case-lambda
           ((g$merge$6245$XGD4L)
            ((case-lambda
               (()
                (if (null? g$ls$6244$XGD4L)
                  '()
                  ((letrec ((g$helper$6246$XGD4L
                              (case-lambda
                                ((g$piece$6247$XGD4L)
                                 (if (null? (cdr g$piece$6247$XGD4L))
                                   g$piece$6247$XGD4L
                                   ((case-lambda
                                      ((g$parts$6248$XGD4L)
                                       (g$merge$6245$XGD4L
                                         (g$helper$6246$XGD4L
                                           (car g$parts$6248$XGD4L))
                                         (g$helper$6246$XGD4L
                                           (cdr g$parts$6248$XGD4L)))))
                                    (g$split$6231$XGD4L
                                      g$piece$6247$XGD4L)))))))
                     g$helper$6246$XGD4L)
                   g$ls$6244$XGD4L)))))))
         (case-lambda
           ((g$list-1$6249$XGD4L g$list-2$6250$XGD4L)
            ((letrec ((g$loop$6251$XGD4L
                        (case-lambda
                          ((g$source-1$6252$XGD4L
                             g$source-2$6253$XGD4L
                             g$so-far$6254$XGD4L)
                           (if (null? g$source-1$6252$XGD4L)
                             (g$reverse-it$6232$XGD4L
                               g$so-far$6254$XGD4L
                               g$source-2$6253$XGD4L)
                             (if (null? g$source-2$6253$XGD4L)
                               (g$reverse-it$6232$XGD4L
                                 g$so-far$6254$XGD4L
                                 g$source-1$6252$XGD4L)
                               ((case-lambda
                                  ((g$car-1$6255$XGD4L g$car-2$6256$XGD4L)
                                   (if (g$precedes?$6243$XGD4L
                                         g$car-2$6256$XGD4L
                                         g$car-1$6255$XGD4L)
                                     (g$loop$6251$XGD4L
                                       g$source-1$6252$XGD4L
                                       (cdr g$source-2$6253$XGD4L)
                                       (cons
                                         g$car-2$6256$XGD4L
                                         g$so-far$6254$XGD4L))
                                     (g$loop$6251$XGD4L
                                       g$source-2$6253$XGD4L
                                       (cdr g$source-1$6252$XGD4L)
                                       (cons
                                         g$car-1$6255$XGD4L
                                         g$so-far$6254$XGD4L)))))
                                (car g$source-1$6252$XGD4L)
                                (car g$source-2$6253$XGD4L))))))))
               g$loop$6251$XGD4L)
             g$list-1$6249$XGD4L
             g$list-2$6250$XGD4L
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6297$XGD4L
     g$bitwise-if$6348$XGD4L
     (case-lambda
       ((g$ei1$6305$XGD4L g$ei2$6306$XGD4L g$ei3$6307$XGD4L)
        (bitwise-ior
          (bitwise-and g$ei1$6305$XGD4L g$ei2$6306$XGD4L)
          (bitwise-and (bitwise-not g$ei1$6305$XGD4L) g$ei3$6307$XGD4L)))))
   (g$bitwise-copy-bit$6298$XGD4L
     g$bitwise-copy-bit$6349$XGD4L
     (case-lambda
       ((g$ei1$6308$XGD4L g$ei2$6309$XGD4L g$ei3$6310$XGD4L)
        ((case-lambda
           ((g$mask$6311$XGD4L)
            ((case-lambda
               (()
                (g$bitwise-if$6297$XGD4L
                  g$mask$6311$XGD4L
                  (g$bitwise-arithmetic-shift-left$6301$XGD4L
                    g$ei3$6310$XGD4L
                    g$ei2$6309$XGD4L)
                  g$ei1$6308$XGD4L))))))
         (g$bitwise-arithmetic-shift-left$6301$XGD4L '1 g$ei2$6309$XGD4L)))))
   (g$bitwise-bit-field$6299$XGD4L
     g$bitwise-bit-field$6350$XGD4L
     (case-lambda
       ((g$ei1$6312$XGD4L g$ei2$6313$XGD4L g$ei3$6314$XGD4L)
        ((case-lambda
           ((g$mask$6315$XGD4L)
            (g$bitwise-arithmetic-shift-right$6302$XGD4L
              (bitwise-and g$ei1$6312$XGD4L g$mask$6315$XGD4L)
              g$ei2$6313$XGD4L)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6301$XGD4L
             '-1
             g$ei3$6314$XGD4L))))))
   (g$bitwise-copy-bit-field$6300$XGD4L
     g$bitwise-copy-bit-field$6351$XGD4L
     (case-lambda
       ((g$ei1$6316$XGD4L g$ei2$6317$XGD4L g$ei3$6318$XGD4L g$ei4$6319$XGD4L)
        ((case-lambda
           ((g$to$6320$XGD4L)
            ((case-lambda
               ((g$start$6321$XGD4L)
                ((case-lambda
                   ((g$end$6322$XGD4L)
                    ((case-lambda
                       ((g$from$6323$XGD4L)
                        ((case-lambda
                           ((g$mask1$6324$XGD4L)
                            ((case-lambda
                               ((g$mask2$6325$XGD4L)
                                ((case-lambda
                                   ((g$mask$6326$XGD4L)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6297$XGD4L
                                          g$mask$6326$XGD4L
                                          (g$bitwise-arithmetic-shift-left$6301$XGD4L
                                            g$from$6323$XGD4L
                                            g$start$6321$XGD4L)
                                          g$to$6320$XGD4L))))))
                                 (bitwise-and
                                   g$mask1$6324$XGD4L
                                   g$mask2$6325$XGD4L))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6301$XGD4L
                                 '-1
                                 g$end$6322$XGD4L)))))
                         (g$bitwise-arithmetic-shift-left$6301$XGD4L
                           '-1
                           g$start$6321$XGD4L))))
                     g$ei4$6319$XGD4L)))
                 g$ei3$6318$XGD4L)))
             g$ei2$6317$XGD4L)))
         g$ei1$6316$XGD4L))))
   (g$bitwise-arithmetic-shift-left$6301$XGD4L
     g$bitwise-arithmetic-shift-left$6352$XGD4L
     (case-lambda
       ((g$ei1$6327$XGD4L g$ei2$6328$XGD4L)
        (bitwise-arithmetic-shift g$ei1$6327$XGD4L g$ei2$6328$XGD4L))))
   (g$bitwise-arithmetic-shift-right$6302$XGD4L
     g$bitwise-arithmetic-shift-right$6353$XGD4L
     (case-lambda
       ((g$ei1$6329$XGD4L g$ei2$6330$XGD4L)
        (bitwise-arithmetic-shift g$ei1$6329$XGD4L (- g$ei2$6330$XGD4L)))))
   (g$bitwise-rotate-bit-field$6303$XGD4L
     g$bitwise-rotate-bit-field$6354$XGD4L
     (case-lambda
       ((g$ei1$6331$XGD4L g$ei2$6332$XGD4L g$ei3$6333$XGD4L g$ei4$6334$XGD4L)
        ((case-lambda
           ((g$n$6335$XGD4L)
            ((case-lambda
               ((g$start$6336$XGD4L)
                ((case-lambda
                   ((g$end$6337$XGD4L)
                    ((case-lambda
                       ((g$count$6338$XGD4L)
                        ((case-lambda
                           ((g$width$6339$XGD4L)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6339$XGD4L)
                                  ((case-lambda
                                     ((g$count$6340$XGD4L)
                                      ((case-lambda
                                         ((g$field0$6341$XGD4L)
                                          ((case-lambda
                                             ((g$field1$6342$XGD4L)
                                              ((case-lambda
                                                 ((g$field2$6343$XGD4L)
                                                  ((case-lambda
                                                     ((g$field$6344$XGD4L)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6300$XGD4L
                                                            g$n$6335$XGD4L
                                                            g$start$6336$XGD4L
                                                            g$end$6337$XGD4L
                                                            g$field$6344$XGD4L))))))
                                                   (bitwise-ior
                                                     g$field1$6342$XGD4L
                                                     g$field2$6343$XGD4L))))
                                               (g$bitwise-arithmetic-shift-right$6302$XGD4L
                                                 g$field0$6341$XGD4L
                                                 (- g$width$6339$XGD4L
                                                    g$count$6340$XGD4L)))))
                                           (g$bitwise-arithmetic-shift-left$6301$XGD4L
                                             g$field0$6341$XGD4L
                                             g$count$6340$XGD4L))))
                                       (g$bitwise-bit-field$6299$XGD4L
                                         g$n$6335$XGD4L
                                         g$start$6336$XGD4L
                                         g$end$6337$XGD4L))))
                                   (mod g$count$6338$XGD4L g$width$6339$XGD4L))
                                  g$n$6335$XGD4L))))))
                         (- g$end$6337$XGD4L g$start$6336$XGD4L))))
                     g$ei4$6334$XGD4L)))
                 g$ei3$6333$XGD4L)))
             g$ei2$6332$XGD4L)))
         g$ei1$6331$XGD4L))))
   (g$bitwise-reverse-bit-field$6304$XGD4L
     g$bitwise-reverse-bit-field$6355$XGD4L
     (case-lambda
       ((g$ei1$6345$XGD4L g$ei2$6346$XGD4L g$ei3$6347$XGD4L) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6356$XGD4L
     g$fxif$6403$XGD4L
     (case-lambda
       ((g$fx1$6363$XGD4L g$fx2$6364$XGD4L g$fx3$6365$XGD4L)
        (fxior
          (fxand g$fx1$6363$XGD4L g$fx2$6364$XGD4L)
          (fxand (fxnot g$fx1$6363$XGD4L) g$fx3$6365$XGD4L)))))
   (g$fxcopy-bit$6357$XGD4L
     g$fxcopy-bit$6404$XGD4L
     (case-lambda
       ((g$fx1$6366$XGD4L g$fx2$6367$XGD4L g$fx3$6368$XGD4L)
        ((case-lambda
           ((g$mask$6369$XGD4L)
            ((case-lambda
               (()
                (g$fxif$6356$XGD4L
                  g$mask$6369$XGD4L
                  (g$fxarithmetic-shift-left$6360$XGD4L
                    g$fx3$6368$XGD4L
                    g$fx2$6367$XGD4L)
                  g$fx1$6366$XGD4L))))))
         (g$fxarithmetic-shift-left$6360$XGD4L '1 g$fx2$6367$XGD4L)))))
   (g$fxbit-field$6358$XGD4L
     g$fxbit-field$6405$XGD4L
     (case-lambda
       ((g$fx1$6370$XGD4L g$fx2$6371$XGD4L g$fx3$6372$XGD4L)
        ((case-lambda
           ((g$mask$6373$XGD4L)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6361$XGD4L
                  (fxand g$fx1$6370$XGD4L g$mask$6373$XGD4L)
                  g$fx2$6371$XGD4L))))))
         (fxnot (g$fxarithmetic-shift-left$6360$XGD4L '-1 g$fx3$6372$XGD4L))))))
   (g$fxcopy-bit-field$6359$XGD4L
     g$fxcopy-bit-field$6406$XGD4L
     (case-lambda
       ((g$fx1$6374$XGD4L g$fx2$6375$XGD4L g$fx3$6376$XGD4L g$fx4$6377$XGD4L)
        ((case-lambda
           ((g$to$6378$XGD4L)
            ((case-lambda
               ((g$start$6379$XGD4L)
                ((case-lambda
                   ((g$end$6380$XGD4L)
                    ((case-lambda
                       ((g$from$6381$XGD4L)
                        ((case-lambda
                           ((g$mask1$6382$XGD4L)
                            ((case-lambda
                               ((g$mask2$6383$XGD4L)
                                ((case-lambda
                                   ((g$mask$6384$XGD4L)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6356$XGD4L
                                          g$mask$6384$XGD4L
                                          (g$fxarithmetic-shift-left$6360$XGD4L
                                            g$from$6381$XGD4L
                                            g$start$6379$XGD4L)
                                          g$to$6378$XGD4L))))))
                                 (fxand
                                   g$mask1$6382$XGD4L
                                   g$mask2$6383$XGD4L))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6360$XGD4L
                                 '-1
                                 g$end$6380$XGD4L)))))
                         (g$fxarithmetic-shift-left$6360$XGD4L
                           '-1
                           g$start$6379$XGD4L))))
                     g$fx4$6377$XGD4L)))
                 g$fx3$6376$XGD4L)))
             g$fx2$6375$XGD4L)))
         g$fx1$6374$XGD4L))))
   (g$fxarithmetic-shift-left$6360$XGD4L
     g$fxarithmetic-shift-left$6407$XGD4L
     (case-lambda
       ((g$fx1$6385$XGD4L g$fx2$6386$XGD4L)
        (fxarithmetic-shift g$fx1$6385$XGD4L g$fx2$6386$XGD4L))))
   (g$fxarithmetic-shift-right$6361$XGD4L
     g$fxarithmetic-shift-right$6408$XGD4L
     (case-lambda
       ((g$fx1$6387$XGD4L g$fx2$6388$XGD4L)
        (fxarithmetic-shift g$fx1$6387$XGD4L (- g$fx2$6388$XGD4L)))))
   (g$fxrotate-bit-field$6362$XGD4L
     g$fxrotate-bit-field$6409$XGD4L
     (case-lambda
       ((g$fx1$6389$XGD4L g$fx2$6390$XGD4L g$fx3$6391$XGD4L g$fx4$6392$XGD4L)
        ((case-lambda
           ((g$n$6393$XGD4L)
            ((case-lambda
               ((g$start$6394$XGD4L)
                ((case-lambda
                   ((g$end$6395$XGD4L)
                    ((case-lambda
                       ((g$count$6396$XGD4L)
                        ((case-lambda
                           ((g$width$6397$XGD4L)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6397$XGD4L)
                                  ((case-lambda
                                     ((g$count$6398$XGD4L)
                                      ((case-lambda
                                         ((g$field0$6399$XGD4L)
                                          ((case-lambda
                                             ((g$field1$6400$XGD4L)
                                              ((case-lambda
                                                 ((g$field2$6401$XGD4L)
                                                  ((case-lambda
                                                     ((g$field$6402$XGD4L)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6359$XGD4L
                                                            g$n$6393$XGD4L
                                                            g$start$6394$XGD4L
                                                            g$end$6395$XGD4L
                                                            g$field$6402$XGD4L))))))
                                                   (fxior
                                                     g$field1$6400$XGD4L
                                                     g$field2$6401$XGD4L))))
                                               (g$fxarithmetic-shift-right$6361$XGD4L
                                                 g$field0$6399$XGD4L
                                                 (- g$width$6397$XGD4L
                                                    g$count$6398$XGD4L)))))
                                           (g$fxarithmetic-shift-left$6360$XGD4L
                                             g$field0$6399$XGD4L
                                             g$count$6398$XGD4L))))
                                       (g$fxbit-field$6358$XGD4L
                                         g$n$6393$XGD4L
                                         g$start$6394$XGD4L
                                         g$end$6395$XGD4L))))
                                   (mod g$count$6396$XGD4L g$width$6397$XGD4L))
                                  g$n$6393$XGD4L))))))
                         (- g$end$6395$XGD4L g$start$6394$XGD4L))))
                     g$fx4$6392$XGD4L)))
                 g$fx3$6391$XGD4L)))
             g$fx2$6390$XGD4L)))
         g$fx1$6389$XGD4L)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7305$6410$XGD4L
     g$7305$6422$XGD4L
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7308$XGD4L
       '#f
       '#f
       '#()))
   (g$7307$6411$XGD4L g$7307$6423$XGD4L '#f)
   (g$7306$6412$XGD4L
     g$7306$6424$XGD4L
     (make-record-constructor-descriptor
       g$7305$6410$XGD4L
       &implementation-restriction-rcd
       g$7307$6411$XGD4L))
   (g$7304$6413$XGD4L
     g$7304$6425$XGD4L
     (record-predicate g$7305$6410$XGD4L))
   (g$make-no-infinities-violation$6414$XGD4L
     g$make-no-infinities-violation$6426$XGD4L
     (record-constructor g$7306$6412$XGD4L))
   (g$no-infinities-violation?$6415$XGD4L
     g$no-infinities-violation?$6427$XGD4L
     (condition-predicate g$7305$6410$XGD4L))
   (g$7319$6416$XGD4L
     g$7319$6428$XGD4L
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7322$XGD4L
       '#f
       '#f
       '#()))
   (g$7321$6417$XGD4L g$7321$6429$XGD4L '#f)
   (g$7320$6418$XGD4L
     g$7320$6430$XGD4L
     (make-record-constructor-descriptor
       g$7319$6416$XGD4L
       &implementation-restriction-rcd
       g$7321$6417$XGD4L))
   (g$7318$6419$XGD4L
     g$7318$6431$XGD4L
     (record-predicate g$7319$6416$XGD4L))
   (g$make-no-nans-violation$6420$XGD4L
     g$make-no-nans-violation$6432$XGD4L
     (record-constructor g$7320$6418$XGD4L))
   (g$no-nans-violation?$6421$XGD4L
     g$no-nans-violation?$6433$XGD4L
     (condition-predicate g$7319$6416$XGD4L)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7334$6434$XGD4L
     g$7334$6514$XGD4L
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7337$XGD4L
       '#f
       '#f
       '#()))
   (g$7336$6435$XGD4L g$7336$6515$XGD4L '#f)
   (g$7335$6436$XGD4L
     g$7335$6516$XGD4L
     (make-record-constructor-descriptor
       g$7334$6434$XGD4L
       &error-rcd
       g$7336$6435$XGD4L))
   (g$7333$6437$XGD4L
     g$7333$6517$XGD4L
     (record-predicate g$7334$6434$XGD4L))
   (g$make-i/o-error$6438$XGD4L
     g$make-i/o-error$6518$XGD4L
     (record-constructor g$7335$6436$XGD4L))
   (g$i/o-error?$6439$XGD4L
     g$i/o-error?$6519$XGD4L
     (condition-predicate g$7334$6434$XGD4L))
   (g$7348$6440$XGD4L
     g$7348$6520$XGD4L
     (make-record-type-descriptor
       '&i/o-read
       g$7334$6434$XGD4L
       'g$7351$XGD4L
       '#f
       '#f
       '#()))
   (g$7350$6441$XGD4L g$7350$6521$XGD4L '#f)
   (g$7349$6442$XGD4L
     g$7349$6522$XGD4L
     (make-record-constructor-descriptor
       g$7348$6440$XGD4L
       g$7335$6436$XGD4L
       g$7350$6441$XGD4L))
   (g$7347$6443$XGD4L
     g$7347$6523$XGD4L
     (record-predicate g$7348$6440$XGD4L))
   (g$make-i/o-read-error$6444$XGD4L
     g$make-i/o-read-error$6524$XGD4L
     (record-constructor g$7349$6442$XGD4L))
   (g$i/o-read-error?$6445$XGD4L
     g$i/o-read-error?$6525$XGD4L
     (condition-predicate g$7348$6440$XGD4L))
   (g$7362$6446$XGD4L
     g$7362$6526$XGD4L
     (make-record-type-descriptor
       '&i/o-write
       g$7334$6434$XGD4L
       'g$7365$XGD4L
       '#f
       '#f
       '#()))
   (g$7364$6447$XGD4L g$7364$6527$XGD4L '#f)
   (g$7363$6448$XGD4L
     g$7363$6528$XGD4L
     (make-record-constructor-descriptor
       g$7362$6446$XGD4L
       g$7335$6436$XGD4L
       g$7364$6447$XGD4L))
   (g$7361$6449$XGD4L
     g$7361$6529$XGD4L
     (record-predicate g$7362$6446$XGD4L))
   (g$make-i/o-write-error$6450$XGD4L
     g$make-i/o-write-error$6530$XGD4L
     (record-constructor g$7363$6448$XGD4L))
   (g$i/o-write-error?$6451$XGD4L
     g$i/o-write-error?$6531$XGD4L
     (condition-predicate g$7362$6446$XGD4L))
   (g$7377$6452$XGD4L
     g$7377$6532$XGD4L
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7334$6434$XGD4L
       'g$7380$XGD4L
       '#f
       '#f
       '#((immutable position))))
   (g$7379$6453$XGD4L g$7379$6533$XGD4L '#f)
   (g$7378$6454$XGD4L
     g$7378$6534$XGD4L
     (make-record-constructor-descriptor
       g$7377$6452$XGD4L
       g$7335$6436$XGD4L
       g$7379$6453$XGD4L))
   (g$7376$6455$XGD4L
     g$7376$6535$XGD4L
     (record-predicate g$7377$6452$XGD4L))
   (g$make-i/o-invalid-position-error$6456$XGD4L
     g$make-i/o-invalid-position-error$6536$XGD4L
     (record-constructor g$7378$6454$XGD4L))
   (g$7375$6457$XGD4L
     g$7375$6537$XGD4L
     (record-accessor g$7377$6452$XGD4L '0))
   (g$i/o-invalid-position-error?$6458$XGD4L
     g$i/o-invalid-position-error?$6538$XGD4L
     (condition-predicate g$7377$6452$XGD4L))
   (g$i/o-error-position$6459$XGD4L
     g$i/o-error-position$6539$XGD4L
     (condition-accessor g$7377$6452$XGD4L g$7375$6457$XGD4L))
   (g$7394$6460$XGD4L
     g$7394$6540$XGD4L
     (make-record-type-descriptor
       '&i/o-filename
       g$7334$6434$XGD4L
       'g$7397$XGD4L
       '#f
       '#f
       '#((immutable filename))))
   (g$7396$6461$XGD4L g$7396$6541$XGD4L '#f)
   (g$7395$6462$XGD4L
     g$7395$6542$XGD4L
     (make-record-constructor-descriptor
       g$7394$6460$XGD4L
       g$7335$6436$XGD4L
       g$7396$6461$XGD4L))
   (g$7393$6463$XGD4L
     g$7393$6543$XGD4L
     (record-predicate g$7394$6460$XGD4L))
   (g$make-i/o-filename-error$6464$XGD4L
     g$make-i/o-filename-error$6544$XGD4L
     (record-constructor g$7395$6462$XGD4L))
   (g$7392$6465$XGD4L
     g$7392$6545$XGD4L
     (record-accessor g$7394$6460$XGD4L '0))
   (g$i/o-filename-error?$6466$XGD4L
     g$i/o-filename-error?$6546$XGD4L
     (condition-predicate g$7394$6460$XGD4L))
   (g$i/o-error-filename$6467$XGD4L
     g$i/o-error-filename$6547$XGD4L
     (condition-accessor g$7394$6460$XGD4L g$7392$6465$XGD4L))
   (g$7410$6468$XGD4L
     g$7410$6548$XGD4L
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7394$6460$XGD4L
       'g$7413$XGD4L
       '#f
       '#f
       '#()))
   (g$7412$6469$XGD4L g$7412$6549$XGD4L '#f)
   (g$7411$6470$XGD4L
     g$7411$6550$XGD4L
     (make-record-constructor-descriptor
       g$7410$6468$XGD4L
       g$7395$6462$XGD4L
       g$7412$6469$XGD4L))
   (g$7409$6471$XGD4L
     g$7409$6551$XGD4L
     (record-predicate g$7410$6468$XGD4L))
   (g$make-i/o-file-protection-error$6472$XGD4L
     g$make-i/o-file-protection-error$6552$XGD4L
     (record-constructor g$7411$6470$XGD4L))
   (g$i/o-file-protection-error?$6473$XGD4L
     g$i/o-file-protection-error?$6553$XGD4L
     (condition-predicate g$7410$6468$XGD4L))
   (g$7424$6474$XGD4L
     g$7424$6554$XGD4L
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7410$6468$XGD4L
       'g$7427$XGD4L
       '#f
       '#f
       '#()))
   (g$7426$6475$XGD4L g$7426$6555$XGD4L '#f)
   (g$7425$6476$XGD4L
     g$7425$6556$XGD4L
     (make-record-constructor-descriptor
       g$7424$6474$XGD4L
       g$7411$6470$XGD4L
       g$7426$6475$XGD4L))
   (g$7423$6477$XGD4L
     g$7423$6557$XGD4L
     (record-predicate g$7424$6474$XGD4L))
   (g$make-i/o-file-is-read-only-error$6478$XGD4L
     g$make-i/o-file-is-read-only-error$6558$XGD4L
     (record-constructor g$7425$6476$XGD4L))
   (g$i/o-file-is-read-only-error?$6479$XGD4L
     g$i/o-file-is-read-only-error?$6559$XGD4L
     (condition-predicate g$7424$6474$XGD4L))
   (g$7438$6480$XGD4L
     g$7438$6560$XGD4L
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7394$6460$XGD4L
       'g$7441$XGD4L
       '#f
       '#f
       '#()))
   (g$7440$6481$XGD4L g$7440$6561$XGD4L '#f)
   (g$7439$6482$XGD4L
     g$7439$6562$XGD4L
     (make-record-constructor-descriptor
       g$7438$6480$XGD4L
       g$7395$6462$XGD4L
       g$7440$6481$XGD4L))
   (g$7437$6483$XGD4L
     g$7437$6563$XGD4L
     (record-predicate g$7438$6480$XGD4L))
   (g$make-i/o-file-already-exists-error$6484$XGD4L
     g$make-i/o-file-already-exists-error$6564$XGD4L
     (record-constructor g$7439$6482$XGD4L))
   (g$i/o-file-already-exists-error?$6485$XGD4L
     g$i/o-file-already-exists-error?$6565$XGD4L
     (condition-predicate g$7438$6480$XGD4L))
   (g$7452$6486$XGD4L
     g$7452$6566$XGD4L
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7394$6460$XGD4L
       'g$7455$XGD4L
       '#f
       '#f
       '#()))
   (g$7454$6487$XGD4L g$7454$6567$XGD4L '#f)
   (g$7453$6488$XGD4L
     g$7453$6568$XGD4L
     (make-record-constructor-descriptor
       g$7452$6486$XGD4L
       g$7395$6462$XGD4L
       g$7454$6487$XGD4L))
   (g$7451$6489$XGD4L
     g$7451$6569$XGD4L
     (record-predicate g$7452$6486$XGD4L))
   (g$make-i/o-file-does-not-exist-error$6490$XGD4L
     g$make-i/o-file-does-not-exist-error$6570$XGD4L
     (record-constructor g$7453$6488$XGD4L))
   (g$i/o-file-does-not-exist-error?$6491$XGD4L
     g$i/o-file-does-not-exist-error?$6571$XGD4L
     (condition-predicate g$7452$6486$XGD4L))
   (g$7467$6492$XGD4L
     g$7467$6572$XGD4L
     (make-record-type-descriptor
       '&i/o-port
       g$7334$6434$XGD4L
       'g$7470$XGD4L
       '#f
       '#f
       '#((immutable port))))
   (g$7469$6493$XGD4L g$7469$6573$XGD4L '#f)
   (g$7468$6494$XGD4L
     g$7468$6574$XGD4L
     (make-record-constructor-descriptor
       g$7467$6492$XGD4L
       g$7335$6436$XGD4L
       g$7469$6493$XGD4L))
   (g$7466$6495$XGD4L
     g$7466$6575$XGD4L
     (record-predicate g$7467$6492$XGD4L))
   (g$make-i/o-port-error$6496$XGD4L
     g$make-i/o-port-error$6576$XGD4L
     (record-constructor g$7468$6494$XGD4L))
   (g$7465$6497$XGD4L
     g$7465$6577$XGD4L
     (record-accessor g$7467$6492$XGD4L '0))
   (g$i/o-port-error?$6498$XGD4L
     g$i/o-port-error?$6578$XGD4L
     (condition-predicate g$7467$6492$XGD4L))
   (g$i/o-error-port$6499$XGD4L
     g$i/o-error-port$6579$XGD4L
     (condition-accessor g$7467$6492$XGD4L g$7465$6497$XGD4L))
   (g$7483$6500$XGD4L
     g$7483$6580$XGD4L
     (make-record-type-descriptor
       '&i/o-decoding
       g$7467$6492$XGD4L
       'g$7486$XGD4L
       '#f
       '#f
       '#()))
   (g$7485$6501$XGD4L g$7485$6581$XGD4L '#f)
   (g$7484$6502$XGD4L
     g$7484$6582$XGD4L
     (make-record-constructor-descriptor
       g$7483$6500$XGD4L
       g$7468$6494$XGD4L
       g$7485$6501$XGD4L))
   (g$7482$6503$XGD4L
     g$7482$6583$XGD4L
     (record-predicate g$7483$6500$XGD4L))
   (g$make-i/o-decoding-error$6504$XGD4L
     g$make-i/o-decoding-error$6584$XGD4L
     (record-constructor g$7484$6502$XGD4L))
   (g$i/o-decoding-error?$6505$XGD4L
     g$i/o-decoding-error?$6585$XGD4L
     (condition-predicate g$7483$6500$XGD4L))
   (g$7498$6506$XGD4L
     g$7498$6586$XGD4L
     (make-record-type-descriptor
       '&i/o-encoding
       g$7467$6492$XGD4L
       'g$7501$XGD4L
       '#f
       '#f
       '#((immutable char))))
   (g$7500$6507$XGD4L g$7500$6587$XGD4L '#f)
   (g$7499$6508$XGD4L
     g$7499$6588$XGD4L
     (make-record-constructor-descriptor
       g$7498$6506$XGD4L
       g$7468$6494$XGD4L
       g$7500$6507$XGD4L))
   (g$7497$6509$XGD4L
     g$7497$6589$XGD4L
     (record-predicate g$7498$6506$XGD4L))
   (g$make-i/o-encoding-error$6510$XGD4L
     g$make-i/o-encoding-error$6590$XGD4L
     (record-constructor g$7499$6508$XGD4L))
   (g$7496$6511$XGD4L
     g$7496$6591$XGD4L
     (record-accessor g$7498$6506$XGD4L '0))
   (g$i/o-encoding-error?$6512$XGD4L
     g$i/o-encoding-error?$6592$XGD4L
     (condition-predicate g$7498$6506$XGD4L))
   (g$i/o-encoding-error-char$6513$XGD4L
     g$i/o-encoding-error-char$6593$XGD4L
     (condition-accessor g$7498$6506$XGD4L g$7496$6511$XGD4L)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6594$XGD4L
     g$get-output-string$6599$XGD4L
     (case-lambda
       ((g$port$6597$XGD4L)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6597$XGD4L))))
   (g$open-output-string$6595$XGD4L
     g$open-output-string$6600$XGD4L
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6596$XGD4L
     g$open-string-output-port$6601$XGD4L
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6598$XGD4L)
            (values
              g$p$6598$XGD4L
              (case-lambda
                (() (g$get-output-string$6594$XGD4L g$p$6598$XGD4L))))))
         (g$open-output-string$6595$XGD4L))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$enummap$6602$XGD4L
     g$enummap$6729$XGD4L
     (g$make-eq-hashtable$5664$XGD4L))
   (g$enumordermap$6603$XGD4L
     g$enumordermap$6730$XGD4L
     (g$make-eq-hashtable$5664$XGD4L))
   (g$rcdmap$6604$XGD4L
     g$rcdmap$6731$XGD4L
     (g$make-eq-hashtable$5664$XGD4L))
   (g$7527$6605$XGD4L
     g$7527$6732$XGD4L
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value))))
   (g$7529$6606$XGD4L g$7529$6733$XGD4L '#f)
   (g$7528$6607$XGD4L
     g$7528$6734$XGD4L
     (make-record-constructor-descriptor
       g$7527$6605$XGD4L
       '#f
       g$7529$6606$XGD4L))
   (g$enum?$6608$XGD4L
     g$enum?$6735$XGD4L
     (record-predicate g$7527$6605$XGD4L))
   (g$make-enum$6609$XGD4L
     g$make-enum$6736$XGD4L
     (record-constructor g$7528$6607$XGD4L))
   (g$enum-value$6610$XGD4L
     g$enum-value$6737$XGD4L
     (record-accessor g$7527$6605$XGD4L '0))
   (g$get-symbols$6619$XGD4L
     g$get-symbols$6738$XGD4L
     (case-lambda
       ((g$rtd$6637$XGD4L)
        (g$hashtable-ref$5667$XGD4L
          g$enumordermap$6603$XGD4L
          g$rtd$6637$XGD4L
          '#f))))
   (g$get-value$6620$XGD4L
     g$get-value$6739$XGD4L
     (case-lambda
       ((g$rtd$6638$XGD4L g$s$6639$XGD4L)
        (g$hashtable-ref$5667$XGD4L
          (g$hashtable-ref$5667$XGD4L g$enummap$6602$XGD4L g$rtd$6638$XGD4L '#f)
          g$s$6639$XGD4L
          '#f))))
   (g$construct$6621$XGD4L
     g$construct$6740$XGD4L
     (case-lambda
       ((g$rtd$6640$XGD4L g$value$6641$XGD4L)
        ((record-constructor
           (g$hashtable-ref$5667$XGD4L
             g$rcdmap$6604$XGD4L
             g$rtd$6640$XGD4L
             '#f))
         g$value$6641$XGD4L))))
   (g$assert-enum$6622$XGD4L
     g$assert-enum$6741$XGD4L
     (case-lambda
       ((g$who$6642$XGD4L g$enumset$6643$XGD4L)
        (if (g$enum?$6608$XGD4L g$enumset$6643$XGD4L)
          (void)
          (assertion-violation
            g$who$6642$XGD4L
            '"not an enumeration"
            g$enumset$6643$XGD4L)))))
   (g$distinct$6623$XGD4L
     g$distinct$6742$XGD4L
     (case-lambda
       ((g$symbols$6644$XGD4L)
        ((case-lambda
           ((g$ht$6645$XGD4L)
            ((letrec ((g$f$6646$XGD4L
                        (case-lambda
                          ((g$s$6647$XGD4L g$a$6648$XGD4L)
                           (if (null? g$s$6647$XGD4L)
                             (reverse! g$a$6648$XGD4L)
                             (if (g$hashtable-contains?$5670$XGD4L
                                   g$ht$6645$XGD4L
                                   (car g$s$6647$XGD4L))
                               (g$f$6646$XGD4L
                                 (cdr g$s$6647$XGD4L)
                                 g$a$6648$XGD4L)
                               (begin
                                 (g$hashtable-set!$5668$XGD4L
                                   g$ht$6645$XGD4L
                                   (car g$s$6647$XGD4L)
                                   '#t)
                                 (g$f$6646$XGD4L
                                   (cdr g$s$6647$XGD4L)
                                   (cons
                                     (car g$s$6647$XGD4L)
                                     g$a$6648$XGD4L)))))))))
               g$f$6646$XGD4L)
             g$symbols$6644$XGD4L
             '())))
         (g$make-eq-hashtable$5664$XGD4L)))))
   (g$make-enumeration$6624$XGD4L
     g$make-enumeration$6743$XGD4L
     (case-lambda
       ((g$symbols$6649$XGD4L)
        (begin
          (if (g$for-all$5871$XGD4L symbol? g$symbols$6649$XGD4L)
            (void)
            (assertion-violation
              'make-enumeration
              '"not a list of symbols"
              g$symbols$6649$XGD4L))
          (call-with-values
            (case-lambda
              (()
               (letrec* ((g$7592$6650$XGD4L
                           (make-record-type-descriptor
                             'g$7591$XGD4L
                             g$7527$6605$XGD4L
                             '#f
                             '#t
                             '#f
                             '#()))
                         (g$7594$6651$XGD4L '#f)
                         (g$7593$6652$XGD4L
                           (make-record-constructor-descriptor
                             g$7592$6650$XGD4L
                             g$7528$6607$XGD4L
                             g$7594$6651$XGD4L))
                         (g$7591$6653$XGD4L
                           (record-predicate g$7592$6650$XGD4L))
                         (g$7591$6654$XGD4L
                           (record-constructor g$7593$6652$XGD4L)))
                 (begin
                   (make-record-printer
                     'g$7591$XGD4L
                     (case-lambda
                       ((g$x$6655$XGD4L g$p$6656$XGD4L)
                        (g$fprintf$6780$XGD4L
                          g$p$6656$XGD4L
                          '"#[enum-set ~a]"
                          (g$enum-set->list$6628$XGD4L g$x$6655$XGD4L)))))
                   (values g$7592$6650$XGD4L g$7593$6652$XGD4L)))))
            (case-lambda
              ((g$rtd$6657$XGD4L g$rcd$6658$XGD4L)
               ((case-lambda
                  ((g$s$6659$XGD4L g$mask$6660$XGD4L g$intmap$6661$XGD4L)
                   (begin
                     (g$hashtable-set!$5668$XGD4L
                       g$rcdmap$6604$XGD4L
                       g$rtd$6657$XGD4L
                       g$rcd$6658$XGD4L)
                     (g$hashtable-set!$5668$XGD4L
                       g$enumordermap$6603$XGD4L
                       g$rtd$6657$XGD4L
                       g$s$6659$XGD4L)
                     (for-each
                       (case-lambda
                         ((g$e$6662$XGD4L)
                          (begin
                            (g$hashtable-set!$5668$XGD4L
                              g$intmap$6661$XGD4L
                              g$e$6662$XGD4L
                              g$mask$6660$XGD4L)
                            (set! g$mask$6660$XGD4L
                              (g$bitwise-arithmetic-shift-left$6352$XGD4L
                                g$mask$6660$XGD4L
                                '1)))))
                       g$s$6659$XGD4L)
                     (g$hashtable-set!$5668$XGD4L
                       g$enummap$6602$XGD4L
                       g$rtd$6657$XGD4L
                       g$intmap$6661$XGD4L)
                     ((record-constructor g$rcd$6658$XGD4L)
                      (- (g$bitwise-arithmetic-shift-left$6352$XGD4L
                           '1
                           (length g$s$6659$XGD4L))
                         '1)))))
                (g$distinct$6623$XGD4L g$symbols$6649$XGD4L)
                '1
                (g$make-eq-hashtable$5664$XGD4L)))))))))
   (g$enum-set-universe$6625$XGD4L
     g$enum-set-universe$6744$XGD4L
     (case-lambda
       ((g$enumset$6663$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-universe g$enumset$6663$XGD4L)
          ((case-lambda
             ((g$rtd$6664$XGD4L)
              ((case-lambda
                 ((g$count$6665$XGD4L)
                  ((case-lambda
                     (()
                      (g$construct$6621$XGD4L
                        g$rtd$6664$XGD4L
                        (- (g$bitwise-arithmetic-shift-left$6352$XGD4L
                             '1
                             g$count$6665$XGD4L)
                           '1)))))))
               (length (g$get-symbols$6619$XGD4L g$rtd$6664$XGD4L)))))
           (record-rtd g$enumset$6663$XGD4L))))))
   (g$enum-set-indexer$6626$XGD4L
     g$enum-set-indexer$6745$XGD4L
     (case-lambda
       ((g$enumset$6666$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-indexer g$enumset$6666$XGD4L)
          (case-lambda
            ((g$symbol$6667$XGD4L)
             (begin
               (if (symbol? g$symbol$6667$XGD4L)
                 (void)
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6667$XGD4L))
               ((case-lambda
                  ((g$v$6668$XGD4L)
                   (if g$v$6668$XGD4L
                     (- (bitwise-length g$v$6668$XGD4L) '1)
                     '#f)))
                (g$get-value$6620$XGD4L
                  (record-rtd g$enumset$6666$XGD4L)
                  g$symbol$6667$XGD4L)))))))))
   (g$enum-set-constructor$6627$XGD4L
     g$enum-set-constructor$6746$XGD4L
     (case-lambda
       ((g$enumset$6669$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-constructor g$enumset$6669$XGD4L)
          ((case-lambda
             ((g$rtd$6670$XGD4L)
              (case-lambda
                ((g$symbols$6671$XGD4L)
                 (begin
                   (if (g$for-all$5871$XGD4L symbol? g$symbols$6671$XGD4L)
                     (void)
                     (assertion-violation
                       'enum-set-constructor
                       '"not a list of symbols"
                       g$symbols$6671$XGD4L))
                   ((letrec ((g$f$6672$XGD4L
                               (case-lambda
                                 ((g$v$6673$XGD4L g$s$6674$XGD4L)
                                  (if (null? g$s$6674$XGD4L)
                                    (g$construct$6621$XGD4L
                                      g$rtd$6670$XGD4L
                                      g$v$6673$XGD4L)
                                    ((case-lambda
                                       ((g$v*$6675$XGD4L)
                                        (if g$v*$6675$XGD4L
                                          (g$f$6672$XGD4L
                                            (bitwise-ior
                                              g$v$6673$XGD4L
                                              g$v*$6675$XGD4L)
                                            (cdr g$s$6674$XGD4L))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            (car g$s$6674$XGD4L)))))
                                     (g$get-value$6620$XGD4L
                                       g$rtd$6670$XGD4L
                                       (car g$s$6674$XGD4L))))))))
                      g$f$6672$XGD4L)
                    '0
                    g$symbols$6671$XGD4L))))))
           (record-rtd g$enumset$6669$XGD4L))))))
   (g$enum-set->list$6628$XGD4L
     g$enum-set->list$6747$XGD4L
     (case-lambda
       ((g$enumset$6676$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set->list g$enumset$6676$XGD4L)
          ((case-lambda
             ((g$rtd$6677$XGD4L g$value$6678$XGD4L)
              ((letrec ((g$f$6679$XGD4L
                          (case-lambda
                            ((g$s$6680$XGD4L g$l$6681$XGD4L)
                             (if (null? g$s$6680$XGD4L)
                               (reverse! g$l$6681$XGD4L)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6620$XGD4L
                                         g$rtd$6677$XGD4L
                                         (car g$s$6680$XGD4L))
                                       g$value$6678$XGD4L))
                                 (g$f$6679$XGD4L
                                   (cdr g$s$6680$XGD4L)
                                   g$l$6681$XGD4L)
                                 (g$f$6679$XGD4L
                                   (cdr g$s$6680$XGD4L)
                                   (cons
                                     (car g$s$6680$XGD4L)
                                     g$l$6681$XGD4L))))))))
                 g$f$6679$XGD4L)
               (g$get-symbols$6619$XGD4L g$rtd$6677$XGD4L)
               '())))
           (record-rtd g$enumset$6676$XGD4L)
           (g$enum-value$6610$XGD4L g$enumset$6676$XGD4L))))))
   (g$enum-set-member?$6629$XGD4L
     g$enum-set-member?$6748$XGD4L
     (case-lambda
       ((g$symbol$6682$XGD4L g$enumset$6683$XGD4L)
        (begin
          (if (symbol? g$symbol$6682$XGD4L)
            (void)
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6682$XGD4L))
          (g$assert-enum$6622$XGD4L 'enum-set-member? g$enumset$6683$XGD4L)
          ((case-lambda
             ((g$v$6684$XGD4L)
              (if g$v$6684$XGD4L
                (not (zero?
                       (bitwise-and
                         g$v$6684$XGD4L
                         (g$enum-value$6610$XGD4L g$enumset$6683$XGD4L))))
                '#f)))
           (g$get-value$6620$XGD4L
             (record-rtd g$enumset$6683$XGD4L)
             g$symbol$6682$XGD4L))))))
   (g$enum-set-subset?$6630$XGD4L
     g$enum-set-subset?$6749$XGD4L
     (case-lambda
       ((g$enumset1$6685$XGD4L g$enumset2$6686$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-subset? g$enumset1$6685$XGD4L)
          (g$assert-enum$6622$XGD4L 'enum-set-subset? g$enumset2$6686$XGD4L)
          ((case-lambda
             ((g$v1$6687$XGD4L
                g$v2$6688$XGD4L
                g$rtd1$6689$XGD4L
                g$rtd2$6690$XGD4L)
              (if (eq? g$rtd1$6689$XGD4L g$rtd2$6690$XGD4L)
                (= (bitwise-and g$v1$6687$XGD4L g$v2$6688$XGD4L)
                   g$v1$6687$XGD4L)
                ((letrec ((g$f$6691$XGD4L
                            (case-lambda
                              ((g$s$6692$XGD4L)
                               (if (null? g$s$6692$XGD4L)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6693$XGD4L g$v2*$6694$XGD4L)
                                     (if g$v2*$6694$XGD4L
                                       ((case-lambda
                                          ((g$has1$6695$XGD4L g$has2$6696$XGD4L)
                                           (if (if g$has1$6695$XGD4L
                                                 (begin
                                                   '#f
                                                   (not g$has2$6696$XGD4L))
                                                 '#f)
                                             '#f
                                             (g$f$6691$XGD4L
                                               (cdr g$s$6692$XGD4L)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6687$XGD4L
                                                 g$v1*$6693$XGD4L)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6688$XGD4L
                                                 g$v2*$6694$XGD4L))))
                                       '#f)))
                                  (g$get-value$6620$XGD4L
                                    g$rtd1$6689$XGD4L
                                    (car g$s$6692$XGD4L))
                                  (g$get-value$6620$XGD4L
                                    g$rtd2$6690$XGD4L
                                    (car g$s$6692$XGD4L))))))))
                   g$f$6691$XGD4L)
                 (g$get-symbols$6619$XGD4L g$rtd1$6689$XGD4L)))))
           (g$enum-value$6610$XGD4L g$enumset1$6685$XGD4L)
           (g$enum-value$6610$XGD4L g$enumset2$6686$XGD4L)
           (record-rtd g$enumset1$6685$XGD4L)
           (record-rtd g$enumset2$6686$XGD4L))))))
   (g$enum-set=?$6631$XGD4L
     g$enum-set=?$6750$XGD4L
     (case-lambda
       ((g$enumset1$6697$XGD4L g$enumset2$6698$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set=? g$enumset1$6697$XGD4L)
          (g$assert-enum$6622$XGD4L 'enum-set=? g$enumset2$6698$XGD4L)
          (if (g$enum-set-subset?$6630$XGD4L
                g$enumset1$6697$XGD4L
                g$enumset2$6698$XGD4L)
            (begin
              '#f
              (g$enum-set-subset?$6630$XGD4L
                g$enumset2$6698$XGD4L
                g$enumset1$6697$XGD4L))
            '#f)))))
   (g$enum-set-union$6632$XGD4L
     g$enum-set-union$6751$XGD4L
     (case-lambda
       ((g$enumset1$6699$XGD4L g$enumset2$6700$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-union g$enumset1$6699$XGD4L)
          (g$assert-enum$6622$XGD4L 'enum-set-union g$enumset2$6700$XGD4L)
          ((case-lambda
             ((g$v1$6701$XGD4L
                g$v2$6702$XGD4L
                g$rtd1$6703$XGD4L
                g$rtd2$6704$XGD4L)
              (if (eq? g$rtd1$6703$XGD4L g$rtd2$6704$XGD4L)
                (g$construct$6621$XGD4L
                  g$rtd1$6703$XGD4L
                  (bitwise-ior g$v1$6701$XGD4L g$v2$6702$XGD4L))
                '#f)))
           (g$enum-value$6610$XGD4L g$enumset1$6699$XGD4L)
           (g$enum-value$6610$XGD4L g$enumset2$6700$XGD4L)
           (record-rtd g$enumset1$6699$XGD4L)
           (record-rtd g$enumset2$6700$XGD4L))))))
   (g$enum-set-intersection$6633$XGD4L
     g$enum-set-intersection$6752$XGD4L
     (case-lambda
       ((g$enumset1$6705$XGD4L g$enumset2$6706$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L
            'enum-set-intersection
            g$enumset1$6705$XGD4L)
          (g$assert-enum$6622$XGD4L
            'enum-set-intersection
            g$enumset2$6706$XGD4L)
          ((case-lambda
             ((g$v1$6707$XGD4L
                g$v2$6708$XGD4L
                g$rtd1$6709$XGD4L
                g$rtd2$6710$XGD4L)
              (if (eq? g$rtd1$6709$XGD4L g$rtd2$6710$XGD4L)
                (g$construct$6621$XGD4L
                  g$rtd1$6709$XGD4L
                  (bitwise-and g$v1$6707$XGD4L g$v2$6708$XGD4L))
                '#f)))
           (g$enum-value$6610$XGD4L g$enumset1$6705$XGD4L)
           (g$enum-value$6610$XGD4L g$enumset2$6706$XGD4L)
           (record-rtd g$enumset1$6705$XGD4L)
           (record-rtd g$enumset2$6706$XGD4L))))))
   (g$enum-set-difference$6634$XGD4L
     g$enum-set-difference$6753$XGD4L
     (case-lambda
       ((g$enumset1$6711$XGD4L g$enumset2$6712$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-difference g$enumset1$6711$XGD4L)
          (g$assert-enum$6622$XGD4L 'enum-set-difference g$enumset2$6712$XGD4L)
          ((case-lambda
             ((g$v1$6713$XGD4L
                g$v2$6714$XGD4L
                g$rtd1$6715$XGD4L
                g$rtd2$6716$XGD4L)
              (if (eq? g$rtd1$6715$XGD4L g$rtd2$6716$XGD4L)
                (g$construct$6621$XGD4L
                  g$rtd1$6715$XGD4L
                  (bitwise-xor
                    g$v1$6713$XGD4L
                    (bitwise-and g$v1$6713$XGD4L g$v2$6714$XGD4L)))
                '#f)))
           (g$enum-value$6610$XGD4L g$enumset1$6711$XGD4L)
           (g$enum-value$6610$XGD4L g$enumset2$6712$XGD4L)
           (record-rtd g$enumset1$6711$XGD4L)
           (record-rtd g$enumset2$6712$XGD4L))))))
   (g$enum-set-complement$6635$XGD4L
     g$enum-set-complement$6754$XGD4L
     (case-lambda
       ((g$enumset$6717$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-complement g$enumset$6717$XGD4L)
          ((case-lambda
             ((g$v$6718$XGD4L g$u$6719$XGD4L)
              (g$construct$6621$XGD4L
                (record-rtd g$enumset$6717$XGD4L)
                (bitwise-and (bitwise-not g$v$6718$XGD4L) g$u$6719$XGD4L))))
           (g$enum-value$6610$XGD4L g$enumset$6717$XGD4L)
           (g$enum-value$6610$XGD4L
             (g$enum-set-universe$6625$XGD4L g$enumset$6717$XGD4L)))))))
   (g$enum-set-projection$6636$XGD4L
     g$enum-set-projection$6755$XGD4L
     (case-lambda
       ((g$enumset1$6720$XGD4L g$enumset2$6721$XGD4L)
        (begin
          (g$assert-enum$6622$XGD4L 'enum-set-projection g$enumset1$6720$XGD4L)
          (g$assert-enum$6622$XGD4L 'enum-set-projection g$enumset2$6721$XGD4L)
          ((case-lambda
             ((g$v1$6722$XGD4L g$rtd1$6723$XGD4L g$rtd2$6724$XGD4L)
              ((letrec ((g$f$6725$XGD4L
                          (case-lambda
                            ((g$s$6726$XGD4L g$v$6727$XGD4L)
                             (if (null? g$s$6726$XGD4L)
                               (g$construct$6621$XGD4L
                                 g$rtd2$6724$XGD4L
                                 g$v$6727$XGD4L)
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6722$XGD4L
                                       (g$get-value$6620$XGD4L
                                         g$rtd1$6723$XGD4L
                                         (car g$s$6726$XGD4L))))
                                 (g$f$6725$XGD4L
                                   (cdr g$s$6726$XGD4L)
                                   g$v$6727$XGD4L)
                                 ((case-lambda
                                    ((g$v2$6728$XGD4L)
                                     (if g$v2$6728$XGD4L
                                       (g$f$6725$XGD4L
                                         (cdr g$s$6726$XGD4L)
                                         (bitwise-ior
                                           g$v$6727$XGD4L
                                           g$v2$6728$XGD4L))
                                       (g$f$6725$XGD4L
                                         (cdr g$s$6726$XGD4L)
                                         g$v$6727$XGD4L))))
                                  (g$get-value$6620$XGD4L
                                    g$rtd2$6724$XGD4L
                                    (car g$s$6726$XGD4L)))))))))
                 g$f$6725$XGD4L)
               (g$get-symbols$6619$XGD4L g$rtd1$6723$XGD4L)
               '0)))
           (g$enum-value$6610$XGD4L g$enumset1$6720$XGD4L)
           (record-rtd g$enumset1$6720$XGD4L)
           (record-rtd g$enumset2$6721$XGD4L)))))))
  (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6756$XGD4L
     g$dofmt$6778$XGD4L
     (case-lambda
       ((g$p$6760$XGD4L g$cntl$6761$XGD4L g$args$6762$XGD4L)
        ((case-lambda
           ((g$nmax$6763$XGD4L)
            ((letrec ((g$loop$6764$XGD4L
                        (case-lambda
                          ((g$n$6765$XGD4L g$a$6766$XGD4L)
                           (if (fx<=? g$n$6765$XGD4L g$nmax$6763$XGD4L)
                             ((case-lambda
                                ((g$c$6767$XGD4L)
                                 (if (if (char=? g$c$6767$XGD4L '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6765$XGD4L
                                           g$nmax$6763$XGD4L))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6768$XGD4L)
                                       (if (eqv? g$t$6768$XGD4L '#\a)
                                         (begin
                                           (display
                                             (car g$a$6766$XGD4L)
                                             g$p$6760$XGD4L)
                                           (g$loop$6764$XGD4L
                                             (fx+ g$n$6765$XGD4L '2)
                                             (cdr g$a$6766$XGD4L)))
                                         (if (eqv? g$t$6768$XGD4L '#\s)
                                           (begin
                                             (write
                                               (car g$a$6766$XGD4L)
                                               g$p$6760$XGD4L)
                                             (g$loop$6764$XGD4L
                                               (fx+ g$n$6765$XGD4L '2)
                                               (cdr g$a$6766$XGD4L)))
                                           (if (eqv? g$t$6768$XGD4L '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6766$XGD4L)
                                                   '2)
                                                 g$p$6760$XGD4L)
                                               (g$loop$6764$XGD4L
                                                 (fx+ g$n$6765$XGD4L '2)
                                                 (cdr g$a$6766$XGD4L)))
                                             (if (eqv? g$t$6768$XGD4L '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6766$XGD4L)
                                                     '8)
                                                   g$p$6760$XGD4L)
                                                 (g$loop$6764$XGD4L
                                                   (fx+ g$n$6765$XGD4L '2)
                                                   (cdr g$a$6766$XGD4L)))
                                               (if (eqv? g$t$6768$XGD4L '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6766$XGD4L)
                                                       '16)
                                                     g$p$6760$XGD4L)
                                                   (g$loop$6764$XGD4L
                                                     (fx+ g$n$6765$XGD4L '2)
                                                     (cdr g$a$6766$XGD4L)))
                                                 (if (eqv? g$t$6768$XGD4L '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6766$XGD4L)
                                                         '10)
                                                       g$p$6760$XGD4L)
                                                     (g$loop$6764$XGD4L
                                                       (fx+ g$n$6765$XGD4L '2)
                                                       (cdr g$a$6766$XGD4L)))
                                                   (if (eqv?
                                                         g$t$6768$XGD4L
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6760$XGD4L)
                                                       (g$loop$6764$XGD4L
                                                         (fx+ g$n$6765$XGD4L '2)
                                                         g$a$6766$XGD4L))
                                                     (begin
                                                       (write-char
                                                         g$c$6767$XGD4L
                                                         g$p$6760$XGD4L)
                                                       (g$loop$6764$XGD4L
                                                         (fx+ g$n$6765$XGD4L '1)
                                                         g$a$6766$XGD4L)))))))))))
                                    (string-ref
                                      g$cntl$6761$XGD4L
                                      (fx+ g$n$6765$XGD4L '1)))
                                   (begin
                                     (write-char g$c$6767$XGD4L g$p$6760$XGD4L)
                                     (g$loop$6764$XGD4L
                                       (fx+ g$n$6765$XGD4L '1)
                                       g$a$6766$XGD4L)))))
                              (string-ref g$cntl$6761$XGD4L g$n$6765$XGD4L))
                             (void))))))
               g$loop$6764$XGD4L)
             '0
             g$args$6762$XGD4L)))
         (fx- (string-length g$cntl$6761$XGD4L) '1)))))
   (g$printf$6757$XGD4L
     g$printf$6779$XGD4L
     (case-lambda
       ((g$control$6769$XGD4L . g$args$6770$XGD4L)
        (g$dofmt$6756$XGD4L
          (current-output-port)
          g$control$6769$XGD4L
          g$args$6770$XGD4L))))
   (g$fprintf$6758$XGD4L
     g$fprintf$6780$XGD4L
     (case-lambda
       ((g$p$6771$XGD4L g$control$6772$XGD4L . g$args$6773$XGD4L)
        (g$dofmt$6756$XGD4L
          g$p$6771$XGD4L
          g$control$6772$XGD4L
          g$args$6773$XGD4L))))
   (g$format$6759$XGD4L
     g$format$6781$XGD4L
     (case-lambda
       ((g$control$6774$XGD4L . g$args$6775$XGD4L)
        (call-with-values
          g$open-string-output-port$6601$XGD4L
          (case-lambda
            ((g$p$6776$XGD4L g$c$6777$XGD4L)
             (begin
               (g$dofmt$6756$XGD4L
                 g$p$6776$XGD4L
                 g$control$6774$XGD4L
                 g$args$6775$XGD4L)
               (g$c$6777$XGD4L)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6782$XGD4L
     g$make-traced-macro$6785$XGD4L
     (case-lambda
       ((g$name$6783$XGD4L g$x$6784$XGD4L)
        (if (procedure? g$x$6784$XGD4L)
          (make-traced-procedure
            g$name$6783$XGD4L
            g$x$6784$XGD4L
            g$syntax->datum$11436$XGD4L)
          (if (g$variable-transformer?$11264$XGD4L g$x$6784$XGD4L)
            (g$make-variable-transformer$11263$XGD4L
              (make-traced-procedure
                g$name$6783$XGD4L
                (g$variable-transformer-procedure$11265$XGD4L g$x$6784$XGD4L)
                g$syntax->datum$11436$XGD4L))
            g$x$6784$XGD4L))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6786$XGD4L
     g$read-library-source-file$6865$XGD4L
     (case-lambda
       ((g$file-name$6857$XGD4L)
        (with-input-from-file g$file-name$6857$XGD4L read-annotated))))
   (g$make-parameter$6787$XGD4L
     g$make-parameter$6866$XGD4L
     (case-lambda
       ((g$x$6858$XGD4L)
        (g$make-parameter$6787$XGD4L
          g$x$6858$XGD4L
          (case-lambda ((g$x$6859$XGD4L) g$x$6859$XGD4L))))
       ((g$x$6860$XGD4L g$fender$6861$XGD4L)
        (begin
          (if (procedure? g$fender$6861$XGD4L)
            (void)
            (assertion-violation '#f '"assertion failed" '(procedure? fender)))
          ((case-lambda
             ((g$x$6862$XGD4L)
              (case-lambda
                (() g$x$6862$XGD4L)
                ((g$v$6863$XGD4L)
                 (set! g$x$6862$XGD4L (g$fender$6861$XGD4L g$v$6863$XGD4L))))))
           (g$fender$6861$XGD4L g$x$6860$XGD4L))))))
   (g$file-options-constructor$6855$XGD4L
     g$file-options-constructor$6867$XGD4L
     (g$make-parameter$6787$XGD4L '#f))
   (g$file-options-spec$6856$XGD4L
     g$file-options-spec$6868$XGD4L
     (case-lambda
       ((g$x$6864$XGD4L)
        ((g$file-options-constructor$6855$XGD4L) g$x$6864$XGD4L)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7065$XGD4L
     g$current-primitive-locations$7110$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda ((g$x$7071$XGD4L) '#f))
       (case-lambda
         ((g$p$7072$XGD4L)
          (begin
            (if (procedure? g$p$7072$XGD4L)
              (void)
              (assertion-violation '#f '"assertion failed" '(procedure? p)))
            g$p$7072$XGD4L)))))
   (g$mutable?$7066$XGD4L
     g$mutable?$7111$XGD4L
     (case-lambda
       ((g$x$7073$XGD4L)
        (letrec* ((g$simple?$7074$XGD4L
                    (case-lambda
                      ((g$x$7075$XGD4L)
                       ((case-lambda
                          ((g$t$7076$XGD4L)
                           (if g$t$7076$XGD4L
                             g$t$7076$XGD4L
                             ((case-lambda
                                ((g$t$7077$XGD4L)
                                 (if g$t$7077$XGD4L
                                   g$t$7077$XGD4L
                                   ((case-lambda
                                      ((g$t$7078$XGD4L)
                                       (if g$t$7078$XGD4L
                                         g$t$7078$XGD4L
                                         ((case-lambda
                                            ((g$t$7079$XGD4L)
                                             (if g$t$7079$XGD4L
                                               g$t$7079$XGD4L
                                               ((case-lambda
                                                  ((g$t$7080$XGD4L)
                                                   (if g$t$7080$XGD4L
                                                     g$t$7080$XGD4L
                                                     ((case-lambda
                                                        ((g$t$7081$XGD4L)
                                                         (if g$t$7081$XGD4L
                                                           g$t$7081$XGD4L
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7075$XGD4L)))))
                                                      (bytevector?
                                                        g$x$7075$XGD4L)))))
                                                (string? g$x$7075$XGD4L)))))
                                          (boolean? g$x$7075$XGD4L)))))
                                    (symbol? g$x$7075$XGD4L)))))
                              (char? g$x$7075$XGD4L)))))
                        (null? g$x$7075$XGD4L))))))
          (not (g$simple?$7074$XGD4L g$x$7073$XGD4L))))))
   (g$rewriter$7067$XGD4L
     g$rewriter$7112$XGD4L
     (case-lambda
       ((g$quote-hack?$7082$XGD4L)
        (letrec* ((g$f$7083$XGD4L
                    (case-lambda
                      ((g$x$7084$XGD4L)
                       (if (pair? g$x$7084$XGD4L)
                         ((case-lambda
                            ((g$t$7085$XGD4L)
                             (if (eqv? g$t$7085$XGD4L 'quote)
                               (if (if g$quote-hack?$7082$XGD4L
                                     (begin
                                       '#f
                                       (g$mutable?$7066$XGD4L
                                         (g$cadr$5402$XGD4L g$x$7084$XGD4L)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7105$XGD4L)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7105$XGD4L
                                         (g$cadr$5402$XGD4L g$x$7084$XGD4L))
                                       g$g$7105$XGD4L)))
                                  (gensym))
                                 g$x$7084$XGD4L)
                               (if (eqv? g$t$7085$XGD4L 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7104$XGD4L)
                                           (cons
                                             (car g$x$7104$XGD4L)
                                             (map g$f$7083$XGD4L
                                                  (cdr g$x$7104$XGD4L)))))
                                        (cdr g$x$7084$XGD4L)))
                                 (if (eqv? g$t$7085$XGD4L 'lambda)
                                   (g$cons*$5873$XGD4L
                                     'lambda
                                     (g$cadr$5402$XGD4L g$x$7084$XGD4L)
                                     (map g$f$7083$XGD4L
                                          (g$cddr$5404$XGD4L g$x$7084$XGD4L)))
                                   (if (eqv? g$t$7085$XGD4L 'letrec)
                                     ((case-lambda
                                        ((g$bindings$7100$XGD4L
                                           g$body*$7101$XGD4L)
                                         ((case-lambda
                                            ((g$lhs*$7102$XGD4L
                                               g$rhs*$7103$XGD4L)
                                             (g$cons*$5873$XGD4L
                                               'letrec
                                               (map list
                                                    g$lhs*$7102$XGD4L
                                                    (map g$f$7083$XGD4L
                                                         g$rhs*$7103$XGD4L))
                                               (map g$f$7083$XGD4L
                                                    g$body*$7101$XGD4L))))
                                          (map car g$bindings$7100$XGD4L)
                                          (map g$cadr$5402$XGD4L
                                               g$bindings$7100$XGD4L))))
                                      (g$cadr$5402$XGD4L g$x$7084$XGD4L)
                                      (g$cddr$5404$XGD4L g$x$7084$XGD4L))
                                     (if (eqv? g$t$7085$XGD4L 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$7096$XGD4L
                                             g$body*$7097$XGD4L)
                                           ((case-lambda
                                              ((g$lhs*$7098$XGD4L
                                                 g$rhs*$7099$XGD4L)
                                               (g$cons*$5873$XGD4L
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7098$XGD4L
                                                      (map g$f$7083$XGD4L
                                                           g$rhs*$7099$XGD4L))
                                                 (map g$f$7083$XGD4L
                                                      g$body*$7097$XGD4L))))
                                            (map car g$bindings$7096$XGD4L)
                                            (map g$cadr$5402$XGD4L
                                                 g$bindings$7096$XGD4L))))
                                        (g$cadr$5402$XGD4L g$x$7084$XGD4L)
                                        (g$cddr$5404$XGD4L g$x$7084$XGD4L))
                                       (if (eqv?
                                             g$t$7085$XGD4L
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$7089$XGD4L g$x$7090$XGD4L)
                                             ((case-lambda
                                                ((g$bindings$7091$XGD4L
                                                   g$body*$7092$XGD4L)
                                                 ((case-lambda
                                                    ((g$lhs*$7093$XGD4L
                                                       g$lhs**$7094$XGD4L
                                                       g$rhs*$7095$XGD4L)
                                                     (g$cons*$5873$XGD4L
                                                       'library-letrec*
                                                       g$name$7089$XGD4L
                                                       (map list
                                                            g$lhs*$7093$XGD4L
                                                            g$lhs**$7094$XGD4L
                                                            (map g$f$7083$XGD4L
                                                                 g$rhs*$7095$XGD4L))
                                                       (map g$f$7083$XGD4L
                                                            g$body*$7092$XGD4L))))
                                                  (map car
                                                       g$bindings$7091$XGD4L)
                                                  (map g$cadr$5402$XGD4L
                                                       g$bindings$7091$XGD4L)
                                                  (map g$caddr$5408$XGD4L
                                                       g$bindings$7091$XGD4L))))
                                              (g$cadr$5402$XGD4L g$x$7090$XGD4L)
                                              (g$cddr$5404$XGD4L
                                                g$x$7090$XGD4L))))
                                          (g$cadr$5402$XGD4L g$x$7084$XGD4L)
                                          (cdr g$x$7084$XGD4L))
                                         (if (eqv? g$t$7085$XGD4L 'begin)
                                           (cons
                                             'begin
                                             (map g$f$7083$XGD4L
                                                  (cdr g$x$7084$XGD4L)))
                                           (if (eqv? g$t$7085$XGD4L 'set!)
                                             (list
                                               'set!
                                               (g$cadr$5402$XGD4L
                                                 g$x$7084$XGD4L)
                                               (g$f$7083$XGD4L
                                                 (g$caddr$5408$XGD4L
                                                   g$x$7084$XGD4L)))
                                             (if (eqv?
                                                   g$t$7085$XGD4L
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$7086$XGD4L)
                                                   ((case-lambda
                                                      ((g$t$7087$XGD4L)
                                                       (if g$t$7087$XGD4L
                                                         ((case-lambda
                                                            ((g$loc$7088$XGD4L)
                                                             g$loc$7088$XGD4L))
                                                          g$t$7087$XGD4L)
                                                         g$op$7086$XGD4L)))
                                                    ((g$current-primitive-locations$7065$XGD4L)
                                                     g$op$7086$XGD4L))))
                                                (g$cadr$5402$XGD4L
                                                  g$x$7084$XGD4L))
                                               (if (eqv? g$t$7085$XGD4L 'define)
                                                 g$x$7084$XGD4L
                                                 (if (list? g$x$7084$XGD4L)
                                                   (map g$f$7083$XGD4L
                                                        g$x$7084$XGD4L)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7084$XGD4L
                                                     (list?
                                                       g$x$7084$XGD4L)))))))))))))))
                          (car g$x$7084$XGD4L))
                         g$x$7084$XGD4L)))))
          g$f$7083$XGD4L))))
   (g$expanded->core$7068$XGD4L
     g$expanded->core$7113$XGD4L
     (case-lambda
       ((g$x$7106$XGD4L) ((g$rewriter$7067$XGD4L '#t) g$x$7106$XGD4L))))
   (g$compile-core-expr$7069$XGD4L
     g$compile-core-expr$7114$XGD4L
     (case-lambda
       ((g$x$7107$XGD4L) ((g$rewriter$7067$XGD4L '#f) g$x$7107$XGD4L))))
   (g$compile-core-expr-to-port$7070$XGD4L
     g$compile-core-expr-to-port$7115$XGD4L
     (case-lambda
       ((g$x$7108$XGD4L g$p$7109$XGD4L)
        (g$pretty-print$7064$XGD4L
          ((g$rewriter$7067$XGD4L '#f) g$x$7108$XGD4L)
          g$p$7109$XGD4L)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7154$XGD4L
     g$make-collection$7358$XGD4L
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7215$XGD4L)
            (letrec* ((g$set-cons$7216$XGD4L
                        (case-lambda
                          ((g$x$7218$XGD4L g$ls$7219$XGD4L)
                           (if (memq g$x$7218$XGD4L g$ls$7219$XGD4L)
                             g$ls$7219$XGD4L
                             (cons g$x$7218$XGD4L g$ls$7219$XGD4L))))))
              (case-lambda
                (() g$set$7215$XGD4L)
                ((g$x$7217$XGD4L)
                 (set! g$set$7215$XGD4L
                   (g$set-cons$7216$XGD4L g$x$7217$XGD4L g$set$7215$XGD4L)))))))
         '()))))
   (g$current-library-collection$7155$XGD4L
     g$current-library-collection$7359$XGD4L
     (g$make-parameter$6866$XGD4L
       (g$make-collection$7154$XGD4L)
       (case-lambda
         ((g$x$7220$XGD4L)
          (begin
            (if (procedure? g$x$7220$XGD4L)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7220$XGD4L))
            g$x$7220$XGD4L)))))
   (g$8089$7156$XGD4L
     g$8089$7360$XGD4L
     (make-record-type-descriptor
       'library
       '#f
       'g$8092$XGD4L
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8091$7157$XGD4L g$8091$7361$XGD4L '#f)
   (g$8090$7158$XGD4L
     g$8090$7362$XGD4L
     (make-record-constructor-descriptor
       g$8089$7156$XGD4L
       '#f
       g$8091$7157$XGD4L))
   (g$library?$7159$XGD4L
     g$library?$7363$XGD4L
     (record-predicate g$8089$7156$XGD4L))
   (g$make-library$7160$XGD4L
     g$make-library$7364$XGD4L
     (record-constructor g$8090$7158$XGD4L))
   (g$library-id$7161$XGD4L
     g$library-id$7365$XGD4L
     (record-accessor g$8089$7156$XGD4L '0))
   (g$library-name$7162$XGD4L
     g$library-name$7366$XGD4L
     (record-accessor g$8089$7156$XGD4L '1))
   (g$library-version$7163$XGD4L
     g$library-version$7367$XGD4L
     (record-accessor g$8089$7156$XGD4L '2))
   (g$library-imp*$7164$XGD4L
     g$library-imp*$7368$XGD4L
     (record-accessor g$8089$7156$XGD4L '3))
   (g$library-vis*$7165$XGD4L
     g$library-vis*$7369$XGD4L
     (record-accessor g$8089$7156$XGD4L '4))
   (g$library-inv*$7166$XGD4L
     g$library-inv*$7370$XGD4L
     (record-accessor g$8089$7156$XGD4L '5))
   (g$library-subst$7167$XGD4L
     g$library-subst$7371$XGD4L
     (record-accessor g$8089$7156$XGD4L '6))
   (g$library-env$7168$XGD4L
     g$library-env$7372$XGD4L
     (record-accessor g$8089$7156$XGD4L '7))
   (g$library-visit-state$7169$XGD4L
     g$library-visit-state$7373$XGD4L
     (record-accessor g$8089$7156$XGD4L '8))
   (g$library-invoke-state$7170$XGD4L
     g$library-invoke-state$7374$XGD4L
     (record-accessor g$8089$7156$XGD4L '9))
   (g$library-visit-code$7171$XGD4L
     g$library-visit-code$7375$XGD4L
     (record-accessor g$8089$7156$XGD4L '10))
   (g$library-invoke-code$7172$XGD4L
     g$library-invoke-code$7376$XGD4L
     (record-accessor g$8089$7156$XGD4L '11))
   (g$library-visible?$7173$XGD4L
     g$library-visible?$7377$XGD4L
     (record-accessor g$8089$7156$XGD4L '12))
   (g$library-source-file-name$7174$XGD4L
     g$library-source-file-name$7378$XGD4L
     (record-accessor g$8089$7156$XGD4L '13))
   (g$set-library-id!$7175$XGD4L
     g$set-library-id!$7379$XGD4L
     (record-mutator g$8089$7156$XGD4L '0))
   (g$set-library-name!$7176$XGD4L
     g$set-library-name!$7380$XGD4L
     (record-mutator g$8089$7156$XGD4L '1))
   (g$set-library-version!$7177$XGD4L
     g$set-library-version!$7381$XGD4L
     (record-mutator g$8089$7156$XGD4L '2))
   (g$set-library-imp*!$7178$XGD4L
     g$set-library-imp*!$7382$XGD4L
     (record-mutator g$8089$7156$XGD4L '3))
   (g$set-library-vis*!$7179$XGD4L
     g$set-library-vis*!$7383$XGD4L
     (record-mutator g$8089$7156$XGD4L '4))
   (g$set-library-inv*!$7180$XGD4L
     g$set-library-inv*!$7384$XGD4L
     (record-mutator g$8089$7156$XGD4L '5))
   (g$set-library-subst!$7181$XGD4L
     g$set-library-subst!$7385$XGD4L
     (record-mutator g$8089$7156$XGD4L '6))
   (g$set-library-env!$7182$XGD4L
     g$set-library-env!$7386$XGD4L
     (record-mutator g$8089$7156$XGD4L '7))
   (g$set-library-visit-state!$7183$XGD4L
     g$set-library-visit-state!$7387$XGD4L
     (record-mutator g$8089$7156$XGD4L '8))
   (g$set-library-invoke-state!$7184$XGD4L
     g$set-library-invoke-state!$7388$XGD4L
     (record-mutator g$8089$7156$XGD4L '9))
   (g$set-library-visit-code!$7185$XGD4L
     g$set-library-visit-code!$7389$XGD4L
     (record-mutator g$8089$7156$XGD4L '10))
   (g$set-library-invoke-code!$7186$XGD4L
     g$set-library-invoke-code!$7390$XGD4L
     (record-mutator g$8089$7156$XGD4L '11))
   (g$set-library-visible?!$7187$XGD4L
     g$set-library-visible?!$7391$XGD4L
     (record-mutator g$8089$7156$XGD4L '12))
   (g$set-library-source-file-name!$7188$XGD4L
     g$set-library-source-file-name!$7392$XGD4L
     (record-mutator g$8089$7156$XGD4L '13))
   (g$rp$7189$XGD4L
     g$rp$7393$XGD4L
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7221$XGD4L g$p$7222$XGD4L)
          (begin
            (if (g$library?$7159$XGD4L g$x$7221$XGD4L)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6781$XGD4L
                '"#<library ~s>"
                (if (null? (g$library-version$7163$XGD4L g$x$7221$XGD4L))
                  (g$library-name$7162$XGD4L g$x$7221$XGD4L)
                  (append
                    (g$library-name$7162$XGD4L g$x$7221$XGD4L)
                    (list (g$library-version$7163$XGD4L g$x$7221$XGD4L)))))
              g$p$7222$XGD4L))))))
   (g$find-dependencies$7190$XGD4L
     g$find-dependencies$7394$XGD4L
     (case-lambda
       ((g$ls$7223$XGD4L)
        (if (null? g$ls$7223$XGD4L)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7191$XGD4L
     g$find-library-by$7395$XGD4L
     (case-lambda
       ((g$pred$7224$XGD4L)
        ((letrec ((g$f$7225$XGD4L
                    (case-lambda
                      ((g$ls$7226$XGD4L)
                       (if (null? g$ls$7226$XGD4L)
                         '#f
                         (if (g$pred$7224$XGD4L (car g$ls$7226$XGD4L))
                           (car g$ls$7226$XGD4L)
                           (g$f$7225$XGD4L (cdr g$ls$7226$XGD4L))))))))
           g$f$7225$XGD4L)
         ((g$current-library-collection$7155$XGD4L))))))
   (g$library-path$7192$XGD4L
     g$library-path$7396$XGD4L
     (g$make-parameter$6866$XGD4L
       '(".")
       (case-lambda
         ((g$x$7227$XGD4L)
          (if (if (list? g$x$7227$XGD4L)
                (begin '#f (g$for-all$5871$XGD4L string? g$x$7227$XGD4L))
                '#f)
            (map (case-lambda ((g$x$7228$XGD4L) g$x$7228$XGD4L)) g$x$7227$XGD4L)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7227$XGD4L))))))
   (g$library-extensions$7193$XGD4L
     g$library-extensions$7397$XGD4L
     (g$make-parameter$6866$XGD4L
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7229$XGD4L)
          (if (if (list? g$x$7229$XGD4L)
                (begin '#f (g$for-all$5871$XGD4L string? g$x$7229$XGD4L))
                '#f)
            (map (case-lambda ((g$x$7230$XGD4L) g$x$7230$XGD4L)) g$x$7229$XGD4L)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7229$XGD4L))))))
   (g$library-name->file-name$7194$XGD4L
     g$library-name->file-name$7398$XGD4L
     (case-lambda
       ((g$x$7231$XGD4L)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6601$XGD4L)))
          (case-lambda
            ((g$p$7234$XGD4L g$extract$7235$XGD4L)
             ((case-lambda
                ((g$extract$7236$XGD4L g$p$7237$XGD4L)
                 (letrec* ((g$display-hex$7238$XGD4L
                             (case-lambda
                               ((g$n$7246$XGD4L)
                                (if (<= '0 g$n$7246$XGD4L '9)
                                  (display g$n$7246$XGD4L g$p$7237$XGD4L)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7246$XGD4L '10)))
                                    g$p$7237$XGD4L))))))
                   (begin
                     ((letrec ((g$f$7239$XGD4L
                                 (case-lambda
                                   ((g$ls$7240$XGD4L)
                                    (if (null? g$ls$7240$XGD4L)
                                      (void)
                                      (begin
                                        (display '"/" g$p$7237$XGD4L)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7241$XGD4L)
                                             (if ((case-lambda
                                                    ((g$t$7242$XGD4L)
                                                     (if g$t$7242$XGD4L
                                                       g$t$7242$XGD4L
                                                       ((case-lambda
                                                          ((g$t$7243$XGD4L)
                                                           (if g$t$7243$XGD4L
                                                             g$t$7243$XGD4L
                                                             ((case-lambda
                                                                ((g$t$7244$XGD4L)
                                                                 (if g$t$7244$XGD4L
                                                                   g$t$7244$XGD4L
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7241$XGD4L
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$7241$XGD4L
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$7241$XGD4L
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$7241$XGD4L
                                                    '#\z))
                                               (display
                                                 g$c$7241$XGD4L
                                                 g$p$7237$XGD4L)
                                               (begin
                                                 (display '"%" g$p$7237$XGD4L)
                                                 ((case-lambda
                                                    ((g$n$7245$XGD4L)
                                                     (begin
                                                       (g$display-hex$7238$XGD4L
                                                         (g$quotient$6228$XGD4L
                                                           g$n$7245$XGD4L
                                                           '16))
                                                       (g$display-hex$7238$XGD4L
                                                         (g$remainder$6229$XGD4L
                                                           g$n$7245$XGD4L
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7241$XGD4L))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7240$XGD4L))))
                                        (g$f$7239$XGD4L
                                          (cdr g$ls$7240$XGD4L))))))))
                        g$f$7239$XGD4L)
                      g$x$7231$XGD4L)
                     (g$extract$7236$XGD4L)))))
              g$extract$7235$XGD4L
              g$p$7234$XGD4L)))))))
   (g$file-locator$7195$XGD4L
     g$file-locator$7399$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         ((g$x$7247$XGD4L)
          ((case-lambda
             ((g$str$7248$XGD4L)
              ((letrec ((g$f$7249$XGD4L
                          (case-lambda
                            ((g$ls$7250$XGD4L
                               g$exts$7251$XGD4L
                               g$failed-list$7252$XGD4L)
                             (if (null? g$ls$7250$XGD4L)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8194$7253$XGD4L
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8197$XGD4L
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8196$7254$XGD4L '#f)
                                             (g$8195$7255$XGD4L
                                               (make-record-constructor-descriptor
                                                 g$8194$7253$XGD4L
                                                 &condition-rcd
                                                 g$8196$7254$XGD4L))
                                             (g$8193$7256$XGD4L
                                               (record-predicate
                                                 g$8194$7253$XGD4L))
                                             (g$make-library-resolution-condition$7257$XGD4L
                                               (record-constructor
                                                 g$8195$7255$XGD4L))
                                             (g$8191$7258$XGD4L
                                               (record-accessor
                                                 g$8194$7253$XGD4L
                                                 '0))
                                             (g$8192$7259$XGD4L
                                               (record-accessor
                                                 g$8194$7253$XGD4L
                                                 '1))
                                             (g$library-resolution-condition?$7260$XGD4L
                                               (condition-predicate
                                                 g$8194$7253$XGD4L))
                                             (g$condition-library$7261$XGD4L
                                               (condition-accessor
                                                 g$8194$7253$XGD4L
                                                 g$8191$7258$XGD4L))
                                             (g$condition-files$7262$XGD4L
                                               (condition-accessor
                                                 g$8194$7253$XGD4L
                                                 g$8192$7259$XGD4L)))
                                     (raise
                                       (condition
                                         (g$make-error$6145$XGD4L)
                                         (g$make-who-condition$6171$XGD4L
                                           'expander)
                                         (g$make-message-condition$6125$XGD4L
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7257$XGD4L
                                           g$x$7247$XGD4L
                                           (reverse
                                             g$failed-list$7252$XGD4L))))))))
                               (if (null? g$exts$7251$XGD4L)
                                 (g$f$7249$XGD4L
                                   (cdr g$ls$7250$XGD4L)
                                   (g$library-extensions$7193$XGD4L)
                                   g$failed-list$7252$XGD4L)
                                 ((case-lambda
                                    ((g$name$7263$XGD4L)
                                     (if (g$file-exists?$5742$XGD4L
                                           g$name$7263$XGD4L)
                                       g$name$7263$XGD4L
                                       (g$f$7249$XGD4L
                                         g$ls$7250$XGD4L
                                         (cdr g$exts$7251$XGD4L)
                                         (cons
                                           g$name$7263$XGD4L
                                           g$failed-list$7252$XGD4L)))))
                                  (string-append
                                    (car g$ls$7250$XGD4L)
                                    g$str$7248$XGD4L
                                    (car g$exts$7251$XGD4L)))))))))
                 g$f$7249$XGD4L)
               (g$library-path$7192$XGD4L)
               (g$library-extensions$7193$XGD4L)
               '())))
           (g$library-name->file-name$7194$XGD4L g$x$7247$XGD4L))))
       (case-lambda
         ((g$f$7264$XGD4L)
          (if (procedure? g$f$7264$XGD4L)
            g$f$7264$XGD4L
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7264$XGD4L))))))
   (g$serialize-all$7196$XGD4L
     g$serialize-all$7400$XGD4L
     (case-lambda
       ((g$serialize$7265$XGD4L g$compile$7266$XGD4L)
        (letrec* ((g$library-desc$7267$XGD4L
                    (case-lambda
                      ((g$x$7269$XGD4L)
                       (list
                         (g$library-id$7161$XGD4L g$x$7269$XGD4L)
                         (g$library-name$7162$XGD4L g$x$7269$XGD4L))))))
          (for-each
            (case-lambda
              ((g$x$7268$XGD4L)
               (if (g$library-source-file-name$7174$XGD4L g$x$7268$XGD4L)
                 (g$serialize$7265$XGD4L
                   (g$library-source-file-name$7174$XGD4L g$x$7268$XGD4L)
                   (list
                     (g$library-id$7161$XGD4L g$x$7268$XGD4L)
                     (g$library-name$7162$XGD4L g$x$7268$XGD4L)
                     (g$library-version$7163$XGD4L g$x$7268$XGD4L)
                     (map g$library-desc$7267$XGD4L
                          (g$library-imp*$7164$XGD4L g$x$7268$XGD4L))
                     (map g$library-desc$7267$XGD4L
                          (g$library-vis*$7165$XGD4L g$x$7268$XGD4L))
                     (map g$library-desc$7267$XGD4L
                          (g$library-inv*$7166$XGD4L g$x$7268$XGD4L))
                     (g$library-subst$7167$XGD4L g$x$7268$XGD4L)
                     (g$library-env$7168$XGD4L g$x$7268$XGD4L)
                     (g$compile$7266$XGD4L
                       (g$library-visit-code$7171$XGD4L g$x$7268$XGD4L))
                     (g$compile$7266$XGD4L
                       (g$library-invoke-code$7172$XGD4L g$x$7268$XGD4L))
                     (g$library-visible?$7173$XGD4L g$x$7268$XGD4L)))
                 (void))))
            ((g$current-library-collection$7155$XGD4L)))))))
   (g$current-precompiled-library-loader$7197$XGD4L
     g$current-precompiled-library-loader$7401$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda ((g$filename$7270$XGD4L g$sk$7271$XGD4L) '#f))))
   (g$try-load-from-file$7198$XGD4L
     g$try-load-from-file$7402$XGD4L
     (case-lambda
       ((g$filename$7272$XGD4L)
        ((g$current-precompiled-library-loader$7197$XGD4L)
         g$filename$7272$XGD4L
         (case-lambda
           ((g$id$7273$XGD4L
              g$name$7274$XGD4L
              g$ver$7275$XGD4L
              g$imp*$7276$XGD4L
              g$vis*$7277$XGD4L
              g$inv*$7278$XGD4L
              g$exp-subst$7279$XGD4L
              g$exp-env$7280$XGD4L
              g$visit-proc$7281$XGD4L
              g$invoke-proc$7282$XGD4L
              g$visible?$7283$XGD4L)
            ((letrec ((g$f$7284$XGD4L
                        (case-lambda
                          ((g$deps$7285$XGD4L)
                           (if (null? g$deps$7285$XGD4L)
                             (begin
                               (g$install-library$7208$XGD4L
                                 g$id$7273$XGD4L
                                 g$name$7274$XGD4L
                                 g$ver$7275$XGD4L
                                 g$imp*$7276$XGD4L
                                 g$vis*$7277$XGD4L
                                 g$inv*$7278$XGD4L
                                 g$exp-subst$7279$XGD4L
                                 g$exp-env$7280$XGD4L
                                 g$visit-proc$7281$XGD4L
                                 g$invoke-proc$7282$XGD4L
                                 '#f
                                 '#f
                                 g$visible?$7283$XGD4L
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7286$XGD4L)
                                 ((case-lambda
                                    ((g$label$7287$XGD4L g$dname$7288$XGD4L)
                                     ((case-lambda
                                        ((g$l$7289$XGD4L)
                                         (if (if (g$library?$7159$XGD4L
                                                   g$l$7289$XGD4L)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7287$XGD4L
                                                      (g$library-id$7161$XGD4L
                                                        g$l$7289$XGD4L)))
                                               '#f)
                                           (g$f$7284$XGD4L
                                             (cdr g$deps$7285$XGD4L))
                                           (begin
                                             (g$fprintf$6780$XGD4L
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$7274$XGD4L
                                               g$dname$7288$XGD4L
                                               g$filename$7272$XGD4L)
                                             '#f))))
                                      (g$find-library-by-name$7203$XGD4L
                                        g$dname$7288$XGD4L))))
                                  (car g$d$7286$XGD4L)
                                  (g$cadr$5402$XGD4L g$d$7286$XGD4L))))
                              (car g$deps$7285$XGD4L)))))))
               g$f$7284$XGD4L)
             (append g$imp*$7276$XGD4L g$vis*$7277$XGD4L g$inv*$7278$XGD4L)))
           (g$others$7290$XGD4L '#f))))))
   (g$library-loader$7199$XGD4L
     g$library-loader$7403$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         ((g$x$7291$XGD4L)
          ((case-lambda
             ((g$file-name$7292$XGD4L)
              (if (not g$file-name$7292$XGD4L)
                (assertion-violation '#f '"cannot file library" g$x$7291$XGD4L)
                ((case-lambda
                   ((g$t$7293$XGD4L)
                    (if g$t$7293$XGD4L
                      g$t$7293$XGD4L
                      (begin
                        '#f
                        ((g$current-library-expander$7200$XGD4L)
                         (g$read-library-source-file$6865$XGD4L
                           g$file-name$7292$XGD4L)
                         g$file-name$7292$XGD4L
                         (case-lambda
                           ((g$name$7294$XGD4L)
                            (if (equal? g$name$7294$XGD4L g$x$7291$XGD4L)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6601$XGD4L)))
                                  (case-lambda
                                    ((g$p$7297$XGD4L g$e$7298$XGD4L)
                                     ((case-lambda
                                        ((g$e$7299$XGD4L g$p$7300$XGD4L)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7300$XGD4L)
                                           (write g$x$7291$XGD4L g$p$7300$XGD4L)
                                           (display '" in file " g$p$7300$XGD4L)
                                           (display
                                             g$file-name$7292$XGD4L
                                             g$p$7300$XGD4L)
                                           (display '", found " g$p$7300$XGD4L)
                                           (write
                                             g$name$7294$XGD4L
                                             g$p$7300$XGD4L)
                                           (display '" instead" g$p$7300$XGD4L)
                                           (g$e$7299$XGD4L))))
                                      g$e$7298$XGD4L
                                      g$p$7297$XGD4L)))))))))))))
                 (g$try-load-from-file$7198$XGD4L g$file-name$7292$XGD4L)))))
           ((g$file-locator$7195$XGD4L) g$x$7291$XGD4L))))
       (case-lambda
         ((g$f$7301$XGD4L)
          (if (procedure? g$f$7301$XGD4L)
            g$f$7301$XGD4L
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7301$XGD4L))))))
   (g$current-library-expander$7200$XGD4L
     g$current-library-expander$7404$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         ((g$x$7302$XGD4L)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7303$XGD4L)
          (if (procedure? g$f$7303$XGD4L)
            g$f$7303$XGD4L
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7303$XGD4L))))))
   (g$external-pending-libraries$7201$XGD4L
     g$external-pending-libraries$7405$XGD4L
     (g$make-parameter$6866$XGD4L '()))
   (g$find-external-library$7202$XGD4L
     g$find-external-library$7406$XGD4L
     (case-lambda
       ((g$name$7304$XGD4L)
        (begin
          (if (g$member$5867$XGD4L
                g$name$7304$XGD4L
                (g$external-pending-libraries$7201$XGD4L))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7304$XGD4L)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7307$XGD4L
                g$external-pending-libraries$7308$XGD4L)
              ((case-lambda
                 ((g$swap$7309$XGD4L)
                  (dynamic-wind
                    g$swap$7309$XGD4L
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7199$XGD4L) g$name$7304$XGD4L)
                         ((case-lambda
                            ((g$t$7310$XGD4L)
                             (if g$t$7310$XGD4L
                               g$t$7310$XGD4L
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7304$XGD4L)))))
                          (g$find-library-by$7191$XGD4L
                            (case-lambda
                              ((g$x$7311$XGD4L)
                               (equal?
                                 (g$library-name$7162$XGD4L g$x$7311$XGD4L)
                                 g$name$7304$XGD4L))))))))
                    g$swap$7309$XGD4L)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7312$XGD4L)
                      (begin
                        (g$external-pending-libraries$7307$XGD4L
                          g$external-pending-libraries$7308$XGD4L)
                        (set! g$external-pending-libraries$7308$XGD4L
                          g$t$7312$XGD4L))))
                   (g$external-pending-libraries$7307$XGD4L)))))))
           g$external-pending-libraries$7201$XGD4L
           (cons
             g$name$7304$XGD4L
             (g$external-pending-libraries$7201$XGD4L)))))))
   (g$find-library-by-name$7203$XGD4L
     g$find-library-by-name$7407$XGD4L
     (case-lambda
       ((g$name$7313$XGD4L)
        ((case-lambda
           ((g$t$7314$XGD4L)
            (if g$t$7314$XGD4L
              g$t$7314$XGD4L
              (begin
                '#f
                (g$find-external-library$7202$XGD4L g$name$7313$XGD4L)))))
         (g$find-library-by$7191$XGD4L
           (case-lambda
             ((g$x$7315$XGD4L)
              (equal?
                (g$library-name$7162$XGD4L g$x$7315$XGD4L)
                g$name$7313$XGD4L))))))))
   (g$library-exists?$7204$XGD4L
     g$library-exists?$7408$XGD4L
     (case-lambda
       ((g$name$7316$XGD4L)
        (if (g$find-library-by$7191$XGD4L
              (case-lambda
                ((g$x$7317$XGD4L)
                 (equal?
                   (g$library-name$7162$XGD4L g$x$7317$XGD4L)
                   g$name$7316$XGD4L))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7205$XGD4L
     g$find-library-by-spec/die$7409$XGD4L
     (case-lambda
       ((g$spec$7318$XGD4L)
        ((case-lambda
           ((g$id$7319$XGD4L)
            ((case-lambda
               ((g$t$7320$XGD4L)
                (if g$t$7320$XGD4L
                  g$t$7320$XGD4L
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7318$XGD4L)))))
             (g$find-library-by$7191$XGD4L
               (case-lambda
                 ((g$x$7321$XGD4L)
                  (eq? g$id$7319$XGD4L
                       (g$library-id$7161$XGD4L g$x$7321$XGD4L))))))))
         (car g$spec$7318$XGD4L)))))
   (g$label->binding-table$7206$XGD4L
     g$label->binding-table$7410$XGD4L
     (g$make-eq-hashtable$5664$XGD4L))
   (g$install-library-record$7207$XGD4L
     g$install-library-record$7411$XGD4L
     (case-lambda
       ((g$lib$7322$XGD4L)
        (begin
          ((case-lambda
             ((g$exp-env$7323$XGD4L)
              (for-each
                (case-lambda
                  ((g$x$7324$XGD4L)
                   ((case-lambda
                      ((g$label$7325$XGD4L g$binding$7326$XGD4L)
                       ((case-lambda
                          ((g$binding$7327$XGD4L)
                           (g$hashtable-set!$5668$XGD4L
                             g$label->binding-table$7206$XGD4L
                             g$label$7325$XGD4L
                             g$binding$7327$XGD4L)))
                        ((case-lambda
                           ((g$t$7328$XGD4L)
                            (if (eqv? g$t$7328$XGD4L 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$7322$XGD4L
                                  (cdr g$binding$7326$XGD4L)))
                              (if (eqv? g$t$7328$XGD4L 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7322$XGD4L
                                    (cdr g$binding$7326$XGD4L)))
                                (if (eqv? g$t$7328$XGD4L 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7322$XGD4L
                                      (cdr g$binding$7326$XGD4L)))
                                  g$binding$7326$XGD4L)))))
                         (car g$binding$7326$XGD4L)))))
                    (car g$x$7324$XGD4L)
                    (cdr g$x$7324$XGD4L))))
                g$exp-env$7323$XGD4L)))
           (g$library-env$7168$XGD4L g$lib$7322$XGD4L))
          ((g$current-library-collection$7155$XGD4L) g$lib$7322$XGD4L)))))
   (g$install-library$7208$XGD4L
     g$install-library$7412$XGD4L
     (case-lambda
       ((g$id$7329$XGD4L
          g$name$7330$XGD4L
          g$ver$7331$XGD4L
          g$imp*$7332$XGD4L
          g$vis*$7333$XGD4L
          g$inv*$7334$XGD4L
          g$exp-subst$7335$XGD4L
          g$exp-env$7336$XGD4L
          g$visit-proc$7337$XGD4L
          g$invoke-proc$7338$XGD4L
          g$visit-code$7339$XGD4L
          g$invoke-code$7340$XGD4L
          g$visible?$7341$XGD4L
          g$source-file-name$7342$XGD4L)
        ((case-lambda
           ((g$imp-lib*$7343$XGD4L g$vis-lib*$7344$XGD4L g$inv-lib*$7345$XGD4L)
            (begin
              (if (if (symbol? g$id$7329$XGD4L)
                    (if (list? g$name$7330$XGD4L)
                      (begin '#f (list? g$ver$7331$XGD4L))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7329$XGD4L
                  g$name$7330$XGD4L
                  g$ver$7331$XGD4L))
              (if (g$library-exists?$7204$XGD4L g$name$7330$XGD4L)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7330$XGD4L)
                (void))
              ((case-lambda
                 ((g$lib$7346$XGD4L)
                  (g$install-library-record$7207$XGD4L g$lib$7346$XGD4L)))
               (g$make-library$7160$XGD4L
                 g$id$7329$XGD4L
                 g$name$7330$XGD4L
                 g$ver$7331$XGD4L
                 g$imp-lib*$7343$XGD4L
                 g$vis-lib*$7344$XGD4L
                 g$inv-lib*$7345$XGD4L
                 g$exp-subst$7335$XGD4L
                 g$exp-env$7336$XGD4L
                 g$visit-proc$7337$XGD4L
                 g$invoke-proc$7338$XGD4L
                 g$visit-code$7339$XGD4L
                 g$invoke-code$7340$XGD4L
                 g$visible?$7341$XGD4L
                 g$source-file-name$7342$XGD4L)))))
         (map g$find-library-by-spec/die$7205$XGD4L g$imp*$7332$XGD4L)
         (map g$find-library-by-spec/die$7205$XGD4L g$vis*$7333$XGD4L)
         (map g$find-library-by-spec/die$7205$XGD4L g$inv*$7334$XGD4L)))))
   (g$imported-label->binding$7209$XGD4L
     g$imported-label->binding$7413$XGD4L
     (case-lambda
       ((g$lab$7347$XGD4L)
        (g$hashtable-ref$5667$XGD4L
          g$label->binding-table$7206$XGD4L
          g$lab$7347$XGD4L
          '#f))))
   (g$invoke-library$7210$XGD4L
     g$invoke-library$7414$XGD4L
     (case-lambda
       ((g$lib$7348$XGD4L)
        ((case-lambda
           ((g$invoke$7349$XGD4L)
            (if (procedure? g$invoke$7349$XGD4L)
              (begin
                (g$set-library-invoke-state!$7184$XGD4L
                  g$lib$7348$XGD4L
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7348$XGD4L))))
                (for-each
                  g$invoke-library$7210$XGD4L
                  (g$library-inv*$7166$XGD4L g$lib$7348$XGD4L))
                (g$set-library-invoke-state!$7184$XGD4L
                  g$lib$7348$XGD4L
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7348$XGD4L))))
                (g$invoke$7349$XGD4L)
                (g$set-library-invoke-state!$7184$XGD4L g$lib$7348$XGD4L '#t))
              (void))))
         (g$library-invoke-state$7170$XGD4L g$lib$7348$XGD4L)))))
   (g$visit-library$7211$XGD4L
     g$visit-library$7415$XGD4L
     (case-lambda
       ((g$lib$7350$XGD4L)
        ((case-lambda
           ((g$visit$7351$XGD4L)
            (if (procedure? g$visit$7351$XGD4L)
              (begin
                (g$set-library-visit-state!$7183$XGD4L
                  g$lib$7350$XGD4L
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7350$XGD4L))))
                (for-each
                  g$invoke-library$7210$XGD4L
                  (g$library-vis*$7165$XGD4L g$lib$7350$XGD4L))
                (g$set-library-visit-state!$7183$XGD4L
                  g$lib$7350$XGD4L
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7350$XGD4L))))
                (g$visit$7351$XGD4L)
                (g$set-library-visit-state!$7183$XGD4L g$lib$7350$XGD4L '#t))
              (void))))
         (g$library-visit-state$7169$XGD4L g$lib$7350$XGD4L)))))
   (g$invoke-library-by-spec$7212$XGD4L
     g$invoke-library-by-spec$7416$XGD4L
     (case-lambda
       ((g$spec$7352$XGD4L)
        (g$invoke-library$7210$XGD4L
          (g$find-library-by-spec/die$7205$XGD4L g$spec$7352$XGD4L)))))
   (g$installed-libraries$7213$XGD4L
     g$installed-libraries$7417$XGD4L
     (case-lambda
       ((g$all?$7353$XGD4L)
        ((letrec ((g$f$7354$XGD4L
                    (case-lambda
                      ((g$ls$7355$XGD4L)
                       (if (null? g$ls$7355$XGD4L)
                         '()
                         (if ((case-lambda
                                ((g$t$7356$XGD4L)
                                 (if g$t$7356$XGD4L
                                   g$t$7356$XGD4L
                                   (begin
                                     '#f
                                     (g$library-visible?$7173$XGD4L
                                       (car g$ls$7355$XGD4L))))))
                              g$all?$7353$XGD4L)
                           (cons
                             (car g$ls$7355$XGD4L)
                             (g$f$7354$XGD4L (cdr g$ls$7355$XGD4L)))
                           (g$f$7354$XGD4L (cdr g$ls$7355$XGD4L))))))))
           g$f$7354$XGD4L)
         ((g$current-library-collection$7155$XGD4L))))
       (() (g$installed-libraries$7213$XGD4L '#f))))
   (g$library-spec$7214$XGD4L
     g$library-spec$7418$XGD4L
     (case-lambda
       ((g$x$7357$XGD4L)
        (begin
          (if (g$library?$7159$XGD4L g$x$7357$XGD4L)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$7357$XGD4L))
          (list
            (g$library-id$7161$XGD4L g$x$7357$XGD4L)
            (g$library-name$7162$XGD4L g$x$7357$XGD4L)
            (g$library-version$7163$XGD4L g$x$7357$XGD4L)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7419$XGD4L
     g$build-global-define$7529$XGD4L
     (case-lambda ((g$x$7500$XGD4L) (g$build-void$7496$XGD4L))))
   (g$build-lambda$7468$XGD4L
     g$build-lambda$7530$XGD4L
     (case-lambda
       ((g$ae$7501$XGD4L g$vars$7502$XGD4L g$exp$7503$XGD4L)
        (list 'case-lambda (list g$vars$7502$XGD4L g$exp$7503$XGD4L)))))
   (g$build-case-lambda$7469$XGD4L
     g$build-case-lambda$7531$XGD4L
     (case-lambda
       ((g$ae$7504$XGD4L g$vars*$7505$XGD4L g$exp*$7506$XGD4L)
        (cons 'case-lambda (map list g$vars*$7505$XGD4L g$exp*$7506$XGD4L)))))
   (g$build-let$7470$XGD4L
     g$build-let$7532$XGD4L
     (case-lambda
       ((g$ae$7507$XGD4L g$lhs*$7508$XGD4L g$rhs*$7509$XGD4L g$body$7510$XGD4L)
        (cons
          (g$build-lambda$7468$XGD4L
            g$ae$7507$XGD4L
            g$lhs*$7508$XGD4L
            g$body$7510$XGD4L)
          g$rhs*$7509$XGD4L))))
   (g$build-sequence$7495$XGD4L
     g$build-sequence$7533$XGD4L
     (case-lambda
       ((g$ae$7511$XGD4L g$exps$7512$XGD4L)
        ((letrec ((g$loop$7513$XGD4L
                    (case-lambda
                      ((g$exps$7514$XGD4L)
                       (if (null? (cdr g$exps$7514$XGD4L))
                         (car g$exps$7514$XGD4L)
                         (if (equal?
                               (car g$exps$7514$XGD4L)
                               (g$build-void$7496$XGD4L))
                           (g$loop$7513$XGD4L (cdr g$exps$7514$XGD4L))
                           (cons 'begin g$exps$7514$XGD4L)))))))
           g$loop$7513$XGD4L)
         g$exps$7512$XGD4L))))
   (g$build-void$7496$XGD4L
     g$build-void$7534$XGD4L
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7497$XGD4L
     g$build-letrec$7535$XGD4L
     (case-lambda
       ((g$ae$7515$XGD4L
          g$vars$7516$XGD4L
          g$val-exps$7517$XGD4L
          g$body-exp$7518$XGD4L)
        (if (null? g$vars$7516$XGD4L)
          g$body-exp$7518$XGD4L
          (list
            'letrec
            (map list g$vars$7516$XGD4L g$val-exps$7517$XGD4L)
            g$body-exp$7518$XGD4L)))))
   (g$build-letrec*$7498$XGD4L
     g$build-letrec*$7536$XGD4L
     (case-lambda
       ((g$ae$7519$XGD4L
          g$vars$7520$XGD4L
          g$val-exps$7521$XGD4L
          g$body-exp$7522$XGD4L)
        (if (null? g$vars$7520$XGD4L)
          g$body-exp$7522$XGD4L
          (list
            'letrec*
            (map list g$vars$7520$XGD4L g$val-exps$7521$XGD4L)
            g$body-exp$7522$XGD4L)))))
   (g$build-library-letrec*$7499$XGD4L
     g$build-library-letrec*$7537$XGD4L
     (case-lambda
       ((g$ae$7523$XGD4L
          g$name$7524$XGD4L
          g$vars$7525$XGD4L
          g$locs$7526$XGD4L
          g$val-exps$7527$XGD4L
          g$body-exp$7528$XGD4L)
        (list
          'library-letrec*
          g$name$7524$XGD4L
          (map list g$vars$7525$XGD4L g$locs$7526$XGD4L g$val-exps$7527$XGD4L)
          g$body-exp$7528$XGD4L)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7538$XGD4L
     g$set-cons$11181$XGD4L
     (case-lambda
       ((g$x$7991$XGD4L g$ls$7992$XGD4L)
        (if (memq g$x$7991$XGD4L g$ls$7992$XGD4L)
          g$ls$7992$XGD4L
          (cons g$x$7991$XGD4L g$ls$7992$XGD4L)))))
   (g$set-union$7539$XGD4L
     g$set-union$11182$XGD4L
     (case-lambda
       ((g$ls1$7993$XGD4L g$ls2$7994$XGD4L)
        (if (null? g$ls1$7993$XGD4L)
          g$ls2$7994$XGD4L
          (if (memq (car g$ls1$7993$XGD4L) g$ls2$7994$XGD4L)
            (g$set-union$7539$XGD4L (cdr g$ls1$7993$XGD4L) g$ls2$7994$XGD4L)
            (cons
              (car g$ls1$7993$XGD4L)
              (g$set-union$7539$XGD4L
                (cdr g$ls1$7993$XGD4L)
                g$ls2$7994$XGD4L)))))))
   (g$top-mark*$7541$XGD4L g$top-mark*$11183$XGD4L '(top))
   (g$top-marked?$7542$XGD4L
     g$top-marked?$11184$XGD4L
     (case-lambda ((g$m*$7995$XGD4L) (memq 'top g$m*$7995$XGD4L))))
   (g$gen-lexical$7543$XGD4L
     g$gen-lexical$11185$XGD4L
     (case-lambda
       ((g$sym$7996$XGD4L)
        (if (symbol? g$sym$7996$XGD4L)
          (gensym g$sym$7996$XGD4L)
          (if (g$stx?$7571$XGD4L g$sym$7996$XGD4L)
            (g$gen-lexical$7543$XGD4L (g$id->sym$7600$XGD4L g$sym$7996$XGD4L))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7996$XGD4L))))))
   (g$gen-global$7544$XGD4L
     g$gen-global$11186$XGD4L
     (case-lambda
       ((g$x$7997$XGD4L) (g$gen-lexical$7543$XGD4L g$x$7997$XGD4L))))
   (g$gen-label$7545$XGD4L
     g$gen-label$11187$XGD4L
     (case-lambda ((g$_$7998$XGD4L) (gensym))))
   (g$gen-top-level-label$7546$XGD4L
     g$gen-top-level-label$11188$XGD4L
     (case-lambda
       ((g$id$7999$XGD4L g$rib$8000$XGD4L)
        (letrec* ((g$find$8001$XGD4L
                    (case-lambda
                      ((g$sym$8007$XGD4L
                         g$mark*$8008$XGD4L
                         g$sym*$8009$XGD4L
                         g$mark**$8010$XGD4L
                         g$label*$8011$XGD4L)
                       (if (pair? g$sym*$8009$XGD4L)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8007$XGD4L
                                        (car g$sym*$8009$XGD4L))
                                 (begin
                                   '#f
                                   (g$same-marks?$7601$XGD4L
                                     g$mark*$8008$XGD4L
                                     (car g$mark**$8010$XGD4L)))
                                 '#f)
                             (car g$label*$8011$XGD4L)
                             (g$find$8001$XGD4L
                               g$sym$8007$XGD4L
                               g$mark*$8008$XGD4L
                               (cdr g$sym*$8009$XGD4L)
                               (cdr g$mark**$8010$XGD4L)
                               (cdr g$label*$8011$XGD4L))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8002$XGD4L g$mark*$8003$XGD4L)
              ((case-lambda
                 ((g$sym*$8004$XGD4L)
                  ((case-lambda
                     ((g$t$8005$XGD4L)
                      (if g$t$8005$XGD4L
                        ((case-lambda
                           ((g$label$8006$XGD4L)
                            (if (g$imported-label->binding$7413$XGD4L
                                  g$label$8006$XGD4L)
                              (gensym)
                              g$label$8006$XGD4L)))
                         g$t$8005$XGD4L)
                        (gensym))))
                   (if (memq
                         g$sym$8002$XGD4L
                         (g$rib-sym*$7554$XGD4L g$rib$8000$XGD4L))
                     (begin
                       '#f
                       (g$find$8001$XGD4L
                         g$sym$8002$XGD4L
                         g$mark*$8003$XGD4L
                         g$sym*$8004$XGD4L
                         (g$rib-mark**$7555$XGD4L g$rib$8000$XGD4L)
                         (g$rib-label*$7556$XGD4L g$rib$8000$XGD4L)))
                     '#f))))
               (g$rib-sym*$7554$XGD4L g$rib$8000$XGD4L))))
           (g$id->sym$7600$XGD4L g$id$7999$XGD4L)
           (g$stx-mark*$7574$XGD4L g$id$7999$XGD4L))))))
   (g$gen-define-label+loc$7547$XGD4L
     g$gen-define-label+loc$11189$XGD4L
     (case-lambda
       ((g$id$8012$XGD4L g$rib$8013$XGD4L)
        ((case-lambda
           ((g$t$8014$XGD4L)
            (if g$t$8014$XGD4L
              ((case-lambda
                 ((g$env$8015$XGD4L)
                  ((case-lambda
                     ((g$label$8016$XGD4L g$locs$8017$XGD4L)
                      (values
                        g$label$8016$XGD4L
                        ((case-lambda
                           ((g$t$8018$XGD4L)
                            (if g$t$8018$XGD4L
                              (cdr g$t$8018$XGD4L)
                              ((case-lambda
                                 ((g$loc$8019$XGD4L)
                                  (begin
                                    (g$set-interaction-env-locs!$7960$XGD4L
                                      g$env$8015$XGD4L
                                      (cons
                                        (cons
                                          g$label$8016$XGD4L
                                          g$loc$8019$XGD4L)
                                        g$locs$8017$XGD4L))
                                    g$loc$8019$XGD4L)))
                               (g$gen-lexical$7543$XGD4L g$id$8012$XGD4L)))))
                         (assq g$label$8016$XGD4L g$locs$8017$XGD4L)))))
                   (g$gen-top-level-label$7546$XGD4L
                     g$id$8012$XGD4L
                     g$rib$8013$XGD4L)
                   (g$interaction-env-locs$7957$XGD4L g$env$8015$XGD4L))))
               g$t$8014$XGD4L)
              (values (gensym) (g$gen-lexical$7543$XGD4L g$id$8012$XGD4L)))))
         (g$top-level-context$7990$XGD4L)))))
   (g$gen-define-label$7548$XGD4L
     g$gen-define-label$11190$XGD4L
     (case-lambda
       ((g$id$8020$XGD4L g$rib$8021$XGD4L)
        (if (g$top-level-context$7990$XGD4L)
          (g$gen-top-level-label$7546$XGD4L g$id$8020$XGD4L g$rib$8021$XGD4L)
          (gensym)))))
   (g$8491$7549$XGD4L
     g$8491$11191$XGD4L
     (make-record-type-descriptor
       'rib
       '#f
       'g$8494$XGD4L
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8493$7550$XGD4L g$8493$11192$XGD4L '#f)
   (g$8492$7551$XGD4L
     g$8492$11193$XGD4L
     (make-record-constructor-descriptor
       g$8491$7549$XGD4L
       '#f
       g$8493$7550$XGD4L))
   (g$rib?$7552$XGD4L
     g$rib?$11194$XGD4L
     (record-predicate g$8491$7549$XGD4L))
   (g$make-rib$7553$XGD4L
     g$make-rib$11195$XGD4L
     (record-constructor g$8492$7551$XGD4L))
   (g$rib-sym*$7554$XGD4L
     g$rib-sym*$11196$XGD4L
     (record-accessor g$8491$7549$XGD4L '0))
   (g$rib-mark**$7555$XGD4L
     g$rib-mark**$11197$XGD4L
     (record-accessor g$8491$7549$XGD4L '1))
   (g$rib-label*$7556$XGD4L
     g$rib-label*$11198$XGD4L
     (record-accessor g$8491$7549$XGD4L '2))
   (g$rib-sealed/freq$7557$XGD4L
     g$rib-sealed/freq$11199$XGD4L
     (record-accessor g$8491$7549$XGD4L '3))
   (g$set-rib-sym*!$7558$XGD4L
     g$set-rib-sym*!$11200$XGD4L
     (record-mutator g$8491$7549$XGD4L '0))
   (g$set-rib-mark**!$7559$XGD4L
     g$set-rib-mark**!$11201$XGD4L
     (record-mutator g$8491$7549$XGD4L '1))
   (g$set-rib-label*!$7560$XGD4L
     g$set-rib-label*!$11202$XGD4L
     (record-mutator g$8491$7549$XGD4L '2))
   (g$set-rib-sealed/freq!$7561$XGD4L
     g$set-rib-sealed/freq!$11203$XGD4L
     (record-mutator g$8491$7549$XGD4L '3))
   (g$make-empty-rib$7562$XGD4L
     g$make-empty-rib$11204$XGD4L
     (case-lambda (() (g$make-rib$7553$XGD4L '() '() '() '#f))))
   (g$extend-rib!$7563$XGD4L
     g$extend-rib!$11205$XGD4L
     (case-lambda
       ((g$rib$8022$XGD4L g$id$8023$XGD4L g$label$8024$XGD4L)
        (letrec* ((g$find$8025$XGD4L
                    (case-lambda
                      ((g$sym$8031$XGD4L
                         g$mark*$8032$XGD4L
                         g$sym*$8033$XGD4L
                         g$mark**$8034$XGD4L
                         g$label*$8035$XGD4L)
                       (if (pair? g$sym*$8033$XGD4L)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8031$XGD4L
                                        (car g$sym*$8033$XGD4L))
                                 (begin
                                   '#f
                                   (g$same-marks?$7601$XGD4L
                                     g$mark*$8032$XGD4L
                                     (car g$mark**$8034$XGD4L)))
                                 '#f)
                             g$label*$8035$XGD4L
                             (g$find$8025$XGD4L
                               g$sym$8031$XGD4L
                               g$mark*$8032$XGD4L
                               (cdr g$sym*$8033$XGD4L)
                               (cdr g$mark**$8034$XGD4L)
                               (cdr g$label*$8035$XGD4L))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7557$XGD4L g$rib$8022$XGD4L)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8022$XGD4L)
              (void))
            ((case-lambda
               ((g$sym$8026$XGD4L g$mark*$8027$XGD4L)
                ((case-lambda
                   ((g$sym*$8028$XGD4L)
                    ((case-lambda
                       ((g$t$8029$XGD4L)
                        (if g$t$8029$XGD4L
                          ((case-lambda
                             ((g$p$8030$XGD4L)
                              (if (eq? g$label$8024$XGD4L (car g$p$8030$XGD4L))
                                (void)
                                (if (g$top-level-context$7990$XGD4L)
                                  (set-car! g$p$8030$XGD4L g$label$8024$XGD4L)
                                  (g$syntax-violation$7983$XGD4L
                                    '#f
                                    '"cannot redefine"
                                    g$id$8023$XGD4L)))))
                           g$t$8029$XGD4L)
                          (begin
                            (g$set-rib-sym*!$7558$XGD4L
                              g$rib$8022$XGD4L
                              (cons g$sym$8026$XGD4L g$sym*$8028$XGD4L))
                            (g$set-rib-mark**!$7559$XGD4L
                              g$rib$8022$XGD4L
                              (cons
                                g$mark*$8027$XGD4L
                                (g$rib-mark**$7555$XGD4L g$rib$8022$XGD4L)))
                            (g$set-rib-label*!$7560$XGD4L
                              g$rib$8022$XGD4L
                              (cons
                                g$label$8024$XGD4L
                                (g$rib-label*$7556$XGD4L g$rib$8022$XGD4L)))))))
                     (if (memq
                           g$sym$8026$XGD4L
                           (g$rib-sym*$7554$XGD4L g$rib$8022$XGD4L))
                       (begin
                         '#f
                         (g$find$8025$XGD4L
                           g$sym$8026$XGD4L
                           g$mark*$8027$XGD4L
                           g$sym*$8028$XGD4L
                           (g$rib-mark**$7555$XGD4L g$rib$8022$XGD4L)
                           (g$rib-label*$7556$XGD4L g$rib$8022$XGD4L)))
                       '#f))))
                 (g$rib-sym*$7554$XGD4L g$rib$8022$XGD4L))))
             (g$id->sym$7600$XGD4L g$id$8023$XGD4L)
             (g$stx-mark*$7574$XGD4L g$id$8023$XGD4L)))))))
   (g$make-rib-map$7564$XGD4L
     g$make-rib-map$11206$XGD4L
     (case-lambda
       ((g$sym*$8036$XGD4L)
        ((case-lambda
           ((g$ht$8037$XGD4L)
            ((letrec ((g$f$8038$XGD4L
                        (case-lambda
                          ((g$i$8039$XGD4L g$sym*$8040$XGD4L)
                           (if (null? g$sym*$8040$XGD4L)
                             g$ht$8037$XGD4L
                             (begin
                               (g$hashtable-update!$5671$XGD4L
                                 g$ht$8037$XGD4L
                                 (car g$sym*$8040$XGD4L)
                                 (case-lambda
                                   ((g$x$8041$XGD4L)
                                    (cons g$i$8039$XGD4L g$x$8041$XGD4L)))
                                 '())
                               (g$f$8038$XGD4L
                                 (+ g$i$8039$XGD4L '1)
                                 (cdr g$sym*$8040$XGD4L))))))))
               g$f$8038$XGD4L)
             '0
             g$sym*$8036$XGD4L)))
         (g$make-eq-hashtable$5664$XGD4L)))))
   (g$seal-rib!$7565$XGD4L
     g$seal-rib!$11207$XGD4L
     (case-lambda
       ((g$rib$8042$XGD4L)
        ((case-lambda
           ((g$sym*$8043$XGD4L)
            (if (null? g$sym*$8043$XGD4L)
              (void)
              (begin
                (g$set-rib-sym*!$7558$XGD4L
                  g$rib$8042$XGD4L
                  (list->vector g$sym*$8043$XGD4L))
                (g$set-rib-mark**!$7559$XGD4L
                  g$rib$8042$XGD4L
                  (list->vector (g$rib-mark**$7555$XGD4L g$rib$8042$XGD4L)))
                (g$set-rib-label*!$7560$XGD4L
                  g$rib$8042$XGD4L
                  (list->vector (g$rib-label*$7556$XGD4L g$rib$8042$XGD4L)))
                (g$set-rib-sealed/freq!$7561$XGD4L
                  g$rib$8042$XGD4L
                  (g$make-rib-map$7564$XGD4L g$sym*$8043$XGD4L))))))
         (g$rib-sym*$7554$XGD4L g$rib$8042$XGD4L)))))
   (g$unseal-rib!$7566$XGD4L
     g$unseal-rib!$11208$XGD4L
     (case-lambda
       ((g$rib$8044$XGD4L)
        (if (g$rib-sealed/freq$7557$XGD4L g$rib$8044$XGD4L)
          (begin
            (g$set-rib-sealed/freq!$7561$XGD4L g$rib$8044$XGD4L '#f)
            (g$set-rib-sym*!$7558$XGD4L
              g$rib$8044$XGD4L
              (vector->list (g$rib-sym*$7554$XGD4L g$rib$8044$XGD4L)))
            (g$set-rib-mark**!$7559$XGD4L
              g$rib$8044$XGD4L
              (vector->list (g$rib-mark**$7555$XGD4L g$rib$8044$XGD4L)))
            (g$set-rib-label*!$7560$XGD4L
              g$rib$8044$XGD4L
              (vector->list (g$rib-label*$7556$XGD4L g$rib$8044$XGD4L))))
          (void)))))
   (g$make-full-rib$7567$XGD4L
     g$make-full-rib$11209$XGD4L
     (case-lambda
       ((g$id*$8045$XGD4L g$label*$8046$XGD4L)
        ((case-lambda
           ((g$r$8047$XGD4L)
            (begin (g$seal-rib!$7565$XGD4L g$r$8047$XGD4L) g$r$8047$XGD4L)))
         (g$make-rib$7553$XGD4L
           (map g$id->sym$7600$XGD4L g$id*$8045$XGD4L)
           (map g$stx-mark*$7574$XGD4L g$id*$8045$XGD4L)
           g$label*$8046$XGD4L
           '#f)))))
   (g$8517$7568$XGD4L
     g$8517$11210$XGD4L
     (make-record-type-descriptor
       'stx
       '#f
       'g$8520$XGD4L
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8519$7569$XGD4L g$8519$11211$XGD4L '#f)
   (g$8518$7570$XGD4L
     g$8518$11212$XGD4L
     (make-record-constructor-descriptor
       g$8517$7568$XGD4L
       '#f
       g$8519$7569$XGD4L))
   (g$stx?$7571$XGD4L
     g$stx?$11213$XGD4L
     (record-predicate g$8517$7568$XGD4L))
   (g$make-stx$7572$XGD4L
     g$make-stx$11214$XGD4L
     (record-constructor g$8518$7570$XGD4L))
   (g$stx-expr$7573$XGD4L
     g$stx-expr$11215$XGD4L
     (record-accessor g$8517$7568$XGD4L '0))
   (g$stx-mark*$7574$XGD4L
     g$stx-mark*$11216$XGD4L
     (record-accessor g$8517$7568$XGD4L '1))
   (g$stx-subst*$7575$XGD4L
     g$stx-subst*$11217$XGD4L
     (record-accessor g$8517$7568$XGD4L '2))
   (g$stx-ae*$7576$XGD4L
     g$stx-ae*$11218$XGD4L
     (record-accessor g$8517$7568$XGD4L '3))
   (g$set-stx-expr!$7577$XGD4L
     g$set-stx-expr!$11219$XGD4L
     (record-mutator g$8517$7568$XGD4L '0))
   (g$set-stx-mark*!$7578$XGD4L
     g$set-stx-mark*!$11220$XGD4L
     (record-mutator g$8517$7568$XGD4L '1))
   (g$set-stx-subst*!$7579$XGD4L
     g$set-stx-subst*!$11221$XGD4L
     (record-mutator g$8517$7568$XGD4L '2))
   (g$set-stx-ae*!$7580$XGD4L
     g$set-stx-ae*!$11222$XGD4L
     (record-mutator g$8517$7568$XGD4L '3))
   (g$rp$7581$XGD4L
     g$rp$11223$XGD4L
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8048$XGD4L g$p$8049$XGD4L)
          (begin
            (display '"#<syntax " g$p$8049$XGD4L)
            (write (g$stx->datum$7610$XGD4L g$x$8048$XGD4L) g$p$8049$XGD4L)
            ((case-lambda
               ((g$expr$8050$XGD4L)
                (if (annotation? g$expr$8050$XGD4L)
                  ((case-lambda
                     ((g$src$8051$XGD4L)
                      (if (pair? g$src$8051$XGD4L)
                        (begin
                          (display '" [" g$p$8049$XGD4L)
                          (display (cdr g$src$8051$XGD4L) g$p$8049$XGD4L)
                          (display '" of " g$p$8049$XGD4L)
                          (display (car g$src$8051$XGD4L) g$p$8049$XGD4L)
                          (display '"]" g$p$8049$XGD4L))
                        (void))))
                   (annotation-source g$expr$8050$XGD4L))
                  (void))))
             (g$stx-expr$7573$XGD4L g$x$8048$XGD4L))
            (display '">" g$p$8049$XGD4L))))))
   (g$datum->stx$7582$XGD4L
     g$datum->stx$11224$XGD4L
     (case-lambda
       ((g$id$8052$XGD4L g$datum$8053$XGD4L)
        (g$make-stx$7572$XGD4L
          g$datum$8053$XGD4L
          (g$stx-mark*$7574$XGD4L g$id$8052$XGD4L)
          (g$stx-subst*$7575$XGD4L g$id$8052$XGD4L)
          (g$stx-ae*$7576$XGD4L g$id$8052$XGD4L)))))
   (g$gen-mark$7583$XGD4L
     g$gen-mark$11225$XGD4L
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7584$XGD4L g$anti-mark$11226$XGD4L '#f)
   (g$anti-mark?$7585$XGD4L g$anti-mark?$11227$XGD4L not)
   (g$join-wraps$7586$XGD4L
     g$join-wraps$11228$XGD4L
     (case-lambda
       ((g$m1*$8054$XGD4L g$s1*$8055$XGD4L g$ae1*$8056$XGD4L g$e$8057$XGD4L)
        (letrec* ((g$cancel$8058$XGD4L
                    (case-lambda
                      ((g$ls1$8062$XGD4L g$ls2$8063$XGD4L)
                       ((letrec ((g$f$8064$XGD4L
                                   (case-lambda
                                     ((g$x$8065$XGD4L g$ls1$8066$XGD4L)
                                      (if (null? g$ls1$8066$XGD4L)
                                        (cdr g$ls2$8063$XGD4L)
                                        (cons
                                          g$x$8065$XGD4L
                                          (g$f$8064$XGD4L
                                            (car g$ls1$8066$XGD4L)
                                            (cdr g$ls1$8066$XGD4L))))))))
                          g$f$8064$XGD4L)
                        (car g$ls1$8062$XGD4L)
                        (cdr g$ls1$8062$XGD4L))))))
          ((case-lambda
             ((g$m2*$8059$XGD4L g$s2*$8060$XGD4L g$ae2*$8061$XGD4L)
              (if (if (not (null? g$m1*$8054$XGD4L))
                    (if (not (null? g$m2*$8059$XGD4L))
                      (begin
                        '#f
                        (g$anti-mark?$7585$XGD4L (car g$m2*$8059$XGD4L)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8058$XGD4L g$m1*$8054$XGD4L g$m2*$8059$XGD4L)
                  (g$cancel$8058$XGD4L g$s1*$8055$XGD4L g$s2*$8060$XGD4L)
                  (g$cancel$8058$XGD4L g$ae1*$8056$XGD4L g$ae2*$8061$XGD4L))
                (values
                  (append g$m1*$8054$XGD4L g$m2*$8059$XGD4L)
                  (append g$s1*$8055$XGD4L g$s2*$8060$XGD4L)
                  (append g$ae1*$8056$XGD4L g$ae2*$8061$XGD4L)))))
           (g$stx-mark*$7574$XGD4L g$e$8057$XGD4L)
           (g$stx-subst*$7575$XGD4L g$e$8057$XGD4L)
           (g$stx-ae*$7576$XGD4L g$e$8057$XGD4L))))))
   (g$mkstx$7587$XGD4L
     g$mkstx$11229$XGD4L
     (case-lambda
       ((g$e$8067$XGD4L g$m*$8068$XGD4L g$s*$8069$XGD4L g$ae*$8070$XGD4L)
        (if (g$stx?$7571$XGD4L g$e$8067$XGD4L)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7586$XGD4L
                 g$m*$8068$XGD4L
                 g$s*$8069$XGD4L
                 g$ae*$8070$XGD4L
                 g$e$8067$XGD4L)))
            (case-lambda
              ((g$m*$8074$XGD4L g$s*$8075$XGD4L g$ae*$8076$XGD4L)
               ((case-lambda
                  ((g$ae*$8077$XGD4L g$s*$8078$XGD4L g$m*$8079$XGD4L)
                   (g$make-stx$7572$XGD4L
                     (g$stx-expr$7573$XGD4L g$e$8067$XGD4L)
                     g$m*$8079$XGD4L
                     g$s*$8078$XGD4L
                     g$ae*$8077$XGD4L)))
                g$ae*$8076$XGD4L
                g$s*$8075$XGD4L
                g$m*$8074$XGD4L))))
          (g$make-stx$7572$XGD4L
            g$e$8067$XGD4L
            g$m*$8068$XGD4L
            g$s*$8069$XGD4L
            g$ae*$8070$XGD4L)))))
   (g$add-mark$7588$XGD4L
     g$add-mark$11230$XGD4L
     (case-lambda
       ((g$m$8080$XGD4L g$e$8081$XGD4L g$ae$8082$XGD4L)
        (g$mkstx$7587$XGD4L
          g$e$8081$XGD4L
          (list g$m$8080$XGD4L)
          '(shift)
          (list g$ae$8082$XGD4L)))))
   (g$add-subst$7589$XGD4L
     g$add-subst$11231$XGD4L
     (case-lambda
       ((g$subst$8083$XGD4L g$e$8084$XGD4L)
        (g$mkstx$7587$XGD4L g$e$8084$XGD4L '() (list g$subst$8083$XGD4L) '()))))
   (g$syntax-kind?$7590$XGD4L
     g$syntax-kind?$11232$XGD4L
     (case-lambda
       ((g$x$8085$XGD4L g$p?$8086$XGD4L)
        (if (g$stx?$7571$XGD4L g$x$8085$XGD4L)
          (g$syntax-kind?$7590$XGD4L
            (g$stx-expr$7573$XGD4L g$x$8085$XGD4L)
            g$p?$8086$XGD4L)
          (if (annotation? g$x$8085$XGD4L)
            (g$syntax-kind?$7590$XGD4L
              (annotation-expression g$x$8085$XGD4L)
              g$p?$8086$XGD4L)
            (g$p?$8086$XGD4L g$x$8085$XGD4L))))))
   (g$syntax-vector->list$7591$XGD4L
     g$syntax-vector->list$11233$XGD4L
     (case-lambda
       ((g$x$8087$XGD4L)
        (if (g$stx?$7571$XGD4L g$x$8087$XGD4L)
          ((case-lambda
             ((g$ls$8088$XGD4L g$m*$8089$XGD4L g$s*$8090$XGD4L g$ae*$8091$XGD4L)
              (map (case-lambda
                     ((g$x$8092$XGD4L)
                      (g$mkstx$7587$XGD4L
                        g$x$8092$XGD4L
                        g$m*$8089$XGD4L
                        g$s*$8090$XGD4L
                        g$ae*$8091$XGD4L)))
                   g$ls$8088$XGD4L)))
           (g$syntax-vector->list$7591$XGD4L
             (g$stx-expr$7573$XGD4L g$x$8087$XGD4L))
           (g$stx-mark*$7574$XGD4L g$x$8087$XGD4L)
           (g$stx-subst*$7575$XGD4L g$x$8087$XGD4L)
           (g$stx-ae*$7576$XGD4L g$x$8087$XGD4L))
          (if (annotation? g$x$8087$XGD4L)
            (g$syntax-vector->list$7591$XGD4L
              (annotation-expression g$x$8087$XGD4L))
            (if (vector? g$x$8087$XGD4L)
              (vector->list g$x$8087$XGD4L)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8087$XGD4L)))))))
   (g$syntax-pair?$7592$XGD4L
     g$syntax-pair?$11234$XGD4L
     (case-lambda
       ((g$x$8093$XGD4L) (g$syntax-kind?$7590$XGD4L g$x$8093$XGD4L pair?))))
   (g$syntax-vector?$7593$XGD4L
     g$syntax-vector?$11235$XGD4L
     (case-lambda
       ((g$x$8094$XGD4L) (g$syntax-kind?$7590$XGD4L g$x$8094$XGD4L vector?))))
   (g$syntax-null?$7594$XGD4L
     g$syntax-null?$11236$XGD4L
     (case-lambda
       ((g$x$8095$XGD4L) (g$syntax-kind?$7590$XGD4L g$x$8095$XGD4L null?))))
   (g$syntax-list?$7595$XGD4L
     g$syntax-list?$11237$XGD4L
     (case-lambda
       ((g$x$8096$XGD4L)
        ((case-lambda
           ((g$t$8097$XGD4L)
            (if g$t$8097$XGD4L
              g$t$8097$XGD4L
              (begin
                '#f
                (if (g$syntax-pair?$7592$XGD4L g$x$8096$XGD4L)
                  (begin
                    '#f
                    (g$syntax-list?$7595$XGD4L
                      (g$syntax-cdr$7597$XGD4L g$x$8096$XGD4L)))
                  '#f)))))
         (g$syntax-null?$7594$XGD4L g$x$8096$XGD4L)))))
   (g$syntax-car$7596$XGD4L
     g$syntax-car$11238$XGD4L
     (case-lambda
       ((g$x$8098$XGD4L)
        (if (g$stx?$7571$XGD4L g$x$8098$XGD4L)
          (g$mkstx$7587$XGD4L
            (g$syntax-car$7596$XGD4L (g$stx-expr$7573$XGD4L g$x$8098$XGD4L))
            (g$stx-mark*$7574$XGD4L g$x$8098$XGD4L)
            (g$stx-subst*$7575$XGD4L g$x$8098$XGD4L)
            (g$stx-ae*$7576$XGD4L g$x$8098$XGD4L))
          (if (annotation? g$x$8098$XGD4L)
            (g$syntax-car$7596$XGD4L (annotation-expression g$x$8098$XGD4L))
            (if (pair? g$x$8098$XGD4L)
              (car g$x$8098$XGD4L)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8098$XGD4L)))))))
   (g$syntax-cdr$7597$XGD4L
     g$syntax-cdr$11239$XGD4L
     (case-lambda
       ((g$x$8099$XGD4L)
        (if (g$stx?$7571$XGD4L g$x$8099$XGD4L)
          (g$mkstx$7587$XGD4L
            (g$syntax-cdr$7597$XGD4L (g$stx-expr$7573$XGD4L g$x$8099$XGD4L))
            (g$stx-mark*$7574$XGD4L g$x$8099$XGD4L)
            (g$stx-subst*$7575$XGD4L g$x$8099$XGD4L)
            (g$stx-ae*$7576$XGD4L g$x$8099$XGD4L))
          (if (annotation? g$x$8099$XGD4L)
            (g$syntax-cdr$7597$XGD4L (annotation-expression g$x$8099$XGD4L))
            (if (pair? g$x$8099$XGD4L)
              (cdr g$x$8099$XGD4L)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8099$XGD4L)))))))
   (g$syntax->list$7598$XGD4L
     g$syntax->list$11240$XGD4L
     (case-lambda
       ((g$x$8100$XGD4L)
        (if (g$syntax-pair?$7592$XGD4L g$x$8100$XGD4L)
          (cons
            (g$syntax-car$7596$XGD4L g$x$8100$XGD4L)
            (g$syntax->list$7598$XGD4L
              (g$syntax-cdr$7597$XGD4L g$x$8100$XGD4L)))
          (if (g$syntax-null?$7594$XGD4L g$x$8100$XGD4L)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8100$XGD4L))))))
   (g$id?$7599$XGD4L
     g$id?$11241$XGD4L
     (case-lambda
       ((g$x$8101$XGD4L)
        (if (g$stx?$7571$XGD4L g$x$8101$XGD4L)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8102$XGD4L)
                (symbol?
                  (if (annotation? g$expr$8102$XGD4L)
                    (annotation-stripped g$expr$8102$XGD4L)
                    g$expr$8102$XGD4L))))
             (g$stx-expr$7573$XGD4L g$x$8101$XGD4L)))
          '#f))))
   (g$id->sym$7600$XGD4L
     g$id->sym$11242$XGD4L
     (case-lambda
       ((g$x$8103$XGD4L)
        (begin
          (if (g$stx?$7571$XGD4L g$x$8103$XGD4L)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8103$XGD4L))
          ((case-lambda
             ((g$expr$8104$XGD4L)
              ((case-lambda
                 ((g$sym$8105$XGD4L)
                  (if (symbol? g$sym$8105$XGD4L)
                    g$sym$8105$XGD4L
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8103$XGD4L))))
               (if (annotation? g$expr$8104$XGD4L)
                 (annotation-stripped g$expr$8104$XGD4L)
                 g$expr$8104$XGD4L))))
           (g$stx-expr$7573$XGD4L g$x$8103$XGD4L))))))
   (g$same-marks?$7601$XGD4L
     g$same-marks?$11243$XGD4L
     (case-lambda
       ((g$x$8106$XGD4L g$y$8107$XGD4L)
        ((case-lambda
           ((g$t$8108$XGD4L)
            (if g$t$8108$XGD4L
              g$t$8108$XGD4L
              (begin
                '#f
                (if (pair? g$x$8106$XGD4L)
                  (if (pair? g$y$8107$XGD4L)
                    (if (eq? (car g$x$8106$XGD4L) (car g$y$8107$XGD4L))
                      (begin
                        '#f
                        (g$same-marks?$7601$XGD4L
                          (cdr g$x$8106$XGD4L)
                          (cdr g$y$8107$XGD4L)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8106$XGD4L) (begin '#f (null? g$y$8107$XGD4L)) '#f)))))
   (g$bound-id=?$7602$XGD4L
     g$bound-id=?$11244$XGD4L
     (case-lambda
       ((g$x$8109$XGD4L g$y$8110$XGD4L)
        (if (eq? (g$id->sym$7600$XGD4L g$x$8109$XGD4L)
                 (g$id->sym$7600$XGD4L g$y$8110$XGD4L))
          (begin
            '#f
            (g$same-marks?$7601$XGD4L
              (g$stx-mark*$7574$XGD4L g$x$8109$XGD4L)
              (g$stx-mark*$7574$XGD4L g$y$8110$XGD4L)))
          '#f))))
   (g$free-id=?$7603$XGD4L
     g$free-id=?$11245$XGD4L
     (case-lambda
       ((g$i$8111$XGD4L g$j$8112$XGD4L)
        ((case-lambda
           ((g$t0$8113$XGD4L g$t1$8114$XGD4L)
            (if ((case-lambda
                   ((g$t$8115$XGD4L)
                    (if g$t$8115$XGD4L
                      g$t$8115$XGD4L
                      (begin '#f g$t1$8114$XGD4L))))
                 g$t0$8113$XGD4L)
              (eq? g$t0$8113$XGD4L g$t1$8114$XGD4L)
              (eq? (g$id->sym$7600$XGD4L g$i$8111$XGD4L)
                   (g$id->sym$7600$XGD4L g$j$8112$XGD4L)))))
         (g$id->real-label$7613$XGD4L g$i$8111$XGD4L)
         (g$id->real-label$7613$XGD4L g$j$8112$XGD4L)))))
   (g$valid-bound-ids?$7604$XGD4L
     g$valid-bound-ids?$11246$XGD4L
     (case-lambda
       ((g$id*$8116$XGD4L)
        (if (g$for-all$5871$XGD4L g$id?$7599$XGD4L g$id*$8116$XGD4L)
          (begin '#f (g$distinct-bound-ids?$7605$XGD4L g$id*$8116$XGD4L))
          '#f))))
   (g$distinct-bound-ids?$7605$XGD4L
     g$distinct-bound-ids?$11247$XGD4L
     (case-lambda
       ((g$id*$8117$XGD4L)
        ((case-lambda
           ((g$t$8118$XGD4L)
            (if g$t$8118$XGD4L
              g$t$8118$XGD4L
              (begin
                '#f
                (if (not (g$bound-id-member?$7606$XGD4L
                           (car g$id*$8117$XGD4L)
                           (cdr g$id*$8117$XGD4L)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7605$XGD4L (cdr g$id*$8117$XGD4L)))
                  '#f)))))
         (null? g$id*$8117$XGD4L)))))
   (g$bound-id-member?$7606$XGD4L
     g$bound-id-member?$11248$XGD4L
     (case-lambda
       ((g$id$8119$XGD4L g$id*$8120$XGD4L)
        (if (pair? g$id*$8120$XGD4L)
          (begin
            '#f
            ((case-lambda
               ((g$t$8121$XGD4L)
                (if g$t$8121$XGD4L
                  g$t$8121$XGD4L
                  (begin
                    '#f
                    (g$bound-id-member?$7606$XGD4L
                      g$id$8119$XGD4L
                      (cdr g$id*$8120$XGD4L))))))
             (g$bound-id=?$7602$XGD4L g$id$8119$XGD4L (car g$id*$8120$XGD4L))))
          '#f))))
   (g$self-evaluating?$7607$XGD4L
     g$self-evaluating?$11249$XGD4L
     (case-lambda
       ((g$x$8122$XGD4L)
        ((case-lambda
           ((g$t$8123$XGD4L)
            (if g$t$8123$XGD4L
              g$t$8123$XGD4L
              ((case-lambda
                 ((g$t$8124$XGD4L)
                  (if g$t$8124$XGD4L
                    g$t$8124$XGD4L
                    ((case-lambda
                       ((g$t$8125$XGD4L)
                        (if g$t$8125$XGD4L
                          g$t$8125$XGD4L
                          ((case-lambda
                             ((g$t$8126$XGD4L)
                              (if g$t$8126$XGD4L
                                g$t$8126$XGD4L
                                (begin '#f (bytevector? g$x$8122$XGD4L)))))
                           (boolean? g$x$8122$XGD4L)))))
                     (char? g$x$8122$XGD4L)))))
               (string? g$x$8122$XGD4L)))))
         (number? g$x$8122$XGD4L)))))
   (g$strip-annotations$7608$XGD4L
     g$strip-annotations$11250$XGD4L
     (case-lambda
       ((g$x$8127$XGD4L)
        (if (pair? g$x$8127$XGD4L)
          (cons
            (g$strip-annotations$7608$XGD4L (car g$x$8127$XGD4L))
            (g$strip-annotations$7608$XGD4L (cdr g$x$8127$XGD4L)))
          (if (vector? g$x$8127$XGD4L)
            (vector-map g$strip-annotations$7608$XGD4L g$x$8127$XGD4L)
            (if (annotation? g$x$8127$XGD4L)
              (annotation-stripped g$x$8127$XGD4L)
              g$x$8127$XGD4L))))))
   (g$strip$7609$XGD4L
     g$strip$11251$XGD4L
     (case-lambda
       ((g$x$8128$XGD4L g$m*$8129$XGD4L)
        (if (g$top-marked?$7542$XGD4L g$m*$8129$XGD4L)
          (if ((case-lambda
                 ((g$t$8130$XGD4L)
                  (if g$t$8130$XGD4L
                    g$t$8130$XGD4L
                    ((case-lambda
                       ((g$t$8131$XGD4L)
                        (if g$t$8131$XGD4L
                          g$t$8131$XGD4L
                          (begin
                            '#f
                            (if (vector? g$x$8128$XGD4L)
                              (if (> (vector-length g$x$8128$XGD4L) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8128$XGD4L '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8128$XGD4L)
                       (begin '#f (annotation? (car g$x$8128$XGD4L)))
                       '#f)))))
               (annotation? g$x$8128$XGD4L))
            (g$strip-annotations$7608$XGD4L g$x$8128$XGD4L)
            g$x$8128$XGD4L)
          ((letrec ((g$f$8132$XGD4L
                      (case-lambda
                        ((g$x$8133$XGD4L)
                         (if (g$stx?$7571$XGD4L g$x$8133$XGD4L)
                           (g$strip$7609$XGD4L
                             (g$stx-expr$7573$XGD4L g$x$8133$XGD4L)
                             (g$stx-mark*$7574$XGD4L g$x$8133$XGD4L))
                           (if (annotation? g$x$8133$XGD4L)
                             (annotation-stripped g$x$8133$XGD4L)
                             (if (pair? g$x$8133$XGD4L)
                               ((case-lambda
                                  ((g$a$8134$XGD4L g$d$8135$XGD4L)
                                   (if (if (eq? g$a$8134$XGD4L
                                                (car g$x$8133$XGD4L))
                                         (begin
                                           '#f
                                           (eq? g$d$8135$XGD4L
                                                (cdr g$x$8133$XGD4L)))
                                         '#f)
                                     g$x$8133$XGD4L
                                     (cons g$a$8134$XGD4L g$d$8135$XGD4L))))
                                (g$f$8132$XGD4L (car g$x$8133$XGD4L))
                                (g$f$8132$XGD4L (cdr g$x$8133$XGD4L)))
                               (if (vector? g$x$8133$XGD4L)
                                 ((case-lambda
                                    ((g$old$8136$XGD4L)
                                     ((case-lambda
                                        ((g$new$8137$XGD4L)
                                         (if (g$for-all$5871$XGD4L
                                               eq?
                                               g$old$8136$XGD4L
                                               g$new$8137$XGD4L)
                                           g$x$8133$XGD4L
                                           (list->vector g$new$8137$XGD4L))))
                                      (map g$f$8132$XGD4L g$old$8136$XGD4L))))
                                  (vector->list g$x$8133$XGD4L))
                                 g$x$8133$XGD4L))))))))
             g$f$8132$XGD4L)
           g$x$8128$XGD4L)))))
   (g$stx->datum$7610$XGD4L
     g$stx->datum$11252$XGD4L
     (case-lambda
       ((g$x$8138$XGD4L) (g$strip$7609$XGD4L g$x$8138$XGD4L '()))))
   (g$same-marks*?$7611$XGD4L
     g$same-marks*?$11253$XGD4L
     (case-lambda
       ((g$mark*$8139$XGD4L g$mark**$8140$XGD4L g$si$8141$XGD4L)
        (if (null? g$si$8141$XGD4L)
          '#f
          (if (g$same-marks?$7601$XGD4L
                g$mark*$8139$XGD4L
                (vector-ref g$mark**$8140$XGD4L (car g$si$8141$XGD4L)))
            (car g$si$8141$XGD4L)
            (g$same-marks*?$7611$XGD4L
              g$mark*$8139$XGD4L
              g$mark**$8140$XGD4L
              (cdr g$si$8141$XGD4L)))))))
   (g$id->label$7612$XGD4L
     g$id->label$11254$XGD4L
     (case-lambda
       ((g$id$8142$XGD4L)
        ((case-lambda
           ((g$t$8143$XGD4L)
            (if g$t$8143$XGD4L
              g$t$8143$XGD4L
              (begin
                '#f
                ((case-lambda
                   ((g$t$8144$XGD4L)
                    (if g$t$8144$XGD4L
                      ((case-lambda
                         ((g$env$8145$XGD4L)
                          ((case-lambda
                             ((g$rib$8146$XGD4L)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7547$XGD4L
                                     g$id$8142$XGD4L
                                     g$rib$8146$XGD4L)))
                                (case-lambda
                                  ((g$lab$8149$XGD4L g$loc_$8150$XGD4L)
                                   ((case-lambda
                                      ((g$loc_$8151$XGD4L g$lab$8152$XGD4L)
                                       (begin
                                         (g$extend-rib!$7563$XGD4L
                                           g$rib$8146$XGD4L
                                           g$id$8142$XGD4L
                                           g$lab$8152$XGD4L)
                                         g$lab$8152$XGD4L)))
                                    g$loc_$8150$XGD4L
                                    g$lab$8149$XGD4L))))))
                           (g$interaction-env-rib$7955$XGD4L
                             g$env$8145$XGD4L))))
                       g$t$8144$XGD4L)
                      '#f)))
                 (g$top-level-context$7990$XGD4L))))))
         (g$id->real-label$7613$XGD4L g$id$8142$XGD4L)))))
   (g$id->real-label$7613$XGD4L
     g$id->real-label$11255$XGD4L
     (case-lambda
       ((g$id$8153$XGD4L)
        ((case-lambda
           ((g$sym$8154$XGD4L)
            ((letrec ((g$search$8155$XGD4L
                        (case-lambda
                          ((g$subst*$8156$XGD4L g$mark*$8157$XGD4L)
                           (if (null? g$subst*$8156$XGD4L)
                             '#f
                             (if (eq? (car g$subst*$8156$XGD4L) 'shift)
                               (g$search$8155$XGD4L
                                 (cdr g$subst*$8156$XGD4L)
                                 (cdr g$mark*$8157$XGD4L))
                               ((case-lambda
                                  ((g$rib$8158$XGD4L)
                                   ((case-lambda
                                      ((g$t$8159$XGD4L)
                                       (if g$t$8159$XGD4L
                                         ((case-lambda
                                            ((g$ht$8160$XGD4L)
                                             ((case-lambda
                                                ((g$si$8161$XGD4L)
                                                 ((case-lambda
                                                    ((g$i$8162$XGD4L)
                                                     (if g$i$8162$XGD4L
                                                       (vector-ref
                                                         (g$rib-label*$7556$XGD4L
                                                           g$rib$8158$XGD4L)
                                                         g$i$8162$XGD4L)
                                                       (g$search$8155$XGD4L
                                                         (cdr g$subst*$8156$XGD4L)
                                                         g$mark*$8157$XGD4L))))
                                                  (if g$si$8161$XGD4L
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7611$XGD4L
                                                        g$mark*$8157$XGD4L
                                                        (g$rib-mark**$7555$XGD4L
                                                          g$rib$8158$XGD4L)
                                                        (reverse
                                                          g$si$8161$XGD4L)))
                                                    '#f))))
                                              (g$hashtable-ref$5667$XGD4L
                                                g$ht$8160$XGD4L
                                                g$sym$8154$XGD4L
                                                '#f))))
                                          g$t$8159$XGD4L)
                                         ((letrec ((g$f$8163$XGD4L
                                                     (case-lambda
                                                       ((g$sym*$8164$XGD4L
                                                          g$mark**$8165$XGD4L
                                                          g$label*$8166$XGD4L)
                                                        (if (null?
                                                              g$sym*$8164$XGD4L)
                                                          (g$search$8155$XGD4L
                                                            (cdr g$subst*$8156$XGD4L)
                                                            g$mark*$8157$XGD4L)
                                                          (if (if (eq? (car g$sym*$8164$XGD4L)
                                                                       g$sym$8154$XGD4L)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7601$XGD4L
                                                                    (car g$mark**$8165$XGD4L)
                                                                    g$mark*$8157$XGD4L))
                                                                '#f)
                                                            (car g$label*$8166$XGD4L)
                                                            (g$f$8163$XGD4L
                                                              (cdr g$sym*$8164$XGD4L)
                                                              (cdr g$mark**$8165$XGD4L)
                                                              (cdr g$label*$8166$XGD4L))))))))
                                            g$f$8163$XGD4L)
                                          (g$rib-sym*$7554$XGD4L
                                            g$rib$8158$XGD4L)
                                          (g$rib-mark**$7555$XGD4L
                                            g$rib$8158$XGD4L)
                                          (g$rib-label*$7556$XGD4L
                                            g$rib$8158$XGD4L)))))
                                    (g$rib-sealed/freq$7557$XGD4L
                                      g$rib$8158$XGD4L))))
                                (car g$subst*$8156$XGD4L))))))))
               g$search$8155$XGD4L)
             (g$stx-subst*$7575$XGD4L g$id$8153$XGD4L)
             (g$stx-mark*$7574$XGD4L g$id$8153$XGD4L))))
         (g$id->sym$7600$XGD4L g$id$8153$XGD4L)))))
   (g$label->binding$7614$XGD4L
     g$label->binding$11256$XGD4L
     (case-lambda
       ((g$x$8167$XGD4L g$r$8168$XGD4L)
        ((case-lambda
           ((g$t$8169$XGD4L)
            (if g$t$8169$XGD4L
              ((case-lambda
                 ((g$b$8170$XGD4L)
                  (if (if (pair? g$b$8170$XGD4L)
                        (begin '#f (eq? (car g$b$8170$XGD4L) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7840$XGD4L (cdr g$b$8170$XGD4L)))
                    (if (if (pair? g$b$8170$XGD4L)
                          (begin '#f (eq? (car g$b$8170$XGD4L) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8171$XGD4L g$loc$8172$XGD4L)
                          (cons '$rtd (symbol-value g$loc$8172$XGD4L))))
                       (g$cadr$5402$XGD4L g$b$8170$XGD4L)
                       (g$cddr$5404$XGD4L g$b$8170$XGD4L))
                      g$b$8170$XGD4L))))
               g$t$8169$XGD4L)
              ((case-lambda
                 ((g$t$8173$XGD4L)
                  (if g$t$8173$XGD4L
                    (cdr g$t$8173$XGD4L)
                    ((case-lambda
                       ((g$t$8174$XGD4L)
                        (if g$t$8174$XGD4L
                          ((case-lambda
                             ((g$env$8175$XGD4L)
                              ((case-lambda
                                 ((g$t$8176$XGD4L)
                                  (if g$t$8176$XGD4L
                                    ((case-lambda
                                       ((g$p$8177$XGD4L)
                                        (g$cons*$5873$XGD4L
                                          'lexical
                                          (cdr g$p$8177$XGD4L)
                                          '#f)))
                                     g$t$8176$XGD4L)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$8167$XGD4L
                                 (g$interaction-env-locs$7957$XGD4L
                                   g$env$8175$XGD4L)))))
                           g$t$8174$XGD4L)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7990$XGD4L)))))
               (assq g$x$8167$XGD4L g$r$8168$XGD4L)))))
         (g$imported-label->binding$7413$XGD4L g$x$8167$XGD4L)))))
   (g$make-binding$7615$XGD4L g$make-binding$11257$XGD4L cons)
   (g$binding-type$7616$XGD4L g$binding-type$11258$XGD4L car)
   (g$binding-value$7617$XGD4L g$binding-value$11259$XGD4L cdr)
   (g$raise-unbound-error$7618$XGD4L
     g$raise-unbound-error$11260$XGD4L
     (case-lambda
       ((g$id$8178$XGD4L)
        (g$syntax-violation*$7982$XGD4L
          '#f
          '"unbound identifier"
          g$id$8178$XGD4L
          (g$make-undefined-violation$6207$XGD4L)))))
   (g$syntax-type$7619$XGD4L
     g$syntax-type$11261$XGD4L
     (case-lambda
       ((g$e$8179$XGD4L g$r$8180$XGD4L)
        (if (g$id?$7599$XGD4L g$e$8179$XGD4L)
          ((case-lambda
             ((g$id$8181$XGD4L)
              ((case-lambda
                 ((g$label$8182$XGD4L)
                  ((case-lambda
                     ((g$b$8183$XGD4L)
                      ((case-lambda
                         ((g$type$8184$XGD4L)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$8182$XGD4L
                                  (void)
                                  (g$raise-unbound-error$7618$XGD4L
                                    g$id$8181$XGD4L))
                                ((case-lambda
                                   ((g$t$8185$XGD4L)
                                    (if (memv
                                          g$t$8185$XGD4L
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8184$XGD4L
                                        (g$binding-value$7617$XGD4L
                                          g$b$8183$XGD4L)
                                        g$id$8181$XGD4L)
                                      (values 'other '#f '#f))))
                                 g$type$8184$XGD4L)))))))
                       (g$binding-type$7616$XGD4L g$b$8183$XGD4L))))
                   (g$label->binding$7614$XGD4L
                     g$label$8182$XGD4L
                     g$r$8180$XGD4L))))
               (g$id->label$7612$XGD4L g$id$8181$XGD4L))))
           g$e$8179$XGD4L)
          (if (g$syntax-pair?$7592$XGD4L g$e$8179$XGD4L)
            ((case-lambda
               ((g$id$8186$XGD4L)
                (if (g$id?$7599$XGD4L g$id$8186$XGD4L)
                  ((case-lambda
                     ((g$label$8187$XGD4L)
                      ((case-lambda
                         ((g$b$8188$XGD4L)
                          ((case-lambda
                             ((g$type$8189$XGD4L)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$8187$XGD4L
                                      (void)
                                      (g$raise-unbound-error$7618$XGD4L
                                        g$id$8186$XGD4L))
                                    ((case-lambda
                                       ((g$t$8190$XGD4L)
                                        (if (memv
                                              g$t$8190$XGD4L
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$8189$XGD4L
                                            (g$binding-value$7617$XGD4L
                                              g$b$8188$XGD4L)
                                            g$id$8186$XGD4L)
                                          (values 'call '#f '#f))))
                                     g$type$8189$XGD4L)))))))
                           (g$binding-type$7616$XGD4L g$b$8188$XGD4L))))
                       (g$label->binding$7614$XGD4L
                         g$label$8187$XGD4L
                         g$r$8180$XGD4L))))
                   (g$id->label$7612$XGD4L g$id$8186$XGD4L))
                  (values 'call '#f '#f))))
             (g$syntax-car$7596$XGD4L g$e$8179$XGD4L))
            ((case-lambda
               ((g$d$8191$XGD4L)
                (if (g$self-evaluating?$7607$XGD4L g$d$8191$XGD4L)
                  (values 'constant g$d$8191$XGD4L '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7610$XGD4L g$e$8179$XGD4L)))))))
   (g$sanitize-binding$7627$XGD4L
     g$sanitize-binding$11262$XGD4L
     (case-lambda
       ((g$x$8192$XGD4L g$src$8193$XGD4L)
        (if (procedure? g$x$8192$XGD4L)
          (g$cons*$5873$XGD4L 'local-macro g$x$8192$XGD4L g$src$8193$XGD4L)
          (if (if (pair? g$x$8192$XGD4L)
                (if (eq? (car g$x$8192$XGD4L) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8192$XGD4L)))
                  '#f)
                '#f)
            (g$cons*$5873$XGD4L
              'local-macro!
              (cdr g$x$8192$XGD4L)
              g$src$8193$XGD4L)
            (if (if (pair? g$x$8192$XGD4L)
                  (begin '#f (eq? (car g$x$8192$XGD4L) '$rtd))
                  '#f)
              g$x$8192$XGD4L
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8192$XGD4L)))))))
   (g$make-variable-transformer$7628$XGD4L
     g$make-variable-transformer$11263$XGD4L
     (case-lambda
       ((g$x$8194$XGD4L)
        (if (procedure? g$x$8194$XGD4L)
          (cons 'macro! g$x$8194$XGD4L)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8194$XGD4L)))))
   (g$variable-transformer?$7629$XGD4L
     g$variable-transformer?$11264$XGD4L
     (case-lambda
       ((g$x$8195$XGD4L)
        (if (pair? g$x$8195$XGD4L)
          (if (eq? (car g$x$8195$XGD4L) 'macro!)
            (begin '#f (procedure? (cdr g$x$8195$XGD4L)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7630$XGD4L
     g$variable-transformer-procedure$11265$XGD4L
     (case-lambda
       ((g$x$8196$XGD4L)
        (if (g$variable-transformer?$7629$XGD4L g$x$8196$XGD4L)
          (cdr g$x$8196$XGD4L)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8196$XGD4L)))))
   (g$make-eval-transformer$7631$XGD4L
     g$make-eval-transformer$11266$XGD4L
     (case-lambda
       ((g$x$8197$XGD4L)
        (g$sanitize-binding$7627$XGD4L
          (eval-core (g$expanded->core$7113$XGD4L g$x$8197$XGD4L))
          g$x$8197$XGD4L))))
   (g$parse-define$7817$XGD4L
     g$parse-define$11267$XGD4L
     (case-lambda
       ((g$x$8198$XGD4L)
        ((case-lambda
           ((g$t$8199$XGD4L)
            ((case-lambda
               ((g$ls/false$8200$XGD4L)
                (if (if g$ls/false$8200$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8201$XGD4L
                               g$fmls$8202$XGD4L
                               g$b$8203$XGD4L
                               g$b*$8204$XGD4L)
                             (g$id?$7599$XGD4L g$id$8201$XGD4L)))
                          g$ls/false$8200$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8205$XGD4L
                         g$fmls$8206$XGD4L
                         g$b$8207$XGD4L
                         g$b*$8208$XGD4L)
                       (begin
                         (g$verify-formals$7897$XGD4L
                           g$fmls$8206$XGD4L
                           g$x$8198$XGD4L)
                         (values
                           g$id$8205$XGD4L
                           (cons
                             'defun
                             (cons
                               g$fmls$8206$XGD4L
                               (cons g$b$8207$XGD4L g$b*$8208$XGD4L)))))))
                    g$ls/false$8200$XGD4L)
                  ((case-lambda
                     ((g$t$8209$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8210$XGD4L)
                          (if (if g$ls/false$8210$XGD4L
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8211$XGD4L g$val$8212$XGD4L)
                                       (g$id?$7599$XGD4L g$id$8211$XGD4L)))
                                    g$ls/false$8210$XGD4L))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8213$XGD4L g$val$8214$XGD4L)
                                 (values
                                   g$id$8213$XGD4L
                                   (cons 'expr g$val$8214$XGD4L))))
                              g$ls/false$8210$XGD4L)
                            ((case-lambda
                               ((g$t$8215$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$8216$XGD4L)
                                    (if (if g$ls/false$8216$XGD4L
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8217$XGD4L)
                                                 (g$id?$7599$XGD4L
                                                   g$id$8217$XGD4L)))
                                              g$ls/false$8216$XGD4L))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8218$XGD4L)
                                           (values
                                             g$id$8218$XGD4L
                                             (cons
                                               'expr
                                               (g$bless$7840$XGD4L '(void))))))
                                        g$ls/false$8216$XGD4L)
                                      (g$syntax-violation$7983$XGD4L
                                        '#f
                                        '"invalid syntax"
                                        g$t$8215$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$8215$XGD4L
                                   '(_ any)))))
                             g$t$8209$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8209$XGD4L
                         '(_ any any)))))
                   g$t$8199$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8199$XGD4L
               '(_ (any . any) any . each-any)))))
         g$x$8198$XGD4L))))
   (g$parse-define-syntax$7818$XGD4L
     g$parse-define-syntax$11268$XGD4L
     (case-lambda
       ((g$x$8219$XGD4L)
        ((case-lambda
           ((g$t$8220$XGD4L)
            ((case-lambda
               ((g$ls/false$8221$XGD4L)
                (if (if g$ls/false$8221$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8222$XGD4L g$val$8223$XGD4L)
                             (g$id?$7599$XGD4L g$id$8222$XGD4L)))
                          g$ls/false$8221$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8224$XGD4L g$val$8225$XGD4L)
                       (values g$id$8224$XGD4L g$val$8225$XGD4L)))
                    g$ls/false$8221$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8220$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8220$XGD4L '(_ any any)))))
         g$x$8219$XGD4L))))
   (g$scheme-stx-hashtable$7819$XGD4L
     g$scheme-stx-hashtable$11269$XGD4L
     (g$make-eq-hashtable$5664$XGD4L))
   (g$scheme-stx$7820$XGD4L
     g$scheme-stx$11270$XGD4L
     (case-lambda
       ((g$sym$8226$XGD4L)
        ((case-lambda
           ((g$t$8227$XGD4L)
            (if g$t$8227$XGD4L
              g$t$8227$XGD4L
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8228$XGD4L)
                    ((case-lambda
                       ((g$stx$8229$XGD4L)
                        ((case-lambda
                           ((g$stx$8230$XGD4L)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5668$XGD4L
                                    g$scheme-stx-hashtable$7819$XGD4L
                                    g$sym$8226$XGD4L
                                    g$stx$8230$XGD4L)
                                  g$stx$8230$XGD4L))))))
                         ((case-lambda
                            ((g$t$8231$XGD4L)
                             (if g$t$8231$XGD4L
                               ((case-lambda
                                  ((g$x$8232$XGD4L)
                                   ((case-lambda
                                      ((g$name$8233$XGD4L g$label$8234$XGD4L)
                                       (g$add-subst$7589$XGD4L
                                         (g$make-rib$7553$XGD4L
                                           (list g$name$8233$XGD4L)
                                           (list g$top-mark*$7541$XGD4L)
                                           (list g$label$8234$XGD4L)
                                           '#f)
                                         g$stx$8229$XGD4L)))
                                    (car g$x$8232$XGD4L)
                                    (cdr g$x$8232$XGD4L))))
                                g$t$8231$XGD4L)
                               g$stx$8229$XGD4L)))
                          (assq g$sym$8226$XGD4L g$subst$8228$XGD4L)))))
                     (g$make-stx$7572$XGD4L
                       g$sym$8226$XGD4L
                       g$top-mark*$7541$XGD4L
                       '()
                       '()))))
                 (g$library-subst$7371$XGD4L
                   (g$find-library-by-name$7407$XGD4L
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5667$XGD4L
           g$scheme-stx-hashtable$7819$XGD4L
           g$sym$8226$XGD4L
           '#f)))))
   (g$lexical-var$7821$XGD4L g$lexical-var$11271$XGD4L car)
   (g$lexical-mutable?$7822$XGD4L g$lexical-mutable?$11272$XGD4L cdr)
   (g$set-lexical-mutable!$7823$XGD4L
     g$set-lexical-mutable!$11273$XGD4L
     set-cdr!)
   (g$add-lexical$7824$XGD4L
     g$add-lexical$11274$XGD4L
     (case-lambda
       ((g$lab$8235$XGD4L g$lex$8236$XGD4L g$r$8237$XGD4L)
        (cons
          (g$cons*$5873$XGD4L g$lab$8235$XGD4L 'lexical g$lex$8236$XGD4L '#f)
          g$r$8237$XGD4L))))
   (g$add-lexicals$7825$XGD4L
     g$add-lexicals$11275$XGD4L
     (case-lambda
       ((g$lab*$8238$XGD4L g$lex*$8239$XGD4L g$r$8240$XGD4L)
        (if (null? g$lab*$8238$XGD4L)
          g$r$8240$XGD4L
          (g$add-lexicals$7825$XGD4L
            (cdr g$lab*$8238$XGD4L)
            (cdr g$lex*$8239$XGD4L)
            (g$add-lexical$7824$XGD4L
              (car g$lab*$8238$XGD4L)
              (car g$lex*$8239$XGD4L)
              g$r$8240$XGD4L))))))
   (g$letrec-helper$7826$XGD4L
     g$letrec-helper$11276$XGD4L
     (case-lambda
       ((g$e$8241$XGD4L g$r$8242$XGD4L g$mr$8243$XGD4L g$build$8244$XGD4L)
        ((case-lambda
           ((g$t$8245$XGD4L)
            ((case-lambda
               ((g$ls/false$8246$XGD4L)
                (if g$ls/false$8246$XGD4L
                  (apply
                    (case-lambda
                      ((g$lhs*$8247$XGD4L
                         g$rhs*$8248$XGD4L
                         g$b$8249$XGD4L
                         g$b*$8250$XGD4L)
                       (if (not (g$valid-bound-ids?$7604$XGD4L
                                  g$lhs*$8247$XGD4L))
                         (g$invalid-fmls-error$7842$XGD4L
                           g$e$8241$XGD4L
                           g$lhs*$8247$XGD4L)
                         ((case-lambda
                            ((g$lex*$8251$XGD4L g$lab*$8252$XGD4L)
                             ((case-lambda
                                ((g$rib$8253$XGD4L g$r$8254$XGD4L)
                                 ((case-lambda
                                    ((g$body$8255$XGD4L g$rhs*$8256$XGD4L)
                                     (g$build$8244$XGD4L
                                       '#f
                                       g$lex*$8251$XGD4L
                                       g$rhs*$8256$XGD4L
                                       g$body$8255$XGD4L)))
                                  (g$chi-internal$7906$XGD4L
                                    (g$add-subst$7589$XGD4L
                                      g$rib$8253$XGD4L
                                      (cons g$b$8249$XGD4L g$b*$8250$XGD4L))
                                    g$r$8254$XGD4L
                                    g$mr$8243$XGD4L)
                                  (g$chi-expr*$7893$XGD4L
                                    (map (case-lambda
                                           ((g$x$8257$XGD4L)
                                            (g$add-subst$7589$XGD4L
                                              g$rib$8253$XGD4L
                                              g$x$8257$XGD4L)))
                                         g$rhs*$8248$XGD4L)
                                    g$r$8254$XGD4L
                                    g$mr$8243$XGD4L))))
                              (g$make-full-rib$7567$XGD4L
                                g$lhs*$8247$XGD4L
                                g$lab*$8252$XGD4L)
                              (g$add-lexicals$7825$XGD4L
                                g$lab*$8252$XGD4L
                                g$lex*$8251$XGD4L
                                g$r$8242$XGD4L))))
                          (map g$gen-lexical$7543$XGD4L g$lhs*$8247$XGD4L)
                          (map g$gen-label$7545$XGD4L g$lhs*$8247$XGD4L)))))
                    g$ls/false$8246$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8245$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8245$XGD4L
               '(_ #(each (any any)) any . each-any)))))
         g$e$8241$XGD4L))))
   (g$letrec-transformer$7827$XGD4L
     g$letrec-transformer$11277$XGD4L
     (case-lambda
       ((g$e$8258$XGD4L g$r$8259$XGD4L g$mr$8260$XGD4L)
        (g$letrec-helper$7826$XGD4L
          g$e$8258$XGD4L
          g$r$8259$XGD4L
          g$mr$8260$XGD4L
          g$build-letrec$7535$XGD4L))))
   (g$letrec*-transformer$7828$XGD4L
     g$letrec*-transformer$11278$XGD4L
     (case-lambda
       ((g$e$8261$XGD4L g$r$8262$XGD4L g$mr$8263$XGD4L)
        (g$letrec-helper$7826$XGD4L
          g$e$8261$XGD4L
          g$r$8262$XGD4L
          g$mr$8263$XGD4L
          g$build-letrec*$7536$XGD4L))))
   (g$fluid-let-syntax-transformer$7829$XGD4L
     g$fluid-let-syntax-transformer$11279$XGD4L
     (case-lambda
       ((g$e$8264$XGD4L g$r$8265$XGD4L g$mr$8266$XGD4L)
        (letrec* ((g$lookup$8267$XGD4L
                    (case-lambda
                      ((g$x$8277$XGD4L)
                       ((case-lambda
                          ((g$t$8278$XGD4L)
                           (if g$t$8278$XGD4L
                             g$t$8278$XGD4L
                             (begin
                               '#f
                               (g$syntax-violation$7983$XGD4L
                                 '#f
                                 '"unbound identifier"
                                 g$e$8264$XGD4L
                                 g$x$8277$XGD4L)))))
                        (g$id->label$7612$XGD4L g$x$8277$XGD4L))))))
          ((case-lambda
             ((g$t$8268$XGD4L)
              ((case-lambda
                 ((g$ls/false$8269$XGD4L)
                  (if g$ls/false$8269$XGD4L
                    (apply
                      (case-lambda
                        ((g$lhs*$8270$XGD4L
                           g$rhs*$8271$XGD4L
                           g$b$8272$XGD4L
                           g$b*$8273$XGD4L)
                         (if (not (g$valid-bound-ids?$7604$XGD4L
                                    g$lhs*$8270$XGD4L))
                           (g$invalid-fmls-error$7842$XGD4L
                             g$e$8264$XGD4L
                             g$lhs*$8270$XGD4L)
                           ((case-lambda
                              ((g$lab*$8274$XGD4L g$rhs*$8275$XGD4L)
                               (g$chi-internal$7906$XGD4L
                                 (cons g$b$8272$XGD4L g$b*$8273$XGD4L)
                                 (append
                                   (map cons
                                        g$lab*$8274$XGD4L
                                        g$rhs*$8275$XGD4L)
                                   g$r$8265$XGD4L)
                                 (append
                                   (map cons
                                        g$lab*$8274$XGD4L
                                        g$rhs*$8275$XGD4L)
                                   g$mr$8266$XGD4L))))
                            (map g$lookup$8267$XGD4L g$lhs*$8270$XGD4L)
                            (map (case-lambda
                                   ((g$x$8276$XGD4L)
                                    (g$make-eval-transformer$7631$XGD4L
                                      (g$expand-transformer$7922$XGD4L
                                        g$x$8276$XGD4L
                                        g$mr$8266$XGD4L))))
                                 g$rhs*$8271$XGD4L)))))
                      g$ls/false$8269$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$8268$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8268$XGD4L
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8264$XGD4L)))))
   (g$type-descriptor-transformer$7830$XGD4L
     g$type-descriptor-transformer$11280$XGD4L
     (case-lambda
       ((g$e$8279$XGD4L g$r$8280$XGD4L g$mr$8281$XGD4L)
        ((case-lambda
           ((g$t$8282$XGD4L)
            ((case-lambda
               ((g$ls/false$8283$XGD4L)
                (if (if g$ls/false$8283$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8284$XGD4L)
                             (g$id?$7599$XGD4L g$id$8284$XGD4L)))
                          g$ls/false$8283$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8285$XGD4L)
                       ((case-lambda
                          ((g$lab$8286$XGD4L)
                           ((case-lambda
                              ((g$b$8287$XGD4L)
                               ((case-lambda
                                  ((g$type$8288$XGD4L)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8286$XGD4L
                                           (void)
                                           (g$raise-unbound-error$7618$XGD4L
                                             g$id$8285$XGD4L))
                                         (if (if (eq? g$type$8288$XGD4L '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$7617$XGD4L
                                                          g$b$8287$XGD4L))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"not a record type"
                                             g$e$8279$XGD4L))
                                         (list
                                           'quote
                                           (g$binding-value$7617$XGD4L
                                             g$b$8287$XGD4L))))))))
                                (g$binding-type$7616$XGD4L g$b$8287$XGD4L))))
                            (g$label->binding$7614$XGD4L
                              g$lab$8286$XGD4L
                              g$r$8280$XGD4L))))
                        (g$id->label$7612$XGD4L g$id$8285$XGD4L))))
                    g$ls/false$8283$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8282$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8282$XGD4L '(_ any)))))
         g$e$8279$XGD4L))))
   (g$record-type-descriptor-transformer$7831$XGD4L
     g$record-type-descriptor-transformer$11281$XGD4L
     (case-lambda
       ((g$e$8289$XGD4L g$r$8290$XGD4L g$mr$8291$XGD4L)
        ((case-lambda
           ((g$t$8292$XGD4L)
            ((case-lambda
               ((g$ls/false$8293$XGD4L)
                (if (if g$ls/false$8293$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8294$XGD4L)
                             (g$id?$7599$XGD4L g$id$8294$XGD4L)))
                          g$ls/false$8293$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8295$XGD4L)
                       ((case-lambda
                          ((g$lab$8296$XGD4L)
                           ((case-lambda
                              ((g$b$8297$XGD4L)
                               ((case-lambda
                                  ((g$type$8298$XGD4L)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8296$XGD4L
                                           (void)
                                           (g$raise-unbound-error$7618$XGD4L
                                             g$id$8295$XGD4L))
                                         (if (if (eq? g$type$8298$XGD4L '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7617$XGD4L
                                                     g$b$8297$XGD4L)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"not a record type"
                                             g$e$8289$XGD4L))
                                         (g$chi-expr$7895$XGD4L
                                           (car (g$binding-value$7617$XGD4L
                                                  g$b$8297$XGD4L))
                                           g$r$8290$XGD4L
                                           g$mr$8291$XGD4L)))))))
                                (g$binding-type$7616$XGD4L g$b$8297$XGD4L))))
                            (g$label->binding$7614$XGD4L
                              g$lab$8296$XGD4L
                              g$r$8290$XGD4L))))
                        (g$id->label$7612$XGD4L g$id$8295$XGD4L))))
                    g$ls/false$8293$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8292$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8292$XGD4L '(_ any)))))
         g$e$8289$XGD4L))))
   (g$record-constructor-descriptor-transformer$7832$XGD4L
     g$record-constructor-descriptor-transformer$11282$XGD4L
     (case-lambda
       ((g$e$8299$XGD4L g$r$8300$XGD4L g$mr$8301$XGD4L)
        ((case-lambda
           ((g$t$8302$XGD4L)
            ((case-lambda
               ((g$ls/false$8303$XGD4L)
                (if (if g$ls/false$8303$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8304$XGD4L)
                             (g$id?$7599$XGD4L g$id$8304$XGD4L)))
                          g$ls/false$8303$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8305$XGD4L)
                       ((case-lambda
                          ((g$lab$8306$XGD4L)
                           ((case-lambda
                              ((g$b$8307$XGD4L)
                               ((case-lambda
                                  ((g$type$8308$XGD4L)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8306$XGD4L
                                           (void)
                                           (g$raise-unbound-error$7618$XGD4L
                                             g$id$8305$XGD4L))
                                         (if (if (eq? g$type$8308$XGD4L '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7617$XGD4L
                                                     g$b$8307$XGD4L)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid type"
                                             g$e$8299$XGD4L))
                                         (g$chi-expr$7895$XGD4L
                                           (g$cadr$5402$XGD4L
                                             (g$binding-value$7617$XGD4L
                                               g$b$8307$XGD4L))
                                           g$r$8300$XGD4L
                                           g$mr$8301$XGD4L)))))))
                                (g$binding-type$7616$XGD4L g$b$8307$XGD4L))))
                            (g$label->binding$7614$XGD4L
                              g$lab$8306$XGD4L
                              g$r$8300$XGD4L))))
                        (g$id->label$7612$XGD4L g$id$8305$XGD4L))))
                    g$ls/false$8303$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8302$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8302$XGD4L '(_ any)))))
         g$e$8299$XGD4L))))
   (g$when-transformer$7833$XGD4L
     g$when-transformer$11283$XGD4L
     (case-lambda
       ((g$e$8309$XGD4L g$r$8310$XGD4L g$mr$8311$XGD4L)
        ((case-lambda
           ((g$t$8312$XGD4L)
            ((case-lambda
               ((g$ls/false$8313$XGD4L)
                (if g$ls/false$8313$XGD4L
                  (apply
                    (case-lambda
                      ((g$test$8314$XGD4L g$e$8315$XGD4L g$e*$8316$XGD4L)
                       (list
                         'if
                         (g$chi-expr$7895$XGD4L
                           g$test$8314$XGD4L
                           g$r$8310$XGD4L
                           g$mr$8311$XGD4L)
                         (g$build-sequence$7533$XGD4L
                           '#f
                           (g$chi-expr*$7893$XGD4L
                             (cons g$e$8315$XGD4L g$e*$8316$XGD4L)
                             g$r$8310$XGD4L
                             g$mr$8311$XGD4L))
                         (g$build-void$7534$XGD4L))))
                    g$ls/false$8313$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8312$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8312$XGD4L
               '(_ any any . each-any)))))
         g$e$8309$XGD4L))))
   (g$unless-transformer$7834$XGD4L
     g$unless-transformer$11284$XGD4L
     (case-lambda
       ((g$e$8317$XGD4L g$r$8318$XGD4L g$mr$8319$XGD4L)
        ((case-lambda
           ((g$t$8320$XGD4L)
            ((case-lambda
               ((g$ls/false$8321$XGD4L)
                (if g$ls/false$8321$XGD4L
                  (apply
                    (case-lambda
                      ((g$test$8322$XGD4L g$e$8323$XGD4L g$e*$8324$XGD4L)
                       (list
                         'if
                         (g$chi-expr$7895$XGD4L
                           g$test$8322$XGD4L
                           g$r$8318$XGD4L
                           g$mr$8319$XGD4L)
                         (g$build-void$7534$XGD4L)
                         (g$build-sequence$7533$XGD4L
                           '#f
                           (g$chi-expr*$7893$XGD4L
                             (cons g$e$8323$XGD4L g$e*$8324$XGD4L)
                             g$r$8318$XGD4L
                             g$mr$8319$XGD4L)))))
                    g$ls/false$8321$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8320$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8320$XGD4L
               '(_ any any . each-any)))))
         g$e$8317$XGD4L))))
   (g$if-transformer$7835$XGD4L
     g$if-transformer$11285$XGD4L
     (case-lambda
       ((g$e$8325$XGD4L g$r$8326$XGD4L g$mr$8327$XGD4L)
        ((case-lambda
           ((g$t$8328$XGD4L)
            ((case-lambda
               ((g$ls/false$8329$XGD4L)
                (if g$ls/false$8329$XGD4L
                  (apply
                    (case-lambda
                      ((g$e0$8330$XGD4L g$e1$8331$XGD4L g$e2$8332$XGD4L)
                       (list
                         'if
                         (g$chi-expr$7895$XGD4L
                           g$e0$8330$XGD4L
                           g$r$8326$XGD4L
                           g$mr$8327$XGD4L)
                         (g$chi-expr$7895$XGD4L
                           g$e1$8331$XGD4L
                           g$r$8326$XGD4L
                           g$mr$8327$XGD4L)
                         (g$chi-expr$7895$XGD4L
                           g$e2$8332$XGD4L
                           g$r$8326$XGD4L
                           g$mr$8327$XGD4L))))
                    g$ls/false$8329$XGD4L)
                  ((case-lambda
                     ((g$t$8333$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8334$XGD4L)
                          (if g$ls/false$8334$XGD4L
                            (apply
                              (case-lambda
                                ((g$e0$8335$XGD4L g$e1$8336$XGD4L)
                                 (list
                                   'if
                                   (g$chi-expr$7895$XGD4L
                                     g$e0$8335$XGD4L
                                     g$r$8326$XGD4L
                                     g$mr$8327$XGD4L)
                                   (g$chi-expr$7895$XGD4L
                                     g$e1$8336$XGD4L
                                     g$r$8326$XGD4L
                                     g$mr$8327$XGD4L)
                                   (g$build-void$7534$XGD4L))))
                              g$ls/false$8334$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8333$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8333$XGD4L
                         '(_ any any)))))
                   g$t$8328$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8328$XGD4L '(_ any any any)))))
         g$e$8325$XGD4L))))
   (g$case-transformer$7836$XGD4L
     g$case-transformer$11286$XGD4L
     (case-lambda
       ((g$e$8337$XGD4L g$r$8338$XGD4L g$mr$8339$XGD4L)
        (letrec* ((g$build-one$8340$XGD4L
                    (case-lambda
                      ((g$t$8369$XGD4L g$cls$8370$XGD4L g$rest$8371$XGD4L)
                       ((case-lambda
                          ((g$t$8372$XGD4L)
                           ((case-lambda
                              ((g$ls/false$8373$XGD4L)
                               (if g$ls/false$8373$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$d*$8374$XGD4L
                                        g$e$8375$XGD4L
                                        g$e*$8376$XGD4L)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$8377$XGD4L)
                                            (if (= '1
                                                   (length g$data$8377$XGD4L))
                                              (list
                                                '(primitive eqv?)
                                                g$t$8369$XGD4L
                                                (list
                                                  'quote
                                                  (car g$data$8377$XGD4L)))
                                              (list
                                                '(primitive memv)
                                                g$t$8369$XGD4L
                                                (list
                                                  'quote
                                                  g$data$8377$XGD4L)))))
                                         (g$stx->datum$7610$XGD4L
                                           g$d*$8374$XGD4L))
                                        (g$build-sequence$7533$XGD4L
                                          '#f
                                          (g$chi-expr*$7893$XGD4L
                                            (cons
                                              g$e$8375$XGD4L
                                              g$e*$8376$XGD4L)
                                            g$r$8338$XGD4L
                                            g$mr$8339$XGD4L))
                                        g$rest$8371$XGD4L)))
                                   g$ls/false$8373$XGD4L)
                                 ((case-lambda
                                    ((g$t$8378$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$8379$XGD4L)
                                         (if g$ls/false$8379$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$else$8380$XGD4L)
                                                (g$syntax-violation$7983$XGD4L
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$8337$XGD4L)))
                                             g$ls/false$8379$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$8378$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$8378$XGD4L
                                        'any))))
                                  g$t$8372$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$8372$XGD4L
                              '(each-any any . each-any)))))
                        g$cls$8370$XGD4L))))
                  (g$build-last$8341$XGD4L
                    (case-lambda
                      ((g$t$8354$XGD4L g$cls$8355$XGD4L)
                       ((case-lambda
                          ((g$t$8356$XGD4L)
                           ((case-lambda
                              ((g$ls/false$8357$XGD4L)
                               (if g$ls/false$8357$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$d*$8358$XGD4L
                                        g$e$8359$XGD4L
                                        g$e*$8360$XGD4L)
                                      (g$build-one$8340$XGD4L
                                        g$t$8354$XGD4L
                                        g$cls$8355$XGD4L
                                        (g$build-void$7534$XGD4L))))
                                   g$ls/false$8357$XGD4L)
                                 ((case-lambda
                                    ((g$t$8361$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$8362$XGD4L)
                                         (if g$ls/false$8362$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$8363$XGD4L
                                                  g$x$8364$XGD4L
                                                  g$x*$8365$XGD4L)
                                                (if (if (g$id?$7599$XGD4L
                                                          g$else-kwd$8363$XGD4L)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$7603$XGD4L
                                                          g$else-kwd$8363$XGD4L
                                                          (g$scheme-stx$7820$XGD4L
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$7533$XGD4L
                                                    '#f
                                                    (g$chi-expr*$7893$XGD4L
                                                      (cons
                                                        g$x$8364$XGD4L
                                                        g$x*$8365$XGD4L)
                                                      g$r$8338$XGD4L
                                                      g$mr$8339$XGD4L))
                                                  (g$syntax-violation$7983$XGD4L
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$8337$XGD4L))))
                                             g$ls/false$8362$XGD4L)
                                           ((case-lambda
                                              ((g$t$8366$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$8367$XGD4L)
                                                   (if g$ls/false$8367$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$8368$XGD4L)
                                                          (g$syntax-violation$7983$XGD4L
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$8337$XGD4L)))
                                                       g$ls/false$8367$XGD4L)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8366$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$8366$XGD4L
                                                  'any))))
                                            g$t$8361$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$8361$XGD4L
                                        '(any any . each-any)))))
                                  g$t$8356$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$8356$XGD4L
                              '(each-any any . each-any)))))
                        g$cls$8355$XGD4L)))))
          ((case-lambda
             ((g$t$8342$XGD4L)
              ((case-lambda
                 ((g$ls/false$8343$XGD4L)
                  (if g$ls/false$8343$XGD4L
                    (apply
                      (case-lambda
                        ((g$expr$8344$XGD4L)
                         (g$build-sequence$7533$XGD4L
                           '#f
                           (list
                             (g$chi-expr$7895$XGD4L
                               g$expr$8344$XGD4L
                               g$r$8338$XGD4L
                               g$mr$8339$XGD4L)
                             (g$build-void$7534$XGD4L)))))
                      g$ls/false$8343$XGD4L)
                    ((case-lambda
                       ((g$t$8345$XGD4L)
                        ((case-lambda
                           ((g$ls/false$8346$XGD4L)
                            (if g$ls/false$8346$XGD4L
                              (apply
                                (case-lambda
                                  ((g$expr$8347$XGD4L
                                     g$cls$8348$XGD4L
                                     g$cls*$8349$XGD4L)
                                   ((case-lambda
                                      ((g$t$8350$XGD4L)
                                       (g$build-let$7532$XGD4L
                                         '#f
                                         (list g$t$8350$XGD4L)
                                         (list
                                           (g$chi-expr$7895$XGD4L
                                             g$expr$8347$XGD4L
                                             g$r$8338$XGD4L
                                             g$mr$8339$XGD4L))
                                         ((letrec ((g$f$8351$XGD4L
                                                     (case-lambda
                                                       ((g$cls$8352$XGD4L
                                                          g$cls*$8353$XGD4L)
                                                        (if (null?
                                                              g$cls*$8353$XGD4L)
                                                          (g$build-last$8341$XGD4L
                                                            g$t$8350$XGD4L
                                                            g$cls$8352$XGD4L)
                                                          (g$build-one$8340$XGD4L
                                                            g$t$8350$XGD4L
                                                            g$cls$8352$XGD4L
                                                            (g$f$8351$XGD4L
                                                              (car g$cls*$8353$XGD4L)
                                                              (cdr g$cls*$8353$XGD4L))))))))
                                            g$f$8351$XGD4L)
                                          g$cls$8348$XGD4L
                                          g$cls*$8349$XGD4L))))
                                    (g$gen-lexical$7543$XGD4L 't))))
                                g$ls/false$8346$XGD4L)
                              (g$syntax-violation$7983$XGD4L
                                '#f
                                '"invalid syntax"
                                g$t$8345$XGD4L))))
                         (g$syntax-dispatch$7877$XGD4L
                           g$t$8345$XGD4L
                           '(_ any any . each-any)))))
                     g$t$8342$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L g$t$8342$XGD4L '(_ any)))))
           g$e$8337$XGD4L)))))
   (g$quote-transformer$7837$XGD4L
     g$quote-transformer$11287$XGD4L
     (case-lambda
       ((g$e$8381$XGD4L g$r$8382$XGD4L g$mr$8383$XGD4L)
        ((case-lambda
           ((g$t$8384$XGD4L)
            ((case-lambda
               ((g$ls/false$8385$XGD4L)
                (if g$ls/false$8385$XGD4L
                  (apply
                    (case-lambda
                      ((g$datum$8386$XGD4L)
                       (list
                         'quote
                         (g$stx->datum$7610$XGD4L g$datum$8386$XGD4L))))
                    g$ls/false$8385$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8384$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8384$XGD4L '(_ any)))))
         g$e$8381$XGD4L))))
   (g$case-lambda-transformer$7838$XGD4L
     g$case-lambda-transformer$11288$XGD4L
     (case-lambda
       ((g$e$8387$XGD4L g$r$8388$XGD4L g$mr$8389$XGD4L)
        ((case-lambda
           ((g$t$8390$XGD4L)
            ((case-lambda
               ((g$ls/false$8391$XGD4L)
                (if g$ls/false$8391$XGD4L
                  (apply
                    (case-lambda
                      ((g$fmls*$8392$XGD4L g$b*$8393$XGD4L g$b**$8394$XGD4L)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7899$XGD4L
                              g$e$8387$XGD4L
                              g$fmls*$8392$XGD4L
                              (map cons g$b*$8393$XGD4L g$b**$8394$XGD4L)
                              g$r$8388$XGD4L
                              g$mr$8389$XGD4L)))
                         (case-lambda
                           ((g$fmls*$8397$XGD4L g$body*$8398$XGD4L)
                            ((case-lambda
                               ((g$body*$8399$XGD4L g$fmls*$8400$XGD4L)
                                (g$build-case-lambda$7531$XGD4L
                                  '#f
                                  g$fmls*$8400$XGD4L
                                  g$body*$8399$XGD4L)))
                             g$body*$8398$XGD4L
                             g$fmls*$8397$XGD4L))))))
                    g$ls/false$8391$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8390$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8390$XGD4L
               '(_ . #(each (any any . each-any)))))))
         g$e$8387$XGD4L))))
   (g$lambda-transformer$7839$XGD4L
     g$lambda-transformer$11289$XGD4L
     (case-lambda
       ((g$e$8401$XGD4L g$r$8402$XGD4L g$mr$8403$XGD4L)
        ((case-lambda
           ((g$t$8404$XGD4L)
            ((case-lambda
               ((g$ls/false$8405$XGD4L)
                (if g$ls/false$8405$XGD4L
                  (apply
                    (case-lambda
                      ((g$fmls$8406$XGD4L g$b$8407$XGD4L g$b*$8408$XGD4L)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7898$XGD4L
                              g$e$8401$XGD4L
                              g$fmls$8406$XGD4L
                              (cons g$b$8407$XGD4L g$b*$8408$XGD4L)
                              g$r$8402$XGD4L
                              g$mr$8403$XGD4L)))
                         (case-lambda
                           ((g$fmls$8411$XGD4L g$body$8412$XGD4L)
                            ((case-lambda
                               ((g$body$8413$XGD4L g$fmls$8414$XGD4L)
                                (g$build-lambda$7530$XGD4L
                                  '#f
                                  g$fmls$8414$XGD4L
                                  g$body$8413$XGD4L)))
                             g$body$8412$XGD4L
                             g$fmls$8411$XGD4L))))))
                    g$ls/false$8405$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8404$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8404$XGD4L
               '(_ any any . each-any)))))
         g$e$8401$XGD4L))))
   (g$bless$7840$XGD4L
     g$bless$11290$XGD4L
     (case-lambda
       ((g$x$8415$XGD4L)
        (g$mkstx$7587$XGD4L
          ((letrec ((g$f$8416$XGD4L
                      (case-lambda
                        ((g$x$8417$XGD4L)
                         (if (g$stx?$7571$XGD4L g$x$8417$XGD4L)
                           g$x$8417$XGD4L
                           (if (pair? g$x$8417$XGD4L)
                             (cons
                               (g$f$8416$XGD4L (car g$x$8417$XGD4L))
                               (g$f$8416$XGD4L (cdr g$x$8417$XGD4L)))
                             (if (symbol? g$x$8417$XGD4L)
                               (g$scheme-stx$7820$XGD4L g$x$8417$XGD4L)
                               (if (vector? g$x$8417$XGD4L)
                                 (vector-map g$f$8416$XGD4L g$x$8417$XGD4L)
                                 g$x$8417$XGD4L))))))))
             g$f$8416$XGD4L)
           g$x$8415$XGD4L)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7841$XGD4L
     g$with-syntax-macro$11291$XGD4L
     (case-lambda
       ((g$e$8418$XGD4L)
        ((case-lambda
           ((g$t$8419$XGD4L)
            ((case-lambda
               ((g$ls/false$8420$XGD4L)
                (if g$ls/false$8420$XGD4L
                  (apply
                    (case-lambda
                      ((g$pat*$8421$XGD4L
                         g$expr*$8422$XGD4L
                         g$b$8423$XGD4L
                         g$b*$8424$XGD4L)
                       ((case-lambda
                          ((g$idn*$8425$XGD4L)
                           (begin
                             (g$verify-formals$7897$XGD4L
                               (map car g$idn*$8425$XGD4L)
                               g$e$8418$XGD4L)
                             ((case-lambda
                                ((g$t*$8426$XGD4L)
                                 (g$bless$7840$XGD4L
                                   (list
                                     'let
                                     (map list
                                          g$t*$8426$XGD4L
                                          g$expr*$8422$XGD4L)
                                     ((letrec ((g$f$8427$XGD4L
                                                 (case-lambda
                                                   ((g$pat*$8428$XGD4L
                                                      g$t*$8429$XGD4L)
                                                    (if (null?
                                                          g$pat*$8428$XGD4L)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8423$XGD4L
                                                            g$b*$8424$XGD4L)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8429$XGD4L)
                                                        '()
                                                        (list
                                                          (car g$pat*$8428$XGD4L)
                                                          (g$f$8427$XGD4L
                                                            (cdr g$pat*$8428$XGD4L)
                                                            (cdr g$t*$8429$XGD4L)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8428$XGD4L))
                                                            (car g$t*$8429$XGD4L)))))))))
                                        g$f$8427$XGD4L)
                                      g$pat*$8421$XGD4L
                                      g$t*$8426$XGD4L)))))
                              (g$generate-temporaries$7976$XGD4L
                                g$expr*$8422$XGD4L)))))
                        ((letrec ((g$f$8430$XGD4L
                                    (case-lambda
                                      ((g$pat*$8431$XGD4L)
                                       (if (null? g$pat*$8431$XGD4L)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7876$XGD4L
                                                (car g$pat*$8431$XGD4L)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8434$XGD4L
                                                g$idn*$8435$XGD4L)
                                              ((case-lambda
                                                 ((g$idn*$8436$XGD4L
                                                    g$pat$8437$XGD4L)
                                                  (append
                                                    g$idn*$8436$XGD4L
                                                    (g$f$8430$XGD4L
                                                      (cdr g$pat*$8431$XGD4L)))))
                                               g$idn*$8435$XGD4L
                                               g$pat$8434$XGD4L)))))))))
                           g$f$8430$XGD4L)
                         g$pat*$8421$XGD4L))))
                    g$ls/false$8420$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8419$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8419$XGD4L
               '(_ #(each (any any)) any . each-any)))))
         g$e$8418$XGD4L))))
   (g$invalid-fmls-error$7842$XGD4L
     g$invalid-fmls-error$11292$XGD4L
     (case-lambda
       ((g$stx$8438$XGD4L g$fmls$8439$XGD4L)
        ((case-lambda
           ((g$t$8440$XGD4L)
            ((case-lambda
               ((g$ls/false$8441$XGD4L)
                (if g$ls/false$8441$XGD4L
                  (apply
                    (case-lambda
                      ((g$id*$8442$XGD4L g$last$8443$XGD4L)
                       ((letrec ((g$f$8444$XGD4L
                                   (case-lambda
                                     ((g$id*$8445$XGD4L)
                                      (if (null? g$id*$8445$XGD4L)
                                        (values)
                                        (if (not (g$id?$7599$XGD4L
                                                   (car g$id*$8445$XGD4L)))
                                          (g$syntax-violation$7983$XGD4L
                                            '#f
                                            '"not an identifier"
                                            g$stx$8438$XGD4L
                                            (car g$id*$8445$XGD4L))
                                          (begin
                                            (g$f$8444$XGD4L
                                              (cdr g$id*$8445$XGD4L))
                                            (if (g$bound-id-member?$7606$XGD4L
                                                  (car g$id*$8445$XGD4L)
                                                  (cdr g$id*$8445$XGD4L))
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8438$XGD4L
                                                (car g$id*$8445$XGD4L))
                                              (void)))))))))
                          g$f$8444$XGD4L)
                        (if (g$id?$7599$XGD4L g$last$8443$XGD4L)
                          (cons g$last$8443$XGD4L g$id*$8442$XGD4L)
                          (if (g$syntax-null?$7594$XGD4L g$last$8443$XGD4L)
                            g$id*$8442$XGD4L
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"not an identifier"
                              g$stx$8438$XGD4L
                              g$last$8443$XGD4L))))))
                    g$ls/false$8441$XGD4L)
                  ((case-lambda
                     ((g$t$8446$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8447$XGD4L)
                          (if g$ls/false$8447$XGD4L
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7983$XGD4L
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8438$XGD4L
                                   g$fmls$8439$XGD4L)))
                              g$ls/false$8447$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8446$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L g$t$8446$XGD4L '_))))
                   g$t$8440$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8440$XGD4L
               '#(each+ any () any)))))
         g$fmls$8439$XGD4L))))
   (g$let-macro$7843$XGD4L
     g$let-macro$11293$XGD4L
     (case-lambda
       ((g$stx$8448$XGD4L)
        ((case-lambda
           ((g$t$8449$XGD4L)
            ((case-lambda
               ((g$ls/false$8450$XGD4L)
                (if g$ls/false$8450$XGD4L
                  (apply
                    (case-lambda
                      ((g$lhs*$8451$XGD4L
                         g$rhs*$8452$XGD4L
                         g$b$8453$XGD4L
                         g$b*$8454$XGD4L)
                       (if (g$valid-bound-ids?$7604$XGD4L g$lhs*$8451$XGD4L)
                         (g$bless$7840$XGD4L
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8451$XGD4L
                                 (cons g$b$8453$XGD4L g$b*$8454$XGD4L)))
                             g$rhs*$8452$XGD4L))
                         (g$invalid-fmls-error$7842$XGD4L
                           g$stx$8448$XGD4L
                           g$lhs*$8451$XGD4L))))
                    g$ls/false$8450$XGD4L)
                  ((case-lambda
                     ((g$t$8455$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8456$XGD4L)
                          (if (if g$ls/false$8456$XGD4L
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8457$XGD4L
                                         g$lhs*$8458$XGD4L
                                         g$rhs*$8459$XGD4L
                                         g$b$8460$XGD4L
                                         g$b*$8461$XGD4L)
                                       (g$id?$7599$XGD4L g$f$8457$XGD4L)))
                                    g$ls/false$8456$XGD4L))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8462$XGD4L
                                   g$lhs*$8463$XGD4L
                                   g$rhs*$8464$XGD4L
                                   g$b$8465$XGD4L
                                   g$b*$8466$XGD4L)
                                 (if (g$valid-bound-ids?$7604$XGD4L
                                       g$lhs*$8463$XGD4L)
                                   (g$bless$7840$XGD4L
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8462$XGD4L
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8463$XGD4L
                                                 (cons
                                                   g$b$8465$XGD4L
                                                   g$b*$8466$XGD4L)))))
                                         g$f$8462$XGD4L)
                                       g$rhs*$8464$XGD4L))
                                   (g$invalid-fmls-error$7842$XGD4L
                                     g$stx$8448$XGD4L
                                     g$lhs*$8463$XGD4L))))
                              g$ls/false$8456$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8455$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8455$XGD4L
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8449$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8449$XGD4L
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8448$XGD4L))))
   (g$let-values-macro$7844$XGD4L
     g$let-values-macro$11294$XGD4L
     (case-lambda
       ((g$stx$8467$XGD4L)
        (letrec* ((g$rename$8468$XGD4L
                    (case-lambda
                      ((g$x$8519$XGD4L g$old*$8520$XGD4L g$new*$8521$XGD4L)
                       (begin
                         (if (g$id?$7599$XGD4L g$x$8519$XGD4L)
                           (void)
                           (g$syntax-violation$7983$XGD4L
                             '#f
                             '"not an indentifier"
                             g$stx$8467$XGD4L
                             g$x$8519$XGD4L))
                         (if (g$bound-id-member?$7606$XGD4L
                               g$x$8519$XGD4L
                               g$old*$8520$XGD4L)
                           (g$syntax-violation$7983$XGD4L
                             '#f
                             '"duplicate binding"
                             g$stx$8467$XGD4L
                             g$x$8519$XGD4L)
                           (void))
                         ((case-lambda
                            ((g$y$8522$XGD4L)
                             (values
                               g$y$8522$XGD4L
                               (cons g$x$8519$XGD4L g$old*$8520$XGD4L)
                               (cons g$y$8522$XGD4L g$new*$8521$XGD4L))))
                          (gensym
                            (g$syntax->datum$7986$XGD4L g$x$8519$XGD4L)))))))
                  (g$rename*$8469$XGD4L
                    (case-lambda
                      ((g$x*$8510$XGD4L g$old*$8511$XGD4L g$new*$8512$XGD4L)
                       (if (null? g$x*$8510$XGD4L)
                         (values '() g$old*$8511$XGD4L g$new*$8512$XGD4L)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8468$XGD4L
                                (car g$x*$8510$XGD4L)
                                g$old*$8511$XGD4L
                                g$new*$8512$XGD4L)))
                           (case-lambda
                             ((g$x$8513$XGD4L
                                g$old*$8514$XGD4L
                                g$new*$8515$XGD4L)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8469$XGD4L
                                     (cdr g$x*$8510$XGD4L)
                                     g$old*$8514$XGD4L
                                     g$new*$8515$XGD4L)))
                                (case-lambda
                                  ((g$x*$8516$XGD4L
                                     g$old*$8517$XGD4L
                                     g$new*$8518$XGD4L)
                                   (values
                                     (cons g$x$8513$XGD4L g$x*$8516$XGD4L)
                                     g$old*$8517$XGD4L
                                     g$new*$8518$XGD4L))))))))))))
          ((case-lambda
             ((g$t$8470$XGD4L)
              ((case-lambda
                 ((g$ls/false$8471$XGD4L)
                  (if g$ls/false$8471$XGD4L
                    (apply
                      (case-lambda
                        ((g$b$8472$XGD4L g$b*$8473$XGD4L)
                         (g$cons*$5873$XGD4L
                           (g$bless$7840$XGD4L 'let)
                           '()
                           g$b$8472$XGD4L
                           g$b*$8473$XGD4L)))
                      g$ls/false$8471$XGD4L)
                    ((case-lambda
                       ((g$t$8474$XGD4L)
                        ((case-lambda
                           ((g$ls/false$8475$XGD4L)
                            (if g$ls/false$8475$XGD4L
                              (apply
                                (case-lambda
                                  ((g$lhs*$8476$XGD4L
                                     g$rhs*$8477$XGD4L
                                     g$b$8478$XGD4L
                                     g$b*$8479$XGD4L)
                                   (g$bless$7840$XGD4L
                                     ((letrec ((g$f$8480$XGD4L
                                                 (case-lambda
                                                   ((g$lhs*$8481$XGD4L
                                                      g$rhs*$8482$XGD4L
                                                      g$old*$8483$XGD4L
                                                      g$new*$8484$XGD4L)
                                                    (if (null?
                                                          g$lhs*$8481$XGD4L)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8483$XGD4L
                                                               g$new*$8484$XGD4L)
                                                          (cons
                                                            g$b$8478$XGD4L
                                                            g$b*$8479$XGD4L)))
                                                      ((case-lambda
                                                         ((g$t$8485$XGD4L)
                                                          ((case-lambda
                                                             ((g$ls/false$8486$XGD4L)
                                                              (if g$ls/false$8486$XGD4L
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8487$XGD4L)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8469$XGD4L
                                                                            g$x*$8487$XGD4L
                                                                            g$old*$8483$XGD4L
                                                                            g$new*$8484$XGD4L)))
                                                                       (case-lambda
                                                                         ((g$y*$8491$XGD4L
                                                                            g$old*$8492$XGD4L
                                                                            g$new*$8493$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$new*$8494$XGD4L
                                                                                g$old*$8495$XGD4L
                                                                                g$y*$8496$XGD4L)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8482$XGD4L))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8496$XGD4L
                                                                                  (g$f$8480$XGD4L
                                                                                    (cdr g$lhs*$8481$XGD4L)
                                                                                    (cdr g$rhs*$8482$XGD4L)
                                                                                    g$old*$8495$XGD4L
                                                                                    g$new*$8494$XGD4L)))))
                                                                           g$new*$8493$XGD4L
                                                                           g$old*$8492$XGD4L
                                                                           g$y*$8491$XGD4L))))))
                                                                  g$ls/false$8486$XGD4L)
                                                                ((case-lambda
                                                                   ((g$t$8497$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8498$XGD4L)
                                                                        (if g$ls/false$8498$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8499$XGD4L
                                                                                 g$x$8500$XGD4L)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8468$XGD4L
                                                                                      g$x$8500$XGD4L
                                                                                      g$old*$8483$XGD4L
                                                                                      g$new*$8484$XGD4L)))
                                                                                 (case-lambda
                                                                                   ((g$y$8501$XGD4L
                                                                                      g$old*$8502$XGD4L
                                                                                      g$new*$8503$XGD4L)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8469$XGD4L
                                                                                           g$x*$8499$XGD4L
                                                                                           g$old*$8502$XGD4L
                                                                                           g$new*$8503$XGD4L)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8504$XGD4L
                                                                                           g$old*$8505$XGD4L
                                                                                           g$new*$8506$XGD4L)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8482$XGD4L))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8504$XGD4L
                                                                                               g$y$8501$XGD4L)
                                                                                             (g$f$8480$XGD4L
                                                                                               (cdr g$lhs*$8481$XGD4L)
                                                                                               (cdr g$rhs*$8482$XGD4L)
                                                                                               g$old*$8505$XGD4L
                                                                                               g$new*$8506$XGD4L)))))))))))
                                                                            g$ls/false$8498$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$8507$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8508$XGD4L)
                                                                                  (if g$ls/false$8508$XGD4L
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8509$XGD4L)
                                                                                         (g$syntax-violation$7983$XGD4L
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8467$XGD4L
                                                                                           g$others$8509$XGD4L)))
                                                                                      g$ls/false$8508$XGD4L)
                                                                                    (g$syntax-violation$7983$XGD4L
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8507$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$8507$XGD4L
                                                                                 'any))))
                                                                           g$t$8497$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$8497$XGD4L
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8485$XGD4L))))
                                                           (g$syntax-dispatch$7877$XGD4L
                                                             g$t$8485$XGD4L
                                                             'each-any))))
                                                       (car g$lhs*$8481$XGD4L)))))))
                                        g$f$8480$XGD4L)
                                      g$lhs*$8476$XGD4L
                                      g$rhs*$8477$XGD4L
                                      '()
                                      '()))))
                                g$ls/false$8475$XGD4L)
                              (g$syntax-violation$7983$XGD4L
                                '#f
                                '"invalid syntax"
                                g$t$8474$XGD4L))))
                         (g$syntax-dispatch$7877$XGD4L
                           g$t$8474$XGD4L
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8470$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8470$XGD4L
                 '(_ () any . each-any)))))
           g$stx$8467$XGD4L)))))
   (g$let*-values-macro$7845$XGD4L
     g$let*-values-macro$11295$XGD4L
     (case-lambda
       ((g$stx$8523$XGD4L)
        (letrec* ((g$check$8524$XGD4L
                    (case-lambda
                      ((g$x*$8548$XGD4L)
                       (if (null? g$x*$8548$XGD4L)
                         (void)
                         ((case-lambda
                            ((g$x$8549$XGD4L)
                             (begin
                               (if (g$id?$7599$XGD4L g$x$8549$XGD4L)
                                 (void)
                                 (g$syntax-violation$7983$XGD4L
                                   '#f
                                   '"not an identifier"
                                   g$stx$8523$XGD4L
                                   g$x$8549$XGD4L))
                               (g$check$8524$XGD4L (cdr g$x*$8548$XGD4L))
                               (if (g$bound-id-member?$7606$XGD4L
                                     g$x$8549$XGD4L
                                     (cdr g$x*$8548$XGD4L))
                                 (g$syntax-violation$7983$XGD4L
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8523$XGD4L
                                   g$x$8549$XGD4L)
                                 (void)))))
                          (car g$x*$8548$XGD4L)))))))
          ((case-lambda
             ((g$t$8525$XGD4L)
              ((case-lambda
                 ((g$ls/false$8526$XGD4L)
                  (if g$ls/false$8526$XGD4L
                    (apply
                      (case-lambda
                        ((g$b$8527$XGD4L g$b*$8528$XGD4L)
                         (g$cons*$5873$XGD4L
                           (g$bless$7840$XGD4L 'let)
                           '()
                           g$b$8527$XGD4L
                           g$b*$8528$XGD4L)))
                      g$ls/false$8526$XGD4L)
                    ((case-lambda
                       ((g$t$8529$XGD4L)
                        ((case-lambda
                           ((g$ls/false$8530$XGD4L)
                            (if g$ls/false$8530$XGD4L
                              (apply
                                (case-lambda
                                  ((g$lhs*$8531$XGD4L
                                     g$rhs*$8532$XGD4L
                                     g$b$8533$XGD4L
                                     g$b*$8534$XGD4L)
                                   (g$bless$7840$XGD4L
                                     ((letrec ((g$f$8535$XGD4L
                                                 (case-lambda
                                                   ((g$lhs*$8536$XGD4L
                                                      g$rhs*$8537$XGD4L)
                                                    (if (null?
                                                          g$lhs*$8536$XGD4L)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8533$XGD4L
                                                          g$b*$8534$XGD4L))
                                                      ((case-lambda
                                                         ((g$t$8538$XGD4L)
                                                          ((case-lambda
                                                             ((g$ls/false$8539$XGD4L)
                                                              (if g$ls/false$8539$XGD4L
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8540$XGD4L)
                                                                     (begin
                                                                       (g$check$8524$XGD4L
                                                                         g$x*$8540$XGD4L)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8537$XGD4L))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8540$XGD4L
                                                                           (g$f$8535$XGD4L
                                                                             (cdr g$lhs*$8536$XGD4L)
                                                                             (cdr g$rhs*$8537$XGD4L)))))))
                                                                  g$ls/false$8539$XGD4L)
                                                                ((case-lambda
                                                                   ((g$t$8541$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8542$XGD4L)
                                                                        (if g$ls/false$8542$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8543$XGD4L
                                                                                 g$x$8544$XGD4L)
                                                                               (begin
                                                                                 (g$check$8524$XGD4L
                                                                                   (cons
                                                                                     g$x$8544$XGD4L
                                                                                     g$x*$8543$XGD4L))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8537$XGD4L))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8543$XGD4L
                                                                                       g$x$8544$XGD4L)
                                                                                     (g$f$8535$XGD4L
                                                                                       (cdr g$lhs*$8536$XGD4L)
                                                                                       (cdr g$rhs*$8537$XGD4L)))))))
                                                                            g$ls/false$8542$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$8545$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8546$XGD4L)
                                                                                  (if g$ls/false$8546$XGD4L
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8547$XGD4L)
                                                                                         (g$syntax-violation$7983$XGD4L
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8523$XGD4L
                                                                                           g$others$8547$XGD4L)))
                                                                                      g$ls/false$8546$XGD4L)
                                                                                    (g$syntax-violation$7983$XGD4L
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8545$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$8545$XGD4L
                                                                                 'any))))
                                                                           g$t$8541$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$8541$XGD4L
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8538$XGD4L))))
                                                           (g$syntax-dispatch$7877$XGD4L
                                                             g$t$8538$XGD4L
                                                             'each-any))))
                                                       (car g$lhs*$8536$XGD4L)))))))
                                        g$f$8535$XGD4L)
                                      g$lhs*$8531$XGD4L
                                      g$rhs*$8532$XGD4L))))
                                g$ls/false$8530$XGD4L)
                              (g$syntax-violation$7983$XGD4L
                                '#f
                                '"invalid syntax"
                                g$t$8529$XGD4L))))
                         (g$syntax-dispatch$7877$XGD4L
                           g$t$8529$XGD4L
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8525$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8525$XGD4L
                 '(_ () any . each-any)))))
           g$stx$8523$XGD4L)))))
   (g$trace-lambda-macro$7846$XGD4L
     g$trace-lambda-macro$11296$XGD4L
     (case-lambda
       ((g$stx$8550$XGD4L)
        ((case-lambda
           ((g$t$8551$XGD4L)
            ((case-lambda
               ((g$ls/false$8552$XGD4L)
                (if g$ls/false$8552$XGD4L
                  (apply
                    (case-lambda
                      ((g$who$8553$XGD4L
                         g$fmls$8554$XGD4L
                         g$b$8555$XGD4L
                         g$b*$8556$XGD4L)
                       (if (g$valid-bound-ids?$7604$XGD4L g$fmls$8554$XGD4L)
                         (g$bless$7840$XGD4L
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8553$XGD4L)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8554$XGD4L
                                 (cons g$b$8555$XGD4L g$b*$8556$XGD4L)))))
                         (g$invalid-fmls-error$7842$XGD4L
                           g$stx$8550$XGD4L
                           g$fmls$8554$XGD4L))))
                    g$ls/false$8552$XGD4L)
                  ((case-lambda
                     ((g$t$8557$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8558$XGD4L)
                          (if g$ls/false$8558$XGD4L
                            (apply
                              (case-lambda
                                ((g$who$8559$XGD4L
                                   g$fmls$8560$XGD4L
                                   g$last$8561$XGD4L
                                   g$b$8562$XGD4L
                                   g$b*$8563$XGD4L)
                                 (if (g$valid-bound-ids?$7604$XGD4L
                                       (cons
                                         g$last$8561$XGD4L
                                         g$fmls$8560$XGD4L))
                                   (g$bless$7840$XGD4L
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8559$XGD4L)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8560$XGD4L
                                             g$last$8561$XGD4L)
                                           (cons
                                             g$b$8562$XGD4L
                                             g$b*$8563$XGD4L)))))
                                   (g$invalid-fmls-error$7842$XGD4L
                                     g$stx$8550$XGD4L
                                     (append
                                       g$fmls$8560$XGD4L
                                       g$last$8561$XGD4L)))))
                              g$ls/false$8558$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8557$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8557$XGD4L
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8551$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8551$XGD4L
               '(_ any each-any any . each-any)))))
         g$stx$8550$XGD4L))))
   (g$trace-define-macro$7847$XGD4L
     g$trace-define-macro$11297$XGD4L
     (case-lambda
       ((g$stx$8564$XGD4L)
        ((case-lambda
           ((g$t$8565$XGD4L)
            ((case-lambda
               ((g$ls/false$8566$XGD4L)
                (if g$ls/false$8566$XGD4L
                  (apply
                    (case-lambda
                      ((g$who$8567$XGD4L
                         g$fmls$8568$XGD4L
                         g$b$8569$XGD4L
                         g$b*$8570$XGD4L)
                       (if (g$valid-bound-ids?$7604$XGD4L g$fmls$8568$XGD4L)
                         (g$bless$7840$XGD4L
                           (list
                             'define
                             g$who$8567$XGD4L
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8567$XGD4L)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8568$XGD4L
                                   (cons g$b$8569$XGD4L g$b*$8570$XGD4L))))))
                         (g$invalid-fmls-error$7842$XGD4L
                           g$stx$8564$XGD4L
                           g$fmls$8568$XGD4L))))
                    g$ls/false$8566$XGD4L)
                  ((case-lambda
                     ((g$t$8571$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8572$XGD4L)
                          (if g$ls/false$8572$XGD4L
                            (apply
                              (case-lambda
                                ((g$who$8573$XGD4L
                                   g$fmls$8574$XGD4L
                                   g$last$8575$XGD4L
                                   g$b$8576$XGD4L
                                   g$b*$8577$XGD4L)
                                 (if (g$valid-bound-ids?$7604$XGD4L
                                       (cons
                                         g$last$8575$XGD4L
                                         g$fmls$8574$XGD4L))
                                   (g$bless$7840$XGD4L
                                     (list
                                       'define
                                       g$who$8573$XGD4L
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8573$XGD4L)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8574$XGD4L
                                               g$last$8575$XGD4L)
                                             (cons
                                               g$b$8576$XGD4L
                                               g$b*$8577$XGD4L))))))
                                   (g$invalid-fmls-error$7842$XGD4L
                                     g$stx$8564$XGD4L
                                     (append
                                       g$fmls$8574$XGD4L
                                       g$last$8575$XGD4L)))))
                              g$ls/false$8572$XGD4L)
                            ((case-lambda
                               ((g$t$8578$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$8579$XGD4L)
                                    (if g$ls/false$8579$XGD4L
                                      (apply
                                        (case-lambda
                                          ((g$who$8580$XGD4L g$expr$8581$XGD4L)
                                           (if (g$id?$7599$XGD4L
                                                 g$who$8580$XGD4L)
                                             (g$bless$7840$XGD4L
                                               (list
                                                 'define
                                                 g$who$8580$XGD4L
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8581$XGD4L))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8580$XGD4L)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7983$XGD4L
                                               '#f
                                               '"invalid name"
                                               g$stx$8564$XGD4L))))
                                        g$ls/false$8579$XGD4L)
                                      (g$syntax-violation$7983$XGD4L
                                        '#f
                                        '"invalid syntax"
                                        g$t$8578$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$8578$XGD4L
                                   '(_ any any)))))
                             g$t$8571$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8571$XGD4L
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8565$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8565$XGD4L
               '(_ (any . each-any) any . each-any)))))
         g$stx$8564$XGD4L))))
   (g$trace-define-syntax-macro$7848$XGD4L
     g$trace-define-syntax-macro$11298$XGD4L
     (case-lambda
       ((g$stx$8582$XGD4L)
        ((case-lambda
           ((g$t$8583$XGD4L)
            ((case-lambda
               ((g$ls/false$8584$XGD4L)
                (if g$ls/false$8584$XGD4L
                  (apply
                    (case-lambda
                      ((g$who$8585$XGD4L g$expr$8586$XGD4L)
                       (if (g$id?$7599$XGD4L g$who$8585$XGD4L)
                         (g$bless$7840$XGD4L
                           (list
                             'define-syntax
                             g$who$8585$XGD4L
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8585$XGD4L)
                               g$expr$8586$XGD4L)))
                         (g$syntax-violation$7983$XGD4L
                           '#f
                           '"invalid name"
                           g$stx$8582$XGD4L))))
                    g$ls/false$8584$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8583$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8583$XGD4L '(_ any any)))))
         g$stx$8582$XGD4L))))
   (g$trace-let/rec-syntax$7849$XGD4L
     g$trace-let/rec-syntax$11299$XGD4L
     (case-lambda
       ((g$who$8587$XGD4L)
        (case-lambda
          ((g$stx$8588$XGD4L)
           ((case-lambda
              ((g$t$8589$XGD4L)
               ((case-lambda
                  ((g$ls/false$8590$XGD4L)
                   (if g$ls/false$8590$XGD4L
                     (apply
                       (case-lambda
                         ((g$lhs*$8591$XGD4L
                            g$rhs*$8592$XGD4L
                            g$b$8593$XGD4L
                            g$b*$8594$XGD4L)
                          (if (g$valid-bound-ids?$7604$XGD4L g$lhs*$8591$XGD4L)
                            ((case-lambda
                               ((g$rhs*$8595$XGD4L)
                                (g$bless$7840$XGD4L
                                  (cons
                                    g$who$8587$XGD4L
                                    (cons
                                      (map list
                                           g$lhs*$8591$XGD4L
                                           g$rhs*$8595$XGD4L)
                                      (cons g$b$8593$XGD4L g$b*$8594$XGD4L))))))
                             (map (case-lambda
                                    ((g$lhs$8596$XGD4L g$rhs$8597$XGD4L)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8596$XGD4L)
                                       g$rhs$8597$XGD4L)))
                                  g$lhs*$8591$XGD4L
                                  g$rhs*$8592$XGD4L))
                            (g$invalid-fmls-error$7842$XGD4L
                              g$stx$8588$XGD4L
                              g$lhs*$8591$XGD4L))))
                       g$ls/false$8590$XGD4L)
                     (g$syntax-violation$7983$XGD4L
                       '#f
                       '"invalid syntax"
                       g$t$8589$XGD4L))))
                (g$syntax-dispatch$7877$XGD4L
                  g$t$8589$XGD4L
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8588$XGD4L))))))
   (g$trace-let-syntax-macro$7850$XGD4L
     g$trace-let-syntax-macro$11300$XGD4L
     (g$trace-let/rec-syntax$7849$XGD4L 'let-syntax))
   (g$trace-letrec-syntax-macro$7851$XGD4L
     g$trace-letrec-syntax-macro$11301$XGD4L
     (g$trace-let/rec-syntax$7849$XGD4L 'letrec-syntax))
   (g$guard-macro$7852$XGD4L
     g$guard-macro$11302$XGD4L
     (case-lambda
       ((g$x$8598$XGD4L)
        (letrec* ((g$gen-clauses$8599$XGD4L
                    (case-lambda
                      ((g$con$8611$XGD4L
                         g$outerk$8612$XGD4L
                         g$clause*$8613$XGD4L)
                       (letrec* ((g$f$8614$XGD4L
                                   (case-lambda
                                     ((g$x$8642$XGD4L g$k$8643$XGD4L)
                                      ((case-lambda
                                         ((g$t$8644$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$8645$XGD4L)
                                              (if g$ls/false$8645$XGD4L
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8646$XGD4L
                                                       g$p$8647$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$8648$XGD4L)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8648$XGD4L
                                                               g$e$8646$XGD4L))
                                                           (list
                                                             'if
                                                             g$t$8648$XGD4L
                                                             (list
                                                               g$p$8647$XGD4L
                                                               g$t$8648$XGD4L)
                                                             g$k$8643$XGD4L))))
                                                      (gensym))))
                                                  g$ls/false$8645$XGD4L)
                                                ((case-lambda
                                                   ((g$t$8649$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$8650$XGD4L)
                                                        (if g$ls/false$8650$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8651$XGD4L)
                                                               ((case-lambda
                                                                  ((g$t$8652$XGD4L)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8652$XGD4L
                                                                         g$e$8651$XGD4L))
                                                                     (list
                                                                       'if
                                                                       g$t$8652$XGD4L
                                                                       g$t$8652$XGD4L
                                                                       g$k$8643$XGD4L))))
                                                                (gensym))))
                                                            g$ls/false$8650$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$8653$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$8654$XGD4L)
                                                                  (if g$ls/false$8654$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8655$XGD4L
                                                                           g$v$8656$XGD4L
                                                                           g$v*$8657$XGD4L)
                                                                         (list
                                                                           'if
                                                                           g$e$8655$XGD4L
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8656$XGD4L
                                                                               g$v*$8657$XGD4L))
                                                                           g$k$8643$XGD4L)))
                                                                      g$ls/false$8654$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$8658$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8659$XGD4L)
                                                                            (if g$ls/false$8659$XGD4L
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7983$XGD4L
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8642$XGD4L)))
                                                                                g$ls/false$8659$XGD4L)
                                                                              (g$syntax-violation$7983$XGD4L
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8658$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$8658$XGD4L
                                                                           '_))))
                                                                     g$t$8653$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$8653$XGD4L
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8649$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$8649$XGD4L
                                                       '(any)))))
                                                 g$t$8644$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$8644$XGD4L
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8642$XGD4L))))
                                 (g$f*$8615$XGD4L
                                   (case-lambda
                                     ((g$x*$8622$XGD4L)
                                      ((case-lambda
                                         ((g$t$8623$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$8624$XGD4L)
                                              (if g$ls/false$8624$XGD4L
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8611$XGD4L)
                                                       '#t)))
                                                  g$ls/false$8624$XGD4L)
                                                ((case-lambda
                                                   ((g$t$8625$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$8626$XGD4L)
                                                        (if g$ls/false$8626$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8627$XGD4L
                                                                 g$e*$8628$XGD4L)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8627$XGD4L
                                                                     g$e*$8628$XGD4L))
                                                                 '#f)))
                                                            g$ls/false$8626$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$8629$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$8630$XGD4L)
                                                                  (if g$ls/false$8630$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8631$XGD4L
                                                                           g$cls*$8632$XGD4L)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8615$XGD4L
                                                                                g$cls*$8632$XGD4L)))
                                                                           (case-lambda
                                                                             ((g$e$8635$XGD4L
                                                                                g$g$8636$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$g$8637$XGD4L
                                                                                    g$e$8638$XGD4L)
                                                                                  (values
                                                                                    (g$f$8614$XGD4L
                                                                                      g$cls$8631$XGD4L
                                                                                      g$e$8638$XGD4L)
                                                                                    g$g$8637$XGD4L)))
                                                                               g$g$8636$XGD4L
                                                                               g$e$8635$XGD4L))))))
                                                                      g$ls/false$8630$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$8639$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8640$XGD4L)
                                                                            (if g$ls/false$8640$XGD4L
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8641$XGD4L)
                                                                                   (g$syntax-violation$7983$XGD4L
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8641$XGD4L)))
                                                                                g$ls/false$8640$XGD4L)
                                                                              (g$syntax-violation$7983$XGD4L
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8639$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$8639$XGD4L
                                                                           'any))))
                                                                     g$t$8629$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$8629$XGD4L
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8625$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$8625$XGD4L
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8623$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$8623$XGD4L
                                             '()))))
                                       g$x*$8622$XGD4L)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8615$XGD4L g$clause*$8613$XGD4L)))
                           (case-lambda
                             ((g$code$8618$XGD4L g$raisek$8619$XGD4L)
                              ((case-lambda
                                 ((g$raisek$8620$XGD4L g$code$8621$XGD4L)
                                  (if g$raisek$8620$XGD4L
                                    (list g$outerk$8612$XGD4L g$code$8621$XGD4L)
                                    g$code$8621$XGD4L)))
                               g$raisek$8619$XGD4L
                               g$code$8618$XGD4L)))))))))
          ((case-lambda
             ((g$t$8600$XGD4L)
              ((case-lambda
                 ((g$ls/false$8601$XGD4L)
                  (if (if g$ls/false$8601$XGD4L
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8602$XGD4L
                                 g$clause*$8603$XGD4L
                                 g$b$8604$XGD4L
                                 g$b*$8605$XGD4L)
                               (g$id?$7599$XGD4L g$con$8602$XGD4L)))
                            g$ls/false$8601$XGD4L))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8606$XGD4L
                           g$clause*$8607$XGD4L
                           g$b$8608$XGD4L
                           g$b*$8609$XGD4L)
                         ((case-lambda
                            ((g$outerk$8610$XGD4L)
                             (g$bless$7840$XGD4L
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8610$XGD4L)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8606$XGD4L)
                                           (g$gen-clauses$8599$XGD4L
                                             g$con$8606$XGD4L
                                             g$outerk$8610$XGD4L
                                             g$clause*$8607$XGD4L))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8608$XGD4L
                                                 g$b*$8609$XGD4L))))))))))))
                          (gensym))))
                      g$ls/false$8601$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$8600$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8600$XGD4L
                 '(_ (any . each-any) any . each-any)))))
           g$x$8598$XGD4L)))))
   (g$define-enumeration-macro$7853$XGD4L
     g$define-enumeration-macro$11303$XGD4L
     (case-lambda
       ((g$stx$8660$XGD4L)
        (letrec* ((g$set?$8661$XGD4L
                    (case-lambda
                      ((g$x$8674$XGD4L)
                       ((case-lambda
                          ((g$t$8675$XGD4L)
                           (if g$t$8675$XGD4L
                             g$t$8675$XGD4L
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8674$XGD4L)
                                          (cdr g$x$8674$XGD4L)))
                                 (begin
                                   '#f
                                   (g$set?$8661$XGD4L (cdr g$x$8674$XGD4L)))
                                 '#f)))))
                        (null? g$x$8674$XGD4L)))))
                  (g$remove-dups$8662$XGD4L
                    (case-lambda
                      ((g$ls$8673$XGD4L)
                       (if (null? g$ls$8673$XGD4L)
                         '()
                         (cons
                           (car g$ls$8673$XGD4L)
                           (g$remove-dups$8662$XGD4L
                             (g$remq$5878$XGD4L
                               (car g$ls$8673$XGD4L)
                               (cdr g$ls$8673$XGD4L)))))))))
          ((case-lambda
             ((g$t$8663$XGD4L)
              ((case-lambda
                 ((g$ls/false$8664$XGD4L)
                  (if (if g$ls/false$8664$XGD4L
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8665$XGD4L
                                 g$id*$8666$XGD4L
                                 g$maker$8667$XGD4L)
                               (if (g$id?$7599$XGD4L g$name$8665$XGD4L)
                                 (if (g$id?$7599$XGD4L g$maker$8667$XGD4L)
                                   (begin
                                     '#f
                                     (g$for-all$5871$XGD4L
                                       g$id?$7599$XGD4L
                                       g$id*$8666$XGD4L))
                                   '#f)
                                 '#f)))
                            g$ls/false$8664$XGD4L))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8668$XGD4L g$id*$8669$XGD4L g$maker$8670$XGD4L)
                         ((case-lambda
                            ((g$name*$8671$XGD4L g$mk$8672$XGD4L)
                             (g$bless$7840$XGD4L
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8672$XGD4L
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8671$XGD4L))))
                                 (list
                                   'define-syntax
                                   g$name$8668$XGD4L
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8671$XGD4L))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8668$XGD4L)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8670$XGD4L
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8670$XGD4L)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8671$XGD4L))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8670$XGD4L)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8672$XGD4L
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8662$XGD4L
                            (g$syntax->datum$7986$XGD4L g$id*$8669$XGD4L))
                          (gensym))))
                      g$ls/false$8664$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$8663$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8663$XGD4L
                 '(_ any each-any any)))))
           g$stx$8660$XGD4L)))))
   (g$time-macro$7854$XGD4L
     g$time-macro$11304$XGD4L
     (case-lambda
       ((g$stx$8676$XGD4L)
        ((case-lambda
           ((g$t$8677$XGD4L)
            ((case-lambda
               ((g$ls/false$8678$XGD4L)
                (if g$ls/false$8678$XGD4L
                  (apply
                    (case-lambda
                      ((g$expr$8679$XGD4L)
                       ((case-lambda
                          ((g$str$8680$XGD4L)
                           (g$bless$7840$XGD4L
                             (list
                               'time-it
                               g$str$8680$XGD4L
                               (list 'lambda '() g$expr$8679$XGD4L)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6601$XGD4L)))
                          (case-lambda
                            ((g$p$8683$XGD4L g$e$8684$XGD4L)
                             ((case-lambda
                                ((g$e$8685$XGD4L g$p$8686$XGD4L)
                                 (begin
                                   (write
                                     (g$syntax->datum$7986$XGD4L
                                       g$expr$8679$XGD4L)
                                     g$p$8686$XGD4L)
                                   (g$e$8685$XGD4L))))
                              g$e$8684$XGD4L
                              g$p$8683$XGD4L)))))))
                    g$ls/false$8678$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8677$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8677$XGD4L '(_ any)))))
         g$stx$8676$XGD4L))))
   (g$delay-macro$7855$XGD4L
     g$delay-macro$11305$XGD4L
     (case-lambda
       ((g$stx$8687$XGD4L)
        ((case-lambda
           ((g$t$8688$XGD4L)
            ((case-lambda
               ((g$ls/false$8689$XGD4L)
                (if g$ls/false$8689$XGD4L
                  (apply
                    (case-lambda
                      ((g$expr$8690$XGD4L)
                       (g$bless$7840$XGD4L
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8690$XGD4L)))))
                    g$ls/false$8689$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8688$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8688$XGD4L '(_ any)))))
         g$stx$8687$XGD4L))))
   (g$assert-macro$7856$XGD4L
     g$assert-macro$11306$XGD4L
     (case-lambda
       ((g$stx$8691$XGD4L)
        ((case-lambda
           ((g$t$8692$XGD4L)
            ((case-lambda
               ((g$ls/false$8693$XGD4L)
                (if g$ls/false$8693$XGD4L
                  (apply
                    (case-lambda
                      ((g$expr$8694$XGD4L)
                       (g$bless$7840$XGD4L
                         (list
                           'unless
                           g$expr$8694$XGD4L
                           (list
                             'assertion-violation
                             '#f
                             '"assertion failed"
                             (list 'quote g$expr$8694$XGD4L))))))
                    g$ls/false$8693$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8692$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8692$XGD4L '(_ any)))))
         g$stx$8691$XGD4L))))
   (g$endianness-macro$7857$XGD4L
     g$endianness-macro$11307$XGD4L
     (case-lambda
       ((g$stx$8695$XGD4L)
        ((case-lambda
           ((g$t$8696$XGD4L)
            ((case-lambda
               ((g$ls/false$8697$XGD4L)
                (if g$ls/false$8697$XGD4L
                  (apply
                    (case-lambda
                      ((g$e$8698$XGD4L)
                       ((case-lambda
                          ((g$t$8699$XGD4L)
                           (if (eqv? g$t$8699$XGD4L 'little)
                             (g$bless$7840$XGD4L ''little)
                             (if (eqv? g$t$8699$XGD4L 'big)
                               (g$bless$7840$XGD4L ''big)
                               (g$syntax-violation$7983$XGD4L
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8695$XGD4L)))))
                        (g$syntax->datum$7986$XGD4L g$e$8698$XGD4L))))
                    g$ls/false$8697$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8696$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8696$XGD4L '(_ any)))))
         g$stx$8695$XGD4L))))
   (g$identifier-syntax-macro$7858$XGD4L
     g$identifier-syntax-macro$11308$XGD4L
     (case-lambda
       ((g$stx$8700$XGD4L)
        ((case-lambda
           ((g$t$8701$XGD4L)
            ((case-lambda
               ((g$ls/false$8702$XGD4L)
                (if g$ls/false$8702$XGD4L
                  (apply
                    (case-lambda
                      ((g$expr$8703$XGD4L)
                       (g$bless$7840$XGD4L
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8703$XGD4L))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8703$XGD4L)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8702$XGD4L)
                  ((case-lambda
                     ((g$t$8704$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8705$XGD4L)
                          (if (if g$ls/false$8705$XGD4L
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8706$XGD4L
                                         g$expr1$8707$XGD4L
                                         g$id2$8708$XGD4L
                                         g$expr2$8709$XGD4L
                                         g$expr3$8710$XGD4L)
                                       (if (g$id?$7599$XGD4L g$id1$8706$XGD4L)
                                         (if (g$id?$7599$XGD4L g$id2$8708$XGD4L)
                                           (begin
                                             '#f
                                             (g$id?$7599$XGD4L
                                               g$expr2$8709$XGD4L))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8705$XGD4L))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8711$XGD4L
                                   g$expr1$8712$XGD4L
                                   g$id2$8713$XGD4L
                                   g$expr2$8714$XGD4L
                                   g$expr3$8715$XGD4L)
                                 (g$bless$7840$XGD4L
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8712$XGD4L))
                                         (list
                                           (list 'set! 'id g$expr2$8714$XGD4L)
                                           (list 'syntax g$expr3$8715$XGD4L))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8712$XGD4L
                                               '(e* ...))))))))))
                              g$ls/false$8705$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8704$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8704$XGD4L
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8701$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8701$XGD4L '(_ any)))))
         g$stx$8700$XGD4L))))
   (g$do-macro$7859$XGD4L
     g$do-macro$11309$XGD4L
     (case-lambda
       ((g$stx$8716$XGD4L)
        (letrec* ((g$bind$8717$XGD4L
                    (case-lambda
                      ((g$x$8729$XGD4L)
                       ((case-lambda
                          ((g$t$8730$XGD4L)
                           ((case-lambda
                              ((g$ls/false$8731$XGD4L)
                               (if g$ls/false$8731$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$x$8732$XGD4L g$init$8733$XGD4L)
                                      (list
                                        g$x$8732$XGD4L
                                        g$init$8733$XGD4L
                                        g$x$8732$XGD4L)))
                                   g$ls/false$8731$XGD4L)
                                 ((case-lambda
                                    ((g$t$8734$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$8735$XGD4L)
                                         (if g$ls/false$8735$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$x$8736$XGD4L
                                                  g$init$8737$XGD4L
                                                  g$step$8738$XGD4L)
                                                (list
                                                  g$x$8736$XGD4L
                                                  g$init$8737$XGD4L
                                                  g$step$8738$XGD4L)))
                                             g$ls/false$8735$XGD4L)
                                           ((case-lambda
                                              ((g$t$8739$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$8740$XGD4L)
                                                   (if g$ls/false$8740$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7983$XGD4L
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8716$XGD4L)))
                                                       g$ls/false$8740$XGD4L)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8739$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$8739$XGD4L
                                                  '_))))
                                            g$t$8734$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$8734$XGD4L
                                        '(any any any)))))
                                  g$t$8730$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$8730$XGD4L
                              '(any any)))))
                        g$x$8729$XGD4L)))))
          ((case-lambda
             ((g$t$8718$XGD4L)
              ((case-lambda
                 ((g$ls/false$8719$XGD4L)
                  (if g$ls/false$8719$XGD4L
                    (apply
                      (case-lambda
                        ((g$binding*$8720$XGD4L
                           g$test$8721$XGD4L
                           g$expr*$8722$XGD4L
                           g$command*$8723$XGD4L)
                         ((case-lambda
                            ((g$t$8724$XGD4L)
                             ((case-lambda
                                ((g$ls/false$8725$XGD4L)
                                 (if g$ls/false$8725$XGD4L
                                   (apply
                                     (case-lambda
                                       ((g$x*$8726$XGD4L
                                          g$init*$8727$XGD4L
                                          g$step*$8728$XGD4L)
                                        (if (g$valid-bound-ids?$7604$XGD4L
                                              g$x*$8726$XGD4L)
                                          (g$bless$7840$XGD4L
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8726$XGD4L
                                                    (list
                                                      'if
                                                      g$test$8721$XGD4L
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8722$XGD4L))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8723$XGD4L
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8728$XGD4L))))))))
                                              (cons 'loop g$init*$8727$XGD4L)))
                                          (g$syntax-violation$7983$XGD4L
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8716$XGD4L))))
                                     g$ls/false$8725$XGD4L)
                                   (g$syntax-violation$7983$XGD4L
                                     '#f
                                     '"invalid syntax"
                                     g$t$8724$XGD4L))))
                              (g$syntax-dispatch$7877$XGD4L
                                g$t$8724$XGD4L
                                '#(each (any any any))))))
                          (map g$bind$8717$XGD4L g$binding*$8720$XGD4L))))
                      g$ls/false$8719$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$8718$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$8718$XGD4L
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8716$XGD4L)))))
   (g$let*-macro$7860$XGD4L
     g$let*-macro$11310$XGD4L
     (case-lambda
       ((g$stx$8741$XGD4L)
        ((case-lambda
           ((g$t$8742$XGD4L)
            ((case-lambda
               ((g$ls/false$8743$XGD4L)
                (if (if g$ls/false$8743$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8744$XGD4L
                               g$rhs*$8745$XGD4L
                               g$b$8746$XGD4L
                               g$b*$8747$XGD4L)
                             (g$for-all$5871$XGD4L
                               g$id?$7599$XGD4L
                               g$lhs*$8744$XGD4L)))
                          g$ls/false$8743$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8748$XGD4L
                         g$rhs*$8749$XGD4L
                         g$b$8750$XGD4L
                         g$b*$8751$XGD4L)
                       (g$bless$7840$XGD4L
                         ((letrec ((g$f$8752$XGD4L
                                     (case-lambda
                                       ((g$x*$8753$XGD4L)
                                        (if (null? g$x*$8753$XGD4L)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8750$XGD4L
                                                g$b*$8751$XGD4L)))
                                          (list
                                            'let
                                            (list (car g$x*$8753$XGD4L))
                                            (g$f$8752$XGD4L
                                              (cdr g$x*$8753$XGD4L))))))))
                            g$f$8752$XGD4L)
                          (map list g$lhs*$8748$XGD4L g$rhs*$8749$XGD4L)))))
                    g$ls/false$8743$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8742$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8742$XGD4L
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8741$XGD4L))))
   (g$or-macro$7861$XGD4L
     g$or-macro$11311$XGD4L
     (case-lambda
       ((g$stx$8754$XGD4L)
        ((case-lambda
           ((g$t$8755$XGD4L)
            ((case-lambda
               ((g$ls/false$8756$XGD4L)
                (if g$ls/false$8756$XGD4L
                  (apply (case-lambda (() '#f)) g$ls/false$8756$XGD4L)
                  ((case-lambda
                     ((g$t$8757$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8758$XGD4L)
                          (if g$ls/false$8758$XGD4L
                            (apply
                              (case-lambda
                                ((g$e$8759$XGD4L g$e*$8760$XGD4L)
                                 (g$bless$7840$XGD4L
                                   ((letrec ((g$f$8761$XGD4L
                                               (case-lambda
                                                 ((g$e$8762$XGD4L
                                                    g$e*$8763$XGD4L)
                                                  (if (null? g$e*$8763$XGD4L)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8762$XGD4L)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8762$XGD4L))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8761$XGD4L
                                                          (car g$e*$8763$XGD4L)
                                                          (cdr g$e*$8763$XGD4L)))))))))
                                      g$f$8761$XGD4L)
                                    g$e$8759$XGD4L
                                    g$e*$8760$XGD4L))))
                              g$ls/false$8758$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8757$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8757$XGD4L
                         '(_ any . each-any)))))
                   g$t$8755$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8755$XGD4L '(_)))))
         g$stx$8754$XGD4L))))
   (g$and-macro$7862$XGD4L
     g$and-macro$11312$XGD4L
     (case-lambda
       ((g$stx$8764$XGD4L)
        ((case-lambda
           ((g$t$8765$XGD4L)
            ((case-lambda
               ((g$ls/false$8766$XGD4L)
                (if g$ls/false$8766$XGD4L
                  (apply (case-lambda (() '#t)) g$ls/false$8766$XGD4L)
                  ((case-lambda
                     ((g$t$8767$XGD4L)
                      ((case-lambda
                         ((g$ls/false$8768$XGD4L)
                          (if g$ls/false$8768$XGD4L
                            (apply
                              (case-lambda
                                ((g$e$8769$XGD4L g$e*$8770$XGD4L)
                                 (g$bless$7840$XGD4L
                                   ((letrec ((g$f$8771$XGD4L
                                               (case-lambda
                                                 ((g$e$8772$XGD4L
                                                    g$e*$8773$XGD4L)
                                                  (if (null? g$e*$8773$XGD4L)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8772$XGD4L)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8772$XGD4L
                                                        (cons
                                                          (g$f$8771$XGD4L
                                                            (car g$e*$8773$XGD4L)
                                                            (cdr g$e*$8773$XGD4L))
                                                          '(#f)))))))))
                                      g$f$8771$XGD4L)
                                    g$e$8769$XGD4L
                                    g$e*$8770$XGD4L))))
                              g$ls/false$8768$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$8767$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$8767$XGD4L
                         '(_ any . each-any)))))
                   g$t$8765$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8765$XGD4L '(_)))))
         g$stx$8764$XGD4L))))
   (g$cond-macro$7863$XGD4L
     g$cond-macro$11313$XGD4L
     (case-lambda
       ((g$stx$8774$XGD4L)
        ((case-lambda
           ((g$t$8775$XGD4L)
            ((case-lambda
               ((g$ls/false$8776$XGD4L)
                (if g$ls/false$8776$XGD4L
                  (apply
                    (case-lambda
                      ((g$cls$8777$XGD4L g$cls*$8778$XGD4L)
                       (g$bless$7840$XGD4L
                         ((letrec ((g$f$8779$XGD4L
                                     (case-lambda
                                       ((g$cls$8780$XGD4L g$cls*$8781$XGD4L)
                                        (if (null? g$cls*$8781$XGD4L)
                                          ((case-lambda
                                             ((g$t$8782$XGD4L)
                                              ((case-lambda
                                                 ((g$ls/false$8783$XGD4L)
                                                  (if g$ls/false$8783$XGD4L
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8784$XGD4L
                                                           g$e*$8785$XGD4L)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8784$XGD4L
                                                             g$e*$8785$XGD4L))))
                                                      g$ls/false$8783$XGD4L)
                                                    ((case-lambda
                                                       ((g$t$8786$XGD4L)
                                                        ((case-lambda
                                                           ((g$ls/false$8787$XGD4L)
                                                            (if g$ls/false$8787$XGD4L
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8788$XGD4L
                                                                     g$p$8789$XGD4L)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8788$XGD4L))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8789$XGD4L
                                                                         '(t))))))
                                                                g$ls/false$8787$XGD4L)
                                                              ((case-lambda
                                                                 ((g$t$8790$XGD4L)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8791$XGD4L)
                                                                      (if g$ls/false$8791$XGD4L
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8792$XGD4L)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8792$XGD4L
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8791$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$t$8793$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8794$XGD4L)
                                                                                (if g$ls/false$8794$XGD4L
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8795$XGD4L
                                                                                         g$e*$8796$XGD4L)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8795$XGD4L
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8796$XGD4L))))
                                                                                    g$ls/false$8794$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$t$8797$XGD4L)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8798$XGD4L)
                                                                                          (if g$ls/false$8798$XGD4L
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7983$XGD4L
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8774$XGD4L)))
                                                                                              g$ls/false$8798$XGD4L)
                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8797$XGD4L))))
                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                         g$t$8797$XGD4L
                                                                                         '_))))
                                                                                   g$t$8793$XGD4L))))
                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                               g$t$8793$XGD4L
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8790$XGD4L))))
                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                     g$t$8790$XGD4L
                                                                     '(any)))))
                                                               g$t$8786$XGD4L))))
                                                         (g$syntax-dispatch$7877$XGD4L
                                                           g$t$8786$XGD4L
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8782$XGD4L))))
                                               (g$syntax-dispatch$7877$XGD4L
                                                 g$t$8782$XGD4L
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8780$XGD4L)
                                          ((case-lambda
                                             ((g$t$8799$XGD4L)
                                              ((case-lambda
                                                 ((g$ls/false$8800$XGD4L)
                                                  (if g$ls/false$8800$XGD4L
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8801$XGD4L
                                                           g$e*$8802$XGD4L)
                                                         (g$syntax-violation$7983$XGD4L
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8774$XGD4L)))
                                                      g$ls/false$8800$XGD4L)
                                                    ((case-lambda
                                                       ((g$t$8803$XGD4L)
                                                        ((case-lambda
                                                           ((g$ls/false$8804$XGD4L)
                                                            (if g$ls/false$8804$XGD4L
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8805$XGD4L
                                                                     g$p$8806$XGD4L)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8805$XGD4L))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8806$XGD4L
                                                                         '(t))
                                                                       (g$f$8779$XGD4L
                                                                         (car g$cls*$8781$XGD4L)
                                                                         (cdr g$cls*$8781$XGD4L))))))
                                                                g$ls/false$8804$XGD4L)
                                                              ((case-lambda
                                                                 ((g$t$8807$XGD4L)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8808$XGD4L)
                                                                      (if g$ls/false$8808$XGD4L
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8809$XGD4L)
                                                                             (list
                                                                               'or
                                                                               g$e$8809$XGD4L
                                                                               (g$f$8779$XGD4L
                                                                                 (car g$cls*$8781$XGD4L)
                                                                                 (cdr g$cls*$8781$XGD4L)))))
                                                                          g$ls/false$8808$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$t$8810$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8811$XGD4L)
                                                                                (if g$ls/false$8811$XGD4L
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8812$XGD4L
                                                                                         g$e*$8813$XGD4L)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8812$XGD4L
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8813$XGD4L)
                                                                                         (g$f$8779$XGD4L
                                                                                           (car g$cls*$8781$XGD4L)
                                                                                           (cdr g$cls*$8781$XGD4L)))))
                                                                                    g$ls/false$8811$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$t$8814$XGD4L)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8815$XGD4L)
                                                                                          (if g$ls/false$8815$XGD4L
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7983$XGD4L
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8774$XGD4L)))
                                                                                              g$ls/false$8815$XGD4L)
                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8814$XGD4L))))
                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                         g$t$8814$XGD4L
                                                                                         '_))))
                                                                                   g$t$8810$XGD4L))))
                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                               g$t$8810$XGD4L
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8807$XGD4L))))
                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                     g$t$8807$XGD4L
                                                                     '(any)))))
                                                               g$t$8803$XGD4L))))
                                                         (g$syntax-dispatch$7877$XGD4L
                                                           g$t$8803$XGD4L
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8799$XGD4L))))
                                               (g$syntax-dispatch$7877$XGD4L
                                                 g$t$8799$XGD4L
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8780$XGD4L))))))
                            g$f$8779$XGD4L)
                          g$cls$8777$XGD4L
                          g$cls*$8778$XGD4L))))
                    g$ls/false$8776$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8775$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8775$XGD4L
               '(_ any . each-any)))))
         g$stx$8774$XGD4L))))
   (g$do-include$7864$XGD4L
     g$do-include$11314$XGD4L
     (case-lambda
       ((g$stx$8816$XGD4L g$id$8817$XGD4L g$filename$8818$XGD4L)
        ((case-lambda
           ((g$filename$8819$XGD4L)
            (begin
              (if (if (string? g$filename$8819$XGD4L)
                    (begin '#f (g$id?$7599$XGD4L g$id$8817$XGD4L))
                    '#f)
                (void)
                (g$syntax-violation$7983$XGD4L
                  '#f
                  '"invalid syntax"
                  g$stx$8816$XGD4L))
              (cons
                (g$bless$7840$XGD4L 'begin)
                (with-input-from-file
                  g$filename$8819$XGD4L
                  (case-lambda
                    (()
                     ((letrec ((g$f$8820$XGD4L
                                 (case-lambda
                                   ((g$ls$8821$XGD4L)
                                    ((case-lambda
                                       ((g$x$8822$XGD4L)
                                        (if (eof-object? g$x$8822$XGD4L)
                                          (reverse g$ls$8821$XGD4L)
                                          (g$f$8820$XGD4L
                                            (cons
                                              (g$datum->stx$7582$XGD4L
                                                g$id$8817$XGD4L
                                                g$x$8822$XGD4L)
                                              g$ls$8821$XGD4L)))))
                                     (read-annotated))))))
                        g$f$8820$XGD4L)
                      '()))))))))
         (g$stx->datum$7610$XGD4L g$filename$8818$XGD4L)))))
   (g$include-macro$7865$XGD4L
     g$include-macro$11315$XGD4L
     (case-lambda
       ((g$e$8823$XGD4L)
        ((case-lambda
           ((g$t$8824$XGD4L)
            ((case-lambda
               ((g$ls/false$8825$XGD4L)
                (if g$ls/false$8825$XGD4L
                  (apply
                    (case-lambda
                      ((g$id$8826$XGD4L g$filename$8827$XGD4L)
                       (g$do-include$7864$XGD4L
                         g$e$8823$XGD4L
                         g$id$8826$XGD4L
                         g$filename$8827$XGD4L)))
                    g$ls/false$8825$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8824$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8824$XGD4L '(any any)))))
         g$e$8823$XGD4L))))
   (g$include-into-macro$7866$XGD4L
     g$include-into-macro$11316$XGD4L
     (case-lambda
       ((g$e$8828$XGD4L)
        ((case-lambda
           ((g$t$8829$XGD4L)
            ((case-lambda
               ((g$ls/false$8830$XGD4L)
                (if g$ls/false$8830$XGD4L
                  (apply
                    (case-lambda
                      ((g$id$8831$XGD4L g$filename$8832$XGD4L)
                       (g$do-include$7864$XGD4L
                         g$e$8828$XGD4L
                         g$id$8831$XGD4L
                         g$filename$8832$XGD4L)))
                    g$ls/false$8830$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8829$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$8829$XGD4L '(_ any any)))))
         g$e$8828$XGD4L))))
   (g$syntax-rules-macro$7867$XGD4L
     g$syntax-rules-macro$11317$XGD4L
     (case-lambda
       ((g$e$8833$XGD4L)
        ((case-lambda
           ((g$t$8834$XGD4L)
            ((case-lambda
               ((g$ls/false$8835$XGD4L)
                (if g$ls/false$8835$XGD4L
                  (apply
                    (case-lambda
                      ((g$lits$8836$XGD4L g$pat*$8837$XGD4L g$tmp*$8838$XGD4L)
                       (begin
                         (g$verify-literals$7880$XGD4L
                           g$lits$8836$XGD4L
                           g$e$8833$XGD4L)
                         (g$bless$7840$XGD4L
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8836$XGD4L
                                   (map (case-lambda
                                          ((g$pat$8839$XGD4L g$tmp$8840$XGD4L)
                                           ((case-lambda
                                              ((g$t$8841$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$8842$XGD4L)
                                                   (if g$ls/false$8842$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8843$XGD4L)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8843$XGD4L)
                                                            (list
                                                              'syntax
                                                              g$tmp$8840$XGD4L))))
                                                       g$ls/false$8842$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$8844$XGD4L)
                                                         ((case-lambda
                                                            ((g$ls/false$8845$XGD4L)
                                                             (if g$ls/false$8845$XGD4L
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8833$XGD4L
                                                                      g$pat$8839$XGD4L)))
                                                                 g$ls/false$8845$XGD4L)
                                                               (g$syntax-violation$7983$XGD4L
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8844$XGD4L))))
                                                          (g$syntax-dispatch$7877$XGD4L
                                                            g$t$8844$XGD4L
                                                            '_))))
                                                      g$t$8841$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$8841$XGD4L
                                                  '(_ . any)))))
                                            g$pat$8839$XGD4L)))
                                        g$pat*$8837$XGD4L
                                        g$tmp*$8838$XGD4L)))))))))
                    g$ls/false$8835$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$8834$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$8834$XGD4L
               '(_ each-any . #(each (any any)))))))
         g$e$8833$XGD4L))))
   (g$quasiquote-macro$7868$XGD4L
     g$quasiquote-macro$11318$XGD4L
     ((case-lambda
        (()
         (letrec* ((g$datum$8846$XGD4L
                     (case-lambda
                       ((g$x$8977$XGD4L)
                        (list
                          (g$scheme-stx$7820$XGD4L 'quote)
                          (g$mkstx$7587$XGD4L g$x$8977$XGD4L '() '() '())))))
                   (g$quasicons*$8862$XGD4L
                     (case-lambda
                       ((g$x$8973$XGD4L g$y$8974$XGD4L)
                        ((letrec ((g$f$8975$XGD4L
                                    (case-lambda
                                      ((g$x$8976$XGD4L)
                                       (if (null? g$x$8976$XGD4L)
                                         g$y$8974$XGD4L
                                         (g$quasicons$8863$XGD4L
                                           (car g$x$8976$XGD4L)
                                           (g$f$8975$XGD4L
                                             (cdr g$x$8976$XGD4L))))))))
                           g$f$8975$XGD4L)
                         g$x$8973$XGD4L))))
                   (g$quasicons$8863$XGD4L
                     (case-lambda
                       ((g$x$8954$XGD4L g$y$8955$XGD4L)
                        ((case-lambda
                           ((g$t$8956$XGD4L)
                            ((case-lambda
                               ((g$ls/false$8957$XGD4L)
                                (if g$ls/false$8957$XGD4L
                                  (apply
                                    (case-lambda
                                      ((g$dy$8958$XGD4L)
                                       ((case-lambda
                                          ((g$t$8959$XGD4L)
                                           ((case-lambda
                                              ((g$ls/false$8960$XGD4L)
                                               (if g$ls/false$8960$XGD4L
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8961$XGD4L)
                                                      (list
                                                        (g$scheme-stx$7820$XGD4L
                                                          'quote)
                                                        (cons
                                                          g$dx$8961$XGD4L
                                                          g$dy$8958$XGD4L))))
                                                   g$ls/false$8960$XGD4L)
                                                 ((case-lambda
                                                    ((g$t$8962$XGD4L)
                                                     ((case-lambda
                                                        ((g$ls/false$8963$XGD4L)
                                                         (if g$ls/false$8963$XGD4L
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8964$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8965$XGD4L)
                                                                        (if g$ls/false$8965$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7820$XGD4L
                                                                                   'list)
                                                                                 g$x$8954$XGD4L)))
                                                                            g$ls/false$8965$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$8966$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8967$XGD4L)
                                                                                  (if g$ls/false$8967$XGD4L
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7820$XGD4L
                                                                                             'cons)
                                                                                           g$x$8954$XGD4L
                                                                                           g$y$8955$XGD4L)))
                                                                                      g$ls/false$8967$XGD4L)
                                                                                    (g$syntax-violation$7983$XGD4L
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8966$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$8966$XGD4L
                                                                                 '_))))
                                                                           g$t$8964$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$8964$XGD4L
                                                                       '()))))
                                                                 g$dy$8958$XGD4L)))
                                                             g$ls/false$8963$XGD4L)
                                                           (g$syntax-violation$7983$XGD4L
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8962$XGD4L))))
                                                      (g$syntax-dispatch$7877$XGD4L
                                                        g$t$8962$XGD4L
                                                        '_))))
                                                  g$t$8959$XGD4L))))
                                            (g$syntax-dispatch$7877$XGD4L
                                              g$t$8959$XGD4L
                                              '(#(scheme-id quote) any)))))
                                        g$x$8954$XGD4L)))
                                    g$ls/false$8957$XGD4L)
                                  ((case-lambda
                                     ((g$t$8968$XGD4L)
                                      ((case-lambda
                                         ((g$ls/false$8969$XGD4L)
                                          (if g$ls/false$8969$XGD4L
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8970$XGD4L)
                                                 (g$cons*$5873$XGD4L
                                                   (g$scheme-stx$7820$XGD4L
                                                     'list)
                                                   g$x$8954$XGD4L
                                                   g$stuff$8970$XGD4L)))
                                              g$ls/false$8969$XGD4L)
                                            ((case-lambda
                                               ((g$t$8971$XGD4L)
                                                ((case-lambda
                                                   ((g$ls/false$8972$XGD4L)
                                                    (if g$ls/false$8972$XGD4L
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7820$XGD4L
                                                               'cons)
                                                             g$x$8954$XGD4L
                                                             g$y$8955$XGD4L)))
                                                        g$ls/false$8972$XGD4L)
                                                      (g$syntax-violation$7983$XGD4L
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8971$XGD4L))))
                                                 (g$syntax-dispatch$7877$XGD4L
                                                   g$t$8971$XGD4L
                                                   '_))))
                                             g$t$8968$XGD4L))))
                                       (g$syntax-dispatch$7877$XGD4L
                                         g$t$8968$XGD4L
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8956$XGD4L))))
                             (g$syntax-dispatch$7877$XGD4L
                               g$t$8956$XGD4L
                               '(#(scheme-id quote) any)))))
                         g$y$8955$XGD4L))))
                   (g$quasiappend$8864$XGD4L
                     (case-lambda
                       ((g$x$8941$XGD4L g$y$8942$XGD4L)
                        ((case-lambda
                           ((g$ls$8943$XGD4L)
                            (if (null? g$ls$8943$XGD4L)
                              (list (g$scheme-stx$7820$XGD4L 'quote) '())
                              (if (null? (cdr g$ls$8943$XGD4L))
                                (car g$ls$8943$XGD4L)
                                (g$cons*$5873$XGD4L
                                  (g$scheme-stx$7820$XGD4L 'append)
                                  g$ls$8943$XGD4L)))))
                         ((letrec ((g$f$8944$XGD4L
                                     (case-lambda
                                       ((g$x$8945$XGD4L)
                                        (if (null? g$x$8945$XGD4L)
                                          ((case-lambda
                                             ((g$t$8946$XGD4L)
                                              ((case-lambda
                                                 ((g$ls/false$8947$XGD4L)
                                                  (if g$ls/false$8947$XGD4L
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8947$XGD4L)
                                                    ((case-lambda
                                                       ((g$t$8948$XGD4L)
                                                        ((case-lambda
                                                           ((g$ls/false$8949$XGD4L)
                                                            (if g$ls/false$8949$XGD4L
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8942$XGD4L)))
                                                                g$ls/false$8949$XGD4L)
                                                              (g$syntax-violation$7983$XGD4L
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8948$XGD4L))))
                                                         (g$syntax-dispatch$7877$XGD4L
                                                           g$t$8948$XGD4L
                                                           '_))))
                                                     g$t$8946$XGD4L))))
                                               (g$syntax-dispatch$7877$XGD4L
                                                 g$t$8946$XGD4L
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8942$XGD4L)
                                          ((case-lambda
                                             ((g$t$8950$XGD4L)
                                              ((case-lambda
                                                 ((g$ls/false$8951$XGD4L)
                                                  (if g$ls/false$8951$XGD4L
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8944$XGD4L
                                                           (cdr g$x$8945$XGD4L))))
                                                      g$ls/false$8951$XGD4L)
                                                    ((case-lambda
                                                       ((g$t$8952$XGD4L)
                                                        ((case-lambda
                                                           ((g$ls/false$8953$XGD4L)
                                                            (if g$ls/false$8953$XGD4L
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8945$XGD4L)
                                                                     (g$f$8944$XGD4L
                                                                       (cdr g$x$8945$XGD4L)))))
                                                                g$ls/false$8953$XGD4L)
                                                              (g$syntax-violation$7983$XGD4L
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8952$XGD4L))))
                                                         (g$syntax-dispatch$7877$XGD4L
                                                           g$t$8952$XGD4L
                                                           '_))))
                                                     g$t$8950$XGD4L))))
                                               (g$syntax-dispatch$7877$XGD4L
                                                 g$t$8950$XGD4L
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8945$XGD4L)))))))
                            g$f$8944$XGD4L)
                          g$x$8941$XGD4L)))))
                   (g$quasivector$8865$XGD4L
                     (case-lambda
                       ((g$x$8916$XGD4L)
                        ((case-lambda
                           ((g$pat-x$8917$XGD4L)
                            ((case-lambda
                               ((g$t$8918$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$8919$XGD4L)
                                    (if g$ls/false$8919$XGD4L
                                      (apply
                                        (case-lambda
                                          ((g$x*$8920$XGD4L)
                                           (list
                                             (g$scheme-stx$7820$XGD4L 'quote)
                                             (list->vector g$x*$8920$XGD4L))))
                                        g$ls/false$8919$XGD4L)
                                      ((case-lambda
                                         ((g$t$8921$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$8922$XGD4L)
                                              (if g$ls/false$8922$XGD4L
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8923$XGD4L
                                                                 (case-lambda
                                                                   ((g$x$8924$XGD4L
                                                                      g$k$8925$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$8926$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8927$XGD4L)
                                                                            (if g$ls/false$8927$XGD4L
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8928$XGD4L)
                                                                                   (g$k$8925$XGD4L
                                                                                     (map (case-lambda
                                                                                            ((g$x$8929$XGD4L)
                                                                                             (list
                                                                                               (g$scheme-stx$7820$XGD4L
                                                                                                 'quote)
                                                                                               g$x$8929$XGD4L)))
                                                                                          g$x*$8928$XGD4L))))
                                                                                g$ls/false$8927$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$t$8930$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8931$XGD4L)
                                                                                      (if g$ls/false$8931$XGD4L
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8932$XGD4L)
                                                                                             (g$k$8925$XGD4L
                                                                                               g$x*$8932$XGD4L)))
                                                                                          g$ls/false$8931$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$t$8933$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8934$XGD4L)
                                                                                                (if g$ls/false$8934$XGD4L
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8935$XGD4L
                                                                                                         g$y$8936$XGD4L)
                                                                                                       (g$f$8923$XGD4L
                                                                                                         g$y$8936$XGD4L
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8937$XGD4L)
                                                                                                            (g$k$8925$XGD4L
                                                                                                              (cons
                                                                                                                g$x$8935$XGD4L
                                                                                                                g$ls$8937$XGD4L)))))))
                                                                                                    g$ls/false$8934$XGD4L)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8938$XGD4L)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8939$XGD4L)
                                                                                                          (if g$ls/false$8939$XGD4L
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7820$XGD4L
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8917$XGD4L)))
                                                                                                              g$ls/false$8939$XGD4L)
                                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8938$XGD4L))))
                                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                                         g$t$8938$XGD4L
                                                                                                         '_))))
                                                                                                   g$t$8933$XGD4L))))
                                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                                               g$t$8933$XGD4L
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8930$XGD4L))))
                                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                                     g$t$8930$XGD4L
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8926$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$8926$XGD4L
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8924$XGD4L)))))
                                                        g$f$8923$XGD4L)
                                                      g$x$8916$XGD4L
                                                      (case-lambda
                                                        ((g$ls$8940$XGD4L)
                                                         (g$cons*$5873$XGD4L
                                                           (g$scheme-stx$7820$XGD4L
                                                             'vector)
                                                           g$ls$8940$XGD4L))))))
                                                  g$ls/false$8922$XGD4L)
                                                (g$syntax-violation$7983$XGD4L
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8921$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$8921$XGD4L
                                             '_))))
                                       g$t$8918$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$8918$XGD4L
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8917$XGD4L)))
                         g$x$8916$XGD4L))))
                   (g$vquasi$8866$XGD4L
                     (case-lambda
                       ((g$p$8899$XGD4L g$lev$8900$XGD4L)
                        ((case-lambda
                           ((g$t$8901$XGD4L)
                            ((case-lambda
                               ((g$ls/false$8902$XGD4L)
                                (if g$ls/false$8902$XGD4L
                                  (apply
                                    (case-lambda
                                      ((g$p$8903$XGD4L g$q$8904$XGD4L)
                                       ((case-lambda
                                          ((g$t$8905$XGD4L)
                                           ((case-lambda
                                              ((g$ls/false$8906$XGD4L)
                                               (if g$ls/false$8906$XGD4L
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8907$XGD4L)
                                                      (if (= g$lev$8900$XGD4L
                                                             '0)
                                                        (g$quasicons*$8862$XGD4L
                                                          g$p$8907$XGD4L
                                                          (g$vquasi$8866$XGD4L
                                                            g$q$8904$XGD4L
                                                            g$lev$8900$XGD4L))
                                                        (g$quasicons$8863$XGD4L
                                                          (g$quasicons$8863$XGD4L
                                                            (g$datum$8846$XGD4L
                                                              'unquote)
                                                            (g$quasi$8867$XGD4L
                                                              g$p$8907$XGD4L
                                                              (- g$lev$8900$XGD4L
                                                                 '1)))
                                                          (g$vquasi$8866$XGD4L
                                                            g$q$8904$XGD4L
                                                            g$lev$8900$XGD4L)))))
                                                   g$ls/false$8906$XGD4L)
                                                 ((case-lambda
                                                    ((g$t$8908$XGD4L)
                                                     ((case-lambda
                                                        ((g$ls/false$8909$XGD4L)
                                                         (if g$ls/false$8909$XGD4L
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8910$XGD4L)
                                                                (if (= g$lev$8900$XGD4L
                                                                       '0)
                                                                  (g$quasiappend$8864$XGD4L
                                                                    g$p$8910$XGD4L
                                                                    (g$vquasi$8866$XGD4L
                                                                      g$q$8904$XGD4L
                                                                      g$lev$8900$XGD4L))
                                                                  (g$quasicons$8863$XGD4L
                                                                    (g$quasicons$8863$XGD4L
                                                                      (g$datum$8846$XGD4L
                                                                        'unquote-splicing)
                                                                      (g$quasi$8867$XGD4L
                                                                        g$p$8910$XGD4L
                                                                        (- g$lev$8900$XGD4L
                                                                           '1)))
                                                                    (g$vquasi$8866$XGD4L
                                                                      g$q$8904$XGD4L
                                                                      g$lev$8900$XGD4L)))))
                                                             g$ls/false$8909$XGD4L)
                                                           ((case-lambda
                                                              ((g$t$8911$XGD4L)
                                                               ((case-lambda
                                                                  ((g$ls/false$8912$XGD4L)
                                                                   (if g$ls/false$8912$XGD4L
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8913$XGD4L)
                                                                          (g$quasicons$8863$XGD4L
                                                                            (g$quasi$8867$XGD4L
                                                                              g$p$8913$XGD4L
                                                                              g$lev$8900$XGD4L)
                                                                            (g$vquasi$8866$XGD4L
                                                                              g$q$8904$XGD4L
                                                                              g$lev$8900$XGD4L))))
                                                                       g$ls/false$8912$XGD4L)
                                                                     (g$syntax-violation$7983$XGD4L
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8911$XGD4L))))
                                                                (g$syntax-dispatch$7877$XGD4L
                                                                  g$t$8911$XGD4L
                                                                  'any))))
                                                            g$t$8908$XGD4L))))
                                                      (g$syntax-dispatch$7877$XGD4L
                                                        g$t$8908$XGD4L
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8905$XGD4L))))
                                            (g$syntax-dispatch$7877$XGD4L
                                              g$t$8905$XGD4L
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8903$XGD4L)))
                                    g$ls/false$8902$XGD4L)
                                  ((case-lambda
                                     ((g$t$8914$XGD4L)
                                      ((case-lambda
                                         ((g$ls/false$8915$XGD4L)
                                          (if g$ls/false$8915$XGD4L
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7820$XGD4L
                                                     'quote)
                                                   '())))
                                              g$ls/false$8915$XGD4L)
                                            (g$syntax-violation$7983$XGD4L
                                              '#f
                                              '"invalid syntax"
                                              g$t$8914$XGD4L))))
                                       (g$syntax-dispatch$7877$XGD4L
                                         g$t$8914$XGD4L
                                         '()))))
                                   g$t$8901$XGD4L))))
                             (g$syntax-dispatch$7877$XGD4L
                               g$t$8901$XGD4L
                               '(any . any)))))
                         g$p$8899$XGD4L))))
                   (g$quasi$8867$XGD4L
                     (case-lambda
                       ((g$p$8872$XGD4L g$lev$8873$XGD4L)
                        ((case-lambda
                           ((g$t$8874$XGD4L)
                            ((case-lambda
                               ((g$ls/false$8875$XGD4L)
                                (if g$ls/false$8875$XGD4L
                                  (apply
                                    (case-lambda
                                      ((g$p$8876$XGD4L)
                                       (if (= g$lev$8873$XGD4L '0)
                                         g$p$8876$XGD4L
                                         (g$quasicons$8863$XGD4L
                                           (g$datum$8846$XGD4L 'unquote)
                                           (g$quasi$8867$XGD4L
                                             (list g$p$8876$XGD4L)
                                             (- g$lev$8873$XGD4L '1))))))
                                    g$ls/false$8875$XGD4L)
                                  ((case-lambda
                                     ((g$t$8877$XGD4L)
                                      ((case-lambda
                                         ((g$ls/false$8878$XGD4L)
                                          (if g$ls/false$8878$XGD4L
                                            (apply
                                              (case-lambda
                                                ((g$p$8879$XGD4L g$q$8880$XGD4L)
                                                 (if (= g$lev$8873$XGD4L '0)
                                                   (g$quasicons*$8862$XGD4L
                                                     g$p$8879$XGD4L
                                                     (g$quasi$8867$XGD4L
                                                       g$q$8880$XGD4L
                                                       g$lev$8873$XGD4L))
                                                   (g$quasicons$8863$XGD4L
                                                     (g$quasicons$8863$XGD4L
                                                       (g$datum$8846$XGD4L
                                                         'unquote)
                                                       (g$quasi$8867$XGD4L
                                                         g$p$8879$XGD4L
                                                         (- g$lev$8873$XGD4L
                                                            '1)))
                                                     (g$quasi$8867$XGD4L
                                                       g$q$8880$XGD4L
                                                       g$lev$8873$XGD4L)))))
                                              g$ls/false$8878$XGD4L)
                                            ((case-lambda
                                               ((g$t$8881$XGD4L)
                                                ((case-lambda
                                                   ((g$ls/false$8882$XGD4L)
                                                    (if g$ls/false$8882$XGD4L
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8883$XGD4L
                                                             g$q$8884$XGD4L)
                                                           (if (= g$lev$8873$XGD4L
                                                                  '0)
                                                             (g$quasiappend$8864$XGD4L
                                                               g$p$8883$XGD4L
                                                               (g$quasi$8867$XGD4L
                                                                 g$q$8884$XGD4L
                                                                 g$lev$8873$XGD4L))
                                                             (g$quasicons$8863$XGD4L
                                                               (g$quasicons$8863$XGD4L
                                                                 (g$datum$8846$XGD4L
                                                                   'unquote-splicing)
                                                                 (g$quasi$8867$XGD4L
                                                                   g$p$8883$XGD4L
                                                                   (- g$lev$8873$XGD4L
                                                                      '1)))
                                                               (g$quasi$8867$XGD4L
                                                                 g$q$8884$XGD4L
                                                                 g$lev$8873$XGD4L)))))
                                                        g$ls/false$8882$XGD4L)
                                                      ((case-lambda
                                                         ((g$t$8885$XGD4L)
                                                          ((case-lambda
                                                             ((g$ls/false$8886$XGD4L)
                                                              (if g$ls/false$8886$XGD4L
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8887$XGD4L)
                                                                     (g$quasicons$8863$XGD4L
                                                                       (g$datum$8846$XGD4L
                                                                         'quasiquote)
                                                                       (g$quasi$8867$XGD4L
                                                                         (list
                                                                           g$p$8887$XGD4L)
                                                                         (+ g$lev$8873$XGD4L
                                                                            '1)))))
                                                                  g$ls/false$8886$XGD4L)
                                                                ((case-lambda
                                                                   ((g$t$8888$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8889$XGD4L)
                                                                        (if g$ls/false$8889$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8890$XGD4L
                                                                                 g$q$8891$XGD4L)
                                                                               (g$quasicons$8863$XGD4L
                                                                                 (g$quasi$8867$XGD4L
                                                                                   g$p$8890$XGD4L
                                                                                   g$lev$8873$XGD4L)
                                                                                 (g$quasi$8867$XGD4L
                                                                                   g$q$8891$XGD4L
                                                                                   g$lev$8873$XGD4L))))
                                                                            g$ls/false$8889$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$8892$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8893$XGD4L)
                                                                                  (if (if g$ls/false$8893$XGD4L
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8894$XGD4L)
                                                                                               (not (g$stx?$7571$XGD4L
                                                                                                      g$x$8894$XGD4L))))
                                                                                            g$ls/false$8893$XGD4L))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8895$XGD4L)
                                                                                         (g$quasivector$8865$XGD4L
                                                                                           (g$vquasi$8866$XGD4L
                                                                                             g$x$8895$XGD4L
                                                                                             g$lev$8873$XGD4L))))
                                                                                      g$ls/false$8893$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$t$8896$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8897$XGD4L)
                                                                                            (if g$ls/false$8897$XGD4L
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8898$XGD4L)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7820$XGD4L
                                                                                                       'quote)
                                                                                                     g$p$8898$XGD4L)))
                                                                                                g$ls/false$8897$XGD4L)
                                                                                              (g$syntax-violation$7983$XGD4L
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8896$XGD4L))))
                                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                                           g$t$8896$XGD4L
                                                                                           'any))))
                                                                                     g$t$8892$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$8892$XGD4L
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8888$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$8888$XGD4L
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8885$XGD4L))))
                                                           (g$syntax-dispatch$7877$XGD4L
                                                             g$t$8885$XGD4L
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8881$XGD4L))))
                                                 (g$syntax-dispatch$7877$XGD4L
                                                   g$t$8881$XGD4L
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8877$XGD4L))))
                                       (g$syntax-dispatch$7877$XGD4L
                                         g$t$8877$XGD4L
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8874$XGD4L))))
                             (g$syntax-dispatch$7877$XGD4L
                               g$t$8874$XGD4L
                               '(#(scheme-id unquote) any)))))
                         g$p$8872$XGD4L)))))
           (case-lambda
             ((g$x$8868$XGD4L)
              ((case-lambda
                 ((g$t$8869$XGD4L)
                  ((case-lambda
                     ((g$ls/false$8870$XGD4L)
                      (if g$ls/false$8870$XGD4L
                        (apply
                          (case-lambda
                            ((g$e$8871$XGD4L)
                             (g$quasi$8867$XGD4L g$e$8871$XGD4L '0)))
                          g$ls/false$8870$XGD4L)
                        (g$syntax-violation$7983$XGD4L
                          '#f
                          '"invalid syntax"
                          g$t$8869$XGD4L))))
                   (g$syntax-dispatch$7877$XGD4L g$t$8869$XGD4L '(_ any)))))
               g$x$8868$XGD4L))))))))
   (g$quasisyntax-macro$7869$XGD4L
     g$quasisyntax-macro$11319$XGD4L
     ((case-lambda
        (()
         (letrec* ((g$quasi$8978$XGD4L
                     (case-lambda
                       ((g$p$8992$XGD4L g$lev$8993$XGD4L)
                        ((case-lambda
                           ((g$t$8994$XGD4L)
                            ((case-lambda
                               ((g$ls/false$8995$XGD4L)
                                (if g$ls/false$8995$XGD4L
                                  (apply
                                    (case-lambda
                                      ((g$p$8996$XGD4L)
                                       (if (= g$lev$8993$XGD4L '0)
                                         ((case-lambda
                                            ((g$g$8997$XGD4L)
                                             (values
                                               (list g$g$8997$XGD4L)
                                               (list g$p$8996$XGD4L)
                                               g$g$8997$XGD4L)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8978$XGD4L
                                                g$p$8996$XGD4L
                                                (- g$lev$8993$XGD4L '1))))
                                           (case-lambda
                                             ((g$lhs*$9001$XGD4L
                                                g$rhs*$9002$XGD4L
                                                g$p$9003$XGD4L)
                                              ((case-lambda
                                                 ((g$p$9004$XGD4L
                                                    g$rhs*$9005$XGD4L
                                                    g$lhs*$9006$XGD4L)
                                                  (values
                                                    g$lhs*$9006$XGD4L
                                                    g$rhs*$9005$XGD4L
                                                    (list
                                                      'unsyntax
                                                      g$p$9004$XGD4L))))
                                               g$p$9003$XGD4L
                                               g$rhs*$9002$XGD4L
                                               g$lhs*$9001$XGD4L)))))))
                                    g$ls/false$8995$XGD4L)
                                  ((case-lambda
                                     ((g$t$9007$XGD4L)
                                      ((case-lambda
                                         ((g$ls/false$9008$XGD4L)
                                          (if (if g$ls/false$9008$XGD4L
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8993$XGD4L '0)))
                                                    g$ls/false$9008$XGD4L))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7983$XGD4L
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8992$XGD4L)))
                                              g$ls/false$9008$XGD4L)
                                            ((case-lambda
                                               ((g$t$9009$XGD4L)
                                                ((case-lambda
                                                   ((g$ls/false$9010$XGD4L)
                                                    (if g$ls/false$9010$XGD4L
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9011$XGD4L
                                                             g$q$9012$XGD4L)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8978$XGD4L
                                                                  g$q$9012$XGD4L
                                                                  g$lev$8993$XGD4L)))
                                                             (case-lambda
                                                               ((g$lhs*$9016$XGD4L
                                                                  g$rhs*$9017$XGD4L
                                                                  g$q$9018$XGD4L)
                                                                ((case-lambda
                                                                   ((g$q$9019$XGD4L
                                                                      g$rhs*$9020$XGD4L
                                                                      g$lhs*$9021$XGD4L)
                                                                    (if (= g$lev$8993$XGD4L
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$9022$XGD4L)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$9022$XGD4L
                                                                                '(...))
                                                                              g$lhs*$9021$XGD4L)
                                                                            (cons
                                                                              g$p$9011$XGD4L
                                                                              g$rhs*$9020$XGD4L)
                                                                            (cons
                                                                              g$g$9022$XGD4L
                                                                              (cons
                                                                                '...
                                                                                g$q$9019$XGD4L)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8978$XGD4L
                                                                             g$p$9011$XGD4L
                                                                             (- g$lev$8993$XGD4L
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9026$XGD4L
                                                                             g$rhs2*$9027$XGD4L
                                                                             g$p$9028$XGD4L)
                                                                           ((case-lambda
                                                                              ((g$p$9029$XGD4L
                                                                                 g$rhs2*$9030$XGD4L
                                                                                 g$lhs2*$9031$XGD4L)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9031$XGD4L
                                                                                   g$lhs*$9021$XGD4L)
                                                                                 (append
                                                                                   g$rhs2*$9030$XGD4L
                                                                                   g$rhs*$9020$XGD4L)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$9029$XGD4L)
                                                                                   g$q$9019$XGD4L))))
                                                                            g$p$9028$XGD4L
                                                                            g$rhs2*$9027$XGD4L
                                                                            g$lhs2*$9026$XGD4L)))))))
                                                                 g$q$9018$XGD4L
                                                                 g$rhs*$9017$XGD4L
                                                                 g$lhs*$9016$XGD4L))))))
                                                        g$ls/false$9010$XGD4L)
                                                      ((case-lambda
                                                         ((g$t$9032$XGD4L)
                                                          ((case-lambda
                                                             ((g$ls/false$9033$XGD4L)
                                                              (if (if g$ls/false$9033$XGD4L
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8993$XGD4L
                                                                              '0)))
                                                                        g$ls/false$9033$XGD4L))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7983$XGD4L
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8992$XGD4L)))
                                                                  g$ls/false$9033$XGD4L)
                                                                ((case-lambda
                                                                   ((g$t$9034$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9035$XGD4L)
                                                                        (if g$ls/false$9035$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9036$XGD4L)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8978$XGD4L
                                                                                      g$p$9036$XGD4L
                                                                                      (+ g$lev$8993$XGD4L
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$9040$XGD4L
                                                                                      g$rhs*$9041$XGD4L
                                                                                      g$p$9042$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$p$9043$XGD4L
                                                                                          g$rhs*$9044$XGD4L
                                                                                          g$lhs*$9045$XGD4L)
                                                                                        (values
                                                                                          g$lhs*$9045$XGD4L
                                                                                          g$rhs*$9044$XGD4L
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$9043$XGD4L))))
                                                                                     g$p$9042$XGD4L
                                                                                     g$rhs*$9041$XGD4L
                                                                                     g$lhs*$9040$XGD4L))))))
                                                                            g$ls/false$9035$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$9046$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9047$XGD4L)
                                                                                  (if g$ls/false$9047$XGD4L
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9048$XGD4L
                                                                                           g$q$9049$XGD4L)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8978$XGD4L
                                                                                                g$p$9048$XGD4L
                                                                                                g$lev$8993$XGD4L)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9056$XGD4L
                                                                                                g$rhs*$9057$XGD4L
                                                                                                g$p$9058$XGD4L)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8978$XGD4L
                                                                                                     g$q$9049$XGD4L
                                                                                                     g$lev$8993$XGD4L)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$9059$XGD4L
                                                                                                     g$rhs2*$9060$XGD4L
                                                                                                     g$q$9061$XGD4L)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$9062$XGD4L
                                                                                                         g$rhs2*$9063$XGD4L
                                                                                                         g$lhs2*$9064$XGD4L
                                                                                                         g$p$9065$XGD4L
                                                                                                         g$rhs*$9066$XGD4L
                                                                                                         g$lhs*$9067$XGD4L)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$9064$XGD4L
                                                                                                           g$lhs*$9067$XGD4L)
                                                                                                         (append
                                                                                                           g$rhs2*$9063$XGD4L
                                                                                                           g$rhs*$9066$XGD4L)
                                                                                                         (cons
                                                                                                           g$p$9065$XGD4L
                                                                                                           g$q$9062$XGD4L))))
                                                                                                    g$q$9061$XGD4L
                                                                                                    g$rhs2*$9060$XGD4L
                                                                                                    g$lhs2*$9059$XGD4L
                                                                                                    g$p$9058$XGD4L
                                                                                                    g$rhs*$9057$XGD4L
                                                                                                    g$lhs*$9056$XGD4L)))))))))
                                                                                      g$ls/false$9047$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$t$9068$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9069$XGD4L)
                                                                                            (if (if g$ls/false$9069$XGD4L
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$9070$XGD4L)
                                                                                                         (not (g$stx?$7571$XGD4L
                                                                                                                g$p$8992$XGD4L))))
                                                                                                      g$ls/false$9069$XGD4L))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$9071$XGD4L)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$9075$XGD4L
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9076$XGD4L)
                                                                                                                       (if (null?
                                                                                                                             g$x$9076$XGD4L)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8978$XGD4L
                                                                                                                                (car g$x$9076$XGD4L)
                                                                                                                                g$lev$8993$XGD4L)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$9080$XGD4L
                                                                                                                                g$rhs*$9081$XGD4L
                                                                                                                                g$a$9082$XGD4L)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$9083$XGD4L
                                                                                                                                    g$rhs*$9084$XGD4L
                                                                                                                                    g$lhs*$9085$XGD4L)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$9075$XGD4L
                                                                                                                                         (cdr g$x$9076$XGD4L))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$9089$XGD4L
                                                                                                                                         g$rhs2*$9090$XGD4L
                                                                                                                                         g$d$9091$XGD4L)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$9092$XGD4L
                                                                                                                                             g$rhs2*$9093$XGD4L
                                                                                                                                             g$lhs2*$9094$XGD4L)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$9085$XGD4L
                                                                                                                                               g$lhs2*$9094$XGD4L)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$9084$XGD4L
                                                                                                                                               g$rhs2*$9093$XGD4L)
                                                                                                                                             (cons
                                                                                                                                               g$a$9083$XGD4L
                                                                                                                                               g$d$9092$XGD4L))))
                                                                                                                                        g$d$9091$XGD4L
                                                                                                                                        g$rhs2*$9090$XGD4L
                                                                                                                                        g$lhs2*$9089$XGD4L))))))
                                                                                                                               g$a$9082$XGD4L
                                                                                                                               g$rhs*$9081$XGD4L
                                                                                                                               g$lhs*$9080$XGD4L)))))))))
                                                                                                           g$f$9075$XGD4L)
                                                                                                         g$x$9071$XGD4L)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9095$XGD4L
                                                                                                          g$rhs*$9096$XGD4L
                                                                                                          g$x*$9097$XGD4L)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$9098$XGD4L
                                                                                                              g$rhs*$9099$XGD4L
                                                                                                              g$lhs*$9100$XGD4L)
                                                                                                            (values
                                                                                                              g$lhs*$9100$XGD4L
                                                                                                              g$rhs*$9099$XGD4L
                                                                                                              (list->vector
                                                                                                                g$x*$9098$XGD4L))))
                                                                                                         g$x*$9097$XGD4L
                                                                                                         g$rhs*$9096$XGD4L
                                                                                                         g$lhs*$9095$XGD4L))))))
                                                                                                g$ls/false$9069$XGD4L)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9101$XGD4L)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9102$XGD4L)
                                                                                                      (if g$ls/false$9102$XGD4L
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8992$XGD4L)))
                                                                                                          g$ls/false$9102$XGD4L)
                                                                                                        (g$syntax-violation$7983$XGD4L
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$9101$XGD4L))))
                                                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                                                     g$t$9101$XGD4L
                                                                                                     '_))))
                                                                                               g$t$9068$XGD4L))))
                                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                                           g$t$9068$XGD4L
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$9046$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$9046$XGD4L
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$9034$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$9034$XGD4L
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$9032$XGD4L))))
                                                           (g$syntax-dispatch$7877$XGD4L
                                                             g$t$9032$XGD4L
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$9009$XGD4L))))
                                                 (g$syntax-dispatch$7877$XGD4L
                                                   g$t$9009$XGD4L
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$9007$XGD4L))))
                                       (g$syntax-dispatch$7877$XGD4L
                                         g$t$9007$XGD4L
                                         '#(scheme-id unsyntax)))))
                                   g$t$8994$XGD4L))))
                             (g$syntax-dispatch$7877$XGD4L
                               g$t$8994$XGD4L
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8992$XGD4L)))))
           (case-lambda
             ((g$x$8979$XGD4L)
              ((case-lambda
                 ((g$t$8980$XGD4L)
                  ((case-lambda
                     ((g$ls/false$8981$XGD4L)
                      (if g$ls/false$8981$XGD4L
                        (apply
                          (case-lambda
                            ((g$e$8982$XGD4L)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8978$XGD4L g$e$8982$XGD4L '0)))
                               (case-lambda
                                 ((g$lhs*$8986$XGD4L
                                    g$rhs*$8987$XGD4L
                                    g$v$8988$XGD4L)
                                  ((case-lambda
                                     ((g$v$8989$XGD4L
                                        g$rhs*$8990$XGD4L
                                        g$lhs*$8991$XGD4L)
                                      (g$bless$7840$XGD4L
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8990$XGD4L)
                                          '()
                                          (list
                                            g$lhs*$8991$XGD4L
                                            (list 'syntax g$v$8989$XGD4L))))))
                                   g$v$8988$XGD4L
                                   g$rhs*$8987$XGD4L
                                   g$lhs*$8986$XGD4L))))))
                          g$ls/false$8981$XGD4L)
                        (g$syntax-violation$7983$XGD4L
                          '#f
                          '"invalid syntax"
                          g$t$8980$XGD4L))))
                   (g$syntax-dispatch$7877$XGD4L g$t$8980$XGD4L '(_ any)))))
               g$x$8979$XGD4L))))))))
   (g$define-struct-macro$7870$XGD4L
     g$define-struct-macro$11320$XGD4L
     (case-lambda
       ((g$stx$9103$XGD4L)
        (g$syntax-violation$7983$XGD4L
          '#f
          '"define-struct not supported"
          g$stx$9103$XGD4L))))
   (g$define-record-type-macro$7871$XGD4L
     g$define-record-type-macro$11321$XGD4L
     (case-lambda
       ((g$x$9104$XGD4L)
        (letrec* ((g$id$9105$XGD4L
                    (case-lambda
                      ((g$ctxt$9357$XGD4L . g$str*$9358$XGD4L)
                       (g$datum->syntax$7985$XGD4L
                         g$ctxt$9357$XGD4L
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9359$XGD4L)
                                     (if (symbol? g$x$9359$XGD4L)
                                       (symbol->string g$x$9359$XGD4L)
                                       (if (string? g$x$9359$XGD4L)
                                         g$x$9359$XGD4L
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9358$XGD4L)))))))
                  (g$get-record-name$9106$XGD4L
                    (case-lambda
                      ((g$spec$9348$XGD4L)
                       ((case-lambda
                          ((g$t$9349$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9350$XGD4L)
                               (if g$ls/false$9350$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$foo$9351$XGD4L
                                        g$make-foo$9352$XGD4L
                                        g$foo?$9353$XGD4L)
                                      g$foo$9351$XGD4L))
                                   g$ls/false$9350$XGD4L)
                                 ((case-lambda
                                    ((g$t$9354$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9355$XGD4L)
                                         (if g$ls/false$9355$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$foo$9356$XGD4L)
                                                g$foo$9356$XGD4L))
                                             g$ls/false$9355$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9354$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9354$XGD4L
                                        'any))))
                                  g$t$9349$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9349$XGD4L
                              '(any any any)))))
                        g$spec$9348$XGD4L))))
                  (g$get-record-constructor-name$9107$XGD4L
                    (case-lambda
                      ((g$spec$9338$XGD4L)
                       ((case-lambda
                          ((g$t$9339$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9340$XGD4L)
                               (if g$ls/false$9340$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$foo$9341$XGD4L
                                        g$make-foo$9342$XGD4L
                                        g$foo?$9343$XGD4L)
                                      g$make-foo$9342$XGD4L))
                                   g$ls/false$9340$XGD4L)
                                 ((case-lambda
                                    ((g$t$9344$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9345$XGD4L)
                                         (if (if g$ls/false$9345$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9346$XGD4L)
                                                      (g$id?$7599$XGD4L
                                                        g$foo$9346$XGD4L)))
                                                   g$ls/false$9345$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9347$XGD4L)
                                                (g$id$9105$XGD4L
                                                  g$foo$9347$XGD4L
                                                  '"make-"
                                                  (g$stx->datum$7610$XGD4L
                                                    g$foo$9347$XGD4L))))
                                             g$ls/false$9345$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9344$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9344$XGD4L
                                        'any))))
                                  g$t$9339$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9339$XGD4L
                              '(any any any)))))
                        g$spec$9338$XGD4L))))
                  (g$get-record-predicate-name$9108$XGD4L
                    (case-lambda
                      ((g$spec$9328$XGD4L)
                       ((case-lambda
                          ((g$t$9329$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9330$XGD4L)
                               (if g$ls/false$9330$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$foo$9331$XGD4L
                                        g$make-foo$9332$XGD4L
                                        g$foo?$9333$XGD4L)
                                      g$foo?$9333$XGD4L))
                                   g$ls/false$9330$XGD4L)
                                 ((case-lambda
                                    ((g$t$9334$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9335$XGD4L)
                                         (if (if g$ls/false$9335$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9336$XGD4L)
                                                      (g$id?$7599$XGD4L
                                                        g$foo$9336$XGD4L)))
                                                   g$ls/false$9335$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9337$XGD4L)
                                                (g$id$9105$XGD4L
                                                  g$foo$9337$XGD4L
                                                  (g$stx->datum$7610$XGD4L
                                                    g$foo$9337$XGD4L)
                                                  '"?")))
                                             g$ls/false$9335$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9334$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9334$XGD4L
                                        'any))))
                                  g$t$9329$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9329$XGD4L
                              '(any any any)))))
                        g$spec$9328$XGD4L))))
                  (g$get-clause$9109$XGD4L
                    (case-lambda
                      ((g$id$9319$XGD4L g$ls$9320$XGD4L)
                       ((case-lambda
                          ((g$t$9321$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9322$XGD4L)
                               (if g$ls/false$9322$XGD4L
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9322$XGD4L)
                                 ((case-lambda
                                    ((g$t$9323$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9324$XGD4L)
                                         (if g$ls/false$9324$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$x$9325$XGD4L
                                                  g$rest$9326$XGD4L
                                                  g$ls$9327$XGD4L)
                                                (if (g$free-id=?$7603$XGD4L
                                                      (g$bless$7840$XGD4L
                                                        g$id$9319$XGD4L)
                                                      g$x$9325$XGD4L)
                                                  (cons
                                                    g$x$9325$XGD4L
                                                    g$rest$9326$XGD4L)
                                                  (g$get-clause$9109$XGD4L
                                                    g$id$9319$XGD4L
                                                    g$ls$9327$XGD4L))))
                                             g$ls/false$9324$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9323$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9323$XGD4L
                                        '((any . any) . any)))))
                                  g$t$9321$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L g$t$9321$XGD4L '()))))
                        g$ls$9320$XGD4L))))
                  (g$foo-rtd-code$9110$XGD4L
                    (case-lambda
                      ((g$name$9278$XGD4L
                         g$clause*$9279$XGD4L
                         g$parent-rtd-code$9280$XGD4L)
                       (letrec* ((g$convert-field-spec*$9281$XGD4L
                                   (case-lambda
                                     ((g$ls$9306$XGD4L)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9307$XGD4L)
                                                ((case-lambda
                                                   ((g$t$9308$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$9309$XGD4L)
                                                        (if g$ls/false$9309$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9310$XGD4L
                                                                 g$rest$9311$XGD4L)
                                                               (list
                                                                 'mutable
                                                                 g$name$9310$XGD4L)))
                                                            g$ls/false$9309$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$9312$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$9313$XGD4L)
                                                                  (if g$ls/false$9313$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9314$XGD4L
                                                                           g$rest$9315$XGD4L)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9314$XGD4L)))
                                                                      g$ls/false$9313$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$9316$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9317$XGD4L)
                                                                            (if g$ls/false$9317$XGD4L
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9318$XGD4L)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9318$XGD4L)))
                                                                                g$ls/false$9317$XGD4L)
                                                                              (g$syntax-violation$7983$XGD4L
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9316$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$9316$XGD4L
                                                                           'any))))
                                                                     g$t$9312$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$9312$XGD4L
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9308$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$9308$XGD4L
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9307$XGD4L)))
                                             g$ls$9306$XGD4L))))))
                         ((case-lambda
                            ((g$uid-code$9282$XGD4L
                               g$sealed?$9283$XGD4L
                               g$opaque?$9284$XGD4L
                               g$fields$9285$XGD4L)
                             (g$bless$7840$XGD4L
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9278$XGD4L)
                                 g$parent-rtd-code$9280$XGD4L
                                 g$uid-code$9282$XGD4L
                                 g$sealed?$9283$XGD4L
                                 g$opaque?$9284$XGD4L
                                 g$fields$9285$XGD4L))))
                          ((case-lambda
                             ((g$t$9286$XGD4L)
                              ((case-lambda
                                 ((g$ls/false$9287$XGD4L)
                                  (if g$ls/false$9287$XGD4L
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9287$XGD4L)
                                    ((case-lambda
                                       ((g$t$9288$XGD4L)
                                        ((case-lambda
                                           ((g$ls/false$9289$XGD4L)
                                            (if g$ls/false$9289$XGD4L
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9290$XGD4L)
                                                   (list
                                                     'quote
                                                     g$uid$9290$XGD4L)))
                                                g$ls/false$9289$XGD4L)
                                              ((case-lambda
                                                 ((g$t$9291$XGD4L)
                                                  ((case-lambda
                                                     ((g$ls/false$9292$XGD4L)
                                                      (if g$ls/false$9292$XGD4L
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9292$XGD4L)
                                                        (g$syntax-violation$7983$XGD4L
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9291$XGD4L))))
                                                   (g$syntax-dispatch$7877$XGD4L
                                                     g$t$9291$XGD4L
                                                     '_))))
                                               g$t$9288$XGD4L))))
                                         (g$syntax-dispatch$7877$XGD4L
                                           g$t$9288$XGD4L
                                           '(_ any)))))
                                     g$t$9286$XGD4L))))
                               (g$syntax-dispatch$7877$XGD4L
                                 g$t$9286$XGD4L
                                 '(_)))))
                           (g$get-clause$9109$XGD4L
                             'nongenerative
                             g$clause*$9279$XGD4L))
                          ((case-lambda
                             ((g$t$9293$XGD4L)
                              ((case-lambda
                                 ((g$ls/false$9294$XGD4L)
                                  (if g$ls/false$9294$XGD4L
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9294$XGD4L)
                                    ((case-lambda
                                       ((g$t$9295$XGD4L)
                                        ((case-lambda
                                           ((g$ls/false$9296$XGD4L)
                                            (if g$ls/false$9296$XGD4L
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9296$XGD4L)
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"invalid syntax"
                                                g$t$9295$XGD4L))))
                                         (g$syntax-dispatch$7877$XGD4L
                                           g$t$9295$XGD4L
                                           '_))))
                                     g$t$9293$XGD4L))))
                               (g$syntax-dispatch$7877$XGD4L
                                 g$t$9293$XGD4L
                                 '(_ #(atom #t))))))
                           (g$get-clause$9109$XGD4L
                             'sealed
                             g$clause*$9279$XGD4L))
                          ((case-lambda
                             ((g$t$9297$XGD4L)
                              ((case-lambda
                                 ((g$ls/false$9298$XGD4L)
                                  (if g$ls/false$9298$XGD4L
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9298$XGD4L)
                                    ((case-lambda
                                       ((g$t$9299$XGD4L)
                                        ((case-lambda
                                           ((g$ls/false$9300$XGD4L)
                                            (if g$ls/false$9300$XGD4L
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9300$XGD4L)
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"invalid syntax"
                                                g$t$9299$XGD4L))))
                                         (g$syntax-dispatch$7877$XGD4L
                                           g$t$9299$XGD4L
                                           '_))))
                                     g$t$9297$XGD4L))))
                               (g$syntax-dispatch$7877$XGD4L
                                 g$t$9297$XGD4L
                                 '(_ #(atom #t))))))
                           (g$get-clause$9109$XGD4L
                             'opaque
                             g$clause*$9279$XGD4L))
                          ((case-lambda
                             ((g$t$9301$XGD4L)
                              ((case-lambda
                                 ((g$ls/false$9302$XGD4L)
                                  (if g$ls/false$9302$XGD4L
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9303$XGD4L)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9281$XGD4L
                                             g$field-spec*$9303$XGD4L))))
                                      g$ls/false$9302$XGD4L)
                                    ((case-lambda
                                       ((g$t$9304$XGD4L)
                                        ((case-lambda
                                           ((g$ls/false$9305$XGD4L)
                                            (if g$ls/false$9305$XGD4L
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9305$XGD4L)
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"invalid syntax"
                                                g$t$9304$XGD4L))))
                                         (g$syntax-dispatch$7877$XGD4L
                                           g$t$9304$XGD4L
                                           '_))))
                                     g$t$9301$XGD4L))))
                               (g$syntax-dispatch$7877$XGD4L
                                 g$t$9301$XGD4L
                                 '(_ . each-any)))))
                           (g$get-clause$9109$XGD4L
                             'fields
                             g$clause*$9279$XGD4L)))))))
                  (g$parent-rtd-code$9111$XGD4L
                    (case-lambda
                      ((g$clause*$9266$XGD4L)
                       ((case-lambda
                          ((g$t$9267$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9268$XGD4L)
                               (if g$ls/false$9268$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$name$9269$XGD4L)
                                      (list
                                        'record-type-descriptor
                                        g$name$9269$XGD4L)))
                                   g$ls/false$9268$XGD4L)
                                 ((case-lambda
                                    ((g$t$9270$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9271$XGD4L)
                                         (if g$ls/false$9271$XGD4L
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9272$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$9273$XGD4L)
                                                        (if g$ls/false$9273$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9274$XGD4L
                                                                 g$rcd$9275$XGD4L)
                                                               g$rtd$9274$XGD4L))
                                                            g$ls/false$9273$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$9276$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$9277$XGD4L)
                                                                  (if g$ls/false$9277$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9277$XGD4L)
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9276$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$9276$XGD4L
                                                                 '#(atom #f)))))
                                                           g$t$9272$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$9272$XGD4L
                                                       '(_ any any)))))
                                                 (g$get-clause$9109$XGD4L
                                                   'parent-rtd
                                                   g$clause*$9266$XGD4L))))
                                             g$ls/false$9271$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9270$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9270$XGD4L
                                        '#(atom #f)))))
                                  g$t$9267$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9267$XGD4L
                              '(_ any)))))
                        (g$get-clause$9109$XGD4L
                          'parent
                          g$clause*$9266$XGD4L)))))
                  (g$parent-rcd-code$9112$XGD4L
                    (case-lambda
                      ((g$clause*$9254$XGD4L)
                       ((case-lambda
                          ((g$t$9255$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9256$XGD4L)
                               (if g$ls/false$9256$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$name$9257$XGD4L)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9257$XGD4L)))
                                   g$ls/false$9256$XGD4L)
                                 ((case-lambda
                                    ((g$t$9258$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9259$XGD4L)
                                         (if g$ls/false$9259$XGD4L
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9260$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$9261$XGD4L)
                                                        (if g$ls/false$9261$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9262$XGD4L
                                                                 g$rcd$9263$XGD4L)
                                                               g$rcd$9263$XGD4L))
                                                            g$ls/false$9261$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$9264$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$9265$XGD4L)
                                                                  (if g$ls/false$9265$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9265$XGD4L)
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9264$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$9264$XGD4L
                                                                 '#(atom #f)))))
                                                           g$t$9260$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$9260$XGD4L
                                                       '(_ any any)))))
                                                 (g$get-clause$9109$XGD4L
                                                   'parent-rtd
                                                   g$clause*$9254$XGD4L))))
                                             g$ls/false$9259$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9258$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9258$XGD4L
                                        '#(atom #f)))))
                                  g$t$9255$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9255$XGD4L
                              '(_ any)))))
                        (g$get-clause$9109$XGD4L
                          'parent
                          g$clause*$9254$XGD4L)))))
                  (g$foo-rcd-code$9113$XGD4L
                    (case-lambda
                      ((g$clause*$9250$XGD4L
                         g$foo-rtd$9251$XGD4L
                         g$protocol$9252$XGD4L
                         g$parent-rcd-code$9253$XGD4L)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9251$XGD4L
                         g$parent-rcd-code$9253$XGD4L
                         g$protocol$9252$XGD4L))))
                  (g$get-protocol-code$9114$XGD4L
                    (case-lambda
                      ((g$clause*$9244$XGD4L)
                       ((case-lambda
                          ((g$t$9245$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9246$XGD4L)
                               (if g$ls/false$9246$XGD4L
                                 (apply
                                   (case-lambda
                                     ((g$expr$9247$XGD4L) g$expr$9247$XGD4L))
                                   g$ls/false$9246$XGD4L)
                                 ((case-lambda
                                    ((g$t$9248$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9249$XGD4L)
                                         (if g$ls/false$9249$XGD4L
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9249$XGD4L)
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$t$9248$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9248$XGD4L
                                        '_))))
                                  g$t$9245$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9245$XGD4L
                              '(_ any)))))
                        (g$get-clause$9109$XGD4L
                          'protocol
                          g$clause*$9244$XGD4L)))))
                  (g$get-fields$9115$XGD4L
                    (case-lambda
                      ((g$clause*$9235$XGD4L)
                       ((case-lambda
                          ((g$t$9236$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9237$XGD4L)
                               (if g$ls/false$9237$XGD4L
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9237$XGD4L)
                                 ((case-lambda
                                    ((g$t$9238$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9239$XGD4L)
                                         (if g$ls/false$9239$XGD4L
                                           (apply
                                             (case-lambda
                                               ((g$f*$9240$XGD4L)
                                                g$f*$9240$XGD4L))
                                             g$ls/false$9239$XGD4L)
                                           ((case-lambda
                                              ((g$t$9241$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$9242$XGD4L)
                                                   (if g$ls/false$9242$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9243$XGD4L)
                                                          (g$get-fields$9115$XGD4L
                                                            g$rest$9243$XGD4L)))
                                                       g$ls/false$9242$XGD4L)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9241$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$9241$XGD4L
                                                  '(_ . any)))))
                                            g$t$9238$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9238$XGD4L
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9236$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L g$t$9236$XGD4L '()))))
                        g$clause*$9235$XGD4L))))
                  (g$get-mutator-indices$9116$XGD4L
                    (case-lambda
                      ((g$fields$9223$XGD4L)
                       ((letrec ((g$f$9224$XGD4L
                                   (case-lambda
                                     ((g$fields$9225$XGD4L g$i$9226$XGD4L)
                                      ((case-lambda
                                         ((g$t$9227$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$9228$XGD4L)
                                              (if g$ls/false$9228$XGD4L
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9228$XGD4L)
                                                ((case-lambda
                                                   ((g$t$9229$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$9230$XGD4L)
                                                        (if g$ls/false$9230$XGD4L
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9231$XGD4L)
                                                               (cons
                                                                 g$i$9226$XGD4L
                                                                 (g$f$9224$XGD4L
                                                                   g$rest$9231$XGD4L
                                                                   (+ g$i$9226$XGD4L
                                                                      '1)))))
                                                            g$ls/false$9230$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$9232$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$9233$XGD4L)
                                                                  (if g$ls/false$9233$XGD4L
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9234$XGD4L)
                                                                         (g$f$9224$XGD4L
                                                                           g$rest$9234$XGD4L
                                                                           (+ g$i$9226$XGD4L
                                                                              '1))))
                                                                      g$ls/false$9233$XGD4L)
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9232$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$9232$XGD4L
                                                                 '(_ . any)))))
                                                           g$t$9229$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$9229$XGD4L
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9227$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$9227$XGD4L
                                             '()))))
                                       g$fields$9225$XGD4L)))))
                          g$f$9224$XGD4L)
                        g$fields$9223$XGD4L
                        '0))))
                  (g$get-mutators$9117$XGD4L
                    (case-lambda
                      ((g$foo$9202$XGD4L g$fields$9203$XGD4L)
                       (letrec* ((g$gen-name$9204$XGD4L
                                   (case-lambda
                                     ((g$x$9222$XGD4L)
                                      (g$datum->syntax$7985$XGD4L
                                        g$foo$9202$XGD4L
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7986$XGD4L
                                                g$foo$9202$XGD4L))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7986$XGD4L
                                                g$x$9222$XGD4L))
                                            '"-set!")))))))
                         ((letrec ((g$f$9205$XGD4L
                                     (case-lambda
                                       ((g$fields$9206$XGD4L)
                                        ((case-lambda
                                           ((g$t$9207$XGD4L)
                                            ((case-lambda
                                               ((g$ls/false$9208$XGD4L)
                                                (if g$ls/false$9208$XGD4L
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9208$XGD4L)
                                                  ((case-lambda
                                                     ((g$t$9209$XGD4L)
                                                      ((case-lambda
                                                         ((g$ls/false$9210$XGD4L)
                                                          (if g$ls/false$9210$XGD4L
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9211$XGD4L
                                                                   g$accessor$9212$XGD4L
                                                                   g$mutator$9213$XGD4L
                                                                   g$rest$9214$XGD4L)
                                                                 (cons
                                                                   g$mutator$9213$XGD4L
                                                                   (g$f$9205$XGD4L
                                                                     g$rest$9214$XGD4L))))
                                                              g$ls/false$9210$XGD4L)
                                                            ((case-lambda
                                                               ((g$t$9215$XGD4L)
                                                                ((case-lambda
                                                                   ((g$ls/false$9216$XGD4L)
                                                                    (if g$ls/false$9216$XGD4L
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9217$XGD4L
                                                                             g$rest$9218$XGD4L)
                                                                           (cons
                                                                             (g$gen-name$9204$XGD4L
                                                                               g$name$9217$XGD4L)
                                                                             (g$f$9205$XGD4L
                                                                               g$rest$9218$XGD4L))))
                                                                        g$ls/false$9216$XGD4L)
                                                                      ((case-lambda
                                                                         ((g$t$9219$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9220$XGD4L)
                                                                              (if g$ls/false$9220$XGD4L
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9221$XGD4L)
                                                                                     (g$f$9205$XGD4L
                                                                                       g$rest$9221$XGD4L)))
                                                                                  g$ls/false$9220$XGD4L)
                                                                                (g$syntax-violation$7983$XGD4L
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9219$XGD4L))))
                                                                           (g$syntax-dispatch$7877$XGD4L
                                                                             g$t$9219$XGD4L
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9215$XGD4L))))
                                                                 (g$syntax-dispatch$7877$XGD4L
                                                                   g$t$9215$XGD4L
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9209$XGD4L))))
                                                       (g$syntax-dispatch$7877$XGD4L
                                                         g$t$9209$XGD4L
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9207$XGD4L))))
                                             (g$syntax-dispatch$7877$XGD4L
                                               g$t$9207$XGD4L
                                               '()))))
                                         g$fields$9206$XGD4L)))))
                            g$f$9205$XGD4L)
                          g$fields$9203$XGD4L)))))
                  (g$get-accessors$9118$XGD4L
                    (case-lambda
                      ((g$foo$9168$XGD4L g$fields$9169$XGD4L)
                       (letrec* ((g$gen-name$9170$XGD4L
                                   (case-lambda
                                     ((g$x$9201$XGD4L)
                                      (g$datum->syntax$7985$XGD4L
                                        g$foo$9168$XGD4L
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7986$XGD4L
                                                g$foo$9168$XGD4L))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7986$XGD4L
                                                g$x$9201$XGD4L)))))))))
                         (map (case-lambda
                                ((g$field$9171$XGD4L)
                                 ((case-lambda
                                    ((g$t$9172$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9173$XGD4L)
                                         (if (if g$ls/false$9173$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9174$XGD4L
                                                        g$accessor$9175$XGD4L
                                                        g$mutator$9176$XGD4L)
                                                      (g$id?$7599$XGD4L
                                                        g$accessor$9175$XGD4L)))
                                                   g$ls/false$9173$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9177$XGD4L
                                                  g$accessor$9178$XGD4L
                                                  g$mutator$9179$XGD4L)
                                                g$accessor$9178$XGD4L))
                                             g$ls/false$9173$XGD4L)
                                           ((case-lambda
                                              ((g$t$9180$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$9181$XGD4L)
                                                   (if (if g$ls/false$9181$XGD4L
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9182$XGD4L
                                                                  g$accessor$9183$XGD4L)
                                                                (g$id?$7599$XGD4L
                                                                  g$accessor$9183$XGD4L)))
                                                             g$ls/false$9181$XGD4L))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9184$XGD4L
                                                            g$accessor$9185$XGD4L)
                                                          g$accessor$9185$XGD4L))
                                                       g$ls/false$9181$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$9186$XGD4L)
                                                         ((case-lambda
                                                            ((g$ls/false$9187$XGD4L)
                                                             (if (if g$ls/false$9187$XGD4L
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9188$XGD4L)
                                                                          (g$id?$7599$XGD4L
                                                                            g$name$9188$XGD4L)))
                                                                       g$ls/false$9187$XGD4L))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9189$XGD4L)
                                                                    (g$gen-name$9170$XGD4L
                                                                      g$name$9189$XGD4L)))
                                                                 g$ls/false$9187$XGD4L)
                                                               ((case-lambda
                                                                  ((g$t$9190$XGD4L)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9191$XGD4L)
                                                                       (if (if g$ls/false$9191$XGD4L
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9192$XGD4L)
                                                                                    (g$id?$7599$XGD4L
                                                                                      g$name$9192$XGD4L)))
                                                                                 g$ls/false$9191$XGD4L))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9193$XGD4L)
                                                                              (g$gen-name$9170$XGD4L
                                                                                g$name$9193$XGD4L)))
                                                                           g$ls/false$9191$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$t$9194$XGD4L)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9195$XGD4L)
                                                                                 (if (if g$ls/false$9195$XGD4L
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9196$XGD4L)
                                                                                              (g$id?$7599$XGD4L
                                                                                                g$name$9196$XGD4L)))
                                                                                           g$ls/false$9195$XGD4L))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9197$XGD4L)
                                                                                        (g$gen-name$9170$XGD4L
                                                                                          g$name$9197$XGD4L)))
                                                                                     g$ls/false$9195$XGD4L)
                                                                                   ((case-lambda
                                                                                      ((g$t$9198$XGD4L)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9199$XGD4L)
                                                                                           (if g$ls/false$9199$XGD4L
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9200$XGD4L)
                                                                                                  (g$syntax-violation$7983$XGD4L
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9171$XGD4L)))
                                                                                               g$ls/false$9199$XGD4L)
                                                                                             (g$syntax-violation$7983$XGD4L
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9198$XGD4L))))
                                                                                        (g$syntax-dispatch$7877$XGD4L
                                                                                          g$t$9198$XGD4L
                                                                                          'any))))
                                                                                    g$t$9194$XGD4L))))
                                                                              (g$syntax-dispatch$7877$XGD4L
                                                                                g$t$9194$XGD4L
                                                                                'any))))
                                                                          g$t$9190$XGD4L))))
                                                                    (g$syntax-dispatch$7877$XGD4L
                                                                      g$t$9190$XGD4L
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9186$XGD4L))))
                                                          (g$syntax-dispatch$7877$XGD4L
                                                            g$t$9186$XGD4L
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9180$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$9180$XGD4L
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9172$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9172$XGD4L
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9171$XGD4L)))
                              g$fields$9169$XGD4L)))))
                  (g$enumerate$9119$XGD4L
                    (case-lambda
                      ((g$ls$9164$XGD4L)
                       ((letrec ((g$f$9165$XGD4L
                                   (case-lambda
                                     ((g$ls$9166$XGD4L g$i$9167$XGD4L)
                                      (if (null? g$ls$9166$XGD4L)
                                        '()
                                        (cons
                                          g$i$9167$XGD4L
                                          (g$f$9165$XGD4L
                                            (cdr g$ls$9166$XGD4L)
                                            (+ g$i$9167$XGD4L '1))))))))
                          g$f$9165$XGD4L)
                        g$ls$9164$XGD4L
                        '0))))
                  (g$do-define-record$9120$XGD4L
                    (case-lambda
                      ((g$namespec$9144$XGD4L g$clause*$9145$XGD4L)
                       ((case-lambda
                          ((g$foo$9146$XGD4L)
                           ((case-lambda
                              ((g$foo-rtd$9147$XGD4L)
                               ((case-lambda
                                  ((g$foo-rcd$9148$XGD4L)
                                   ((case-lambda
                                      ((g$protocol$9149$XGD4L)
                                       ((case-lambda
                                          ((g$make-foo$9150$XGD4L)
                                           ((case-lambda
                                              ((g$fields$9151$XGD4L)
                                               ((case-lambda
                                                  ((g$idx*$9152$XGD4L)
                                                   ((case-lambda
                                                      ((g$foo-x*$9153$XGD4L)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9154$XGD4L)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9155$XGD4L)
                                                               ((case-lambda
                                                                  ((g$foo?$9156$XGD4L)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9157$XGD4L)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9158$XGD4L)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9159$XGD4L)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7840$XGD4L
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9147$XGD4L
                                                                                           g$foo-rtd-code$9157$XGD4L)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9149$XGD4L
                                                                                             g$protocol-code$9159$XGD4L)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9148$XGD4L
                                                                                               g$foo-rcd-code$9158$XGD4L)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9146$XGD4L
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9147$XGD4L)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9148$XGD4L)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9156$XGD4L
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9147$XGD4L))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9150$XGD4L
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9148$XGD4L))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9160$XGD4L
                                                                                                               g$idx$9161$XGD4L)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9160$XGD4L
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9147$XGD4L
                                                                                                                 g$idx$9161$XGD4L))))
                                                                                                          g$foo-x*$9153$XGD4L
                                                                                                          g$idx*$9152$XGD4L)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9162$XGD4L
                                                                                                               g$idx$9163$XGD4L)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9162$XGD4L
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9147$XGD4L
                                                                                                                 g$idx$9163$XGD4L))))
                                                                                                          g$set-foo-x!*$9154$XGD4L
                                                                                                          g$set-foo-idx*$9155$XGD4L)))))))))))))))
                                                                            (g$get-protocol-code$9114$XGD4L
                                                                              g$clause*$9145$XGD4L))))
                                                                        (g$foo-rcd-code$9113$XGD4L
                                                                          g$clause*$9145$XGD4L
                                                                          g$foo-rtd$9147$XGD4L
                                                                          g$protocol$9149$XGD4L
                                                                          (g$parent-rcd-code$9112$XGD4L
                                                                            g$clause*$9145$XGD4L)))))
                                                                    (g$foo-rtd-code$9110$XGD4L
                                                                      g$foo$9146$XGD4L
                                                                      g$clause*$9145$XGD4L
                                                                      (g$parent-rtd-code$9111$XGD4L
                                                                        g$clause*$9145$XGD4L)))))
                                                                (g$get-record-predicate-name$9108$XGD4L
                                                                  g$namespec$9144$XGD4L))))
                                                            (g$get-mutator-indices$9116$XGD4L
                                                              g$fields$9151$XGD4L))))
                                                        (g$get-mutators$9117$XGD4L
                                                          g$foo$9146$XGD4L
                                                          g$fields$9151$XGD4L))))
                                                    (g$get-accessors$9118$XGD4L
                                                      g$foo$9146$XGD4L
                                                      g$fields$9151$XGD4L))))
                                                (g$enumerate$9119$XGD4L
                                                  g$fields$9151$XGD4L))))
                                            (g$get-fields$9115$XGD4L
                                              g$clause*$9145$XGD4L))))
                                        (g$get-record-constructor-name$9107$XGD4L
                                          g$namespec$9144$XGD4L))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9106$XGD4L g$namespec$9144$XGD4L)))))
                  (g$verify-clauses$9121$XGD4L
                    (case-lambda
                      ((g$x$9126$XGD4L g$cls*$9127$XGD4L)
                       (letrec* ((g$valid-kwds$9128$XGD4L
                                   (map g$bless$7840$XGD4L
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9129$XGD4L
                                   (case-lambda
                                     ((g$x$9141$XGD4L g$ls$9142$XGD4L)
                                      (if (pair? g$ls$9142$XGD4L)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9143$XGD4L)
                                              (if g$t$9143$XGD4L
                                                g$t$9143$XGD4L
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9129$XGD4L
                                                    g$x$9141$XGD4L
                                                    (cdr g$ls$9142$XGD4L))))))
                                           (g$free-id=?$7603$XGD4L
                                             g$x$9141$XGD4L
                                             (car g$ls$9142$XGD4L))))
                                        '#f)))))
                         ((letrec ((g$f$9130$XGD4L
                                     (case-lambda
                                       ((g$cls*$9131$XGD4L g$seen*$9132$XGD4L)
                                        (if (null? g$cls*$9131$XGD4L)
                                          (void)
                                          ((case-lambda
                                             ((g$t$9133$XGD4L)
                                              ((case-lambda
                                                 ((g$ls/false$9134$XGD4L)
                                                  (if g$ls/false$9134$XGD4L
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9135$XGD4L
                                                           g$rest$9136$XGD4L)
                                                         (if ((case-lambda
                                                                ((g$t$9137$XGD4L)
                                                                 (if g$t$9137$XGD4L
                                                                   g$t$9137$XGD4L
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9129$XGD4L
                                                                            g$kwd$9135$XGD4L
                                                                            g$valid-kwds$9128$XGD4L))))))
                                                              (not (g$id?$7599$XGD4L
                                                                     g$kwd$9135$XGD4L)))
                                                           (g$syntax-violation$7983$XGD4L
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9135$XGD4L)
                                                           (if (g$bound-id-member?$7606$XGD4L
                                                                 g$kwd$9135$XGD4L
                                                                 g$seen*$9132$XGD4L)
                                                             (g$syntax-violation$7983$XGD4L
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9126$XGD4L
                                                               g$kwd$9135$XGD4L)
                                                             (g$f$9130$XGD4L
                                                               (cdr g$cls*$9131$XGD4L)
                                                               (cons
                                                                 g$kwd$9135$XGD4L
                                                                 g$seen*$9132$XGD4L))))))
                                                      g$ls/false$9134$XGD4L)
                                                    ((case-lambda
                                                       ((g$t$9138$XGD4L)
                                                        ((case-lambda
                                                           ((g$ls/false$9139$XGD4L)
                                                            (if g$ls/false$9139$XGD4L
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9140$XGD4L)
                                                                   (g$syntax-violation$7983$XGD4L
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9140$XGD4L)))
                                                                g$ls/false$9139$XGD4L)
                                                              (g$syntax-violation$7983$XGD4L
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9138$XGD4L))))
                                                         (g$syntax-dispatch$7877$XGD4L
                                                           g$t$9138$XGD4L
                                                           'any))))
                                                     g$t$9133$XGD4L))))
                                               (g$syntax-dispatch$7877$XGD4L
                                                 g$t$9133$XGD4L
                                                 '(any . any)))))
                                           (car g$cls*$9131$XGD4L)))))))
                            g$f$9130$XGD4L)
                          g$cls*$9127$XGD4L
                          '()))))))
          ((case-lambda
             ((g$t$9122$XGD4L)
              ((case-lambda
                 ((g$ls/false$9123$XGD4L)
                  (if g$ls/false$9123$XGD4L
                    (apply
                      (case-lambda
                        ((g$namespec$9124$XGD4L g$clause*$9125$XGD4L)
                         (begin
                           (g$verify-clauses$9121$XGD4L
                             g$x$9104$XGD4L
                             g$clause*$9125$XGD4L)
                           (g$do-define-record$9120$XGD4L
                             g$namespec$9124$XGD4L
                             g$clause*$9125$XGD4L))))
                      g$ls/false$9123$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$9122$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$9122$XGD4L
                 '(_ any . each-any)))))
           g$x$9104$XGD4L)))))
   (g$define-condition-type-macro$7872$XGD4L
     g$define-condition-type-macro$11322$XGD4L
     (case-lambda
       ((g$x$9360$XGD4L)
        (letrec* ((g$mkname$9361$XGD4L
                    (case-lambda
                      ((g$name$9384$XGD4L g$suffix$9385$XGD4L)
                       (g$datum->syntax$7985$XGD4L
                         g$name$9384$XGD4L
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7986$XGD4L g$name$9384$XGD4L))
                             g$suffix$9385$XGD4L)))))))
          ((case-lambda
             ((g$t$9362$XGD4L)
              ((case-lambda
                 ((g$ls/false$9363$XGD4L)
                  (if (if g$ls/false$9363$XGD4L
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9364$XGD4L
                                 g$name$9365$XGD4L
                                 g$super$9366$XGD4L
                                 g$constructor$9367$XGD4L
                                 g$predicate$9368$XGD4L
                                 g$field*$9369$XGD4L
                                 g$accessor*$9370$XGD4L)
                               (if (g$id?$7599$XGD4L g$name$9365$XGD4L)
                                 (if (g$id?$7599$XGD4L g$super$9366$XGD4L)
                                   (if (g$id?$7599$XGD4L
                                         g$constructor$9367$XGD4L)
                                     (if (g$id?$7599$XGD4L
                                           g$predicate$9368$XGD4L)
                                       (if (g$for-all$5871$XGD4L
                                             g$id?$7599$XGD4L
                                             g$field*$9369$XGD4L)
                                         (begin
                                           '#f
                                           (g$for-all$5871$XGD4L
                                             g$id?$7599$XGD4L
                                             g$accessor*$9370$XGD4L))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9363$XGD4L))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9371$XGD4L
                           g$name$9372$XGD4L
                           g$super$9373$XGD4L
                           g$constructor$9374$XGD4L
                           g$predicate$9375$XGD4L
                           g$field*$9376$XGD4L
                           g$accessor*$9377$XGD4L)
                         ((case-lambda
                            ((g$aux-accessor*$9378$XGD4L)
                             (g$bless$7840$XGD4L
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9372$XGD4L
                                         g$constructor$9374$XGD4L
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9373$XGD4L)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9379$XGD4L
                                                       g$aux$9380$XGD4L)
                                                     (list
                                                       'immutable
                                                       g$field$9379$XGD4L
                                                       g$aux$9380$XGD4L)))
                                                  g$field*$9376$XGD4L
                                                  g$aux-accessor*$9378$XGD4L))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9375$XGD4L
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9372$XGD4L)))
                                     (map (case-lambda
                                            ((g$accessor$9381$XGD4L
                                               g$aux$9382$XGD4L)
                                             (list
                                               'define
                                               g$accessor$9381$XGD4L
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9372$XGD4L)
                                                 g$aux$9382$XGD4L))))
                                          g$accessor*$9377$XGD4L
                                          g$aux-accessor*$9378$XGD4L)))))))
                          (map (case-lambda ((g$x$9383$XGD4L) (gensym)))
                               g$accessor*$9377$XGD4L))))
                      g$ls/false$9363$XGD4L)
                    (g$syntax-violation$7983$XGD4L
                      '#f
                      '"invalid syntax"
                      g$t$9362$XGD4L))))
               (g$syntax-dispatch$7877$XGD4L
                 g$t$9362$XGD4L
                 '(any any any any any . #(each (any any)))))))
           g$x$9360$XGD4L)))))
   (g$incorrect-usage-macro$7873$XGD4L
     g$incorrect-usage-macro$11323$XGD4L
     (case-lambda
       ((g$e$9386$XGD4L)
        (g$syntax-violation$7983$XGD4L
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9386$XGD4L))))
   (g$parameterize-transformer$7874$XGD4L
     g$parameterize-transformer$11324$XGD4L
     (case-lambda
       ((g$e$9387$XGD4L g$r$9388$XGD4L g$mr$9389$XGD4L)
        ((case-lambda
           ((g$t$9390$XGD4L)
            ((case-lambda
               ((g$ls/false$9391$XGD4L)
                (if g$ls/false$9391$XGD4L
                  (apply
                    (case-lambda
                      ((g$b$9392$XGD4L g$b*$9393$XGD4L)
                       (g$chi-internal$7906$XGD4L
                         (cons g$b$9392$XGD4L g$b*$9393$XGD4L)
                         g$r$9388$XGD4L
                         g$mr$9389$XGD4L)))
                    g$ls/false$9391$XGD4L)
                  ((case-lambda
                     ((g$t$9394$XGD4L)
                      ((case-lambda
                         ((g$ls/false$9395$XGD4L)
                          (if g$ls/false$9395$XGD4L
                            (apply
                              (case-lambda
                                ((g$olhs*$9396$XGD4L
                                   g$orhs*$9397$XGD4L
                                   g$b$9398$XGD4L
                                   g$b*$9399$XGD4L)
                                 ((case-lambda
                                    ((g$lhs*$9400$XGD4L
                                       g$rhs*$9401$XGD4L
                                       g$t*$9402$XGD4L
                                       g$swap$9403$XGD4L)
                                     (g$build-let$7532$XGD4L
                                       '#f
                                       (append
                                         g$lhs*$9400$XGD4L
                                         g$rhs*$9401$XGD4L)
                                       (append
                                         (g$chi-expr*$7893$XGD4L
                                           g$olhs*$9396$XGD4L
                                           g$r$9388$XGD4L
                                           g$mr$9389$XGD4L)
                                         (g$chi-expr*$7893$XGD4L
                                           g$orhs*$9397$XGD4L
                                           g$r$9388$XGD4L
                                           g$mr$9389$XGD4L))
                                       (g$build-let$7532$XGD4L
                                         '#f
                                         (list g$swap$9403$XGD4L)
                                         (list
                                           (g$build-lambda$7530$XGD4L
                                             '#f
                                             '()
                                             (g$build-sequence$7533$XGD4L
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$9404$XGD4L
                                                         g$lhs$9405$XGD4L
                                                         g$rhs$9406$XGD4L)
                                                       (g$build-let$7532$XGD4L
                                                         '#f
                                                         (list g$t$9404$XGD4L)
                                                         (list
                                                           (list
                                                             g$lhs$9405$XGD4L))
                                                         (g$build-sequence$7533$XGD4L
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$9405$XGD4L
                                                               g$rhs$9406$XGD4L)
                                                             (list
                                                               'set!
                                                               g$rhs$9406$XGD4L
                                                               g$t$9404$XGD4L))))))
                                                    g$t*$9402$XGD4L
                                                    g$lhs*$9400$XGD4L
                                                    g$rhs*$9401$XGD4L))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$9403$XGD4L
                                           (g$build-lambda$7530$XGD4L
                                             '#f
                                             '()
                                             (g$chi-internal$7906$XGD4L
                                               (cons
                                                 g$b$9398$XGD4L
                                                 g$b*$9399$XGD4L)
                                               g$r$9388$XGD4L
                                               g$mr$9389$XGD4L))
                                           g$swap$9403$XGD4L)))))
                                  (map (case-lambda
                                         ((g$x$9407$XGD4L)
                                          (g$gen-lexical$7543$XGD4L 'lhs)))
                                       g$olhs*$9396$XGD4L)
                                  (map (case-lambda
                                         ((g$x$9408$XGD4L)
                                          (g$gen-lexical$7543$XGD4L 'rhs)))
                                       g$olhs*$9396$XGD4L)
                                  (map (case-lambda
                                         ((g$x$9409$XGD4L)
                                          (g$gen-lexical$7543$XGD4L 't)))
                                       g$olhs*$9396$XGD4L)
                                  (g$gen-lexical$7543$XGD4L 'swap))))
                              g$ls/false$9395$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$9394$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$9394$XGD4L
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9390$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$9390$XGD4L
               '(_ () any . each-any)))))
         g$e$9387$XGD4L))))
   (g$foreign-call-transformer$7875$XGD4L
     g$foreign-call-transformer$11325$XGD4L
     (case-lambda
       ((g$e$9410$XGD4L g$r$9411$XGD4L g$mr$9412$XGD4L)
        ((case-lambda
           ((g$t$9413$XGD4L)
            ((case-lambda
               ((g$ls/false$9414$XGD4L)
                (if g$ls/false$9414$XGD4L
                  (apply
                    (case-lambda
                      ((g$name$9415$XGD4L g$arg*$9416$XGD4L)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7895$XGD4L
                             g$name$9415$XGD4L
                             g$r$9411$XGD4L
                             g$mr$9412$XGD4L)
                           (g$chi-expr*$7893$XGD4L
                             g$arg*$9416$XGD4L
                             g$r$9411$XGD4L
                             g$mr$9412$XGD4L)))))
                    g$ls/false$9414$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$9413$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$9413$XGD4L
               '(_ any . each-any)))))
         g$e$9410$XGD4L))))
   (g$convert-pattern$7876$XGD4L
     g$convert-pattern$11326$XGD4L
     (case-lambda
       ((g$pattern$9417$XGD4L g$keys$9418$XGD4L)
        (letrec* ((g$cvt*$9419$XGD4L
                    (case-lambda
                      ((g$p*$9499$XGD4L g$n$9500$XGD4L g$ids$9501$XGD4L)
                       (if (null? g$p*$9499$XGD4L)
                         (values '() g$ids$9501$XGD4L)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9419$XGD4L
                                (cdr g$p*$9499$XGD4L)
                                g$n$9500$XGD4L
                                g$ids$9501$XGD4L)))
                           (case-lambda
                             ((g$y$9504$XGD4L g$ids$9505$XGD4L)
                              ((case-lambda
                                 ((g$ids$9506$XGD4L g$y$9507$XGD4L)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9420$XGD4L
                                         (car g$p*$9499$XGD4L)
                                         g$n$9500$XGD4L
                                         g$ids$9506$XGD4L)))
                                    (case-lambda
                                      ((g$x$9510$XGD4L g$ids$9511$XGD4L)
                                       ((case-lambda
                                          ((g$ids$9512$XGD4L g$x$9513$XGD4L)
                                           (values
                                             (cons
                                               g$x$9513$XGD4L
                                               g$y$9507$XGD4L)
                                             g$ids$9512$XGD4L)))
                                        g$ids$9511$XGD4L
                                        g$x$9510$XGD4L))))))
                               g$ids$9505$XGD4L
                               g$y$9504$XGD4L))))))))
                  (g$cvt$9420$XGD4L
                    (case-lambda
                      ((g$p$9421$XGD4L g$n$9422$XGD4L g$ids$9423$XGD4L)
                       ((case-lambda
                          ((g$t$9424$XGD4L)
                           ((case-lambda
                              ((g$ls/false$9425$XGD4L)
                               (if (if g$ls/false$9425$XGD4L
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9426$XGD4L)
                                            (g$id?$7599$XGD4L g$id$9426$XGD4L)))
                                         g$ls/false$9425$XGD4L))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9427$XGD4L)
                                      (if (g$bound-id-member?$7606$XGD4L
                                            g$p$9421$XGD4L
                                            g$keys$9418$XGD4L)
                                        (values
                                          (vector 'free-id g$p$9421$XGD4L)
                                          g$ids$9423$XGD4L)
                                        (if (g$free-id=?$7603$XGD4L
                                              g$p$9421$XGD4L
                                              (g$scheme-stx$7820$XGD4L '_))
                                          (values '_ g$ids$9423$XGD4L)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9421$XGD4L
                                                g$n$9422$XGD4L)
                                              g$ids$9423$XGD4L))))))
                                   g$ls/false$9425$XGD4L)
                                 ((case-lambda
                                    ((g$t$9428$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$9429$XGD4L)
                                         (if (if g$ls/false$9429$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9430$XGD4L
                                                        g$dots$9431$XGD4L)
                                                      (g$ellipsis?$7878$XGD4L
                                                        g$dots$9431$XGD4L)))
                                                   g$ls/false$9429$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9432$XGD4L
                                                  g$dots$9433$XGD4L)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9420$XGD4L
                                                       g$p$9432$XGD4L
                                                       (+ g$n$9422$XGD4L '1)
                                                       g$ids$9423$XGD4L)))
                                                  (case-lambda
                                                    ((g$p$9436$XGD4L
                                                       g$ids$9437$XGD4L)
                                                     ((case-lambda
                                                        ((g$ids$9438$XGD4L
                                                           g$p$9439$XGD4L)
                                                         (values
                                                           (if (eq? g$p$9439$XGD4L
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9439$XGD4L))
                                                           g$ids$9438$XGD4L)))
                                                      g$ids$9437$XGD4L
                                                      g$p$9436$XGD4L))))))
                                             g$ls/false$9429$XGD4L)
                                           ((case-lambda
                                              ((g$t$9440$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$9441$XGD4L)
                                                   (if (if g$ls/false$9441$XGD4L
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9442$XGD4L
                                                                  g$dots$9443$XGD4L
                                                                  g$ys$9444$XGD4L
                                                                  g$z$9445$XGD4L)
                                                                (g$ellipsis?$7878$XGD4L
                                                                  g$dots$9443$XGD4L)))
                                                             g$ls/false$9441$XGD4L))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9446$XGD4L
                                                            g$dots$9447$XGD4L
                                                            g$ys$9448$XGD4L
                                                            g$z$9449$XGD4L)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9420$XGD4L
                                                                 g$z$9449$XGD4L
                                                                 g$n$9422$XGD4L
                                                                 g$ids$9423$XGD4L)))
                                                            (case-lambda
                                                              ((g$z$9452$XGD4L
                                                                 g$ids$9453$XGD4L)
                                                               ((case-lambda
                                                                  ((g$ids$9454$XGD4L
                                                                     g$z$9455$XGD4L)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9419$XGD4L
                                                                          g$ys$9448$XGD4L
                                                                          g$n$9422$XGD4L
                                                                          g$ids$9454$XGD4L)))
                                                                     (case-lambda
                                                                       ((g$ys$9458$XGD4L
                                                                          g$ids$9459$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ids$9460$XGD4L
                                                                              g$ys$9461$XGD4L)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9420$XGD4L
                                                                                   g$x$9446$XGD4L
                                                                                   (+ g$n$9422$XGD4L
                                                                                      '1)
                                                                                   g$ids$9460$XGD4L)))
                                                                              (case-lambda
                                                                                ((g$x$9464$XGD4L
                                                                                   g$ids$9465$XGD4L)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9466$XGD4L
                                                                                       g$x$9467$XGD4L)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9467$XGD4L
                                                                                         (reverse
                                                                                           g$ys$9461$XGD4L)
                                                                                         g$z$9455$XGD4L)
                                                                                       g$ids$9466$XGD4L)))
                                                                                  g$ids$9465$XGD4L
                                                                                  g$x$9464$XGD4L))))))
                                                                         g$ids$9459$XGD4L
                                                                         g$ys$9458$XGD4L))))))
                                                                g$ids$9453$XGD4L
                                                                g$z$9452$XGD4L))))))
                                                       g$ls/false$9441$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$9468$XGD4L)
                                                         ((case-lambda
                                                            ((g$ls/false$9469$XGD4L)
                                                             (if g$ls/false$9469$XGD4L
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9470$XGD4L
                                                                      g$y$9471$XGD4L)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9420$XGD4L
                                                                           g$y$9471$XGD4L
                                                                           g$n$9422$XGD4L
                                                                           g$ids$9423$XGD4L)))
                                                                      (case-lambda
                                                                        ((g$y$9474$XGD4L
                                                                           g$ids$9475$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$ids$9476$XGD4L
                                                                               g$y$9477$XGD4L)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9420$XGD4L
                                                                                    g$x$9470$XGD4L
                                                                                    g$n$9422$XGD4L
                                                                                    g$ids$9476$XGD4L)))
                                                                               (case-lambda
                                                                                 ((g$x$9480$XGD4L
                                                                                    g$ids$9481$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9482$XGD4L
                                                                                        g$x$9483$XGD4L)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9483$XGD4L
                                                                                          g$y$9477$XGD4L)
                                                                                        g$ids$9482$XGD4L)))
                                                                                   g$ids$9481$XGD4L
                                                                                   g$x$9480$XGD4L))))))
                                                                          g$ids$9475$XGD4L
                                                                          g$y$9474$XGD4L))))))
                                                                 g$ls/false$9469$XGD4L)
                                                               ((case-lambda
                                                                  ((g$t$9484$XGD4L)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9485$XGD4L)
                                                                       (if g$ls/false$9485$XGD4L
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9423$XGD4L)))
                                                                           g$ls/false$9485$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$t$9486$XGD4L)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9487$XGD4L)
                                                                                 (if (if g$ls/false$9487$XGD4L
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9488$XGD4L)
                                                                                              (not (g$stx?$7571$XGD4L
                                                                                                     g$p$9488$XGD4L))))
                                                                                           g$ls/false$9487$XGD4L))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9489$XGD4L)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9420$XGD4L
                                                                                               g$p$9489$XGD4L
                                                                                               g$n$9422$XGD4L
                                                                                               g$ids$9423$XGD4L)))
                                                                                          (case-lambda
                                                                                            ((g$p$9492$XGD4L
                                                                                               g$ids$9493$XGD4L)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9494$XGD4L
                                                                                                   g$p$9495$XGD4L)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9495$XGD4L)
                                                                                                   g$ids$9494$XGD4L)))
                                                                                              g$ids$9493$XGD4L
                                                                                              g$p$9492$XGD4L))))))
                                                                                     g$ls/false$9487$XGD4L)
                                                                                   ((case-lambda
                                                                                      ((g$t$9496$XGD4L)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9497$XGD4L)
                                                                                           (if g$ls/false$9497$XGD4L
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9498$XGD4L)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7610$XGD4L
                                                                                                        g$datum$9498$XGD4L))
                                                                                                    g$ids$9423$XGD4L)))
                                                                                               g$ls/false$9497$XGD4L)
                                                                                             (g$syntax-violation$7983$XGD4L
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9496$XGD4L))))
                                                                                        (g$syntax-dispatch$7877$XGD4L
                                                                                          g$t$9496$XGD4L
                                                                                          'any))))
                                                                                    g$t$9486$XGD4L))))
                                                                              (g$syntax-dispatch$7877$XGD4L
                                                                                g$t$9486$XGD4L
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9484$XGD4L))))
                                                                    (g$syntax-dispatch$7877$XGD4L
                                                                      g$t$9484$XGD4L
                                                                      '()))))
                                                                g$t$9468$XGD4L))))
                                                          (g$syntax-dispatch$7877$XGD4L
                                                            g$t$9468$XGD4L
                                                            '(any . any)))))
                                                      g$t$9440$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$9440$XGD4L
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9428$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$9428$XGD4L
                                        '(any any)))))
                                  g$t$9424$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$9424$XGD4L
                              'any))))
                        g$p$9421$XGD4L)))))
          (g$cvt$9420$XGD4L g$pattern$9417$XGD4L '0 '())))))
   (g$syntax-dispatch$7877$XGD4L
     g$syntax-dispatch$11327$XGD4L
     (case-lambda
       ((g$e$9514$XGD4L g$p$9515$XGD4L)
        (letrec* ((g$stx^$9516$XGD4L
                    (case-lambda
                      ((g$e$9624$XGD4L
                         g$m*$9625$XGD4L
                         g$s*$9626$XGD4L
                         g$ae*$9627$XGD4L)
                       (if (if (null? g$m*$9625$XGD4L)
                             (if (null? g$s*$9626$XGD4L)
                               (begin '#f (null? g$ae*$9627$XGD4L))
                               '#f)
                             '#f)
                         g$e$9624$XGD4L
                         (g$mkstx$7587$XGD4L
                           g$e$9624$XGD4L
                           g$m*$9625$XGD4L
                           g$s*$9626$XGD4L
                           g$ae*$9627$XGD4L)))))
                  (g$match-each$9517$XGD4L
                    (case-lambda
                      ((g$e$9608$XGD4L
                         g$p$9609$XGD4L
                         g$m*$9610$XGD4L
                         g$s*$9611$XGD4L
                         g$ae*$9612$XGD4L)
                       (if (pair? g$e$9608$XGD4L)
                         ((case-lambda
                            ((g$first$9613$XGD4L)
                             (if g$first$9613$XGD4L
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9614$XGD4L)
                                     (if g$rest$9614$XGD4L
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9613$XGD4L
                                           g$rest$9614$XGD4L))
                                       '#f)))
                                  (g$match-each$9517$XGD4L
                                    (cdr g$e$9608$XGD4L)
                                    g$p$9609$XGD4L
                                    g$m*$9610$XGD4L
                                    g$s*$9611$XGD4L
                                    g$ae*$9612$XGD4L)))
                               '#f)))
                          (g$match$9523$XGD4L
                            (car g$e$9608$XGD4L)
                            g$p$9609$XGD4L
                            g$m*$9610$XGD4L
                            g$s*$9611$XGD4L
                            g$ae*$9612$XGD4L
                            '()))
                         (if (null? g$e$9608$XGD4L)
                           '()
                           (if (g$stx?$7571$XGD4L g$e$9608$XGD4L)
                             (if (not (g$top-marked?$7542$XGD4L
                                        g$m*$9610$XGD4L))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7586$XGD4L
                                        g$m*$9610$XGD4L
                                        g$s*$9611$XGD4L
                                        g$ae*$9612$XGD4L
                                        g$e$9608$XGD4L)))
                                   (case-lambda
                                     ((g$m*$9618$XGD4L
                                        g$s*$9619$XGD4L
                                        g$ae*$9620$XGD4L)
                                      ((case-lambda
                                         ((g$ae*$9621$XGD4L
                                            g$s*$9622$XGD4L
                                            g$m*$9623$XGD4L)
                                          (g$match-each$9517$XGD4L
                                            (g$stx-expr$7573$XGD4L
                                              g$e$9608$XGD4L)
                                            g$p$9609$XGD4L
                                            g$m*$9623$XGD4L
                                            g$s*$9622$XGD4L
                                            g$ae*$9621$XGD4L)))
                                       g$ae*$9620$XGD4L
                                       g$s*$9619$XGD4L
                                       g$m*$9618$XGD4L)))))
                               '#f)
                             (if (annotation? g$e$9608$XGD4L)
                               (g$match-each$9517$XGD4L
                                 (annotation-expression g$e$9608$XGD4L)
                                 g$p$9609$XGD4L
                                 g$m*$9610$XGD4L
                                 g$s*$9611$XGD4L
                                 g$ae*$9612$XGD4L)
                               '#f)))))))
                  (g$match-each+$9518$XGD4L
                    (case-lambda
                      ((g$e$9576$XGD4L
                         g$x-pat$9577$XGD4L
                         g$y-pat$9578$XGD4L
                         g$z-pat$9579$XGD4L
                         g$m*$9580$XGD4L
                         g$s*$9581$XGD4L
                         g$ae*$9582$XGD4L
                         g$r$9583$XGD4L)
                       ((letrec ((g$f$9584$XGD4L
                                   (case-lambda
                                     ((g$e$9585$XGD4L
                                        g$m*$9586$XGD4L
                                        g$s*$9587$XGD4L
                                        g$ae*$9588$XGD4L)
                                      (if (pair? g$e$9585$XGD4L)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9584$XGD4L
                                               (cdr g$e$9585$XGD4L)
                                               g$m*$9586$XGD4L
                                               g$s*$9587$XGD4L
                                               g$ae*$9588$XGD4L)))
                                          (case-lambda
                                            ((g$xr*$9592$XGD4L
                                               g$y-pat$9593$XGD4L
                                               g$r$9594$XGD4L)
                                             ((case-lambda
                                                ((g$r$9595$XGD4L
                                                   g$y-pat$9596$XGD4L
                                                   g$xr*$9597$XGD4L)
                                                 (if g$r$9595$XGD4L
                                                   (if (null?
                                                         g$y-pat$9596$XGD4L)
                                                     ((case-lambda
                                                        ((g$xr$9598$XGD4L)
                                                         (if g$xr$9598$XGD4L
                                                           (values
                                                             (cons
                                                               g$xr$9598$XGD4L
                                                               g$xr*$9597$XGD4L)
                                                             g$y-pat$9596$XGD4L
                                                             g$r$9595$XGD4L)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9523$XGD4L
                                                        (car g$e$9585$XGD4L)
                                                        g$x-pat$9577$XGD4L
                                                        g$m*$9586$XGD4L
                                                        g$s*$9587$XGD4L
                                                        g$ae*$9588$XGD4L
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9596$XGD4L)
                                                       (g$match$9523$XGD4L
                                                         (car g$e$9585$XGD4L)
                                                         (car g$y-pat$9596$XGD4L)
                                                         g$m*$9586$XGD4L
                                                         g$s*$9587$XGD4L
                                                         g$ae*$9588$XGD4L
                                                         g$r$9595$XGD4L)))
                                                   (values '#f '#f '#f))))
                                              g$r$9594$XGD4L
                                              g$y-pat$9593$XGD4L
                                              g$xr*$9592$XGD4L))))
                                        (if (g$stx?$7571$XGD4L g$e$9585$XGD4L)
                                          (if (g$top-marked?$7542$XGD4L
                                                g$m*$9586$XGD4L)
                                            (values
                                              '()
                                              g$y-pat$9578$XGD4L
                                              (g$match$9523$XGD4L
                                                g$e$9585$XGD4L
                                                g$z-pat$9579$XGD4L
                                                g$m*$9586$XGD4L
                                                g$s*$9587$XGD4L
                                                g$ae*$9588$XGD4L
                                                g$r$9583$XGD4L))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7586$XGD4L
                                                   g$m*$9586$XGD4L
                                                   g$s*$9587$XGD4L
                                                   g$ae*$9588$XGD4L
                                                   g$e$9585$XGD4L)))
                                              (case-lambda
                                                ((g$m*$9602$XGD4L
                                                   g$s*$9603$XGD4L
                                                   g$ae*$9604$XGD4L)
                                                 ((case-lambda
                                                    ((g$ae*$9605$XGD4L
                                                       g$s*$9606$XGD4L
                                                       g$m*$9607$XGD4L)
                                                     (g$f$9584$XGD4L
                                                       (g$stx-expr$7573$XGD4L
                                                         g$e$9585$XGD4L)
                                                       g$m*$9607$XGD4L
                                                       g$s*$9606$XGD4L
                                                       g$ae*$9605$XGD4L)))
                                                  g$ae*$9604$XGD4L
                                                  g$s*$9603$XGD4L
                                                  g$m*$9602$XGD4L)))))
                                          (if (annotation? g$e$9585$XGD4L)
                                            (g$f$9584$XGD4L
                                              (annotation-expression
                                                g$e$9585$XGD4L)
                                              g$m*$9586$XGD4L
                                              g$s*$9587$XGD4L
                                              g$ae*$9588$XGD4L)
                                            (values
                                              '()
                                              g$y-pat$9578$XGD4L
                                              (g$match$9523$XGD4L
                                                g$e$9585$XGD4L
                                                g$z-pat$9579$XGD4L
                                                g$m*$9586$XGD4L
                                                g$s*$9587$XGD4L
                                                g$ae*$9588$XGD4L
                                                g$r$9583$XGD4L)))))))))
                          g$f$9584$XGD4L)
                        g$e$9576$XGD4L
                        g$m*$9580$XGD4L
                        g$s*$9581$XGD4L
                        g$ae*$9582$XGD4L))))
                  (g$match-each-any$9519$XGD4L
                    (case-lambda
                      ((g$e$9562$XGD4L
                         g$m*$9563$XGD4L
                         g$s*$9564$XGD4L
                         g$ae*$9565$XGD4L)
                       (if (pair? g$e$9562$XGD4L)
                         ((case-lambda
                            ((g$l$9566$XGD4L)
                             (if g$l$9566$XGD4L
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9516$XGD4L
                                     (car g$e$9562$XGD4L)
                                     g$m*$9563$XGD4L
                                     g$s*$9564$XGD4L
                                     g$ae*$9565$XGD4L)
                                   g$l$9566$XGD4L))
                               '#f)))
                          (g$match-each-any$9519$XGD4L
                            (cdr g$e$9562$XGD4L)
                            g$m*$9563$XGD4L
                            g$s*$9564$XGD4L
                            g$ae*$9565$XGD4L))
                         (if (null? g$e$9562$XGD4L)
                           '()
                           (if (g$stx?$7571$XGD4L g$e$9562$XGD4L)
                             (if (not (g$top-marked?$7542$XGD4L
                                        g$m*$9563$XGD4L))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7586$XGD4L
                                        g$m*$9563$XGD4L
                                        g$s*$9564$XGD4L
                                        g$ae*$9565$XGD4L
                                        g$e$9562$XGD4L)))
                                   (case-lambda
                                     ((g$m*$9570$XGD4L
                                        g$s*$9571$XGD4L
                                        g$ae*$9572$XGD4L)
                                      ((case-lambda
                                         ((g$ae*$9573$XGD4L
                                            g$s*$9574$XGD4L
                                            g$m*$9575$XGD4L)
                                          (g$match-each-any$9519$XGD4L
                                            (g$stx-expr$7573$XGD4L
                                              g$e$9562$XGD4L)
                                            g$m*$9575$XGD4L
                                            g$s*$9574$XGD4L
                                            g$ae*$9573$XGD4L)))
                                       g$ae*$9572$XGD4L
                                       g$s*$9571$XGD4L
                                       g$m*$9570$XGD4L)))))
                               '#f)
                             (if (annotation? g$e$9562$XGD4L)
                               (g$match-each-any$9519$XGD4L
                                 (annotation-expression g$e$9562$XGD4L)
                                 g$m*$9563$XGD4L
                                 g$s*$9564$XGD4L
                                 g$ae*$9565$XGD4L)
                               '#f)))))))
                  (g$match-empty$9520$XGD4L
                    (case-lambda
                      ((g$p$9559$XGD4L g$r$9560$XGD4L)
                       (if (null? g$p$9559$XGD4L)
                         g$r$9560$XGD4L
                         (if (eq? g$p$9559$XGD4L '_)
                           g$r$9560$XGD4L
                           (if (eq? g$p$9559$XGD4L 'any)
                             (cons '() g$r$9560$XGD4L)
                             (if (pair? g$p$9559$XGD4L)
                               (g$match-empty$9520$XGD4L
                                 (car g$p$9559$XGD4L)
                                 (g$match-empty$9520$XGD4L
                                   (cdr g$p$9559$XGD4L)
                                   g$r$9560$XGD4L))
                               (if (eq? g$p$9559$XGD4L 'each-any)
                                 (cons '() g$r$9560$XGD4L)
                                 ((case-lambda
                                    ((g$t$9561$XGD4L)
                                     (if (eqv? g$t$9561$XGD4L 'each)
                                       (g$match-empty$9520$XGD4L
                                         (vector-ref g$p$9559$XGD4L '1)
                                         g$r$9560$XGD4L)
                                       (if (eqv? g$t$9561$XGD4L 'each+)
                                         (g$match-empty$9520$XGD4L
                                           (vector-ref g$p$9559$XGD4L '1)
                                           (g$match-empty$9520$XGD4L
                                             (reverse
                                               (vector-ref g$p$9559$XGD4L '2))
                                             (g$match-empty$9520$XGD4L
                                               (vector-ref g$p$9559$XGD4L '3)
                                               g$r$9560$XGD4L)))
                                         (if (memv
                                               g$t$9561$XGD4L
                                               '(free-id atom))
                                           g$r$9560$XGD4L
                                           (if (memv
                                                 g$t$9561$XGD4L
                                                 '(scheme-id atom))
                                             g$r$9560$XGD4L
                                             (if (eqv? g$t$9561$XGD4L 'vector)
                                               (g$match-empty$9520$XGD4L
                                                 (vector-ref g$p$9559$XGD4L '1)
                                                 g$r$9560$XGD4L)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9559$XGD4L))))))))
                                  (vector-ref g$p$9559$XGD4L '0))))))))))
                  (g$combine$9521$XGD4L
                    (case-lambda
                      ((g$r*$9557$XGD4L g$r$9558$XGD4L)
                       (if (null? (car g$r*$9557$XGD4L))
                         g$r$9558$XGD4L
                         (cons
                           (map car g$r*$9557$XGD4L)
                           (g$combine$9521$XGD4L
                             (map cdr g$r*$9557$XGD4L)
                             g$r$9558$XGD4L))))))
                  (g$match*$9522$XGD4L
                    (case-lambda
                      ((g$e$9539$XGD4L
                         g$p$9540$XGD4L
                         g$m*$9541$XGD4L
                         g$s*$9542$XGD4L
                         g$ae*$9543$XGD4L
                         g$r$9544$XGD4L)
                       (if (null? g$p$9540$XGD4L)
                         (if (null? g$e$9539$XGD4L)
                           (begin '#f g$r$9544$XGD4L)
                           '#f)
                         (if (pair? g$p$9540$XGD4L)
                           (if (pair? g$e$9539$XGD4L)
                             (begin
                               '#f
                               (g$match$9523$XGD4L
                                 (car g$e$9539$XGD4L)
                                 (car g$p$9540$XGD4L)
                                 g$m*$9541$XGD4L
                                 g$s*$9542$XGD4L
                                 g$ae*$9543$XGD4L
                                 (g$match$9523$XGD4L
                                   (cdr g$e$9539$XGD4L)
                                   (cdr g$p$9540$XGD4L)
                                   g$m*$9541$XGD4L
                                   g$s*$9542$XGD4L
                                   g$ae*$9543$XGD4L
                                   g$r$9544$XGD4L)))
                             '#f)
                           (if (eq? g$p$9540$XGD4L 'each-any)
                             ((case-lambda
                                ((g$l$9545$XGD4L)
                                 (if g$l$9545$XGD4L
                                   (begin
                                     '#f
                                     (cons g$l$9545$XGD4L g$r$9544$XGD4L))
                                   '#f)))
                              (g$match-each-any$9519$XGD4L
                                g$e$9539$XGD4L
                                g$m*$9541$XGD4L
                                g$s*$9542$XGD4L
                                g$ae*$9543$XGD4L))
                             ((case-lambda
                                ((g$t$9546$XGD4L)
                                 (if (eqv? g$t$9546$XGD4L 'each)
                                   (if (null? g$e$9539$XGD4L)
                                     (g$match-empty$9520$XGD4L
                                       (vector-ref g$p$9540$XGD4L '1)
                                       g$r$9544$XGD4L)
                                     ((case-lambda
                                        ((g$r*$9556$XGD4L)
                                         (if g$r*$9556$XGD4L
                                           (begin
                                             '#f
                                             (g$combine$9521$XGD4L
                                               g$r*$9556$XGD4L
                                               g$r$9544$XGD4L))
                                           '#f)))
                                      (g$match-each$9517$XGD4L
                                        g$e$9539$XGD4L
                                        (vector-ref g$p$9540$XGD4L '1)
                                        g$m*$9541$XGD4L
                                        g$s*$9542$XGD4L
                                        g$ae*$9543$XGD4L)))
                                   (if (eqv? g$t$9546$XGD4L 'free-id)
                                     (if (symbol? g$e$9539$XGD4L)
                                       (if (g$top-marked?$7542$XGD4L
                                             g$m*$9541$XGD4L)
                                         (if (g$free-id=?$7603$XGD4L
                                               (g$stx^$9516$XGD4L
                                                 g$e$9539$XGD4L
                                                 g$m*$9541$XGD4L
                                                 g$s*$9542$XGD4L
                                                 g$ae*$9543$XGD4L)
                                               (vector-ref g$p$9540$XGD4L '1))
                                           (begin '#f g$r$9544$XGD4L)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$9546$XGD4L 'scheme-id)
                                       (if (symbol? g$e$9539$XGD4L)
                                         (if (g$top-marked?$7542$XGD4L
                                               g$m*$9541$XGD4L)
                                           (if (g$free-id=?$7603$XGD4L
                                                 (g$stx^$9516$XGD4L
                                                   g$e$9539$XGD4L
                                                   g$m*$9541$XGD4L
                                                   g$s*$9542$XGD4L
                                                   g$ae*$9543$XGD4L)
                                                 (g$scheme-stx$7820$XGD4L
                                                   (vector-ref
                                                     g$p$9540$XGD4L
                                                     '1)))
                                             (begin '#f g$r$9544$XGD4L)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$9546$XGD4L 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9518$XGD4L
                                                g$e$9539$XGD4L
                                                (vector-ref g$p$9540$XGD4L '1)
                                                (vector-ref g$p$9540$XGD4L '2)
                                                (vector-ref g$p$9540$XGD4L '3)
                                                g$m*$9541$XGD4L
                                                g$s*$9542$XGD4L
                                                g$ae*$9543$XGD4L
                                                g$r$9544$XGD4L)))
                                           (case-lambda
                                             ((g$xr*$9550$XGD4L
                                                g$y-pat$9551$XGD4L
                                                g$r$9552$XGD4L)
                                              ((case-lambda
                                                 ((g$r$9553$XGD4L
                                                    g$y-pat$9554$XGD4L
                                                    g$xr*$9555$XGD4L)
                                                  (if g$r$9553$XGD4L
                                                    (if (null?
                                                          g$y-pat$9554$XGD4L)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9555$XGD4L)
                                                          (g$match-empty$9520$XGD4L
                                                            (vector-ref
                                                              g$p$9540$XGD4L
                                                              '1)
                                                            g$r$9553$XGD4L)
                                                          (g$combine$9521$XGD4L
                                                            g$xr*$9555$XGD4L
                                                            g$r$9553$XGD4L)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9552$XGD4L
                                               g$y-pat$9551$XGD4L
                                               g$xr*$9550$XGD4L))))
                                         (if (eqv? g$t$9546$XGD4L 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$9540$XGD4L '1)
                                                 (g$strip$7609$XGD4L
                                                   g$e$9539$XGD4L
                                                   g$m*$9541$XGD4L))
                                             (begin '#f g$r$9544$XGD4L)
                                             '#f)
                                           (if (eqv? g$t$9546$XGD4L 'vector)
                                             (if (vector? g$e$9539$XGD4L)
                                               (begin
                                                 '#f
                                                 (g$match$9523$XGD4L
                                                   (vector->list g$e$9539$XGD4L)
                                                   (vector-ref
                                                     g$p$9540$XGD4L
                                                     '1)
                                                   g$m*$9541$XGD4L
                                                   g$s*$9542$XGD4L
                                                   g$ae*$9543$XGD4L
                                                   g$r$9544$XGD4L))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9540$XGD4L)))))))))
                              (vector-ref g$p$9540$XGD4L '0))))))))
                  (g$match$9523$XGD4L
                    (case-lambda
                      ((g$e$9524$XGD4L
                         g$p$9525$XGD4L
                         g$m*$9526$XGD4L
                         g$s*$9527$XGD4L
                         g$ae*$9528$XGD4L
                         g$r$9529$XGD4L)
                       (if (not g$r$9529$XGD4L)
                         '#f
                         (if (eq? g$p$9525$XGD4L '_)
                           g$r$9529$XGD4L
                           (if (eq? g$p$9525$XGD4L 'any)
                             (cons
                               (g$stx^$9516$XGD4L
                                 g$e$9524$XGD4L
                                 g$m*$9526$XGD4L
                                 g$s*$9527$XGD4L
                                 g$ae*$9528$XGD4L)
                               g$r$9529$XGD4L)
                             (if (g$stx?$7571$XGD4L g$e$9524$XGD4L)
                               (if (not (g$top-marked?$7542$XGD4L
                                          g$m*$9526$XGD4L))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7586$XGD4L
                                          g$m*$9526$XGD4L
                                          g$s*$9527$XGD4L
                                          g$ae*$9528$XGD4L
                                          g$e$9524$XGD4L)))
                                     (case-lambda
                                       ((g$m*$9533$XGD4L
                                          g$s*$9534$XGD4L
                                          g$ae*$9535$XGD4L)
                                        ((case-lambda
                                           ((g$ae*$9536$XGD4L
                                              g$s*$9537$XGD4L
                                              g$m*$9538$XGD4L)
                                            (g$match$9523$XGD4L
                                              (g$stx-expr$7573$XGD4L
                                                g$e$9524$XGD4L)
                                              g$p$9525$XGD4L
                                              g$m*$9538$XGD4L
                                              g$s*$9537$XGD4L
                                              g$ae*$9536$XGD4L
                                              g$r$9529$XGD4L)))
                                         g$ae*$9535$XGD4L
                                         g$s*$9534$XGD4L
                                         g$m*$9533$XGD4L)))))
                                 '#f)
                               (if (annotation? g$e$9524$XGD4L)
                                 (g$match$9523$XGD4L
                                   (annotation-expression g$e$9524$XGD4L)
                                   g$p$9525$XGD4L
                                   g$m*$9526$XGD4L
                                   g$s*$9527$XGD4L
                                   g$ae*$9528$XGD4L
                                   g$r$9529$XGD4L)
                                 (g$match*$9522$XGD4L
                                   g$e$9524$XGD4L
                                   g$p$9525$XGD4L
                                   g$m*$9526$XGD4L
                                   g$s*$9527$XGD4L
                                   g$ae*$9528$XGD4L
                                   g$r$9529$XGD4L))))))))))
          (g$match$9523$XGD4L g$e$9514$XGD4L g$p$9515$XGD4L '() '() '() '())))))
   (g$ellipsis?$7878$XGD4L
     g$ellipsis?$11328$XGD4L
     (case-lambda
       ((g$x$9628$XGD4L)
        (if (g$id?$7599$XGD4L g$x$9628$XGD4L)
          (begin
            '#f
            (g$free-id=?$7603$XGD4L
              g$x$9628$XGD4L
              (g$scheme-stx$7820$XGD4L '...)))
          '#f))))
   (g$underscore?$7879$XGD4L
     g$underscore?$11329$XGD4L
     (case-lambda
       ((g$x$9629$XGD4L)
        (if (g$id?$7599$XGD4L g$x$9629$XGD4L)
          (begin
            '#f
            (g$free-id=?$7603$XGD4L
              g$x$9629$XGD4L
              (g$scheme-stx$7820$XGD4L '_)))
          '#f))))
   (g$verify-literals$7880$XGD4L
     g$verify-literals$11330$XGD4L
     (case-lambda
       ((g$lits$9630$XGD4L g$expr$9631$XGD4L)
        (for-each
          (case-lambda
            ((g$x$9632$XGD4L)
             (if ((case-lambda
                    ((g$t$9633$XGD4L)
                     (if g$t$9633$XGD4L
                       g$t$9633$XGD4L
                       ((case-lambda
                          ((g$t$9634$XGD4L)
                           (if g$t$9634$XGD4L
                             g$t$9634$XGD4L
                             (begin
                               '#f
                               (g$underscore?$7879$XGD4L g$x$9632$XGD4L)))))
                        (g$ellipsis?$7878$XGD4L g$x$9632$XGD4L)))))
                  (not (g$id?$7599$XGD4L g$x$9632$XGD4L)))
               (g$syntax-violation$7983$XGD4L
                 '#f
                 '"invalid literal"
                 g$expr$9631$XGD4L
                 g$x$9632$XGD4L)
               (void))))
          g$lits$9630$XGD4L))))
   (g$syntax-case-transformer$7881$XGD4L
     g$syntax-case-transformer$11331$XGD4L
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9635$XGD4L
                     (case-lambda
                       ((g$pvars$9692$XGD4L
                          g$expr$9693$XGD4L
                          g$y$9694$XGD4L
                          g$r$9695$XGD4L
                          g$mr$9696$XGD4L)
                        ((case-lambda
                           ((g$ids$9697$XGD4L g$levels$9698$XGD4L)
                            ((case-lambda
                               ((g$labels$9699$XGD4L g$new-vars$9700$XGD4L)
                                ((case-lambda
                                   ((g$body$9701$XGD4L)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7530$XGD4L
                                        '#f
                                        g$new-vars$9700$XGD4L
                                        g$body$9701$XGD4L)
                                      g$y$9694$XGD4L)))
                                 (g$chi-expr$7895$XGD4L
                                   (g$add-subst$7589$XGD4L
                                     (g$make-full-rib$7567$XGD4L
                                       g$ids$9697$XGD4L
                                       g$labels$9699$XGD4L)
                                     g$expr$9693$XGD4L)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9702$XGD4L
                                               g$var$9703$XGD4L
                                               g$level$9704$XGD4L)
                                             (cons
                                               g$label$9702$XGD4L
                                               (g$make-binding$7615$XGD4L
                                                 'syntax
                                                 (cons
                                                   g$var$9703$XGD4L
                                                   g$level$9704$XGD4L)))))
                                          g$labels$9699$XGD4L
                                          g$new-vars$9700$XGD4L
                                          (map cdr g$pvars$9692$XGD4L))
                                     g$r$9695$XGD4L)
                                   g$mr$9696$XGD4L))))
                             (map g$gen-label$7545$XGD4L g$ids$9697$XGD4L)
                             (map g$gen-lexical$7543$XGD4L g$ids$9697$XGD4L))))
                         (map car g$pvars$9692$XGD4L)
                         (map cdr g$pvars$9692$XGD4L)))))
                   (g$invalid-ids-error$9636$XGD4L
                     (case-lambda
                       ((g$id*$9686$XGD4L g$e$9687$XGD4L g$class$9688$XGD4L)
                        ((letrec ((g$find$9689$XGD4L
                                    (case-lambda
                                      ((g$id*$9690$XGD4L g$ok*$9691$XGD4L)
                                       (if (null? g$id*$9690$XGD4L)
                                         (g$syntax-violation$7983$XGD4L
                                           '#f
                                           '"invalid syntax"
                                           g$e$9687$XGD4L)
                                         (if (g$id?$7599$XGD4L
                                               (car g$id*$9690$XGD4L))
                                           (if (g$bound-id-member?$7606$XGD4L
                                                 (car g$id*$9690$XGD4L)
                                                 g$ok*$9691$XGD4L)
                                             (g$syntax-error$7980$XGD4L
                                               (car g$id*$9690$XGD4L)
                                               '"duplicate "
                                               g$class$9688$XGD4L)
                                             (g$find$9689$XGD4L
                                               (cdr g$id*$9690$XGD4L)
                                               (cons
                                                 (car g$id*$9690$XGD4L)
                                                 g$ok*$9691$XGD4L)))
                                           (g$syntax-error$7980$XGD4L
                                             (car g$id*$9690$XGD4L)
                                             '"invalid "
                                             g$class$9688$XGD4L)))))))
                           g$find$9689$XGD4L)
                         g$id*$9686$XGD4L
                         '()))))
                   (g$gen-clause$9637$XGD4L
                     (case-lambda
                       ((g$x$9666$XGD4L
                          g$keys$9667$XGD4L
                          g$clauses$9668$XGD4L
                          g$r$9669$XGD4L
                          g$mr$9670$XGD4L
                          g$pat$9671$XGD4L
                          g$fender$9672$XGD4L
                          g$expr$9673$XGD4L)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7876$XGD4L
                               g$pat$9671$XGD4L
                               g$keys$9667$XGD4L)))
                          (case-lambda
                            ((g$p$9676$XGD4L g$pvars$9677$XGD4L)
                             ((case-lambda
                                ((g$pvars$9678$XGD4L g$p$9679$XGD4L)
                                 (if (not (g$distinct-bound-ids?$7605$XGD4L
                                            (map car g$pvars$9678$XGD4L)))
                                   (g$invalid-ids-error$9636$XGD4L
                                     (map car g$pvars$9678$XGD4L)
                                     g$pat$9671$XGD4L
                                     '"pattern variable")
                                   (if (not (g$for-all$5871$XGD4L
                                              (case-lambda
                                                ((g$x$9680$XGD4L)
                                                 (not (g$ellipsis?$7878$XGD4L
                                                        (car g$x$9680$XGD4L)))))
                                              g$pvars$9678$XGD4L))
                                     (g$syntax-violation$7983$XGD4L
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9671$XGD4L)
                                     ((case-lambda
                                        ((g$y$9681$XGD4L)
                                         ((case-lambda
                                            ((g$test$9682$XGD4L)
                                             ((case-lambda
                                                ((g$conseq$9683$XGD4L)
                                                 ((case-lambda
                                                    ((g$altern$9684$XGD4L)
                                                     (list
                                                       (g$build-lambda$7530$XGD4L
                                                         '#f
                                                         (list g$y$9681$XGD4L)
                                                         (list
                                                           'if
                                                           g$test$9682$XGD4L
                                                           g$conseq$9683$XGD4L
                                                           g$altern$9684$XGD4L))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9666$XGD4L
                                                         (list
                                                           'quote
                                                           g$p$9679$XGD4L)))))
                                                  (g$gen-syntax-case$9638$XGD4L
                                                    g$x$9666$XGD4L
                                                    g$keys$9667$XGD4L
                                                    g$clauses$9668$XGD4L
                                                    g$r$9669$XGD4L
                                                    g$mr$9670$XGD4L))))
                                              (g$build-dispatch-call$9635$XGD4L
                                                g$pvars$9678$XGD4L
                                                g$expr$9673$XGD4L
                                                g$y$9681$XGD4L
                                                g$r$9669$XGD4L
                                                g$mr$9670$XGD4L))))
                                          (if (eq? g$fender$9672$XGD4L '#t)
                                            g$y$9681$XGD4L
                                            ((case-lambda
                                               ((g$call$9685$XGD4L)
                                                (list
                                                  'if
                                                  g$y$9681$XGD4L
                                                  g$call$9685$XGD4L
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9635$XGD4L
                                               g$pvars$9678$XGD4L
                                               g$fender$9672$XGD4L
                                               g$y$9681$XGD4L
                                               g$r$9669$XGD4L
                                               g$mr$9670$XGD4L))))))
                                      (g$gen-lexical$7543$XGD4L 'tmp))))))
                              g$pvars$9677$XGD4L
                              g$p$9676$XGD4L)))))))
                   (g$gen-syntax-case$9638$XGD4L
                     (case-lambda
                       ((g$x$9649$XGD4L
                          g$keys$9650$XGD4L
                          g$clauses$9651$XGD4L
                          g$r$9652$XGD4L
                          g$mr$9653$XGD4L)
                        (if (null? g$clauses$9651$XGD4L)
                          (list '(primitive syntax-error) g$x$9649$XGD4L)
                          ((case-lambda
                             ((g$t$9654$XGD4L)
                              ((case-lambda
                                 ((g$ls/false$9655$XGD4L)
                                  (if g$ls/false$9655$XGD4L
                                    (apply
                                      (case-lambda
                                        ((g$pat$9656$XGD4L g$expr$9657$XGD4L)
                                         (if (if (g$id?$7599$XGD4L
                                                   g$pat$9656$XGD4L)
                                               (if (not (g$bound-id-member?$7606$XGD4L
                                                          g$pat$9656$XGD4L
                                                          g$keys$9650$XGD4L))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7878$XGD4L
                                                          g$pat$9656$XGD4L)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7603$XGD4L
                                                 g$pat$9656$XGD4L
                                                 (g$scheme-stx$7820$XGD4L '_))
                                             (g$chi-expr$7895$XGD4L
                                               g$expr$9657$XGD4L
                                               g$r$9652$XGD4L
                                               g$mr$9653$XGD4L)
                                             ((case-lambda
                                                ((g$lab$9658$XGD4L
                                                   g$lex$9659$XGD4L)
                                                 ((case-lambda
                                                    ((g$body$9660$XGD4L)
                                                     (list
                                                       (g$build-lambda$7530$XGD4L
                                                         '#f
                                                         (list g$lex$9659$XGD4L)
                                                         g$body$9660$XGD4L)
                                                       g$x$9649$XGD4L)))
                                                  (g$chi-expr$7895$XGD4L
                                                    (g$add-subst$7589$XGD4L
                                                      (g$make-full-rib$7567$XGD4L
                                                        (list g$pat$9656$XGD4L)
                                                        (list g$lab$9658$XGD4L))
                                                      g$expr$9657$XGD4L)
                                                    (cons
                                                      (cons
                                                        g$lab$9658$XGD4L
                                                        (g$make-binding$7615$XGD4L
                                                          'syntax
                                                          (cons
                                                            g$lex$9659$XGD4L
                                                            '0)))
                                                      g$r$9652$XGD4L)
                                                    g$mr$9653$XGD4L))))
                                              (g$gen-label$7545$XGD4L
                                                g$pat$9656$XGD4L)
                                              (g$gen-lexical$7543$XGD4L
                                                g$pat$9656$XGD4L)))
                                           (g$gen-clause$9637$XGD4L
                                             g$x$9649$XGD4L
                                             g$keys$9650$XGD4L
                                             (cdr g$clauses$9651$XGD4L)
                                             g$r$9652$XGD4L
                                             g$mr$9653$XGD4L
                                             g$pat$9656$XGD4L
                                             '#t
                                             g$expr$9657$XGD4L))))
                                      g$ls/false$9655$XGD4L)
                                    ((case-lambda
                                       ((g$t$9661$XGD4L)
                                        ((case-lambda
                                           ((g$ls/false$9662$XGD4L)
                                            (if g$ls/false$9662$XGD4L
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9663$XGD4L
                                                     g$fender$9664$XGD4L
                                                     g$expr$9665$XGD4L)
                                                   (g$gen-clause$9637$XGD4L
                                                     g$x$9649$XGD4L
                                                     g$keys$9650$XGD4L
                                                     (cdr g$clauses$9651$XGD4L)
                                                     g$r$9652$XGD4L
                                                     g$mr$9653$XGD4L
                                                     g$pat$9663$XGD4L
                                                     g$fender$9664$XGD4L
                                                     g$expr$9665$XGD4L)))
                                                g$ls/false$9662$XGD4L)
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"invalid syntax"
                                                g$t$9661$XGD4L))))
                                         (g$syntax-dispatch$7877$XGD4L
                                           g$t$9661$XGD4L
                                           '(any any any)))))
                                     g$t$9654$XGD4L))))
                               (g$syntax-dispatch$7877$XGD4L
                                 g$t$9654$XGD4L
                                 '(any any)))))
                           (car g$clauses$9651$XGD4L)))))))
           (case-lambda
             ((g$e$9639$XGD4L g$r$9640$XGD4L g$mr$9641$XGD4L)
              ((case-lambda
                 ((g$t$9642$XGD4L)
                  ((case-lambda
                     ((g$ls/false$9643$XGD4L)
                      (if g$ls/false$9643$XGD4L
                        (apply
                          (case-lambda
                            ((g$expr$9644$XGD4L
                               g$keys$9645$XGD4L
                               g$clauses$9646$XGD4L)
                             (begin
                               (g$verify-literals$7880$XGD4L
                                 g$keys$9645$XGD4L
                                 g$e$9639$XGD4L)
                               ((case-lambda
                                  ((g$x$9647$XGD4L)
                                   ((case-lambda
                                      ((g$body$9648$XGD4L)
                                       (list
                                         (g$build-lambda$7530$XGD4L
                                           '#f
                                           (list g$x$9647$XGD4L)
                                           g$body$9648$XGD4L)
                                         (g$chi-expr$7895$XGD4L
                                           g$expr$9644$XGD4L
                                           g$r$9640$XGD4L
                                           g$mr$9641$XGD4L))))
                                    (g$gen-syntax-case$9638$XGD4L
                                      g$x$9647$XGD4L
                                      g$keys$9645$XGD4L
                                      g$clauses$9646$XGD4L
                                      g$r$9640$XGD4L
                                      g$mr$9641$XGD4L))))
                                (g$gen-lexical$7543$XGD4L 'tmp)))))
                          g$ls/false$9643$XGD4L)
                        (g$syntax-violation$7983$XGD4L
                          '#f
                          '"invalid syntax"
                          g$t$9642$XGD4L))))
                   (g$syntax-dispatch$7877$XGD4L
                     g$t$9642$XGD4L
                     '(_ any each-any . each-any)))))
               g$e$9639$XGD4L))))))))
   (g$ellipsis-map$7882$XGD4L
     g$ellipsis-map$11332$XGD4L
     (case-lambda
       ((g$proc$9705$XGD4L g$ls$9706$XGD4L . g$ls*$9707$XGD4L)
        (letrec* ((g$who$9708$XGD4L '...))
          (begin
            (if (list? g$ls$9706$XGD4L)
              (void)
              (assertion-violation
                g$who$9708$XGD4L
                '"not a list"
                g$ls$9706$XGD4L))
            (if (null? g$ls*$9707$XGD4L)
              (void)
              ((case-lambda
                 ((g$n$9709$XGD4L)
                  (for-each
                    (case-lambda
                      ((g$x$9710$XGD4L)
                       (begin
                         (if (list? g$x$9710$XGD4L)
                           (void)
                           (assertion-violation
                             g$who$9708$XGD4L
                             '"not a list"
                             g$x$9710$XGD4L))
                         (if (= (length g$x$9710$XGD4L) g$n$9709$XGD4L)
                           (void)
                           (assertion-violation
                             g$who$9708$XGD4L
                             '"length mismatch"
                             g$ls$9706$XGD4L
                             g$x$9710$XGD4L)))))
                    g$ls*$9707$XGD4L)))
               (length g$ls$9706$XGD4L)))
            (apply map g$proc$9705$XGD4L g$ls$9706$XGD4L g$ls*$9707$XGD4L))))))
   (g$syntax-transformer$7883$XGD4L
     g$syntax-transformer$11333$XGD4L
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9711$XGD4L
                     (case-lambda
                       ((g$src$9771$XGD4L
                          g$e$9772$XGD4L
                          g$r$9773$XGD4L
                          g$maps$9774$XGD4L
                          g$ellipsis?$9775$XGD4L
                          g$vec?$9776$XGD4L)
                        ((case-lambda
                           ((g$t$9777$XGD4L)
                            ((case-lambda
                               ((g$ls/false$9778$XGD4L)
                                (if (if g$ls/false$9778$XGD4L
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9779$XGD4L)
                                             (g$ellipsis?$9775$XGD4L
                                               g$dots$9779$XGD4L)))
                                          g$ls/false$9778$XGD4L))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9780$XGD4L)
                                       (g$syntax-violation$7983$XGD4L
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9771$XGD4L)))
                                    g$ls/false$9778$XGD4L)
                                  ((case-lambda
                                     ((g$t$9781$XGD4L)
                                      ((case-lambda
                                         ((g$ls/false$9782$XGD4L)
                                          (if (if g$ls/false$9782$XGD4L
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9783$XGD4L)
                                                       (g$id?$7599$XGD4L
                                                         g$id$9783$XGD4L)))
                                                    g$ls/false$9782$XGD4L))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9784$XGD4L)
                                                 ((case-lambda
                                                    ((g$label$9785$XGD4L)
                                                     ((case-lambda
                                                        ((g$b$9786$XGD4L)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7616$XGD4L
                                                                        g$b$9786$XGD4L)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9789$XGD4L)
                                                                        (g$gen-ref$9712$XGD4L
                                                                          g$src$9771$XGD4L
                                                                          (car g$var.lev$9789$XGD4L)
                                                                          (cdr g$var.lev$9789$XGD4L)
                                                                          g$maps$9774$XGD4L)))
                                                                     (g$binding-value$7617$XGD4L
                                                                       g$b$9786$XGD4L))))
                                                                 (case-lambda
                                                                   ((g$var$9790$XGD4L
                                                                      g$maps$9791$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$maps$9792$XGD4L
                                                                          g$var$9793$XGD4L)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9793$XGD4L)
                                                                          g$maps$9792$XGD4L)))
                                                                     g$maps$9791$XGD4L
                                                                     g$var$9790$XGD4L))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9772$XGD4L)
                                                                 g$maps$9774$XGD4L)))))))
                                                      (g$label->binding$7614$XGD4L
                                                        g$label$9785$XGD4L
                                                        g$r$9773$XGD4L))))
                                                  (g$id->label$7612$XGD4L
                                                    g$e$9772$XGD4L))))
                                              g$ls/false$9782$XGD4L)
                                            ((case-lambda
                                               ((g$t$9794$XGD4L)
                                                ((case-lambda
                                                   ((g$ls/false$9795$XGD4L)
                                                    (if (if g$ls/false$9795$XGD4L
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9796$XGD4L
                                                                   g$e$9797$XGD4L)
                                                                 (g$ellipsis?$9775$XGD4L
                                                                   g$dots$9796$XGD4L)))
                                                              g$ls/false$9795$XGD4L))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9798$XGD4L
                                                             g$e$9799$XGD4L)
                                                           (if g$vec?$9776$XGD4L
                                                             (g$syntax-violation$7983$XGD4L
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9771$XGD4L)
                                                             (g$gen-syntax$9711$XGD4L
                                                               g$src$9771$XGD4L
                                                               g$e$9799$XGD4L
                                                               g$r$9773$XGD4L
                                                               g$maps$9774$XGD4L
                                                               (case-lambda
                                                                 ((g$x$9800$XGD4L)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9795$XGD4L)
                                                      ((case-lambda
                                                         ((g$t$9801$XGD4L)
                                                          ((case-lambda
                                                             ((g$ls/false$9802$XGD4L)
                                                              (if (if g$ls/false$9802$XGD4L
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9803$XGD4L
                                                                             g$dots$9804$XGD4L
                                                                             g$y$9805$XGD4L)
                                                                           (g$ellipsis?$9775$XGD4L
                                                                             g$dots$9804$XGD4L)))
                                                                        g$ls/false$9802$XGD4L))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9806$XGD4L
                                                                       g$dots$9807$XGD4L
                                                                       g$y$9808$XGD4L)
                                                                     ((letrec ((g$f$9809$XGD4L
                                                                                 (case-lambda
                                                                                   ((g$y$9810$XGD4L
                                                                                      g$k$9811$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$t$9812$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9813$XGD4L)
                                                                                            (if g$ls/false$9813$XGD4L
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9811$XGD4L
                                                                                                     g$maps$9774$XGD4L)))
                                                                                                g$ls/false$9813$XGD4L)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9814$XGD4L)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9815$XGD4L)
                                                                                                      (if (if g$ls/false$9815$XGD4L
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9816$XGD4L
                                                                                                                     g$y$9817$XGD4L)
                                                                                                                   (g$ellipsis?$9775$XGD4L
                                                                                                                     g$dots$9816$XGD4L)))
                                                                                                                g$ls/false$9815$XGD4L))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9818$XGD4L
                                                                                                               g$y$9819$XGD4L)
                                                                                                             (g$f$9809$XGD4L
                                                                                                               g$y$9819$XGD4L
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9820$XGD4L)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9811$XGD4L
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9820$XGD4L))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9823$XGD4L
                                                                                                                         g$maps$9824$XGD4L)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9825$XGD4L
                                                                                                                             g$x$9826$XGD4L)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9825$XGD4L))
                                                                                                                             (g$syntax-violation$7983$XGD4L
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9771$XGD4L)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9714$XGD4L
                                                                                                                                 g$x$9826$XGD4L
                                                                                                                                 (car g$maps$9825$XGD4L))
                                                                                                                               (cdr g$maps$9825$XGD4L)))))
                                                                                                                        g$maps$9824$XGD4L
                                                                                                                        g$x$9823$XGD4L)))))))))
                                                                                                          g$ls/false$9815$XGD4L)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9827$XGD4L)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9828$XGD4L)
                                                                                                                (if g$ls/false$9828$XGD4L
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9711$XGD4L
                                                                                                                              g$src$9771$XGD4L
                                                                                                                              g$y$9810$XGD4L
                                                                                                                              g$r$9773$XGD4L
                                                                                                                              g$maps$9774$XGD4L
                                                                                                                              g$ellipsis?$9775$XGD4L
                                                                                                                              g$vec?$9776$XGD4L)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9831$XGD4L
                                                                                                                              g$maps$9832$XGD4L)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9833$XGD4L
                                                                                                                                  g$y$9834$XGD4L)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9811$XGD4L
                                                                                                                                       g$maps$9833$XGD4L)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9837$XGD4L
                                                                                                                                       g$maps$9838$XGD4L)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9839$XGD4L
                                                                                                                                           g$x$9840$XGD4L)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9713$XGD4L
                                                                                                                                             g$x$9840$XGD4L
                                                                                                                                             g$y$9834$XGD4L)
                                                                                                                                           g$maps$9839$XGD4L)))
                                                                                                                                      g$maps$9838$XGD4L
                                                                                                                                      g$x$9837$XGD4L))))))
                                                                                                                             g$maps$9832$XGD4L
                                                                                                                             g$y$9831$XGD4L))))))
                                                                                                                    g$ls/false$9828$XGD4L)
                                                                                                                  (g$syntax-violation$7983$XGD4L
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9827$XGD4L))))
                                                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                                                               g$t$9827$XGD4L
                                                                                                               '_))))
                                                                                                         g$t$9814$XGD4L))))
                                                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                                                     g$t$9814$XGD4L
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9812$XGD4L))))
                                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                                           g$t$9812$XGD4L
                                                                                           '()))))
                                                                                     g$y$9810$XGD4L)))))
                                                                        g$f$9809$XGD4L)
                                                                      g$y$9808$XGD4L
                                                                      (case-lambda
                                                                        ((g$maps$9841$XGD4L)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9711$XGD4L
                                                                                g$src$9771$XGD4L
                                                                                g$x$9806$XGD4L
                                                                                g$r$9773$XGD4L
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9841$XGD4L)
                                                                                g$ellipsis?$9775$XGD4L
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9844$XGD4L
                                                                                g$maps$9845$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$maps$9846$XGD4L
                                                                                    g$x$9847$XGD4L)
                                                                                  (if (null?
                                                                                        (car g$maps$9846$XGD4L))
                                                                                    (g$syntax-violation$7983$XGD4L
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9771$XGD4L)
                                                                                    (values
                                                                                      (g$gen-map$9715$XGD4L
                                                                                        g$x$9847$XGD4L
                                                                                        (car g$maps$9846$XGD4L))
                                                                                      (cdr g$maps$9846$XGD4L)))))
                                                                               g$maps$9845$XGD4L
                                                                               g$x$9844$XGD4L)))))))))
                                                                  g$ls/false$9802$XGD4L)
                                                                ((case-lambda
                                                                   ((g$t$9848$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9849$XGD4L)
                                                                        (if g$ls/false$9849$XGD4L
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9850$XGD4L
                                                                                 g$y$9851$XGD4L)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9711$XGD4L
                                                                                      g$src$9771$XGD4L
                                                                                      g$x$9850$XGD4L
                                                                                      g$r$9773$XGD4L
                                                                                      g$maps$9774$XGD4L
                                                                                      g$ellipsis?$9775$XGD4L
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9854$XGD4L
                                                                                      g$maps$9855$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9856$XGD4L
                                                                                          g$xnew$9857$XGD4L)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9711$XGD4L
                                                                                               g$src$9771$XGD4L
                                                                                               g$y$9851$XGD4L
                                                                                               g$r$9773$XGD4L
                                                                                               g$maps$9856$XGD4L
                                                                                               g$ellipsis?$9775$XGD4L
                                                                                               g$vec?$9776$XGD4L)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9860$XGD4L
                                                                                               g$maps$9861$XGD4L)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9862$XGD4L
                                                                                                   g$ynew$9863$XGD4L)
                                                                                                 (values
                                                                                                   (g$gen-cons$9716$XGD4L
                                                                                                     g$e$9772$XGD4L
                                                                                                     g$x$9850$XGD4L
                                                                                                     g$y$9851$XGD4L
                                                                                                     g$xnew$9857$XGD4L
                                                                                                     g$ynew$9863$XGD4L)
                                                                                                   g$maps$9862$XGD4L)))
                                                                                              g$maps$9861$XGD4L
                                                                                              g$ynew$9860$XGD4L))))))
                                                                                     g$maps$9855$XGD4L
                                                                                     g$xnew$9854$XGD4L))))))
                                                                            g$ls/false$9849$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$t$9864$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9865$XGD4L)
                                                                                  (if g$ls/false$9865$XGD4L
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9866$XGD4L)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9711$XGD4L
                                                                                                g$src$9771$XGD4L
                                                                                                g$ls$9866$XGD4L
                                                                                                g$r$9773$XGD4L
                                                                                                g$maps$9774$XGD4L
                                                                                                g$ellipsis?$9775$XGD4L
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9869$XGD4L
                                                                                                g$maps$9870$XGD4L)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9871$XGD4L
                                                                                                    g$lsnew$9872$XGD4L)
                                                                                                  (values
                                                                                                    (g$gen-vector$9717$XGD4L
                                                                                                      g$e$9772$XGD4L
                                                                                                      g$ls$9866$XGD4L
                                                                                                      g$lsnew$9872$XGD4L)
                                                                                                    g$maps$9871$XGD4L)))
                                                                                               g$maps$9870$XGD4L
                                                                                               g$lsnew$9869$XGD4L))))))
                                                                                      g$ls/false$9865$XGD4L)
                                                                                    ((case-lambda
                                                                                       ((g$t$9873$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9874$XGD4L)
                                                                                            (if g$ls/false$9874$XGD4L
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9772$XGD4L)
                                                                                                     g$maps$9774$XGD4L)))
                                                                                                g$ls/false$9874$XGD4L)
                                                                                              (g$syntax-violation$7983$XGD4L
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9873$XGD4L))))
                                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                                           g$t$9873$XGD4L
                                                                                           '_))))
                                                                                     g$t$9864$XGD4L))))
                                                                               (g$syntax-dispatch$7877$XGD4L
                                                                                 g$t$9864$XGD4L
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9848$XGD4L))))
                                                                     (g$syntax-dispatch$7877$XGD4L
                                                                       g$t$9848$XGD4L
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9801$XGD4L))))
                                                           (g$syntax-dispatch$7877$XGD4L
                                                             g$t$9801$XGD4L
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9794$XGD4L))))
                                                 (g$syntax-dispatch$7877$XGD4L
                                                   g$t$9794$XGD4L
                                                   '(any any)))))
                                             g$t$9781$XGD4L))))
                                       (g$syntax-dispatch$7877$XGD4L
                                         g$t$9781$XGD4L
                                         'any))))
                                   g$t$9777$XGD4L))))
                             (g$syntax-dispatch$7877$XGD4L
                               g$t$9777$XGD4L
                               'any))))
                         g$e$9772$XGD4L))))
                   (g$gen-ref$9712$XGD4L
                     (case-lambda
                       ((g$src$9758$XGD4L
                          g$var$9759$XGD4L
                          g$level$9760$XGD4L
                          g$maps$9761$XGD4L)
                        (if (= g$level$9760$XGD4L '0)
                          (values g$var$9759$XGD4L g$maps$9761$XGD4L)
                          (if (null? g$maps$9761$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9758$XGD4L)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9712$XGD4L
                                   g$src$9758$XGD4L
                                   g$var$9759$XGD4L
                                   (- g$level$9760$XGD4L '1)
                                   (cdr g$maps$9761$XGD4L))))
                              (case-lambda
                                ((g$outer-var$9764$XGD4L
                                   g$outer-maps$9765$XGD4L)
                                 ((case-lambda
                                    ((g$outer-maps$9766$XGD4L
                                       g$outer-var$9767$XGD4L)
                                     ((case-lambda
                                        ((g$t$9768$XGD4L)
                                         (if g$t$9768$XGD4L
                                           ((case-lambda
                                              ((g$b$9769$XGD4L)
                                               (values
                                                 (cdr g$b$9769$XGD4L)
                                                 g$maps$9761$XGD4L)))
                                            g$t$9768$XGD4L)
                                           ((case-lambda
                                              ((g$inner-var$9770$XGD4L)
                                               (values
                                                 g$inner-var$9770$XGD4L
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9767$XGD4L
                                                       g$inner-var$9770$XGD4L)
                                                     (car g$maps$9761$XGD4L))
                                                   g$outer-maps$9766$XGD4L))))
                                            (g$gen-lexical$7543$XGD4L 'tmp)))))
                                      (assq
                                        g$outer-var$9767$XGD4L
                                        (car g$maps$9761$XGD4L)))))
                                  g$outer-maps$9765$XGD4L
                                  g$outer-var$9764$XGD4L)))))))))
                   (g$gen-append$9713$XGD4L
                     (case-lambda
                       ((g$x$9756$XGD4L g$y$9757$XGD4L)
                        (if (equal? g$y$9757$XGD4L ''())
                          g$x$9756$XGD4L
                          (list 'append g$x$9756$XGD4L g$y$9757$XGD4L)))))
                   (g$gen-mappend$9714$XGD4L
                     (case-lambda
                       ((g$e$9754$XGD4L g$map-env$9755$XGD4L)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9715$XGD4L
                            g$e$9754$XGD4L
                            g$map-env$9755$XGD4L)))))
                   (g$gen-map$9715$XGD4L
                     (case-lambda
                       ((g$e$9745$XGD4L g$map-env$9746$XGD4L)
                        ((case-lambda
                           ((g$formals$9747$XGD4L g$actuals$9748$XGD4L)
                            (if (eq? (car g$e$9745$XGD4L) 'ref)
                              (car g$actuals$9748$XGD4L)
                              (if (g$for-all$5871$XGD4L
                                    (case-lambda
                                      ((g$x$9749$XGD4L)
                                       (if (eq? (car g$x$9749$XGD4L) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5402$XGD4L g$x$9749$XGD4L)
                                             g$formals$9747$XGD4L))
                                         '#f)))
                                    (cdr g$e$9745$XGD4L))
                                ((case-lambda
                                   ((g$args$9750$XGD4L)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9745$XGD4L))
                                        g$args$9750$XGD4L))))
                                 (map ((case-lambda
                                         ((g$r$9751$XGD4L)
                                          (case-lambda
                                            ((g$x$9752$XGD4L)
                                             (cdr (assq
                                                    (g$cadr$5402$XGD4L
                                                      g$x$9752$XGD4L)
                                                    g$r$9751$XGD4L))))))
                                       (map cons
                                            g$formals$9747$XGD4L
                                            g$actuals$9748$XGD4L))
                                      (cdr g$e$9745$XGD4L)))
                                (g$cons*$5873$XGD4L
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9747$XGD4L
                                    g$e$9745$XGD4L)
                                  g$actuals$9748$XGD4L)))))
                         (map cdr g$map-env$9746$XGD4L)
                         (map (case-lambda
                                ((g$x$9753$XGD4L)
                                 (list 'ref (car g$x$9753$XGD4L))))
                              g$map-env$9746$XGD4L)))))
                   (g$gen-cons$9716$XGD4L
                     (case-lambda
                       ((g$e$9737$XGD4L
                          g$x$9738$XGD4L
                          g$y$9739$XGD4L
                          g$xnew$9740$XGD4L
                          g$ynew$9741$XGD4L)
                        ((case-lambda
                           ((g$t$9742$XGD4L)
                            (if (eqv? g$t$9742$XGD4L 'quote)
                              (if (eq? (car g$xnew$9740$XGD4L) 'quote)
                                ((case-lambda
                                   ((g$xnew$9743$XGD4L g$ynew$9744$XGD4L)
                                    (if (if (eq? g$xnew$9743$XGD4L
                                                 g$x$9738$XGD4L)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9744$XGD4L
                                                 g$y$9739$XGD4L))
                                          '#f)
                                      (list 'quote g$e$9737$XGD4L)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9743$XGD4L
                                          g$ynew$9744$XGD4L)))))
                                 (g$cadr$5402$XGD4L g$xnew$9740$XGD4L)
                                 (g$cadr$5402$XGD4L g$ynew$9741$XGD4L))
                                (if (null?
                                      (g$cadr$5402$XGD4L g$ynew$9741$XGD4L))
                                  (list 'list g$xnew$9740$XGD4L)
                                  (list
                                    'cons
                                    g$xnew$9740$XGD4L
                                    g$ynew$9741$XGD4L)))
                              (if (eqv? g$t$9742$XGD4L 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9740$XGD4L
                                    (cdr g$ynew$9741$XGD4L)))
                                (list
                                  'cons
                                  g$xnew$9740$XGD4L
                                  g$ynew$9741$XGD4L)))))
                         (car g$ynew$9741$XGD4L)))))
                   (g$gen-vector$9717$XGD4L
                     (case-lambda
                       ((g$e$9734$XGD4L g$ls$9735$XGD4L g$lsnew$9736$XGD4L)
                        (if (eq? (car g$lsnew$9736$XGD4L) 'quote)
                          (if (eq? (g$cadr$5402$XGD4L g$lsnew$9736$XGD4L)
                                   g$ls$9735$XGD4L)
                            (list 'quote g$e$9734$XGD4L)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5402$XGD4L g$lsnew$9736$XGD4L))))
                          (if (eq? (car g$lsnew$9736$XGD4L) 'list)
                            (cons 'vector (cdr g$lsnew$9736$XGD4L))
                            (list 'list->vector g$lsnew$9736$XGD4L))))))
                   (g$regen$9718$XGD4L
                     (case-lambda
                       ((g$x$9731$XGD4L)
                        ((case-lambda
                           ((g$t$9732$XGD4L)
                            (if (eqv? g$t$9732$XGD4L 'ref)
                              (g$cadr$5402$XGD4L g$x$9731$XGD4L)
                              (if (eqv? g$t$9732$XGD4L 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$5402$XGD4L g$x$9731$XGD4L))
                                (if (eqv? g$t$9732$XGD4L 'quote)
                                  (list
                                    'quote
                                    (g$cadr$5402$XGD4L g$x$9731$XGD4L))
                                  (if (eqv? g$t$9732$XGD4L 'lambda)
                                    (g$build-lambda$7530$XGD4L
                                      '#f
                                      (g$cadr$5402$XGD4L g$x$9731$XGD4L)
                                      (g$regen$9718$XGD4L
                                        (g$caddr$5408$XGD4L g$x$9731$XGD4L)))
                                    (if (eqv? g$t$9732$XGD4L 'map)
                                      ((case-lambda
                                         ((g$ls$9733$XGD4L)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9733$XGD4L)))
                                       (map g$regen$9718$XGD4L
                                            (cdr g$x$9731$XGD4L)))
                                      (cons
                                        (list 'primitive (car g$x$9731$XGD4L))
                                        (map g$regen$9718$XGD4L
                                             (cdr g$x$9731$XGD4L))))))))))
                         (car g$x$9731$XGD4L))))))
           (case-lambda
             ((g$e$9719$XGD4L g$r$9720$XGD4L g$mr$9721$XGD4L)
              ((case-lambda
                 ((g$t$9722$XGD4L)
                  ((case-lambda
                     ((g$ls/false$9723$XGD4L)
                      (if g$ls/false$9723$XGD4L
                        (apply
                          (case-lambda
                            ((g$x$9724$XGD4L)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9711$XGD4L
                                    g$e$9719$XGD4L
                                    g$x$9724$XGD4L
                                    g$r$9720$XGD4L
                                    '()
                                    g$ellipsis?$7878$XGD4L
                                    '#f)))
                               (case-lambda
                                 ((g$e$9727$XGD4L g$maps$9728$XGD4L)
                                  ((case-lambda
                                     ((g$maps$9729$XGD4L g$e$9730$XGD4L)
                                      (g$regen$9718$XGD4L g$e$9730$XGD4L)))
                                   g$maps$9728$XGD4L
                                   g$e$9727$XGD4L))))))
                          g$ls/false$9723$XGD4L)
                        (g$syntax-violation$7983$XGD4L
                          '#f
                          '"invalid syntax"
                          g$t$9722$XGD4L))))
                   (g$syntax-dispatch$7877$XGD4L g$t$9722$XGD4L '(_ any)))))
               g$e$9719$XGD4L))))))))
   (g$core-macro-transformer$7884$XGD4L
     g$core-macro-transformer$11334$XGD4L
     (case-lambda
       ((g$name$9875$XGD4L)
        ((case-lambda
           ((g$t$9876$XGD4L)
            (if (eqv? g$t$9876$XGD4L 'quote)
              g$quote-transformer$7837$XGD4L
              (if (eqv? g$t$9876$XGD4L 'lambda)
                g$lambda-transformer$7839$XGD4L
                (if (eqv? g$t$9876$XGD4L 'case-lambda)
                  g$case-lambda-transformer$7838$XGD4L
                  (if (eqv? g$t$9876$XGD4L 'letrec)
                    g$letrec-transformer$7827$XGD4L
                    (if (eqv? g$t$9876$XGD4L 'letrec*)
                      g$letrec*-transformer$7828$XGD4L
                      (if (eqv? g$t$9876$XGD4L 'case)
                        g$case-transformer$7836$XGD4L
                        (if (eqv? g$t$9876$XGD4L 'if)
                          g$if-transformer$7835$XGD4L
                          (if (eqv? g$t$9876$XGD4L 'when)
                            g$when-transformer$7833$XGD4L
                            (if (eqv? g$t$9876$XGD4L 'unless)
                              g$unless-transformer$7834$XGD4L
                              (if (eqv? g$t$9876$XGD4L 'parameterize)
                                g$parameterize-transformer$7874$XGD4L
                                (if (eqv? g$t$9876$XGD4L 'foreign-call)
                                  g$foreign-call-transformer$7875$XGD4L
                                  (if (eqv? g$t$9876$XGD4L 'syntax-case)
                                    g$syntax-case-transformer$7881$XGD4L
                                    (if (eqv? g$t$9876$XGD4L 'syntax)
                                      g$syntax-transformer$7883$XGD4L
                                      (if (eqv? g$t$9876$XGD4L 'type-descriptor)
                                        g$type-descriptor-transformer$7830$XGD4L
                                        (if (eqv?
                                              g$t$9876$XGD4L
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7831$XGD4L
                                          (if (eqv?
                                                g$t$9876$XGD4L
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7832$XGD4L
                                            (if (eqv?
                                                  g$t$9876$XGD4L
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7829$XGD4L
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9875$XGD4L))))))))))))))))))))
         g$name$9875$XGD4L))))
   (g$file-options-macro$7885$XGD4L
     g$file-options-macro$11335$XGD4L
     (case-lambda
       ((g$x$9877$XGD4L)
        ((case-lambda
           ((g$t$9878$XGD4L)
            ((case-lambda
               ((g$ls/false$9879$XGD4L)
                (if (if g$ls/false$9879$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9880$XGD4L)
                             (if (g$for-all$5871$XGD4L
                                   g$id?$7599$XGD4L
                                   g$opt*$9880$XGD4L)
                               (begin
                                 '#f
                                 (g$file-options-spec$6868$XGD4L
                                   (map g$id->sym$7600$XGD4L
                                        g$opt*$9880$XGD4L)))
                               '#f)))
                          g$ls/false$9879$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9881$XGD4L)
                       (g$bless$7840$XGD4L
                         (list
                           'quote
                           (g$file-options-spec$6868$XGD4L
                             (map g$id->sym$7600$XGD4L g$opt*$9881$XGD4L))))))
                    g$ls/false$9879$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$9878$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9878$XGD4L '(_ . each-any)))))
         g$x$9877$XGD4L))))
   (g$symbol-macro$7886$XGD4L
     g$symbol-macro$11336$XGD4L
     (case-lambda
       ((g$x$9882$XGD4L g$set$9883$XGD4L)
        ((case-lambda
           ((g$t$9884$XGD4L)
            ((case-lambda
               ((g$ls/false$9885$XGD4L)
                (if (if g$ls/false$9885$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9886$XGD4L)
                             (if (g$id?$7599$XGD4L g$name$9886$XGD4L)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7600$XGD4L g$name$9886$XGD4L)
                                   g$set$9883$XGD4L))
                               '#f)))
                          g$ls/false$9885$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9887$XGD4L)
                       (g$bless$7840$XGD4L (list 'quote g$name$9887$XGD4L))))
                    g$ls/false$9885$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$9884$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9884$XGD4L '(_ any)))))
         g$x$9882$XGD4L))))
   (g$macro-transformer$7887$XGD4L
     g$macro-transformer$11337$XGD4L
     (case-lambda
       ((g$x$9888$XGD4L)
        (if (procedure? g$x$9888$XGD4L)
          g$x$9888$XGD4L
          (if (symbol? g$x$9888$XGD4L)
            ((case-lambda
               ((g$t$9889$XGD4L)
                (if (eqv? g$t$9889$XGD4L 'define-record-type)
                  g$define-record-type-macro$7871$XGD4L
                  (if (eqv? g$t$9889$XGD4L 'define-struct)
                    g$define-struct-macro$7870$XGD4L
                    (if (eqv? g$t$9889$XGD4L 'include)
                      g$include-macro$7865$XGD4L
                      (if (eqv? g$t$9889$XGD4L 'cond)
                        g$cond-macro$7863$XGD4L
                        (if (eqv? g$t$9889$XGD4L 'let)
                          g$let-macro$7843$XGD4L
                          (if (eqv? g$t$9889$XGD4L 'do)
                            g$do-macro$7859$XGD4L
                            (if (eqv? g$t$9889$XGD4L 'or)
                              g$or-macro$7861$XGD4L
                              (if (eqv? g$t$9889$XGD4L 'and)
                                g$and-macro$7862$XGD4L
                                (if (eqv? g$t$9889$XGD4L 'let*)
                                  g$let*-macro$7860$XGD4L
                                  (if (eqv? g$t$9889$XGD4L 'let-values)
                                    g$let-values-macro$7844$XGD4L
                                    (if (eqv? g$t$9889$XGD4L 'let*-values)
                                      g$let*-values-macro$7845$XGD4L
                                      (if (eqv? g$t$9889$XGD4L 'syntax-rules)
                                        g$syntax-rules-macro$7867$XGD4L
                                        (if (eqv? g$t$9889$XGD4L 'quasiquote)
                                          g$quasiquote-macro$7868$XGD4L
                                          (if (eqv? g$t$9889$XGD4L 'quasisyntax)
                                            g$quasisyntax-macro$7869$XGD4L
                                            (if (eqv?
                                                  g$t$9889$XGD4L
                                                  'with-syntax)
                                              g$with-syntax-macro$7841$XGD4L
                                              (if (eqv?
                                                    g$t$9889$XGD4L
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7858$XGD4L
                                                (if (eqv? g$t$9889$XGD4L 'time)
                                                  g$time-macro$7854$XGD4L
                                                  (if (eqv?
                                                        g$t$9889$XGD4L
                                                        'delay)
                                                    g$delay-macro$7855$XGD4L
                                                    (if (eqv?
                                                          g$t$9889$XGD4L
                                                          'assert)
                                                      g$assert-macro$7856$XGD4L
                                                      (if (eqv?
                                                            g$t$9889$XGD4L
                                                            'endianness)
                                                        g$endianness-macro$7857$XGD4L
                                                        (if (eqv?
                                                              g$t$9889$XGD4L
                                                              'guard)
                                                          g$guard-macro$7852$XGD4L
                                                          (if (eqv?
                                                                g$t$9889$XGD4L
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7853$XGD4L
                                                            (if (eqv?
                                                                  g$t$9889$XGD4L
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7846$XGD4L
                                                              (if (eqv?
                                                                    g$t$9889$XGD4L
                                                                    'trace-define)
                                                                g$trace-define-macro$7847$XGD4L
                                                                (if (eqv?
                                                                      g$t$9889$XGD4L
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7848$XGD4L
                                                                  (if (eqv?
                                                                        g$t$9889$XGD4L
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7850$XGD4L
                                                                    (if (eqv?
                                                                          g$t$9889$XGD4L
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7851$XGD4L
                                                                      (if (eqv?
                                                                            g$t$9889$XGD4L
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7872$XGD4L
                                                                        (if (eqv?
                                                                              g$t$9889$XGD4L
                                                                              'include-into)
                                                                          g$include-into-macro$7866$XGD4L
                                                                          (if (eqv?
                                                                                g$t$9889$XGD4L
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9892$XGD4L)
                                                                               (g$symbol-macro$7886$XGD4L
                                                                                 g$x$9892$XGD4L
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9889$XGD4L
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9891$XGD4L)
                                                                                 (g$symbol-macro$7886$XGD4L
                                                                                   g$x$9891$XGD4L
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9889$XGD4L
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9890$XGD4L)
                                                                                   (g$symbol-macro$7886$XGD4L
                                                                                     g$x$9890$XGD4L
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9889$XGD4L
                                                                                      'file-options)
                                                                                  g$file-options-macro$7885$XGD4L
                                                                                  (if (memv
                                                                                        g$t$9889$XGD4L
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7873$XGD4L
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9888$XGD4L)))))))))))))))))))))))))))))))))))))
             g$x$9888$XGD4L)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9888$XGD4L))))))
   (g$local-macro-transformer$7888$XGD4L
     g$local-macro-transformer$11338$XGD4L
     (case-lambda ((g$x$9893$XGD4L) (car g$x$9893$XGD4L))))
   (g$do-macro-call$7889$XGD4L
     g$do-macro-call$11339$XGD4L
     (case-lambda
       ((g$transformer$9894$XGD4L g$expr$9895$XGD4L)
        ((case-lambda
           ((g$out$9896$XGD4L)
            (begin
              ((letrec ((g$f$9897$XGD4L
                          (case-lambda
                            ((g$x$9898$XGD4L)
                             (if (g$stx?$7571$XGD4L g$x$9898$XGD4L)
                               (void)
                               (if (pair? g$x$9898$XGD4L)
                                 (begin
                                   (g$f$9897$XGD4L (car g$x$9898$XGD4L))
                                   (g$f$9897$XGD4L (cdr g$x$9898$XGD4L)))
                                 (if (vector? g$x$9898$XGD4L)
                                   (vector-for-each
                                     g$f$9897$XGD4L
                                     g$x$9898$XGD4L)
                                   (if (symbol? g$x$9898$XGD4L)
                                     (g$syntax-violation$7983$XGD4L
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9895$XGD4L
                                       g$x$9898$XGD4L)
                                     (void)))))))))
                 g$f$9897$XGD4L)
               g$out$9896$XGD4L)
              (g$add-mark$7588$XGD4L
                (g$gen-mark$7583$XGD4L)
                g$out$9896$XGD4L
                g$expr$9895$XGD4L))))
         (g$transformer$9894$XGD4L
           (g$add-mark$7588$XGD4L
             g$anti-mark$7584$XGD4L
             g$expr$9895$XGD4L
             '#f))))))
   (g$chi-macro$7890$XGD4L
     g$chi-macro$11340$XGD4L
     (case-lambda
       ((g$p$9899$XGD4L g$e$9900$XGD4L)
        (g$do-macro-call$7889$XGD4L
          (g$macro-transformer$7887$XGD4L g$p$9899$XGD4L)
          g$e$9900$XGD4L))))
   (g$chi-local-macro$7891$XGD4L
     g$chi-local-macro$11341$XGD4L
     (case-lambda
       ((g$p$9901$XGD4L g$e$9902$XGD4L)
        (g$do-macro-call$7889$XGD4L
          (g$local-macro-transformer$7888$XGD4L g$p$9901$XGD4L)
          g$e$9902$XGD4L))))
   (g$chi-global-macro$7892$XGD4L
     g$chi-global-macro$11342$XGD4L
     (case-lambda
       ((g$p$9903$XGD4L g$e$9904$XGD4L)
        ((case-lambda
           ((g$lib$9905$XGD4L g$loc$9906$XGD4L)
            (begin
              (g$visit-library$7415$XGD4L g$lib$9905$XGD4L)
              ((case-lambda
                 ((g$x$9907$XGD4L)
                  ((case-lambda
                     ((g$transformer$9908$XGD4L)
                      (g$do-macro-call$7889$XGD4L
                        g$transformer$9908$XGD4L
                        g$e$9904$XGD4L)))
                   (if (procedure? g$x$9907$XGD4L)
                     g$x$9907$XGD4L
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9907$XGD4L)))))
               (symbol-value g$loc$9906$XGD4L)))))
         (car g$p$9903$XGD4L)
         (cdr g$p$9903$XGD4L)))))
   (g$chi-expr*$7893$XGD4L
     g$chi-expr*$11343$XGD4L
     (case-lambda
       ((g$e*$9909$XGD4L g$r$9910$XGD4L g$mr$9911$XGD4L)
        (if (null? g$e*$9909$XGD4L)
          '()
          ((case-lambda
             ((g$e$9912$XGD4L)
              (cons
                g$e$9912$XGD4L
                (g$chi-expr*$7893$XGD4L
                  (cdr g$e*$9909$XGD4L)
                  g$r$9910$XGD4L
                  g$mr$9911$XGD4L))))
           (g$chi-expr$7895$XGD4L
             (car g$e*$9909$XGD4L)
             g$r$9910$XGD4L
             g$mr$9911$XGD4L))))))
   (g$chi-application$7894$XGD4L
     g$chi-application$11344$XGD4L
     (case-lambda
       ((g$e$9913$XGD4L g$r$9914$XGD4L g$mr$9915$XGD4L)
        ((case-lambda
           ((g$t$9916$XGD4L)
            ((case-lambda
               ((g$ls/false$9917$XGD4L)
                (if g$ls/false$9917$XGD4L
                  (apply
                    (case-lambda
                      ((g$rator$9918$XGD4L g$rands$9919$XGD4L)
                       ((case-lambda
                          ((g$rator$9920$XGD4L)
                           (cons
                             g$rator$9920$XGD4L
                             (g$chi-expr*$7893$XGD4L
                               g$rands$9919$XGD4L
                               g$r$9914$XGD4L
                               g$mr$9915$XGD4L))))
                        (g$chi-expr$7895$XGD4L
                          g$rator$9918$XGD4L
                          g$r$9914$XGD4L
                          g$mr$9915$XGD4L))))
                    g$ls/false$9917$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$9916$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9916$XGD4L '(any . each-any)))))
         g$e$9913$XGD4L))))
   (g$chi-expr$7895$XGD4L
     g$chi-expr$11345$XGD4L
     (case-lambda
       ((g$e$9921$XGD4L g$r$9922$XGD4L g$mr$9923$XGD4L)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7619$XGD4L g$e$9921$XGD4L g$r$9922$XGD4L)))
          (case-lambda
            ((g$type$9927$XGD4L g$value$9928$XGD4L g$kwd$9929$XGD4L)
             ((case-lambda
                ((g$kwd$9930$XGD4L g$value$9931$XGD4L g$type$9932$XGD4L)
                 ((case-lambda
                    ((g$t$9933$XGD4L)
                     (if (eqv? g$t$9933$XGD4L 'core-macro)
                       ((case-lambda
                          ((g$transformer$9959$XGD4L)
                           (g$transformer$9959$XGD4L
                             g$e$9921$XGD4L
                             g$r$9922$XGD4L
                             g$mr$9923$XGD4L)))
                        (g$core-macro-transformer$7884$XGD4L
                          g$value$9931$XGD4L))
                       (if (eqv? g$t$9933$XGD4L 'global)
                         ((case-lambda
                            ((g$lib$9957$XGD4L)
                             ((case-lambda
                                ((g$loc$9958$XGD4L)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7929$XGD4L)
                                        g$lib$9957$XGD4L)
                                       g$loc$9958$XGD4L))))))
                              (cdr g$value$9931$XGD4L))))
                          (car g$value$9931$XGD4L))
                         (if (eqv? g$t$9933$XGD4L 'core-prim)
                           ((case-lambda
                              ((g$name$9956$XGD4L)
                               (list 'primitive g$name$9956$XGD4L)))
                            g$value$9931$XGD4L)
                           (if (eqv? g$t$9933$XGD4L 'call)
                             (g$chi-application$7894$XGD4L
                               g$e$9921$XGD4L
                               g$r$9922$XGD4L
                               g$mr$9923$XGD4L)
                             (if (eqv? g$t$9933$XGD4L 'lexical)
                               ((case-lambda
                                  ((g$lex$9955$XGD4L) g$lex$9955$XGD4L))
                                (g$lexical-var$7821$XGD4L g$value$9931$XGD4L))
                               (if (memv
                                     g$t$9933$XGD4L
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7895$XGD4L
                                   (g$chi-global-macro$7892$XGD4L
                                     g$value$9931$XGD4L
                                     g$e$9921$XGD4L)
                                   g$r$9922$XGD4L
                                   g$mr$9923$XGD4L)
                                 (if (memv
                                       g$t$9933$XGD4L
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7895$XGD4L
                                     (g$chi-local-macro$7891$XGD4L
                                       g$value$9931$XGD4L
                                       g$e$9921$XGD4L)
                                     g$r$9922$XGD4L
                                     g$mr$9923$XGD4L)
                                   (if (memv g$t$9933$XGD4L '(macro macro!))
                                     (g$chi-expr$7895$XGD4L
                                       (g$chi-macro$7890$XGD4L
                                         g$value$9931$XGD4L
                                         g$e$9921$XGD4L)
                                       g$r$9922$XGD4L
                                       g$mr$9923$XGD4L)
                                     (if (eqv? g$t$9933$XGD4L 'constant)
                                       ((case-lambda
                                          ((g$datum$9954$XGD4L)
                                           (list 'quote g$datum$9954$XGD4L)))
                                        g$value$9931$XGD4L)
                                       (if (eqv? g$t$9933$XGD4L 'set!)
                                         (g$chi-set!$7896$XGD4L
                                           g$e$9921$XGD4L
                                           g$r$9922$XGD4L
                                           g$mr$9923$XGD4L)
                                         (if (eqv? g$t$9933$XGD4L 'begin)
                                           ((case-lambda
                                              ((g$t$9950$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$9951$XGD4L)
                                                   (if g$ls/false$9951$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9952$XGD4L
                                                            g$x*$9953$XGD4L)
                                                          (g$build-sequence$7533$XGD4L
                                                            '#f
                                                            (g$chi-expr*$7893$XGD4L
                                                              (cons
                                                                g$x$9952$XGD4L
                                                                g$x*$9953$XGD4L)
                                                              g$r$9922$XGD4L
                                                              g$mr$9923$XGD4L))))
                                                       g$ls/false$9951$XGD4L)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9950$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$9950$XGD4L
                                                  '(_ any . each-any)))))
                                            g$e$9921$XGD4L)
                                           (if (memv
                                                 g$t$9933$XGD4L
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9935$XGD4L)
                                                 ((case-lambda
                                                    ((g$ls/false$9936$XGD4L)
                                                     (if (if g$ls/false$9936$XGD4L
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9937$XGD4L
                                                                    g$xrhs*$9938$XGD4L
                                                                    g$xbody$9939$XGD4L
                                                                    g$xbody*$9940$XGD4L)
                                                                  (if (g$valid-bound-ids?$7604$XGD4L
                                                                        g$xlhs*$9937$XGD4L)
                                                                    (void)
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9921$XGD4L))))
                                                               g$ls/false$9936$XGD4L))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9941$XGD4L
                                                              g$xrhs*$9942$XGD4L
                                                              g$xbody$9943$XGD4L
                                                              g$xbody*$9944$XGD4L)
                                                            ((case-lambda
                                                               ((g$xlab*$9945$XGD4L)
                                                                ((case-lambda
                                                                   ((g$xrib$9946$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$xb*$9947$XGD4L)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7533$XGD4L
                                                                              '#f
                                                                              (g$chi-expr*$7893$XGD4L
                                                                                (map (case-lambda
                                                                                       ((g$x$9948$XGD4L)
                                                                                        (g$add-subst$7589$XGD4L
                                                                                          g$xrib$9946$XGD4L
                                                                                          g$x$9948$XGD4L)))
                                                                                     (cons
                                                                                       g$xbody$9943$XGD4L
                                                                                       g$xbody*$9944$XGD4L))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9945$XGD4L
                                                                                       g$xb*$9947$XGD4L)
                                                                                  g$r$9922$XGD4L)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9945$XGD4L
                                                                                       g$xb*$9947$XGD4L)
                                                                                  g$mr$9923$XGD4L))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9949$XGD4L)
                                                                             (g$make-eval-transformer$7631$XGD4L
                                                                               (g$expand-transformer$7922$XGD4L
                                                                                 (if (eq? g$type$9932$XGD4L
                                                                                          'let-syntax)
                                                                                   g$x$9949$XGD4L
                                                                                   (g$add-subst$7589$XGD4L
                                                                                     g$xrib$9946$XGD4L
                                                                                     g$x$9949$XGD4L))
                                                                                 g$mr$9923$XGD4L))))
                                                                          g$xrhs*$9942$XGD4L))))
                                                                 (g$make-full-rib$7567$XGD4L
                                                                   g$xlhs*$9941$XGD4L
                                                                   g$xlab*$9945$XGD4L))))
                                                             (map g$gen-label$7545$XGD4L
                                                                  g$xlhs*$9941$XGD4L))))
                                                         g$ls/false$9936$XGD4L)
                                                       (g$syntax-violation$7983$XGD4L
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9935$XGD4L))))
                                                  (g$syntax-dispatch$7877$XGD4L
                                                    g$t$9935$XGD4L
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9921$XGD4L)
                                             (if (eqv?
                                                   g$t$9933$XGD4L
                                                   'displaced-lexical)
                                               (g$syntax-violation$7983$XGD4L
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9921$XGD4L)
                                               (if (eqv? g$t$9933$XGD4L 'syntax)
                                                 (g$syntax-violation$7983$XGD4L
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9921$XGD4L)
                                                 (if (memv
                                                       g$t$9933$XGD4L
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7983$XGD4L
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9934$XGD4L)
                                                           (if (eqv?
                                                                 g$t$9934$XGD4L
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9934$XGD4L
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9934$XGD4L
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9934$XGD4L
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9934$XGD4L
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9932$XGD4L)
                                                       '" was found where an expression was expected")
                                                     g$e$9921$XGD4L)
                                                   (if (eqv?
                                                         g$t$9933$XGD4L
                                                         'mutable)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9921$XGD4L)
                                                     (g$syntax-violation$7983$XGD4L
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9921$XGD4L)))))))))))))))))))
                  g$type$9932$XGD4L)))
              g$kwd$9929$XGD4L
              g$value$9928$XGD4L
              g$type$9927$XGD4L)))))))
   (g$chi-set!$7896$XGD4L
     g$chi-set!$11346$XGD4L
     (case-lambda
       ((g$e$9960$XGD4L g$r$9961$XGD4L g$mr$9962$XGD4L)
        ((case-lambda
           ((g$t$9963$XGD4L)
            ((case-lambda
               ((g$ls/false$9964$XGD4L)
                (if (if g$ls/false$9964$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9965$XGD4L g$v$9966$XGD4L)
                             (g$id?$7599$XGD4L g$x$9965$XGD4L)))
                          g$ls/false$9964$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9967$XGD4L g$v$9968$XGD4L)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7619$XGD4L
                              g$x$9967$XGD4L
                              g$r$9961$XGD4L)))
                         (case-lambda
                           ((g$type$9972$XGD4L
                              g$value$9973$XGD4L
                              g$kwd$9974$XGD4L)
                            ((case-lambda
                               ((g$kwd$9975$XGD4L
                                  g$value$9976$XGD4L
                                  g$type$9977$XGD4L)
                                ((case-lambda
                                   ((g$t$9978$XGD4L)
                                    (if (eqv? g$t$9978$XGD4L 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7823$XGD4L
                                          g$value$9976$XGD4L
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7821$XGD4L
                                            g$value$9976$XGD4L)
                                          (g$chi-expr$7895$XGD4L
                                            g$v$9968$XGD4L
                                            g$r$9961$XGD4L
                                            g$mr$9962$XGD4L)))
                                      (if (eqv? g$t$9978$XGD4L 'core-prim)
                                        (g$syntax-violation$7983$XGD4L
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9960$XGD4L)
                                        (if (eqv? g$t$9978$XGD4L 'global)
                                          (g$syntax-violation$7983$XGD4L
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9960$XGD4L)
                                          (if (eqv?
                                                g$t$9978$XGD4L
                                                'global-macro!)
                                            (g$chi-expr$7895$XGD4L
                                              (g$chi-global-macro$7892$XGD4L
                                                g$value$9976$XGD4L
                                                g$e$9960$XGD4L)
                                              g$r$9961$XGD4L
                                              g$mr$9962$XGD4L)
                                            (if (eqv?
                                                  g$t$9978$XGD4L
                                                  'local-macro!)
                                              (g$chi-expr$7895$XGD4L
                                                (g$chi-local-macro$7891$XGD4L
                                                  g$value$9976$XGD4L
                                                  g$e$9960$XGD4L)
                                                g$r$9961$XGD4L
                                                g$mr$9962$XGD4L)
                                              (if (eqv? g$t$9978$XGD4L 'mutable)
                                                (g$syntax-violation$7983$XGD4L
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9960$XGD4L)
                                                (g$syntax-violation$7983$XGD4L
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9960$XGD4L)))))))))
                                 g$type$9977$XGD4L)))
                             g$kwd$9974$XGD4L
                             g$value$9973$XGD4L
                             g$type$9972$XGD4L))))))
                    g$ls/false$9964$XGD4L)
                  (g$syntax-violation$7983$XGD4L
                    '#f
                    '"invalid syntax"
                    g$t$9963$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9963$XGD4L '(_ any any)))))
         g$e$9960$XGD4L))))
   (g$verify-formals$7897$XGD4L
     g$verify-formals$11347$XGD4L
     (case-lambda
       ((g$fmls$9979$XGD4L g$stx$9980$XGD4L)
        ((case-lambda
           ((g$t$9981$XGD4L)
            ((case-lambda
               ((g$ls/false$9982$XGD4L)
                (if g$ls/false$9982$XGD4L
                  (apply
                    (case-lambda
                      ((g$x*$9983$XGD4L)
                       (if (g$valid-bound-ids?$7604$XGD4L g$x*$9983$XGD4L)
                         (void)
                         (g$invalid-fmls-error$7842$XGD4L
                           g$stx$9980$XGD4L
                           g$fmls$9979$XGD4L))))
                    g$ls/false$9982$XGD4L)
                  ((case-lambda
                     ((g$t$9984$XGD4L)
                      ((case-lambda
                         ((g$ls/false$9985$XGD4L)
                          (if g$ls/false$9985$XGD4L
                            (apply
                              (case-lambda
                                ((g$x*$9986$XGD4L g$x$9987$XGD4L)
                                 (if (g$valid-bound-ids?$7604$XGD4L
                                       (cons g$x$9987$XGD4L g$x*$9986$XGD4L))
                                   (void)
                                   (g$invalid-fmls-error$7842$XGD4L
                                     g$stx$9980$XGD4L
                                     g$fmls$9979$XGD4L))))
                              g$ls/false$9985$XGD4L)
                            ((case-lambda
                               ((g$t$9988$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$9989$XGD4L)
                                    (if g$ls/false$9989$XGD4L
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9980$XGD4L)))
                                        g$ls/false$9989$XGD4L)
                                      (g$syntax-violation$7983$XGD4L
                                        '#f
                                        '"invalid syntax"
                                        g$t$9988$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$9988$XGD4L
                                   '_))))
                             g$t$9984$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$9984$XGD4L
                         '#(each+ any () any)))))
                   g$t$9981$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9981$XGD4L 'each-any))))
         g$fmls$9979$XGD4L))))
   (g$chi-lambda-clause$7898$XGD4L
     g$chi-lambda-clause$11348$XGD4L
     (case-lambda
       ((g$stx$9990$XGD4L
          g$fmls$9991$XGD4L
          g$body*$9992$XGD4L
          g$r$9993$XGD4L
          g$mr$9994$XGD4L)
        ((case-lambda
           ((g$t$9995$XGD4L)
            ((case-lambda
               ((g$ls/false$9996$XGD4L)
                (if g$ls/false$9996$XGD4L
                  (apply
                    (case-lambda
                      ((g$x*$9997$XGD4L)
                       (begin
                         (g$verify-formals$7897$XGD4L
                           g$fmls$9991$XGD4L
                           g$stx$9990$XGD4L)
                         ((case-lambda
                            ((g$lex*$9998$XGD4L g$lab*$9999$XGD4L)
                             (values
                               g$lex*$9998$XGD4L
                               (g$chi-internal$7906$XGD4L
                                 (g$add-subst$7589$XGD4L
                                   (g$make-full-rib$7567$XGD4L
                                     g$x*$9997$XGD4L
                                     g$lab*$9999$XGD4L)
                                   g$body*$9992$XGD4L)
                                 (g$add-lexicals$7825$XGD4L
                                   g$lab*$9999$XGD4L
                                   g$lex*$9998$XGD4L
                                   g$r$9993$XGD4L)
                                 g$mr$9994$XGD4L))))
                          (map g$gen-lexical$7543$XGD4L g$x*$9997$XGD4L)
                          (map g$gen-label$7545$XGD4L g$x*$9997$XGD4L)))))
                    g$ls/false$9996$XGD4L)
                  ((case-lambda
                     ((g$t$10000$XGD4L)
                      ((case-lambda
                         ((g$ls/false$10001$XGD4L)
                          (if g$ls/false$10001$XGD4L
                            (apply
                              (case-lambda
                                ((g$x*$10002$XGD4L g$x$10003$XGD4L)
                                 (begin
                                   (g$verify-formals$7897$XGD4L
                                     g$fmls$9991$XGD4L
                                     g$stx$9990$XGD4L)
                                   ((case-lambda
                                      ((g$lex*$10004$XGD4L
                                         g$lab*$10005$XGD4L
                                         g$lex$10006$XGD4L
                                         g$lab$10007$XGD4L)
                                       (values
                                         (append
                                           g$lex*$10004$XGD4L
                                           g$lex$10006$XGD4L)
                                         (g$chi-internal$7906$XGD4L
                                           (g$add-subst$7589$XGD4L
                                             (g$make-full-rib$7567$XGD4L
                                               (cons
                                                 g$x$10003$XGD4L
                                                 g$x*$10002$XGD4L)
                                               (cons
                                                 g$lab$10007$XGD4L
                                                 g$lab*$10005$XGD4L))
                                             g$body*$9992$XGD4L)
                                           (g$add-lexicals$7825$XGD4L
                                             (cons
                                               g$lab$10007$XGD4L
                                               g$lab*$10005$XGD4L)
                                             (cons
                                               g$lex$10006$XGD4L
                                               g$lex*$10004$XGD4L)
                                             g$r$9993$XGD4L)
                                           g$mr$9994$XGD4L))))
                                    (map g$gen-lexical$7543$XGD4L
                                         g$x*$10002$XGD4L)
                                    (map g$gen-label$7545$XGD4L
                                         g$x*$10002$XGD4L)
                                    (g$gen-lexical$7543$XGD4L g$x$10003$XGD4L)
                                    (g$gen-label$7545$XGD4L g$x$10003$XGD4L)))))
                              g$ls/false$10001$XGD4L)
                            ((case-lambda
                               ((g$t$10008$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$10009$XGD4L)
                                    (if g$ls/false$10009$XGD4L
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7983$XGD4L
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9991$XGD4L)))
                                        g$ls/false$10009$XGD4L)
                                      (g$syntax-violation$7983$XGD4L
                                        '#f
                                        '"invalid syntax"
                                        g$t$10008$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$10008$XGD4L
                                   '_))))
                             g$t$10000$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$10000$XGD4L
                         '#(each+ any () any)))))
                   g$t$9995$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$9995$XGD4L 'each-any))))
         g$fmls$9991$XGD4L))))
   (g$chi-lambda-clause*$7899$XGD4L
     g$chi-lambda-clause*$11349$XGD4L
     (case-lambda
       ((g$stx$10010$XGD4L
          g$fmls*$10011$XGD4L
          g$body**$10012$XGD4L
          g$r$10013$XGD4L
          g$mr$10014$XGD4L)
        (if (null? g$fmls*$10011$XGD4L)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7898$XGD4L
                 g$stx$10010$XGD4L
                 (car g$fmls*$10011$XGD4L)
                 (car g$body**$10012$XGD4L)
                 g$r$10013$XGD4L
                 g$mr$10014$XGD4L)))
            (case-lambda
              ((g$a$10017$XGD4L g$b$10018$XGD4L)
               ((case-lambda
                  ((g$b$10019$XGD4L g$a$10020$XGD4L)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7899$XGD4L
                          g$stx$10010$XGD4L
                          (cdr g$fmls*$10011$XGD4L)
                          (cdr g$body**$10012$XGD4L)
                          g$r$10013$XGD4L
                          g$mr$10014$XGD4L)))
                     (case-lambda
                       ((g$a*$10023$XGD4L g$b*$10024$XGD4L)
                        ((case-lambda
                           ((g$b*$10025$XGD4L g$a*$10026$XGD4L)
                            (values
                              (cons g$a$10020$XGD4L g$a*$10026$XGD4L)
                              (cons g$b$10019$XGD4L g$b*$10025$XGD4L))))
                         g$b*$10024$XGD4L
                         g$a*$10023$XGD4L))))))
                g$b$10018$XGD4L
                g$a$10017$XGD4L))))))))
   (g$chi-defun$7900$XGD4L
     g$chi-defun$11350$XGD4L
     (case-lambda
       ((g$x$10027$XGD4L g$r$10028$XGD4L g$mr$10029$XGD4L)
        ((case-lambda
           ((g$fmls$10030$XGD4L g$body*$10031$XGD4L)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7898$XGD4L
                   g$fmls$10030$XGD4L
                   g$fmls$10030$XGD4L
                   g$body*$10031$XGD4L
                   g$r$10028$XGD4L
                   g$mr$10029$XGD4L)))
              (case-lambda
                ((g$fmls$10034$XGD4L g$body$10035$XGD4L)
                 ((case-lambda
                    ((g$body$10036$XGD4L g$fmls$10037$XGD4L)
                     (g$build-lambda$7530$XGD4L
                       '#f
                       g$fmls$10037$XGD4L
                       g$body$10036$XGD4L)))
                  g$body$10035$XGD4L
                  g$fmls$10034$XGD4L))))))
         (car g$x$10027$XGD4L)
         (cdr g$x$10027$XGD4L)))))
   (g$chi-rhs$7901$XGD4L
     g$chi-rhs$11351$XGD4L
     (case-lambda
       ((g$rhs$10038$XGD4L g$r$10039$XGD4L g$mr$10040$XGD4L)
        ((case-lambda
           ((g$t$10041$XGD4L)
            (if (eqv? g$t$10041$XGD4L 'defun)
              (g$chi-defun$7900$XGD4L
                (cdr g$rhs$10038$XGD4L)
                g$r$10039$XGD4L
                g$mr$10040$XGD4L)
              (if (eqv? g$t$10041$XGD4L 'expr)
                ((case-lambda
                   ((g$expr$10043$XGD4L)
                    (g$chi-expr$7895$XGD4L
                      g$expr$10043$XGD4L
                      g$r$10039$XGD4L
                      g$mr$10040$XGD4L)))
                 (cdr g$rhs$10038$XGD4L))
                (if (eqv? g$t$10041$XGD4L 'top-expr)
                  ((case-lambda
                     ((g$expr$10042$XGD4L)
                      (g$build-sequence$7533$XGD4L
                        '#f
                        (list
                          (g$chi-expr$7895$XGD4L
                            g$expr$10042$XGD4L
                            g$r$10039$XGD4L
                            g$mr$10040$XGD4L)
                          (g$build-void$7534$XGD4L)))))
                   (cdr g$rhs$10038$XGD4L))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10038$XGD4L))))))
         (car g$rhs$10038$XGD4L)))))
   (g$expand-interaction-rhs*/init*$7902$XGD4L
     g$expand-interaction-rhs*/init*$11352$XGD4L
     (case-lambda
       ((g$lhs*$10044$XGD4L
          g$rhs*$10045$XGD4L
          g$init*$10046$XGD4L
          g$r$10047$XGD4L
          g$mr$10048$XGD4L)
        ((letrec ((g$f$10049$XGD4L
                    (case-lambda
                      ((g$lhs*$10050$XGD4L g$rhs*$10051$XGD4L)
                       (if (null? g$lhs*$10050$XGD4L)
                         (map (case-lambda
                                ((g$x$10052$XGD4L)
                                 (g$chi-expr$7895$XGD4L
                                   g$x$10052$XGD4L
                                   g$r$10047$XGD4L
                                   g$mr$10048$XGD4L)))
                              g$init*$10046$XGD4L)
                         ((case-lambda
                            ((g$lhs$10053$XGD4L g$rhs$10054$XGD4L)
                             ((case-lambda
                                ((g$t$10055$XGD4L)
                                 (if (eqv? g$t$10055$XGD4L 'defun)
                                   ((case-lambda
                                      ((g$rhs$10058$XGD4L)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10053$XGD4L
                                           g$rhs$10058$XGD4L)
                                         (g$f$10049$XGD4L
                                           (cdr g$lhs*$10050$XGD4L)
                                           (cdr g$rhs*$10051$XGD4L)))))
                                    (g$chi-defun$7900$XGD4L
                                      (cdr g$rhs$10054$XGD4L)
                                      g$r$10047$XGD4L
                                      g$mr$10048$XGD4L))
                                   (if (eqv? g$t$10055$XGD4L 'expr)
                                     ((case-lambda
                                        ((g$rhs$10057$XGD4L)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10053$XGD4L
                                             g$rhs$10057$XGD4L)
                                           (g$f$10049$XGD4L
                                             (cdr g$lhs*$10050$XGD4L)
                                             (cdr g$rhs*$10051$XGD4L)))))
                                      (g$chi-expr$7895$XGD4L
                                        (cdr g$rhs$10054$XGD4L)
                                        g$r$10047$XGD4L
                                        g$mr$10048$XGD4L))
                                     (if (eqv? g$t$10055$XGD4L 'top-expr)
                                       ((case-lambda
                                          ((g$e$10056$XGD4L)
                                           (cons
                                             g$e$10056$XGD4L
                                             (g$f$10049$XGD4L
                                               (cdr g$lhs*$10050$XGD4L)
                                               (cdr g$rhs*$10051$XGD4L)))))
                                        (g$chi-expr$7895$XGD4L
                                          (cdr g$rhs$10054$XGD4L)
                                          g$r$10047$XGD4L
                                          g$mr$10048$XGD4L))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10054$XGD4L))))))
                              (car g$rhs$10054$XGD4L))))
                          (car g$lhs*$10050$XGD4L)
                          (car g$rhs*$10051$XGD4L)))))))
           g$f$10049$XGD4L)
         g$lhs*$10044$XGD4L
         g$rhs*$10045$XGD4L))))
   (g$chi-rhs*$7903$XGD4L
     g$chi-rhs*$11353$XGD4L
     (case-lambda
       ((g$rhs*$10059$XGD4L g$r$10060$XGD4L g$mr$10061$XGD4L)
        ((letrec ((g$f$10062$XGD4L
                    (case-lambda
                      ((g$ls$10063$XGD4L)
                       (if (null? g$ls$10063$XGD4L)
                         '()
                         ((case-lambda
                            ((g$a$10064$XGD4L)
                             (cons
                               g$a$10064$XGD4L
                               (g$f$10062$XGD4L (cdr g$ls$10063$XGD4L)))))
                          (g$chi-rhs$7901$XGD4L
                            (car g$ls$10063$XGD4L)
                            g$r$10060$XGD4L
                            g$mr$10061$XGD4L)))))))
           g$f$10062$XGD4L)
         g$rhs*$10059$XGD4L))))
   (g$find-bound=?$7904$XGD4L
     g$find-bound=?$11354$XGD4L
     (case-lambda
       ((g$x$10065$XGD4L g$lhs*$10066$XGD4L g$rhs*$10067$XGD4L)
        (if (null? g$lhs*$10066$XGD4L)
          '#f
          (if (g$bound-id=?$7602$XGD4L g$x$10065$XGD4L (car g$lhs*$10066$XGD4L))
            (car g$rhs*$10067$XGD4L)
            (g$find-bound=?$7904$XGD4L
              g$x$10065$XGD4L
              (cdr g$lhs*$10066$XGD4L)
              (cdr g$rhs*$10067$XGD4L)))))))
   (g$find-dups$7905$XGD4L
     g$find-dups$11355$XGD4L
     (case-lambda
       ((g$ls$10068$XGD4L)
        ((letrec ((g$f$10069$XGD4L
                    (case-lambda
                      ((g$ls$10070$XGD4L g$dups$10071$XGD4L)
                       (if (null? g$ls$10070$XGD4L)
                         g$dups$10071$XGD4L
                         ((case-lambda
                            ((g$t$10072$XGD4L)
                             (if g$t$10072$XGD4L
                               ((case-lambda
                                  ((g$x$10073$XGD4L)
                                   (g$f$10069$XGD4L
                                     (cdr g$ls$10070$XGD4L)
                                     (cons
                                       (list
                                         (car g$ls$10070$XGD4L)
                                         g$x$10073$XGD4L)
                                       g$dups$10071$XGD4L))))
                                g$t$10072$XGD4L)
                               (g$f$10069$XGD4L
                                 (cdr g$ls$10070$XGD4L)
                                 g$dups$10071$XGD4L))))
                          (g$find-bound=?$7904$XGD4L
                            (car g$ls$10070$XGD4L)
                            (cdr g$ls$10070$XGD4L)
                            (cdr g$ls$10070$XGD4L))))))))
           g$f$10069$XGD4L)
         g$ls$10068$XGD4L
         '()))))
   (g$chi-internal$7906$XGD4L
     g$chi-internal$11356$XGD4L
     (case-lambda
       ((g$e*$10074$XGD4L g$r$10075$XGD4L g$mr$10076$XGD4L)
        ((case-lambda
           ((g$rib$10077$XGD4L)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7921$XGD4L
                   (map (case-lambda
                          ((g$x$10085$XGD4L)
                           (g$add-subst$7589$XGD4L
                             g$rib$10077$XGD4L
                             g$x$10085$XGD4L)))
                        (g$syntax->list$7598$XGD4L g$e*$10074$XGD4L))
                   g$r$10075$XGD4L
                   g$mr$10076$XGD4L
                   '()
                   '()
                   '()
                   '()
                   g$rib$10077$XGD4L
                   '#f)))
              (case-lambda
                ((g$e*$10086$XGD4L
                   g$r$10087$XGD4L
                   g$mr$10088$XGD4L
                   g$lex*$10089$XGD4L
                   g$rhs*$10090$XGD4L
                   g$mod**$10091$XGD4L
                   g$kwd*$10092$XGD4L)
                 ((case-lambda
                    ((g$kwd*$10093$XGD4L
                       g$mod**$10094$XGD4L
                       g$rhs*$10095$XGD4L
                       g$lex*$10096$XGD4L
                       g$mr$10097$XGD4L
                       g$r$10098$XGD4L
                       g$e*$10099$XGD4L)
                     (begin
                       (if (null? g$e*$10099$XGD4L)
                         (g$syntax-violation$7983$XGD4L
                           '#f
                           '"no expression in body"
                           g$e*$10099$XGD4L)
                         (void))
                       ((case-lambda
                          ((g$init*$10100$XGD4L)
                           ((case-lambda
                              ((g$rhs*$10101$XGD4L)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7536$XGD4L
                                     '#f
                                     (reverse g$lex*$10096$XGD4L)
                                     (reverse g$rhs*$10101$XGD4L)
                                     (g$build-sequence$7533$XGD4L
                                       '#f
                                       g$init*$10100$XGD4L)))))))
                            (g$chi-rhs*$7903$XGD4L
                              g$rhs*$10095$XGD4L
                              g$r$10098$XGD4L
                              g$mr$10097$XGD4L))))
                        (g$chi-expr*$7893$XGD4L
                          (append
                            (apply append (reverse g$mod**$10094$XGD4L))
                            g$e*$10099$XGD4L)
                          g$r$10098$XGD4L
                          g$mr$10097$XGD4L)))))
                  g$kwd*$10092$XGD4L
                  g$mod**$10091$XGD4L
                  g$rhs*$10090$XGD4L
                  g$lex*$10089$XGD4L
                  g$mr$10088$XGD4L
                  g$r$10087$XGD4L
                  g$e*$10086$XGD4L))))))
         (g$make-empty-rib$7562$XGD4L)))))
   (g$parse-module$7907$XGD4L
     g$parse-module$11357$XGD4L
     (case-lambda
       ((g$e$10102$XGD4L)
        ((case-lambda
           ((g$t$10103$XGD4L)
            ((case-lambda
               ((g$ls/false$10104$XGD4L)
                (if g$ls/false$10104$XGD4L
                  (apply
                    (case-lambda
                      ((g$export*$10105$XGD4L g$b*$10106$XGD4L)
                       (begin
                         (if (g$for-all$5871$XGD4L
                               g$id?$7599$XGD4L
                               g$export*$10105$XGD4L)
                           (void)
                           (g$syntax-violation$7983$XGD4L
                             '#f
                             '"module exports must be identifiers"
                             g$e$10102$XGD4L))
                         (values
                           '#f
                           (list->vector g$export*$10105$XGD4L)
                           g$b*$10106$XGD4L))))
                    g$ls/false$10104$XGD4L)
                  ((case-lambda
                     ((g$t$10107$XGD4L)
                      ((case-lambda
                         ((g$ls/false$10108$XGD4L)
                          (if g$ls/false$10108$XGD4L
                            (apply
                              (case-lambda
                                ((g$name$10109$XGD4L
                                   g$export*$10110$XGD4L
                                   g$b*$10111$XGD4L)
                                 (begin
                                   (if (g$id?$7599$XGD4L g$name$10109$XGD4L)
                                     (void)
                                     (g$syntax-violation$7983$XGD4L
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10102$XGD4L))
                                   (if (g$for-all$5871$XGD4L
                                         g$id?$7599$XGD4L
                                         g$export*$10110$XGD4L)
                                     (void)
                                     (g$syntax-violation$7983$XGD4L
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10102$XGD4L))
                                   (values
                                     g$name$10109$XGD4L
                                     (list->vector g$export*$10110$XGD4L)
                                     g$b*$10111$XGD4L))))
                              g$ls/false$10108$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$10107$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$10107$XGD4L
                         '(_ any each-any . each-any)))))
                   g$t$10103$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$10103$XGD4L
               '(_ each-any . each-any)))))
         g$e$10102$XGD4L))))
   (g$8887$7908$XGD4L
     g$8887$11358$XGD4L
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8890$XGD4L
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8889$7909$XGD4L g$8889$11359$XGD4L '#f)
   (g$8888$7910$XGD4L
     g$8888$11360$XGD4L
     (make-record-constructor-descriptor
       g$8887$7908$XGD4L
       '#f
       g$8889$7909$XGD4L))
   (g$module-interface?$7911$XGD4L
     g$module-interface?$11361$XGD4L
     (record-predicate g$8887$7908$XGD4L))
   (g$make-module-interface$7912$XGD4L
     g$make-module-interface$11362$XGD4L
     (record-constructor g$8888$7910$XGD4L))
   (g$module-interface-first-mark$7913$XGD4L
     g$module-interface-first-mark$11363$XGD4L
     (record-accessor g$8887$7908$XGD4L '0))
   (g$module-interface-exp-id-vec$7914$XGD4L
     g$module-interface-exp-id-vec$11364$XGD4L
     (record-accessor g$8887$7908$XGD4L '1))
   (g$module-interface-exp-lab-vec$7915$XGD4L
     g$module-interface-exp-lab-vec$11365$XGD4L
     (record-accessor g$8887$7908$XGD4L '2))
   (g$set-module-interface-first-mark!$7916$XGD4L
     g$set-module-interface-first-mark!$11366$XGD4L
     (record-mutator g$8887$7908$XGD4L '0))
   (g$set-module-interface-exp-id-vec!$7917$XGD4L
     g$set-module-interface-exp-id-vec!$11367$XGD4L
     (record-mutator g$8887$7908$XGD4L '1))
   (g$set-module-interface-exp-lab-vec!$7918$XGD4L
     g$set-module-interface-exp-lab-vec!$11368$XGD4L
     (record-mutator g$8887$7908$XGD4L '2))
   (g$module-interface-exp-id*$7919$XGD4L
     g$module-interface-exp-id*$11369$XGD4L
     (case-lambda
       ((g$iface$10112$XGD4L g$id$10113$XGD4L)
        (letrec* ((g$diff-marks$10114$XGD4L
                    (case-lambda
                      ((g$ls$10118$XGD4L g$x$10119$XGD4L)
                       (begin
                         (if (null? g$ls$10118$XGD4L)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10120$XGD4L)
                             (if (eq? g$a$10120$XGD4L g$x$10119$XGD4L)
                               '()
                               (cons
                                 g$a$10120$XGD4L
                                 (g$diff-marks$10114$XGD4L
                                   (cdr g$ls$10118$XGD4L)
                                   g$x$10119$XGD4L)))))
                          (car g$ls$10118$XGD4L)))))))
          ((case-lambda
             ((g$diff$10115$XGD4L g$id-vec$10116$XGD4L)
              (if (null? g$diff$10115$XGD4L)
                g$id-vec$10116$XGD4L
                (vector-map
                  (case-lambda
                    ((g$x$10117$XGD4L)
                     (g$make-stx$7572$XGD4L
                       (g$stx-expr$7573$XGD4L g$x$10117$XGD4L)
                       (append
                         g$diff$10115$XGD4L
                         (g$stx-mark*$7574$XGD4L g$x$10117$XGD4L))
                       '()
                       '())))
                  g$id-vec$10116$XGD4L))))
           (g$diff-marks$10114$XGD4L
             (g$stx-mark*$7574$XGD4L g$id$10113$XGD4L)
             (g$module-interface-first-mark$7913$XGD4L g$iface$10112$XGD4L))
           (g$module-interface-exp-id-vec$7914$XGD4L g$iface$10112$XGD4L))))))
   (g$chi-internal-module$7920$XGD4L
     g$chi-internal-module$11370$XGD4L
     (case-lambda
       ((g$e$10121$XGD4L
          g$r$10122$XGD4L
          g$mr$10123$XGD4L
          g$lex*$10124$XGD4L
          g$rhs*$10125$XGD4L
          g$mod**$10126$XGD4L
          g$kwd*$10127$XGD4L)
        (call-with-values
          (case-lambda (() (g$parse-module$7907$XGD4L g$e$10121$XGD4L)))
          (case-lambda
            ((g$name$10131$XGD4L g$exp-id*$10132$XGD4L g$e*$10133$XGD4L)
             ((case-lambda
                ((g$e*$10134$XGD4L g$exp-id*$10135$XGD4L g$name$10136$XGD4L)
                 ((case-lambda
                    ((g$rib$10137$XGD4L)
                     ((case-lambda
                        ((g$e*$10138$XGD4L)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7921$XGD4L
                                    g$e*$10138$XGD4L
                                    g$r$10122$XGD4L
                                    g$mr$10123$XGD4L
                                    g$lex*$10124$XGD4L
                                    g$rhs*$10125$XGD4L
                                    g$mod**$10126$XGD4L
                                    g$kwd*$10127$XGD4L
                                    g$rib$10137$XGD4L
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10146$XGD4L
                                    g$r$10147$XGD4L
                                    g$mr$10148$XGD4L
                                    g$lex*$10149$XGD4L
                                    g$rhs*$10150$XGD4L
                                    g$mod**$10151$XGD4L
                                    g$kwd*$10152$XGD4L)
                                  ((case-lambda
                                     ((g$kwd*$10153$XGD4L
                                        g$mod**$10154$XGD4L
                                        g$rhs*$10155$XGD4L
                                        g$lex*$10156$XGD4L
                                        g$mr$10157$XGD4L
                                        g$r$10158$XGD4L
                                        g$e*$10159$XGD4L)
                                      ((case-lambda
                                         ((g$exp-lab*$10160$XGD4L
                                            g$mod**$10161$XGD4L)
                                          (if (not g$name$10136$XGD4L)
                                            (values
                                              g$lex*$10156$XGD4L
                                              g$rhs*$10155$XGD4L
                                              g$exp-id*$10135$XGD4L
                                              g$exp-lab*$10160$XGD4L
                                              g$r$10158$XGD4L
                                              g$mr$10157$XGD4L
                                              g$mod**$10161$XGD4L
                                              g$kwd*$10153$XGD4L)
                                            ((case-lambda
                                               ((g$lab$10162$XGD4L
                                                  g$iface$10163$XGD4L)
                                                (values
                                                  g$lex*$10156$XGD4L
                                                  g$rhs*$10155$XGD4L
                                                  (vector g$name$10136$XGD4L)
                                                  (vector g$lab$10162$XGD4L)
                                                  (cons
                                                    (cons
                                                      g$lab$10162$XGD4L
                                                      (cons
                                                        '$module
                                                        g$iface$10163$XGD4L))
                                                    g$r$10158$XGD4L)
                                                  (cons
                                                    (cons
                                                      g$lab$10162$XGD4L
                                                      (cons
                                                        '$module
                                                        g$iface$10163$XGD4L))
                                                    g$mr$10157$XGD4L)
                                                  g$mod**$10161$XGD4L
                                                  g$kwd*$10153$XGD4L)))
                                             (g$gen-label$7545$XGD4L 'module)
                                             (g$make-module-interface$7912$XGD4L
                                               (car (g$stx-mark*$7574$XGD4L
                                                      g$name$10136$XGD4L))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10164$XGD4L)
                                                    (g$make-stx$7572$XGD4L
                                                      (g$stx-expr$7573$XGD4L
                                                        g$x$10164$XGD4L)
                                                      (g$stx-mark*$7574$XGD4L
                                                        g$x$10164$XGD4L)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10135$XGD4L)
                                               g$exp-lab*$10160$XGD4L)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10165$XGD4L)
                                            ((case-lambda
                                               ((g$t$10166$XGD4L)
                                                (if g$t$10166$XGD4L
                                                  g$t$10166$XGD4L
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7983$XGD4L
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10165$XGD4L)))))
                                             (g$id->label$7612$XGD4L
                                               (g$make-stx$7572$XGD4L
                                                 (g$id->sym$7600$XGD4L
                                                   g$x$10165$XGD4L)
                                                 (g$stx-mark*$7574$XGD4L
                                                   g$x$10165$XGD4L)
                                                 (list g$rib$10137$XGD4L)
                                                 '())))))
                                         g$exp-id*$10135$XGD4L)
                                       (cons
                                         g$e*$10159$XGD4L
                                         g$mod**$10154$XGD4L))))
                                   g$kwd*$10152$XGD4L
                                   g$mod**$10151$XGD4L
                                   g$rhs*$10150$XGD4L
                                   g$lex*$10149$XGD4L
                                   g$mr$10148$XGD4L
                                   g$r$10147$XGD4L
                                   g$e*$10146$XGD4L)))))))))
                      (map (case-lambda
                             ((g$x$10167$XGD4L)
                              (g$add-subst$7589$XGD4L
                                g$rib$10137$XGD4L
                                g$x$10167$XGD4L)))
                           (g$syntax->list$7598$XGD4L g$e*$10134$XGD4L)))))
                  (g$make-empty-rib$7562$XGD4L))))
              g$e*$10133$XGD4L
              g$exp-id*$10132$XGD4L
              g$name$10131$XGD4L)))))))
   (g$chi-body*$7921$XGD4L
     g$chi-body*$11371$XGD4L
     (case-lambda
       ((g$e*$10168$XGD4L
          g$r$10169$XGD4L
          g$mr$10170$XGD4L
          g$lex*$10171$XGD4L
          g$rhs*$10172$XGD4L
          g$mod**$10173$XGD4L
          g$kwd*$10174$XGD4L
          g$rib$10175$XGD4L
          g$top?$10176$XGD4L)
        (if (null? g$e*$10168$XGD4L)
          (values
            g$e*$10168$XGD4L
            g$r$10169$XGD4L
            g$mr$10170$XGD4L
            g$lex*$10171$XGD4L
            g$rhs*$10172$XGD4L
            g$mod**$10173$XGD4L
            g$kwd*$10174$XGD4L)
          ((case-lambda
             ((g$e$10177$XGD4L)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7619$XGD4L g$e$10177$XGD4L g$r$10169$XGD4L)))
                (case-lambda
                  ((g$type$10181$XGD4L g$value$10182$XGD4L g$kwd$10183$XGD4L)
                   ((case-lambda
                      ((g$kwd$10184$XGD4L
                         g$value$10185$XGD4L
                         g$type$10186$XGD4L)
                       ((case-lambda
                          ((g$kwd*$10187$XGD4L)
                           ((case-lambda
                              ((g$t$10188$XGD4L)
                               (if (eqv? g$t$10188$XGD4L 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7817$XGD4L
                                        g$e$10177$XGD4L)))
                                   (case-lambda
                                     ((g$id$10294$XGD4L g$rhs$10295$XGD4L)
                                      ((case-lambda
                                         ((g$rhs$10296$XGD4L g$id$10297$XGD4L)
                                          (begin
                                            (if (g$bound-id-member?$7606$XGD4L
                                                  g$id$10297$XGD4L
                                                  g$kwd*$10187$XGD4L)
                                              (g$syntax-violation$7983$XGD4L
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10177$XGD4L)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7547$XGD4L
                                                   g$id$10297$XGD4L
                                                   g$rib$10175$XGD4L)))
                                              (case-lambda
                                                ((g$lab$10300$XGD4L
                                                   g$lex$10301$XGD4L)
                                                 ((case-lambda
                                                    ((g$lex$10302$XGD4L
                                                       g$lab$10303$XGD4L)
                                                     (begin
                                                       (g$extend-rib!$7563$XGD4L
                                                         g$rib$10175$XGD4L
                                                         g$id$10297$XGD4L
                                                         g$lab$10303$XGD4L)
                                                       (g$chi-body*$7921$XGD4L
                                                         (cdr g$e*$10168$XGD4L)
                                                         (g$add-lexical$7824$XGD4L
                                                           g$lab$10303$XGD4L
                                                           g$lex$10302$XGD4L
                                                           g$r$10169$XGD4L)
                                                         g$mr$10170$XGD4L
                                                         (cons
                                                           g$lex$10302$XGD4L
                                                           g$lex*$10171$XGD4L)
                                                         (cons
                                                           g$rhs$10296$XGD4L
                                                           g$rhs*$10172$XGD4L)
                                                         g$mod**$10173$XGD4L
                                                         g$kwd*$10187$XGD4L
                                                         g$rib$10175$XGD4L
                                                         g$top?$10176$XGD4L))))
                                                  g$lex$10301$XGD4L
                                                  g$lab$10300$XGD4L)))))))
                                       g$rhs$10295$XGD4L
                                       g$id$10294$XGD4L))))
                                 (if (eqv? g$t$10188$XGD4L 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7818$XGD4L
                                          g$e$10177$XGD4L)))
                                     (case-lambda
                                       ((g$id$10285$XGD4L g$rhs$10286$XGD4L)
                                        ((case-lambda
                                           ((g$rhs$10287$XGD4L g$id$10288$XGD4L)
                                            (begin
                                              (if (g$bound-id-member?$7606$XGD4L
                                                    g$id$10288$XGD4L
                                                    g$kwd*$10187$XGD4L)
                                                (g$syntax-violation$7983$XGD4L
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10177$XGD4L)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10289$XGD4L
                                                    g$expanded-rhs$10290$XGD4L)
                                                  (begin
                                                    (g$extend-rib!$7563$XGD4L
                                                      g$rib$10175$XGD4L
                                                      g$id$10288$XGD4L
                                                      g$lab$10289$XGD4L)
                                                    ((case-lambda
                                                       ((g$b$10291$XGD4L)
                                                        (g$chi-body*$7921$XGD4L
                                                          (cdr g$e*$10168$XGD4L)
                                                          (cons
                                                            (cons
                                                              g$lab$10289$XGD4L
                                                              g$b$10291$XGD4L)
                                                            g$r$10169$XGD4L)
                                                          (cons
                                                            (cons
                                                              g$lab$10289$XGD4L
                                                              g$b$10291$XGD4L)
                                                            g$mr$10170$XGD4L)
                                                          g$lex*$10171$XGD4L
                                                          g$rhs*$10172$XGD4L
                                                          g$mod**$10173$XGD4L
                                                          g$kwd*$10187$XGD4L
                                                          g$rib$10175$XGD4L
                                                          g$top?$10176$XGD4L)))
                                                     (g$make-eval-transformer$7631$XGD4L
                                                       g$expanded-rhs$10290$XGD4L)))))
                                               (g$gen-define-label$7548$XGD4L
                                                 g$id$10288$XGD4L
                                                 g$rib$10175$XGD4L)
                                               (g$expand-transformer$7922$XGD4L
                                                 g$rhs$10287$XGD4L
                                                 g$mr$10170$XGD4L)))))
                                         g$rhs$10286$XGD4L
                                         g$id$10285$XGD4L))))
                                   (if (memv
                                         g$t$10188$XGD4L
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10270$XGD4L)
                                         ((case-lambda
                                            ((g$ls/false$10271$XGD4L)
                                             (if (if g$ls/false$10271$XGD4L
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10272$XGD4L
                                                            g$xrhs*$10273$XGD4L
                                                            g$xbody*$10274$XGD4L)
                                                          (if (g$valid-bound-ids?$7604$XGD4L
                                                                g$xlhs*$10272$XGD4L)
                                                            (void)
                                                            (g$syntax-violation$7983$XGD4L
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10177$XGD4L))))
                                                       g$ls/false$10271$XGD4L))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10275$XGD4L
                                                      g$xrhs*$10276$XGD4L
                                                      g$xbody*$10277$XGD4L)
                                                    ((case-lambda
                                                       ((g$xlab*$10278$XGD4L)
                                                        ((case-lambda
                                                           ((g$xrib$10279$XGD4L)
                                                            ((case-lambda
                                                               ((g$xb*$10280$XGD4L)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7921$XGD4L
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10281$XGD4L)
                                                                                (g$add-subst$7589$XGD4L
                                                                                  g$xrib$10279$XGD4L
                                                                                  g$x$10281$XGD4L)))
                                                                             g$xbody*$10277$XGD4L)
                                                                        (cdr g$e*$10168$XGD4L))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10278$XGD4L
                                                                             g$xb*$10280$XGD4L)
                                                                        g$r$10169$XGD4L)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10278$XGD4L
                                                                             g$xb*$10280$XGD4L)
                                                                        g$mr$10170$XGD4L)
                                                                      g$lex*$10171$XGD4L
                                                                      g$rhs*$10172$XGD4L
                                                                      g$mod**$10173$XGD4L
                                                                      g$kwd*$10187$XGD4L
                                                                      g$rib$10175$XGD4L
                                                                      g$top?$10176$XGD4L))))))
                                                             (map (case-lambda
                                                                    ((g$x$10282$XGD4L)
                                                                     (g$make-eval-transformer$7631$XGD4L
                                                                       (g$expand-transformer$7922$XGD4L
                                                                         (if (eq? g$type$10186$XGD4L
                                                                                  'let-syntax)
                                                                           g$x$10282$XGD4L
                                                                           (g$add-subst$7589$XGD4L
                                                                             g$xrib$10279$XGD4L
                                                                             g$x$10282$XGD4L))
                                                                         g$mr$10170$XGD4L))))
                                                                  g$xrhs*$10276$XGD4L))))
                                                         (g$make-full-rib$7567$XGD4L
                                                           g$xlhs*$10275$XGD4L
                                                           g$xlab*$10278$XGD4L))))
                                                     (map g$gen-label$7545$XGD4L
                                                          g$xlhs*$10275$XGD4L))))
                                                 g$ls/false$10271$XGD4L)
                                               (g$syntax-violation$7983$XGD4L
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10270$XGD4L))))
                                          (g$syntax-dispatch$7877$XGD4L
                                            g$t$10270$XGD4L
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10177$XGD4L)
                                     (if (eqv? g$t$10188$XGD4L 'begin)
                                       ((case-lambda
                                          ((g$t$10267$XGD4L)
                                           ((case-lambda
                                              ((g$ls/false$10268$XGD4L)
                                               (if g$ls/false$10268$XGD4L
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10269$XGD4L)
                                                      (g$chi-body*$7921$XGD4L
                                                        (append
                                                          g$x*$10269$XGD4L
                                                          (cdr g$e*$10168$XGD4L))
                                                        g$r$10169$XGD4L
                                                        g$mr$10170$XGD4L
                                                        g$lex*$10171$XGD4L
                                                        g$rhs*$10172$XGD4L
                                                        g$mod**$10173$XGD4L
                                                        g$kwd*$10187$XGD4L
                                                        g$rib$10175$XGD4L
                                                        g$top?$10176$XGD4L)))
                                                   g$ls/false$10268$XGD4L)
                                                 (g$syntax-violation$7983$XGD4L
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10267$XGD4L))))
                                            (g$syntax-dispatch$7877$XGD4L
                                              g$t$10267$XGD4L
                                              '(_ . each-any)))))
                                        g$e$10177$XGD4L)
                                       (if (memv
                                             g$t$10188$XGD4L
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7921$XGD4L
                                           (cons
                                             (g$add-subst$7589$XGD4L
                                               g$rib$10175$XGD4L
                                               (g$chi-global-macro$7892$XGD4L
                                                 g$value$10185$XGD4L
                                                 g$e$10177$XGD4L))
                                             (cdr g$e*$10168$XGD4L))
                                           g$r$10169$XGD4L
                                           g$mr$10170$XGD4L
                                           g$lex*$10171$XGD4L
                                           g$rhs*$10172$XGD4L
                                           g$mod**$10173$XGD4L
                                           g$kwd*$10187$XGD4L
                                           g$rib$10175$XGD4L
                                           g$top?$10176$XGD4L)
                                         (if (memv
                                               g$t$10188$XGD4L
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7921$XGD4L
                                             (cons
                                               (g$add-subst$7589$XGD4L
                                                 g$rib$10175$XGD4L
                                                 (g$chi-local-macro$7891$XGD4L
                                                   g$value$10185$XGD4L
                                                   g$e$10177$XGD4L))
                                               (cdr g$e*$10168$XGD4L))
                                             g$r$10169$XGD4L
                                             g$mr$10170$XGD4L
                                             g$lex*$10171$XGD4L
                                             g$rhs*$10172$XGD4L
                                             g$mod**$10173$XGD4L
                                             g$kwd*$10187$XGD4L
                                             g$rib$10175$XGD4L
                                             g$top?$10176$XGD4L)
                                           (if (memv
                                                 g$t$10188$XGD4L
                                                 '(macro macro!))
                                             (g$chi-body*$7921$XGD4L
                                               (cons
                                                 (g$add-subst$7589$XGD4L
                                                   g$rib$10175$XGD4L
                                                   (g$chi-macro$7890$XGD4L
                                                     g$value$10185$XGD4L
                                                     g$e$10177$XGD4L))
                                                 (cdr g$e*$10168$XGD4L))
                                               g$r$10169$XGD4L
                                               g$mr$10170$XGD4L
                                               g$lex*$10171$XGD4L
                                               g$rhs*$10172$XGD4L
                                               g$mod**$10173$XGD4L
                                               g$kwd*$10187$XGD4L
                                               g$rib$10175$XGD4L
                                               g$top?$10176$XGD4L)
                                             (if (eqv? g$t$10188$XGD4L 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7920$XGD4L
                                                      g$e$10177$XGD4L
                                                      g$r$10169$XGD4L
                                                      g$mr$10170$XGD4L
                                                      g$lex*$10171$XGD4L
                                                      g$rhs*$10172$XGD4L
                                                      g$mod**$10173$XGD4L
                                                      g$kwd*$10187$XGD4L)))
                                                 (case-lambda
                                                   ((g$lex*$10249$XGD4L
                                                      g$rhs*$10250$XGD4L
                                                      g$m-exp-id*$10251$XGD4L
                                                      g$m-exp-lab*$10252$XGD4L
                                                      g$r$10253$XGD4L
                                                      g$mr$10254$XGD4L
                                                      g$mod**$10255$XGD4L
                                                      g$kwd*$10256$XGD4L)
                                                    ((case-lambda
                                                       ((g$kwd*$10257$XGD4L
                                                          g$mod**$10258$XGD4L
                                                          g$mr$10259$XGD4L
                                                          g$r$10260$XGD4L
                                                          g$m-exp-lab*$10261$XGD4L
                                                          g$m-exp-id*$10262$XGD4L
                                                          g$rhs*$10263$XGD4L
                                                          g$lex*$10264$XGD4L)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10265$XGD4L
                                                                 g$lab$10266$XGD4L)
                                                               (g$extend-rib!$7563$XGD4L
                                                                 g$rib$10175$XGD4L
                                                                 g$id$10265$XGD4L
                                                                 g$lab$10266$XGD4L)))
                                                            g$m-exp-id*$10262$XGD4L
                                                            g$m-exp-lab*$10261$XGD4L)
                                                          (g$chi-body*$7921$XGD4L
                                                            (cdr g$e*$10168$XGD4L)
                                                            g$r$10260$XGD4L
                                                            g$mr$10259$XGD4L
                                                            g$lex*$10264$XGD4L
                                                            g$rhs*$10263$XGD4L
                                                            g$mod**$10258$XGD4L
                                                            g$kwd*$10257$XGD4L
                                                            g$rib$10175$XGD4L
                                                            g$top?$10176$XGD4L))))
                                                     g$kwd*$10256$XGD4L
                                                     g$mod**$10255$XGD4L
                                                     g$mr$10254$XGD4L
                                                     g$r$10253$XGD4L
                                                     g$m-exp-lab*$10252$XGD4L
                                                     g$m-exp-id*$10251$XGD4L
                                                     g$rhs*$10250$XGD4L
                                                     g$lex*$10249$XGD4L))))
                                               (if (eqv?
                                                     g$t$10188$XGD4L
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7970$XGD4L
                                                     (g$stx->datum$7610$XGD4L
                                                       g$e$10177$XGD4L))
                                                   (g$chi-body*$7921$XGD4L
                                                     (cdr g$e*$10168$XGD4L)
                                                     g$r$10169$XGD4L
                                                     g$mr$10170$XGD4L
                                                     g$lex*$10171$XGD4L
                                                     g$rhs*$10172$XGD4L
                                                     g$mod**$10173$XGD4L
                                                     g$kwd*$10187$XGD4L
                                                     g$rib$10175$XGD4L
                                                     g$top?$10176$XGD4L))
                                                 (if (eqv?
                                                       g$t$10188$XGD4L
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10189$XGD4L
                                                                     (case-lambda
                                                                       ((g$e$10231$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$t$10232$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10233$XGD4L)
                                                                                (if (if g$ls/false$10233$XGD4L
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10234$XGD4L)
                                                                                             (g$id?$7599$XGD4L
                                                                                               g$id$10234$XGD4L)))
                                                                                          g$ls/false$10233$XGD4L))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10235$XGD4L)
                                                                                       '#t))
                                                                                    g$ls/false$10233$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$t$10236$XGD4L)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10237$XGD4L)
                                                                                          (if g$ls/false$10237$XGD4L
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10238$XGD4L)
                                                                                                 '#f))
                                                                                              g$ls/false$10237$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$t$10239$XGD4L)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10240$XGD4L)
                                                                                                    (if g$ls/false$10240$XGD4L
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7983$XGD4L
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10231$XGD4L)))
                                                                                                        g$ls/false$10240$XGD4L)
                                                                                                      (g$syntax-violation$7983$XGD4L
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10239$XGD4L))))
                                                                                                 (g$syntax-dispatch$7877$XGD4L
                                                                                                   g$t$10239$XGD4L
                                                                                                   '_))))
                                                                                             g$t$10236$XGD4L))))
                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                         g$t$10236$XGD4L
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10232$XGD4L))))
                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                               g$t$10232$XGD4L
                                                                               '(_ any)))))
                                                                         g$e$10231$XGD4L))))
                                                                   (g$module-import$10190$XGD4L
                                                                     (case-lambda
                                                                       ((g$e$10214$XGD4L
                                                                          g$r$10215$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$t$10216$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10217$XGD4L)
                                                                                (if (if g$ls/false$10217$XGD4L
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10218$XGD4L)
                                                                                             (g$id?$7599$XGD4L
                                                                                               g$id$10218$XGD4L)))
                                                                                          g$ls/false$10217$XGD4L))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10219$XGD4L)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7619$XGD4L
                                                                                              g$id$10219$XGD4L
                                                                                              g$r$10215$XGD4L)))
                                                                                         (case-lambda
                                                                                           ((g$type$10223$XGD4L
                                                                                              g$value$10224$XGD4L
                                                                                              g$kwd$10225$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10226$XGD4L
                                                                                                  g$value$10227$XGD4L
                                                                                                  g$type$10228$XGD4L)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10229$XGD4L)
                                                                                                    (if (eqv?
                                                                                                          g$t$10229$XGD4L
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10230$XGD4L)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7919$XGD4L
                                                                                                              g$iface$10230$XGD4L
                                                                                                              g$id$10219$XGD4L)
                                                                                                            (g$module-interface-exp-lab-vec$7915$XGD4L
                                                                                                              g$iface$10230$XGD4L))))
                                                                                                       g$value$10227$XGD4L)
                                                                                                      (g$syntax-violation$7983$XGD4L
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10214$XGD4L))))
                                                                                                 g$type$10228$XGD4L)))
                                                                                             g$kwd$10225$XGD4L
                                                                                             g$value$10224$XGD4L
                                                                                             g$type$10223$XGD4L))))))
                                                                                    g$ls/false$10217$XGD4L)
                                                                                  (g$syntax-violation$7983$XGD4L
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10216$XGD4L))))
                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                               g$t$10216$XGD4L
                                                                               '(_ any)))))
                                                                         g$e$10214$XGD4L))))
                                                                   (g$library-import$10191$XGD4L
                                                                     (case-lambda
                                                                       ((g$e$10200$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$t$10201$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10202$XGD4L)
                                                                                (if g$ls/false$10202$XGD4L
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10203$XGD4L
                                                                                         g$imp*$10204$XGD4L)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7926$XGD4L
                                                                                              (g$syntax->datum$7986$XGD4L
                                                                                                g$imp*$10204$XGD4L))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10207$XGD4L
                                                                                              g$subst-labels$10208$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10209$XGD4L
                                                                                                  g$subst-names$10210$XGD4L)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10211$XGD4L)
                                                                                                       (g$datum->stx$7582$XGD4L
                                                                                                         g$ctxt$10203$XGD4L
                                                                                                         g$name$10211$XGD4L)))
                                                                                                    g$subst-names$10210$XGD4L)
                                                                                                  g$subst-labels$10209$XGD4L)))
                                                                                             g$subst-labels$10208$XGD4L
                                                                                             g$subst-names$10207$XGD4L))))))
                                                                                    g$ls/false$10202$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$t$10212$XGD4L)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10213$XGD4L)
                                                                                          (if g$ls/false$10213$XGD4L
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7983$XGD4L
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10200$XGD4L)))
                                                                                              g$ls/false$10213$XGD4L)
                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10212$XGD4L))))
                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                         g$t$10212$XGD4L
                                                                                         '_))))
                                                                                   g$t$10201$XGD4L))))
                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                               g$t$10201$XGD4L
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10200$XGD4L)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10189$XGD4L
                                                                      g$e$10177$XGD4L)
                                                                  (g$module-import$10190$XGD4L
                                                                    g$e$10177$XGD4L
                                                                    g$r$10169$XGD4L)
                                                                  (g$library-import$10191$XGD4L
                                                                    g$e$10177$XGD4L))))
                                                             (case-lambda
                                                               ((g$id*$10194$XGD4L
                                                                  g$lab*$10195$XGD4L)
                                                                ((case-lambda
                                                                   ((g$lab*$10196$XGD4L
                                                                      g$id*$10197$XGD4L)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10198$XGD4L
                                                                           g$lab$10199$XGD4L)
                                                                         (g$extend-rib!$7563$XGD4L
                                                                           g$rib$10175$XGD4L
                                                                           g$id$10198$XGD4L
                                                                           g$lab$10199$XGD4L)))
                                                                      g$id*$10197$XGD4L
                                                                      g$lab*$10196$XGD4L)))
                                                                 g$lab*$10195$XGD4L
                                                                 g$id*$10194$XGD4L))))))))
                                                     (g$chi-body*$7921$XGD4L
                                                       (cdr g$e*$10168$XGD4L)
                                                       g$r$10169$XGD4L
                                                       g$mr$10170$XGD4L
                                                       g$lex*$10171$XGD4L
                                                       g$rhs*$10172$XGD4L
                                                       g$mod**$10173$XGD4L
                                                       g$kwd*$10187$XGD4L
                                                       g$rib$10175$XGD4L
                                                       g$top?$10176$XGD4L))
                                                   (if g$top?$10176$XGD4L
                                                     (g$chi-body*$7921$XGD4L
                                                       (cdr g$e*$10168$XGD4L)
                                                       g$r$10169$XGD4L
                                                       g$mr$10170$XGD4L
                                                       (cons
                                                         (g$gen-lexical$7543$XGD4L
                                                           'dummy)
                                                         g$lex*$10171$XGD4L)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$10177$XGD4L)
                                                         g$rhs*$10172$XGD4L)
                                                       g$mod**$10173$XGD4L
                                                       g$kwd*$10187$XGD4L
                                                       g$rib$10175$XGD4L
                                                       g$top?$10176$XGD4L)
                                                     (values
                                                       g$e*$10168$XGD4L
                                                       g$r$10169$XGD4L
                                                       g$mr$10170$XGD4L
                                                       g$lex*$10171$XGD4L
                                                       g$rhs*$10172$XGD4L
                                                       g$mod**$10173$XGD4L
                                                       g$kwd*$10187$XGD4L))))))))))))))
                            g$type$10186$XGD4L)))
                        (if (g$id?$7599$XGD4L g$kwd$10184$XGD4L)
                          (cons g$kwd$10184$XGD4L g$kwd*$10174$XGD4L)
                          g$kwd*$10174$XGD4L))))
                    g$kwd$10183$XGD4L
                    g$value$10182$XGD4L
                    g$type$10181$XGD4L))))))
           (car g$e*$10168$XGD4L))))))
   (g$expand-transformer$7922$XGD4L
     g$expand-transformer$11372$XGD4L
     (case-lambda
       ((g$expr$10304$XGD4L g$r$10305$XGD4L)
        ((case-lambda
           ((g$rtc$10306$XGD4L)
            ((case-lambda
               ((g$expanded-rhs$10307$XGD4L)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10308$XGD4L)
                        (case-lambda
                          ((g$x$10309$XGD4L)
                           (begin
                             (g$invoke-library$7414$XGD4L g$x$10309$XGD4L)
                             (g$mark-visit$10308$XGD4L g$x$10309$XGD4L))))))
                     (g$vis-collector$7930$XGD4L))
                    (g$rtc$10306$XGD4L))
                  g$expanded-rhs$10307$XGD4L)))
             ((case-lambda
                ((g$inv-collector$10314$XGD4L
                   g$vis-collector$10315$XGD4L
                   g$inv-collector$10316$XGD4L
                   g$vis-collector$10317$XGD4L)
                 ((case-lambda
                    ((g$swap$10318$XGD4L)
                     (dynamic-wind
                       g$swap$10318$XGD4L
                       (case-lambda
                         (()
                          (g$chi-expr$7895$XGD4L
                            g$expr$10304$XGD4L
                            g$r$10305$XGD4L
                            g$r$10305$XGD4L)))
                       g$swap$10318$XGD4L)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10319$XGD4L)
                           (begin
                             (g$inv-collector$10314$XGD4L
                               g$inv-collector$10316$XGD4L)
                             (set! g$inv-collector$10316$XGD4L
                               g$t$10319$XGD4L))))
                        (g$inv-collector$10314$XGD4L))
                       ((case-lambda
                          ((g$t$10320$XGD4L)
                           (begin
                             (g$vis-collector$10315$XGD4L
                               g$vis-collector$10317$XGD4L)
                             (set! g$vis-collector$10317$XGD4L
                               g$t$10320$XGD4L))))
                        (g$vis-collector$10315$XGD4L))))))))
              g$inv-collector$7929$XGD4L
              g$vis-collector$7930$XGD4L
              g$rtc$10306$XGD4L
              (case-lambda ((g$x$10321$XGD4L) (values)))))))
         (g$make-collector$7928$XGD4L)))))
   (g$parse-exports$7923$XGD4L
     g$parse-exports$11373$XGD4L
     (case-lambda
       ((g$exp*$10322$XGD4L)
        (letrec* ((g$idsyn?$10323$XGD4L
                    (case-lambda
                      ((g$x$10338$XGD4L)
                       (symbol?
                         (g$syntax->datum$7986$XGD4L g$x$10338$XGD4L))))))
          ((letrec ((g$f$10324$XGD4L
                      (case-lambda
                        ((g$exp*$10325$XGD4L
                           g$int*$10326$XGD4L
                           g$ext*$10327$XGD4L)
                         (if (null? g$exp*$10325$XGD4L)
                           (begin
                             ((case-lambda
                                ((g$id*$10328$XGD4L)
                                 (if (g$valid-bound-ids?$7604$XGD4L
                                       g$id*$10328$XGD4L)
                                   (void)
                                   (g$syntax-violation$7983$XGD4L
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7905$XGD4L
                                       g$id*$10328$XGD4L)))))
                              (map (case-lambda
                                     ((g$x$10329$XGD4L)
                                      (g$make-stx$7572$XGD4L
                                        g$x$10329$XGD4L
                                        g$top-mark*$7541$XGD4L
                                        '()
                                        '())))
                                   g$ext*$10327$XGD4L))
                             (values
                               (map g$syntax->datum$7986$XGD4L
                                    g$int*$10326$XGD4L)
                               (map g$syntax->datum$7986$XGD4L
                                    g$ext*$10327$XGD4L)))
                           ((case-lambda
                              ((g$t$10330$XGD4L)
                               ((case-lambda
                                  ((g$ls/false$10331$XGD4L)
                                   (if g$ls/false$10331$XGD4L
                                     (apply
                                       (case-lambda
                                         ((g$rename$10332$XGD4L
                                            g$i*$10333$XGD4L
                                            g$e*$10334$XGD4L)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7986$XGD4L
                                                           g$rename$10332$XGD4L)
                                                         'rename)
                                                  (if (g$for-all$5871$XGD4L
                                                        g$idsyn?$10323$XGD4L
                                                        g$i*$10333$XGD4L)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5871$XGD4L
                                                        g$idsyn?$10323$XGD4L
                                                        g$e*$10334$XGD4L))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7983$XGD4L
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10325$XGD4L)))
                                            (g$f$10324$XGD4L
                                              (cdr g$exp*$10325$XGD4L)
                                              (append
                                                g$i*$10333$XGD4L
                                                g$int*$10326$XGD4L)
                                              (append
                                                g$e*$10334$XGD4L
                                                g$ext*$10327$XGD4L)))))
                                       g$ls/false$10331$XGD4L)
                                     ((case-lambda
                                        ((g$t$10335$XGD4L)
                                         ((case-lambda
                                            ((g$ls/false$10336$XGD4L)
                                             (if g$ls/false$10336$XGD4L
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10337$XGD4L)
                                                    (begin
                                                      (if (g$idsyn?$10323$XGD4L
                                                            g$ie$10337$XGD4L)
                                                        (void)
                                                        (g$syntax-violation$7983$XGD4L
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10337$XGD4L))
                                                      (g$f$10324$XGD4L
                                                        (cdr g$exp*$10325$XGD4L)
                                                        (cons
                                                          g$ie$10337$XGD4L
                                                          g$int*$10326$XGD4L)
                                                        (cons
                                                          g$ie$10337$XGD4L
                                                          g$ext*$10327$XGD4L)))))
                                                 g$ls/false$10336$XGD4L)
                                               (g$syntax-violation$7983$XGD4L
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10335$XGD4L))))
                                          (g$syntax-dispatch$7877$XGD4L
                                            g$t$10335$XGD4L
                                            'any))))
                                      g$t$10330$XGD4L))))
                                (g$syntax-dispatch$7877$XGD4L
                                  g$t$10330$XGD4L
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10325$XGD4L)))))))
             g$f$10324$XGD4L)
           g$exp*$10322$XGD4L
           '()
           '())))))
   (g$parse-library-name$7924$XGD4L
     g$parse-library-name$11374$XGD4L
     (case-lambda
       ((g$spec$10339$XGD4L)
        (letrec* ((g$parse$10340$XGD4L
                    (case-lambda
                      ((g$x$10347$XGD4L)
                       ((case-lambda
                          ((g$t$10348$XGD4L)
                           ((case-lambda
                              ((g$ls/false$10349$XGD4L)
                               (if (if g$ls/false$10349$XGD4L
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10350$XGD4L)
                                            (g$for-all$5871$XGD4L
                                              (case-lambda
                                                ((g$x$10351$XGD4L)
                                                 ((case-lambda
                                                    ((g$x$10352$XGD4L)
                                                     (if (integer?
                                                           g$x$10352$XGD4L)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10352$XGD4L))
                                                       '#f)))
                                                  (g$syntax->datum$7986$XGD4L
                                                    g$x$10351$XGD4L))))
                                              g$v*$10350$XGD4L)))
                                         g$ls/false$10349$XGD4L))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10353$XGD4L)
                                      (values
                                        '()
                                        (map g$syntax->datum$7986$XGD4L
                                             g$v*$10353$XGD4L))))
                                   g$ls/false$10349$XGD4L)
                                 ((case-lambda
                                    ((g$t$10354$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$10355$XGD4L)
                                         (if (if g$ls/false$10355$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10356$XGD4L
                                                        g$rest$10357$XGD4L)
                                                      (symbol?
                                                        (g$syntax->datum$7986$XGD4L
                                                          g$x$10356$XGD4L))))
                                                   g$ls/false$10355$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10358$XGD4L
                                                  g$rest$10359$XGD4L)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10340$XGD4L
                                                       g$rest$10359$XGD4L)))
                                                  (case-lambda
                                                    ((g$x*$10362$XGD4L
                                                       g$v*$10363$XGD4L)
                                                     ((case-lambda
                                                        ((g$v*$10364$XGD4L
                                                           g$x*$10365$XGD4L)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7986$XGD4L
                                                               g$x$10358$XGD4L)
                                                             g$x*$10365$XGD4L)
                                                           g$v*$10364$XGD4L)))
                                                      g$v*$10363$XGD4L
                                                      g$x*$10362$XGD4L))))))
                                             g$ls/false$10355$XGD4L)
                                           ((case-lambda
                                              ((g$t$10366$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$10367$XGD4L)
                                                   (if g$ls/false$10367$XGD4L
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10367$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$10368$XGD4L)
                                                         ((case-lambda
                                                            ((g$ls/false$10369$XGD4L)
                                                             (if g$ls/false$10369$XGD4L
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7983$XGD4L
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10339$XGD4L)))
                                                                 g$ls/false$10369$XGD4L)
                                                               (g$syntax-violation$7983$XGD4L
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10368$XGD4L))))
                                                          (g$syntax-dispatch$7877$XGD4L
                                                            g$t$10368$XGD4L
                                                            '_))))
                                                      g$t$10366$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$10366$XGD4L
                                                  '()))))
                                            g$t$10354$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$10354$XGD4L
                                        '(any . any)))))
                                  g$t$10348$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$10348$XGD4L
                              '(each-any)))))
                        g$x$10347$XGD4L)))))
          (call-with-values
            (case-lambda (() (g$parse$10340$XGD4L g$spec$10339$XGD4L)))
            (case-lambda
              ((g$name*$10343$XGD4L g$ver*$10344$XGD4L)
               ((case-lambda
                  ((g$ver*$10345$XGD4L g$name*$10346$XGD4L)
                   (begin
                     (if (null? g$name*$10346$XGD4L)
                       (g$syntax-violation$7983$XGD4L
                         '#f
                         '"empty library name"
                         g$spec$10339$XGD4L)
                       (void))
                     (values g$name*$10346$XGD4L g$ver*$10345$XGD4L))))
                g$ver*$10344$XGD4L
                g$name*$10343$XGD4L))))))))
   (g$parse-library$7925$XGD4L
     g$parse-library$11375$XGD4L
     (case-lambda
       ((g$e$10370$XGD4L)
        ((case-lambda
           ((g$t$10371$XGD4L)
            ((case-lambda
               ((g$ls/false$10372$XGD4L)
                (if (if g$ls/false$10372$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10373$XGD4L
                               g$name*$10374$XGD4L
                               g$export$10375$XGD4L
                               g$exp*$10376$XGD4L
                               g$import$10377$XGD4L
                               g$imp*$10378$XGD4L
                               g$b*$10379$XGD4L)
                             (if (eq? (g$syntax->datum$7986$XGD4L
                                        g$export$10375$XGD4L)
                                      'export)
                               (if (eq? (g$syntax->datum$7986$XGD4L
                                          g$import$10377$XGD4L)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7986$XGD4L
                                          g$library$10373$XGD4L)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10372$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10380$XGD4L
                         g$name*$10381$XGD4L
                         g$export$10382$XGD4L
                         g$exp*$10383$XGD4L
                         g$import$10384$XGD4L
                         g$imp*$10385$XGD4L
                         g$b*$10386$XGD4L)
                       (values
                         g$name*$10381$XGD4L
                         g$exp*$10383$XGD4L
                         g$imp*$10385$XGD4L
                         g$b*$10386$XGD4L)))
                    g$ls/false$10372$XGD4L)
                  ((case-lambda
                     ((g$t$10387$XGD4L)
                      ((case-lambda
                         ((g$ls/false$10388$XGD4L)
                          (if g$ls/false$10388$XGD4L
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7983$XGD4L
                                   '#f
                                   '"malformed library"
                                   g$e$10370$XGD4L)))
                              g$ls/false$10388$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$10387$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L g$t$10387$XGD4L '_))))
                   g$t$10371$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$10371$XGD4L
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10370$XGD4L))))
   (g$parse-import-spec*$7926$XGD4L
     g$parse-import-spec*$11376$XGD4L
     (case-lambda
       ((g$imp*$10389$XGD4L)
        (letrec* ((g$idsyn?$10390$XGD4L
                    (case-lambda
                      ((g$x$10649$XGD4L)
                       (symbol? (g$syntax->datum$7986$XGD4L g$x$10649$XGD4L)))))
                  (g$dup-error$10391$XGD4L
                    (case-lambda
                      ((g$name$10648$XGD4L)
                       (g$syntax-violation$7983$XGD4L
                         'import
                         '"two imports with different bindings"
                         g$name$10648$XGD4L))))
                  (g$merge-substs$10392$XGD4L
                    (case-lambda
                      ((g$s$10639$XGD4L g$subst$10640$XGD4L)
                       (letrec* ((g$insert-to-subst$10641$XGD4L
                                   (case-lambda
                                     ((g$a$10642$XGD4L g$subst$10643$XGD4L)
                                      ((case-lambda
                                         ((g$name$10644$XGD4L
                                            g$label$10645$XGD4L)
                                          ((case-lambda
                                             ((g$t$10646$XGD4L)
                                              (if g$t$10646$XGD4L
                                                ((case-lambda
                                                   ((g$x$10647$XGD4L)
                                                    (if (eq? (cdr g$x$10647$XGD4L)
                                                             g$label$10645$XGD4L)
                                                      g$subst$10643$XGD4L
                                                      (g$dup-error$10391$XGD4L
                                                        g$name$10644$XGD4L))))
                                                 g$t$10646$XGD4L)
                                                (cons
                                                  g$a$10642$XGD4L
                                                  g$subst$10643$XGD4L))))
                                           (assq
                                             g$name$10644$XGD4L
                                             g$subst$10643$XGD4L))))
                                       (car g$a$10642$XGD4L)
                                       (cdr g$a$10642$XGD4L))))))
                         (if (null? g$s$10639$XGD4L)
                           g$subst$10640$XGD4L
                           (g$insert-to-subst$10641$XGD4L
                             (car g$s$10639$XGD4L)
                             (g$merge-substs$10392$XGD4L
                               (cdr g$s$10639$XGD4L)
                               g$subst$10640$XGD4L)))))))
                  (g$exclude*$10393$XGD4L
                    (case-lambda
                      ((g$sym*$10615$XGD4L g$subst$10616$XGD4L)
                       (letrec* ((g$exclude$10617$XGD4L
                                   (case-lambda
                                     ((g$sym$10630$XGD4L g$subst$10631$XGD4L)
                                      (if (null? g$subst$10631$XGD4L)
                                        (g$syntax-violation$7983$XGD4L
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10630$XGD4L)
                                        (if (eq? g$sym$10630$XGD4L
                                                 (g$caar$5401$XGD4L
                                                   g$subst$10631$XGD4L))
                                          (values
                                            (g$cdar$5403$XGD4L
                                              g$subst$10631$XGD4L)
                                            (cdr g$subst$10631$XGD4L))
                                          ((case-lambda
                                             ((g$a$10632$XGD4L)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10617$XGD4L
                                                     g$sym$10630$XGD4L
                                                     (cdr g$subst$10631$XGD4L))))
                                                (case-lambda
                                                  ((g$old$10635$XGD4L
                                                     g$subst$10636$XGD4L)
                                                   ((case-lambda
                                                      ((g$subst$10637$XGD4L
                                                         g$old$10638$XGD4L)
                                                       (values
                                                         g$old$10638$XGD4L
                                                         (cons
                                                           g$a$10632$XGD4L
                                                           g$subst$10637$XGD4L))))
                                                    g$subst$10636$XGD4L
                                                    g$old$10635$XGD4L))))))
                                           (car g$subst$10631$XGD4L))))))))
                         (if (null? g$sym*$10615$XGD4L)
                           (values '() g$subst$10616$XGD4L)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10617$XGD4L
                                  (car g$sym*$10615$XGD4L)
                                  g$subst$10616$XGD4L)))
                             (case-lambda
                               ((g$old$10620$XGD4L g$subst$10621$XGD4L)
                                ((case-lambda
                                   ((g$subst$10622$XGD4L g$old$10623$XGD4L)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10393$XGD4L
                                           (cdr g$sym*$10615$XGD4L)
                                           g$subst$10622$XGD4L)))
                                      (case-lambda
                                        ((g$old*$10626$XGD4L
                                           g$subst$10627$XGD4L)
                                         ((case-lambda
                                            ((g$subst$10628$XGD4L
                                               g$old*$10629$XGD4L)
                                             (values
                                               (cons
                                                 g$old$10623$XGD4L
                                                 g$old*$10629$XGD4L)
                                               g$subst$10628$XGD4L)))
                                          g$subst$10627$XGD4L
                                          g$old*$10626$XGD4L))))))
                                 g$subst$10621$XGD4L
                                 g$old$10620$XGD4L)))))))))
                  (g$find*$10394$XGD4L
                    (case-lambda
                      ((g$sym*$10611$XGD4L g$subst$10612$XGD4L)
                       (map (case-lambda
                              ((g$x$10613$XGD4L)
                               ((case-lambda
                                  ((g$t$10614$XGD4L)
                                   (if g$t$10614$XGD4L
                                     (cdr g$t$10614$XGD4L)
                                     (g$syntax-violation$7983$XGD4L
                                       'import
                                       '"cannot find identifier"
                                       g$x$10613$XGD4L))))
                                (assq g$x$10613$XGD4L g$subst$10612$XGD4L))))
                            g$sym*$10611$XGD4L))))
                  (g$rem*$10395$XGD4L
                    (case-lambda
                      ((g$sym*$10607$XGD4L g$subst$10608$XGD4L)
                       ((letrec ((g$f$10609$XGD4L
                                   (case-lambda
                                     ((g$subst$10610$XGD4L)
                                      (if (null? g$subst$10610$XGD4L)
                                        '()
                                        (if (memq
                                              (g$caar$5401$XGD4L
                                                g$subst$10610$XGD4L)
                                              g$sym*$10607$XGD4L)
                                          (g$f$10609$XGD4L
                                            (cdr g$subst$10610$XGD4L))
                                          (cons
                                            (car g$subst$10610$XGD4L)
                                            (g$f$10609$XGD4L
                                              (cdr g$subst$10610$XGD4L)))))))))
                          g$f$10609$XGD4L)
                        g$subst$10608$XGD4L))))
                  (g$remove-dups$10396$XGD4L
                    (case-lambda
                      ((g$ls$10606$XGD4L)
                       (if (null? g$ls$10606$XGD4L)
                         '()
                         (if (memq
                               (car g$ls$10606$XGD4L)
                               (cdr g$ls$10606$XGD4L))
                           (g$remove-dups$10396$XGD4L (cdr g$ls$10606$XGD4L))
                           (cons
                             (car g$ls$10606$XGD4L)
                             (g$remove-dups$10396$XGD4L
                               (cdr g$ls$10606$XGD4L))))))))
                  (g$parse-library-name$10397$XGD4L
                    (case-lambda
                      ((g$spec$10491$XGD4L)
                       (letrec* ((g$subversion?$10492$XGD4L
                                   (case-lambda
                                     ((g$x$10605$XGD4L)
                                      (if (integer? g$x$10605$XGD4L)
                                        (if (exact? g$x$10605$XGD4L)
                                          (begin '#f (>= g$x$10605$XGD4L '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$10493$XGD4L
                                   (case-lambda
                                     ((g$x*$10557$XGD4L)
                                      ((case-lambda
                                         ((g$t$10558$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$10559$XGD4L)
                                              (if (if g$ls/false$10559$XGD4L
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10560$XGD4L)
                                                           (g$subversion?$10492$XGD4L
                                                             (g$syntax->datum$7986$XGD4L
                                                               g$n$10560$XGD4L))))
                                                        g$ls/false$10559$XGD4L))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10561$XGD4L)
                                                     (case-lambda
                                                       ((g$x$10562$XGD4L)
                                                        (= g$x$10562$XGD4L
                                                           (g$syntax->datum$7986$XGD4L
                                                             g$n$10561$XGD4L))))))
                                                  g$ls/false$10559$XGD4L)
                                                ((case-lambda
                                                   ((g$t$10563$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$10564$XGD4L)
                                                        (if (if g$ls/false$10564$XGD4L
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10565$XGD4L
                                                                       g$sub*$10566$XGD4L)
                                                                     (eq? (g$syntax->datum$7986$XGD4L
                                                                            g$p?$10565$XGD4L)
                                                                          'and)))
                                                                  g$ls/false$10564$XGD4L))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10567$XGD4L
                                                                 g$sub*$10568$XGD4L)
                                                               ((case-lambda
                                                                  ((g$p*$10569$XGD4L)
                                                                   (case-lambda
                                                                     ((g$x$10570$XGD4L)
                                                                      (g$for-all$5871$XGD4L
                                                                        (case-lambda
                                                                          ((g$p$10571$XGD4L)
                                                                           (g$p$10571$XGD4L
                                                                             g$x$10570$XGD4L)))
                                                                        g$p*$10569$XGD4L)))))
                                                                (map g$subversion-pred$10493$XGD4L
                                                                     g$sub*$10568$XGD4L))))
                                                            g$ls/false$10564$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$10572$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$10573$XGD4L)
                                                                  (if (if g$ls/false$10573$XGD4L
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10574$XGD4L
                                                                                 g$sub*$10575$XGD4L)
                                                                               (eq? (g$syntax->datum$7986$XGD4L
                                                                                      g$p?$10574$XGD4L)
                                                                                    'or)))
                                                                            g$ls/false$10573$XGD4L))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10576$XGD4L
                                                                           g$sub*$10577$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$p*$10578$XGD4L)
                                                                             (case-lambda
                                                                               ((g$x$10579$XGD4L)
                                                                                (g$exists$5872$XGD4L
                                                                                  (case-lambda
                                                                                    ((g$p$10580$XGD4L)
                                                                                     (g$p$10580$XGD4L
                                                                                       g$x$10579$XGD4L)))
                                                                                  g$p*$10578$XGD4L)))))
                                                                          (map g$subversion-pred$10493$XGD4L
                                                                               g$sub*$10577$XGD4L))))
                                                                      g$ls/false$10573$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$10581$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10582$XGD4L)
                                                                            (if (if g$ls/false$10582$XGD4L
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10583$XGD4L
                                                                                           g$sub$10584$XGD4L)
                                                                                         (eq? (g$syntax->datum$7986$XGD4L
                                                                                                g$p?$10583$XGD4L)
                                                                                              'not)))
                                                                                      g$ls/false$10582$XGD4L))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10585$XGD4L
                                                                                     g$sub$10586$XGD4L)
                                                                                   ((case-lambda
                                                                                      ((g$p$10587$XGD4L)
                                                                                       (case-lambda
                                                                                         ((g$x$10588$XGD4L)
                                                                                          (not (g$p$10587$XGD4L
                                                                                                 g$x$10588$XGD4L))))))
                                                                                    (g$subversion-pred$10493$XGD4L
                                                                                      g$sub$10586$XGD4L))))
                                                                                g$ls/false$10582$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$t$10589$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10590$XGD4L)
                                                                                      (if (if g$ls/false$10590$XGD4L
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10591$XGD4L
                                                                                                     g$n$10592$XGD4L)
                                                                                                   (if (eq? (g$syntax->datum$7986$XGD4L
                                                                                                              g$p?$10591$XGD4L)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10492$XGD4L
                                                                                                         (g$syntax->datum$7986$XGD4L
                                                                                                           g$n$10592$XGD4L)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10590$XGD4L))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10593$XGD4L
                                                                                               g$n$10594$XGD4L)
                                                                                             (case-lambda
                                                                                               ((g$x$10595$XGD4L)
                                                                                                (<= g$x$10595$XGD4L
                                                                                                    (g$syntax->datum$7986$XGD4L
                                                                                                      g$n$10594$XGD4L))))))
                                                                                          g$ls/false$10590$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$t$10596$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10597$XGD4L)
                                                                                                (if (if g$ls/false$10597$XGD4L
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10598$XGD4L
                                                                                                               g$n$10599$XGD4L)
                                                                                                             (if (eq? (g$syntax->datum$7986$XGD4L
                                                                                                                        g$p?$10598$XGD4L)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10492$XGD4L
                                                                                                                   g$n$10599$XGD4L))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10597$XGD4L))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10600$XGD4L
                                                                                                         g$n$10601$XGD4L)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10602$XGD4L)
                                                                                                          (>= g$x$10602$XGD4L
                                                                                                              (g$syntax->datum$7986$XGD4L
                                                                                                                g$n$10601$XGD4L))))))
                                                                                                    g$ls/false$10597$XGD4L)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10603$XGD4L)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10604$XGD4L)
                                                                                                          (if g$ls/false$10604$XGD4L
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7983$XGD4L
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10491$XGD4L
                                                                                                                   g$x*$10557$XGD4L)))
                                                                                                              g$ls/false$10604$XGD4L)
                                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10603$XGD4L))))
                                                                                                       (g$syntax-dispatch$7877$XGD4L
                                                                                                         g$t$10603$XGD4L
                                                                                                         '_))))
                                                                                                   g$t$10596$XGD4L))))
                                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                                               g$t$10596$XGD4L
                                                                                               '(any any)))))
                                                                                         g$t$10589$XGD4L))))
                                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                                     g$t$10589$XGD4L
                                                                                     '(any any)))))
                                                                               g$t$10581$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$10581$XGD4L
                                                                           '(any any)))))
                                                                     g$t$10572$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$10572$XGD4L
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10563$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$10563$XGD4L
                                                       '(any . each-any)))))
                                                 g$t$10558$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$10558$XGD4L
                                             'any))))
                                       g$x*$10557$XGD4L))))
                                 (g$version-pred$10494$XGD4L
                                   (case-lambda
                                     ((g$x*$10517$XGD4L)
                                      ((case-lambda
                                         ((g$t$10518$XGD4L)
                                          ((case-lambda
                                             ((g$ls/false$10519$XGD4L)
                                              (if g$ls/false$10519$XGD4L
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10520$XGD4L)
                                                        '#t))))
                                                  g$ls/false$10519$XGD4L)
                                                ((case-lambda
                                                   ((g$t$10521$XGD4L)
                                                    ((case-lambda
                                                       ((g$ls/false$10522$XGD4L)
                                                        (if (if g$ls/false$10522$XGD4L
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10523$XGD4L
                                                                       g$ver*$10524$XGD4L)
                                                                     (eq? (g$syntax->datum$7986$XGD4L
                                                                            g$c$10523$XGD4L)
                                                                          'and)))
                                                                  g$ls/false$10522$XGD4L))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10525$XGD4L
                                                                 g$ver*$10526$XGD4L)
                                                               ((case-lambda
                                                                  ((g$p*$10527$XGD4L)
                                                                   (case-lambda
                                                                     ((g$x$10528$XGD4L)
                                                                      (g$for-all$5871$XGD4L
                                                                        (case-lambda
                                                                          ((g$p$10529$XGD4L)
                                                                           (g$p$10529$XGD4L
                                                                             g$x$10528$XGD4L)))
                                                                        g$p*$10527$XGD4L)))))
                                                                (map g$version-pred$10494$XGD4L
                                                                     g$ver*$10526$XGD4L))))
                                                            g$ls/false$10522$XGD4L)
                                                          ((case-lambda
                                                             ((g$t$10530$XGD4L)
                                                              ((case-lambda
                                                                 ((g$ls/false$10531$XGD4L)
                                                                  (if (if g$ls/false$10531$XGD4L
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10532$XGD4L
                                                                                 g$ver*$10533$XGD4L)
                                                                               (eq? (g$syntax->datum$7986$XGD4L
                                                                                      g$c$10532$XGD4L)
                                                                                    'or)))
                                                                            g$ls/false$10531$XGD4L))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10534$XGD4L
                                                                           g$ver*$10535$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$p*$10536$XGD4L)
                                                                             (case-lambda
                                                                               ((g$x$10537$XGD4L)
                                                                                (g$exists$5872$XGD4L
                                                                                  (case-lambda
                                                                                    ((g$p$10538$XGD4L)
                                                                                     (g$p$10538$XGD4L
                                                                                       g$x$10537$XGD4L)))
                                                                                  g$p*$10536$XGD4L)))))
                                                                          (map g$version-pred$10494$XGD4L
                                                                               g$ver*$10535$XGD4L))))
                                                                      g$ls/false$10531$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$t$10539$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10540$XGD4L)
                                                                            (if (if g$ls/false$10540$XGD4L
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10541$XGD4L
                                                                                           g$ver$10542$XGD4L)
                                                                                         (eq? (g$syntax->datum$7986$XGD4L
                                                                                                g$c$10541$XGD4L)
                                                                                              'not)))
                                                                                      g$ls/false$10540$XGD4L))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10543$XGD4L
                                                                                     g$ver$10544$XGD4L)
                                                                                   ((case-lambda
                                                                                      ((g$p$10545$XGD4L)
                                                                                       (case-lambda
                                                                                         ((g$x$10546$XGD4L)
                                                                                          (not (g$p$10545$XGD4L
                                                                                                 g$x$10546$XGD4L))))))
                                                                                    (g$version-pred$10494$XGD4L
                                                                                      g$ver$10544$XGD4L))))
                                                                                g$ls/false$10540$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$t$10547$XGD4L)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10548$XGD4L)
                                                                                      (if g$ls/false$10548$XGD4L
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10549$XGD4L)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10550$XGD4L)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10551$XGD4L)
                                                                                                    ((letrec ((g$f$10552$XGD4L
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10553$XGD4L
                                                                                                                     g$x$10554$XGD4L)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10553$XGD4L)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10554$XGD4L)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10553$XGD4L)
                                                                                                                            (car g$x$10554$XGD4L))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10552$XGD4L
                                                                                                                             (cdr g$p*$10553$XGD4L)
                                                                                                                             (cdr g$x$10554$XGD4L)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10552$XGD4L)
                                                                                                     g$p*$10550$XGD4L
                                                                                                     g$x$10551$XGD4L)))))
                                                                                              (map g$subversion-pred$10493$XGD4L
                                                                                                   g$sub*$10549$XGD4L))))
                                                                                          g$ls/false$10548$XGD4L)
                                                                                        ((case-lambda
                                                                                           ((g$t$10555$XGD4L)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10556$XGD4L)
                                                                                                (if g$ls/false$10556$XGD4L
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7983$XGD4L
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10491$XGD4L
                                                                                                         g$x*$10517$XGD4L)))
                                                                                                    g$ls/false$10556$XGD4L)
                                                                                                  (g$syntax-violation$7983$XGD4L
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10555$XGD4L))))
                                                                                             (g$syntax-dispatch$7877$XGD4L
                                                                                               g$t$10555$XGD4L
                                                                                               '_))))
                                                                                         g$t$10547$XGD4L))))
                                                                                   (g$syntax-dispatch$7877$XGD4L
                                                                                     g$t$10547$XGD4L
                                                                                     'each-any))))
                                                                               g$t$10539$XGD4L))))
                                                                         (g$syntax-dispatch$7877$XGD4L
                                                                           g$t$10539$XGD4L
                                                                           '(any any)))))
                                                                     g$t$10530$XGD4L))))
                                                               (g$syntax-dispatch$7877$XGD4L
                                                                 g$t$10530$XGD4L
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10521$XGD4L))))
                                                     (g$syntax-dispatch$7877$XGD4L
                                                       g$t$10521$XGD4L
                                                       '(any . each-any)))))
                                                 g$t$10518$XGD4L))))
                                           (g$syntax-dispatch$7877$XGD4L
                                             g$t$10518$XGD4L
                                             '()))))
                                       g$x*$10517$XGD4L)))))
                         ((letrec ((g$f$10495$XGD4L
                                     (case-lambda
                                       ((g$x$10496$XGD4L)
                                        ((case-lambda
                                           ((g$t$10497$XGD4L)
                                            ((case-lambda
                                               ((g$ls/false$10498$XGD4L)
                                                (if g$ls/false$10498$XGD4L
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10499$XGD4L)
                                                       (values
                                                         '()
                                                         (g$version-pred$10494$XGD4L
                                                           g$version-spec*$10499$XGD4L))))
                                                    g$ls/false$10498$XGD4L)
                                                  ((case-lambda
                                                     ((g$t$10500$XGD4L)
                                                      ((case-lambda
                                                         ((g$ls/false$10501$XGD4L)
                                                          (if (if g$ls/false$10501$XGD4L
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10502$XGD4L
                                                                         g$x*$10503$XGD4L)
                                                                       (g$idsyn?$10390$XGD4L
                                                                         g$x$10502$XGD4L)))
                                                                    g$ls/false$10501$XGD4L))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10504$XGD4L
                                                                   g$x*$10505$XGD4L)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10495$XGD4L
                                                                        g$x*$10505$XGD4L)))
                                                                   (case-lambda
                                                                     ((g$name$10508$XGD4L
                                                                        g$pred$10509$XGD4L)
                                                                      ((case-lambda
                                                                         ((g$pred$10510$XGD4L
                                                                            g$name$10511$XGD4L)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7986$XGD4L
                                                                                g$x$10504$XGD4L)
                                                                              g$name$10511$XGD4L)
                                                                            g$pred$10510$XGD4L)))
                                                                       g$pred$10509$XGD4L
                                                                       g$name$10508$XGD4L))))))
                                                              g$ls/false$10501$XGD4L)
                                                            ((case-lambda
                                                               ((g$t$10512$XGD4L)
                                                                ((case-lambda
                                                                   ((g$ls/false$10513$XGD4L)
                                                                    (if g$ls/false$10513$XGD4L
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10514$XGD4L)
                                                                                '#t)))))
                                                                        g$ls/false$10513$XGD4L)
                                                                      ((case-lambda
                                                                         ((g$t$10515$XGD4L)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10516$XGD4L)
                                                                              (if g$ls/false$10516$XGD4L
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7983$XGD4L
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10491$XGD4L)))
                                                                                  g$ls/false$10516$XGD4L)
                                                                                (g$syntax-violation$7983$XGD4L
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10515$XGD4L))))
                                                                           (g$syntax-dispatch$7877$XGD4L
                                                                             g$t$10515$XGD4L
                                                                             '_))))
                                                                       g$t$10512$XGD4L))))
                                                                 (g$syntax-dispatch$7877$XGD4L
                                                                   g$t$10512$XGD4L
                                                                   '()))))
                                                             g$t$10500$XGD4L))))
                                                       (g$syntax-dispatch$7877$XGD4L
                                                         g$t$10500$XGD4L
                                                         '(any . any)))))
                                                   g$t$10497$XGD4L))))
                                             (g$syntax-dispatch$7877$XGD4L
                                               g$t$10497$XGD4L
                                               '(each-any)))))
                                         g$x$10496$XGD4L)))))
                            g$f$10495$XGD4L)
                          g$spec$10491$XGD4L)))))
                  (g$import-library$10398$XGD4L
                    (case-lambda
                      ((g$spec*$10483$XGD4L)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10397$XGD4L
                              g$spec*$10483$XGD4L)))
                         (case-lambda
                           ((g$name$10486$XGD4L g$pred$10487$XGD4L)
                            ((case-lambda
                               ((g$pred$10488$XGD4L g$name$10489$XGD4L)
                                (begin
                                  (if (null? g$name$10489$XGD4L)
                                    (g$syntax-violation$7983$XGD4L
                                      'import
                                      '"empty library name"
                                      g$spec*$10483$XGD4L)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10490$XGD4L)
                                      (begin
                                        (if g$lib$10490$XGD4L
                                          (void)
                                          (g$syntax-violation$7983$XGD4L
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10489$XGD4L))
                                        (if (g$pred$10488$XGD4L
                                              (g$library-version$7367$XGD4L
                                                g$lib$10490$XGD4L))
                                          (void)
                                          (g$syntax-violation$7983$XGD4L
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10483$XGD4L
                                            g$lib$10490$XGD4L))
                                        ((g$imp-collector$7931$XGD4L)
                                         g$lib$10490$XGD4L)
                                        (g$library-subst$7371$XGD4L
                                          g$lib$10490$XGD4L))))
                                   (g$find-library-by-name$7407$XGD4L
                                     g$name$10489$XGD4L)))))
                             g$pred$10487$XGD4L
                             g$name$10486$XGD4L)))))))
                  (g$get-import$10399$XGD4L
                    (case-lambda
                      ((g$spec$10412$XGD4L)
                       ((case-lambda
                          ((g$t$10413$XGD4L)
                           ((case-lambda
                              ((g$ls/false$10414$XGD4L)
                               (if (if g$ls/false$10414$XGD4L
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10415$XGD4L g$x*$10416$XGD4L)
                                            (not (memq
                                                   (g$syntax->datum$7986$XGD4L
                                                     g$x$10415$XGD4L)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10414$XGD4L))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10417$XGD4L g$x*$10418$XGD4L)
                                      (g$import-library$10398$XGD4L
                                        (cons
                                          g$x$10417$XGD4L
                                          g$x*$10418$XGD4L))))
                                   g$ls/false$10414$XGD4L)
                                 ((case-lambda
                                    ((g$t$10419$XGD4L)
                                     ((case-lambda
                                        ((g$ls/false$10420$XGD4L)
                                         (if (if g$ls/false$10420$XGD4L
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10421$XGD4L
                                                        g$isp$10422$XGD4L
                                                        g$old*$10423$XGD4L
                                                        g$new*$10424$XGD4L)
                                                      (if (eq? (g$syntax->datum$7986$XGD4L
                                                                 g$rename$10421$XGD4L)
                                                               'rename)
                                                        (if (g$for-all$5871$XGD4L
                                                              g$idsyn?$10390$XGD4L
                                                              g$old*$10423$XGD4L)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5871$XGD4L
                                                              g$idsyn?$10390$XGD4L
                                                              g$new*$10424$XGD4L))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10420$XGD4L))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10425$XGD4L
                                                  g$isp$10426$XGD4L
                                                  g$old*$10427$XGD4L
                                                  g$new*$10428$XGD4L)
                                                ((case-lambda
                                                   ((g$subst$10429$XGD4L
                                                      g$old*$10430$XGD4L
                                                      g$new*$10431$XGD4L)
                                                    ((case-lambda
                                                       ((g$old-label*$10432$XGD4L)
                                                        ((case-lambda
                                                           ((g$subst$10433$XGD4L)
                                                            (g$merge-substs$10392$XGD4L
                                                              (map cons
                                                                   g$new*$10431$XGD4L
                                                                   g$old-label*$10432$XGD4L)
                                                              g$subst$10433$XGD4L)))
                                                         (g$rem*$10395$XGD4L
                                                           g$old*$10430$XGD4L
                                                           g$subst$10429$XGD4L))))
                                                     (g$find*$10394$XGD4L
                                                       g$old*$10430$XGD4L
                                                       g$subst$10429$XGD4L))))
                                                 (g$get-import$10399$XGD4L
                                                   g$isp$10426$XGD4L)
                                                 (map g$syntax->datum$7986$XGD4L
                                                      g$old*$10427$XGD4L)
                                                 (map g$syntax->datum$7986$XGD4L
                                                      g$new*$10428$XGD4L))))
                                             g$ls/false$10420$XGD4L)
                                           ((case-lambda
                                              ((g$t$10434$XGD4L)
                                               ((case-lambda
                                                  ((g$ls/false$10435$XGD4L)
                                                   (if (if g$ls/false$10435$XGD4L
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10436$XGD4L
                                                                  g$isp$10437$XGD4L
                                                                  g$sym*$10438$XGD4L)
                                                                (if (eq? (g$syntax->datum$7986$XGD4L
                                                                           g$except$10436$XGD4L)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5871$XGD4L
                                                                      g$idsyn?$10390$XGD4L
                                                                      g$sym*$10438$XGD4L))
                                                                  '#f)))
                                                             g$ls/false$10435$XGD4L))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10439$XGD4L
                                                            g$isp$10440$XGD4L
                                                            g$sym*$10441$XGD4L)
                                                          ((case-lambda
                                                             ((g$subst$10442$XGD4L)
                                                              (g$rem*$10395$XGD4L
                                                                (map g$syntax->datum$7986$XGD4L
                                                                     g$sym*$10441$XGD4L)
                                                                g$subst$10442$XGD4L)))
                                                           (g$get-import$10399$XGD4L
                                                             g$isp$10440$XGD4L))))
                                                       g$ls/false$10435$XGD4L)
                                                     ((case-lambda
                                                        ((g$t$10443$XGD4L)
                                                         ((case-lambda
                                                            ((g$ls/false$10444$XGD4L)
                                                             (if (if g$ls/false$10444$XGD4L
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10445$XGD4L
                                                                            g$isp$10446$XGD4L
                                                                            g$sym*$10447$XGD4L)
                                                                          (if (eq? (g$syntax->datum$7986$XGD4L
                                                                                     g$only$10445$XGD4L)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5871$XGD4L
                                                                                g$idsyn?$10390$XGD4L
                                                                                g$sym*$10447$XGD4L))
                                                                            '#f)))
                                                                       g$ls/false$10444$XGD4L))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10448$XGD4L
                                                                      g$isp$10449$XGD4L
                                                                      g$sym*$10450$XGD4L)
                                                                    ((case-lambda
                                                                       ((g$subst$10451$XGD4L
                                                                          g$sym*$10452$XGD4L)
                                                                        ((case-lambda
                                                                           ((g$sym*$10453$XGD4L)
                                                                            ((case-lambda
                                                                               ((g$lab*$10454$XGD4L)
                                                                                (map cons
                                                                                     g$sym*$10453$XGD4L
                                                                                     g$lab*$10454$XGD4L)))
                                                                             (g$find*$10394$XGD4L
                                                                               g$sym*$10453$XGD4L
                                                                               g$subst$10451$XGD4L))))
                                                                         (g$remove-dups$10396$XGD4L
                                                                           g$sym*$10452$XGD4L))))
                                                                     (g$get-import$10399$XGD4L
                                                                       g$isp$10449$XGD4L)
                                                                     (map g$syntax->datum$7986$XGD4L
                                                                          g$sym*$10450$XGD4L))))
                                                                 g$ls/false$10444$XGD4L)
                                                               ((case-lambda
                                                                  ((g$t$10455$XGD4L)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10456$XGD4L)
                                                                       (if (if g$ls/false$10456$XGD4L
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10457$XGD4L
                                                                                      g$isp$10458$XGD4L
                                                                                      g$p$10459$XGD4L)
                                                                                    (if (eq? (g$syntax->datum$7986$XGD4L
                                                                                               g$prefix$10457$XGD4L)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10390$XGD4L
                                                                                          g$p$10459$XGD4L))
                                                                                      '#f)))
                                                                                 g$ls/false$10456$XGD4L))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10460$XGD4L
                                                                                g$isp$10461$XGD4L
                                                                                g$p$10462$XGD4L)
                                                                              ((case-lambda
                                                                                 ((g$subst$10463$XGD4L
                                                                                    g$prefix$10464$XGD4L)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10465$XGD4L)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10464$XGD4L
                                                                                                (symbol->string
                                                                                                  (car g$x$10465$XGD4L))))
                                                                                            (cdr g$x$10465$XGD4L))))
                                                                                       g$subst$10463$XGD4L)))
                                                                               (g$get-import$10399$XGD4L
                                                                                 g$isp$10461$XGD4L)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7986$XGD4L
                                                                                   g$p$10462$XGD4L)))))
                                                                           g$ls/false$10456$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$t$10466$XGD4L)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10467$XGD4L)
                                                                                 (if (if g$ls/false$10467$XGD4L
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10468$XGD4L
                                                                                                g$spec*$10469$XGD4L)
                                                                                              (eq? (g$syntax->datum$7986$XGD4L
                                                                                                     g$library$10468$XGD4L)
                                                                                                   'library)))
                                                                                           g$ls/false$10467$XGD4L))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10470$XGD4L
                                                                                          g$spec*$10471$XGD4L)
                                                                                        (g$import-library$10398$XGD4L
                                                                                          g$spec*$10471$XGD4L)))
                                                                                     g$ls/false$10467$XGD4L)
                                                                                   ((case-lambda
                                                                                      ((g$t$10472$XGD4L)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10473$XGD4L)
                                                                                           (if (if g$ls/false$10473$XGD4L
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10474$XGD4L
                                                                                                          g$isp$10475$XGD4L
                                                                                                          g$rest$10476$XGD4L)
                                                                                                        (eq? (g$syntax->datum$7986$XGD4L
                                                                                                               g$for$10474$XGD4L)
                                                                                                             'for)))
                                                                                                     g$ls/false$10473$XGD4L))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10477$XGD4L
                                                                                                    g$isp$10478$XGD4L
                                                                                                    g$rest$10479$XGD4L)
                                                                                                  (g$get-import$10399$XGD4L
                                                                                                    g$isp$10478$XGD4L)))
                                                                                               g$ls/false$10473$XGD4L)
                                                                                             ((case-lambda
                                                                                                ((g$t$10480$XGD4L)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10481$XGD4L)
                                                                                                     (if g$ls/false$10481$XGD4L
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10482$XGD4L)
                                                                                                            (g$syntax-violation$7983$XGD4L
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10482$XGD4L)))
                                                                                                         g$ls/false$10481$XGD4L)
                                                                                                       (g$syntax-violation$7983$XGD4L
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10480$XGD4L))))
                                                                                                  (g$syntax-dispatch$7877$XGD4L
                                                                                                    g$t$10480$XGD4L
                                                                                                    'any))))
                                                                                              g$t$10472$XGD4L))))
                                                                                        (g$syntax-dispatch$7877$XGD4L
                                                                                          g$t$10472$XGD4L
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10466$XGD4L))))
                                                                              (g$syntax-dispatch$7877$XGD4L
                                                                                g$t$10466$XGD4L
                                                                                '(any each-any)))))
                                                                          g$t$10455$XGD4L))))
                                                                    (g$syntax-dispatch$7877$XGD4L
                                                                      g$t$10455$XGD4L
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10443$XGD4L))))
                                                          (g$syntax-dispatch$7877$XGD4L
                                                            g$t$10443$XGD4L
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10434$XGD4L))))
                                                (g$syntax-dispatch$7877$XGD4L
                                                  g$t$10434$XGD4L
                                                  '(any any . each-any)))))
                                            g$t$10419$XGD4L))))
                                      (g$syntax-dispatch$7877$XGD4L
                                        g$t$10419$XGD4L
                                        '(any any . #(each (any any)))))))
                                  g$t$10413$XGD4L))))
                            (g$syntax-dispatch$7877$XGD4L
                              g$t$10413$XGD4L
                              '(any . each-any)))))
                        g$spec$10412$XGD4L))))
                  (g$add-imports!$10400$XGD4L
                    (case-lambda
                      ((g$imp$10404$XGD4L g$h$10405$XGD4L)
                       ((case-lambda
                          ((g$subst$10406$XGD4L)
                           (for-each
                             (case-lambda
                               ((g$x$10407$XGD4L)
                                ((case-lambda
                                   ((g$name$10408$XGD4L g$label$10409$XGD4L)
                                    ((case-lambda
                                       ((g$t$10410$XGD4L)
                                        (if g$t$10410$XGD4L
                                          ((case-lambda
                                             ((g$l$10411$XGD4L)
                                              (if (eq? g$l$10411$XGD4L
                                                       g$label$10409$XGD4L)
                                                (void)
                                                (g$dup-error$10391$XGD4L
                                                  g$name$10408$XGD4L))))
                                           g$t$10410$XGD4L)
                                          (g$hashtable-set!$5668$XGD4L
                                            g$h$10405$XGD4L
                                            g$name$10408$XGD4L
                                            g$label$10409$XGD4L))))
                                     (g$hashtable-ref$5667$XGD4L
                                       g$h$10405$XGD4L
                                       g$name$10408$XGD4L
                                       '#f))))
                                 (car g$x$10407$XGD4L)
                                 (cdr g$x$10407$XGD4L))))
                             g$subst$10406$XGD4L)))
                        (g$get-import$10399$XGD4L g$imp$10404$XGD4L))))))
          ((letrec ((g$f$10401$XGD4L
                      (case-lambda
                        ((g$imp*$10402$XGD4L g$h$10403$XGD4L)
                         (if (null? g$imp*$10402$XGD4L)
                           (hashtable-entries g$h$10403$XGD4L)
                           (begin
                             (g$add-imports!$10400$XGD4L
                               (car g$imp*$10402$XGD4L)
                               g$h$10403$XGD4L)
                             (g$f$10401$XGD4L
                               (cdr g$imp*$10402$XGD4L)
                               g$h$10403$XGD4L)))))))
             g$f$10401$XGD4L)
           g$imp*$10389$XGD4L
           (g$make-eq-hashtable$5664$XGD4L))))))
   (g$make-top-rib$7927$XGD4L
     g$make-top-rib$11377$XGD4L
     (case-lambda
       ((g$names$10650$XGD4L g$labels$10651$XGD4L)
        ((case-lambda
           ((g$rib$10652$XGD4L)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10653$XGD4L g$label$10654$XGD4L)
                   (begin
                     (if (symbol? g$name$10653$XGD4L)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10653$XGD4L))
                     (g$extend-rib!$7563$XGD4L
                       g$rib$10652$XGD4L
                       (g$make-stx$7572$XGD4L
                         g$name$10653$XGD4L
                         g$top-mark*$7541$XGD4L
                         '()
                         '())
                       g$label$10654$XGD4L))))
                g$names$10650$XGD4L
                g$labels$10651$XGD4L)
              g$rib$10652$XGD4L)))
         (g$make-empty-rib$7562$XGD4L)))))
   (g$make-collector$7928$XGD4L
     g$make-collector$11378$XGD4L
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10655$XGD4L)
            (case-lambda
              (() g$ls$10655$XGD4L)
              ((g$x$10656$XGD4L)
               (set! g$ls$10655$XGD4L
                 (g$set-cons$7538$XGD4L g$x$10656$XGD4L g$ls$10655$XGD4L))))))
         '()))))
   (g$inv-collector$7929$XGD4L
     g$inv-collector$11379$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         (g$args$10657$XGD4L
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10658$XGD4L)
          (begin
            (if (procedure? g$x$10658$XGD4L)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10658$XGD4L))
            g$x$10658$XGD4L)))))
   (g$vis-collector$7930$XGD4L
     g$vis-collector$11380$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         (g$args$10659$XGD4L
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10660$XGD4L)
          (begin
            (if (procedure? g$x$10660$XGD4L)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10660$XGD4L))
            g$x$10660$XGD4L)))))
   (g$imp-collector$7931$XGD4L
     g$imp-collector$11381$XGD4L
     (g$make-parameter$6866$XGD4L
       (case-lambda
         (g$args$10661$XGD4L
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10662$XGD4L)
          (begin
            (if (procedure? g$x$10662$XGD4L)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10662$XGD4L))
            g$x$10662$XGD4L)))))
   (g$chi-library-internal$7932$XGD4L
     g$chi-library-internal$11382$XGD4L
     (case-lambda
       ((g$e*$10663$XGD4L g$rib$10664$XGD4L g$top?$10665$XGD4L)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7921$XGD4L
               g$e*$10663$XGD4L
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10664$XGD4L
               g$top?$10665$XGD4L)))
          (case-lambda
            ((g$e*$10673$XGD4L
               g$r$10674$XGD4L
               g$mr$10675$XGD4L
               g$lex*$10676$XGD4L
               g$rhs*$10677$XGD4L
               g$mod**$10678$XGD4L
               g$_kwd*$10679$XGD4L)
             ((case-lambda
                ((g$_kwd*$10680$XGD4L
                   g$mod**$10681$XGD4L
                   g$rhs*$10682$XGD4L
                   g$lex*$10683$XGD4L
                   g$mr$10684$XGD4L
                   g$r$10685$XGD4L
                   g$e*$10686$XGD4L)
                 (values
                   (append
                     (apply append (reverse g$mod**$10681$XGD4L))
                     g$e*$10686$XGD4L)
                   g$r$10685$XGD4L
                   g$mr$10684$XGD4L
                   (reverse g$lex*$10683$XGD4L)
                   (reverse g$rhs*$10682$XGD4L))))
              g$_kwd*$10679$XGD4L
              g$mod**$10678$XGD4L
              g$rhs*$10677$XGD4L
              g$lex*$10676$XGD4L
              g$mr$10675$XGD4L
              g$r$10674$XGD4L
              g$e*$10673$XGD4L)))))))
   (g$chi-interaction-expr$7933$XGD4L
     g$chi-interaction-expr$11383$XGD4L
     (case-lambda
       ((g$e$10687$XGD4L g$rib$10688$XGD4L g$r$10689$XGD4L)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7921$XGD4L
               (list g$e$10687$XGD4L)
               g$r$10689$XGD4L
               g$r$10689$XGD4L
               '()
               '()
               '()
               '()
               g$rib$10688$XGD4L
               '#t)))
          (case-lambda
            ((g$e*$10697$XGD4L
               g$r$10698$XGD4L
               g$mr$10699$XGD4L
               g$lex*$10700$XGD4L
               g$rhs*$10701$XGD4L
               g$mod**$10702$XGD4L
               g$_kwd*$10703$XGD4L)
             ((case-lambda
                ((g$_kwd*$10704$XGD4L
                   g$mod**$10705$XGD4L
                   g$rhs*$10706$XGD4L
                   g$lex*$10707$XGD4L
                   g$mr$10708$XGD4L
                   g$r$10709$XGD4L
                   g$e*$10710$XGD4L)
                 ((case-lambda
                    ((g$e*$10711$XGD4L)
                     ((case-lambda
                        ((g$e$10712$XGD4L)
                         (values g$e$10712$XGD4L g$r$10709$XGD4L)))
                      (if (null? g$e*$10711$XGD4L)
                        (g$build-void$7534$XGD4L)
                        (if (null? (cdr g$e*$10711$XGD4L))
                          (car g$e*$10711$XGD4L)
                          (g$build-sequence$7533$XGD4L
                            '#f
                            g$e*$10711$XGD4L))))))
                  (g$expand-interaction-rhs*/init*$7902$XGD4L
                    (reverse g$lex*$10707$XGD4L)
                    (reverse g$rhs*$10706$XGD4L)
                    (append
                      (apply append (reverse g$mod**$10705$XGD4L))
                      g$e*$10710$XGD4L)
                    g$r$10709$XGD4L
                    g$mr$10708$XGD4L))))
              g$_kwd*$10703$XGD4L
              g$mod**$10702$XGD4L
              g$rhs*$10701$XGD4L
              g$lex*$10700$XGD4L
              g$mr$10699$XGD4L
              g$r$10698$XGD4L
              g$e*$10697$XGD4L)))))))
   (g$library-body-expander$7934$XGD4L
     g$library-body-expander$11384$XGD4L
     (case-lambda
       ((g$name$10713$XGD4L
          g$exp*$10714$XGD4L
          g$imp*$10715$XGD4L
          g$b*$10716$XGD4L
          g$top?$10717$XGD4L)
        (letrec* ((g$itc$10718$XGD4L (g$make-collector$7928$XGD4L)))
          ((case-lambda
             ((g$imp-collector$10723$XGD4L
                g$top-level-context$10724$XGD4L
                g$imp-collector$10725$XGD4L
                g$top-level-context$10726$XGD4L)
              ((case-lambda
                 ((g$swap$10727$XGD4L)
                  (dynamic-wind
                    g$swap$10727$XGD4L
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7923$XGD4L g$exp*$10714$XGD4L)))
                         (case-lambda
                           ((g$exp-int*$10730$XGD4L g$exp-ext*$10731$XGD4L)
                            ((case-lambda
                               ((g$exp-ext*$10732$XGD4L g$exp-int*$10733$XGD4L)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7926$XGD4L
                                       g$imp*$10715$XGD4L)))
                                  (case-lambda
                                    ((g$subst-names$10736$XGD4L
                                       g$subst-labels$10737$XGD4L)
                                     ((case-lambda
                                        ((g$subst-labels$10738$XGD4L
                                           g$subst-names$10739$XGD4L)
                                         ((case-lambda
                                            ((g$rib$10740$XGD4L)
                                             ((case-lambda
                                                ((g$b*$10741$XGD4L
                                                   g$rtc$10742$XGD4L
                                                   g$vtc$10743$XGD4L)
                                                 ((case-lambda
                                                    ((g$inv-collector$10748$XGD4L
                                                       g$vis-collector$10749$XGD4L
                                                       g$inv-collector$10750$XGD4L
                                                       g$vis-collector$10751$XGD4L)
                                                     ((case-lambda
                                                        ((g$swap$10752$XGD4L)
                                                         (dynamic-wind
                                                           g$swap$10752$XGD4L
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7932$XGD4L
                                                                     g$b*$10741$XGD4L
                                                                     g$rib$10740$XGD4L
                                                                     g$top?$10717$XGD4L)))
                                                                (case-lambda
                                                                  ((g$init*$10758$XGD4L
                                                                     g$r$10759$XGD4L
                                                                     g$mr$10760$XGD4L
                                                                     g$lex*$10761$XGD4L
                                                                     g$rhs*$10762$XGD4L)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10763$XGD4L
                                                                         g$lex*$10764$XGD4L
                                                                         g$mr$10765$XGD4L
                                                                         g$r$10766$XGD4L
                                                                         g$init*$10767$XGD4L)
                                                                       (begin
                                                                         (g$seal-rib!$7565$XGD4L
                                                                           g$rib$10740$XGD4L)
                                                                         ((case-lambda
                                                                            ((g$init*$10768$XGD4L)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10769$XGD4L)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7566$XGD4L
                                                                                         g$rib$10740$XGD4L)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10770$XGD4L
                                                                                             g$export-subst$10771$XGD4L)
                                                                                           (letrec* ((g$errstr$10772$XGD4L
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7975$XGD4L
                                                                                                    g$lex*$10764$XGD4L
                                                                                                    g$loc*$10770$XGD4L
                                                                                                    g$r$10766$XGD4L)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10776$XGD4L
                                                                                                    g$global*$10777$XGD4L
                                                                                                    g$macro*$10778$XGD4L)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10779$XGD4L
                                                                                                        g$global*$10780$XGD4L
                                                                                                        g$export-env$10781$XGD4L)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10782$XGD4L)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10783$XGD4L
                                                                                                                   g$label$10784$XGD4L)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10785$XGD4L)
                                                                                                                     (if g$p$10785$XGD4L
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10786$XGD4L)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10787$XGD4L)
                                                                                                                               (if (eq? g$type$10787$XGD4L
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7983$XGD4L
                                                                                                                                   'export
                                                                                                                                   g$errstr$10772$XGD4L
                                                                                                                                   g$name$10783$XGD4L)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10786$XGD4L))))
                                                                                                                        (cdr g$p$10785$XGD4L))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10784$XGD4L
                                                                                                                    g$export-env$10781$XGD4L))))
                                                                                                              (car g$s$10782$XGD4L)
                                                                                                              (cdr g$s$10782$XGD4L))))
                                                                                                          g$export-subst$10771$XGD4L)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10788$XGD4L
                                                                                                              g$invoke-definitions$10789$XGD4L)
                                                                                                            (values
                                                                                                              (g$itc$10718$XGD4L)
                                                                                                              (g$rtc$10742$XGD4L)
                                                                                                              (g$vtc$10743$XGD4L)
                                                                                                              (g$build-sequence$7533$XGD4L
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10789$XGD4L
                                                                                                                  (list
                                                                                                                    g$invoke-body$10788$XGD4L)))
                                                                                                              g$macro*$10779$XGD4L
                                                                                                              g$export-subst$10771$XGD4L
                                                                                                              g$export-env$10781$XGD4L)))
                                                                                                         (g$build-library-letrec*$7537$XGD4L
                                                                                                           '#f
                                                                                                           g$name$10713$XGD4L
                                                                                                           g$lex*$10764$XGD4L
                                                                                                           g$loc*$10770$XGD4L
                                                                                                           g$rhs*$10769$XGD4L
                                                                                                           (if (null?
                                                                                                                 g$init*$10768$XGD4L)
                                                                                                             (g$build-void$7534$XGD4L)
                                                                                                             (g$build-sequence$7533$XGD4L
                                                                                                               '#f
                                                                                                               g$init*$10768$XGD4L)))
                                                                                                         (map g$build-global-define$7529$XGD4L
                                                                                                              (map cdr
                                                                                                                   g$global*$10780$XGD4L))))))
                                                                                                   g$macro*$10778$XGD4L
                                                                                                   g$global*$10777$XGD4L
                                                                                                   g$export-env$10776$XGD4L)))))))
                                                                                        (map g$gen-global$7544$XGD4L
                                                                                             g$lex*$10764$XGD4L)
                                                                                        (g$make-export-subst$7974$XGD4L
                                                                                          g$exp-int*$10733$XGD4L
                                                                                          g$exp-ext*$10732$XGD4L
                                                                                          g$rib$10740$XGD4L))))))))
                                                                              (g$chi-rhs*$7903$XGD4L
                                                                                g$rhs*$10763$XGD4L
                                                                                g$r$10766$XGD4L
                                                                                g$mr$10765$XGD4L))))
                                                                          (g$chi-expr*$7893$XGD4L
                                                                            g$init*$10767$XGD4L
                                                                            g$r$10766$XGD4L
                                                                            g$mr$10765$XGD4L)))))
                                                                    g$rhs*$10762$XGD4L
                                                                    g$lex*$10761$XGD4L
                                                                    g$mr$10760$XGD4L
                                                                    g$r$10759$XGD4L
                                                                    g$init*$10758$XGD4L))))))
                                                           g$swap$10752$XGD4L)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10790$XGD4L)
                                                               (begin
                                                                 (g$inv-collector$10748$XGD4L
                                                                   g$inv-collector$10750$XGD4L)
                                                                 (set! g$inv-collector$10750$XGD4L
                                                                   g$t$10790$XGD4L))))
                                                            (g$inv-collector$10748$XGD4L))
                                                           ((case-lambda
                                                              ((g$t$10791$XGD4L)
                                                               (begin
                                                                 (g$vis-collector$10749$XGD4L
                                                                   g$vis-collector$10751$XGD4L)
                                                                 (set! g$vis-collector$10751$XGD4L
                                                                   g$t$10791$XGD4L))))
                                                            (g$vis-collector$10749$XGD4L))))))))
                                                  g$inv-collector$7929$XGD4L
                                                  g$vis-collector$7930$XGD4L
                                                  g$rtc$10742$XGD4L
                                                  g$vtc$10743$XGD4L)))
                                              (map (case-lambda
                                                     ((g$x$10792$XGD4L)
                                                      (g$make-stx$7572$XGD4L
                                                        g$x$10792$XGD4L
                                                        g$top-mark*$7541$XGD4L
                                                        (list g$rib$10740$XGD4L)
                                                        '())))
                                                   g$b*$10716$XGD4L)
                                              (g$make-collector$7928$XGD4L)
                                              (g$make-collector$7928$XGD4L))))
                                          (g$make-top-rib$7927$XGD4L
                                            g$subst-names$10739$XGD4L
                                            g$subst-labels$10738$XGD4L))))
                                      g$subst-labels$10737$XGD4L
                                      g$subst-names$10736$XGD4L))))))
                             g$exp-ext*$10731$XGD4L
                             g$exp-int*$10730$XGD4L))))))
                    g$swap$10727$XGD4L)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10793$XGD4L)
                        (begin
                          (g$imp-collector$10723$XGD4L
                            g$imp-collector$10725$XGD4L)
                          (set! g$imp-collector$10725$XGD4L g$t$10793$XGD4L))))
                     (g$imp-collector$10723$XGD4L))
                    ((case-lambda
                       ((g$t$10794$XGD4L)
                        (begin
                          (g$top-level-context$10724$XGD4L
                            g$top-level-context$10726$XGD4L)
                          (set! g$top-level-context$10726$XGD4L
                            g$t$10794$XGD4L))))
                     (g$top-level-context$10724$XGD4L))))))))
           g$imp-collector$7931$XGD4L
           g$top-level-context$7990$XGD4L
           g$itc$10718$XGD4L
           '#f)))))
   (g$core-library-expander$7935$XGD4L
     g$core-library-expander$11385$XGD4L
     (case-lambda
       ((g$e$10795$XGD4L g$verify-name$10796$XGD4L)
        (call-with-values
          (case-lambda (() (g$parse-library$7925$XGD4L g$e$10795$XGD4L)))
          (case-lambda
            ((g$name*$10801$XGD4L
               g$exp*$10802$XGD4L
               g$imp*$10803$XGD4L
               g$b*$10804$XGD4L)
             ((case-lambda
                ((g$b*$10805$XGD4L
                   g$imp*$10806$XGD4L
                   g$exp*$10807$XGD4L
                   g$name*$10808$XGD4L)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7924$XGD4L g$name*$10808$XGD4L)))
                   (case-lambda
                     ((g$name$10811$XGD4L g$ver$10812$XGD4L)
                      ((case-lambda
                         ((g$ver$10813$XGD4L g$name$10814$XGD4L)
                          (begin
                            (g$verify-name$10796$XGD4L g$name$10814$XGD4L)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7934$XGD4L
                                   g$name$10814$XGD4L
                                   g$exp*$10807$XGD4L
                                   g$imp*$10806$XGD4L
                                   g$b*$10805$XGD4L
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10822$XGD4L
                                   g$invoke-req*$10823$XGD4L
                                   g$visit-req*$10824$XGD4L
                                   g$invoke-code$10825$XGD4L
                                   g$visit-code$10826$XGD4L
                                   g$export-subst$10827$XGD4L
                                   g$export-env$10828$XGD4L)
                                 ((case-lambda
                                    ((g$export-env$10829$XGD4L
                                       g$export-subst$10830$XGD4L
                                       g$visit-code$10831$XGD4L
                                       g$invoke-code$10832$XGD4L
                                       g$visit-req*$10833$XGD4L
                                       g$invoke-req*$10834$XGD4L
                                       g$imp*$10835$XGD4L)
                                     (values
                                       g$name$10814$XGD4L
                                       g$ver$10813$XGD4L
                                       g$imp*$10835$XGD4L
                                       g$invoke-req*$10834$XGD4L
                                       g$visit-req*$10833$XGD4L
                                       g$invoke-code$10832$XGD4L
                                       g$visit-code$10831$XGD4L
                                       g$export-subst$10830$XGD4L
                                       g$export-env$10829$XGD4L)))
                                  g$export-env$10828$XGD4L
                                  g$export-subst$10827$XGD4L
                                  g$visit-code$10826$XGD4L
                                  g$invoke-code$10825$XGD4L
                                  g$visit-req*$10824$XGD4L
                                  g$invoke-req*$10823$XGD4L
                                  g$imp*$10822$XGD4L)))))))
                       g$ver$10812$XGD4L
                       g$name$10811$XGD4L))))))
              g$b*$10804$XGD4L
              g$imp*$10803$XGD4L
              g$exp*$10802$XGD4L
              g$name*$10801$XGD4L)))))))
   (g$parse-top-level-program$7936$XGD4L
     g$parse-top-level-program$11386$XGD4L
     (case-lambda
       ((g$e*$10836$XGD4L)
        ((case-lambda
           ((g$t$10837$XGD4L)
            ((case-lambda
               ((g$ls/false$10838$XGD4L)
                (if (if g$ls/false$10838$XGD4L
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10839$XGD4L
                               g$imp*$10840$XGD4L
                               g$b*$10841$XGD4L)
                             (eq? (g$syntax->datum$7986$XGD4L
                                    g$import$10839$XGD4L)
                                  'import)))
                          g$ls/false$10838$XGD4L))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10842$XGD4L
                         g$imp*$10843$XGD4L
                         g$b*$10844$XGD4L)
                       (values g$imp*$10843$XGD4L g$b*$10844$XGD4L)))
                    g$ls/false$10838$XGD4L)
                  ((case-lambda
                     ((g$t$10845$XGD4L)
                      ((case-lambda
                         ((g$ls/false$10846$XGD4L)
                          (if (if g$ls/false$10846$XGD4L
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10847$XGD4L
                                         g$x$10848$XGD4L
                                         g$y$10849$XGD4L)
                                       (eq? (g$syntax->datum$7986$XGD4L
                                              g$import$10847$XGD4L)
                                            'import)))
                                    g$ls/false$10846$XGD4L))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10850$XGD4L
                                   g$x$10851$XGD4L
                                   g$y$10852$XGD4L)
                                 (g$syntax-violation$7983$XGD4L
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7596$XGD4L g$e*$10836$XGD4L))))
                              g$ls/false$10846$XGD4L)
                            ((case-lambda
                               ((g$t$10853$XGD4L)
                                ((case-lambda
                                   ((g$ls/false$10854$XGD4L)
                                    (if g$ls/false$10854$XGD4L
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10854$XGD4L)
                                      (g$syntax-violation$7983$XGD4L
                                        '#f
                                        '"invalid syntax"
                                        g$t$10853$XGD4L))))
                                 (g$syntax-dispatch$7877$XGD4L
                                   g$t$10853$XGD4L
                                   '_))))
                             g$t$10845$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L
                         g$t$10845$XGD4L
                         '((any . any) . any)))))
                   g$t$10837$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L
               g$t$10837$XGD4L
               '((any . each-any) . each-any)))))
         g$e*$10836$XGD4L))))
   (g$top-level-expander$7937$XGD4L
     g$top-level-expander$11387$XGD4L
     (case-lambda
       ((g$e*$10855$XGD4L)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7936$XGD4L g$e*$10855$XGD4L)))
          (case-lambda
            ((g$imp*$10858$XGD4L g$b*$10859$XGD4L)
             ((case-lambda
                ((g$b*$10860$XGD4L g$imp*$10861$XGD4L)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7934$XGD4L
                        '()
                        '()
                        g$imp*$10861$XGD4L
                        g$b*$10860$XGD4L
                        '#t)))
                   (case-lambda
                     ((g$imp*$10869$XGD4L
                        g$invoke-req*$10870$XGD4L
                        g$visit-req*$10871$XGD4L
                        g$invoke-code$10872$XGD4L
                        g$visit-code$10873$XGD4L
                        g$export-subst$10874$XGD4L
                        g$export-env$10875$XGD4L)
                      ((case-lambda
                         ((g$export-env$10876$XGD4L
                            g$export-subst$10877$XGD4L
                            g$visit-code$10878$XGD4L
                            g$invoke-code$10879$XGD4L
                            g$visit-req*$10880$XGD4L
                            g$invoke-req*$10881$XGD4L
                            g$imp*$10882$XGD4L)
                          (values
                            g$invoke-req*$10881$XGD4L
                            g$invoke-code$10879$XGD4L)))
                       g$export-env$10875$XGD4L
                       g$export-subst$10874$XGD4L
                       g$visit-code$10873$XGD4L
                       g$invoke-code$10872$XGD4L
                       g$visit-req*$10871$XGD4L
                       g$invoke-req*$10870$XGD4L
                       g$imp*$10869$XGD4L))))))
              g$b*$10859$XGD4L
              g$imp*$10858$XGD4L)))))))
   (g$8924$7938$XGD4L
     g$8924$11388$XGD4L
     (make-record-type-descriptor
       'env
       '#f
       'g$8927$XGD4L
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8926$7939$XGD4L g$8926$11389$XGD4L '#f)
   (g$8925$7940$XGD4L
     g$8925$11390$XGD4L
     (make-record-constructor-descriptor
       g$8924$7938$XGD4L
       '#f
       g$8926$7939$XGD4L))
   (g$env?$7941$XGD4L
     g$env?$11391$XGD4L
     (record-predicate g$8924$7938$XGD4L))
   (g$make-env$7942$XGD4L
     g$make-env$11392$XGD4L
     (record-constructor g$8925$7940$XGD4L))
   (g$env-names$7943$XGD4L
     g$env-names$11393$XGD4L
     (record-accessor g$8924$7938$XGD4L '0))
   (g$env-labels$7944$XGD4L
     g$env-labels$11394$XGD4L
     (record-accessor g$8924$7938$XGD4L '1))
   (g$env-itc$7945$XGD4L
     g$env-itc$11395$XGD4L
     (record-accessor g$8924$7938$XGD4L '2))
   (g$set-env-names!$7946$XGD4L
     g$set-env-names!$11396$XGD4L
     (record-mutator g$8924$7938$XGD4L '0))
   (g$set-env-labels!$7947$XGD4L
     g$set-env-labels!$11397$XGD4L
     (record-mutator g$8924$7938$XGD4L '1))
   (g$set-env-itc!$7948$XGD4L
     g$set-env-itc!$11398$XGD4L
     (record-mutator g$8924$7938$XGD4L '2))
   (g$rp$7949$XGD4L
     g$rp$11399$XGD4L
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10883$XGD4L g$p$10884$XGD4L)
          (display '"#<environment>" g$p$10884$XGD4L)))))
   (g$8943$7950$XGD4L
     g$8943$11400$XGD4L
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8946$XGD4L
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8945$7951$XGD4L g$8945$11401$XGD4L '#f)
   (g$8944$7952$XGD4L
     g$8944$11402$XGD4L
     (make-record-constructor-descriptor
       g$8943$7950$XGD4L
       '#f
       g$8945$7951$XGD4L))
   (g$interaction-env?$7953$XGD4L
     g$interaction-env?$11403$XGD4L
     (record-predicate g$8943$7950$XGD4L))
   (g$make-interaction-env$7954$XGD4L
     g$make-interaction-env$11404$XGD4L
     (record-constructor g$8944$7952$XGD4L))
   (g$interaction-env-rib$7955$XGD4L
     g$interaction-env-rib$11405$XGD4L
     (record-accessor g$8943$7950$XGD4L '0))
   (g$interaction-env-r$7956$XGD4L
     g$interaction-env-r$11406$XGD4L
     (record-accessor g$8943$7950$XGD4L '1))
   (g$interaction-env-locs$7957$XGD4L
     g$interaction-env-locs$11407$XGD4L
     (record-accessor g$8943$7950$XGD4L '2))
   (g$set-interaction-env-rib!$7958$XGD4L
     g$set-interaction-env-rib!$11408$XGD4L
     (record-mutator g$8943$7950$XGD4L '0))
   (g$set-interaction-env-r!$7959$XGD4L
     g$set-interaction-env-r!$11409$XGD4L
     (record-mutator g$8943$7950$XGD4L '1))
   (g$set-interaction-env-locs!$7960$XGD4L
     g$set-interaction-env-locs!$11410$XGD4L
     (record-mutator g$8943$7950$XGD4L '2))
   (g$rp$7961$XGD4L
     g$rp$11411$XGD4L
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10885$XGD4L g$p$10886$XGD4L)
          (display '"#<environment>" g$p$10886$XGD4L)))))
   (g$interaction-environment-symbols$7962$XGD4L
     g$interaction-environment-symbols$11412$XGD4L
     (case-lambda
       (()
        (map (case-lambda ((g$x$10887$XGD4L) g$x$10887$XGD4L))
             (g$rib-sym*$7554$XGD4L
               (g$interaction-env-rib$7955$XGD4L
                 (g$interaction-environment$7989$XGD4L)))))))
   (g$environment-symbols$7963$XGD4L
     g$environment-symbols$11413$XGD4L
     (case-lambda
       ((g$e$10888$XGD4L)
        (vector->list (g$env-names$7943$XGD4L g$e$10888$XGD4L)))))
   (g$environment?$7964$XGD4L
     g$environment?$11414$XGD4L
     (case-lambda
       ((g$x$10889$XGD4L)
        ((case-lambda
           ((g$t$10890$XGD4L)
            (if g$t$10890$XGD4L
              g$t$10890$XGD4L
              (begin '#f (g$interaction-env?$7953$XGD4L g$x$10889$XGD4L)))))
         (g$env?$7941$XGD4L g$x$10889$XGD4L)))))
   (g$environment$7965$XGD4L
     g$environment$11415$XGD4L
     (case-lambda
       (g$imp*$10891$XGD4L
        ((case-lambda
           ((g$itc$10892$XGD4L)
            ((case-lambda
               ((g$imp-collector$10895$XGD4L g$imp-collector$10896$XGD4L)
                ((case-lambda
                   ((g$swap$10897$XGD4L)
                    (dynamic-wind
                      g$swap$10897$XGD4L
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7926$XGD4L
                                g$imp*$10891$XGD4L)))
                           (case-lambda
                             ((g$subst-names$10900$XGD4L
                                g$subst-labels$10901$XGD4L)
                              ((case-lambda
                                 ((g$subst-labels$10902$XGD4L
                                    g$subst-names$10903$XGD4L)
                                  (g$make-env$7942$XGD4L
                                    g$subst-names$10903$XGD4L
                                    g$subst-labels$10902$XGD4L
                                    g$itc$10892$XGD4L)))
                               g$subst-labels$10901$XGD4L
                               g$subst-names$10900$XGD4L))))))
                      g$swap$10897$XGD4L)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10904$XGD4L)
                        (begin
                          (g$imp-collector$10895$XGD4L
                            g$imp-collector$10896$XGD4L)
                          (set! g$imp-collector$10896$XGD4L g$t$10904$XGD4L))))
                     (g$imp-collector$10895$XGD4L)))))))
             g$imp-collector$7931$XGD4L
             g$itc$10892$XGD4L)))
         (g$make-collector$7928$XGD4L)))))
   (g$null-environment$7966$XGD4L
     g$null-environment$11416$XGD4L
     (case-lambda
       ((g$n$10905$XGD4L)
        (begin
          (if (eqv? g$n$10905$XGD4L '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10905$XGD4L))
          (g$environment$7965$XGD4L '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7967$XGD4L
     g$scheme-report-environment$11417$XGD4L
     (case-lambda
       ((g$n$10906$XGD4L)
        (begin
          (if (eqv? g$n$10906$XGD4L '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10906$XGD4L))
          (g$environment$7965$XGD4L '(psyntax scheme-report-environment-5))))))
   (g$expand$7968$XGD4L
     g$expand$11418$XGD4L
     (case-lambda
       ((g$x$10907$XGD4L g$env$10908$XGD4L)
        (if (g$env?$7941$XGD4L g$env$10908$XGD4L)
          ((case-lambda
             ((g$rib$10909$XGD4L)
              ((case-lambda
                 ((g$x$10910$XGD4L
                    g$itc$10911$XGD4L
                    g$rtc$10912$XGD4L
                    g$vtc$10913$XGD4L)
                  ((case-lambda
                     ((g$x$10914$XGD4L)
                      (begin
                        (g$seal-rib!$7565$XGD4L g$rib$10909$XGD4L)
                        (values g$x$10914$XGD4L (g$rtc$10912$XGD4L)))))
                   ((case-lambda
                      ((g$inv-collector$10921$XGD4L
                         g$vis-collector$10922$XGD4L
                         g$imp-collector$10923$XGD4L
                         g$inv-collector$10924$XGD4L
                         g$vis-collector$10925$XGD4L
                         g$imp-collector$10926$XGD4L)
                       ((case-lambda
                          ((g$swap$10927$XGD4L)
                           (dynamic-wind
                             g$swap$10927$XGD4L
                             (case-lambda
                               (()
                                (g$chi-expr$7895$XGD4L
                                  g$x$10910$XGD4L
                                  '()
                                  '())))
                             g$swap$10927$XGD4L)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10928$XGD4L)
                                 (begin
                                   (g$inv-collector$10921$XGD4L
                                     g$inv-collector$10924$XGD4L)
                                   (set! g$inv-collector$10924$XGD4L
                                     g$t$10928$XGD4L))))
                              (g$inv-collector$10921$XGD4L))
                             ((case-lambda
                                ((g$t$10929$XGD4L)
                                 (begin
                                   (g$vis-collector$10922$XGD4L
                                     g$vis-collector$10925$XGD4L)
                                   (set! g$vis-collector$10925$XGD4L
                                     g$t$10929$XGD4L))))
                              (g$vis-collector$10922$XGD4L))
                             ((case-lambda
                                ((g$t$10930$XGD4L)
                                 (begin
                                   (g$imp-collector$10923$XGD4L
                                     g$imp-collector$10926$XGD4L)
                                   (set! g$imp-collector$10926$XGD4L
                                     g$t$10930$XGD4L))))
                              (g$imp-collector$10923$XGD4L))))))))
                    g$inv-collector$7929$XGD4L
                    g$vis-collector$7930$XGD4L
                    g$imp-collector$7931$XGD4L
                    g$rtc$10912$XGD4L
                    g$vtc$10913$XGD4L
                    g$itc$10911$XGD4L))))
               (g$make-stx$7572$XGD4L
                 g$x$10907$XGD4L
                 g$top-mark*$7541$XGD4L
                 (list g$rib$10909$XGD4L)
                 '())
               (g$env-itc$7945$XGD4L g$env$10908$XGD4L)
               (g$make-collector$7928$XGD4L)
               (g$make-collector$7928$XGD4L))))
           (g$make-top-rib$7927$XGD4L
             (g$env-names$7943$XGD4L g$env$10908$XGD4L)
             (g$env-labels$7944$XGD4L g$env$10908$XGD4L)))
          (if (g$interaction-env?$7953$XGD4L g$env$10908$XGD4L)
            ((case-lambda
               ((g$rib$10931$XGD4L g$r$10932$XGD4L g$rtc$10933$XGD4L)
                ((case-lambda
                   ((g$x$10934$XGD4L)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10945$XGD4L
                               g$inv-collector$10946$XGD4L
                               g$vis-collector$10947$XGD4L
                               g$imp-collector$10948$XGD4L
                               g$top-level-context$10949$XGD4L
                               g$inv-collector$10950$XGD4L
                               g$vis-collector$10951$XGD4L
                               g$imp-collector$10952$XGD4L)
                             ((case-lambda
                                ((g$swap$10953$XGD4L)
                                 (dynamic-wind
                                   g$swap$10953$XGD4L
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7933$XGD4L
                                        g$x$10934$XGD4L
                                        g$rib$10931$XGD4L
                                        g$r$10932$XGD4L)))
                                   g$swap$10953$XGD4L)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10954$XGD4L)
                                       (begin
                                         (g$top-level-context$10945$XGD4L
                                           g$top-level-context$10949$XGD4L)
                                         (set! g$top-level-context$10949$XGD4L
                                           g$t$10954$XGD4L))))
                                    (g$top-level-context$10945$XGD4L))
                                   ((case-lambda
                                      ((g$t$10955$XGD4L)
                                       (begin
                                         (g$inv-collector$10946$XGD4L
                                           g$inv-collector$10950$XGD4L)
                                         (set! g$inv-collector$10950$XGD4L
                                           g$t$10955$XGD4L))))
                                    (g$inv-collector$10946$XGD4L))
                                   ((case-lambda
                                      ((g$t$10956$XGD4L)
                                       (begin
                                         (g$vis-collector$10947$XGD4L
                                           g$vis-collector$10951$XGD4L)
                                         (set! g$vis-collector$10951$XGD4L
                                           g$t$10956$XGD4L))))
                                    (g$vis-collector$10947$XGD4L))
                                   ((case-lambda
                                      ((g$t$10957$XGD4L)
                                       (begin
                                         (g$imp-collector$10948$XGD4L
                                           g$imp-collector$10952$XGD4L)
                                         (set! g$imp-collector$10952$XGD4L
                                           g$t$10957$XGD4L))))
                                    (g$imp-collector$10948$XGD4L))))))))
                          g$top-level-context$7990$XGD4L
                          g$inv-collector$7929$XGD4L
                          g$vis-collector$7930$XGD4L
                          g$imp-collector$7931$XGD4L
                          g$env$10908$XGD4L
                          g$rtc$10933$XGD4L
                          (g$make-collector$7928$XGD4L)
                          (g$make-collector$7928$XGD4L))))
                      (case-lambda
                        ((g$e$10958$XGD4L g$r^$10959$XGD4L)
                         ((case-lambda
                            ((g$r^$10960$XGD4L g$e$10961$XGD4L)
                             (begin
                               (g$set-interaction-env-r!$7959$XGD4L
                                 g$env$10908$XGD4L
                                 g$r^$10960$XGD4L)
                               (values g$e$10961$XGD4L (g$rtc$10933$XGD4L)))))
                          g$r^$10959$XGD4L
                          g$e$10958$XGD4L))))))
                 (g$make-stx$7572$XGD4L
                   g$x$10907$XGD4L
                   g$top-mark*$7541$XGD4L
                   (list g$rib$10931$XGD4L)
                   '()))))
             (g$interaction-env-rib$7955$XGD4L g$env$10908$XGD4L)
             (g$interaction-env-r$7956$XGD4L g$env$10908$XGD4L)
             (g$make-collector$7928$XGD4L))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10908$XGD4L))))))
   (g$eval$7969$XGD4L
     g$eval$11419$XGD4L
     (case-lambda
       ((g$x$10962$XGD4L g$env$10963$XGD4L)
        (begin
          (if (g$environment?$7964$XGD4L g$env$10963$XGD4L)
            (void)
            (error 'eval '"not an environment" g$env$10963$XGD4L))
          (call-with-values
            (case-lambda
              (() (g$expand$7968$XGD4L g$x$10962$XGD4L g$env$10963$XGD4L)))
            (case-lambda
              ((g$x$10966$XGD4L g$invoke-req*$10967$XGD4L)
               ((case-lambda
                  ((g$invoke-req*$10968$XGD4L g$x$10969$XGD4L)
                   (begin
                     (for-each
                       g$invoke-library$7414$XGD4L
                       g$invoke-req*$10968$XGD4L)
                     (eval-core
                       (g$expanded->core$7113$XGD4L g$x$10969$XGD4L)))))
                g$invoke-req*$10967$XGD4L
                g$x$10966$XGD4L))))))))
   (g$library-expander$7970$XGD4L
     g$library-expander$11420$XGD4L
     (case-lambda
       ((g$x$10970$XGD4L g$filename$10971$XGD4L g$verify-name$10972$XGD4L)
        (letrec* ((g$build-visit-code$10973$XGD4L
                    (case-lambda
                      ((g$macro*$11016$XGD4L)
                       (if (null? g$macro*$11016$XGD4L)
                         (g$build-void$7534$XGD4L)
                         (g$build-sequence$7533$XGD4L
                           '#f
                           (map (case-lambda
                                  ((g$x$11017$XGD4L)
                                   ((case-lambda
                                      ((g$loc$11018$XGD4L g$src$11019$XGD4L)
                                       (list
                                         'set!
                                         g$loc$11018$XGD4L
                                         g$src$11019$XGD4L)))
                                    (car g$x$11017$XGD4L)
                                    (g$cddr$5404$XGD4L g$x$11017$XGD4L))))
                                g$macro*$11016$XGD4L))))))
                  (g$visit!$10974$XGD4L
                    (case-lambda
                      ((g$macro*$11012$XGD4L)
                       (for-each
                         (case-lambda
                           ((g$x$11013$XGD4L)
                            ((case-lambda
                               ((g$loc$11014$XGD4L g$proc$11015$XGD4L)
                                (set-symbol-value!
                                  g$loc$11014$XGD4L
                                  g$proc$11015$XGD4L)))
                             (car g$x$11013$XGD4L)
                             (g$cadr$5402$XGD4L g$x$11013$XGD4L))))
                         g$macro*$11012$XGD4L)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7935$XGD4L
                 g$x$10970$XGD4L
                 g$verify-name$10972$XGD4L)))
            (case-lambda
              ((g$name$10984$XGD4L
                 g$ver$10985$XGD4L
                 g$imp*$10986$XGD4L
                 g$inv*$10987$XGD4L
                 g$vis*$10988$XGD4L
                 g$invoke-code$10989$XGD4L
                 g$macro*$10990$XGD4L
                 g$export-subst$10991$XGD4L
                 g$export-env$10992$XGD4L)
               ((case-lambda
                  ((g$export-env$10993$XGD4L
                     g$export-subst$10994$XGD4L
                     g$macro*$10995$XGD4L
                     g$invoke-code$10996$XGD4L
                     g$vis*$10997$XGD4L
                     g$inv*$10998$XGD4L
                     g$imp*$10999$XGD4L
                     g$ver$11000$XGD4L
                     g$name$11001$XGD4L)
                   ((case-lambda
                      ((g$id$11002$XGD4L
                         g$name$11003$XGD4L
                         g$ver$11004$XGD4L
                         g$imp*$11005$XGD4L
                         g$vis*$11006$XGD4L
                         g$inv*$11007$XGD4L
                         g$visit-proc$11008$XGD4L
                         g$invoke-proc$11009$XGD4L
                         g$visit-code$11010$XGD4L
                         g$invoke-code$11011$XGD4L)
                       (begin
                         (g$install-library$7412$XGD4L
                           g$id$11002$XGD4L
                           g$name$11003$XGD4L
                           g$ver$11004$XGD4L
                           g$imp*$11005$XGD4L
                           g$vis*$11006$XGD4L
                           g$inv*$11007$XGD4L
                           g$export-subst$10994$XGD4L
                           g$export-env$10993$XGD4L
                           g$visit-proc$11008$XGD4L
                           g$invoke-proc$11009$XGD4L
                           g$visit-code$11010$XGD4L
                           g$invoke-code$11011$XGD4L
                           '#t
                           g$filename$10971$XGD4L)
                         (values
                           g$id$11002$XGD4L
                           g$name$11003$XGD4L
                           g$ver$11004$XGD4L
                           g$imp*$11005$XGD4L
                           g$vis*$11006$XGD4L
                           g$inv*$11007$XGD4L
                           g$invoke-code$11011$XGD4L
                           g$visit-code$11010$XGD4L
                           g$export-subst$10994$XGD4L
                           g$export-env$10993$XGD4L))))
                    (gensym)
                    g$name$11001$XGD4L
                    g$ver$11000$XGD4L
                    (map g$library-spec$7418$XGD4L g$imp*$10999$XGD4L)
                    (map g$library-spec$7418$XGD4L g$vis*$10997$XGD4L)
                    (map g$library-spec$7418$XGD4L g$inv*$10998$XGD4L)
                    (case-lambda
                      (() (g$visit!$10974$XGD4L g$macro*$10995$XGD4L)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7113$XGD4L
                           g$invoke-code$10996$XGD4L))))
                    (g$build-visit-code$10973$XGD4L g$macro*$10995$XGD4L)
                    g$invoke-code$10996$XGD4L)))
                g$export-env$10992$XGD4L
                g$export-subst$10991$XGD4L
                g$macro*$10990$XGD4L
                g$invoke-code$10989$XGD4L
                g$vis*$10988$XGD4L
                g$inv*$10987$XGD4L
                g$imp*$10986$XGD4L
                g$ver$10985$XGD4L
                g$name$10984$XGD4L))))))
       ((g$x$11020$XGD4L g$filename$11021$XGD4L)
        (g$library-expander$7970$XGD4L
          g$x$11020$XGD4L
          g$filename$11021$XGD4L
          (case-lambda ((g$x$11022$XGD4L) (values)))))
       ((g$x$11023$XGD4L)
        (g$library-expander$7970$XGD4L
          g$x$11023$XGD4L
          '#f
          (case-lambda ((g$x$11024$XGD4L) (values)))))))
   (g$boot-library-expand$7971$XGD4L
     g$boot-library-expand$11421$XGD4L
     (case-lambda
       ((g$x$11025$XGD4L)
        (call-with-values
          (case-lambda (() (g$library-expander$7970$XGD4L g$x$11025$XGD4L)))
          (case-lambda
            ((g$id$11036$XGD4L
               g$name$11037$XGD4L
               g$ver$11038$XGD4L
               g$imp*$11039$XGD4L
               g$vis*$11040$XGD4L
               g$inv*$11041$XGD4L
               g$invoke-code$11042$XGD4L
               g$visit-code$11043$XGD4L
               g$export-subst$11044$XGD4L
               g$export-env$11045$XGD4L)
             ((case-lambda
                ((g$export-env$11046$XGD4L
                   g$export-subst$11047$XGD4L
                   g$visit-code$11048$XGD4L
                   g$invoke-code$11049$XGD4L
                   g$inv*$11050$XGD4L
                   g$vis*$11051$XGD4L
                   g$imp*$11052$XGD4L
                   g$ver$11053$XGD4L
                   g$name$11054$XGD4L
                   g$id$11055$XGD4L)
                 (values
                   g$name$11054$XGD4L
                   g$invoke-code$11049$XGD4L
                   g$export-subst$11047$XGD4L
                   g$export-env$11046$XGD4L)))
              g$export-env$11045$XGD4L
              g$export-subst$11044$XGD4L
              g$visit-code$11043$XGD4L
              g$invoke-code$11042$XGD4L
              g$inv*$11041$XGD4L
              g$vis*$11040$XGD4L
              g$imp*$11039$XGD4L
              g$ver$11038$XGD4L
              g$name$11037$XGD4L
              g$id$11036$XGD4L)))))))
   (g$rev-map-append$7972$XGD4L
     g$rev-map-append$11422$XGD4L
     (case-lambda
       ((g$f$11056$XGD4L g$ls$11057$XGD4L g$ac$11058$XGD4L)
        (if (null? g$ls$11057$XGD4L)
          g$ac$11058$XGD4L
          (g$rev-map-append$7972$XGD4L
            g$f$11056$XGD4L
            (cdr g$ls$11057$XGD4L)
            (cons
              (g$f$11056$XGD4L (car g$ls$11057$XGD4L))
              g$ac$11058$XGD4L))))))
   (g$build-exports$7973$XGD4L
     g$build-exports$11423$XGD4L
     (case-lambda
       ((g$lex*+loc*$11059$XGD4L g$init*$11060$XGD4L)
        (g$build-sequence$7533$XGD4L
          '#f
          (cons
            (g$build-void$7534$XGD4L)
            (g$rev-map-append$7972$XGD4L
              (case-lambda
                ((g$x$11061$XGD4L)
                 (list 'set! (cdr g$x$11061$XGD4L) (car g$x$11061$XGD4L))))
              g$lex*+loc*$11059$XGD4L
              g$init*$11060$XGD4L))))))
   (g$make-export-subst$7974$XGD4L
     g$make-export-subst$11424$XGD4L
     (case-lambda
       ((g$int*$11062$XGD4L g$ext*$11063$XGD4L g$rib$11064$XGD4L)
        (map (case-lambda
               ((g$int$11065$XGD4L g$ext$11066$XGD4L)
                ((case-lambda
                   ((g$id$11067$XGD4L)
                    ((case-lambda
                       ((g$label$11068$XGD4L)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$11068$XGD4L
                                (void)
                                (g$syntax-violation$7983$XGD4L
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$11067$XGD4L))
                              (cons g$ext$11066$XGD4L g$label$11068$XGD4L)))))))
                     (g$id->label$7612$XGD4L g$id$11067$XGD4L))))
                 (g$make-stx$7572$XGD4L
                   g$int$11065$XGD4L
                   g$top-mark*$7541$XGD4L
                   (list g$rib$11064$XGD4L)
                   '()))))
             g$int*$11062$XGD4L
             g$ext*$11063$XGD4L))))
   (g$make-export-env/macros$7975$XGD4L
     g$make-export-env/macros$11425$XGD4L
     (case-lambda
       ((g$lex*$11069$XGD4L g$loc*$11070$XGD4L g$r$11071$XGD4L)
        (letrec* ((g$lookup$11072$XGD4L
                    (case-lambda
                      ((g$x$11087$XGD4L)
                       ((letrec ((g$f$11088$XGD4L
                                   (case-lambda
                                     ((g$x$11089$XGD4L
                                        g$lex*$11090$XGD4L
                                        g$loc*$11091$XGD4L)
                                      (if (pair? g$lex*$11090$XGD4L)
                                        (if (eq? g$x$11089$XGD4L
                                                 (car g$lex*$11090$XGD4L))
                                          (car g$loc*$11091$XGD4L)
                                          (g$f$11088$XGD4L
                                            g$x$11089$XGD4L
                                            (cdr g$lex*$11090$XGD4L)
                                            (cdr g$loc*$11091$XGD4L)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11088$XGD4L)
                        g$x$11087$XGD4L
                        g$lex*$11069$XGD4L
                        g$loc*$11070$XGD4L)))))
          ((letrec ((g$f$11073$XGD4L
                      (case-lambda
                        ((g$r$11074$XGD4L
                           g$env$11075$XGD4L
                           g$global*$11076$XGD4L
                           g$macro*$11077$XGD4L)
                         (if (null? g$r$11074$XGD4L)
                           (values
                             g$env$11075$XGD4L
                             g$global*$11076$XGD4L
                             g$macro*$11077$XGD4L)
                           ((case-lambda
                              ((g$x$11078$XGD4L)
                               ((case-lambda
                                  ((g$label$11079$XGD4L g$b$11080$XGD4L)
                                   ((case-lambda
                                      ((g$t$11081$XGD4L)
                                       (if (eqv? g$t$11081$XGD4L 'lexical)
                                         ((case-lambda
                                            ((g$v$11084$XGD4L)
                                             ((case-lambda
                                                ((g$loc$11085$XGD4L
                                                   g$type$11086$XGD4L)
                                                 (g$f$11073$XGD4L
                                                   (cdr g$r$11074$XGD4L)
                                                   (cons
                                                     (g$cons*$5873$XGD4L
                                                       g$label$11079$XGD4L
                                                       g$type$11086$XGD4L
                                                       g$loc$11085$XGD4L)
                                                     g$env$11075$XGD4L)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7821$XGD4L
                                                         g$v$11084$XGD4L)
                                                       g$loc$11085$XGD4L)
                                                     g$global*$11076$XGD4L)
                                                   g$macro*$11077$XGD4L)))
                                              (g$lookup$11072$XGD4L
                                                (g$lexical-var$7821$XGD4L
                                                  g$v$11084$XGD4L))
                                              (if (g$lexical-mutable?$7822$XGD4L
                                                    g$v$11084$XGD4L)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7617$XGD4L
                                            g$b$11080$XGD4L))
                                         (if (eqv? g$t$11081$XGD4L 'local-macro)
                                           ((case-lambda
                                              ((g$loc$11083$XGD4L)
                                               (g$f$11073$XGD4L
                                                 (cdr g$r$11074$XGD4L)
                                                 (cons
                                                   (g$cons*$5873$XGD4L
                                                     g$label$11079$XGD4L
                                                     'global-macro
                                                     g$loc$11083$XGD4L)
                                                   g$env$11075$XGD4L)
                                                 g$global*$11076$XGD4L
                                                 (cons
                                                   (cons
                                                     g$loc$11083$XGD4L
                                                     (g$binding-value$7617$XGD4L
                                                       g$b$11080$XGD4L))
                                                   g$macro*$11077$XGD4L))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$11081$XGD4L
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$11082$XGD4L)
                                                 (g$f$11073$XGD4L
                                                   (cdr g$r$11074$XGD4L)
                                                   (cons
                                                     (g$cons*$5873$XGD4L
                                                       g$label$11079$XGD4L
                                                       'global-macro!
                                                       g$loc$11082$XGD4L)
                                                     g$env$11075$XGD4L)
                                                   g$global*$11076$XGD4L
                                                   (cons
                                                     (cons
                                                       g$loc$11082$XGD4L
                                                       (g$binding-value$7617$XGD4L
                                                         g$b$11080$XGD4L))
                                                     g$macro*$11077$XGD4L))))
                                              (gensym))
                                             (if (memv
                                                   g$t$11081$XGD4L
                                                   '($rtd $module))
                                               (g$f$11073$XGD4L
                                                 (cdr g$r$11074$XGD4L)
                                                 (cons
                                                   g$x$11078$XGD4L
                                                   g$env$11075$XGD4L)
                                                 g$global*$11076$XGD4L
                                                 g$macro*$11077$XGD4L)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7616$XGD4L
                                                   g$b$11080$XGD4L)
                                                 (g$binding-value$7617$XGD4L
                                                   g$b$11080$XGD4L))))))))
                                    (g$binding-type$7616$XGD4L
                                      g$b$11080$XGD4L))))
                                (car g$x$11078$XGD4L)
                                (cdr g$x$11078$XGD4L))))
                            (car g$r$11074$XGD4L)))))))
             g$f$11073$XGD4L)
           g$r$11071$XGD4L
           '()
           '()
           '())))))
   (g$generate-temporaries$7976$XGD4L
     g$generate-temporaries$11426$XGD4L
     (case-lambda
       ((g$ls$11092$XGD4L)
        ((case-lambda
           ((g$t$11093$XGD4L)
            ((case-lambda
               ((g$ls/false$11094$XGD4L)
                (if g$ls/false$11094$XGD4L
                  (apply
                    (case-lambda
                      ((g$ls$11095$XGD4L)
                       (map (case-lambda
                              ((g$x$11096$XGD4L)
                               (g$make-stx$7572$XGD4L
                                 ((case-lambda
                                    ((g$x$11097$XGD4L)
                                     (if ((case-lambda
                                            ((g$t$11098$XGD4L)
                                             (if g$t$11098$XGD4L
                                               g$t$11098$XGD4L
                                               (begin
                                                 '#f
                                                 (string? g$x$11097$XGD4L)))))
                                          (symbol? g$x$11097$XGD4L))
                                       (gensym g$x$11097$XGD4L)
                                       (gensym 't))))
                                  (g$syntax->datum$7986$XGD4L g$x$11096$XGD4L))
                                 g$top-mark*$7541$XGD4L
                                 '()
                                 '())))
                            g$ls$11095$XGD4L)))
                    g$ls/false$11094$XGD4L)
                  ((case-lambda
                     ((g$t$11099$XGD4L)
                      ((case-lambda
                         ((g$ls/false$11100$XGD4L)
                          (if g$ls/false$11100$XGD4L
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11100$XGD4L)
                            (g$syntax-violation$7983$XGD4L
                              '#f
                              '"invalid syntax"
                              g$t$11099$XGD4L))))
                       (g$syntax-dispatch$7877$XGD4L g$t$11099$XGD4L '_))))
                   g$t$11093$XGD4L))))
             (g$syntax-dispatch$7877$XGD4L g$t$11093$XGD4L 'each-any))))
         g$ls$11092$XGD4L))))
   (g$free-identifier=?$7977$XGD4L
     g$free-identifier=?$11427$XGD4L
     (case-lambda
       ((g$x$11101$XGD4L g$y$11102$XGD4L)
        (if (g$id?$7599$XGD4L g$x$11101$XGD4L)
          (if (g$id?$7599$XGD4L g$y$11102$XGD4L)
            (g$free-id=?$7603$XGD4L g$x$11101$XGD4L g$y$11102$XGD4L)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11102$XGD4L))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11101$XGD4L)))))
   (g$bound-identifier=?$7978$XGD4L
     g$bound-identifier=?$11428$XGD4L
     (case-lambda
       ((g$x$11103$XGD4L g$y$11104$XGD4L)
        (if (g$id?$7599$XGD4L g$x$11103$XGD4L)
          (if (g$id?$7599$XGD4L g$y$11104$XGD4L)
            (g$bound-id=?$7602$XGD4L g$x$11103$XGD4L g$y$11104$XGD4L)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11104$XGD4L))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11103$XGD4L)))))
   (g$extract-position-condition$7979$XGD4L
     g$extract-position-condition$11429$XGD4L
     (case-lambda
       ((g$x$11105$XGD4L)
        (letrec* ((g$11825$11106$XGD4L
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11828$XGD4L
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11827$11107$XGD4L '#f)
                  (g$11826$11108$XGD4L
                    (make-record-constructor-descriptor
                      g$11825$11106$XGD4L
                      &condition-rcd
                      g$11827$11107$XGD4L))
                  (g$11824$11109$XGD4L (record-predicate g$11825$11106$XGD4L))
                  (g$make-source-condition$11110$XGD4L
                    (record-constructor g$11826$11108$XGD4L))
                  (g$11822$11111$XGD4L (record-accessor g$11825$11106$XGD4L '0))
                  (g$11823$11112$XGD4L (record-accessor g$11825$11106$XGD4L '1))
                  (g$source-condition?$11113$XGD4L
                    (condition-predicate g$11825$11106$XGD4L))
                  (g$source-filename$11114$XGD4L
                    (condition-accessor
                      g$11825$11106$XGD4L
                      g$11822$11111$XGD4L))
                  (g$source-character$11115$XGD4L
                    (condition-accessor
                      g$11825$11106$XGD4L
                      g$11823$11112$XGD4L)))
          (if (g$stx?$7571$XGD4L g$x$11105$XGD4L)
            ((case-lambda
               ((g$x$11116$XGD4L)
                (if (annotation? g$x$11116$XGD4L)
                  ((case-lambda
                     ((g$src$11117$XGD4L)
                      (if (pair? g$src$11117$XGD4L)
                        (g$make-source-condition$11110$XGD4L
                          (car g$src$11117$XGD4L)
                          (cdr g$src$11117$XGD4L))
                        (condition))))
                   (annotation-source g$x$11116$XGD4L))
                  (condition))))
             (g$stx-expr$7573$XGD4L g$x$11105$XGD4L))
            (condition))))))
   (g$syntax-error$7980$XGD4L
     g$syntax-error$11430$XGD4L
     (case-lambda
       ((g$x$11118$XGD4L . g$args$11119$XGD4L)
        (begin
          (if (g$for-all$5871$XGD4L string? g$args$11119$XGD4L)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11119$XGD4L))
          (raise
            (condition
              (g$make-message-condition$6125$XGD4L
                (if (null? g$args$11119$XGD4L)
                  '"invalid syntax"
                  (apply string-append g$args$11119$XGD4L)))
              (g$make-syntax-violation$6197$XGD4L
                (g$syntax->datum$7986$XGD4L g$x$11118$XGD4L)
                '#f)
              (g$extract-position-condition$7979$XGD4L g$x$11118$XGD4L)
              (g$extract-trace$7981$XGD4L g$x$11118$XGD4L)))))))
   (g$extract-trace$7981$XGD4L
     g$extract-trace$11431$XGD4L
     (case-lambda
       ((g$x$11120$XGD4L)
        (letrec* ((g$11849$11121$XGD4L
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11852$XGD4L
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11851$11122$XGD4L '#f)
                  (g$11850$11123$XGD4L
                    (make-record-constructor-descriptor
                      g$11849$11121$XGD4L
                      &condition-rcd
                      g$11851$11122$XGD4L))
                  (g$11848$11124$XGD4L (record-predicate g$11849$11121$XGD4L))
                  (g$make-trace$11125$XGD4L
                    (record-constructor g$11850$11123$XGD4L))
                  (g$11847$11126$XGD4L (record-accessor g$11849$11121$XGD4L '0))
                  (g$trace?$11127$XGD4L
                    (condition-predicate g$11849$11121$XGD4L))
                  (g$trace-form$11128$XGD4L
                    (condition-accessor
                      g$11849$11121$XGD4L
                      g$11847$11126$XGD4L)))
          ((letrec ((g$f$11129$XGD4L
                      (case-lambda
                        ((g$x$11130$XGD4L)
                         (if (g$stx?$7571$XGD4L g$x$11130$XGD4L)
                           (apply
                             condition
                             (g$make-trace$11125$XGD4L g$x$11130$XGD4L)
                             (map g$f$11129$XGD4L
                                  (g$stx-ae*$7576$XGD4L g$x$11130$XGD4L)))
                           (if (annotation? g$x$11130$XGD4L)
                             (g$make-trace$11125$XGD4L
                               (g$make-stx$7572$XGD4L
                                 g$x$11130$XGD4L
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11129$XGD4L)
           g$x$11120$XGD4L)))))
   (g$syntax-violation*$7982$XGD4L
     g$syntax-violation*$11432$XGD4L
     (case-lambda
       ((g$who$11131$XGD4L
          g$msg$11132$XGD4L
          g$form$11133$XGD4L
          g$condition-object$11134$XGD4L)
        (begin
          (if (string? g$msg$11132$XGD4L)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11132$XGD4L))
          ((case-lambda
             ((g$who$11135$XGD4L)
              (raise
                (condition
                  (if g$who$11135$XGD4L
                    (g$make-who-condition$6171$XGD4L g$who$11135$XGD4L)
                    (condition))
                  (g$make-message-condition$6125$XGD4L g$msg$11132$XGD4L)
                  g$condition-object$11134$XGD4L
                  (g$extract-position-condition$7979$XGD4L g$form$11133$XGD4L)
                  (g$extract-trace$7981$XGD4L g$form$11133$XGD4L)))))
           (if ((case-lambda
                  ((g$t$11136$XGD4L)
                   (if g$t$11136$XGD4L
                     g$t$11136$XGD4L
                     (begin '#f (symbol? g$who$11131$XGD4L)))))
                (string? g$who$11131$XGD4L))
             g$who$11131$XGD4L
             (if (not g$who$11131$XGD4L)
               ((case-lambda
                  ((g$t$11137$XGD4L)
                   ((case-lambda
                      ((g$ls/false$11138$XGD4L)
                       (if (if g$ls/false$11138$XGD4L
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11139$XGD4L)
                                    (g$id?$7599$XGD4L g$id$11139$XGD4L)))
                                 g$ls/false$11138$XGD4L))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11140$XGD4L)
                              (g$syntax->datum$7986$XGD4L g$id$11140$XGD4L)))
                           g$ls/false$11138$XGD4L)
                         ((case-lambda
                            ((g$t$11141$XGD4L)
                             ((case-lambda
                                ((g$ls/false$11142$XGD4L)
                                 (if (if g$ls/false$11142$XGD4L
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11143$XGD4L
                                                g$rest$11144$XGD4L)
                                              (g$id?$7599$XGD4L
                                                g$id$11143$XGD4L)))
                                           g$ls/false$11142$XGD4L))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11145$XGD4L g$rest$11146$XGD4L)
                                        (g$syntax->datum$7986$XGD4L
                                          g$id$11145$XGD4L)))
                                     g$ls/false$11142$XGD4L)
                                   ((case-lambda
                                      ((g$t$11147$XGD4L)
                                       ((case-lambda
                                          ((g$ls/false$11148$XGD4L)
                                           (if g$ls/false$11148$XGD4L
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11148$XGD4L)
                                             (g$syntax-violation$7983$XGD4L
                                               '#f
                                               '"invalid syntax"
                                               g$t$11147$XGD4L))))
                                        (g$syntax-dispatch$7877$XGD4L
                                          g$t$11147$XGD4L
                                          '_))))
                                    g$t$11141$XGD4L))))
                              (g$syntax-dispatch$7877$XGD4L
                                g$t$11141$XGD4L
                                '(any . any)))))
                          g$t$11137$XGD4L))))
                    (g$syntax-dispatch$7877$XGD4L g$t$11137$XGD4L 'any))))
                g$form$11133$XGD4L)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11131$XGD4L))))))))
   (g$syntax-violation$7983$XGD4L
     g$syntax-violation$11433$XGD4L
     (case-lambda
       ((g$who$11149$XGD4L g$msg$11150$XGD4L g$form$11151$XGD4L)
        (g$syntax-violation$7983$XGD4L
          g$who$11149$XGD4L
          g$msg$11150$XGD4L
          g$form$11151$XGD4L
          '#f))
       ((g$who$11152$XGD4L
          g$msg$11153$XGD4L
          g$form$11154$XGD4L
          g$subform$11155$XGD4L)
        (g$syntax-violation*$7982$XGD4L
          g$who$11152$XGD4L
          g$msg$11153$XGD4L
          g$form$11154$XGD4L
          (g$make-syntax-violation$6197$XGD4L
            (g$syntax->datum$7986$XGD4L g$form$11154$XGD4L)
            (g$syntax->datum$7986$XGD4L g$subform$11155$XGD4L))))))
   (g$identifier?$7984$XGD4L
     g$identifier?$11434$XGD4L
     (case-lambda ((g$x$11156$XGD4L) (g$id?$7599$XGD4L g$x$11156$XGD4L))))
   (g$datum->syntax$7985$XGD4L
     g$datum->syntax$11435$XGD4L
     (case-lambda
       ((g$id$11157$XGD4L g$datum$11158$XGD4L)
        (if (g$id?$7599$XGD4L g$id$11157$XGD4L)
          (g$datum->stx$7582$XGD4L g$id$11157$XGD4L g$datum$11158$XGD4L)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11157$XGD4L)))))
   (g$syntax->datum$7986$XGD4L
     g$syntax->datum$11436$XGD4L
     (case-lambda
       ((g$x$11159$XGD4L) (g$stx->datum$7610$XGD4L g$x$11159$XGD4L))))
   (g$compile-r6rs-top-level$7987$XGD4L
     g$compile-r6rs-top-level$11437$XGD4L
     (case-lambda
       ((g$x*$11160$XGD4L)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7937$XGD4L g$x*$11160$XGD4L)))
          (case-lambda
            ((g$lib*$11163$XGD4L g$invoke-code$11164$XGD4L)
             ((case-lambda
                ((g$invoke-code$11165$XGD4L g$lib*$11166$XGD4L)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$7414$XGD4L g$lib*$11166$XGD4L)
                      (eval-core
                        (g$expanded->core$7113$XGD4L
                          g$invoke-code$11165$XGD4L)))))))
              g$invoke-code$11164$XGD4L
              g$lib*$11163$XGD4L)))))))
   (g$pre-compile-r6rs-top-level$7988$XGD4L
     g$pre-compile-r6rs-top-level$11438$XGD4L
     (case-lambda
       ((g$x*$11167$XGD4L)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7937$XGD4L g$x*$11167$XGD4L)))
          (case-lambda
            ((g$lib*$11170$XGD4L g$invoke-code$11171$XGD4L)
             ((case-lambda
                ((g$invoke-code$11172$XGD4L g$lib*$11173$XGD4L)
                 (begin
                   (for-each g$invoke-library$7414$XGD4L g$lib*$11173$XGD4L)
                   (compile-core
                     (g$expanded->core$7113$XGD4L g$invoke-code$11172$XGD4L)))))
              g$invoke-code$11171$XGD4L
              g$lib*$11170$XGD4L)))))))
   (g$interaction-environment$7989$XGD4L
     g$interaction-environment$11439$XGD4L
     ((case-lambda
        ((g$the-env$11174$XGD4L)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11175$XGD4L)
                (if g$t$11175$XGD4L
                  g$t$11175$XGD4L
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11176$XGD4L g$rib$11177$XGD4L)
                        (begin
                          ((case-lambda
                             ((g$subst$11178$XGD4L)
                              (begin
                                (g$set-rib-sym*!$7558$XGD4L
                                  g$rib$11177$XGD4L
                                  (map car g$subst$11178$XGD4L))
                                (g$set-rib-mark**!$7559$XGD4L
                                  g$rib$11177$XGD4L
                                  (map (case-lambda
                                         ((g$x$11179$XGD4L)
                                          g$top-mark*$7541$XGD4L))
                                       g$subst$11178$XGD4L))
                                (g$set-rib-label*!$7560$XGD4L
                                  g$rib$11177$XGD4L
                                  (map cdr g$subst$11178$XGD4L)))))
                           (g$library-subst$7371$XGD4L g$lib$11176$XGD4L))
                          ((case-lambda
                             ((g$env$11180$XGD4L)
                              (begin
                                (set! g$the-env$11174$XGD4L g$env$11180$XGD4L)
                                g$env$11180$XGD4L)))
                           (g$make-interaction-env$7954$XGD4L
                             g$rib$11177$XGD4L
                             '()
                             '())))))
                     (g$find-library-by-name$7407$XGD4L '(ironscheme))
                     (g$make-empty-rib$7562$XGD4L))))))
             g$the-env$11174$XGD4L)))))
      '#f))
   (g$top-level-context$7990$XGD4L
     g$top-level-context$11440$XGD4L
     (g$make-parameter$6866$XGD4L '#f)))
  (g$current-library-expander$7404$XGD4L g$library-expander$7970$XGD4L))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7110$XGD4L
      (case-lambda
        ((g$x$11493$XGD4L)
         ((case-lambda
            ((g$t$11494$XGD4L) (if g$t$11494$XGD4L (cdr g$t$11494$XGD4L) '#f)))
          (assq
            g$x$11493$XGD4L
            '((ellipsis-map . g$ellipsis-map$11332$XGD4L)
              (ironscheme-build . g$ironscheme-build$11486$XGD4L)
              (syntax-error . g$syntax-error$11430$XGD4L)
              (syntax-dispatch . g$syntax-dispatch$11327$XGD4L)
              (compile-system-libraries
                .
                g$compile-system-libraries$11488$XGD4L)
              (compile->closure . g$compile->closure$11490$XGD4L)
              (compile . g$compile$11489$XGD4L)
              (load . g$load$11485$XGD4L)
              (interaction-environment . g$interaction-environment$11439$XGD4L)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11265$XGD4L)
              (variable-transformer? . g$variable-transformer?$11264$XGD4L)
              (make-variable-transformer
                .
                g$make-variable-transformer$11263$XGD4L)
              (identifier? . g$identifier?$11434$XGD4L)
              (generate-temporaries . g$generate-temporaries$11426$XGD4L)
              (free-identifier=? . g$free-identifier=?$11427$XGD4L)
              (syntax->datum . g$syntax->datum$11436$XGD4L)
              (datum->syntax . g$datum->syntax$11435$XGD4L)
              (bound-identifier=? . g$bound-identifier=?$11428$XGD4L)
              (delete-file . g$delete-file$5743$XGD4L)
              (file-exists? . g$file-exists?$5742$XGD4L)
              (list-sort . g$list-sort$6259$XGD4L)
              (make-eqv-hashtable . g$make-eqv-hashtable$5665$XGD4L)
              (make-eq-hashtable . g$make-eq-hashtable$5664$XGD4L)
              (hashtable-update! . g$hashtable-update!$5671$XGD4L)
              (hashtable-size . g$hashtable-size$5666$XGD4L)
              (hashtable-set! . g$hashtable-set!$5668$XGD4L)
              (hashtable-ref . g$hashtable-ref$5667$XGD4L)
              (hashtable-delete! . g$hashtable-delete!$5669$XGD4L)
              (hashtable-contains? . g$hashtable-contains?$5670$XGD4L)
              (hashtable-clear! . g$hashtable-clear!$5672$XGD4L)
              (open-string-output-port . g$open-string-output-port$6601$XGD4L)
              (make-i/o-write-error . g$make-i/o-write-error$6530$XGD4L)
              (make-i/o-read-error . g$make-i/o-read-error$6524$XGD4L)
              (make-i/o-port-error . g$make-i/o-port-error$6576$XGD4L)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6536$XGD4L)
              (make-i/o-filename-error . g$make-i/o-filename-error$6544$XGD4L)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6552$XGD4L)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6558$XGD4L)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6570$XGD4L)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6564$XGD4L)
              (make-i/o-error . g$make-i/o-error$6518$XGD4L)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6590$XGD4L)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6584$XGD4L)
              (i/o-write-error? . g$i/o-write-error?$6531$XGD4L)
              (i/o-read-error? . g$i/o-read-error?$6525$XGD4L)
              (i/o-port-error? . g$i/o-port-error?$6578$XGD4L)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6538$XGD4L)
              (i/o-error-position . g$i/o-error-position$6539$XGD4L)
              (i/o-filename-error? . g$i/o-filename-error?$6546$XGD4L)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6553$XGD4L)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6559$XGD4L)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6571$XGD4L)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6565$XGD4L)
              (i/o-error? . g$i/o-error?$6519$XGD4L)
              (i/o-error-port . g$i/o-error-port$6579$XGD4L)
              (i/o-error-filename . g$i/o-error-filename$6547$XGD4L)
              (i/o-encoding-error? . g$i/o-encoding-error?$6592$XGD4L)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6593$XGD4L)
              (i/o-decoding-error? . g$i/o-decoding-error?$6585$XGD4L)
              (scheme-report-environment
                .
                g$scheme-report-environment$11417$XGD4L)
              (quotient . g$quotient$6228$XGD4L)
              (null-environment . g$null-environment$11416$XGD4L)
              (remainder . g$remainder$6229$XGD4L)
              (modulo . g$modulo$6230$XGD4L)
              (command-line . g$command-line$11482$XGD4L)
              (remove . g$remove$5876$XGD4L)
              (remv . g$remv$5877$XGD4L)
              (remp . g$remp$5862$XGD4L)
              (remq . g$remq$5878$XGD4L)
              (partition . g$partition$5861$XGD4L)
              (memp . g$memp$5868$XGD4L)
              (member . g$member$5867$XGD4L)
              (exists . g$exists$5872$XGD4L)
              (for-all . g$for-all$5871$XGD4L)
              (fold-right . g$fold-right$5875$XGD4L)
              (fold-left . g$fold-left$5874$XGD4L)
              (find . g$find$5860$XGD4L)
              (filter . g$filter$5863$XGD4L)
              (cons* . g$cons*$5873$XGD4L)
              (assv . g$assv$5864$XGD4L)
              (assp . g$assp$5866$XGD4L)
              (assoc . g$assoc$5865$XGD4L)
              (eval . g$eval$11419$XGD4L)
              (environment . g$environment$11415$XGD4L)
              (make-enumeration . g$make-enumeration$6743$XGD4L)
              (enum-set=? . g$enum-set=?$6750$XGD4L)
              (enum-set-universe . g$enum-set-universe$6744$XGD4L)
              (enum-set-union . g$enum-set-union$6751$XGD4L)
              (enum-set-subset? . g$enum-set-subset?$6749$XGD4L)
              (enum-set-projection . g$enum-set-projection$6755$XGD4L)
              (enum-set-member? . g$enum-set-member?$6748$XGD4L)
              (enum-set-intersection . g$enum-set-intersection$6752$XGD4L)
              (enum-set-indexer . g$enum-set-indexer$6745$XGD4L)
              (enum-set-difference . g$enum-set-difference$6753$XGD4L)
              (enum-set-constructor . g$enum-set-constructor$6746$XGD4L)
              (enum-set-complement . g$enum-set-complement$6754$XGD4L)
              (enum-set->list . g$enum-set->list$6747$XGD4L)
              (who-condition? . g$who-condition?$6173$XGD4L)
              (warning? . g$warning?$6134$XGD4L)
              (violation? . g$violation?$6152$XGD4L)
              (undefined-violation? . g$undefined-violation?$6208$XGD4L)
              (syntax-violation? . g$syntax-violation?$6200$XGD4L)
              (syntax-violation-subform . g$syntax-violation-subform$6202$XGD4L)
              (syntax-violation-form . g$syntax-violation-form$6201$XGD4L)
              (syntax-violation . g$syntax-violation$11433$XGD4L)
              (serious-condition? . g$serious-condition?$6140$XGD4L)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6180$XGD4L)
              (message-condition? . g$message-condition?$6127$XGD4L)
              (make-who-condition . g$make-who-condition$6171$XGD4L)
              (make-warning . g$make-warning$6133$XGD4L)
              (make-violation . g$make-violation$6151$XGD4L)
              (make-undefined-violation . g$make-undefined-violation$6207$XGD4L)
              (make-syntax-violation . g$make-syntax-violation$6197$XGD4L)
              (make-serious-condition . g$make-serious-condition$6139$XGD4L)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6179$XGD4L)
              (make-message-condition . g$make-message-condition$6125$XGD4L)
              (make-lexical-violation . g$make-lexical-violation$6191$XGD4L)
              (make-irritants-condition . g$make-irritants-condition$6163$XGD4L)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6185$XGD4L)
              (make-error . g$make-error$6145$XGD4L)
              (make-assertion-violation . g$make-assertion-violation$6157$XGD4L)
              (lexical-violation? . g$lexical-violation?$6192$XGD4L)
              (irritants-condition? . g$irritants-condition?$6165$XGD4L)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6186$XGD4L)
              (error? . g$error?$6146$XGD4L)
              (condition-who . g$condition-who$6174$XGD4L)
              (condition-message . g$condition-message$6128$XGD4L)
              (condition-irritants . g$condition-irritants$6166$XGD4L)
              (assertion-violation? . g$assertion-violation?$6158$XGD4L)
              (native-endianness . g$native-endianness$5990$XGD4L)
              (bytevector-u64-set! . g$bytevector-u64-set!$6011$XGD4L)
              (bytevector-u64-ref . g$bytevector-u64-ref$6007$XGD4L)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6013$XGD4L)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6009$XGD4L)
              (bytevector-u32-set! . g$bytevector-u32-set!$6003$XGD4L)
              (bytevector-u32-ref . g$bytevector-u32-ref$5999$XGD4L)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6005$XGD4L)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6001$XGD4L)
              (bytevector-u16-set! . g$bytevector-u16-set!$5995$XGD4L)
              (bytevector-u16-ref . g$bytevector-u16-ref$5991$XGD4L)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5997$XGD4L)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5993$XGD4L)
              (bytevector-s64-set! . g$bytevector-s64-set!$6012$XGD4L)
              (bytevector-s64-ref . g$bytevector-s64-ref$6008$XGD4L)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6014$XGD4L)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6010$XGD4L)
              (bytevector-s32-set! . g$bytevector-s32-set!$6004$XGD4L)
              (bytevector-s32-ref . g$bytevector-s32-ref$6000$XGD4L)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6006$XGD4L)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6002$XGD4L)
              (bytevector-s16-set! . g$bytevector-s16-set!$5996$XGD4L)
              (bytevector-s16-ref . g$bytevector-s16-ref$5992$XGD4L)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5998$XGD4L)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5994$XGD4L)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6017$XGD4L)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6015$XGD4L)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6018$XGD4L)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6016$XGD4L)
              (no-nans-violation? . g$no-nans-violation?$6433$XGD4L)
              (no-infinities-violation? . g$no-infinities-violation?$6427$XGD4L)
              (make-no-nans-violation . g$make-no-nans-violation$6432$XGD4L)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6426$XGD4L)
              (fxrotate-bit-field . g$fxrotate-bit-field$6409$XGD4L)
              (fxif . g$fxif$6403$XGD4L)
              (fxcopy-bit-field . g$fxcopy-bit-field$6406$XGD4L)
              (fxcopy-bit . g$fxcopy-bit$6404$XGD4L)
              (fxbit-field . g$fxbit-field$6405$XGD4L)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6408$XGD4L)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6407$XGD4L)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6354$XGD4L)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$6355$XGD4L)
              (bitwise-if . g$bitwise-if$6348$XGD4L)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6351$XGD4L)
              (bitwise-copy-bit . g$bitwise-copy-bit$6349$XGD4L)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6353$XGD4L)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6352$XGD4L)
              (rationalize . g$rationalize$5429$XGD4L)
              (cddddr . g$cddddr$5428$XGD4L)
              (cdddar . g$cdddar$5427$XGD4L)
              (cddadr . g$cddadr$5426$XGD4L)
              (cddaar . g$cddaar$5425$XGD4L)
              (cdaddr . g$cdaddr$5424$XGD4L)
              (cdadar . g$cdadar$5423$XGD4L)
              (cdaadr . g$cdaadr$5422$XGD4L)
              (cdaaar . g$cdaaar$5421$XGD4L)
              (cadddr . g$cadddr$5420$XGD4L)
              (caddar . g$caddar$5419$XGD4L)
              (cadadr . g$cadadr$5418$XGD4L)
              (cadaar . g$cadaar$5417$XGD4L)
              (caaddr . g$caaddr$5416$XGD4L)
              (caadar . g$caadar$5415$XGD4L)
              (caaadr . g$caaadr$5414$XGD4L)
              (caaaar . g$caaaar$5413$XGD4L)
              (cdddr . g$cdddr$5412$XGD4L)
              (cddar . g$cddar$5411$XGD4L)
              (cdadr . g$cdadr$5410$XGD4L)
              (cdaar . g$cdaar$5409$XGD4L)
              (caddr . g$caddr$5408$XGD4L)
              (cadar . g$cadar$5407$XGD4L)
              (caadr . g$caadr$5406$XGD4L)
              (caaar . g$caaar$5405$XGD4L)
              (cddr . g$cddr$5404$XGD4L)
              (cdar . g$cdar$5403$XGD4L)
              (cadr . g$cadr$5402$XGD4L)
              (caar . g$caar$5401$XGD4L)
              (load/args . g$load/args$11484$XGD4L)
              (printf . g$printf$6779$XGD4L)
              (fprintf . g$fprintf$6780$XGD4L)
              (format . g$format$6781$XGD4L)
              (trace-printer . g$trace-printer$11481$XGD4L)
              (make-traced-macro . g$make-traced-macro$6785$XGD4L)
              (make-parameter . g$make-parameter$6866$XGD4L)
              (environment-symbols . g$environment-symbols$11413$XGD4L)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11412$XGD4L)
              (library-path . g$library-path$7396$XGD4L)
              (library-extensions . g$library-extensions$7397$XGD4L)
              (installed-libraries . g$installed-libraries$7417$XGD4L)
              (expand . g$expand$11418$XGD4L)))))))
    (g$install-library$7412$XGD4L
      'g$12597$XGD4L
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12534$XGD4L)
        (cosh . g$12533$XGD4L)
        (sinh . g$12532$XGD4L)
        (make-guid . g$12531$XGD4L)
        (unspecified? . g$12530$XGD4L)
        (make-trace . g$12529$XGD4L)
        (make-list . g$12528$XGD4L)
        (last-pair . g$12527$XGD4L)
        (load-r5rs . g$12526$XGD4L)
        (license . g$12525$XGD4L)
        (stacktrace . g$12524$XGD4L)
        (ironscheme-build . g$11921$XGD4L)
        (set-symbol-value! . g$12510$XGD4L)
        (symbol-value . g$12509$XGD4L)
        (ungensym . g$12508$XGD4L)
        (gensym . g$12507$XGD4L)
        (void . g$12506$XGD4L)
        (compile-system-libraries . g$11923$XGD4L)
        (compile->closure . g$11925$XGD4L)
        (compile . g$11924$XGD4L)
        (load . g$11920$XGD4L)
        (interaction-environment . g$8989$XGD4L)
        (string-upcase . g$12502$XGD4L)
        (string-titlecase . g$12501$XGD4L)
        (string-normalize-nfkd . g$12500$XGD4L)
        (string-normalize-nfkc . g$12499$XGD4L)
        (string-normalize-nfd . g$12498$XGD4L)
        (string-normalize-nfc . g$12497$XGD4L)
        (string-foldcase . g$12496$XGD4L)
        (string-downcase . g$12495$XGD4L)
        (string-ci>? . g$12494$XGD4L)
        (string-ci>=? . g$12493$XGD4L)
        (string-ci=? . g$12492$XGD4L)
        (string-ci<? . g$12491$XGD4L)
        (string-ci<=? . g$12490$XGD4L)
        (char-whitespace? . g$12489$XGD4L)
        (char-upper-case? . g$12488$XGD4L)
        (char-title-case? . g$12487$XGD4L)
        (char-numeric? . g$12486$XGD4L)
        (char-lower-case? . g$12485$XGD4L)
        (char-general-category . g$12484$XGD4L)
        (char-upcase . g$12483$XGD4L)
        (char-titlecase . g$12482$XGD4L)
        (char-foldcase . g$12481$XGD4L)
        (char-downcase . g$12480$XGD4L)
        (char-ci>? . g$12479$XGD4L)
        (char-ci>=? . g$12478$XGD4L)
        (char-ci=? . g$12477$XGD4L)
        (char-ci<? . g$12476$XGD4L)
        (char-ci<=? . g$12475$XGD4L)
        (char-alphabetic? . g$12474$XGD4L)
        (variable-transformer-procedure . g$8593$XGD4L)
        (variable-transformer? . g$8592$XGD4L)
        (make-variable-transformer . g$8591$XGD4L)
        (identifier? . g$8984$XGD4L)
        (generate-temporaries . g$8976$XGD4L)
        (free-identifier=? . g$8977$XGD4L)
        (syntax->datum . g$8986$XGD4L)
        (datum->syntax . g$8985$XGD4L)
        (bound-identifier=? . g$8978$XGD4L)
        (record-type-descriptor? . g$12473$XGD4L)
        (record-predicate . g$12472$XGD4L)
        (record-mutator . g$12471$XGD4L)
        (record-constructor . g$12470$XGD4L)
        (record-accessor . g$12469$XGD4L)
        (make-record-type-descriptor . g$12468$XGD4L)
        (make-record-constructor-descriptor . g$12467$XGD4L)
        (record? . g$12466$XGD4L)
        (record-type-uid . g$12465$XGD4L)
        (record-type-sealed? . g$12464$XGD4L)
        (record-type-parent . g$12463$XGD4L)
        (record-type-opaque? . g$12462$XGD4L)
        (record-type-name . g$12461$XGD4L)
        (record-type-generative? . g$12460$XGD4L)
        (record-type-field-names . g$12459$XGD4L)
        (record-rtd . g$12458$XGD4L)
        (record-field-mutable? . g$12457$XGD4L)
        (delete-file . g$6619$XGD4L)
        (file-exists? . g$6618$XGD4L)
        (vector-sort! . g$12456$XGD4L)
        (vector-sort . g$12455$XGD4L)
        (list-sort . g$7125$XGD4L)
        (symbol-hash . g$12454$XGD4L)
        (string-ci-hash . g$12453$XGD4L)
        (string-hash . g$12452$XGD4L)
        (equal-hash . g$12451$XGD4L)
        (hashtable-equivalence-function . g$12450$XGD4L)
        (make-hashtable . g$12449$XGD4L)
        (hashtable-hash-function . g$12448$XGD4L)
        (make-eqv-hashtable . g$6586$XGD4L)
        (make-eq-hashtable . g$6585$XGD4L)
        (hashtable? . g$12447$XGD4L)
        (hashtable-update! . g$6592$XGD4L)
        (hashtable-size . g$6587$XGD4L)
        (hashtable-set! . g$6589$XGD4L)
        (hashtable-ref . g$6588$XGD4L)
        (hashtable-mutable? . g$12446$XGD4L)
        (hashtable-keys . g$12445$XGD4L)
        (hashtable-entries . g$12444$XGD4L)
        (hashtable-delete! . g$6590$XGD4L)
        (hashtable-copy . g$12443$XGD4L)
        (hashtable-contains? . g$6591$XGD4L)
        (hashtable-clear! . g$6593$XGD4L)
        (call-with-output-file . g$12442$XGD4L)
        (call-with-input-file . g$12441$XGD4L)
        (write-char . g$12440$XGD4L)
        (write . g$12439$XGD4L)
        (with-output-to-file . g$12438$XGD4L)
        (with-input-from-file . g$12437$XGD4L)
        (read-char . g$12436$XGD4L)
        (read . g$12435$XGD4L)
        (peek-char . g$12434$XGD4L)
        (open-output-file . g$12433$XGD4L)
        (open-input-file . g$12432$XGD4L)
        (newline . g$12431$XGD4L)
        (display . g$12430$XGD4L)
        (close-output-port . g$12429$XGD4L)
        (close-input-port . g$12428$XGD4L)
        (eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (utf-8-codec . g$12420$XGD4L)
        (utf-16-codec . g$12419$XGD4L)
        (transcoder-error-handling-mode . g$12418$XGD4L)
        (transcoder-eol-style . g$12417$XGD4L)
        (transcoder-codec . g$12416$XGD4L)
        (transcoded-port . g$12415$XGD4L)
        (textual-port? . g$12414$XGD4L)
        (string->bytevector . g$12413$XGD4L)
        (standard-output-port . g$12412$XGD4L)
        (standard-input-port . g$12411$XGD4L)
        (standard-error-port . g$12410$XGD4L)
        (set-port-position! . g$12409$XGD4L)
        (put-u8 . g$12408$XGD4L)
        (put-string . g$12407$XGD4L)
        (put-datum . g$12406$XGD4L)
        (put-char . g$12405$XGD4L)
        (put-bytevector . g$12404$XGD4L)
        (port? . g$12403$XGD4L)
        (port-transcoder . g$12402$XGD4L)
        (port-position . g$12401$XGD4L)
        (port-has-set-port-position!? . g$12400$XGD4L)
        (port-has-port-position? . g$12399$XGD4L)
        (port-eof? . g$12398$XGD4L)
        (output-port-buffer-mode . g$12397$XGD4L)
        (open-string-output-port . g$7516$XGD4L)
        (open-string-input-port . g$12396$XGD4L)
        (open-file-output-port . g$12395$XGD4L)
        (open-file-input/output-port . g$12394$XGD4L)
        (open-file-input-port . g$12393$XGD4L)
        (open-bytevector-output-port . g$12392$XGD4L)
        (open-bytevector-input-port . g$12391$XGD4L)
        (native-transcoder . g$12390$XGD4L)
        (native-eol-style . g$12389$XGD4L)
        (make-transcoder . g$12388$XGD4L)
        (latin-1-codec . g$12387$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (make-i/o-encoding-error . g$7509$XGD4L)
        (make-i/o-decoding-error . g$7494$XGD4L)
        (make-custom-textual-output-port . g$12386$XGD4L)
        (make-custom-textual-input/output-port . g$12385$XGD4L)
        (make-custom-textual-input-port . g$12384$XGD4L)
        (make-custom-binary-output-port . g$12383$XGD4L)
        (make-custom-binary-input/output-port . g$12382$XGD4L)
        (make-custom-binary-input-port . g$12381$XGD4L)
        (make-bytevector . g$12380$XGD4L)
        (lookahead-u8 . g$12379$XGD4L)
        (lookahead-char . g$12378$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (i/o-encoding-error? . g$7511$XGD4L)
        (i/o-encoding-error-char . g$7512$XGD4L)
        (i/o-decoding-error? . g$7495$XGD4L)
        (get-u8 . g$12377$XGD4L)
        (get-string-n! . g$12376$XGD4L)
        (get-string-n . g$12375$XGD4L)
        (get-string-all . g$12374$XGD4L)
        (get-line . g$12373$XGD4L)
        (get-datum . g$12372$XGD4L)
        (get-char . g$12371$XGD4L)
        (get-bytevector-some . g$12370$XGD4L)
        (get-bytevector-n! . g$12369$XGD4L)
        (get-bytevector-n . g$12368$XGD4L)
        (get-bytevector-all . g$12367$XGD4L)
        (flush-output-port . g$12366$XGD4L)
        (close-port . g$12365$XGD4L)
        (call-with-string-output-port . g$12364$XGD4L)
        (call-with-port . g$12363$XGD4L)
        (call-with-bytevector-output-port . g$12362$XGD4L)
        (bytevector->string . g$12361$XGD4L)
        (buffer-mode? . g$12360$XGD4L)
        (binary-port? . g$12359$XGD4L)
        (scheme-report-environment . g$8967$XGD4L)
        (quotient . g$7112$XGD4L)
        (null-environment . g$8966$XGD4L)
        (remainder . g$7113$XGD4L)
        (modulo . g$7114$XGD4L)
        (inexact->exact . g$12358$XGD4L)
        (force . g$12357$XGD4L)
        (exact->inexact . g$12356$XGD4L)
        (exit . g$12355$XGD4L)
        (command-line . g$11917$XGD4L)
        (string-fill! . g$12354$XGD4L)
        (string-set! . g$12353$XGD4L)
        (set-cdr! . g$12352$XGD4L)
        (set-car! . g$12351$XGD4L)
        (remove . g$6699$XGD4L)
        (remv . g$6700$XGD4L)
        (remp . g$6685$XGD4L)
        (remq . g$6701$XGD4L)
        (partition . g$6684$XGD4L)
        (memv . g$12350$XGD4L)
        (memq . g$12349$XGD4L)
        (memp . g$6691$XGD4L)
        (member . g$6690$XGD4L)
        (exists . g$6695$XGD4L)
        (for-all . g$6694$XGD4L)
        (fold-right . g$6698$XGD4L)
        (fold-left . g$6697$XGD4L)
        (find . g$6683$XGD4L)
        (filter . g$6686$XGD4L)
        (cons* . g$6696$XGD4L)
        (assv . g$6687$XGD4L)
        (assq . g$12348$XGD4L)
        (assp . g$6689$XGD4L)
        (assoc . g$6688$XGD4L)
        (with-exception-handler . g$12347$XGD4L)
        (raise-continuable . g$12346$XGD4L)
        (raise . g$12345$XGD4L)
        (eval . g$8969$XGD4L)
        (environment . g$8965$XGD4L)
        (make-enumeration . g$7565$XGD4L)
        (enum-set=? . g$7572$XGD4L)
        (enum-set-universe . g$7566$XGD4L)
        (enum-set-union . g$7573$XGD4L)
        (enum-set-subset? . g$7571$XGD4L)
        (enum-set-projection . g$7577$XGD4L)
        (enum-set-member? . g$7570$XGD4L)
        (enum-set-intersection . g$7574$XGD4L)
        (enum-set-indexer . g$7567$XGD4L)
        (enum-set-difference . g$7575$XGD4L)
        (enum-set-constructor . g$7568$XGD4L)
        (enum-set-complement . g$7576$XGD4L)
        (enum-set->list . g$7569$XGD4L)
        (who-condition? . g$7023$XGD4L)
        (warning? . g$6934$XGD4L)
        (violation? . g$6976$XGD4L)
        (undefined-violation? . g$7100$XGD4L)
        (syntax-violation? . g$7084$XGD4L)
        (syntax-violation-subform . g$7086$XGD4L)
        (syntax-violation-form . g$7085$XGD4L)
        (syntax-violation . g$8983$XGD4L)
        (simple-conditions . g$12344$XGD4L)
        (serious-condition? . g$6948$XGD4L)
        (non-continuable-violation? . g$7038$XGD4L)
        (message-condition? . g$6919$XGD4L)
        (make-who-condition . g$7021$XGD4L)
        (make-warning . g$6933$XGD4L)
        (make-violation . g$6975$XGD4L)
        (make-undefined-violation . g$7099$XGD4L)
        (make-syntax-violation . g$7081$XGD4L)
        (make-serious-condition . g$6947$XGD4L)
        (make-non-continuable-violation . g$7037$XGD4L)
        (make-message-condition . g$6917$XGD4L)
        (make-lexical-violation . g$7065$XGD4L)
        (make-irritants-condition . g$7004$XGD4L)
        (make-implementation-restriction-violation . g$7051$XGD4L)
        (make-error . g$6961$XGD4L)
        (make-assertion-violation . g$6989$XGD4L)
        (lexical-violation? . g$7066$XGD4L)
        (irritants-condition? . g$7006$XGD4L)
        (implementation-restriction-violation? . g$7052$XGD4L)
        (error? . g$6962$XGD4L)
        (condition-who . g$7024$XGD4L)
        (condition-predicate . g$12343$XGD4L)
        (condition-message . g$6920$XGD4L)
        (condition-irritants . g$7007$XGD4L)
        (condition-accessor . g$12342$XGD4L)
        (condition . g$12341$XGD4L)
        (assertion-violation? . g$6990$XGD4L)
        (condition? . g$12340$XGD4L)
        (utf32->string . g$12339$XGD4L)
        (utf16->string . g$12338$XGD4L)
        (utf8->string . g$12337$XGD4L)
        (uint-list->bytevector . g$12336$XGD4L)
        (u8-list->bytevector . g$12335$XGD4L)
        (string->utf8 . g$12334$XGD4L)
        (string->utf32 . g$12333$XGD4L)
        (string->utf16 . g$12332$XGD4L)
        (sint-list->bytevector . g$12331$XGD4L)
        (native-endianness . g$6775$XGD4L)
        (bytevector? . g$12330$XGD4L)
        (bytevector=? . g$12329$XGD4L)
        (bytevector-uint-set! . g$12328$XGD4L)
        (bytevector-uint-ref . g$12327$XGD4L)
        (bytevector-u8-set! . g$12326$XGD4L)
        (bytevector-u8-ref . g$12325$XGD4L)
        (bytevector-u64-set! . g$6796$XGD4L)
        (bytevector-u64-ref . g$6792$XGD4L)
        (bytevector-u64-native-set! . g$6798$XGD4L)
        (bytevector-u64-native-ref . g$6794$XGD4L)
        (bytevector-u32-set! . g$6788$XGD4L)
        (bytevector-u32-ref . g$6784$XGD4L)
        (bytevector-u32-native-set! . g$6790$XGD4L)
        (bytevector-u32-native-ref . g$6786$XGD4L)
        (bytevector-u16-set! . g$6780$XGD4L)
        (bytevector-u16-ref . g$6776$XGD4L)
        (bytevector-u16-native-set! . g$6782$XGD4L)
        (bytevector-u16-native-ref . g$6778$XGD4L)
        (bytevector-sint-set! . g$12324$XGD4L)
        (bytevector-sint-ref . g$12323$XGD4L)
        (bytevector-s8-set! . g$12322$XGD4L)
        (bytevector-s8-ref . g$12321$XGD4L)
        (bytevector-s64-set! . g$6797$XGD4L)
        (bytevector-s64-ref . g$6793$XGD4L)
        (bytevector-s64-native-set! . g$6799$XGD4L)
        (bytevector-s64-native-ref . g$6795$XGD4L)
        (bytevector-s32-set! . g$6789$XGD4L)
        (bytevector-s32-ref . g$6785$XGD4L)
        (bytevector-s32-native-set! . g$6791$XGD4L)
        (bytevector-s32-native-ref . g$6787$XGD4L)
        (bytevector-s16-set! . g$6781$XGD4L)
        (bytevector-s16-ref . g$6777$XGD4L)
        (bytevector-s16-native-set! . g$6783$XGD4L)
        (bytevector-s16-native-ref . g$6779$XGD4L)
        (bytevector-length . g$12320$XGD4L)
        (bytevector-ieee-single-set! . g$12319$XGD4L)
        (bytevector-ieee-single-ref . g$12318$XGD4L)
        (bytevector-ieee-single-native-set! . g$6802$XGD4L)
        (bytevector-ieee-single-native-ref . g$6800$XGD4L)
        (bytevector-ieee-double-set! . g$12317$XGD4L)
        (bytevector-ieee-double-ref . g$12316$XGD4L)
        (bytevector-ieee-double-native-set! . g$6803$XGD4L)
        (bytevector-ieee-double-native-ref . g$6801$XGD4L)
        (bytevector-fill! . g$12315$XGD4L)
        (bytevector-copy! . g$12314$XGD4L)
        (bytevector-copy . g$12313$XGD4L)
        (bytevector->uint-list . g$12312$XGD4L)
        (bytevector->u8-list . g$12311$XGD4L)
        (bytevector->sint-list . g$12310$XGD4L)
        (no-nans-violation? . g$7331$XGD4L)
        (no-infinities-violation? . g$7317$XGD4L)
        (make-no-nans-violation . g$7330$XGD4L)
        (make-no-infinities-violation . g$7316$XGD4L)
        (real->flonum . g$12309$XGD4L)
        (flzero? . g$12308$XGD4L)
        (fltruncate . g$12307$XGD4L)
        (fltan . g$12306$XGD4L)
        (flsqrt . g$12305$XGD4L)
        (flsin . g$12304$XGD4L)
        (flround . g$12303$XGD4L)
        (flpositive? . g$12302$XGD4L)
        (flonum? . g$12301$XGD4L)
        (flodd? . g$12300$XGD4L)
        (flnumerator . g$12299$XGD4L)
        (flnegative? . g$12298$XGD4L)
        (flnan? . g$12297$XGD4L)
        (flmod0 . g$12296$XGD4L)
        (flmod . g$12295$XGD4L)
        (flmin . g$12294$XGD4L)
        (flmax . g$12293$XGD4L)
        (fllog . g$12292$XGD4L)
        (flinteger? . g$12291$XGD4L)
        (flinfinite? . g$12290$XGD4L)
        (flfloor . g$12289$XGD4L)
        (flfinite? . g$12288$XGD4L)
        (flexpt . g$12287$XGD4L)
        (flexp . g$12286$XGD4L)
        (fleven? . g$12285$XGD4L)
        (fldiv0-and-mod0 . g$12284$XGD4L)
        (fldiv0 . g$12283$XGD4L)
        (fldiv-and-mod . g$12282$XGD4L)
        (fldiv . g$12281$XGD4L)
        (fldenominator . g$12280$XGD4L)
        (flcos . g$12279$XGD4L)
        (flceiling . g$12278$XGD4L)
        (flatan . g$12277$XGD4L)
        (flasin . g$12276$XGD4L)
        (flacos . g$12275$XGD4L)
        (flabs . g$12274$XGD4L)
        (fl>? . g$12273$XGD4L)
        (fl>=? . g$12272$XGD4L)
        (fl=? . g$12271$XGD4L)
        (fl<? . g$12270$XGD4L)
        (fl<=? . g$12269$XGD4L)
        (fl/ . g$12268$XGD4L)
        (fl- . g$12267$XGD4L)
        (fl+ . g$12266$XGD4L)
        (fl* . g$12265$XGD4L)
        (fixnum->flonum . g$12264$XGD4L)
        (fxzero? . g$12263$XGD4L)
        (fxxor . g$12262$XGD4L)
        (fxrotate-bit-field . g$7262$XGD4L)
        (fxreverse-bit-field . g$12261$XGD4L)
        (fxpositive? . g$12260$XGD4L)
        (fxodd? . g$12259$XGD4L)
        (fxnot . g$12258$XGD4L)
        (fxnegative? . g$12257$XGD4L)
        (fxmod0 . g$12256$XGD4L)
        (fxmod . g$12255$XGD4L)
        (fxmin . g$12254$XGD4L)
        (fxmax . g$12253$XGD4L)
        (fxlength . g$12252$XGD4L)
        (fxior . g$12251$XGD4L)
        (fxif . g$7256$XGD4L)
        (fxfirst-bit-set . g$12250$XGD4L)
        (fxeven? . g$12249$XGD4L)
        (fxdiv0-and-mod0 . g$12248$XGD4L)
        (fxdiv0 . g$12247$XGD4L)
        (fxdiv-and-mod . g$12246$XGD4L)
        (fxdiv . g$12245$XGD4L)
        (fxcopy-bit-field . g$7259$XGD4L)
        (fxcopy-bit . g$7257$XGD4L)
        (fxbit-set? . g$12244$XGD4L)
        (fxbit-field . g$7258$XGD4L)
        (fxbit-count . g$12243$XGD4L)
        (fxarithmetic-shift-right . g$7261$XGD4L)
        (fxarithmetic-shift-left . g$7260$XGD4L)
        (fxarithmetic-shift . g$12242$XGD4L)
        (fxand . g$12241$XGD4L)
        (fx>? . g$12240$XGD4L)
        (fx>=? . g$12239$XGD4L)
        (fx=? . g$12238$XGD4L)
        (fx<? . g$12237$XGD4L)
        (fx<=? . g$12236$XGD4L)
        (fx-/carry . g$12235$XGD4L)
        (fx- . g$12234$XGD4L)
        (fx+/carry . g$12233$XGD4L)
        (fx+ . g$12232$XGD4L)
        (fx*/carry . g$12231$XGD4L)
        (fx* . g$12230$XGD4L)
        (greatest-fixnum . g$12229$XGD4L)
        (least-fixnum . g$12228$XGD4L)
        (fixnum-width . g$12227$XGD4L)
        (fixnum? . g$12226$XGD4L)
        (bitwise-rotate-bit-field . g$7210$XGD4L)
        (bitwise-reverse-bit-field . g$7211$XGD4L)
        (bitwise-length . g$12225$XGD4L)
        (bitwise-if . g$7204$XGD4L)
        (bitwise-first-bit-set . g$12224$XGD4L)
        (bitwise-copy-bit-field . g$7207$XGD4L)
        (bitwise-copy-bit . g$7205$XGD4L)
        (bitwise-bit-set? . g$12223$XGD4L)
        (bitwise-bit-field . g$12222$XGD4L)
        (bitwise-bit-count . g$12221$XGD4L)
        (bitwise-xor . g$12220$XGD4L)
        (bitwise-ior . g$12219$XGD4L)
        (bitwise-and . g$12218$XGD4L)
        (bitwise-not . g$12217$XGD4L)
        (bitwise-arithmetic-shift-right . g$7209$XGD4L)
        (bitwise-arithmetic-shift-left . g$7208$XGD4L)
        (bitwise-arithmetic-shift . g$12216$XGD4L)
        (zero? . g$12215$XGD4L)
        (vector? . g$12214$XGD4L)
        (vector-set! . g$12213$XGD4L)
        (vector-ref . g$12212$XGD4L)
        (vector-map . g$12211$XGD4L)
        (vector-length . g$12210$XGD4L)
        (vector-for-each . g$12209$XGD4L)
        (vector-fill! . g$12208$XGD4L)
        (vector->list . g$12207$XGD4L)
        (vector . g$12206$XGD4L)
        (values . g$12205$XGD4L)
        (truncate . g$12204$XGD4L)
        (tan . g$12203$XGD4L)
        (symbol? . g$12202$XGD4L)
        (symbol=? . g$12201$XGD4L)
        (symbol->string . g$12200$XGD4L)
        (substring . g$12199$XGD4L)
        (string? . g$12198$XGD4L)
        (string>? . g$12197$XGD4L)
        (string>=? . g$12196$XGD4L)
        (string=? . g$12195$XGD4L)
        (string<? . g$12194$XGD4L)
        (string<=? . g$12193$XGD4L)
        (string-ref . g$12192$XGD4L)
        (string-length . g$12191$XGD4L)
        (string-for-each . g$12190$XGD4L)
        (string-copy . g$12189$XGD4L)
        (string-append . g$12188$XGD4L)
        (string->symbol . g$12187$XGD4L)
        (string->number . g$12186$XGD4L)
        (string->list . g$12185$XGD4L)
        (string . g$12184$XGD4L)
        (sqrt . g$12183$XGD4L)
        (sin . g$12182$XGD4L)
        (round . g$12181$XGD4L)
        (reverse . g$12180$XGD4L)
        (real? . g$12179$XGD4L)
        (real-valued? . g$12178$XGD4L)
        (real-part . g$12177$XGD4L)
        (rationalize . g$6236$XGD4L)
        (rational? . g$12176$XGD4L)
        (rational-valued? . g$12175$XGD4L)
        (procedure? . g$12174$XGD4L)
        (positive? . g$12173$XGD4L)
        (pair? . g$12172$XGD4L)
        (odd? . g$12171$XGD4L)
        (numerator . g$12170$XGD4L)
        (number? . g$12169$XGD4L)
        (number->string . g$12168$XGD4L)
        (null? . g$12167$XGD4L)
        (not . g$12166$XGD4L)
        (negative? . g$12165$XGD4L)
        (nan? . g$12164$XGD4L)
        (min . g$12163$XGD4L)
        (max . g$12162$XGD4L)
        (map . g$12161$XGD4L)
        (make-vector . g$12160$XGD4L)
        (make-string . g$12159$XGD4L)
        (make-rectangular . g$12158$XGD4L)
        (make-polar . g$12157$XGD4L)
        (magnitude . g$12156$XGD4L)
        (log . g$12155$XGD4L)
        (list? . g$12154$XGD4L)
        (list-tail . g$12153$XGD4L)
        (list-ref . g$12152$XGD4L)
        (list->vector . g$12151$XGD4L)
        (list->string . g$12150$XGD4L)
        (list . g$12149$XGD4L)
        (length . g$12148$XGD4L)
        (lcm . g$12147$XGD4L)
        (integer? . g$12146$XGD4L)
        (integer-valued? . g$12145$XGD4L)
        (integer->char . g$12144$XGD4L)
        (infinite? . g$12143$XGD4L)
        (inexact? . g$12142$XGD4L)
        (inexact . g$12141$XGD4L)
        (imag-part . g$12140$XGD4L)
        (gcd . g$12139$XGD4L)
        (for-each . g$12138$XGD4L)
        (floor . g$12137$XGD4L)
        (finite? . g$12136$XGD4L)
        (expt . g$12135$XGD4L)
        (exp . g$12134$XGD4L)
        (exact? . g$12133$XGD4L)
        (exact-integer-sqrt . g$12132$XGD4L)
        (exact . g$12131$XGD4L)
        (even? . g$12130$XGD4L)
        (error . g$12129$XGD4L)
        (eqv? . g$12128$XGD4L)
        (equal? . g$12127$XGD4L)
        (eq? . g$12126$XGD4L)
        (dynamic-wind . g$12125$XGD4L)
        (div0-and-mod0 . g$12124$XGD4L)
        (mod0 . g$12123$XGD4L)
        (div0 . g$12122$XGD4L)
        (div-and-mod . g$12121$XGD4L)
        (mod . g$12120$XGD4L)
        (div . g$12119$XGD4L)
        (denominator . g$12118$XGD4L)
        (cos . g$12117$XGD4L)
        (cons . g$12116$XGD4L)
        (complex? . g$12115$XGD4L)
        (char? . g$12114$XGD4L)
        (char>? . g$12113$XGD4L)
        (char>=? . g$12112$XGD4L)
        (char=? . g$12111$XGD4L)
        (char<? . g$12110$XGD4L)
        (char<=? . g$12109$XGD4L)
        (char->integer . g$12108$XGD4L)
        (ceiling . g$12107$XGD4L)
        (call-with-values . g$12106$XGD4L)
        (call/cc . g$12105$XGD4L)
        (call-with-current-continuation . g$12104$XGD4L)
        (cddddr . g$6235$XGD4L)
        (cdddar . g$6234$XGD4L)
        (cddadr . g$6233$XGD4L)
        (cddaar . g$6232$XGD4L)
        (cdaddr . g$6231$XGD4L)
        (cdadar . g$6230$XGD4L)
        (cdaadr . g$6229$XGD4L)
        (cdaaar . g$6228$XGD4L)
        (cadddr . g$6227$XGD4L)
        (caddar . g$6226$XGD4L)
        (cadadr . g$6225$XGD4L)
        (cadaar . g$6224$XGD4L)
        (caaddr . g$6223$XGD4L)
        (caadar . g$6222$XGD4L)
        (caaadr . g$6221$XGD4L)
        (caaaar . g$6220$XGD4L)
        (cdddr . g$6219$XGD4L)
        (cddar . g$6218$XGD4L)
        (cdadr . g$6217$XGD4L)
        (cdaar . g$6216$XGD4L)
        (caddr . g$6215$XGD4L)
        (cadar . g$6214$XGD4L)
        (caadr . g$6213$XGD4L)
        (caaar . g$6212$XGD4L)
        (cddr . g$6211$XGD4L)
        (cdar . g$6210$XGD4L)
        (cadr . g$6209$XGD4L)
        (caar . g$6208$XGD4L)
        (cdr . g$12103$XGD4L)
        (car . g$12102$XGD4L)
        (boolean? . g$12101$XGD4L)
        (boolean=? . g$12100$XGD4L)
        (atan . g$12099$XGD4L)
        (assertion-violation . g$12098$XGD4L)
        (asin . g$12097$XGD4L)
        (apply . g$12096$XGD4L)
        (append . g$12095$XGD4L)
        (angle . g$12094$XGD4L)
        (acos . g$12093$XGD4L)
        (abs . g$12092$XGD4L)
        (/ . g$12091$XGD4L)
        (* . g$12090$XGD4L)
        (- . g$12089$XGD4L)
        (+ . g$12088$XGD4L)
        (>= . g$12087$XGD4L)
        (> . g$12086$XGD4L)
        (= . g$12085$XGD4L)
        (<= . g$12084$XGD4L)
        (< . g$12083$XGD4L)
        (make-promise . g$12078$XGD4L)
        (load/args . g$11919$XGD4L)
        (printf . g$7680$XGD4L)
        (fprintf . g$7681$XGD4L)
        (format . g$7682$XGD4L)
        (get-arity . g$12077$XGD4L)
        (gc-collect . g$12076$XGD4L)
        (clr-type? . g$12075$XGD4L)
        (get-clr-type . g$12074$XGD4L)
        (vector-append . g$12072$XGD4L)
        (vector-filter . g$12071$XGD4L)
        (vector-reverse! . g$12070$XGD4L)
        (vector-contains? . g$12069$XGD4L)
        (vector-index-of . g$12068$XGD4L)
        (vector-copy . g$12067$XGD4L)
        (vector-binary-search . g$12066$XGD4L)
        (get-output-string . g$12065$XGD4L)
        (open-output-string . g$12064$XGD4L)
        (open-input-string . g$12063$XGD4L)
        (string-format . g$12062$XGD4L)
        (trace-printer . g$11916$XGD4L)
        (make-traced-procedure . g$12061$XGD4L)
        (make-traced-macro . g$7701$XGD4L)
        (pmap . g$12060$XGD4L)
        (time-it . g$12059$XGD4L)
        (make-parameter . g$7706$XGD4L)
        (library-locator . g$12058$XGD4L)
        (get-library-paths . g$12057$XGD4L)
        (environment-symbols . g$8963$XGD4L)
        (interaction-environment-symbols . g$8962$XGD4L)
        (library-path . g$8132$XGD4L)
        (library-extensions . g$8133$XGD4L)
        (installed-libraries . g$8153$XGD4L)
        (expand . g$8968$XGD4L)
        (&no-nans . g$12056$XGD4L)
        (&no-infinities . g$12055$XGD4L)
        (&i/o-encoding . g$12054$XGD4L)
        (&i/o-decoding . g$12053$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L)
        (&non-continuable . g$12042$XGD4L)
        (&undefined . g$12041$XGD4L)
        (&syntax . g$12040$XGD4L)
        (&lexical . g$12039$XGD4L)
        (&implementation-restriction . g$12038$XGD4L)
        (&who . g$12036$XGD4L)
        (&irritants . g$12035$XGD4L)
        (&assertion . g$12034$XGD4L)
        (&violation . g$12033$XGD4L)
        (&error . g$12032$XGD4L)
        (&serious . g$12031$XGD4L)
        (&warning . g$12030$XGD4L)
        (&message . g$12029$XGD4L)
        (&condition . g$12028$XGD4L)
        (define-condition-type . g$12027$XGD4L)
        (define-enumeration . g$12026$XGD4L)
        (define-record-type . g$12025$XGD4L)
        (parent-rtd . g$12024$XGD4L)
        (nongenerative . g$12023$XGD4L)
        (opaque . g$12022$XGD4L)
        (sealed . g$12021$XGD4L)
        (protocol . g$12020$XGD4L)
        (parent . g$12019$XGD4L)
        (immutable . g$12018$XGD4L)
        (mutable . g$12017$XGD4L)
        (fields . g$12016$XGD4L)
        (error-handling-mode . g$12015$XGD4L)
        (file-options . g$12014$XGD4L)
        (buffer-mode . g$12013$XGD4L)
        (eol-style . g$12012$XGD4L)
        (guard . g$12011$XGD4L)
        (trace-letrec-syntax . g$12010$XGD4L)
        (trace-let-syntax . g$12009$XGD4L)
        (trace-define-syntax . g$12008$XGD4L)
        (trace-define . g$12007$XGD4L)
        (trace-lambda . g$12006$XGD4L)
        (unsyntax-splicing . g$12005$XGD4L)
        (unsyntax . g$12004$XGD4L)
        (unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (_ . g$12001$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L)
        (... . g$11998$XGD4L)
        (assert . g$11997$XGD4L)
        (endianness . g$11996$XGD4L)
        (delay . g$11995$XGD4L)
        (time . g$11994$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (do . g$11991$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (identifier-syntax . g$11987$XGD4L)
        (with-syntax . g$11986$XGD4L)
        (quasisyntax . g$11985$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (include-into . g$11982$XGD4L)
        (include . g$11981$XGD4L)
        (let-values . g$11979$XGD4L)
        (let*-values . g$11978$XGD4L)
        (record-constructor-descriptor . g$11977$XGD4L)
        (record-type-descriptor . g$11976$XGD4L)
        (fluid-let-syntax . g$11975$XGD4L)
        (case . g$11974$XGD4L)
        (parameterize . g$11973$XGD4L)
        (unless . g$11972$XGD4L)
        (when . g$11971$XGD4L)
        (if . g$11970$XGD4L)
        (letrec* . g$11969$XGD4L)
        (letrec . g$11968$XGD4L)
        (case-lambda . g$11966$XGD4L)
        (lambda . g$11965$XGD4L)
        (syntax . g$11964$XGD4L)
        (syntax-case . g$11963$XGD4L)
        (quote . g$11962$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (import . g$11957$XGD4L)
        (library . g$11956$XGD4L)
        (begin . g$11955$XGD4L)
        (module . g$11954$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12598$XGD4L
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12057$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12599$XGD4L
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12539$XGD4L)
        (annotation-source . g$12538$XGD4L)
        (annotation-expression . g$12537$XGD4L)
        (annotation? . g$12536$XGD4L)
        (read-annotated . g$12535$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12600$XGD4L
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12505$XGD4L)
        (serialize-library . g$12504$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12601$XGD4L
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8593$XGD4L)
        (variable-transformer? . g$8592$XGD4L)
        (eqv-hash . g$12081$XGD4L)
        (eq-hash . g$12080$XGD4L)
        (reverse! . g$12079$XGD4L)
        (format . g$7682$XGD4L)
        (get-command-line . g$12073$XGD4L)
        (make-traced-procedure . g$12061$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12602$XGD4L
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12082$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12603$XGD4L
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12523$XGD4L)
        (clr-field-set!-internal . g$12522$XGD4L)
        (clr-field-get-internal . g$12521$XGD4L)
        (clr-cast-internal . g$12520$XGD4L)
        (clr-call-internal . g$12519$XGD4L)
        (clr-new-internal . g$12518$XGD4L)
        (clr-new-array-internal . g$12517$XGD4L)
        (clr-is-internal . g$12516$XGD4L)
        (clr-reference-internal . g$12515$XGD4L)
        (clr-using-internal . g$12514$XGD4L)
        (clr-clear-usings-internal . g$12513$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12604$XGD4L
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (delay . g$11995$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (do . g$11991$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (case . g$11974$XGD4L)
        (if . g$11970$XGD4L)
        (letrec . g$11968$XGD4L)
        (lambda . g$11965$XGD4L)
        (quote . g$11962$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (begin . g$11955$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12605$XGD4L
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8989$XGD4L)
        (char-ready? . g$12503$XGD4L)
        (string-ci>? . g$12494$XGD4L)
        (string-ci>=? . g$12493$XGD4L)
        (string-ci=? . g$12492$XGD4L)
        (string-ci<? . g$12491$XGD4L)
        (string-ci<=? . g$12490$XGD4L)
        (char-whitespace? . g$12489$XGD4L)
        (char-upper-case? . g$12488$XGD4L)
        (char-numeric? . g$12486$XGD4L)
        (char-lower-case? . g$12485$XGD4L)
        (char-upcase . g$12483$XGD4L)
        (char-downcase . g$12480$XGD4L)
        (char-ci>? . g$12479$XGD4L)
        (char-ci>=? . g$12478$XGD4L)
        (char-ci=? . g$12477$XGD4L)
        (char-ci<? . g$12476$XGD4L)
        (char-ci<=? . g$12475$XGD4L)
        (char-alphabetic? . g$12474$XGD4L)
        (call-with-output-file . g$12442$XGD4L)
        (call-with-input-file . g$12441$XGD4L)
        (write-char . g$12440$XGD4L)
        (write . g$12439$XGD4L)
        (with-output-to-file . g$12438$XGD4L)
        (with-input-from-file . g$12437$XGD4L)
        (read-char . g$12436$XGD4L)
        (read . g$12435$XGD4L)
        (peek-char . g$12434$XGD4L)
        (open-output-file . g$12433$XGD4L)
        (open-input-file . g$12432$XGD4L)
        (newline . g$12431$XGD4L)
        (display . g$12430$XGD4L)
        (close-output-port . g$12429$XGD4L)
        (close-input-port . g$12428$XGD4L)
        (eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (scheme-report-environment . g$8967$XGD4L)
        (quotient . g$7112$XGD4L)
        (null-environment . g$8966$XGD4L)
        (remainder . g$7113$XGD4L)
        (modulo . g$7114$XGD4L)
        (inexact->exact . g$12358$XGD4L)
        (force . g$12357$XGD4L)
        (exact->inexact . g$12356$XGD4L)
        (string-fill! . g$12354$XGD4L)
        (string-set! . g$12353$XGD4L)
        (set-cdr! . g$12352$XGD4L)
        (set-car! . g$12351$XGD4L)
        (memv . g$12350$XGD4L)
        (memq . g$12349$XGD4L)
        (member . g$6690$XGD4L)
        (assv . g$6687$XGD4L)
        (assq . g$12348$XGD4L)
        (assoc . g$6688$XGD4L)
        (eval . g$8969$XGD4L)
        (zero? . g$12215$XGD4L)
        (vector? . g$12214$XGD4L)
        (vector-set! . g$12213$XGD4L)
        (vector-ref . g$12212$XGD4L)
        (vector-length . g$12210$XGD4L)
        (vector-fill! . g$12208$XGD4L)
        (vector->list . g$12207$XGD4L)
        (vector . g$12206$XGD4L)
        (values . g$12205$XGD4L)
        (truncate . g$12204$XGD4L)
        (tan . g$12203$XGD4L)
        (symbol? . g$12202$XGD4L)
        (symbol->string . g$12200$XGD4L)
        (substring . g$12199$XGD4L)
        (string? . g$12198$XGD4L)
        (string>? . g$12197$XGD4L)
        (string>=? . g$12196$XGD4L)
        (string=? . g$12195$XGD4L)
        (string<? . g$12194$XGD4L)
        (string<=? . g$12193$XGD4L)
        (string-ref . g$12192$XGD4L)
        (string-length . g$12191$XGD4L)
        (string-copy . g$12189$XGD4L)
        (string-append . g$12188$XGD4L)
        (string->symbol . g$12187$XGD4L)
        (string->number . g$12186$XGD4L)
        (string->list . g$12185$XGD4L)
        (string . g$12184$XGD4L)
        (sqrt . g$12183$XGD4L)
        (sin . g$12182$XGD4L)
        (round . g$12181$XGD4L)
        (reverse . g$12180$XGD4L)
        (real? . g$12179$XGD4L)
        (real-part . g$12177$XGD4L)
        (rationalize . g$6236$XGD4L)
        (rational? . g$12176$XGD4L)
        (procedure? . g$12174$XGD4L)
        (positive? . g$12173$XGD4L)
        (pair? . g$12172$XGD4L)
        (odd? . g$12171$XGD4L)
        (numerator . g$12170$XGD4L)
        (number? . g$12169$XGD4L)
        (number->string . g$12168$XGD4L)
        (null? . g$12167$XGD4L)
        (not . g$12166$XGD4L)
        (negative? . g$12165$XGD4L)
        (min . g$12163$XGD4L)
        (max . g$12162$XGD4L)
        (map . g$12161$XGD4L)
        (make-vector . g$12160$XGD4L)
        (make-string . g$12159$XGD4L)
        (make-rectangular . g$12158$XGD4L)
        (make-polar . g$12157$XGD4L)
        (magnitude . g$12156$XGD4L)
        (log . g$12155$XGD4L)
        (list? . g$12154$XGD4L)
        (list-tail . g$12153$XGD4L)
        (list-ref . g$12152$XGD4L)
        (list->vector . g$12151$XGD4L)
        (list->string . g$12150$XGD4L)
        (list . g$12149$XGD4L)
        (length . g$12148$XGD4L)
        (lcm . g$12147$XGD4L)
        (integer? . g$12146$XGD4L)
        (integer->char . g$12144$XGD4L)
        (inexact? . g$12142$XGD4L)
        (imag-part . g$12140$XGD4L)
        (gcd . g$12139$XGD4L)
        (for-each . g$12138$XGD4L)
        (floor . g$12137$XGD4L)
        (expt . g$12135$XGD4L)
        (exp . g$12134$XGD4L)
        (exact? . g$12133$XGD4L)
        (even? . g$12130$XGD4L)
        (eqv? . g$12128$XGD4L)
        (equal? . g$12127$XGD4L)
        (eq? . g$12126$XGD4L)
        (dynamic-wind . g$12125$XGD4L)
        (denominator . g$12118$XGD4L)
        (cos . g$12117$XGD4L)
        (cons . g$12116$XGD4L)
        (complex? . g$12115$XGD4L)
        (char? . g$12114$XGD4L)
        (char>? . g$12113$XGD4L)
        (char>=? . g$12112$XGD4L)
        (char=? . g$12111$XGD4L)
        (char<? . g$12110$XGD4L)
        (char<=? . g$12109$XGD4L)
        (char->integer . g$12108$XGD4L)
        (ceiling . g$12107$XGD4L)
        (call-with-values . g$12106$XGD4L)
        (call-with-current-continuation . g$12104$XGD4L)
        (cddddr . g$6235$XGD4L)
        (cdddar . g$6234$XGD4L)
        (cddadr . g$6233$XGD4L)
        (cddaar . g$6232$XGD4L)
        (cdaddr . g$6231$XGD4L)
        (cdadar . g$6230$XGD4L)
        (cdaadr . g$6229$XGD4L)
        (cdaaar . g$6228$XGD4L)
        (cadddr . g$6227$XGD4L)
        (caddar . g$6226$XGD4L)
        (cadadr . g$6225$XGD4L)
        (cadaar . g$6224$XGD4L)
        (caaddr . g$6223$XGD4L)
        (caadar . g$6222$XGD4L)
        (caaadr . g$6221$XGD4L)
        (caaaar . g$6220$XGD4L)
        (cdddr . g$6219$XGD4L)
        (cddar . g$6218$XGD4L)
        (cdadr . g$6217$XGD4L)
        (cdaar . g$6216$XGD4L)
        (caddr . g$6215$XGD4L)
        (cadar . g$6214$XGD4L)
        (caadr . g$6213$XGD4L)
        (caaar . g$6212$XGD4L)
        (cddr . g$6211$XGD4L)
        (cdar . g$6210$XGD4L)
        (cadr . g$6209$XGD4L)
        (caar . g$6208$XGD4L)
        (cdr . g$12103$XGD4L)
        (car . g$12102$XGD4L)
        (boolean? . g$12101$XGD4L)
        (atan . g$12099$XGD4L)
        (asin . g$12097$XGD4L)
        (apply . g$12096$XGD4L)
        (append . g$12095$XGD4L)
        (angle . g$12094$XGD4L)
        (acos . g$12093$XGD4L)
        (abs . g$12092$XGD4L)
        (/ . g$12091$XGD4L)
        (* . g$12090$XGD4L)
        (- . g$12089$XGD4L)
        (+ . g$12088$XGD4L)
        (>= . g$12087$XGD4L)
        (> . g$12086$XGD4L)
        (= . g$12085$XGD4L)
        (<= . g$12084$XGD4L)
        (< . g$12083$XGD4L)
        (unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L)
        (... . g$11998$XGD4L)
        (delay . g$11995$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (do . g$11991$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (case . g$11974$XGD4L)
        (if . g$11970$XGD4L)
        (letrec . g$11968$XGD4L)
        (lambda . g$11965$XGD4L)
        (quote . g$11962$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (begin . g$11955$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12606$XGD4L
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12502$XGD4L)
        (string-titlecase . g$12501$XGD4L)
        (string-normalize-nfkd . g$12500$XGD4L)
        (string-normalize-nfkc . g$12499$XGD4L)
        (string-normalize-nfd . g$12498$XGD4L)
        (string-normalize-nfc . g$12497$XGD4L)
        (string-foldcase . g$12496$XGD4L)
        (string-downcase . g$12495$XGD4L)
        (string-ci>? . g$12494$XGD4L)
        (string-ci>=? . g$12493$XGD4L)
        (string-ci=? . g$12492$XGD4L)
        (string-ci<? . g$12491$XGD4L)
        (string-ci<=? . g$12490$XGD4L)
        (char-whitespace? . g$12489$XGD4L)
        (char-upper-case? . g$12488$XGD4L)
        (char-title-case? . g$12487$XGD4L)
        (char-numeric? . g$12486$XGD4L)
        (char-lower-case? . g$12485$XGD4L)
        (char-general-category . g$12484$XGD4L)
        (char-upcase . g$12483$XGD4L)
        (char-titlecase . g$12482$XGD4L)
        (char-foldcase . g$12481$XGD4L)
        (char-downcase . g$12480$XGD4L)
        (char-ci>? . g$12479$XGD4L)
        (char-ci>=? . g$12478$XGD4L)
        (char-ci=? . g$12477$XGD4L)
        (char-ci<? . g$12476$XGD4L)
        (char-ci<=? . g$12475$XGD4L)
        (char-alphabetic? . g$12474$XGD4L)
        (make-variable-transformer . g$8591$XGD4L)
        (identifier? . g$8984$XGD4L)
        (generate-temporaries . g$8976$XGD4L)
        (free-identifier=? . g$8977$XGD4L)
        (syntax->datum . g$8986$XGD4L)
        (datum->syntax . g$8985$XGD4L)
        (bound-identifier=? . g$8978$XGD4L)
        (record-type-descriptor? . g$12473$XGD4L)
        (record-predicate . g$12472$XGD4L)
        (record-mutator . g$12471$XGD4L)
        (record-constructor . g$12470$XGD4L)
        (record-accessor . g$12469$XGD4L)
        (make-record-type-descriptor . g$12468$XGD4L)
        (make-record-constructor-descriptor . g$12467$XGD4L)
        (record? . g$12466$XGD4L)
        (record-type-uid . g$12465$XGD4L)
        (record-type-sealed? . g$12464$XGD4L)
        (record-type-parent . g$12463$XGD4L)
        (record-type-opaque? . g$12462$XGD4L)
        (record-type-name . g$12461$XGD4L)
        (record-type-generative? . g$12460$XGD4L)
        (record-type-field-names . g$12459$XGD4L)
        (record-rtd . g$12458$XGD4L)
        (record-field-mutable? . g$12457$XGD4L)
        (delete-file . g$6619$XGD4L)
        (file-exists? . g$6618$XGD4L)
        (vector-sort! . g$12456$XGD4L)
        (vector-sort . g$12455$XGD4L)
        (list-sort . g$7125$XGD4L)
        (symbol-hash . g$12454$XGD4L)
        (string-ci-hash . g$12453$XGD4L)
        (string-hash . g$12452$XGD4L)
        (equal-hash . g$12451$XGD4L)
        (hashtable-equivalence-function . g$12450$XGD4L)
        (make-hashtable . g$12449$XGD4L)
        (hashtable-hash-function . g$12448$XGD4L)
        (make-eqv-hashtable . g$6586$XGD4L)
        (make-eq-hashtable . g$6585$XGD4L)
        (hashtable? . g$12447$XGD4L)
        (hashtable-update! . g$6592$XGD4L)
        (hashtable-size . g$6587$XGD4L)
        (hashtable-set! . g$6589$XGD4L)
        (hashtable-ref . g$6588$XGD4L)
        (hashtable-mutable? . g$12446$XGD4L)
        (hashtable-keys . g$12445$XGD4L)
        (hashtable-entries . g$12444$XGD4L)
        (hashtable-delete! . g$6590$XGD4L)
        (hashtable-copy . g$12443$XGD4L)
        (hashtable-contains? . g$6591$XGD4L)
        (hashtable-clear! . g$6593$XGD4L)
        (call-with-output-file . g$12442$XGD4L)
        (call-with-input-file . g$12441$XGD4L)
        (write-char . g$12440$XGD4L)
        (write . g$12439$XGD4L)
        (with-output-to-file . g$12438$XGD4L)
        (with-input-from-file . g$12437$XGD4L)
        (read-char . g$12436$XGD4L)
        (read . g$12435$XGD4L)
        (peek-char . g$12434$XGD4L)
        (open-output-file . g$12433$XGD4L)
        (open-input-file . g$12432$XGD4L)
        (newline . g$12431$XGD4L)
        (display . g$12430$XGD4L)
        (close-output-port . g$12429$XGD4L)
        (close-input-port . g$12428$XGD4L)
        (eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (utf-8-codec . g$12420$XGD4L)
        (utf-16-codec . g$12419$XGD4L)
        (transcoder-error-handling-mode . g$12418$XGD4L)
        (transcoder-eol-style . g$12417$XGD4L)
        (transcoder-codec . g$12416$XGD4L)
        (transcoded-port . g$12415$XGD4L)
        (textual-port? . g$12414$XGD4L)
        (string->bytevector . g$12413$XGD4L)
        (standard-output-port . g$12412$XGD4L)
        (standard-input-port . g$12411$XGD4L)
        (standard-error-port . g$12410$XGD4L)
        (set-port-position! . g$12409$XGD4L)
        (put-u8 . g$12408$XGD4L)
        (put-string . g$12407$XGD4L)
        (put-datum . g$12406$XGD4L)
        (put-char . g$12405$XGD4L)
        (put-bytevector . g$12404$XGD4L)
        (port? . g$12403$XGD4L)
        (port-transcoder . g$12402$XGD4L)
        (port-position . g$12401$XGD4L)
        (port-has-set-port-position!? . g$12400$XGD4L)
        (port-has-port-position? . g$12399$XGD4L)
        (port-eof? . g$12398$XGD4L)
        (output-port-buffer-mode . g$12397$XGD4L)
        (open-string-output-port . g$7516$XGD4L)
        (open-string-input-port . g$12396$XGD4L)
        (open-file-output-port . g$12395$XGD4L)
        (open-file-input/output-port . g$12394$XGD4L)
        (open-file-input-port . g$12393$XGD4L)
        (open-bytevector-output-port . g$12392$XGD4L)
        (open-bytevector-input-port . g$12391$XGD4L)
        (native-transcoder . g$12390$XGD4L)
        (native-eol-style . g$12389$XGD4L)
        (make-transcoder . g$12388$XGD4L)
        (latin-1-codec . g$12387$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (make-i/o-encoding-error . g$7509$XGD4L)
        (make-i/o-decoding-error . g$7494$XGD4L)
        (make-custom-textual-output-port . g$12386$XGD4L)
        (make-custom-textual-input/output-port . g$12385$XGD4L)
        (make-custom-textual-input-port . g$12384$XGD4L)
        (make-custom-binary-output-port . g$12383$XGD4L)
        (make-custom-binary-input/output-port . g$12382$XGD4L)
        (make-custom-binary-input-port . g$12381$XGD4L)
        (make-bytevector . g$12380$XGD4L)
        (lookahead-u8 . g$12379$XGD4L)
        (lookahead-char . g$12378$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (i/o-encoding-error? . g$7511$XGD4L)
        (i/o-encoding-error-char . g$7512$XGD4L)
        (i/o-decoding-error? . g$7495$XGD4L)
        (get-u8 . g$12377$XGD4L)
        (get-string-n! . g$12376$XGD4L)
        (get-string-n . g$12375$XGD4L)
        (get-string-all . g$12374$XGD4L)
        (get-line . g$12373$XGD4L)
        (get-datum . g$12372$XGD4L)
        (get-char . g$12371$XGD4L)
        (get-bytevector-some . g$12370$XGD4L)
        (get-bytevector-n! . g$12369$XGD4L)
        (get-bytevector-n . g$12368$XGD4L)
        (get-bytevector-all . g$12367$XGD4L)
        (flush-output-port . g$12366$XGD4L)
        (close-port . g$12365$XGD4L)
        (call-with-string-output-port . g$12364$XGD4L)
        (call-with-port . g$12363$XGD4L)
        (call-with-bytevector-output-port . g$12362$XGD4L)
        (bytevector->string . g$12361$XGD4L)
        (buffer-mode? . g$12360$XGD4L)
        (binary-port? . g$12359$XGD4L)
        (exit . g$12355$XGD4L)
        (command-line . g$11917$XGD4L)
        (remove . g$6699$XGD4L)
        (remv . g$6700$XGD4L)
        (remp . g$6685$XGD4L)
        (remq . g$6701$XGD4L)
        (partition . g$6684$XGD4L)
        (memv . g$12350$XGD4L)
        (memq . g$12349$XGD4L)
        (memp . g$6691$XGD4L)
        (member . g$6690$XGD4L)
        (exists . g$6695$XGD4L)
        (for-all . g$6694$XGD4L)
        (fold-right . g$6698$XGD4L)
        (fold-left . g$6697$XGD4L)
        (find . g$6683$XGD4L)
        (filter . g$6686$XGD4L)
        (cons* . g$6696$XGD4L)
        (assv . g$6687$XGD4L)
        (assq . g$12348$XGD4L)
        (assp . g$6689$XGD4L)
        (assoc . g$6688$XGD4L)
        (with-exception-handler . g$12347$XGD4L)
        (raise-continuable . g$12346$XGD4L)
        (raise . g$12345$XGD4L)
        (make-enumeration . g$7565$XGD4L)
        (enum-set=? . g$7572$XGD4L)
        (enum-set-universe . g$7566$XGD4L)
        (enum-set-union . g$7573$XGD4L)
        (enum-set-subset? . g$7571$XGD4L)
        (enum-set-projection . g$7577$XGD4L)
        (enum-set-member? . g$7570$XGD4L)
        (enum-set-intersection . g$7574$XGD4L)
        (enum-set-indexer . g$7567$XGD4L)
        (enum-set-difference . g$7575$XGD4L)
        (enum-set-constructor . g$7568$XGD4L)
        (enum-set-complement . g$7576$XGD4L)
        (enum-set->list . g$7569$XGD4L)
        (who-condition? . g$7023$XGD4L)
        (warning? . g$6934$XGD4L)
        (violation? . g$6976$XGD4L)
        (undefined-violation? . g$7100$XGD4L)
        (syntax-violation? . g$7084$XGD4L)
        (syntax-violation-subform . g$7086$XGD4L)
        (syntax-violation-form . g$7085$XGD4L)
        (syntax-violation . g$8983$XGD4L)
        (simple-conditions . g$12344$XGD4L)
        (serious-condition? . g$6948$XGD4L)
        (non-continuable-violation? . g$7038$XGD4L)
        (message-condition? . g$6919$XGD4L)
        (make-who-condition . g$7021$XGD4L)
        (make-warning . g$6933$XGD4L)
        (make-violation . g$6975$XGD4L)
        (make-undefined-violation . g$7099$XGD4L)
        (make-syntax-violation . g$7081$XGD4L)
        (make-serious-condition . g$6947$XGD4L)
        (make-non-continuable-violation . g$7037$XGD4L)
        (make-message-condition . g$6917$XGD4L)
        (make-lexical-violation . g$7065$XGD4L)
        (make-irritants-condition . g$7004$XGD4L)
        (make-implementation-restriction-violation . g$7051$XGD4L)
        (make-error . g$6961$XGD4L)
        (make-assertion-violation . g$6989$XGD4L)
        (lexical-violation? . g$7066$XGD4L)
        (irritants-condition? . g$7006$XGD4L)
        (implementation-restriction-violation? . g$7052$XGD4L)
        (error? . g$6962$XGD4L)
        (condition-who . g$7024$XGD4L)
        (condition-predicate . g$12343$XGD4L)
        (condition-message . g$6920$XGD4L)
        (condition-irritants . g$7007$XGD4L)
        (condition-accessor . g$12342$XGD4L)
        (condition . g$12341$XGD4L)
        (assertion-violation? . g$6990$XGD4L)
        (condition? . g$12340$XGD4L)
        (utf32->string . g$12339$XGD4L)
        (utf16->string . g$12338$XGD4L)
        (utf8->string . g$12337$XGD4L)
        (uint-list->bytevector . g$12336$XGD4L)
        (u8-list->bytevector . g$12335$XGD4L)
        (string->utf8 . g$12334$XGD4L)
        (string->utf32 . g$12333$XGD4L)
        (string->utf16 . g$12332$XGD4L)
        (sint-list->bytevector . g$12331$XGD4L)
        (native-endianness . g$6775$XGD4L)
        (bytevector? . g$12330$XGD4L)
        (bytevector=? . g$12329$XGD4L)
        (bytevector-uint-set! . g$12328$XGD4L)
        (bytevector-uint-ref . g$12327$XGD4L)
        (bytevector-u8-set! . g$12326$XGD4L)
        (bytevector-u8-ref . g$12325$XGD4L)
        (bytevector-u64-set! . g$6796$XGD4L)
        (bytevector-u64-ref . g$6792$XGD4L)
        (bytevector-u64-native-set! . g$6798$XGD4L)
        (bytevector-u64-native-ref . g$6794$XGD4L)
        (bytevector-u32-set! . g$6788$XGD4L)
        (bytevector-u32-ref . g$6784$XGD4L)
        (bytevector-u32-native-set! . g$6790$XGD4L)
        (bytevector-u32-native-ref . g$6786$XGD4L)
        (bytevector-u16-set! . g$6780$XGD4L)
        (bytevector-u16-ref . g$6776$XGD4L)
        (bytevector-u16-native-set! . g$6782$XGD4L)
        (bytevector-u16-native-ref . g$6778$XGD4L)
        (bytevector-sint-set! . g$12324$XGD4L)
        (bytevector-sint-ref . g$12323$XGD4L)
        (bytevector-s8-set! . g$12322$XGD4L)
        (bytevector-s8-ref . g$12321$XGD4L)
        (bytevector-s64-set! . g$6797$XGD4L)
        (bytevector-s64-ref . g$6793$XGD4L)
        (bytevector-s64-native-set! . g$6799$XGD4L)
        (bytevector-s64-native-ref . g$6795$XGD4L)
        (bytevector-s32-set! . g$6789$XGD4L)
        (bytevector-s32-ref . g$6785$XGD4L)
        (bytevector-s32-native-set! . g$6791$XGD4L)
        (bytevector-s32-native-ref . g$6787$XGD4L)
        (bytevector-s16-set! . g$6781$XGD4L)
        (bytevector-s16-ref . g$6777$XGD4L)
        (bytevector-s16-native-set! . g$6783$XGD4L)
        (bytevector-s16-native-ref . g$6779$XGD4L)
        (bytevector-length . g$12320$XGD4L)
        (bytevector-ieee-single-set! . g$12319$XGD4L)
        (bytevector-ieee-single-ref . g$12318$XGD4L)
        (bytevector-ieee-single-native-set! . g$6802$XGD4L)
        (bytevector-ieee-single-native-ref . g$6800$XGD4L)
        (bytevector-ieee-double-set! . g$12317$XGD4L)
        (bytevector-ieee-double-ref . g$12316$XGD4L)
        (bytevector-ieee-double-native-set! . g$6803$XGD4L)
        (bytevector-ieee-double-native-ref . g$6801$XGD4L)
        (bytevector-fill! . g$12315$XGD4L)
        (bytevector-copy! . g$12314$XGD4L)
        (bytevector-copy . g$12313$XGD4L)
        (bytevector->uint-list . g$12312$XGD4L)
        (bytevector->u8-list . g$12311$XGD4L)
        (bytevector->sint-list . g$12310$XGD4L)
        (no-nans-violation? . g$7331$XGD4L)
        (no-infinities-violation? . g$7317$XGD4L)
        (make-no-nans-violation . g$7330$XGD4L)
        (make-no-infinities-violation . g$7316$XGD4L)
        (real->flonum . g$12309$XGD4L)
        (flzero? . g$12308$XGD4L)
        (fltruncate . g$12307$XGD4L)
        (fltan . g$12306$XGD4L)
        (flsqrt . g$12305$XGD4L)
        (flsin . g$12304$XGD4L)
        (flround . g$12303$XGD4L)
        (flpositive? . g$12302$XGD4L)
        (flonum? . g$12301$XGD4L)
        (flodd? . g$12300$XGD4L)
        (flnumerator . g$12299$XGD4L)
        (flnegative? . g$12298$XGD4L)
        (flnan? . g$12297$XGD4L)
        (flmod0 . g$12296$XGD4L)
        (flmod . g$12295$XGD4L)
        (flmin . g$12294$XGD4L)
        (flmax . g$12293$XGD4L)
        (fllog . g$12292$XGD4L)
        (flinteger? . g$12291$XGD4L)
        (flinfinite? . g$12290$XGD4L)
        (flfloor . g$12289$XGD4L)
        (flfinite? . g$12288$XGD4L)
        (flexpt . g$12287$XGD4L)
        (flexp . g$12286$XGD4L)
        (fleven? . g$12285$XGD4L)
        (fldiv0-and-mod0 . g$12284$XGD4L)
        (fldiv0 . g$12283$XGD4L)
        (fldiv-and-mod . g$12282$XGD4L)
        (fldiv . g$12281$XGD4L)
        (fldenominator . g$12280$XGD4L)
        (flcos . g$12279$XGD4L)
        (flceiling . g$12278$XGD4L)
        (flatan . g$12277$XGD4L)
        (flasin . g$12276$XGD4L)
        (flacos . g$12275$XGD4L)
        (flabs . g$12274$XGD4L)
        (fl>? . g$12273$XGD4L)
        (fl>=? . g$12272$XGD4L)
        (fl=? . g$12271$XGD4L)
        (fl<? . g$12270$XGD4L)
        (fl<=? . g$12269$XGD4L)
        (fl/ . g$12268$XGD4L)
        (fl- . g$12267$XGD4L)
        (fl+ . g$12266$XGD4L)
        (fl* . g$12265$XGD4L)
        (fixnum->flonum . g$12264$XGD4L)
        (fxzero? . g$12263$XGD4L)
        (fxxor . g$12262$XGD4L)
        (fxrotate-bit-field . g$7262$XGD4L)
        (fxreverse-bit-field . g$12261$XGD4L)
        (fxpositive? . g$12260$XGD4L)
        (fxodd? . g$12259$XGD4L)
        (fxnot . g$12258$XGD4L)
        (fxnegative? . g$12257$XGD4L)
        (fxmod0 . g$12256$XGD4L)
        (fxmod . g$12255$XGD4L)
        (fxmin . g$12254$XGD4L)
        (fxmax . g$12253$XGD4L)
        (fxlength . g$12252$XGD4L)
        (fxior . g$12251$XGD4L)
        (fxif . g$7256$XGD4L)
        (fxfirst-bit-set . g$12250$XGD4L)
        (fxeven? . g$12249$XGD4L)
        (fxdiv0-and-mod0 . g$12248$XGD4L)
        (fxdiv0 . g$12247$XGD4L)
        (fxdiv-and-mod . g$12246$XGD4L)
        (fxdiv . g$12245$XGD4L)
        (fxcopy-bit-field . g$7259$XGD4L)
        (fxcopy-bit . g$7257$XGD4L)
        (fxbit-set? . g$12244$XGD4L)
        (fxbit-field . g$7258$XGD4L)
        (fxbit-count . g$12243$XGD4L)
        (fxarithmetic-shift-right . g$7261$XGD4L)
        (fxarithmetic-shift-left . g$7260$XGD4L)
        (fxarithmetic-shift . g$12242$XGD4L)
        (fxand . g$12241$XGD4L)
        (fx>? . g$12240$XGD4L)
        (fx>=? . g$12239$XGD4L)
        (fx=? . g$12238$XGD4L)
        (fx<? . g$12237$XGD4L)
        (fx<=? . g$12236$XGD4L)
        (fx-/carry . g$12235$XGD4L)
        (fx- . g$12234$XGD4L)
        (fx+/carry . g$12233$XGD4L)
        (fx+ . g$12232$XGD4L)
        (fx*/carry . g$12231$XGD4L)
        (fx* . g$12230$XGD4L)
        (greatest-fixnum . g$12229$XGD4L)
        (least-fixnum . g$12228$XGD4L)
        (fixnum-width . g$12227$XGD4L)
        (fixnum? . g$12226$XGD4L)
        (bitwise-rotate-bit-field . g$7210$XGD4L)
        (bitwise-reverse-bit-field . g$7211$XGD4L)
        (bitwise-length . g$12225$XGD4L)
        (bitwise-if . g$7204$XGD4L)
        (bitwise-first-bit-set . g$12224$XGD4L)
        (bitwise-copy-bit-field . g$7207$XGD4L)
        (bitwise-copy-bit . g$7205$XGD4L)
        (bitwise-bit-set? . g$12223$XGD4L)
        (bitwise-bit-field . g$12222$XGD4L)
        (bitwise-bit-count . g$12221$XGD4L)
        (bitwise-xor . g$12220$XGD4L)
        (bitwise-ior . g$12219$XGD4L)
        (bitwise-and . g$12218$XGD4L)
        (bitwise-not . g$12217$XGD4L)
        (bitwise-arithmetic-shift-right . g$7209$XGD4L)
        (bitwise-arithmetic-shift-left . g$7208$XGD4L)
        (bitwise-arithmetic-shift . g$12216$XGD4L)
        (zero? . g$12215$XGD4L)
        (vector? . g$12214$XGD4L)
        (vector-set! . g$12213$XGD4L)
        (vector-ref . g$12212$XGD4L)
        (vector-map . g$12211$XGD4L)
        (vector-length . g$12210$XGD4L)
        (vector-for-each . g$12209$XGD4L)
        (vector-fill! . g$12208$XGD4L)
        (vector->list . g$12207$XGD4L)
        (vector . g$12206$XGD4L)
        (values . g$12205$XGD4L)
        (truncate . g$12204$XGD4L)
        (tan . g$12203$XGD4L)
        (symbol? . g$12202$XGD4L)
        (symbol=? . g$12201$XGD4L)
        (symbol->string . g$12200$XGD4L)
        (substring . g$12199$XGD4L)
        (string? . g$12198$XGD4L)
        (string>? . g$12197$XGD4L)
        (string>=? . g$12196$XGD4L)
        (string=? . g$12195$XGD4L)
        (string<? . g$12194$XGD4L)
        (string<=? . g$12193$XGD4L)
        (string-ref . g$12192$XGD4L)
        (string-length . g$12191$XGD4L)
        (string-for-each . g$12190$XGD4L)
        (string-copy . g$12189$XGD4L)
        (string-append . g$12188$XGD4L)
        (string->symbol . g$12187$XGD4L)
        (string->number . g$12186$XGD4L)
        (string->list . g$12185$XGD4L)
        (string . g$12184$XGD4L)
        (sqrt . g$12183$XGD4L)
        (sin . g$12182$XGD4L)
        (round . g$12181$XGD4L)
        (reverse . g$12180$XGD4L)
        (real? . g$12179$XGD4L)
        (real-valued? . g$12178$XGD4L)
        (real-part . g$12177$XGD4L)
        (rationalize . g$6236$XGD4L)
        (rational? . g$12176$XGD4L)
        (rational-valued? . g$12175$XGD4L)
        (procedure? . g$12174$XGD4L)
        (positive? . g$12173$XGD4L)
        (pair? . g$12172$XGD4L)
        (odd? . g$12171$XGD4L)
        (numerator . g$12170$XGD4L)
        (number? . g$12169$XGD4L)
        (number->string . g$12168$XGD4L)
        (null? . g$12167$XGD4L)
        (not . g$12166$XGD4L)
        (negative? . g$12165$XGD4L)
        (nan? . g$12164$XGD4L)
        (min . g$12163$XGD4L)
        (max . g$12162$XGD4L)
        (map . g$12161$XGD4L)
        (make-vector . g$12160$XGD4L)
        (make-string . g$12159$XGD4L)
        (make-rectangular . g$12158$XGD4L)
        (make-polar . g$12157$XGD4L)
        (magnitude . g$12156$XGD4L)
        (log . g$12155$XGD4L)
        (list? . g$12154$XGD4L)
        (list-tail . g$12153$XGD4L)
        (list-ref . g$12152$XGD4L)
        (list->vector . g$12151$XGD4L)
        (list->string . g$12150$XGD4L)
        (list . g$12149$XGD4L)
        (length . g$12148$XGD4L)
        (lcm . g$12147$XGD4L)
        (integer? . g$12146$XGD4L)
        (integer-valued? . g$12145$XGD4L)
        (integer->char . g$12144$XGD4L)
        (infinite? . g$12143$XGD4L)
        (inexact? . g$12142$XGD4L)
        (inexact . g$12141$XGD4L)
        (imag-part . g$12140$XGD4L)
        (gcd . g$12139$XGD4L)
        (for-each . g$12138$XGD4L)
        (floor . g$12137$XGD4L)
        (finite? . g$12136$XGD4L)
        (expt . g$12135$XGD4L)
        (exp . g$12134$XGD4L)
        (exact? . g$12133$XGD4L)
        (exact-integer-sqrt . g$12132$XGD4L)
        (exact . g$12131$XGD4L)
        (even? . g$12130$XGD4L)
        (error . g$12129$XGD4L)
        (eqv? . g$12128$XGD4L)
        (equal? . g$12127$XGD4L)
        (eq? . g$12126$XGD4L)
        (dynamic-wind . g$12125$XGD4L)
        (div0-and-mod0 . g$12124$XGD4L)
        (mod0 . g$12123$XGD4L)
        (div0 . g$12122$XGD4L)
        (div-and-mod . g$12121$XGD4L)
        (mod . g$12120$XGD4L)
        (div . g$12119$XGD4L)
        (denominator . g$12118$XGD4L)
        (cos . g$12117$XGD4L)
        (cons . g$12116$XGD4L)
        (complex? . g$12115$XGD4L)
        (char? . g$12114$XGD4L)
        (char>? . g$12113$XGD4L)
        (char>=? . g$12112$XGD4L)
        (char=? . g$12111$XGD4L)
        (char<? . g$12110$XGD4L)
        (char<=? . g$12109$XGD4L)
        (char->integer . g$12108$XGD4L)
        (ceiling . g$12107$XGD4L)
        (call-with-values . g$12106$XGD4L)
        (call/cc . g$12105$XGD4L)
        (call-with-current-continuation . g$12104$XGD4L)
        (cddddr . g$6235$XGD4L)
        (cdddar . g$6234$XGD4L)
        (cddadr . g$6233$XGD4L)
        (cddaar . g$6232$XGD4L)
        (cdaddr . g$6231$XGD4L)
        (cdadar . g$6230$XGD4L)
        (cdaadr . g$6229$XGD4L)
        (cdaaar . g$6228$XGD4L)
        (cadddr . g$6227$XGD4L)
        (caddar . g$6226$XGD4L)
        (cadadr . g$6225$XGD4L)
        (cadaar . g$6224$XGD4L)
        (caaddr . g$6223$XGD4L)
        (caadar . g$6222$XGD4L)
        (caaadr . g$6221$XGD4L)
        (caaaar . g$6220$XGD4L)
        (cdddr . g$6219$XGD4L)
        (cddar . g$6218$XGD4L)
        (cdadr . g$6217$XGD4L)
        (cdaar . g$6216$XGD4L)
        (caddr . g$6215$XGD4L)
        (cadar . g$6214$XGD4L)
        (caadr . g$6213$XGD4L)
        (caaar . g$6212$XGD4L)
        (cddr . g$6211$XGD4L)
        (cdar . g$6210$XGD4L)
        (cadr . g$6209$XGD4L)
        (caar . g$6208$XGD4L)
        (cdr . g$12103$XGD4L)
        (car . g$12102$XGD4L)
        (boolean? . g$12101$XGD4L)
        (boolean=? . g$12100$XGD4L)
        (atan . g$12099$XGD4L)
        (assertion-violation . g$12098$XGD4L)
        (asin . g$12097$XGD4L)
        (apply . g$12096$XGD4L)
        (append . g$12095$XGD4L)
        (angle . g$12094$XGD4L)
        (acos . g$12093$XGD4L)
        (abs . g$12092$XGD4L)
        (/ . g$12091$XGD4L)
        (* . g$12090$XGD4L)
        (- . g$12089$XGD4L)
        (+ . g$12088$XGD4L)
        (>= . g$12087$XGD4L)
        (> . g$12086$XGD4L)
        (= . g$12085$XGD4L)
        (<= . g$12084$XGD4L)
        (< . g$12083$XGD4L)
        (&no-nans . g$12056$XGD4L)
        (&no-infinities . g$12055$XGD4L)
        (&i/o-encoding . g$12054$XGD4L)
        (&i/o-decoding . g$12053$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L)
        (&non-continuable . g$12042$XGD4L)
        (&undefined . g$12041$XGD4L)
        (&syntax . g$12040$XGD4L)
        (&lexical . g$12039$XGD4L)
        (&implementation-restriction . g$12038$XGD4L)
        (&who . g$12036$XGD4L)
        (&irritants . g$12035$XGD4L)
        (&assertion . g$12034$XGD4L)
        (&violation . g$12033$XGD4L)
        (&error . g$12032$XGD4L)
        (&serious . g$12031$XGD4L)
        (&warning . g$12030$XGD4L)
        (&message . g$12029$XGD4L)
        (&condition . g$12028$XGD4L)
        (define-condition-type . g$12027$XGD4L)
        (define-enumeration . g$12026$XGD4L)
        (define-record-type . g$12025$XGD4L)
        (parent-rtd . g$12024$XGD4L)
        (nongenerative . g$12023$XGD4L)
        (opaque . g$12022$XGD4L)
        (sealed . g$12021$XGD4L)
        (protocol . g$12020$XGD4L)
        (parent . g$12019$XGD4L)
        (immutable . g$12018$XGD4L)
        (mutable . g$12017$XGD4L)
        (fields . g$12016$XGD4L)
        (error-handling-mode . g$12015$XGD4L)
        (file-options . g$12014$XGD4L)
        (buffer-mode . g$12013$XGD4L)
        (eol-style . g$12012$XGD4L)
        (guard . g$12011$XGD4L)
        (unsyntax-splicing . g$12005$XGD4L)
        (unsyntax . g$12004$XGD4L)
        (unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (_ . g$12001$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L)
        (... . g$11998$XGD4L)
        (assert . g$11997$XGD4L)
        (endianness . g$11996$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (do . g$11991$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (identifier-syntax . g$11987$XGD4L)
        (with-syntax . g$11986$XGD4L)
        (quasisyntax . g$11985$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (let-values . g$11979$XGD4L)
        (let*-values . g$11978$XGD4L)
        (record-constructor-descriptor . g$11977$XGD4L)
        (record-type-descriptor . g$11976$XGD4L)
        (case . g$11974$XGD4L)
        (unless . g$11972$XGD4L)
        (when . g$11971$XGD4L)
        (if . g$11970$XGD4L)
        (letrec* . g$11969$XGD4L)
        (letrec . g$11968$XGD4L)
        (case-lambda . g$11966$XGD4L)
        (lambda . g$11965$XGD4L)
        (syntax . g$11964$XGD4L)
        (syntax-case . g$11963$XGD4L)
        (quote . g$11962$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (import . g$11957$XGD4L)
        (library . g$11956$XGD4L)
        (begin . g$11955$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12607$XGD4L
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8989$XGD4L)
        (scheme-report-environment . g$8967$XGD4L)
        (quotient . g$7112$XGD4L)
        (null-environment . g$8966$XGD4L)
        (remainder . g$7113$XGD4L)
        (modulo . g$7114$XGD4L)
        (inexact->exact . g$12358$XGD4L)
        (force . g$12357$XGD4L)
        (exact->inexact . g$12356$XGD4L)
        (delay . g$11995$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12608$XGD4L
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11991$XGD4L)
        (unless . g$11972$XGD4L)
        (when . g$11971$XGD4L)
        (case-lambda . g$11966$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12609$XGD4L
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8969$XGD4L) (environment . g$8965$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12610$XGD4L
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12352$XGD4L) (set-car! . g$12351$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12611$XGD4L
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12354$XGD4L) (string-set! . g$12353$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12612$XGD4L
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12355$XGD4L) (command-line . g$11917$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12613$XGD4L
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8591$XGD4L)
        (identifier? . g$8984$XGD4L)
        (generate-temporaries . g$8976$XGD4L)
        (free-identifier=? . g$8977$XGD4L)
        (syntax->datum . g$8986$XGD4L)
        (datum->syntax . g$8985$XGD4L)
        (bound-identifier=? . g$8978$XGD4L)
        (syntax-violation . g$8983$XGD4L)
        (unsyntax-splicing . g$12005$XGD4L)
        (unsyntax . g$12004$XGD4L)
        (_ . g$12001$XGD4L)
        (... . g$11998$XGD4L)
        (with-syntax . g$11986$XGD4L)
        (quasisyntax . g$11985$XGD4L)
        (syntax . g$11964$XGD4L)
        (syntax-case . g$11963$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12614$XGD4L
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6619$XGD4L)
        (file-exists? . g$6618$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12615$XGD4L
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12456$XGD4L)
        (vector-sort . g$12455$XGD4L)
        (list-sort . g$7125$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12616$XGD4L
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12215$XGD4L)
        (vector? . g$12214$XGD4L)
        (vector-set! . g$12213$XGD4L)
        (vector-ref . g$12212$XGD4L)
        (vector-map . g$12211$XGD4L)
        (vector-length . g$12210$XGD4L)
        (vector-for-each . g$12209$XGD4L)
        (vector-fill! . g$12208$XGD4L)
        (vector->list . g$12207$XGD4L)
        (vector . g$12206$XGD4L)
        (values . g$12205$XGD4L)
        (truncate . g$12204$XGD4L)
        (tan . g$12203$XGD4L)
        (symbol? . g$12202$XGD4L)
        (symbol=? . g$12201$XGD4L)
        (symbol->string . g$12200$XGD4L)
        (substring . g$12199$XGD4L)
        (string? . g$12198$XGD4L)
        (string>? . g$12197$XGD4L)
        (string>=? . g$12196$XGD4L)
        (string=? . g$12195$XGD4L)
        (string<? . g$12194$XGD4L)
        (string<=? . g$12193$XGD4L)
        (string-ref . g$12192$XGD4L)
        (string-length . g$12191$XGD4L)
        (string-for-each . g$12190$XGD4L)
        (string-copy . g$12189$XGD4L)
        (string-append . g$12188$XGD4L)
        (string->symbol . g$12187$XGD4L)
        (string->number . g$12186$XGD4L)
        (string->list . g$12185$XGD4L)
        (string . g$12184$XGD4L)
        (sqrt . g$12183$XGD4L)
        (sin . g$12182$XGD4L)
        (round . g$12181$XGD4L)
        (reverse . g$12180$XGD4L)
        (real? . g$12179$XGD4L)
        (real-valued? . g$12178$XGD4L)
        (real-part . g$12177$XGD4L)
        (rationalize . g$6236$XGD4L)
        (rational? . g$12176$XGD4L)
        (rational-valued? . g$12175$XGD4L)
        (procedure? . g$12174$XGD4L)
        (positive? . g$12173$XGD4L)
        (pair? . g$12172$XGD4L)
        (odd? . g$12171$XGD4L)
        (numerator . g$12170$XGD4L)
        (number? . g$12169$XGD4L)
        (number->string . g$12168$XGD4L)
        (null? . g$12167$XGD4L)
        (not . g$12166$XGD4L)
        (negative? . g$12165$XGD4L)
        (nan? . g$12164$XGD4L)
        (min . g$12163$XGD4L)
        (max . g$12162$XGD4L)
        (map . g$12161$XGD4L)
        (make-vector . g$12160$XGD4L)
        (make-string . g$12159$XGD4L)
        (make-rectangular . g$12158$XGD4L)
        (make-polar . g$12157$XGD4L)
        (magnitude . g$12156$XGD4L)
        (log . g$12155$XGD4L)
        (list? . g$12154$XGD4L)
        (list-tail . g$12153$XGD4L)
        (list-ref . g$12152$XGD4L)
        (list->vector . g$12151$XGD4L)
        (list->string . g$12150$XGD4L)
        (list . g$12149$XGD4L)
        (length . g$12148$XGD4L)
        (lcm . g$12147$XGD4L)
        (integer? . g$12146$XGD4L)
        (integer-valued? . g$12145$XGD4L)
        (integer->char . g$12144$XGD4L)
        (infinite? . g$12143$XGD4L)
        (inexact? . g$12142$XGD4L)
        (inexact . g$12141$XGD4L)
        (imag-part . g$12140$XGD4L)
        (gcd . g$12139$XGD4L)
        (for-each . g$12138$XGD4L)
        (floor . g$12137$XGD4L)
        (finite? . g$12136$XGD4L)
        (expt . g$12135$XGD4L)
        (exp . g$12134$XGD4L)
        (exact? . g$12133$XGD4L)
        (exact-integer-sqrt . g$12132$XGD4L)
        (exact . g$12131$XGD4L)
        (even? . g$12130$XGD4L)
        (error . g$12129$XGD4L)
        (eqv? . g$12128$XGD4L)
        (equal? . g$12127$XGD4L)
        (eq? . g$12126$XGD4L)
        (dynamic-wind . g$12125$XGD4L)
        (div0-and-mod0 . g$12124$XGD4L)
        (mod0 . g$12123$XGD4L)
        (div0 . g$12122$XGD4L)
        (div-and-mod . g$12121$XGD4L)
        (mod . g$12120$XGD4L)
        (div . g$12119$XGD4L)
        (denominator . g$12118$XGD4L)
        (cos . g$12117$XGD4L)
        (cons . g$12116$XGD4L)
        (complex? . g$12115$XGD4L)
        (char? . g$12114$XGD4L)
        (char>? . g$12113$XGD4L)
        (char>=? . g$12112$XGD4L)
        (char=? . g$12111$XGD4L)
        (char<? . g$12110$XGD4L)
        (char<=? . g$12109$XGD4L)
        (char->integer . g$12108$XGD4L)
        (ceiling . g$12107$XGD4L)
        (call-with-values . g$12106$XGD4L)
        (call/cc . g$12105$XGD4L)
        (call-with-current-continuation . g$12104$XGD4L)
        (cddddr . g$6235$XGD4L)
        (cdddar . g$6234$XGD4L)
        (cddadr . g$6233$XGD4L)
        (cddaar . g$6232$XGD4L)
        (cdaddr . g$6231$XGD4L)
        (cdadar . g$6230$XGD4L)
        (cdaadr . g$6229$XGD4L)
        (cdaaar . g$6228$XGD4L)
        (cadddr . g$6227$XGD4L)
        (caddar . g$6226$XGD4L)
        (cadadr . g$6225$XGD4L)
        (cadaar . g$6224$XGD4L)
        (caaddr . g$6223$XGD4L)
        (caadar . g$6222$XGD4L)
        (caaadr . g$6221$XGD4L)
        (caaaar . g$6220$XGD4L)
        (cdddr . g$6219$XGD4L)
        (cddar . g$6218$XGD4L)
        (cdadr . g$6217$XGD4L)
        (cdaar . g$6216$XGD4L)
        (caddr . g$6215$XGD4L)
        (cadar . g$6214$XGD4L)
        (caadr . g$6213$XGD4L)
        (caaar . g$6212$XGD4L)
        (cddr . g$6211$XGD4L)
        (cdar . g$6210$XGD4L)
        (cadr . g$6209$XGD4L)
        (caar . g$6208$XGD4L)
        (cdr . g$12103$XGD4L)
        (car . g$12102$XGD4L)
        (boolean? . g$12101$XGD4L)
        (boolean=? . g$12100$XGD4L)
        (atan . g$12099$XGD4L)
        (assertion-violation . g$12098$XGD4L)
        (asin . g$12097$XGD4L)
        (apply . g$12096$XGD4L)
        (append . g$12095$XGD4L)
        (angle . g$12094$XGD4L)
        (acos . g$12093$XGD4L)
        (abs . g$12092$XGD4L)
        (/ . g$12091$XGD4L)
        (* . g$12090$XGD4L)
        (- . g$12089$XGD4L)
        (+ . g$12088$XGD4L)
        (>= . g$12087$XGD4L)
        (> . g$12086$XGD4L)
        (= . g$12085$XGD4L)
        (<= . g$12084$XGD4L)
        (< . g$12083$XGD4L)
        (unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (_ . g$12001$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L)
        (... . g$11998$XGD4L)
        (assert . g$11997$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (identifier-syntax . g$11987$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (let-values . g$11979$XGD4L)
        (let*-values . g$11978$XGD4L)
        (case . g$11974$XGD4L)
        (if . g$11970$XGD4L)
        (letrec* . g$11969$XGD4L)
        (letrec . g$11968$XGD4L)
        (lambda . g$11965$XGD4L)
        (quote . g$11962$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (begin . g$11955$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12617$XGD4L
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6699$XGD4L)
        (remv . g$6700$XGD4L)
        (remp . g$6685$XGD4L)
        (remq . g$6701$XGD4L)
        (partition . g$6684$XGD4L)
        (memv . g$12350$XGD4L)
        (memq . g$12349$XGD4L)
        (memp . g$6691$XGD4L)
        (member . g$6690$XGD4L)
        (exists . g$6695$XGD4L)
        (for-all . g$6694$XGD4L)
        (fold-right . g$6698$XGD4L)
        (fold-left . g$6697$XGD4L)
        (find . g$6683$XGD4L)
        (filter . g$6686$XGD4L)
        (cons* . g$6696$XGD4L)
        (assv . g$6687$XGD4L)
        (assq . g$12348$XGD4L)
        (assp . g$6689$XGD4L)
        (assoc . g$6688$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12618$XGD4L
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$12442$XGD4L)
        (call-with-input-file . g$12441$XGD4L)
        (write-char . g$12440$XGD4L)
        (write . g$12439$XGD4L)
        (with-output-to-file . g$12438$XGD4L)
        (with-input-from-file . g$12437$XGD4L)
        (read-char . g$12436$XGD4L)
        (read . g$12435$XGD4L)
        (peek-char . g$12434$XGD4L)
        (open-output-file . g$12433$XGD4L)
        (open-input-file . g$12432$XGD4L)
        (newline . g$12431$XGD4L)
        (display . g$12430$XGD4L)
        (close-output-port . g$12429$XGD4L)
        (close-input-port . g$12428$XGD4L)
        (eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12619$XGD4L
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12380$XGD4L)
        (utf32->string . g$12339$XGD4L)
        (utf16->string . g$12338$XGD4L)
        (utf8->string . g$12337$XGD4L)
        (uint-list->bytevector . g$12336$XGD4L)
        (u8-list->bytevector . g$12335$XGD4L)
        (string->utf8 . g$12334$XGD4L)
        (string->utf32 . g$12333$XGD4L)
        (string->utf16 . g$12332$XGD4L)
        (sint-list->bytevector . g$12331$XGD4L)
        (native-endianness . g$6775$XGD4L)
        (bytevector? . g$12330$XGD4L)
        (bytevector=? . g$12329$XGD4L)
        (bytevector-uint-set! . g$12328$XGD4L)
        (bytevector-uint-ref . g$12327$XGD4L)
        (bytevector-u8-set! . g$12326$XGD4L)
        (bytevector-u8-ref . g$12325$XGD4L)
        (bytevector-u64-set! . g$6796$XGD4L)
        (bytevector-u64-ref . g$6792$XGD4L)
        (bytevector-u64-native-set! . g$6798$XGD4L)
        (bytevector-u64-native-ref . g$6794$XGD4L)
        (bytevector-u32-set! . g$6788$XGD4L)
        (bytevector-u32-ref . g$6784$XGD4L)
        (bytevector-u32-native-set! . g$6790$XGD4L)
        (bytevector-u32-native-ref . g$6786$XGD4L)
        (bytevector-u16-set! . g$6780$XGD4L)
        (bytevector-u16-ref . g$6776$XGD4L)
        (bytevector-u16-native-set! . g$6782$XGD4L)
        (bytevector-u16-native-ref . g$6778$XGD4L)
        (bytevector-sint-set! . g$12324$XGD4L)
        (bytevector-sint-ref . g$12323$XGD4L)
        (bytevector-s8-set! . g$12322$XGD4L)
        (bytevector-s8-ref . g$12321$XGD4L)
        (bytevector-s64-set! . g$6797$XGD4L)
        (bytevector-s64-ref . g$6793$XGD4L)
        (bytevector-s64-native-set! . g$6799$XGD4L)
        (bytevector-s64-native-ref . g$6795$XGD4L)
        (bytevector-s32-set! . g$6789$XGD4L)
        (bytevector-s32-ref . g$6785$XGD4L)
        (bytevector-s32-native-set! . g$6791$XGD4L)
        (bytevector-s32-native-ref . g$6787$XGD4L)
        (bytevector-s16-set! . g$6781$XGD4L)
        (bytevector-s16-ref . g$6777$XGD4L)
        (bytevector-s16-native-set! . g$6783$XGD4L)
        (bytevector-s16-native-ref . g$6779$XGD4L)
        (bytevector-length . g$12320$XGD4L)
        (bytevector-ieee-single-set! . g$12319$XGD4L)
        (bytevector-ieee-single-ref . g$12318$XGD4L)
        (bytevector-ieee-single-native-set! . g$6802$XGD4L)
        (bytevector-ieee-single-native-ref . g$6800$XGD4L)
        (bytevector-ieee-double-set! . g$12317$XGD4L)
        (bytevector-ieee-double-ref . g$12316$XGD4L)
        (bytevector-ieee-double-native-set! . g$6803$XGD4L)
        (bytevector-ieee-double-native-ref . g$6801$XGD4L)
        (bytevector-fill! . g$12315$XGD4L)
        (bytevector-copy! . g$12314$XGD4L)
        (bytevector-copy . g$12313$XGD4L)
        (bytevector->uint-list . g$12312$XGD4L)
        (bytevector->u8-list . g$12311$XGD4L)
        (bytevector->sint-list . g$12310$XGD4L)
        (endianness . g$11996$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12620$XGD4L
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12502$XGD4L)
        (string-titlecase . g$12501$XGD4L)
        (string-normalize-nfkd . g$12500$XGD4L)
        (string-normalize-nfkc . g$12499$XGD4L)
        (string-normalize-nfd . g$12498$XGD4L)
        (string-normalize-nfc . g$12497$XGD4L)
        (string-foldcase . g$12496$XGD4L)
        (string-downcase . g$12495$XGD4L)
        (string-ci>? . g$12494$XGD4L)
        (string-ci>=? . g$12493$XGD4L)
        (string-ci=? . g$12492$XGD4L)
        (string-ci<? . g$12491$XGD4L)
        (string-ci<=? . g$12490$XGD4L)
        (char-whitespace? . g$12489$XGD4L)
        (char-upper-case? . g$12488$XGD4L)
        (char-title-case? . g$12487$XGD4L)
        (char-numeric? . g$12486$XGD4L)
        (char-lower-case? . g$12485$XGD4L)
        (char-general-category . g$12484$XGD4L)
        (char-upcase . g$12483$XGD4L)
        (char-titlecase . g$12482$XGD4L)
        (char-foldcase . g$12481$XGD4L)
        (char-downcase . g$12480$XGD4L)
        (char-ci>? . g$12479$XGD4L)
        (char-ci>=? . g$12478$XGD4L)
        (char-ci=? . g$12477$XGD4L)
        (char-ci<? . g$12476$XGD4L)
        (char-ci<=? . g$12475$XGD4L)
        (char-alphabetic? . g$12474$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12621$XGD4L
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12347$XGD4L)
        (raise-continuable . g$12346$XGD4L)
        (raise . g$12345$XGD4L)
        (guard . g$12011$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12622$XGD4L
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7210$XGD4L)
        (bitwise-reverse-bit-field . g$7211$XGD4L)
        (bitwise-length . g$12225$XGD4L)
        (bitwise-if . g$7204$XGD4L)
        (bitwise-first-bit-set . g$12224$XGD4L)
        (bitwise-copy-bit-field . g$7207$XGD4L)
        (bitwise-copy-bit . g$7205$XGD4L)
        (bitwise-bit-set? . g$12223$XGD4L)
        (bitwise-bit-field . g$12222$XGD4L)
        (bitwise-bit-count . g$12221$XGD4L)
        (bitwise-xor . g$12220$XGD4L)
        (bitwise-ior . g$12219$XGD4L)
        (bitwise-and . g$12218$XGD4L)
        (bitwise-not . g$12217$XGD4L)
        (bitwise-arithmetic-shift-right . g$7209$XGD4L)
        (bitwise-arithmetic-shift-left . g$7208$XGD4L)
        (bitwise-arithmetic-shift . g$12216$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12623$XGD4L
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12263$XGD4L)
        (fxxor . g$12262$XGD4L)
        (fxrotate-bit-field . g$7262$XGD4L)
        (fxreverse-bit-field . g$12261$XGD4L)
        (fxpositive? . g$12260$XGD4L)
        (fxodd? . g$12259$XGD4L)
        (fxnot . g$12258$XGD4L)
        (fxnegative? . g$12257$XGD4L)
        (fxmod0 . g$12256$XGD4L)
        (fxmod . g$12255$XGD4L)
        (fxmin . g$12254$XGD4L)
        (fxmax . g$12253$XGD4L)
        (fxlength . g$12252$XGD4L)
        (fxior . g$12251$XGD4L)
        (fxif . g$7256$XGD4L)
        (fxfirst-bit-set . g$12250$XGD4L)
        (fxeven? . g$12249$XGD4L)
        (fxdiv0-and-mod0 . g$12248$XGD4L)
        (fxdiv0 . g$12247$XGD4L)
        (fxdiv-and-mod . g$12246$XGD4L)
        (fxdiv . g$12245$XGD4L)
        (fxcopy-bit-field . g$7259$XGD4L)
        (fxcopy-bit . g$7257$XGD4L)
        (fxbit-set? . g$12244$XGD4L)
        (fxbit-field . g$7258$XGD4L)
        (fxbit-count . g$12243$XGD4L)
        (fxarithmetic-shift-right . g$7261$XGD4L)
        (fxarithmetic-shift-left . g$7260$XGD4L)
        (fxarithmetic-shift . g$12242$XGD4L)
        (fxand . g$12241$XGD4L)
        (fx>? . g$12240$XGD4L)
        (fx>=? . g$12239$XGD4L)
        (fx=? . g$12238$XGD4L)
        (fx<? . g$12237$XGD4L)
        (fx<=? . g$12236$XGD4L)
        (fx-/carry . g$12235$XGD4L)
        (fx- . g$12234$XGD4L)
        (fx+/carry . g$12233$XGD4L)
        (fx+ . g$12232$XGD4L)
        (fx*/carry . g$12231$XGD4L)
        (fx* . g$12230$XGD4L)
        (greatest-fixnum . g$12229$XGD4L)
        (least-fixnum . g$12228$XGD4L)
        (fixnum-width . g$12227$XGD4L)
        (fixnum? . g$12226$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12624$XGD4L
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7331$XGD4L)
        (no-infinities-violation? . g$7317$XGD4L)
        (make-no-nans-violation . g$7330$XGD4L)
        (make-no-infinities-violation . g$7316$XGD4L)
        (real->flonum . g$12309$XGD4L)
        (flzero? . g$12308$XGD4L)
        (fltruncate . g$12307$XGD4L)
        (fltan . g$12306$XGD4L)
        (flsqrt . g$12305$XGD4L)
        (flsin . g$12304$XGD4L)
        (flround . g$12303$XGD4L)
        (flpositive? . g$12302$XGD4L)
        (flonum? . g$12301$XGD4L)
        (flodd? . g$12300$XGD4L)
        (flnumerator . g$12299$XGD4L)
        (flnegative? . g$12298$XGD4L)
        (flnan? . g$12297$XGD4L)
        (flmod0 . g$12296$XGD4L)
        (flmod . g$12295$XGD4L)
        (flmin . g$12294$XGD4L)
        (flmax . g$12293$XGD4L)
        (fllog . g$12292$XGD4L)
        (flinteger? . g$12291$XGD4L)
        (flinfinite? . g$12290$XGD4L)
        (flfloor . g$12289$XGD4L)
        (flfinite? . g$12288$XGD4L)
        (flexpt . g$12287$XGD4L)
        (flexp . g$12286$XGD4L)
        (fleven? . g$12285$XGD4L)
        (fldiv0-and-mod0 . g$12284$XGD4L)
        (fldiv0 . g$12283$XGD4L)
        (fldiv-and-mod . g$12282$XGD4L)
        (fldiv . g$12281$XGD4L)
        (fldenominator . g$12280$XGD4L)
        (flcos . g$12279$XGD4L)
        (flceiling . g$12278$XGD4L)
        (flatan . g$12277$XGD4L)
        (flasin . g$12276$XGD4L)
        (flacos . g$12275$XGD4L)
        (flabs . g$12274$XGD4L)
        (fl>? . g$12273$XGD4L)
        (fl>=? . g$12272$XGD4L)
        (fl=? . g$12271$XGD4L)
        (fl<? . g$12270$XGD4L)
        (fl<=? . g$12269$XGD4L)
        (fl/ . g$12268$XGD4L)
        (fl- . g$12267$XGD4L)
        (fl+ . g$12266$XGD4L)
        (fl* . g$12265$XGD4L)
        (fixnum->flonum . g$12264$XGD4L)
        (&no-nans . g$12056$XGD4L)
        (&no-infinities . g$12055$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12625$XGD4L
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12454$XGD4L)
        (string-ci-hash . g$12453$XGD4L)
        (string-hash . g$12452$XGD4L)
        (equal-hash . g$12451$XGD4L)
        (hashtable-equivalence-function . g$12450$XGD4L)
        (make-hashtable . g$12449$XGD4L)
        (hashtable-hash-function . g$12448$XGD4L)
        (make-eqv-hashtable . g$6586$XGD4L)
        (make-eq-hashtable . g$6585$XGD4L)
        (hashtable? . g$12447$XGD4L)
        (hashtable-update! . g$6592$XGD4L)
        (hashtable-size . g$6587$XGD4L)
        (hashtable-set! . g$6589$XGD4L)
        (hashtable-ref . g$6588$XGD4L)
        (hashtable-mutable? . g$12446$XGD4L)
        (hashtable-keys . g$12445$XGD4L)
        (hashtable-entries . g$12444$XGD4L)
        (hashtable-delete! . g$6590$XGD4L)
        (hashtable-copy . g$12443$XGD4L)
        (hashtable-contains? . g$6591$XGD4L)
        (hashtable-clear! . g$6593$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12626$XGD4L
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (utf-8-codec . g$12420$XGD4L)
        (utf-16-codec . g$12419$XGD4L)
        (transcoder-error-handling-mode . g$12418$XGD4L)
        (transcoder-eol-style . g$12417$XGD4L)
        (transcoder-codec . g$12416$XGD4L)
        (transcoded-port . g$12415$XGD4L)
        (textual-port? . g$12414$XGD4L)
        (string->bytevector . g$12413$XGD4L)
        (standard-output-port . g$12412$XGD4L)
        (standard-input-port . g$12411$XGD4L)
        (standard-error-port . g$12410$XGD4L)
        (set-port-position! . g$12409$XGD4L)
        (put-u8 . g$12408$XGD4L)
        (put-string . g$12407$XGD4L)
        (put-datum . g$12406$XGD4L)
        (put-char . g$12405$XGD4L)
        (put-bytevector . g$12404$XGD4L)
        (port? . g$12403$XGD4L)
        (port-transcoder . g$12402$XGD4L)
        (port-position . g$12401$XGD4L)
        (port-has-set-port-position!? . g$12400$XGD4L)
        (port-has-port-position? . g$12399$XGD4L)
        (port-eof? . g$12398$XGD4L)
        (output-port-buffer-mode . g$12397$XGD4L)
        (open-string-output-port . g$7516$XGD4L)
        (open-string-input-port . g$12396$XGD4L)
        (open-file-output-port . g$12395$XGD4L)
        (open-file-input/output-port . g$12394$XGD4L)
        (open-file-input-port . g$12393$XGD4L)
        (open-bytevector-output-port . g$12392$XGD4L)
        (open-bytevector-input-port . g$12391$XGD4L)
        (native-transcoder . g$12390$XGD4L)
        (native-eol-style . g$12389$XGD4L)
        (make-transcoder . g$12388$XGD4L)
        (latin-1-codec . g$12387$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (make-i/o-encoding-error . g$7509$XGD4L)
        (make-i/o-decoding-error . g$7494$XGD4L)
        (make-custom-textual-output-port . g$12386$XGD4L)
        (make-custom-textual-input/output-port . g$12385$XGD4L)
        (make-custom-textual-input-port . g$12384$XGD4L)
        (make-custom-binary-output-port . g$12383$XGD4L)
        (make-custom-binary-input/output-port . g$12382$XGD4L)
        (make-custom-binary-input-port . g$12381$XGD4L)
        (lookahead-u8 . g$12379$XGD4L)
        (lookahead-char . g$12378$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (i/o-encoding-error? . g$7511$XGD4L)
        (i/o-encoding-error-char . g$7512$XGD4L)
        (i/o-decoding-error? . g$7495$XGD4L)
        (get-u8 . g$12377$XGD4L)
        (get-string-n! . g$12376$XGD4L)
        (get-string-n . g$12375$XGD4L)
        (get-string-all . g$12374$XGD4L)
        (get-line . g$12373$XGD4L)
        (get-datum . g$12372$XGD4L)
        (get-char . g$12371$XGD4L)
        (get-bytevector-some . g$12370$XGD4L)
        (get-bytevector-n! . g$12369$XGD4L)
        (get-bytevector-n . g$12368$XGD4L)
        (get-bytevector-all . g$12367$XGD4L)
        (flush-output-port . g$12366$XGD4L)
        (close-port . g$12365$XGD4L)
        (call-with-string-output-port . g$12364$XGD4L)
        (call-with-port . g$12363$XGD4L)
        (call-with-bytevector-output-port . g$12362$XGD4L)
        (bytevector->string . g$12361$XGD4L)
        (buffer-mode? . g$12360$XGD4L)
        (binary-port? . g$12359$XGD4L)
        (&i/o-encoding . g$12054$XGD4L)
        (&i/o-decoding . g$12053$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L)
        (error-handling-mode . g$12015$XGD4L)
        (file-options . g$12014$XGD4L)
        (buffer-mode . g$12013$XGD4L)
        (eol-style . g$12012$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12627$XGD4L
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7565$XGD4L)
        (enum-set=? . g$7572$XGD4L)
        (enum-set-universe . g$7566$XGD4L)
        (enum-set-union . g$7573$XGD4L)
        (enum-set-subset? . g$7571$XGD4L)
        (enum-set-projection . g$7577$XGD4L)
        (enum-set-member? . g$7570$XGD4L)
        (enum-set-intersection . g$7574$XGD4L)
        (enum-set-indexer . g$7567$XGD4L)
        (enum-set-difference . g$7575$XGD4L)
        (enum-set-constructor . g$7568$XGD4L)
        (enum-set-complement . g$7576$XGD4L)
        (enum-set->list . g$7569$XGD4L)
        (define-enumeration . g$12026$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12628$XGD4L
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7023$XGD4L)
        (warning? . g$6934$XGD4L)
        (violation? . g$6976$XGD4L)
        (undefined-violation? . g$7100$XGD4L)
        (syntax-violation? . g$7084$XGD4L)
        (syntax-violation-subform . g$7086$XGD4L)
        (syntax-violation-form . g$7085$XGD4L)
        (syntax-violation . g$8983$XGD4L)
        (simple-conditions . g$12344$XGD4L)
        (serious-condition? . g$6948$XGD4L)
        (non-continuable-violation? . g$7038$XGD4L)
        (message-condition? . g$6919$XGD4L)
        (make-who-condition . g$7021$XGD4L)
        (make-warning . g$6933$XGD4L)
        (make-violation . g$6975$XGD4L)
        (make-undefined-violation . g$7099$XGD4L)
        (make-syntax-violation . g$7081$XGD4L)
        (make-serious-condition . g$6947$XGD4L)
        (make-non-continuable-violation . g$7037$XGD4L)
        (make-message-condition . g$6917$XGD4L)
        (make-lexical-violation . g$7065$XGD4L)
        (make-irritants-condition . g$7004$XGD4L)
        (make-implementation-restriction-violation . g$7051$XGD4L)
        (make-error . g$6961$XGD4L)
        (make-assertion-violation . g$6989$XGD4L)
        (lexical-violation? . g$7066$XGD4L)
        (irritants-condition? . g$7006$XGD4L)
        (implementation-restriction-violation? . g$7052$XGD4L)
        (error? . g$6962$XGD4L)
        (condition-who . g$7024$XGD4L)
        (condition-predicate . g$12343$XGD4L)
        (condition-message . g$6920$XGD4L)
        (condition-irritants . g$7007$XGD4L)
        (condition-accessor . g$12342$XGD4L)
        (condition . g$12341$XGD4L)
        (assertion-violation? . g$6990$XGD4L)
        (condition? . g$12340$XGD4L)
        (&non-continuable . g$12042$XGD4L)
        (&undefined . g$12041$XGD4L)
        (&syntax . g$12040$XGD4L)
        (&lexical . g$12039$XGD4L)
        (&implementation-restriction . g$12038$XGD4L)
        (&who . g$12036$XGD4L)
        (&irritants . g$12035$XGD4L)
        (&assertion . g$12034$XGD4L)
        (&violation . g$12033$XGD4L)
        (&error . g$12032$XGD4L)
        (&serious . g$12031$XGD4L)
        (&warning . g$12030$XGD4L)
        (&message . g$12029$XGD4L)
        (&condition . g$12028$XGD4L)
        (define-condition-type . g$12027$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12629$XGD4L
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12466$XGD4L)
        (record-type-uid . g$12465$XGD4L)
        (record-type-sealed? . g$12464$XGD4L)
        (record-type-parent . g$12463$XGD4L)
        (record-type-opaque? . g$12462$XGD4L)
        (record-type-name . g$12461$XGD4L)
        (record-type-generative? . g$12460$XGD4L)
        (record-type-field-names . g$12459$XGD4L)
        (record-rtd . g$12458$XGD4L)
        (record-field-mutable? . g$12457$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12630$XGD4L
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12473$XGD4L)
        (record-predicate . g$12472$XGD4L)
        (record-mutator . g$12471$XGD4L)
        (record-constructor . g$12470$XGD4L)
        (record-accessor . g$12469$XGD4L)
        (make-record-type-descriptor . g$12468$XGD4L)
        (make-record-constructor-descriptor . g$12467$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12631$XGD4L
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12025$XGD4L)
        (parent-rtd . g$12024$XGD4L)
        (nongenerative . g$12023$XGD4L)
        (opaque . g$12022$XGD4L)
        (sealed . g$12021$XGD4L)
        (protocol . g$12020$XGD4L)
        (parent . g$12019$XGD4L)
        (immutable . g$12018$XGD4L)
        (mutable . g$12017$XGD4L)
        (fields . g$12016$XGD4L)
        (record-constructor-descriptor . g$11977$XGD4L)
        (record-type-descriptor . g$11976$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7412$XGD4L
      'g$12632$XGD4L
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8861$XGD4L)
        (&no-nans-rcd . g$12596$XGD4L)
        (&no-nans-rtd . g$12595$XGD4L)
        (&no-infinities-rcd . g$12594$XGD4L)
        (&no-infinities-rtd . g$12593$XGD4L)
        (&i/o-encoding-rcd . g$12592$XGD4L)
        (&i/o-encoding-rtd . g$12591$XGD4L)
        (&i/o-decoding-rcd . g$12590$XGD4L)
        (&i/o-decoding-rtd . g$12589$XGD4L)
        (&i/o-port-rcd . g$12588$XGD4L)
        (&i/o-port-rtd . g$12587$XGD4L)
        (&i/o-file-does-not-exist-rcd . g$12586$XGD4L)
        (&i/o-file-does-not-exist-rtd . g$12585$XGD4L)
        (&i/o-file-already-exists-rcd . g$12584$XGD4L)
        (&i/o-file-already-exists-rtd . g$12583$XGD4L)
        (&i/o-file-is-read-only-rcd . g$12582$XGD4L)
        (&i/o-file-is-read-only-rtd . g$12581$XGD4L)
        (&i/o-file-protection-rcd . g$12580$XGD4L)
        (&i/o-file-protection-rtd . g$12579$XGD4L)
        (&i/o-filename-rcd . g$12578$XGD4L)
        (&i/o-filename-rtd . g$12577$XGD4L)
        (&i/o-invalid-position-rcd . g$12576$XGD4L)
        (&i/o-invalid-position-rtd . g$12575$XGD4L)
        (&i/o-write-rcd . g$12574$XGD4L)
        (&i/o-write-rtd . g$12573$XGD4L)
        (&i/o-read-rcd . g$12572$XGD4L)
        (&i/o-read-rtd . g$12571$XGD4L)
        (&i/o-rcd . g$12570$XGD4L)
        (&i/o-rtd . g$12569$XGD4L)
        (&undefined-rcd . g$12568$XGD4L)
        (&undefined-rtd . g$12567$XGD4L)
        (&syntax-rcd . g$12566$XGD4L)
        (&syntax-rtd . g$12565$XGD4L)
        (&lexical-rcd . g$12564$XGD4L)
        (&lexical-rtd . g$12563$XGD4L)
        (&implementation-restriction-rcd . g$12562$XGD4L)
        (&implementation-restriction-rtd . g$12561$XGD4L)
        (&non-continuable-rcd . g$12560$XGD4L)
        (&non-continuable-rtd . g$12559$XGD4L)
        (&who-rcd . g$12558$XGD4L)
        (&who-rtd . g$12557$XGD4L)
        (&irritants-rcd . g$12556$XGD4L)
        (&irritants-rtd . g$12555$XGD4L)
        (&assertion-rcd . g$12554$XGD4L)
        (&assertion-rtd . g$12553$XGD4L)
        (&violation-rcd . g$12552$XGD4L)
        (&violation-rtd . g$12551$XGD4L)
        (&error-rcd . g$12550$XGD4L)
        (&error-rtd . g$12549$XGD4L)
        (&serious-rcd . g$12548$XGD4L)
        (&serious-rtd . g$12547$XGD4L)
        (&warning-rcd . g$12546$XGD4L)
        (&warning-rtd . g$12545$XGD4L)
        (&message-rcd . g$12544$XGD4L)
        (&message-rtd . g$12543$XGD4L)
        (&condition-rcd . g$12542$XGD4L)
        (&condition-rtd . g$12541$XGD4L)
        (library-letrec* . g$12540$XGD4L)
        (annotation-stripped . g$12539$XGD4L)
        (annotation-source . g$12538$XGD4L)
        (annotation-expression . g$12537$XGD4L)
        (annotation? . g$12536$XGD4L)
        (read-annotated . g$12535$XGD4L)
        (tanh . g$12534$XGD4L)
        (cosh . g$12533$XGD4L)
        (sinh . g$12532$XGD4L)
        (make-guid . g$12531$XGD4L)
        (unspecified? . g$12530$XGD4L)
        (make-trace . g$12529$XGD4L)
        (make-list . g$12528$XGD4L)
        (last-pair . g$12527$XGD4L)
        (load-r5rs . g$12526$XGD4L)
        (license . g$12525$XGD4L)
        (stacktrace . g$12524$XGD4L)
        (ironscheme-build . g$11921$XGD4L)
        (define-clr-class-internal . g$12523$XGD4L)
        (clr-field-set!-internal . g$12522$XGD4L)
        (clr-field-get-internal . g$12521$XGD4L)
        (clr-cast-internal . g$12520$XGD4L)
        (clr-call-internal . g$12519$XGD4L)
        (clr-new-internal . g$12518$XGD4L)
        (clr-new-array-internal . g$12517$XGD4L)
        (clr-is-internal . g$12516$XGD4L)
        (clr-reference-internal . g$12515$XGD4L)
        (clr-using-internal . g$12514$XGD4L)
        (clr-clear-usings-internal . g$12513$XGD4L)
        (syntax-error . g$8980$XGD4L)
        (syntax-dispatch . g$8856$XGD4L)
        (compile-core . g$12512$XGD4L)
        (eval-core . g$12511$XGD4L)
        (set-symbol-value! . g$12510$XGD4L)
        (symbol-value . g$12509$XGD4L)
        (ungensym . g$12508$XGD4L)
        (gensym . g$12507$XGD4L)
        (void . g$12506$XGD4L)
        (load-serialized-library . g$12505$XGD4L)
        (serialize-library . g$12504$XGD4L)
        (compile-system-libraries . g$11923$XGD4L)
        (compile->closure . g$11925$XGD4L)
        (compile . g$11924$XGD4L)
        (load . g$11920$XGD4L)
        (interaction-environment . g$8989$XGD4L)
        (char-ready? . g$12503$XGD4L)
        (string-upcase . g$12502$XGD4L)
        (string-titlecase . g$12501$XGD4L)
        (string-normalize-nfkd . g$12500$XGD4L)
        (string-normalize-nfkc . g$12499$XGD4L)
        (string-normalize-nfd . g$12498$XGD4L)
        (string-normalize-nfc . g$12497$XGD4L)
        (string-foldcase . g$12496$XGD4L)
        (string-downcase . g$12495$XGD4L)
        (string-ci>? . g$12494$XGD4L)
        (string-ci>=? . g$12493$XGD4L)
        (string-ci=? . g$12492$XGD4L)
        (string-ci<? . g$12491$XGD4L)
        (string-ci<=? . g$12490$XGD4L)
        (char-whitespace? . g$12489$XGD4L)
        (char-upper-case? . g$12488$XGD4L)
        (char-title-case? . g$12487$XGD4L)
        (char-numeric? . g$12486$XGD4L)
        (char-lower-case? . g$12485$XGD4L)
        (char-general-category . g$12484$XGD4L)
        (char-upcase . g$12483$XGD4L)
        (char-titlecase . g$12482$XGD4L)
        (char-foldcase . g$12481$XGD4L)
        (char-downcase . g$12480$XGD4L)
        (char-ci>? . g$12479$XGD4L)
        (char-ci>=? . g$12478$XGD4L)
        (char-ci=? . g$12477$XGD4L)
        (char-ci<? . g$12476$XGD4L)
        (char-ci<=? . g$12475$XGD4L)
        (char-alphabetic? . g$12474$XGD4L)
        (variable-transformer-procedure . g$8593$XGD4L)
        (variable-transformer? . g$8592$XGD4L)
        (make-variable-transformer . g$8591$XGD4L)
        (identifier? . g$8984$XGD4L)
        (generate-temporaries . g$8976$XGD4L)
        (free-identifier=? . g$8977$XGD4L)
        (syntax->datum . g$8986$XGD4L)
        (datum->syntax . g$8985$XGD4L)
        (bound-identifier=? . g$8978$XGD4L)
        (record-type-descriptor? . g$12473$XGD4L)
        (record-predicate . g$12472$XGD4L)
        (record-mutator . g$12471$XGD4L)
        (record-constructor . g$12470$XGD4L)
        (record-accessor . g$12469$XGD4L)
        (make-record-type-descriptor . g$12468$XGD4L)
        (make-record-constructor-descriptor . g$12467$XGD4L)
        (record? . g$12466$XGD4L)
        (record-type-uid . g$12465$XGD4L)
        (record-type-sealed? . g$12464$XGD4L)
        (record-type-parent . g$12463$XGD4L)
        (record-type-opaque? . g$12462$XGD4L)
        (record-type-name . g$12461$XGD4L)
        (record-type-generative? . g$12460$XGD4L)
        (record-type-field-names . g$12459$XGD4L)
        (record-rtd . g$12458$XGD4L)
        (record-field-mutable? . g$12457$XGD4L)
        (delete-file . g$6619$XGD4L)
        (file-exists? . g$6618$XGD4L)
        (vector-sort! . g$12456$XGD4L)
        (vector-sort . g$12455$XGD4L)
        (list-sort . g$7125$XGD4L)
        (symbol-hash . g$12454$XGD4L)
        (string-ci-hash . g$12453$XGD4L)
        (string-hash . g$12452$XGD4L)
        (equal-hash . g$12451$XGD4L)
        (hashtable-equivalence-function . g$12450$XGD4L)
        (make-hashtable . g$12449$XGD4L)
        (hashtable-hash-function . g$12448$XGD4L)
        (make-eqv-hashtable . g$6586$XGD4L)
        (make-eq-hashtable . g$6585$XGD4L)
        (hashtable? . g$12447$XGD4L)
        (hashtable-update! . g$6592$XGD4L)
        (hashtable-size . g$6587$XGD4L)
        (hashtable-set! . g$6589$XGD4L)
        (hashtable-ref . g$6588$XGD4L)
        (hashtable-mutable? . g$12446$XGD4L)
        (hashtable-keys . g$12445$XGD4L)
        (hashtable-entries . g$12444$XGD4L)
        (hashtable-delete! . g$6590$XGD4L)
        (hashtable-copy . g$12443$XGD4L)
        (hashtable-contains? . g$6591$XGD4L)
        (hashtable-clear! . g$6593$XGD4L)
        (call-with-output-file . g$12442$XGD4L)
        (call-with-input-file . g$12441$XGD4L)
        (write-char . g$12440$XGD4L)
        (write . g$12439$XGD4L)
        (with-output-to-file . g$12438$XGD4L)
        (with-input-from-file . g$12437$XGD4L)
        (read-char . g$12436$XGD4L)
        (read . g$12435$XGD4L)
        (peek-char . g$12434$XGD4L)
        (open-output-file . g$12433$XGD4L)
        (open-input-file . g$12432$XGD4L)
        (newline . g$12431$XGD4L)
        (display . g$12430$XGD4L)
        (close-output-port . g$12429$XGD4L)
        (close-input-port . g$12428$XGD4L)
        (eof-object? . g$12427$XGD4L)
        (eof-object . g$12426$XGD4L)
        (current-error-port . g$12425$XGD4L)
        (current-output-port . g$12424$XGD4L)
        (current-input-port . g$12423$XGD4L)
        (output-port? . g$12422$XGD4L)
        (input-port? . g$12421$XGD4L)
        (utf-8-codec . g$12420$XGD4L)
        (utf-16-codec . g$12419$XGD4L)
        (transcoder-error-handling-mode . g$12418$XGD4L)
        (transcoder-eol-style . g$12417$XGD4L)
        (transcoder-codec . g$12416$XGD4L)
        (transcoded-port . g$12415$XGD4L)
        (textual-port? . g$12414$XGD4L)
        (string->bytevector . g$12413$XGD4L)
        (standard-output-port . g$12412$XGD4L)
        (standard-input-port . g$12411$XGD4L)
        (standard-error-port . g$12410$XGD4L)
        (set-port-position! . g$12409$XGD4L)
        (put-u8 . g$12408$XGD4L)
        (put-string . g$12407$XGD4L)
        (put-datum . g$12406$XGD4L)
        (put-char . g$12405$XGD4L)
        (put-bytevector . g$12404$XGD4L)
        (port? . g$12403$XGD4L)
        (port-transcoder . g$12402$XGD4L)
        (port-position . g$12401$XGD4L)
        (port-has-set-port-position!? . g$12400$XGD4L)
        (port-has-port-position? . g$12399$XGD4L)
        (port-eof? . g$12398$XGD4L)
        (output-port-buffer-mode . g$12397$XGD4L)
        (open-string-output-port . g$7516$XGD4L)
        (open-string-input-port . g$12396$XGD4L)
        (open-file-output-port . g$12395$XGD4L)
        (open-file-input/output-port . g$12394$XGD4L)
        (open-file-input-port . g$12393$XGD4L)
        (open-bytevector-output-port . g$12392$XGD4L)
        (open-bytevector-input-port . g$12391$XGD4L)
        (native-transcoder . g$12390$XGD4L)
        (native-eol-style . g$12389$XGD4L)
        (make-transcoder . g$12388$XGD4L)
        (latin-1-codec . g$12387$XGD4L)
        (make-i/o-write-error . g$7373$XGD4L)
        (make-i/o-read-error . g$7359$XGD4L)
        (make-i/o-port-error . g$7478$XGD4L)
        (make-i/o-invalid-position-error . g$7388$XGD4L)
        (make-i/o-filename-error . g$7405$XGD4L)
        (make-i/o-file-protection-error . g$7421$XGD4L)
        (make-i/o-file-is-read-only-error . g$7435$XGD4L)
        (make-i/o-file-does-not-exist-error . g$7463$XGD4L)
        (make-i/o-file-already-exists-error . g$7449$XGD4L)
        (make-i/o-error . g$7345$XGD4L)
        (make-i/o-encoding-error . g$7509$XGD4L)
        (make-i/o-decoding-error . g$7494$XGD4L)
        (make-custom-textual-output-port . g$12386$XGD4L)
        (make-custom-textual-input/output-port . g$12385$XGD4L)
        (make-custom-textual-input-port . g$12384$XGD4L)
        (make-custom-binary-output-port . g$12383$XGD4L)
        (make-custom-binary-input/output-port . g$12382$XGD4L)
        (make-custom-binary-input-port . g$12381$XGD4L)
        (make-bytevector . g$12380$XGD4L)
        (lookahead-u8 . g$12379$XGD4L)
        (lookahead-char . g$12378$XGD4L)
        (i/o-write-error? . g$7374$XGD4L)
        (i/o-read-error? . g$7360$XGD4L)
        (i/o-port-error? . g$7480$XGD4L)
        (i/o-invalid-position-error? . g$7390$XGD4L)
        (i/o-error-position . g$7391$XGD4L)
        (i/o-filename-error? . g$7407$XGD4L)
        (i/o-file-protection-error? . g$7422$XGD4L)
        (i/o-file-is-read-only-error? . g$7436$XGD4L)
        (i/o-file-does-not-exist-error? . g$7464$XGD4L)
        (i/o-file-already-exists-error? . g$7450$XGD4L)
        (i/o-error? . g$7346$XGD4L)
        (i/o-error-port . g$7481$XGD4L)
        (i/o-error-filename . g$7408$XGD4L)
        (i/o-encoding-error? . g$7511$XGD4L)
        (i/o-encoding-error-char . g$7512$XGD4L)
        (i/o-decoding-error? . g$7495$XGD4L)
        (get-u8 . g$12377$XGD4L)
        (get-string-n! . g$12376$XGD4L)
        (get-string-n . g$12375$XGD4L)
        (get-string-all . g$12374$XGD4L)
        (get-line . g$12373$XGD4L)
        (get-datum . g$12372$XGD4L)
        (get-char . g$12371$XGD4L)
        (get-bytevector-some . g$12370$XGD4L)
        (get-bytevector-n! . g$12369$XGD4L)
        (get-bytevector-n . g$12368$XGD4L)
        (get-bytevector-all . g$12367$XGD4L)
        (flush-output-port . g$12366$XGD4L)
        (close-port . g$12365$XGD4L)
        (call-with-string-output-port . g$12364$XGD4L)
        (call-with-port . g$12363$XGD4L)
        (call-with-bytevector-output-port . g$12362$XGD4L)
        (bytevector->string . g$12361$XGD4L)
        (buffer-mode? . g$12360$XGD4L)
        (binary-port? . g$12359$XGD4L)
        (scheme-report-environment . g$8967$XGD4L)
        (quotient . g$7112$XGD4L)
        (null-environment . g$8966$XGD4L)
        (remainder . g$7113$XGD4L)
        (modulo . g$7114$XGD4L)
        (inexact->exact . g$12358$XGD4L)
        (force . g$12357$XGD4L)
        (exact->inexact . g$12356$XGD4L)
        (exit . g$12355$XGD4L)
        (command-line . g$11917$XGD4L)
        (string-fill! . g$12354$XGD4L)
        (string-set! . g$12353$XGD4L)
        (set-cdr! . g$12352$XGD4L)
        (set-car! . g$12351$XGD4L)
        (remove . g$6699$XGD4L)
        (remv . g$6700$XGD4L)
        (remp . g$6685$XGD4L)
        (remq . g$6701$XGD4L)
        (partition . g$6684$XGD4L)
        (memv . g$12350$XGD4L)
        (memq . g$12349$XGD4L)
        (memp . g$6691$XGD4L)
        (member . g$6690$XGD4L)
        (exists . g$6695$XGD4L)
        (for-all . g$6694$XGD4L)
        (fold-right . g$6698$XGD4L)
        (fold-left . g$6697$XGD4L)
        (find . g$6683$XGD4L)
        (filter . g$6686$XGD4L)
        (cons* . g$6696$XGD4L)
        (assv . g$6687$XGD4L)
        (assq . g$12348$XGD4L)
        (assp . g$6689$XGD4L)
        (assoc . g$6688$XGD4L)
        (with-exception-handler . g$12347$XGD4L)
        (raise-continuable . g$12346$XGD4L)
        (raise . g$12345$XGD4L)
        (eval . g$8969$XGD4L)
        (environment . g$8965$XGD4L)
        (make-enumeration . g$7565$XGD4L)
        (enum-set=? . g$7572$XGD4L)
        (enum-set-universe . g$7566$XGD4L)
        (enum-set-union . g$7573$XGD4L)
        (enum-set-subset? . g$7571$XGD4L)
        (enum-set-projection . g$7577$XGD4L)
        (enum-set-member? . g$7570$XGD4L)
        (enum-set-intersection . g$7574$XGD4L)
        (enum-set-indexer . g$7567$XGD4L)
        (enum-set-difference . g$7575$XGD4L)
        (enum-set-constructor . g$7568$XGD4L)
        (enum-set-complement . g$7576$XGD4L)
        (enum-set->list . g$7569$XGD4L)
        (who-condition? . g$7023$XGD4L)
        (warning? . g$6934$XGD4L)
        (violation? . g$6976$XGD4L)
        (undefined-violation? . g$7100$XGD4L)
        (syntax-violation? . g$7084$XGD4L)
        (syntax-violation-subform . g$7086$XGD4L)
        (syntax-violation-form . g$7085$XGD4L)
        (syntax-violation . g$8983$XGD4L)
        (simple-conditions . g$12344$XGD4L)
        (serious-condition? . g$6948$XGD4L)
        (non-continuable-violation? . g$7038$XGD4L)
        (message-condition? . g$6919$XGD4L)
        (make-who-condition . g$7021$XGD4L)
        (make-warning . g$6933$XGD4L)
        (make-violation . g$6975$XGD4L)
        (make-undefined-violation . g$7099$XGD4L)
        (make-syntax-violation . g$7081$XGD4L)
        (make-serious-condition . g$6947$XGD4L)
        (make-non-continuable-violation . g$7037$XGD4L)
        (make-message-condition . g$6917$XGD4L)
        (make-lexical-violation . g$7065$XGD4L)
        (make-irritants-condition . g$7004$XGD4L)
        (make-implementation-restriction-violation . g$7051$XGD4L)
        (make-error . g$6961$XGD4L)
        (make-assertion-violation . g$6989$XGD4L)
        (lexical-violation? . g$7066$XGD4L)
        (irritants-condition? . g$7006$XGD4L)
        (implementation-restriction-violation? . g$7052$XGD4L)
        (error? . g$6962$XGD4L)
        (condition-who . g$7024$XGD4L)
        (condition-predicate . g$12343$XGD4L)
        (condition-message . g$6920$XGD4L)
        (condition-irritants . g$7007$XGD4L)
        (condition-accessor . g$12342$XGD4L)
        (condition . g$12341$XGD4L)
        (assertion-violation? . g$6990$XGD4L)
        (condition? . g$12340$XGD4L)
        (utf32->string . g$12339$XGD4L)
        (utf16->string . g$12338$XGD4L)
        (utf8->string . g$12337$XGD4L)
        (uint-list->bytevector . g$12336$XGD4L)
        (u8-list->bytevector . g$12335$XGD4L)
        (string->utf8 . g$12334$XGD4L)
        (string->utf32 . g$12333$XGD4L)
        (string->utf16 . g$12332$XGD4L)
        (sint-list->bytevector . g$12331$XGD4L)
        (native-endianness . g$6775$XGD4L)
        (bytevector? . g$12330$XGD4L)
        (bytevector=? . g$12329$XGD4L)
        (bytevector-uint-set! . g$12328$XGD4L)
        (bytevector-uint-ref . g$12327$XGD4L)
        (bytevector-u8-set! . g$12326$XGD4L)
        (bytevector-u8-ref . g$12325$XGD4L)
        (bytevector-u64-set! . g$6796$XGD4L)
        (bytevector-u64-ref . g$6792$XGD4L)
        (bytevector-u64-native-set! . g$6798$XGD4L)
        (bytevector-u64-native-ref . g$6794$XGD4L)
        (bytevector-u32-set! . g$6788$XGD4L)
        (bytevector-u32-ref . g$6784$XGD4L)
        (bytevector-u32-native-set! . g$6790$XGD4L)
        (bytevector-u32-native-ref . g$6786$XGD4L)
        (bytevector-u16-set! . g$6780$XGD4L)
        (bytevector-u16-ref . g$6776$XGD4L)
        (bytevector-u16-native-set! . g$6782$XGD4L)
        (bytevector-u16-native-ref . g$6778$XGD4L)
        (bytevector-sint-set! . g$12324$XGD4L)
        (bytevector-sint-ref . g$12323$XGD4L)
        (bytevector-s8-set! . g$12322$XGD4L)
        (bytevector-s8-ref . g$12321$XGD4L)
        (bytevector-s64-set! . g$6797$XGD4L)
        (bytevector-s64-ref . g$6793$XGD4L)
        (bytevector-s64-native-set! . g$6799$XGD4L)
        (bytevector-s64-native-ref . g$6795$XGD4L)
        (bytevector-s32-set! . g$6789$XGD4L)
        (bytevector-s32-ref . g$6785$XGD4L)
        (bytevector-s32-native-set! . g$6791$XGD4L)
        (bytevector-s32-native-ref . g$6787$XGD4L)
        (bytevector-s16-set! . g$6781$XGD4L)
        (bytevector-s16-ref . g$6777$XGD4L)
        (bytevector-s16-native-set! . g$6783$XGD4L)
        (bytevector-s16-native-ref . g$6779$XGD4L)
        (bytevector-length . g$12320$XGD4L)
        (bytevector-ieee-single-set! . g$12319$XGD4L)
        (bytevector-ieee-single-ref . g$12318$XGD4L)
        (bytevector-ieee-single-native-set! . g$6802$XGD4L)
        (bytevector-ieee-single-native-ref . g$6800$XGD4L)
        (bytevector-ieee-double-set! . g$12317$XGD4L)
        (bytevector-ieee-double-ref . g$12316$XGD4L)
        (bytevector-ieee-double-native-set! . g$6803$XGD4L)
        (bytevector-ieee-double-native-ref . g$6801$XGD4L)
        (bytevector-fill! . g$12315$XGD4L)
        (bytevector-copy! . g$12314$XGD4L)
        (bytevector-copy . g$12313$XGD4L)
        (bytevector->uint-list . g$12312$XGD4L)
        (bytevector->u8-list . g$12311$XGD4L)
        (bytevector->sint-list . g$12310$XGD4L)
        (no-nans-violation? . g$7331$XGD4L)
        (no-infinities-violation? . g$7317$XGD4L)
        (make-no-nans-violation . g$7330$XGD4L)
        (make-no-infinities-violation . g$7316$XGD4L)
        (real->flonum . g$12309$XGD4L)
        (flzero? . g$12308$XGD4L)
        (fltruncate . g$12307$XGD4L)
        (fltan . g$12306$XGD4L)
        (flsqrt . g$12305$XGD4L)
        (flsin . g$12304$XGD4L)
        (flround . g$12303$XGD4L)
        (flpositive? . g$12302$XGD4L)
        (flonum? . g$12301$XGD4L)
        (flodd? . g$12300$XGD4L)
        (flnumerator . g$12299$XGD4L)
        (flnegative? . g$12298$XGD4L)
        (flnan? . g$12297$XGD4L)
        (flmod0 . g$12296$XGD4L)
        (flmod . g$12295$XGD4L)
        (flmin . g$12294$XGD4L)
        (flmax . g$12293$XGD4L)
        (fllog . g$12292$XGD4L)
        (flinteger? . g$12291$XGD4L)
        (flinfinite? . g$12290$XGD4L)
        (flfloor . g$12289$XGD4L)
        (flfinite? . g$12288$XGD4L)
        (flexpt . g$12287$XGD4L)
        (flexp . g$12286$XGD4L)
        (fleven? . g$12285$XGD4L)
        (fldiv0-and-mod0 . g$12284$XGD4L)
        (fldiv0 . g$12283$XGD4L)
        (fldiv-and-mod . g$12282$XGD4L)
        (fldiv . g$12281$XGD4L)
        (fldenominator . g$12280$XGD4L)
        (flcos . g$12279$XGD4L)
        (flceiling . g$12278$XGD4L)
        (flatan . g$12277$XGD4L)
        (flasin . g$12276$XGD4L)
        (flacos . g$12275$XGD4L)
        (flabs . g$12274$XGD4L)
        (fl>? . g$12273$XGD4L)
        (fl>=? . g$12272$XGD4L)
        (fl=? . g$12271$XGD4L)
        (fl<? . g$12270$XGD4L)
        (fl<=? . g$12269$XGD4L)
        (fl/ . g$12268$XGD4L)
        (fl- . g$12267$XGD4L)
        (fl+ . g$12266$XGD4L)
        (fl* . g$12265$XGD4L)
        (fixnum->flonum . g$12264$XGD4L)
        (fxzero? . g$12263$XGD4L)
        (fxxor . g$12262$XGD4L)
        (fxrotate-bit-field . g$7262$XGD4L)
        (fxreverse-bit-field . g$12261$XGD4L)
        (fxpositive? . g$12260$XGD4L)
        (fxodd? . g$12259$XGD4L)
        (fxnot . g$12258$XGD4L)
        (fxnegative? . g$12257$XGD4L)
        (fxmod0 . g$12256$XGD4L)
        (fxmod . g$12255$XGD4L)
        (fxmin . g$12254$XGD4L)
        (fxmax . g$12253$XGD4L)
        (fxlength . g$12252$XGD4L)
        (fxior . g$12251$XGD4L)
        (fxif . g$7256$XGD4L)
        (fxfirst-bit-set . g$12250$XGD4L)
        (fxeven? . g$12249$XGD4L)
        (fxdiv0-and-mod0 . g$12248$XGD4L)
        (fxdiv0 . g$12247$XGD4L)
        (fxdiv-and-mod . g$12246$XGD4L)
        (fxdiv . g$12245$XGD4L)
        (fxcopy-bit-field . g$7259$XGD4L)
        (fxcopy-bit . g$7257$XGD4L)
        (fxbit-set? . g$12244$XGD4L)
        (fxbit-field . g$7258$XGD4L)
        (fxbit-count . g$12243$XGD4L)
        (fxarithmetic-shift-right . g$7261$XGD4L)
        (fxarithmetic-shift-left . g$7260$XGD4L)
        (fxarithmetic-shift . g$12242$XGD4L)
        (fxand . g$12241$XGD4L)
        (fx>? . g$12240$XGD4L)
        (fx>=? . g$12239$XGD4L)
        (fx=? . g$12238$XGD4L)
        (fx<? . g$12237$XGD4L)
        (fx<=? . g$12236$XGD4L)
        (fx-/carry . g$12235$XGD4L)
        (fx- . g$12234$XGD4L)
        (fx+/carry . g$12233$XGD4L)
        (fx+ . g$12232$XGD4L)
        (fx*/carry . g$12231$XGD4L)
        (fx* . g$12230$XGD4L)
        (greatest-fixnum . g$12229$XGD4L)
        (least-fixnum . g$12228$XGD4L)
        (fixnum-width . g$12227$XGD4L)
        (fixnum? . g$12226$XGD4L)
        (bitwise-rotate-bit-field . g$7210$XGD4L)
        (bitwise-reverse-bit-field . g$7211$XGD4L)
        (bitwise-length . g$12225$XGD4L)
        (bitwise-if . g$7204$XGD4L)
        (bitwise-first-bit-set . g$12224$XGD4L)
        (bitwise-copy-bit-field . g$7207$XGD4L)
        (bitwise-copy-bit . g$7205$XGD4L)
        (bitwise-bit-set? . g$12223$XGD4L)
        (bitwise-bit-field . g$12222$XGD4L)
        (bitwise-bit-count . g$12221$XGD4L)
        (bitwise-xor . g$12220$XGD4L)
        (bitwise-ior . g$12219$XGD4L)
        (bitwise-and . g$12218$XGD4L)
        (bitwise-not . g$12217$XGD4L)
        (bitwise-arithmetic-shift-right . g$7209$XGD4L)
        (bitwise-arithmetic-shift-left . g$7208$XGD4L)
        (bitwise-arithmetic-shift . g$12216$XGD4L)
        (zero? . g$12215$XGD4L)
        (vector? . g$12214$XGD4L)
        (vector-set! . g$12213$XGD4L)
        (vector-ref . g$12212$XGD4L)
        (vector-map . g$12211$XGD4L)
        (vector-length . g$12210$XGD4L)
        (vector-for-each . g$12209$XGD4L)
        (vector-fill! . g$12208$XGD4L)
        (vector->list . g$12207$XGD4L)
        (vector . g$12206$XGD4L)
        (values . g$12205$XGD4L)
        (truncate . g$12204$XGD4L)
        (tan . g$12203$XGD4L)
        (symbol? . g$12202$XGD4L)
        (symbol=? . g$12201$XGD4L)
        (symbol->string . g$12200$XGD4L)
        (substring . g$12199$XGD4L)
        (string? . g$12198$XGD4L)
        (string>? . g$12197$XGD4L)
        (string>=? . g$12196$XGD4L)
        (string=? . g$12195$XGD4L)
        (string<? . g$12194$XGD4L)
        (string<=? . g$12193$XGD4L)
        (string-ref . g$12192$XGD4L)
        (string-length . g$12191$XGD4L)
        (string-for-each . g$12190$XGD4L)
        (string-copy . g$12189$XGD4L)
        (string-append . g$12188$XGD4L)
        (string->symbol . g$12187$XGD4L)
        (string->number . g$12186$XGD4L)
        (string->list . g$12185$XGD4L)
        (string . g$12184$XGD4L)
        (sqrt . g$12183$XGD4L)
        (sin . g$12182$XGD4L)
        (round . g$12181$XGD4L)
        (reverse . g$12180$XGD4L)
        (real? . g$12179$XGD4L)
        (real-valued? . g$12178$XGD4L)
        (real-part . g$12177$XGD4L)
        (rationalize . g$6236$XGD4L)
        (rational? . g$12176$XGD4L)
        (rational-valued? . g$12175$XGD4L)
        (procedure? . g$12174$XGD4L)
        (positive? . g$12173$XGD4L)
        (pair? . g$12172$XGD4L)
        (odd? . g$12171$XGD4L)
        (numerator . g$12170$XGD4L)
        (number? . g$12169$XGD4L)
        (number->string . g$12168$XGD4L)
        (null? . g$12167$XGD4L)
        (not . g$12166$XGD4L)
        (negative? . g$12165$XGD4L)
        (nan? . g$12164$XGD4L)
        (min . g$12163$XGD4L)
        (max . g$12162$XGD4L)
        (map . g$12161$XGD4L)
        (make-vector . g$12160$XGD4L)
        (make-string . g$12159$XGD4L)
        (make-rectangular . g$12158$XGD4L)
        (make-polar . g$12157$XGD4L)
        (magnitude . g$12156$XGD4L)
        (log . g$12155$XGD4L)
        (list? . g$12154$XGD4L)
        (list-tail . g$12153$XGD4L)
        (list-ref . g$12152$XGD4L)
        (list->vector . g$12151$XGD4L)
        (list->string . g$12150$XGD4L)
        (list . g$12149$XGD4L)
        (length . g$12148$XGD4L)
        (lcm . g$12147$XGD4L)
        (integer? . g$12146$XGD4L)
        (integer-valued? . g$12145$XGD4L)
        (integer->char . g$12144$XGD4L)
        (infinite? . g$12143$XGD4L)
        (inexact? . g$12142$XGD4L)
        (inexact . g$12141$XGD4L)
        (imag-part . g$12140$XGD4L)
        (gcd . g$12139$XGD4L)
        (for-each . g$12138$XGD4L)
        (floor . g$12137$XGD4L)
        (finite? . g$12136$XGD4L)
        (expt . g$12135$XGD4L)
        (exp . g$12134$XGD4L)
        (exact? . g$12133$XGD4L)
        (exact-integer-sqrt . g$12132$XGD4L)
        (exact . g$12131$XGD4L)
        (even? . g$12130$XGD4L)
        (error . g$12129$XGD4L)
        (eqv? . g$12128$XGD4L)
        (equal? . g$12127$XGD4L)
        (eq? . g$12126$XGD4L)
        (dynamic-wind . g$12125$XGD4L)
        (div0-and-mod0 . g$12124$XGD4L)
        (mod0 . g$12123$XGD4L)
        (div0 . g$12122$XGD4L)
        (div-and-mod . g$12121$XGD4L)
        (mod . g$12120$XGD4L)
        (div . g$12119$XGD4L)
        (denominator . g$12118$XGD4L)
        (cos . g$12117$XGD4L)
        (cons . g$12116$XGD4L)
        (complex? . g$12115$XGD4L)
        (char? . g$12114$XGD4L)
        (char>? . g$12113$XGD4L)
        (char>=? . g$12112$XGD4L)
        (char=? . g$12111$XGD4L)
        (char<? . g$12110$XGD4L)
        (char<=? . g$12109$XGD4L)
        (char->integer . g$12108$XGD4L)
        (ceiling . g$12107$XGD4L)
        (call-with-values . g$12106$XGD4L)
        (call/cc . g$12105$XGD4L)
        (call-with-current-continuation . g$12104$XGD4L)
        (cddddr . g$6235$XGD4L)
        (cdddar . g$6234$XGD4L)
        (cddadr . g$6233$XGD4L)
        (cddaar . g$6232$XGD4L)
        (cdaddr . g$6231$XGD4L)
        (cdadar . g$6230$XGD4L)
        (cdaadr . g$6229$XGD4L)
        (cdaaar . g$6228$XGD4L)
        (cadddr . g$6227$XGD4L)
        (caddar . g$6226$XGD4L)
        (cadadr . g$6225$XGD4L)
        (cadaar . g$6224$XGD4L)
        (caaddr . g$6223$XGD4L)
        (caadar . g$6222$XGD4L)
        (caaadr . g$6221$XGD4L)
        (caaaar . g$6220$XGD4L)
        (cdddr . g$6219$XGD4L)
        (cddar . g$6218$XGD4L)
        (cdadr . g$6217$XGD4L)
        (cdaar . g$6216$XGD4L)
        (caddr . g$6215$XGD4L)
        (cadar . g$6214$XGD4L)
        (caadr . g$6213$XGD4L)
        (caaar . g$6212$XGD4L)
        (cddr . g$6211$XGD4L)
        (cdar . g$6210$XGD4L)
        (cadr . g$6209$XGD4L)
        (caar . g$6208$XGD4L)
        (cdr . g$12103$XGD4L)
        (car . g$12102$XGD4L)
        (boolean? . g$12101$XGD4L)
        (boolean=? . g$12100$XGD4L)
        (atan . g$12099$XGD4L)
        (assertion-violation . g$12098$XGD4L)
        (asin . g$12097$XGD4L)
        (apply . g$12096$XGD4L)
        (append . g$12095$XGD4L)
        (angle . g$12094$XGD4L)
        (acos . g$12093$XGD4L)
        (abs . g$12092$XGD4L)
        (/ . g$12091$XGD4L)
        (* . g$12090$XGD4L)
        (- . g$12089$XGD4L)
        (+ . g$12088$XGD4L)
        (>= . g$12087$XGD4L)
        (> . g$12086$XGD4L)
        (= . g$12085$XGD4L)
        (<= . g$12084$XGD4L)
        (< . g$12083$XGD4L)
        (make-record-printer . g$12082$XGD4L)
        (eqv-hash . g$12081$XGD4L)
        (eq-hash . g$12080$XGD4L)
        (reverse! . g$12079$XGD4L)
        (make-promise . g$12078$XGD4L)
        (load/args . g$11919$XGD4L)
        (printf . g$7680$XGD4L)
        (fprintf . g$7681$XGD4L)
        (format . g$7682$XGD4L)
        (get-arity . g$12077$XGD4L)
        (gc-collect . g$12076$XGD4L)
        (clr-type? . g$12075$XGD4L)
        (get-clr-type . g$12074$XGD4L)
        (get-command-line . g$12073$XGD4L)
        (vector-append . g$12072$XGD4L)
        (vector-filter . g$12071$XGD4L)
        (vector-reverse! . g$12070$XGD4L)
        (vector-contains? . g$12069$XGD4L)
        (vector-index-of . g$12068$XGD4L)
        (vector-copy . g$12067$XGD4L)
        (vector-binary-search . g$12066$XGD4L)
        (get-output-string . g$12065$XGD4L)
        (open-output-string . g$12064$XGD4L)
        (open-input-string . g$12063$XGD4L)
        (string-format . g$12062$XGD4L)
        (trace-printer . g$11916$XGD4L)
        (make-traced-procedure . g$12061$XGD4L)
        (make-traced-macro . g$7701$XGD4L)
        (pmap . g$12060$XGD4L)
        (time-it . g$12059$XGD4L)
        (make-parameter . g$7706$XGD4L)
        (library-locator . g$12058$XGD4L)
        (get-library-paths . g$12057$XGD4L)
        (environment-symbols . g$8963$XGD4L)
        (interaction-environment-symbols . g$8962$XGD4L)
        (library-path . g$8132$XGD4L)
        (library-extensions . g$8133$XGD4L)
        (installed-libraries . g$8153$XGD4L)
        (expand . g$8968$XGD4L)
        (&no-nans . g$12056$XGD4L)
        (&no-infinities . g$12055$XGD4L)
        (&i/o-encoding . g$12054$XGD4L)
        (&i/o-decoding . g$12053$XGD4L)
        (&i/o-port . g$12052$XGD4L)
        (&i/o-file-does-not-exist . g$12051$XGD4L)
        (&i/o-file-already-exists . g$12050$XGD4L)
        (&i/o-file-is-read-only . g$12049$XGD4L)
        (&i/o-file-protection . g$12048$XGD4L)
        (&i/o-filename . g$12047$XGD4L)
        (&i/o-invalid-position . g$12046$XGD4L)
        (&i/o-write . g$12045$XGD4L)
        (&i/o-read . g$12044$XGD4L)
        (&i/o . g$12043$XGD4L)
        (&non-continuable . g$12042$XGD4L)
        (&undefined . g$12041$XGD4L)
        (&syntax . g$12040$XGD4L)
        (&lexical . g$12039$XGD4L)
        (&implementation-restriction . g$12038$XGD4L)
        (&non . g$12037$XGD4L)
        (&who . g$12036$XGD4L)
        (&irritants . g$12035$XGD4L)
        (&assertion . g$12034$XGD4L)
        (&violation . g$12033$XGD4L)
        (&error . g$12032$XGD4L)
        (&serious . g$12031$XGD4L)
        (&warning . g$12030$XGD4L)
        (&message . g$12029$XGD4L)
        (&condition . g$12028$XGD4L)
        (define-condition-type . g$12027$XGD4L)
        (define-enumeration . g$12026$XGD4L)
        (define-record-type . g$12025$XGD4L)
        (parent-rtd . g$12024$XGD4L)
        (nongenerative . g$12023$XGD4L)
        (opaque . g$12022$XGD4L)
        (sealed . g$12021$XGD4L)
        (protocol . g$12020$XGD4L)
        (parent . g$12019$XGD4L)
        (immutable . g$12018$XGD4L)
        (mutable . g$12017$XGD4L)
        (fields . g$12016$XGD4L)
        (error-handling-mode . g$12015$XGD4L)
        (file-options . g$12014$XGD4L)
        (buffer-mode . g$12013$XGD4L)
        (eol-style . g$12012$XGD4L)
        (guard . g$12011$XGD4L)
        (trace-letrec-syntax . g$12010$XGD4L)
        (trace-let-syntax . g$12009$XGD4L)
        (trace-define-syntax . g$12008$XGD4L)
        (trace-define . g$12007$XGD4L)
        (trace-lambda . g$12006$XGD4L)
        (unsyntax-splicing . g$12005$XGD4L)
        (unsyntax . g$12004$XGD4L)
        (unquote-splicing . g$12003$XGD4L)
        (unquote . g$12002$XGD4L)
        (_ . g$12001$XGD4L)
        (else . g$12000$XGD4L)
        (=> . g$11999$XGD4L)
        (... . g$11998$XGD4L)
        (assert . g$11997$XGD4L)
        (endianness . g$11996$XGD4L)
        (delay . g$11995$XGD4L)
        (time . g$11994$XGD4L)
        (or . g$11993$XGD4L)
        (and . g$11992$XGD4L)
        (do . g$11991$XGD4L)
        (cond . g$11990$XGD4L)
        (let* . g$11989$XGD4L)
        (let . g$11988$XGD4L)
        (identifier-syntax . g$11987$XGD4L)
        (with-syntax . g$11986$XGD4L)
        (quasisyntax . g$11985$XGD4L)
        (quasiquote . g$11984$XGD4L)
        (syntax-rules . g$11983$XGD4L)
        (include-into . g$11982$XGD4L)
        (include . g$11981$XGD4L)
        (define-struct . g$11980$XGD4L)
        (let-values . g$11979$XGD4L)
        (let*-values . g$11978$XGD4L)
        (record-constructor-descriptor . g$11977$XGD4L)
        (record-type-descriptor . g$11976$XGD4L)
        (fluid-let-syntax . g$11975$XGD4L)
        (case . g$11974$XGD4L)
        (parameterize . g$11973$XGD4L)
        (unless . g$11972$XGD4L)
        (when . g$11971$XGD4L)
        (if . g$11970$XGD4L)
        (letrec* . g$11969$XGD4L)
        (letrec . g$11968$XGD4L)
        (type-descriptor . g$11967$XGD4L)
        (case-lambda . g$11966$XGD4L)
        (lambda . g$11965$XGD4L)
        (syntax . g$11964$XGD4L)
        (syntax-case . g$11963$XGD4L)
        (quote . g$11962$XGD4L)
        (foreign-call . g$11961$XGD4L)
        (letrec-syntax . g$11960$XGD4L)
        (let-syntax . g$11959$XGD4L)
        (set! . g$11958$XGD4L)
        (import . g$11957$XGD4L)
        (library . g$11956$XGD4L)
        (begin . g$11955$XGD4L)
        (module . g$11954$XGD4L)
        (define-syntax . g$11953$XGD4L)
        (define . g$11952$XGD4L))
      '((g$8861$XGD4L core-prim . ellipsis-map)
        (g$12596$XGD4L core-prim . &no-nans-rcd)
        (g$12595$XGD4L core-prim . &no-nans-rtd)
        (g$12594$XGD4L core-prim . &no-infinities-rcd)
        (g$12593$XGD4L core-prim . &no-infinities-rtd)
        (g$12592$XGD4L core-prim . &i/o-encoding-rcd)
        (g$12591$XGD4L core-prim . &i/o-encoding-rtd)
        (g$12590$XGD4L core-prim . &i/o-decoding-rcd)
        (g$12589$XGD4L core-prim . &i/o-decoding-rtd)
        (g$12588$XGD4L core-prim . &i/o-port-rcd)
        (g$12587$XGD4L core-prim . &i/o-port-rtd)
        (g$12586$XGD4L core-prim . &i/o-file-does-not-exist-rcd)
        (g$12585$XGD4L core-prim . &i/o-file-does-not-exist-rtd)
        (g$12584$XGD4L core-prim . &i/o-file-already-exists-rcd)
        (g$12583$XGD4L core-prim . &i/o-file-already-exists-rtd)
        (g$12582$XGD4L core-prim . &i/o-file-is-read-only-rcd)
        (g$12581$XGD4L core-prim . &i/o-file-is-read-only-rtd)
        (g$12580$XGD4L core-prim . &i/o-file-protection-rcd)
        (g$12579$XGD4L core-prim . &i/o-file-protection-rtd)
        (g$12578$XGD4L core-prim . &i/o-filename-rcd)
        (g$12577$XGD4L core-prim . &i/o-filename-rtd)
        (g$12576$XGD4L core-prim . &i/o-invalid-position-rcd)
        (g$12575$XGD4L core-prim . &i/o-invalid-position-rtd)
        (g$12574$XGD4L core-prim . &i/o-write-rcd)
        (g$12573$XGD4L core-prim . &i/o-write-rtd)
        (g$12572$XGD4L core-prim . &i/o-read-rcd)
        (g$12571$XGD4L core-prim . &i/o-read-rtd)
        (g$12570$XGD4L core-prim . &i/o-rcd)
        (g$12569$XGD4L core-prim . &i/o-rtd)
        (g$12568$XGD4L core-prim . &undefined-rcd)
        (g$12567$XGD4L core-prim . &undefined-rtd)
        (g$12566$XGD4L core-prim . &syntax-rcd)
        (g$12565$XGD4L core-prim . &syntax-rtd)
        (g$12564$XGD4L core-prim . &lexical-rcd)
        (g$12563$XGD4L core-prim . &lexical-rtd)
        (g$12562$XGD4L core-prim . &implementation-restriction-rcd)
        (g$12561$XGD4L core-prim . &implementation-restriction-rtd)
        (g$12560$XGD4L core-prim . &non-continuable-rcd)
        (g$12559$XGD4L core-prim . &non-continuable-rtd)
        (g$12558$XGD4L core-prim . &who-rcd)
        (g$12557$XGD4L core-prim . &who-rtd)
        (g$12556$XGD4L core-prim . &irritants-rcd)
        (g$12555$XGD4L core-prim . &irritants-rtd)
        (g$12554$XGD4L core-prim . &assertion-rcd)
        (g$12553$XGD4L core-prim . &assertion-rtd)
        (g$12552$XGD4L core-prim . &violation-rcd)
        (g$12551$XGD4L core-prim . &violation-rtd)
        (g$12550$XGD4L core-prim . &error-rcd)
        (g$12549$XGD4L core-prim . &error-rtd)
        (g$12548$XGD4L core-prim . &serious-rcd)
        (g$12547$XGD4L core-prim . &serious-rtd)
        (g$12546$XGD4L core-prim . &warning-rcd)
        (g$12545$XGD4L core-prim . &warning-rtd)
        (g$12544$XGD4L core-prim . &message-rcd)
        (g$12543$XGD4L core-prim . &message-rtd)
        (g$12542$XGD4L core-prim . &condition-rcd)
        (g$12541$XGD4L core-prim . &condition-rtd)
        (g$12540$XGD4L core-prim . library-letrec*)
        (g$12539$XGD4L core-prim . annotation-stripped)
        (g$12538$XGD4L core-prim . annotation-source)
        (g$12537$XGD4L core-prim . annotation-expression)
        (g$12536$XGD4L core-prim . annotation?)
        (g$12535$XGD4L core-prim . read-annotated)
        (g$12534$XGD4L core-prim . tanh)
        (g$12533$XGD4L core-prim . cosh)
        (g$12532$XGD4L core-prim . sinh)
        (g$12531$XGD4L core-prim . make-guid)
        (g$12530$XGD4L core-prim . unspecified?)
        (g$12529$XGD4L core-prim . make-trace)
        (g$12528$XGD4L core-prim . make-list)
        (g$12527$XGD4L core-prim . last-pair)
        (g$12526$XGD4L core-prim . load-r5rs)
        (g$12525$XGD4L core-prim . license)
        (g$12524$XGD4L core-prim . stacktrace)
        (g$11921$XGD4L core-prim . ironscheme-build)
        (g$12523$XGD4L core-prim . define-clr-class-internal)
        (g$12522$XGD4L core-prim . clr-field-set!-internal)
        (g$12521$XGD4L core-prim . clr-field-get-internal)
        (g$12520$XGD4L core-prim . clr-cast-internal)
        (g$12519$XGD4L core-prim . clr-call-internal)
        (g$12518$XGD4L core-prim . clr-new-internal)
        (g$12517$XGD4L core-prim . clr-new-array-internal)
        (g$12516$XGD4L core-prim . clr-is-internal)
        (g$12515$XGD4L core-prim . clr-reference-internal)
        (g$12514$XGD4L core-prim . clr-using-internal)
        (g$12513$XGD4L core-prim . clr-clear-usings-internal)
        (g$8980$XGD4L core-prim . syntax-error)
        (g$8856$XGD4L core-prim . syntax-dispatch)
        (g$12512$XGD4L core-prim . compile-core)
        (g$12511$XGD4L core-prim . eval-core)
        (g$12510$XGD4L core-prim . set-symbol-value!)
        (g$12509$XGD4L core-prim . symbol-value)
        (g$12508$XGD4L core-prim . ungensym)
        (g$12507$XGD4L core-prim . gensym)
        (g$12506$XGD4L core-prim . void)
        (g$12505$XGD4L core-prim . load-serialized-library)
        (g$12504$XGD4L core-prim . serialize-library)
        (g$11923$XGD4L core-prim . compile-system-libraries)
        (g$11925$XGD4L core-prim . compile->closure)
        (g$11924$XGD4L core-prim . compile)
        (g$11920$XGD4L core-prim . load)
        (g$8989$XGD4L core-prim . interaction-environment)
        (g$12503$XGD4L core-prim . char-ready?)
        (g$12502$XGD4L core-prim . string-upcase)
        (g$12501$XGD4L core-prim . string-titlecase)
        (g$12500$XGD4L core-prim . string-normalize-nfkd)
        (g$12499$XGD4L core-prim . string-normalize-nfkc)
        (g$12498$XGD4L core-prim . string-normalize-nfd)
        (g$12497$XGD4L core-prim . string-normalize-nfc)
        (g$12496$XGD4L core-prim . string-foldcase)
        (g$12495$XGD4L core-prim . string-downcase)
        (g$12494$XGD4L core-prim . string-ci>?)
        (g$12493$XGD4L core-prim . string-ci>=?)
        (g$12492$XGD4L core-prim . string-ci=?)
        (g$12491$XGD4L core-prim . string-ci<?)
        (g$12490$XGD4L core-prim . string-ci<=?)
        (g$12489$XGD4L core-prim . char-whitespace?)
        (g$12488$XGD4L core-prim . char-upper-case?)
        (g$12487$XGD4L core-prim . char-title-case?)
        (g$12486$XGD4L core-prim . char-numeric?)
        (g$12485$XGD4L core-prim . char-lower-case?)
        (g$12484$XGD4L core-prim . char-general-category)
        (g$12483$XGD4L core-prim . char-upcase)
        (g$12482$XGD4L core-prim . char-titlecase)
        (g$12481$XGD4L core-prim . char-foldcase)
        (g$12480$XGD4L core-prim . char-downcase)
        (g$12479$XGD4L core-prim . char-ci>?)
        (g$12478$XGD4L core-prim . char-ci>=?)
        (g$12477$XGD4L core-prim . char-ci=?)
        (g$12476$XGD4L core-prim . char-ci<?)
        (g$12475$XGD4L core-prim . char-ci<=?)
        (g$12474$XGD4L core-prim . char-alphabetic?)
        (g$8593$XGD4L core-prim . variable-transformer-procedure)
        (g$8592$XGD4L core-prim . variable-transformer?)
        (g$8591$XGD4L core-prim . make-variable-transformer)
        (g$8984$XGD4L core-prim . identifier?)
        (g$8976$XGD4L core-prim . generate-temporaries)
        (g$8977$XGD4L core-prim . free-identifier=?)
        (g$8986$XGD4L core-prim . syntax->datum)
        (g$8985$XGD4L core-prim . datum->syntax)
        (g$8978$XGD4L core-prim . bound-identifier=?)
        (g$12473$XGD4L core-prim . record-type-descriptor?)
        (g$12472$XGD4L core-prim . record-predicate)
        (g$12471$XGD4L core-prim . record-mutator)
        (g$12470$XGD4L core-prim . record-constructor)
        (g$12469$XGD4L core-prim . record-accessor)
        (g$12468$XGD4L core-prim . make-record-type-descriptor)
        (g$12467$XGD4L core-prim . make-record-constructor-descriptor)
        (g$12466$XGD4L core-prim . record?)
        (g$12465$XGD4L core-prim . record-type-uid)
        (g$12464$XGD4L core-prim . record-type-sealed?)
        (g$12463$XGD4L core-prim . record-type-parent)
        (g$12462$XGD4L core-prim . record-type-opaque?)
        (g$12461$XGD4L core-prim . record-type-name)
        (g$12460$XGD4L core-prim . record-type-generative?)
        (g$12459$XGD4L core-prim . record-type-field-names)
        (g$12458$XGD4L core-prim . record-rtd)
        (g$12457$XGD4L core-prim . record-field-mutable?)
        (g$6619$XGD4L core-prim . delete-file)
        (g$6618$XGD4L core-prim . file-exists?)
        (g$12456$XGD4L core-prim . vector-sort!)
        (g$12455$XGD4L core-prim . vector-sort)
        (g$7125$XGD4L core-prim . list-sort)
        (g$12454$XGD4L core-prim . symbol-hash)
        (g$12453$XGD4L core-prim . string-ci-hash)
        (g$12452$XGD4L core-prim . string-hash)
        (g$12451$XGD4L core-prim . equal-hash)
        (g$12450$XGD4L core-prim . hashtable-equivalence-function)
        (g$12449$XGD4L core-prim . make-hashtable)
        (g$12448$XGD4L core-prim . hashtable-hash-function)
        (g$6586$XGD4L core-prim . make-eqv-hashtable)
        (g$6585$XGD4L core-prim . make-eq-hashtable)
        (g$12447$XGD4L core-prim . hashtable?)
        (g$6592$XGD4L core-prim . hashtable-update!)
        (g$6587$XGD4L core-prim . hashtable-size)
        (g$6589$XGD4L core-prim . hashtable-set!)
        (g$6588$XGD4L core-prim . hashtable-ref)
        (g$12446$XGD4L core-prim . hashtable-mutable?)
        (g$12445$XGD4L core-prim . hashtable-keys)
        (g$12444$XGD4L core-prim . hashtable-entries)
        (g$6590$XGD4L core-prim . hashtable-delete!)
        (g$12443$XGD4L core-prim . hashtable-copy)
        (g$6591$XGD4L core-prim . hashtable-contains?)
        (g$6593$XGD4L core-prim . hashtable-clear!)
        (g$12442$XGD4L core-prim . call-with-output-file)
        (g$12441$XGD4L core-prim . call-with-input-file)
        (g$12440$XGD4L core-prim . write-char)
        (g$12439$XGD4L core-prim . write)
        (g$12438$XGD4L core-prim . with-output-to-file)
        (g$12437$XGD4L core-prim . with-input-from-file)
        (g$12436$XGD4L core-prim . read-char)
        (g$12435$XGD4L core-prim . read)
        (g$12434$XGD4L core-prim . peek-char)
        (g$12433$XGD4L core-prim . open-output-file)
        (g$12432$XGD4L core-prim . open-input-file)
        (g$12431$XGD4L core-prim . newline)
        (g$12430$XGD4L core-prim . display)
        (g$12429$XGD4L core-prim . close-output-port)
        (g$12428$XGD4L core-prim . close-input-port)
        (g$12427$XGD4L core-prim . eof-object?)
        (g$12426$XGD4L core-prim . eof-object)
        (g$12425$XGD4L core-prim . current-error-port)
        (g$12424$XGD4L core-prim . current-output-port)
        (g$12423$XGD4L core-prim . current-input-port)
        (g$12422$XGD4L core-prim . output-port?)
        (g$12421$XGD4L core-prim . input-port?)
        (g$12420$XGD4L core-prim . utf-8-codec)
        (g$12419$XGD4L core-prim . utf-16-codec)
        (g$12418$XGD4L core-prim . transcoder-error-handling-mode)
        (g$12417$XGD4L core-prim . transcoder-eol-style)
        (g$12416$XGD4L core-prim . transcoder-codec)
        (g$12415$XGD4L core-prim . transcoded-port)
        (g$12414$XGD4L core-prim . textual-port?)
        (g$12413$XGD4L core-prim . string->bytevector)
        (g$12412$XGD4L core-prim . standard-output-port)
        (g$12411$XGD4L core-prim . standard-input-port)
        (g$12410$XGD4L core-prim . standard-error-port)
        (g$12409$XGD4L core-prim . set-port-position!)
        (g$12408$XGD4L core-prim . put-u8)
        (g$12407$XGD4L core-prim . put-string)
        (g$12406$XGD4L core-prim . put-datum)
        (g$12405$XGD4L core-prim . put-char)
        (g$12404$XGD4L core-prim . put-bytevector)
        (g$12403$XGD4L core-prim . port?)
        (g$12402$XGD4L core-prim . port-transcoder)
        (g$12401$XGD4L core-prim . port-position)
        (g$12400$XGD4L core-prim . port-has-set-port-position!?)
        (g$12399$XGD4L core-prim . port-has-port-position?)
        (g$12398$XGD4L core-prim . port-eof?)
        (g$12397$XGD4L core-prim . output-port-buffer-mode)
        (g$7516$XGD4L core-prim . open-string-output-port)
        (g$12396$XGD4L core-prim . open-string-input-port)
        (g$12395$XGD4L core-prim . open-file-output-port)
        (g$12394$XGD4L core-prim . open-file-input/output-port)
        (g$12393$XGD4L core-prim . open-file-input-port)
        (g$12392$XGD4L core-prim . open-bytevector-output-port)
        (g$12391$XGD4L core-prim . open-bytevector-input-port)
        (g$12390$XGD4L core-prim . native-transcoder)
        (g$12389$XGD4L core-prim . native-eol-style)
        (g$12388$XGD4L core-prim . make-transcoder)
        (g$12387$XGD4L core-prim . latin-1-codec)
        (g$7373$XGD4L core-prim . make-i/o-write-error)
        (g$7359$XGD4L core-prim . make-i/o-read-error)
        (g$7478$XGD4L core-prim . make-i/o-port-error)
        (g$7388$XGD4L core-prim . make-i/o-invalid-position-error)
        (g$7405$XGD4L core-prim . make-i/o-filename-error)
        (g$7421$XGD4L core-prim . make-i/o-file-protection-error)
        (g$7435$XGD4L core-prim . make-i/o-file-is-read-only-error)
        (g$7463$XGD4L core-prim . make-i/o-file-does-not-exist-error)
        (g$7449$XGD4L core-prim . make-i/o-file-already-exists-error)
        (g$7345$XGD4L core-prim . make-i/o-error)
        (g$7509$XGD4L core-prim . make-i/o-encoding-error)
        (g$7494$XGD4L core-prim . make-i/o-decoding-error)
        (g$12386$XGD4L core-prim . make-custom-textual-output-port)
        (g$12385$XGD4L core-prim . make-custom-textual-input/output-port)
        (g$12384$XGD4L core-prim . make-custom-textual-input-port)
        (g$12383$XGD4L core-prim . make-custom-binary-output-port)
        (g$12382$XGD4L core-prim . make-custom-binary-input/output-port)
        (g$12381$XGD4L core-prim . make-custom-binary-input-port)
        (g$12380$XGD4L core-prim . make-bytevector)
        (g$12379$XGD4L core-prim . lookahead-u8)
        (g$12378$XGD4L core-prim . lookahead-char)
        (g$7374$XGD4L core-prim . i/o-write-error?)
        (g$7360$XGD4L core-prim . i/o-read-error?)
        (g$7480$XGD4L core-prim . i/o-port-error?)
        (g$7390$XGD4L core-prim . i/o-invalid-position-error?)
        (g$7391$XGD4L core-prim . i/o-error-position)
        (g$7407$XGD4L core-prim . i/o-filename-error?)
        (g$7422$XGD4L core-prim . i/o-file-protection-error?)
        (g$7436$XGD4L core-prim . i/o-file-is-read-only-error?)
        (g$7464$XGD4L core-prim . i/o-file-does-not-exist-error?)
        (g$7450$XGD4L core-prim . i/o-file-already-exists-error?)
        (g$7346$XGD4L core-prim . i/o-error?)
        (g$7481$XGD4L core-prim . i/o-error-port)
        (g$7408$XGD4L core-prim . i/o-error-filename)
        (g$7511$XGD4L core-prim . i/o-encoding-error?)
        (g$7512$XGD4L core-prim . i/o-encoding-error-char)
        (g$7495$XGD4L core-prim . i/o-decoding-error?)
        (g$12377$XGD4L core-prim . get-u8)
        (g$12376$XGD4L core-prim . get-string-n!)
        (g$12375$XGD4L core-prim . get-string-n)
        (g$12374$XGD4L core-prim . get-string-all)
        (g$12373$XGD4L core-prim . get-line)
        (g$12372$XGD4L core-prim . get-datum)
        (g$12371$XGD4L core-prim . get-char)
        (g$12370$XGD4L core-prim . get-bytevector-some)
        (g$12369$XGD4L core-prim . get-bytevector-n!)
        (g$12368$XGD4L core-prim . get-bytevector-n)
        (g$12367$XGD4L core-prim . get-bytevector-all)
        (g$12366$XGD4L core-prim . flush-output-port)
        (g$12365$XGD4L core-prim . close-port)
        (g$12364$XGD4L core-prim . call-with-string-output-port)
        (g$12363$XGD4L core-prim . call-with-port)
        (g$12362$XGD4L core-prim . call-with-bytevector-output-port)
        (g$12361$XGD4L core-prim . bytevector->string)
        (g$12360$XGD4L core-prim . buffer-mode?)
        (g$12359$XGD4L core-prim . binary-port?)
        (g$8967$XGD4L core-prim . scheme-report-environment)
        (g$7112$XGD4L core-prim . quotient)
        (g$8966$XGD4L core-prim . null-environment)
        (g$7113$XGD4L core-prim . remainder)
        (g$7114$XGD4L core-prim . modulo)
        (g$12358$XGD4L core-prim . inexact->exact)
        (g$12357$XGD4L core-prim . force)
        (g$12356$XGD4L core-prim . exact->inexact)
        (g$12355$XGD4L core-prim . exit)
        (g$11917$XGD4L core-prim . command-line)
        (g$12354$XGD4L core-prim . string-fill!)
        (g$12353$XGD4L core-prim . string-set!)
        (g$12352$XGD4L core-prim . set-cdr!)
        (g$12351$XGD4L core-prim . set-car!)
        (g$6699$XGD4L core-prim . remove)
        (g$6700$XGD4L core-prim . remv)
        (g$6685$XGD4L core-prim . remp)
        (g$6701$XGD4L core-prim . remq)
        (g$6684$XGD4L core-prim . partition)
        (g$12350$XGD4L core-prim . memv)
        (g$12349$XGD4L core-prim . memq)
        (g$6691$XGD4L core-prim . memp)
        (g$6690$XGD4L core-prim . member)
        (g$6695$XGD4L core-prim . exists)
        (g$6694$XGD4L core-prim . for-all)
        (g$6698$XGD4L core-prim . fold-right)
        (g$6697$XGD4L core-prim . fold-left)
        (g$6683$XGD4L core-prim . find)
        (g$6686$XGD4L core-prim . filter)
        (g$6696$XGD4L core-prim . cons*)
        (g$6687$XGD4L core-prim . assv)
        (g$12348$XGD4L core-prim . assq)
        (g$6689$XGD4L core-prim . assp)
        (g$6688$XGD4L core-prim . assoc)
        (g$12347$XGD4L core-prim . with-exception-handler)
        (g$12346$XGD4L core-prim . raise-continuable)
        (g$12345$XGD4L core-prim . raise)
        (g$8969$XGD4L core-prim . eval)
        (g$8965$XGD4L core-prim . environment)
        (g$7565$XGD4L core-prim . make-enumeration)
        (g$7572$XGD4L core-prim . enum-set=?)
        (g$7566$XGD4L core-prim . enum-set-universe)
        (g$7573$XGD4L core-prim . enum-set-union)
        (g$7571$XGD4L core-prim . enum-set-subset?)
        (g$7577$XGD4L core-prim . enum-set-projection)
        (g$7570$XGD4L core-prim . enum-set-member?)
        (g$7574$XGD4L core-prim . enum-set-intersection)
        (g$7567$XGD4L core-prim . enum-set-indexer)
        (g$7575$XGD4L core-prim . enum-set-difference)
        (g$7568$XGD4L core-prim . enum-set-constructor)
        (g$7576$XGD4L core-prim . enum-set-complement)
        (g$7569$XGD4L core-prim . enum-set->list)
        (g$7023$XGD4L core-prim . who-condition?)
        (g$6934$XGD4L core-prim . warning?)
        (g$6976$XGD4L core-prim . violation?)
        (g$7100$XGD4L core-prim . undefined-violation?)
        (g$7084$XGD4L core-prim . syntax-violation?)
        (g$7086$XGD4L core-prim . syntax-violation-subform)
        (g$7085$XGD4L core-prim . syntax-violation-form)
        (g$8983$XGD4L core-prim . syntax-violation)
        (g$12344$XGD4L core-prim . simple-conditions)
        (g$6948$XGD4L core-prim . serious-condition?)
        (g$7038$XGD4L core-prim . non-continuable-violation?)
        (g$6919$XGD4L core-prim . message-condition?)
        (g$7021$XGD4L core-prim . make-who-condition)
        (g$6933$XGD4L core-prim . make-warning)
        (g$6975$XGD4L core-prim . make-violation)
        (g$7099$XGD4L core-prim . make-undefined-violation)
        (g$7081$XGD4L core-prim . make-syntax-violation)
        (g$6947$XGD4L core-prim . make-serious-condition)
        (g$7037$XGD4L core-prim . make-non-continuable-violation)
        (g$6917$XGD4L core-prim . make-message-condition)
        (g$7065$XGD4L core-prim . make-lexical-violation)
        (g$7004$XGD4L core-prim . make-irritants-condition)
        (g$7051$XGD4L core-prim . make-implementation-restriction-violation)
        (g$6961$XGD4L core-prim . make-error)
        (g$6989$XGD4L core-prim . make-assertion-violation)
        (g$7066$XGD4L core-prim . lexical-violation?)
        (g$7006$XGD4L core-prim . irritants-condition?)
        (g$7052$XGD4L core-prim . implementation-restriction-violation?)
        (g$6962$XGD4L core-prim . error?)
        (g$7024$XGD4L core-prim . condition-who)
        (g$12343$XGD4L core-prim . condition-predicate)
        (g$6920$XGD4L core-prim . condition-message)
        (g$7007$XGD4L core-prim . condition-irritants)
        (g$12342$XGD4L core-prim . condition-accessor)
        (g$12341$XGD4L core-prim . condition)
        (g$6990$XGD4L core-prim . assertion-violation?)
        (g$12340$XGD4L core-prim . condition?)
        (g$12339$XGD4L core-prim . utf32->string)
        (g$12338$XGD4L core-prim . utf16->string)
        (g$12337$XGD4L core-prim . utf8->string)
        (g$12336$XGD4L core-prim . uint-list->bytevector)
        (g$12335$XGD4L core-prim . u8-list->bytevector)
        (g$12334$XGD4L core-prim . string->utf8)
        (g$12333$XGD4L core-prim . string->utf32)
        (g$12332$XGD4L core-prim . string->utf16)
        (g$12331$XGD4L core-prim . sint-list->bytevector)
        (g$6775$XGD4L core-prim . native-endianness)
        (g$12330$XGD4L core-prim . bytevector?)
        (g$12329$XGD4L core-prim . bytevector=?)
        (g$12328$XGD4L core-prim . bytevector-uint-set!)
        (g$12327$XGD4L core-prim . bytevector-uint-ref)
        (g$12326$XGD4L core-prim . bytevector-u8-set!)
        (g$12325$XGD4L core-prim . bytevector-u8-ref)
        (g$6796$XGD4L core-prim . bytevector-u64-set!)
        (g$6792$XGD4L core-prim . bytevector-u64-ref)
        (g$6798$XGD4L core-prim . bytevector-u64-native-set!)
        (g$6794$XGD4L core-prim . bytevector-u64-native-ref)
        (g$6788$XGD4L core-prim . bytevector-u32-set!)
        (g$6784$XGD4L core-prim . bytevector-u32-ref)
        (g$6790$XGD4L core-prim . bytevector-u32-native-set!)
        (g$6786$XGD4L core-prim . bytevector-u32-native-ref)
        (g$6780$XGD4L core-prim . bytevector-u16-set!)
        (g$6776$XGD4L core-prim . bytevector-u16-ref)
        (g$6782$XGD4L core-prim . bytevector-u16-native-set!)
        (g$6778$XGD4L core-prim . bytevector-u16-native-ref)
        (g$12324$XGD4L core-prim . bytevector-sint-set!)
        (g$12323$XGD4L core-prim . bytevector-sint-ref)
        (g$12322$XGD4L core-prim . bytevector-s8-set!)
        (g$12321$XGD4L core-prim . bytevector-s8-ref)
        (g$6797$XGD4L core-prim . bytevector-s64-set!)
        (g$6793$XGD4L core-prim . bytevector-s64-ref)
        (g$6799$XGD4L core-prim . bytevector-s64-native-set!)
        (g$6795$XGD4L core-prim . bytevector-s64-native-ref)
        (g$6789$XGD4L core-prim . bytevector-s32-set!)
        (g$6785$XGD4L core-prim . bytevector-s32-ref)
        (g$6791$XGD4L core-prim . bytevector-s32-native-set!)
        (g$6787$XGD4L core-prim . bytevector-s32-native-ref)
        (g$6781$XGD4L core-prim . bytevector-s16-set!)
        (g$6777$XGD4L core-prim . bytevector-s16-ref)
        (g$6783$XGD4L core-prim . bytevector-s16-native-set!)
        (g$6779$XGD4L core-prim . bytevector-s16-native-ref)
        (g$12320$XGD4L core-prim . bytevector-length)
        (g$12319$XGD4L core-prim . bytevector-ieee-single-set!)
        (g$12318$XGD4L core-prim . bytevector-ieee-single-ref)
        (g$6802$XGD4L core-prim . bytevector-ieee-single-native-set!)
        (g$6800$XGD4L core-prim . bytevector-ieee-single-native-ref)
        (g$12317$XGD4L core-prim . bytevector-ieee-double-set!)
        (g$12316$XGD4L core-prim . bytevector-ieee-double-ref)
        (g$6803$XGD4L core-prim . bytevector-ieee-double-native-set!)
        (g$6801$XGD4L core-prim . bytevector-ieee-double-native-ref)
        (g$12315$XGD4L core-prim . bytevector-fill!)
        (g$12314$XGD4L core-prim . bytevector-copy!)
        (g$12313$XGD4L core-prim . bytevector-copy)
        (g$12312$XGD4L core-prim . bytevector->uint-list)
        (g$12311$XGD4L core-prim . bytevector->u8-list)
        (g$12310$XGD4L core-prim . bytevector->sint-list)
        (g$7331$XGD4L core-prim . no-nans-violation?)
        (g$7317$XGD4L core-prim . no-infinities-violation?)
        (g$7330$XGD4L core-prim . make-no-nans-violation)
        (g$7316$XGD4L core-prim . make-no-infinities-violation)
        (g$12309$XGD4L core-prim . real->flonum)
        (g$12308$XGD4L core-prim . flzero?)
        (g$12307$XGD4L core-prim . fltruncate)
        (g$12306$XGD4L core-prim . fltan)
        (g$12305$XGD4L core-prim . flsqrt)
        (g$12304$XGD4L core-prim . flsin)
        (g$12303$XGD4L core-prim . flround)
        (g$12302$XGD4L core-prim . flpositive?)
        (g$12301$XGD4L core-prim . flonum?)
        (g$12300$XGD4L core-prim . flodd?)
        (g$12299$XGD4L core-prim . flnumerator)
        (g$12298$XGD4L core-prim . flnegative?)
        (g$12297$XGD4L core-prim . flnan?)
        (g$12296$XGD4L core-prim . flmod0)
        (g$12295$XGD4L core-prim . flmod)
        (g$12294$XGD4L core-prim . flmin)
        (g$12293$XGD4L core-prim . flmax)
        (g$12292$XGD4L core-prim . fllog)
        (g$12291$XGD4L core-prim . flinteger?)
        (g$12290$XGD4L core-prim . flinfinite?)
        (g$12289$XGD4L core-prim . flfloor)
        (g$12288$XGD4L core-prim . flfinite?)
        (g$12287$XGD4L core-prim . flexpt)
        (g$12286$XGD4L core-prim . flexp)
        (g$12285$XGD4L core-prim . fleven?)
        (g$12284$XGD4L core-prim . fldiv0-and-mod0)
        (g$12283$XGD4L core-prim . fldiv0)
        (g$12282$XGD4L core-prim . fldiv-and-mod)
        (g$12281$XGD4L core-prim . fldiv)
        (g$12280$XGD4L core-prim . fldenominator)
        (g$12279$XGD4L core-prim . flcos)
        (g$12278$XGD4L core-prim . flceiling)
        (g$12277$XGD4L core-prim . flatan)
        (g$12276$XGD4L core-prim . flasin)
        (g$12275$XGD4L core-prim . flacos)
        (g$12274$XGD4L core-prim . flabs)
        (g$12273$XGD4L core-prim . fl>?)
        (g$12272$XGD4L core-prim . fl>=?)
        (g$12271$XGD4L core-prim . fl=?)
        (g$12270$XGD4L core-prim . fl<?)
        (g$12269$XGD4L core-prim . fl<=?)
        (g$12268$XGD4L core-prim . fl/)
        (g$12267$XGD4L core-prim . fl-)
        (g$12266$XGD4L core-prim . fl+)
        (g$12265$XGD4L core-prim . fl*)
        (g$12264$XGD4L core-prim . fixnum->flonum)
        (g$12263$XGD4L core-prim . fxzero?)
        (g$12262$XGD4L core-prim . fxxor)
        (g$7262$XGD4L core-prim . fxrotate-bit-field)
        (g$12261$XGD4L core-prim . fxreverse-bit-field)
        (g$12260$XGD4L core-prim . fxpositive?)
        (g$12259$XGD4L core-prim . fxodd?)
        (g$12258$XGD4L core-prim . fxnot)
        (g$12257$XGD4L core-prim . fxnegative?)
        (g$12256$XGD4L core-prim . fxmod0)
        (g$12255$XGD4L core-prim . fxmod)
        (g$12254$XGD4L core-prim . fxmin)
        (g$12253$XGD4L core-prim . fxmax)
        (g$12252$XGD4L core-prim . fxlength)
        (g$12251$XGD4L core-prim . fxior)
        (g$7256$XGD4L core-prim . fxif)
        (g$12250$XGD4L core-prim . fxfirst-bit-set)
        (g$12249$XGD4L core-prim . fxeven?)
        (g$12248$XGD4L core-prim . fxdiv0-and-mod0)
        (g$12247$XGD4L core-prim . fxdiv0)
        (g$12246$XGD4L core-prim . fxdiv-and-mod)
        (g$12245$XGD4L core-prim . fxdiv)
        (g$7259$XGD4L core-prim . fxcopy-bit-field)
        (g$7257$XGD4L core-prim . fxcopy-bit)
        (g$12244$XGD4L core-prim . fxbit-set?)
        (g$7258$XGD4L core-prim . fxbit-field)
        (g$12243$XGD4L core-prim . fxbit-count)
        (g$7261$XGD4L core-prim . fxarithmetic-shift-right)
        (g$7260$XGD4L core-prim . fxarithmetic-shift-left)
        (g$12242$XGD4L core-prim . fxarithmetic-shift)
        (g$12241$XGD4L core-prim . fxand)
        (g$12240$XGD4L core-prim . fx>?)
        (g$12239$XGD4L core-prim . fx>=?)
        (g$12238$XGD4L core-prim . fx=?)
        (g$12237$XGD4L core-prim . fx<?)
        (g$12236$XGD4L core-prim . fx<=?)
        (g$12235$XGD4L core-prim . fx-/carry)
        (g$12234$XGD4L core-prim . fx-)
        (g$12233$XGD4L core-prim . fx+/carry)
        (g$12232$XGD4L core-prim . fx+)
        (g$12231$XGD4L core-prim . fx*/carry)
        (g$12230$XGD4L core-prim . fx*)
        (g$12229$XGD4L core-prim . greatest-fixnum)
        (g$12228$XGD4L core-prim . least-fixnum)
        (g$12227$XGD4L core-prim . fixnum-width)
        (g$12226$XGD4L core-prim . fixnum?)
        (g$7210$XGD4L core-prim . bitwise-rotate-bit-field)
        (g$7211$XGD4L core-prim . bitwise-reverse-bit-field)
        (g$12225$XGD4L core-prim . bitwise-length)
        (g$7204$XGD4L core-prim . bitwise-if)
        (g$12224$XGD4L core-prim . bitwise-first-bit-set)
        (g$7207$XGD4L core-prim . bitwise-copy-bit-field)
        (g$7205$XGD4L core-prim . bitwise-copy-bit)
        (g$12223$XGD4L core-prim . bitwise-bit-set?)
        (g$12222$XGD4L core-prim . bitwise-bit-field)
        (g$12221$XGD4L core-prim . bitwise-bit-count)
        (g$12220$XGD4L core-prim . bitwise-xor)
        (g$12219$XGD4L core-prim . bitwise-ior)
        (g$12218$XGD4L core-prim . bitwise-and)
        (g$12217$XGD4L core-prim . bitwise-not)
        (g$7209$XGD4L core-prim . bitwise-arithmetic-shift-right)
        (g$7208$XGD4L core-prim . bitwise-arithmetic-shift-left)
        (g$12216$XGD4L core-prim . bitwise-arithmetic-shift)
        (g$12215$XGD4L core-prim . zero?)
        (g$12214$XGD4L core-prim . vector?)
        (g$12213$XGD4L core-prim . vector-set!)
        (g$12212$XGD4L core-prim . vector-ref)
        (g$12211$XGD4L core-prim . vector-map)
        (g$12210$XGD4L core-prim . vector-length)
        (g$12209$XGD4L core-prim . vector-for-each)
        (g$12208$XGD4L core-prim . vector-fill!)
        (g$12207$XGD4L core-prim . vector->list)
        (g$12206$XGD4L core-prim . vector)
        (g$12205$XGD4L core-prim . values)
        (g$12204$XGD4L core-prim . truncate)
        (g$12203$XGD4L core-prim . tan)
        (g$12202$XGD4L core-prim . symbol?)
        (g$12201$XGD4L core-prim . symbol=?)
        (g$12200$XGD4L core-prim . symbol->string)
        (g$12199$XGD4L core-prim . substring)
        (g$12198$XGD4L core-prim . string?)
        (g$12197$XGD4L core-prim . string>?)
        (g$12196$XGD4L core-prim . string>=?)
        (g$12195$XGD4L core-prim . string=?)
        (g$12194$XGD4L core-prim . string<?)
        (g$12193$XGD4L core-prim . string<=?)
        (g$12192$XGD4L core-prim . string-ref)
        (g$12191$XGD4L core-prim . string-length)
        (g$12190$XGD4L core-prim . string-for-each)
        (g$12189$XGD4L core-prim . string-copy)
        (g$12188$XGD4L core-prim . string-append)
        (g$12187$XGD4L core-prim . string->symbol)
        (g$12186$XGD4L core-prim . string->number)
        (g$12185$XGD4L core-prim . string->list)
        (g$12184$XGD4L core-prim . string)
        (g$12183$XGD4L core-prim . sqrt)
        (g$12182$XGD4L core-prim . sin)
        (g$12181$XGD4L core-prim . round)
        (g$12180$XGD4L core-prim . reverse)
        (g$12179$XGD4L core-prim . real?)
        (g$12178$XGD4L core-prim . real-valued?)
        (g$12177$XGD4L core-prim . real-part)
        (g$6236$XGD4L core-prim . rationalize)
        (g$12176$XGD4L core-prim . rational?)
        (g$12175$XGD4L core-prim . rational-valued?)
        (g$12174$XGD4L core-prim . procedure?)
        (g$12173$XGD4L core-prim . positive?)
        (g$12172$XGD4L core-prim . pair?)
        (g$12171$XGD4L core-prim . odd?)
        (g$12170$XGD4L core-prim . numerator)
        (g$12169$XGD4L core-prim . number?)
        (g$12168$XGD4L core-prim . number->string)
        (g$12167$XGD4L core-prim . null?)
        (g$12166$XGD4L core-prim . not)
        (g$12165$XGD4L core-prim . negative?)
        (g$12164$XGD4L core-prim . nan?)
        (g$12163$XGD4L core-prim . min)
        (g$12162$XGD4L core-prim . max)
        (g$12161$XGD4L core-prim . map)
        (g$12160$XGD4L core-prim . make-vector)
        (g$12159$XGD4L core-prim . make-string)
        (g$12158$XGD4L core-prim . make-rectangular)
        (g$12157$XGD4L core-prim . make-polar)
        (g$12156$XGD4L core-prim . magnitude)
        (g$12155$XGD4L core-prim . log)
        (g$12154$XGD4L core-prim . list?)
        (g$12153$XGD4L core-prim . list-tail)
        (g$12152$XGD4L core-prim . list-ref)
        (g$12151$XGD4L core-prim . list->vector)
        (g$12150$XGD4L core-prim . list->string)
        (g$12149$XGD4L core-prim . list)
        (g$12148$XGD4L core-prim . length)
        (g$12147$XGD4L core-prim . lcm)
        (g$12146$XGD4L core-prim . integer?)
        (g$12145$XGD4L core-prim . integer-valued?)
        (g$12144$XGD4L core-prim . integer->char)
        (g$12143$XGD4L core-prim . infinite?)
        (g$12142$XGD4L core-prim . inexact?)
        (g$12141$XGD4L core-prim . inexact)
        (g$12140$XGD4L core-prim . imag-part)
        (g$12139$XGD4L core-prim . gcd)
        (g$12138$XGD4L core-prim . for-each)
        (g$12137$XGD4L core-prim . floor)
        (g$12136$XGD4L core-prim . finite?)
        (g$12135$XGD4L core-prim . expt)
        (g$12134$XGD4L core-prim . exp)
        (g$12133$XGD4L core-prim . exact?)
        (g$12132$XGD4L core-prim . exact-integer-sqrt)
        (g$12131$XGD4L core-prim . exact)
        (g$12130$XGD4L core-prim . even?)
        (g$12129$XGD4L core-prim . error)
        (g$12128$XGD4L core-prim . eqv?)
        (g$12127$XGD4L core-prim . equal?)
        (g$12126$XGD4L core-prim . eq?)
        (g$12125$XGD4L core-prim . dynamic-wind)
        (g$12124$XGD4L core-prim . div0-and-mod0)
        (g$12123$XGD4L core-prim . mod0)
        (g$12122$XGD4L core-prim . div0)
        (g$12121$XGD4L core-prim . div-and-mod)
        (g$12120$XGD4L core-prim . mod)
        (g$12119$XGD4L core-prim . div)
        (g$12118$XGD4L core-prim . denominator)
        (g$12117$XGD4L core-prim . cos)
        (g$12116$XGD4L core-prim . cons)
        (g$12115$XGD4L core-prim . complex?)
        (g$12114$XGD4L core-prim . char?)
        (g$12113$XGD4L core-prim . char>?)
        (g$12112$XGD4L core-prim . char>=?)
        (g$12111$XGD4L core-prim . char=?)
        (g$12110$XGD4L core-prim . char<?)
        (g$12109$XGD4L core-prim . char<=?)
        (g$12108$XGD4L core-prim . char->integer)
        (g$12107$XGD4L core-prim . ceiling)
        (g$12106$XGD4L core-prim . call-with-values)
        (g$12105$XGD4L core-prim . call/cc)
        (g$12104$XGD4L core-prim . call-with-current-continuation)
        (g$6235$XGD4L core-prim . cddddr)
        (g$6234$XGD4L core-prim . cdddar)
        (g$6233$XGD4L core-prim . cddadr)
        (g$6232$XGD4L core-prim . cddaar)
        (g$6231$XGD4L core-prim . cdaddr)
        (g$6230$XGD4L core-prim . cdadar)
        (g$6229$XGD4L core-prim . cdaadr)
        (g$6228$XGD4L core-prim . cdaaar)
        (g$6227$XGD4L core-prim . cadddr)
        (g$6226$XGD4L core-prim . caddar)
        (g$6225$XGD4L core-prim . cadadr)
        (g$6224$XGD4L core-prim . cadaar)
        (g$6223$XGD4L core-prim . caaddr)
        (g$6222$XGD4L core-prim . caadar)
        (g$6221$XGD4L core-prim . caaadr)
        (g$6220$XGD4L core-prim . caaaar)
        (g$6219$XGD4L core-prim . cdddr)
        (g$6218$XGD4L core-prim . cddar)
        (g$6217$XGD4L core-prim . cdadr)
        (g$6216$XGD4L core-prim . cdaar)
        (g$6215$XGD4L core-prim . caddr)
        (g$6214$XGD4L core-prim . cadar)
        (g$6213$XGD4L core-prim . caadr)
        (g$6212$XGD4L core-prim . caaar)
        (g$6211$XGD4L core-prim . cddr)
        (g$6210$XGD4L core-prim . cdar)
        (g$6209$XGD4L core-prim . cadr)
        (g$6208$XGD4L core-prim . caar)
        (g$12103$XGD4L core-prim . cdr)
        (g$12102$XGD4L core-prim . car)
        (g$12101$XGD4L core-prim . boolean?)
        (g$12100$XGD4L core-prim . boolean=?)
        (g$12099$XGD4L core-prim . atan)
        (g$12098$XGD4L core-prim . assertion-violation)
        (g$12097$XGD4L core-prim . asin)
        (g$12096$XGD4L core-prim . apply)
        (g$12095$XGD4L core-prim . append)
        (g$12094$XGD4L core-prim . angle)
        (g$12093$XGD4L core-prim . acos)
        (g$12092$XGD4L core-prim . abs)
        (g$12091$XGD4L core-prim . /)
        (g$12090$XGD4L core-prim . *)
        (g$12089$XGD4L core-prim . -)
        (g$12088$XGD4L core-prim . +)
        (g$12087$XGD4L core-prim . >=)
        (g$12086$XGD4L core-prim . >)
        (g$12085$XGD4L core-prim . =)
        (g$12084$XGD4L core-prim . <=)
        (g$12083$XGD4L core-prim . <)
        (g$12082$XGD4L core-prim . make-record-printer)
        (g$12081$XGD4L core-prim . eqv-hash)
        (g$12080$XGD4L core-prim . eq-hash)
        (g$12079$XGD4L core-prim . reverse!)
        (g$12078$XGD4L core-prim . make-promise)
        (g$11919$XGD4L core-prim . load/args)
        (g$7680$XGD4L core-prim . printf)
        (g$7681$XGD4L core-prim . fprintf)
        (g$7682$XGD4L core-prim . format)
        (g$12077$XGD4L core-prim . get-arity)
        (g$12076$XGD4L core-prim . gc-collect)
        (g$12075$XGD4L core-prim . clr-type?)
        (g$12074$XGD4L core-prim . get-clr-type)
        (g$12073$XGD4L core-prim . get-command-line)
        (g$12072$XGD4L core-prim . vector-append)
        (g$12071$XGD4L core-prim . vector-filter)
        (g$12070$XGD4L core-prim . vector-reverse!)
        (g$12069$XGD4L core-prim . vector-contains?)
        (g$12068$XGD4L core-prim . vector-index-of)
        (g$12067$XGD4L core-prim . vector-copy)
        (g$12066$XGD4L core-prim . vector-binary-search)
        (g$12065$XGD4L core-prim . get-output-string)
        (g$12064$XGD4L core-prim . open-output-string)
        (g$12063$XGD4L core-prim . open-input-string)
        (g$12062$XGD4L core-prim . string-format)
        (g$11916$XGD4L core-prim . trace-printer)
        (g$12061$XGD4L core-prim . make-traced-procedure)
        (g$7701$XGD4L core-prim . make-traced-macro)
        (g$12060$XGD4L core-prim . pmap)
        (g$12059$XGD4L core-prim . time-it)
        (g$7706$XGD4L core-prim . make-parameter)
        (g$12058$XGD4L core-prim . library-locator)
        (g$12057$XGD4L core-prim . get-library-paths)
        (g$8963$XGD4L core-prim . environment-symbols)
        (g$8962$XGD4L core-prim . interaction-environment-symbols)
        (g$8132$XGD4L core-prim . library-path)
        (g$8133$XGD4L core-prim . library-extensions)
        (g$8153$XGD4L core-prim . installed-libraries)
        (g$8968$XGD4L core-prim . expand)
        (g$12056$XGD4L $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12055$XGD4L $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12054$XGD4L $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12053$XGD4L $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12052$XGD4L $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12051$XGD4L
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12050$XGD4L
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12049$XGD4L
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12048$XGD4L
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12047$XGD4L $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12046$XGD4L
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12045$XGD4L $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12044$XGD4L $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12043$XGD4L $core-rtd &i/o-rtd &i/o-rcd)
        (g$12042$XGD4L $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12041$XGD4L $core-rtd &undefined-rtd &undefined-rcd)
        (g$12040$XGD4L $core-rtd &syntax-rtd &syntax-rcd)
        (g$12039$XGD4L $core-rtd &lexical-rtd &lexical-rcd)
        (g$12038$XGD4L
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12037$XGD4L $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12036$XGD4L $core-rtd &who-rtd &who-rcd)
        (g$12035$XGD4L $core-rtd &irritants-rtd &irritants-rcd)
        (g$12034$XGD4L $core-rtd &assertion-rtd &assertion-rcd)
        (g$12033$XGD4L $core-rtd &violation-rtd &violation-rcd)
        (g$12032$XGD4L $core-rtd &error-rtd &error-rcd)
        (g$12031$XGD4L $core-rtd &serious-rtd &serious-rcd)
        (g$12030$XGD4L $core-rtd &warning-rtd &warning-rcd)
        (g$12029$XGD4L $core-rtd &message-rtd &message-rcd)
        (g$12028$XGD4L $core-rtd &condition-rtd &condition-rcd)
        (g$12027$XGD4L macro . define-condition-type)
        (g$12026$XGD4L macro . define-enumeration)
        (g$12025$XGD4L macro . define-record-type)
        (g$12024$XGD4L macro . parent-rtd)
        (g$12023$XGD4L macro . nongenerative)
        (g$12022$XGD4L macro . opaque)
        (g$12021$XGD4L macro . sealed)
        (g$12020$XGD4L macro . protocol)
        (g$12019$XGD4L macro . parent)
        (g$12018$XGD4L macro . immutable)
        (g$12017$XGD4L macro . mutable)
        (g$12016$XGD4L macro . fields)
        (g$12015$XGD4L macro . error-handling-mode)
        (g$12014$XGD4L macro . file-options)
        (g$12013$XGD4L macro . buffer-mode)
        (g$12012$XGD4L macro . eol-style)
        (g$12011$XGD4L macro . guard)
        (g$12010$XGD4L macro . trace-letrec-syntax)
        (g$12009$XGD4L macro . trace-let-syntax)
        (g$12008$XGD4L macro . trace-define-syntax)
        (g$12007$XGD4L macro . trace-define)
        (g$12006$XGD4L macro . trace-lambda)
        (g$12005$XGD4L macro . unsyntax-splicing)
        (g$12004$XGD4L macro . unsyntax)
        (g$12003$XGD4L macro . unquote-splicing)
        (g$12002$XGD4L macro . unquote)
        (g$12001$XGD4L macro . _)
        (g$12000$XGD4L macro . else)
        (g$11999$XGD4L macro . =>)
        (g$11998$XGD4L macro . ...)
        (g$11997$XGD4L macro . assert)
        (g$11996$XGD4L macro . endianness)
        (g$11995$XGD4L macro . delay)
        (g$11994$XGD4L macro . time)
        (g$11993$XGD4L macro . or)
        (g$11992$XGD4L macro . and)
        (g$11991$XGD4L macro . do)
        (g$11990$XGD4L macro . cond)
        (g$11989$XGD4L macro . let*)
        (g$11988$XGD4L macro . let)
        (g$11987$XGD4L macro . identifier-syntax)
        (g$11986$XGD4L macro . with-syntax)
        (g$11985$XGD4L macro . quasisyntax)
        (g$11984$XGD4L macro . quasiquote)
        (g$11983$XGD4L macro . syntax-rules)
        (g$11982$XGD4L macro . include-into)
        (g$11981$XGD4L macro . include)
        (g$11980$XGD4L macro . define-struct)
        (g$11979$XGD4L macro . let-values)
        (g$11978$XGD4L macro . let*-values)
        (g$11977$XGD4L core-macro . record-constructor-descriptor)
        (g$11976$XGD4L core-macro . record-type-descriptor)
        (g$11975$XGD4L core-macro . fluid-let-syntax)
        (g$11974$XGD4L core-macro . case)
        (g$11973$XGD4L core-macro . parameterize)
        (g$11972$XGD4L core-macro . unless)
        (g$11971$XGD4L core-macro . when)
        (g$11970$XGD4L core-macro . if)
        (g$11969$XGD4L core-macro . letrec*)
        (g$11968$XGD4L core-macro . letrec)
        (g$11967$XGD4L core-macro . type-descriptor)
        (g$11966$XGD4L core-macro . case-lambda)
        (g$11965$XGD4L core-macro . lambda)
        (g$11964$XGD4L core-macro . syntax)
        (g$11963$XGD4L core-macro . syntax-case)
        (g$11962$XGD4L core-macro . quote)
        (g$11961$XGD4L core-macro . foreign-call)
        (g$11960$XGD4L letrec-syntax)
        (g$11959$XGD4L let-syntax)
        (g$11958$XGD4L set!)
        (g$11957$XGD4L import)
        (g$11956$XGD4L library)
        (g$11955$XGD4L begin)
        (g$11954$XGD4L module)
        (g$11953$XGD4L define-syntax)
        (g$11952$XGD4L define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7412$XGD4L
      'g$12633$XGD4L
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12512$XGD4L)
        (eval-core . g$12511$XGD4L)
        (set-symbol-value! . g$12510$XGD4L)
        (symbol-value . g$12509$XGD4L)
        (gensym . g$12507$XGD4L)
        (void . g$12506$XGD4L))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11441$XGD4L
     g$trace-printer$11481$XGD4L
     (g$make-parameter$6866$XGD4L write))
   (g$command-line$11442$XGD4L
     g$command-line$11482$XGD4L
     (g$make-parameter$6866$XGD4L (get-command-line)))
   (g$local-library-path$11443$XGD4L
     g$local-library-path$11483$XGD4L
     (case-lambda
       ((g$filename$11454$XGD4L)
        (cons
          (g$get-directory-name$5757$XGD4L g$filename$11454$XGD4L)
          (g$library-path$7396$XGD4L)))))
   (g$load/args$11444$XGD4L
     g$load/args$11484$XGD4L
     (case-lambda
       ((g$filename$11455$XGD4L . g$args$11456$XGD4L)
        (begin
          (apply
            g$load-r6rs-top-level$11451$XGD4L
            g$filename$11455$XGD4L
            'load
            g$args$11456$XGD4L)
          (void)))))
   (g$load$11445$XGD4L
     g$load$11485$XGD4L
     (case-lambda
       ((g$filename$11457$XGD4L)
        (begin
          (apply
            g$load-r6rs-top-level$11451$XGD4L
            g$filename$11457$XGD4L
            'load
            (cdr (g$command-line$11442$XGD4L)))
          (void)))))
   (g$ironscheme-build$11446$XGD4L
     g$ironscheme-build$11486$XGD4L
     (case-lambda (() (g$load$11445$XGD4L '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11447$XGD4L
     g$eval-top-level$11487$XGD4L
     (case-lambda
       ((g$x$11458$XGD4L)
        (g$eval$11419$XGD4L
          g$x$11458$XGD4L
          (g$interaction-environment$11439$XGD4L)))))
   (g$compile-system-libraries$11448$XGD4L
     g$compile-system-libraries$11488$XGD4L
     (case-lambda
       (()
        (g$eval-top-level$11447$XGD4L
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11449$XGD4L
     g$compile$11489$XGD4L
     (case-lambda
       ((g$filename$11459$XGD4L)
        (g$load-r6rs-top-level$11451$XGD4L g$filename$11459$XGD4L 'compile))))
   (g$compile->closure$11450$XGD4L
     g$compile->closure$11490$XGD4L
     (case-lambda
       ((g$filename$11460$XGD4L)
        (g$load-r6rs-top-level$11451$XGD4L g$filename$11460$XGD4L 'closure))))
   (g$load-r6rs-top-level$11451$XGD4L
     g$load-r6rs-top-level$11491$XGD4L
     (case-lambda
       ((g$filename$11461$XGD4L g$how$11462$XGD4L . g$args$11463$XGD4L)
        ((case-lambda
           ((g$library-path$11466$XGD4L g$library-path$11467$XGD4L)
            ((case-lambda
               ((g$swap$11468$XGD4L)
                (dynamic-wind
                  g$swap$11468$XGD4L
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11469$XGD4L)
                         ((case-lambda
                            ((g$t$11470$XGD4L)
                             (if (eqv? g$t$11470$XGD4L 'closure)
                               (g$pre-compile-r6rs-top-level$11438$XGD4L
                                 g$x*$11469$XGD4L)
                               (if (eqv? g$t$11470$XGD4L 'load)
                                 ((case-lambda
                                    ((g$command-line$11473$XGD4L
                                       g$command-line$11474$XGD4L)
                                     ((case-lambda
                                        ((g$swap$11475$XGD4L)
                                         (dynamic-wind
                                           g$swap$11475$XGD4L
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11437$XGD4L
                                                 g$x*$11469$XGD4L))))
                                           g$swap$11475$XGD4L)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11476$XGD4L)
                                             (begin
                                               (g$command-line$11473$XGD4L
                                                 g$command-line$11474$XGD4L)
                                               (set! g$command-line$11474$XGD4L
                                                 g$t$11476$XGD4L))))
                                          (g$command-line$11473$XGD4L)))))))
                                  g$command-line$11442$XGD4L
                                  (cons
                                    g$filename$11461$XGD4L
                                    (map (case-lambda
                                           ((g$x$11477$XGD4L)
                                            (g$format$6781$XGD4L
                                              '"~a"
                                              g$x$11477$XGD4L)))
                                         g$args$11463$XGD4L)))
                                 (if (eqv? g$t$11470$XGD4L 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$11437$XGD4L
                                       g$x*$11469$XGD4L)
                                     (g$serialize-all$7400$XGD4L
                                       serialize-library
                                       g$compile-core-expr$7114$XGD4L))
                                   (void))))))
                          g$how$11462$XGD4L)))
                      (with-input-from-file
                        g$filename$11461$XGD4L
                        (case-lambda
                          (()
                           ((letrec ((g$f$11478$XGD4L
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11479$XGD4L)
                                              (if (eof-object? g$x$11479$XGD4L)
                                                '()
                                                (cons
                                                  g$x$11479$XGD4L
                                                  (g$f$11478$XGD4L)))))
                                           (read-annotated))))))
                              g$f$11478$XGD4L))))))))
                  g$swap$11468$XGD4L)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11480$XGD4L)
                    (begin
                      (g$library-path$11466$XGD4L g$library-path$11467$XGD4L)
                      (set! g$library-path$11467$XGD4L g$t$11480$XGD4L))))
                 (g$library-path$11466$XGD4L)))))))
         g$library-path$7396$XGD4L
         (g$local-library-path$11443$XGD4L g$filename$11461$XGD4L)))))
   (g$fo$11452$XGD4L
     g$fo$11492$XGD4L
     (g$make-enumeration$6743$XGD4L '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7401$XGD4L
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11453$XGD4L)
         (if (g$serious-condition?$6140$XGD4L g$ex$11453$XGD4L)
           (raise g$ex$11453$XGD4L)
           (begin (display g$ex$11453$XGD4L) (newline))))))
    (set-symbol-value! 'load g$load$11445$XGD4L)
    (set-symbol-value! 'compile g$compile$11449$XGD4L)
    (set-symbol-value! 'compile->closure g$compile->closure$11450$XGD4L)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11447$XGD4L)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11412$XGD4L)
    (set-symbol-value! 'expanded2core g$expanded->core$7113$XGD4L)
    (set-symbol-value! 'trace-printer g$trace-printer$11441$XGD4L)
    (g$file-options-constructor$6867$XGD4L
      (g$enum-set-constructor$6746$XGD4L g$fo$11452$XGD4L))
    (g$library-path$7396$XGD4L (get-library-paths))))

