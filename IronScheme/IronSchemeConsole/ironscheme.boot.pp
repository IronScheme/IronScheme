;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$5655$kwCBQ
     g$list-tail$5792$kwCBQ
     (case-lambda
       ((g$lst$5683$kwCBQ g$index$5684$kwCBQ)
        (if ((case-lambda
               ((g$t$5685$kwCBQ)
                (if g$t$5685$kwCBQ
                  g$t$5685$kwCBQ
                  (begin '#f (g$negative?$6066$kwCBQ g$index$5684$kwCBQ)))))
             (null? g$lst$5683$kwCBQ))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5683$kwCBQ
            g$index$5684$kwCBQ)
          (if (g$zero?$6067$kwCBQ g$index$5684$kwCBQ)
            g$lst$5683$kwCBQ
            (g$list-tail$5655$kwCBQ
              (cdr g$lst$5683$kwCBQ)
              (- g$index$5684$kwCBQ '1)))))))
   (g$list-ref$5656$kwCBQ
     g$list-ref$5793$kwCBQ
     (case-lambda
       ((g$lst$5686$kwCBQ g$index$5687$kwCBQ)
        (car (g$list-tail$5655$kwCBQ g$lst$5686$kwCBQ g$index$5687$kwCBQ)))))
   (g$last-pair$5657$kwCBQ
     g$last-pair$5794$kwCBQ
     (case-lambda
       ((g$lst$5688$kwCBQ)
        (if (null? g$lst$5688$kwCBQ)
          g$lst$5688$kwCBQ
          (if (null? (cdr g$lst$5688$kwCBQ))
            g$lst$5688$kwCBQ
            (g$last-pair$5657$kwCBQ (cdr g$lst$5688$kwCBQ)))))))
   (g$make-list$5658$kwCBQ
     g$make-list$5795$kwCBQ
     (case-lambda
       ((g$n$5689$kwCBQ) (list->vector (make-vector g$n$5689$kwCBQ)))
       ((g$n$5690$kwCBQ g$fill$5691$kwCBQ)
        (list->vector (make-vector g$n$5690$kwCBQ g$fill$5691$kwCBQ)))))
   (g$find$5659$kwCBQ
     g$find$5796$kwCBQ
     (case-lambda
       ((g$proc$5692$kwCBQ g$l$5693$kwCBQ)
        (if (null? g$l$5693$kwCBQ)
          '#f
          ((case-lambda
             ((g$e$5694$kwCBQ g$r$5695$kwCBQ g$proc$5696$kwCBQ)
              (if (g$proc$5696$kwCBQ g$e$5694$kwCBQ)
                g$e$5694$kwCBQ
                (g$find$5659$kwCBQ g$proc$5696$kwCBQ g$r$5695$kwCBQ))))
           (car g$l$5693$kwCBQ)
           (cdr g$l$5693$kwCBQ)
           g$proc$5692$kwCBQ)))))
   (g$partition$5660$kwCBQ
     g$partition$5797$kwCBQ
     (case-lambda
       ((g$proc$5697$kwCBQ g$l$5698$kwCBQ)
        ((letrec ((g$f$5699$kwCBQ
                    (case-lambda
                      ((g$l$5700$kwCBQ g$a$5701$kwCBQ g$b$5702$kwCBQ)
                       (if (null? g$l$5700$kwCBQ)
                         (values
                           (reverse! g$a$5701$kwCBQ)
                           (reverse! g$b$5702$kwCBQ))
                         ((case-lambda
                            ((g$e$5703$kwCBQ)
                             (if (g$proc$5697$kwCBQ g$e$5703$kwCBQ)
                               (g$f$5699$kwCBQ
                                 (cdr g$l$5700$kwCBQ)
                                 (cons g$e$5703$kwCBQ g$a$5701$kwCBQ)
                                 g$b$5702$kwCBQ)
                               (g$f$5699$kwCBQ
                                 (cdr g$l$5700$kwCBQ)
                                 g$a$5701$kwCBQ
                                 (cons g$e$5703$kwCBQ g$b$5702$kwCBQ)))))
                          (car g$l$5700$kwCBQ)))))))
           g$f$5699$kwCBQ)
         g$l$5698$kwCBQ
         '()
         '()))))
   (g$remp$5661$kwCBQ
     g$remp$5798$kwCBQ
     (case-lambda
       ((g$proc$5704$kwCBQ g$l$5705$kwCBQ)
        ((letrec ((g$f$5706$kwCBQ
                    (case-lambda
                      ((g$l$5707$kwCBQ g$a$5708$kwCBQ)
                       (if (null? g$l$5707$kwCBQ)
                         (reverse! g$a$5708$kwCBQ)
                         ((case-lambda
                            ((g$e$5709$kwCBQ)
                             (if (g$proc$5704$kwCBQ g$e$5709$kwCBQ)
                               (g$f$5706$kwCBQ
                                 (cdr g$l$5707$kwCBQ)
                                 g$a$5708$kwCBQ)
                               (g$f$5706$kwCBQ
                                 (cdr g$l$5707$kwCBQ)
                                 (cons g$e$5709$kwCBQ g$a$5708$kwCBQ)))))
                          (car g$l$5707$kwCBQ)))))))
           g$f$5706$kwCBQ)
         g$l$5705$kwCBQ
         '()))))
   (g$filter$5662$kwCBQ
     g$filter$5799$kwCBQ
     (case-lambda
       ((g$proc$5710$kwCBQ g$l$5711$kwCBQ)
        ((letrec ((g$f$5712$kwCBQ
                    (case-lambda
                      ((g$l$5713$kwCBQ g$a$5714$kwCBQ)
                       (if (null? g$l$5713$kwCBQ)
                         (reverse! g$a$5714$kwCBQ)
                         ((case-lambda
                            ((g$e$5715$kwCBQ)
                             (if (g$proc$5710$kwCBQ g$e$5715$kwCBQ)
                               (g$f$5712$kwCBQ
                                 (cdr g$l$5713$kwCBQ)
                                 (cons g$e$5715$kwCBQ g$a$5714$kwCBQ))
                               (g$f$5712$kwCBQ
                                 (cdr g$l$5713$kwCBQ)
                                 g$a$5714$kwCBQ))))
                          (car g$l$5713$kwCBQ)))))))
           g$f$5712$kwCBQ)
         g$l$5711$kwCBQ
         '()))))
   (g$assq$5663$kwCBQ
     g$assq$5800$kwCBQ
     (case-lambda
       ((g$obj$5716$kwCBQ g$lst$5717$kwCBQ)
        (if (null? g$lst$5717$kwCBQ)
          '#f
          ((case-lambda
             ((g$obj$5718$kwCBQ g$t$5719$kwCBQ g$r$5720$kwCBQ)
              (if (eq? g$obj$5718$kwCBQ (car g$t$5719$kwCBQ))
                g$t$5719$kwCBQ
                (g$assq$5663$kwCBQ g$obj$5718$kwCBQ g$r$5720$kwCBQ))))
           g$obj$5716$kwCBQ
           (car g$lst$5717$kwCBQ)
           (cdr g$lst$5717$kwCBQ))))))
   (g$assv$5664$kwCBQ
     g$assv$5801$kwCBQ
     (case-lambda
       ((g$obj$5721$kwCBQ g$lst$5722$kwCBQ)
        (if (null? g$lst$5722$kwCBQ)
          '#f
          ((case-lambda
             ((g$obj$5723$kwCBQ g$t$5724$kwCBQ g$r$5725$kwCBQ)
              (if (eqv? g$obj$5723$kwCBQ (car g$t$5724$kwCBQ))
                g$t$5724$kwCBQ
                (g$assv$5664$kwCBQ g$obj$5723$kwCBQ g$r$5725$kwCBQ))))
           g$obj$5721$kwCBQ
           (car g$lst$5722$kwCBQ)
           (cdr g$lst$5722$kwCBQ))))))
   (g$assoc$5665$kwCBQ
     g$assoc$5802$kwCBQ
     (case-lambda
       ((g$obj$5726$kwCBQ g$lst$5727$kwCBQ)
        (if (null? g$lst$5727$kwCBQ)
          '#f
          ((case-lambda
             ((g$obj$5728$kwCBQ g$t$5729$kwCBQ g$r$5730$kwCBQ)
              (if (equal? g$obj$5728$kwCBQ (car g$t$5729$kwCBQ))
                g$t$5729$kwCBQ
                (g$assoc$5665$kwCBQ g$obj$5728$kwCBQ g$r$5730$kwCBQ))))
           g$obj$5726$kwCBQ
           (car g$lst$5727$kwCBQ)
           (cdr g$lst$5727$kwCBQ))))))
   (g$assp$5666$kwCBQ
     g$assp$5803$kwCBQ
     (case-lambda
       ((g$p?$5731$kwCBQ g$lst$5732$kwCBQ)
        (if (null? g$lst$5732$kwCBQ)
          '#f
          ((case-lambda
             ((g$p?$5733$kwCBQ g$t$5734$kwCBQ g$r$5735$kwCBQ)
              (if (g$p?$5733$kwCBQ (car g$t$5734$kwCBQ))
                g$t$5734$kwCBQ
                (g$assp$5666$kwCBQ g$p?$5733$kwCBQ g$r$5735$kwCBQ))))
           g$p?$5731$kwCBQ
           (car g$lst$5732$kwCBQ)
           (cdr g$lst$5732$kwCBQ))))))
   (g$memq$5667$kwCBQ
     g$memq$5804$kwCBQ
     (case-lambda
       ((g$obj$5736$kwCBQ g$lst$5737$kwCBQ)
        (if (null? g$lst$5737$kwCBQ)
          '#f
          (if (eq? g$obj$5736$kwCBQ (car g$lst$5737$kwCBQ))
            g$lst$5737$kwCBQ
            (g$memq$5667$kwCBQ g$obj$5736$kwCBQ (cdr g$lst$5737$kwCBQ)))))))
   (g$memv$5668$kwCBQ
     g$memv$5805$kwCBQ
     (case-lambda
       ((g$obj$5738$kwCBQ g$lst$5739$kwCBQ)
        (if (null? g$lst$5739$kwCBQ)
          '#f
          (if (eqv? g$obj$5738$kwCBQ (car g$lst$5739$kwCBQ))
            g$lst$5739$kwCBQ
            (g$memv$5668$kwCBQ g$obj$5738$kwCBQ (cdr g$lst$5739$kwCBQ)))))))
   (g$member$5669$kwCBQ
     g$member$5806$kwCBQ
     (case-lambda
       ((g$obj$5740$kwCBQ g$lst$5741$kwCBQ)
        (if (null? g$lst$5741$kwCBQ)
          '#f
          (if (equal? g$obj$5740$kwCBQ (car g$lst$5741$kwCBQ))
            g$lst$5741$kwCBQ
            (g$member$5669$kwCBQ g$obj$5740$kwCBQ (cdr g$lst$5741$kwCBQ)))))))
   (g$memp$5670$kwCBQ
     g$memp$5807$kwCBQ
     (case-lambda
       ((g$p?$5742$kwCBQ g$lst$5743$kwCBQ)
        (if (null? g$lst$5743$kwCBQ)
          '#f
          (if (g$p?$5742$kwCBQ (car g$lst$5743$kwCBQ))
            g$lst$5743$kwCBQ
            (g$memp$5670$kwCBQ g$p?$5742$kwCBQ (cdr g$lst$5743$kwCBQ)))))))
   (g$all-empty?$5671$kwCBQ
     g$all-empty?$5808$kwCBQ
     (case-lambda
       ((g$ls$5744$kwCBQ)
        ((case-lambda
           ((g$t$5745$kwCBQ)
            (if g$t$5745$kwCBQ
              g$t$5745$kwCBQ
              (begin
                '#f
                (if (null? (car g$ls$5744$kwCBQ))
                  (begin '#f (g$all-empty?$5671$kwCBQ (cdr g$ls$5744$kwCBQ)))
                  '#f)))))
         (null? g$ls$5744$kwCBQ)))))
   (g$split$5672$kwCBQ
     g$split$5809$kwCBQ
     (case-lambda
       ((g$ls$5746$kwCBQ)
        (if (null? g$ls$5746$kwCBQ)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5672$kwCBQ (cdr g$ls$5746$kwCBQ))))
            (case-lambda
              ((g$cars$5747$kwCBQ g$cdrs$5748$kwCBQ)
               ((case-lambda
                  ((g$a$5749$kwCBQ)
                   (values
                     (cons (car g$a$5749$kwCBQ) g$cars$5747$kwCBQ)
                     (cons (cdr g$a$5749$kwCBQ) g$cdrs$5748$kwCBQ))))
                (car g$ls$5746$kwCBQ)))))))))
   (g$for-all$5673$kwCBQ
     g$for-all$5810$kwCBQ
     (case-lambda
       ((g$f$5750$kwCBQ . g$args$5751$kwCBQ)
        (if (g$all-empty?$5671$kwCBQ g$args$5751$kwCBQ)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5672$kwCBQ g$args$5751$kwCBQ)))
            (case-lambda
              ((g$cars$5752$kwCBQ g$cdrs$5753$kwCBQ)
               (if (g$all-empty?$5671$kwCBQ g$cdrs$5753$kwCBQ)
                 (apply g$f$5750$kwCBQ g$cars$5752$kwCBQ)
                 (if (apply g$f$5750$kwCBQ g$cars$5752$kwCBQ)
                   (begin
                     '#f
                     (apply
                       g$for-all$5673$kwCBQ
                       g$f$5750$kwCBQ
                       g$cdrs$5753$kwCBQ))
                   '#f)))))))))
   (g$exists$5674$kwCBQ
     g$exists$5811$kwCBQ
     (case-lambda
       ((g$f$5754$kwCBQ . g$args$5755$kwCBQ)
        (if (g$all-empty?$5671$kwCBQ g$args$5755$kwCBQ)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5672$kwCBQ g$args$5755$kwCBQ)))
            (case-lambda
              ((g$cars$5756$kwCBQ g$cdrs$5757$kwCBQ)
               ((case-lambda
                  ((g$t$5758$kwCBQ)
                   (if g$t$5758$kwCBQ
                     g$t$5758$kwCBQ
                     (begin
                       '#f
                       (apply
                         g$exists$5674$kwCBQ
                         g$f$5754$kwCBQ
                         g$cdrs$5757$kwCBQ)))))
                (apply g$f$5754$kwCBQ g$cars$5756$kwCBQ)))))))))
   (g$map$5675$kwCBQ
     g$map$5812$kwCBQ
     (case-lambda
       ((g$proc$5759$kwCBQ . g$lists$5760$kwCBQ)
        ((letrec ((g$f$5761$kwCBQ
                    (case-lambda
                      ((g$lists$5762$kwCBQ g$a$5763$kwCBQ)
                       (if (g$all-empty?$5671$kwCBQ g$lists$5762$kwCBQ)
                         (reverse! g$a$5763$kwCBQ)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5672$kwCBQ g$lists$5762$kwCBQ)))
                           (case-lambda
                             ((g$cars$5764$kwCBQ g$cdrs$5765$kwCBQ)
                              (g$f$5761$kwCBQ
                                g$cdrs$5765$kwCBQ
                                (cons
                                  (apply g$proc$5759$kwCBQ g$cars$5764$kwCBQ)
                                  g$a$5763$kwCBQ))))))))))
           g$f$5761$kwCBQ)
         g$lists$5760$kwCBQ
         '()))))
   (g$for-each$5676$kwCBQ
     g$for-each$5813$kwCBQ
     (case-lambda
       ((g$f$5766$kwCBQ . g$args$5767$kwCBQ)
        (if (not (g$all-empty?$5671$kwCBQ g$args$5767$kwCBQ))
          (call-with-values
            (case-lambda (() (g$split$5672$kwCBQ g$args$5767$kwCBQ)))
            (case-lambda
              ((g$cars$5768$kwCBQ g$cdrs$5769$kwCBQ)
               (begin
                 (apply g$f$5766$kwCBQ g$cars$5768$kwCBQ)
                 (apply
                   g$for-each$5676$kwCBQ
                   g$f$5766$kwCBQ
                   g$cdrs$5769$kwCBQ)))))
          (void)))))
   (g$cons*$5677$kwCBQ
     g$cons*$5814$kwCBQ
     (case-lambda
       ((g$a$5770$kwCBQ . g$rest$5771$kwCBQ)
        ((letrec ((g$f$5772$kwCBQ
                    (case-lambda
                      ((g$a$5773$kwCBQ g$rest$5774$kwCBQ)
                       (if (null? g$rest$5774$kwCBQ)
                         g$a$5773$kwCBQ
                         (cons
                           g$a$5773$kwCBQ
                           (g$f$5772$kwCBQ
                             (car g$rest$5774$kwCBQ)
                             (cdr g$rest$5774$kwCBQ))))))))
           g$f$5772$kwCBQ)
         g$a$5770$kwCBQ
         g$rest$5771$kwCBQ))))
   (g$fold-left$5678$kwCBQ
     g$fold-left$5815$kwCBQ
     (case-lambda
       ((g$combine$5775$kwCBQ
          g$nil$5776$kwCBQ
          g$list1$5777$kwCBQ
          .
          g$lists$5778$kwCBQ)
        (if (null? g$list1$5777$kwCBQ)
          g$nil$5776$kwCBQ
          (apply
            g$fold-left$5678$kwCBQ
            (g$cons*$5677$kwCBQ
              g$combine$5775$kwCBQ
              (apply
                g$combine$5775$kwCBQ
                (g$cons*$5677$kwCBQ
                  g$nil$5776$kwCBQ
                  (car g$list1$5777$kwCBQ)
                  (g$map$5675$kwCBQ car g$lists$5778$kwCBQ)))
              (cdr g$list1$5777$kwCBQ)
              (g$map$5675$kwCBQ cdr g$lists$5778$kwCBQ)))))))
   (g$fold-right$5679$kwCBQ
     g$fold-right$5816$kwCBQ
     (case-lambda
       ((g$combine$5779$kwCBQ
          g$nil$5780$kwCBQ
          g$list1$5781$kwCBQ
          .
          g$lists$5782$kwCBQ)
        (if (null? g$list1$5781$kwCBQ)
          g$nil$5780$kwCBQ
          (apply
            g$combine$5779$kwCBQ
            (append
              (list (car g$list1$5781$kwCBQ))
              (g$map$5675$kwCBQ car g$lists$5782$kwCBQ)
              (list
                (apply
                  g$fold-right$5679$kwCBQ
                  (g$cons*$5677$kwCBQ
                    g$combine$5779$kwCBQ
                    g$nil$5780$kwCBQ
                    (cdr g$list1$5781$kwCBQ)
                    (g$map$5675$kwCBQ cdr g$lists$5782$kwCBQ))))))))))
   (g$remove$5680$kwCBQ
     g$remove$5817$kwCBQ
     (case-lambda
       ((g$obj$5783$kwCBQ g$list$5784$kwCBQ)
        (g$remp$5661$kwCBQ
          (case-lambda
            ((g$x$5785$kwCBQ) (equal? g$obj$5783$kwCBQ g$x$5785$kwCBQ)))
          g$list$5784$kwCBQ))))
   (g$remv$5681$kwCBQ
     g$remv$5818$kwCBQ
     (case-lambda
       ((g$obj$5786$kwCBQ g$list$5787$kwCBQ)
        (g$remp$5661$kwCBQ
          (case-lambda
            ((g$x$5788$kwCBQ) (eqv? g$obj$5786$kwCBQ g$x$5788$kwCBQ)))
          g$list$5787$kwCBQ))))
   (g$remq$5682$kwCBQ
     g$remq$5819$kwCBQ
     (case-lambda
       ((g$obj$5789$kwCBQ g$list$5790$kwCBQ)
        (g$remp$5661$kwCBQ
          (case-lambda ((g$x$5791$kwCBQ) (eq? g$obj$5789$kwCBQ g$x$5791$kwCBQ)))
          g$list$5790$kwCBQ)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5820$kwCBQ
     g$caar$6037$kwCBQ
     (case-lambda ((g$x$5887$kwCBQ) (car (car g$x$5887$kwCBQ)))))
   (g$cadr$5821$kwCBQ
     g$cadr$6038$kwCBQ
     (case-lambda ((g$x$5888$kwCBQ) (car (cdr g$x$5888$kwCBQ)))))
   (g$cdar$5822$kwCBQ
     g$cdar$6039$kwCBQ
     (case-lambda ((g$x$5889$kwCBQ) (cdr (car g$x$5889$kwCBQ)))))
   (g$cddr$5823$kwCBQ
     g$cddr$6040$kwCBQ
     (case-lambda ((g$x$5890$kwCBQ) (cdr (cdr g$x$5890$kwCBQ)))))
   (g$caaar$5824$kwCBQ
     g$caaar$6041$kwCBQ
     (case-lambda
       ((g$x$5891$kwCBQ) (g$caar$5820$kwCBQ (car g$x$5891$kwCBQ)))))
   (g$caadr$5825$kwCBQ
     g$caadr$6042$kwCBQ
     (case-lambda
       ((g$x$5892$kwCBQ) (g$caar$5820$kwCBQ (cdr g$x$5892$kwCBQ)))))
   (g$cadar$5826$kwCBQ
     g$cadar$6043$kwCBQ
     (case-lambda
       ((g$x$5893$kwCBQ) (g$cadr$5821$kwCBQ (car g$x$5893$kwCBQ)))))
   (g$caddr$5827$kwCBQ
     g$caddr$6044$kwCBQ
     (case-lambda
       ((g$x$5894$kwCBQ) (g$cadr$5821$kwCBQ (cdr g$x$5894$kwCBQ)))))
   (g$cdaar$5828$kwCBQ
     g$cdaar$6045$kwCBQ
     (case-lambda
       ((g$x$5895$kwCBQ) (g$cdar$5822$kwCBQ (car g$x$5895$kwCBQ)))))
   (g$cdadr$5829$kwCBQ
     g$cdadr$6046$kwCBQ
     (case-lambda
       ((g$x$5896$kwCBQ) (g$cdar$5822$kwCBQ (cdr g$x$5896$kwCBQ)))))
   (g$cddar$5830$kwCBQ
     g$cddar$6047$kwCBQ
     (case-lambda
       ((g$x$5897$kwCBQ) (g$cddr$5823$kwCBQ (car g$x$5897$kwCBQ)))))
   (g$cdddr$5831$kwCBQ
     g$cdddr$6048$kwCBQ
     (case-lambda
       ((g$x$5898$kwCBQ) (g$cddr$5823$kwCBQ (cdr g$x$5898$kwCBQ)))))
   (g$caaaar$5832$kwCBQ
     g$caaaar$6049$kwCBQ
     (case-lambda
       ((g$x$5899$kwCBQ) (g$caaar$5824$kwCBQ (car g$x$5899$kwCBQ)))))
   (g$caaadr$5833$kwCBQ
     g$caaadr$6050$kwCBQ
     (case-lambda
       ((g$x$5900$kwCBQ) (g$caaar$5824$kwCBQ (cdr g$x$5900$kwCBQ)))))
   (g$caadar$5834$kwCBQ
     g$caadar$6051$kwCBQ
     (case-lambda
       ((g$x$5901$kwCBQ) (g$caadr$5825$kwCBQ (car g$x$5901$kwCBQ)))))
   (g$caaddr$5835$kwCBQ
     g$caaddr$6052$kwCBQ
     (case-lambda
       ((g$x$5902$kwCBQ) (g$caadr$5825$kwCBQ (cdr g$x$5902$kwCBQ)))))
   (g$cadaar$5836$kwCBQ
     g$cadaar$6053$kwCBQ
     (case-lambda
       ((g$x$5903$kwCBQ) (g$cadar$5826$kwCBQ (car g$x$5903$kwCBQ)))))
   (g$cadadr$5837$kwCBQ
     g$cadadr$6054$kwCBQ
     (case-lambda
       ((g$x$5904$kwCBQ) (g$cadar$5826$kwCBQ (cdr g$x$5904$kwCBQ)))))
   (g$caddar$5838$kwCBQ
     g$caddar$6055$kwCBQ
     (case-lambda
       ((g$x$5905$kwCBQ) (g$caddr$5827$kwCBQ (car g$x$5905$kwCBQ)))))
   (g$cadddr$5839$kwCBQ
     g$cadddr$6056$kwCBQ
     (case-lambda
       ((g$x$5906$kwCBQ) (g$caddr$5827$kwCBQ (cdr g$x$5906$kwCBQ)))))
   (g$cdaaar$5840$kwCBQ
     g$cdaaar$6057$kwCBQ
     (case-lambda
       ((g$x$5907$kwCBQ) (g$cdaar$5828$kwCBQ (car g$x$5907$kwCBQ)))))
   (g$cdaadr$5841$kwCBQ
     g$cdaadr$6058$kwCBQ
     (case-lambda
       ((g$x$5908$kwCBQ) (g$cdaar$5828$kwCBQ (cdr g$x$5908$kwCBQ)))))
   (g$cdadar$5842$kwCBQ
     g$cdadar$6059$kwCBQ
     (case-lambda
       ((g$x$5909$kwCBQ) (g$cdadr$5829$kwCBQ (car g$x$5909$kwCBQ)))))
   (g$cdaddr$5843$kwCBQ
     g$cdaddr$6060$kwCBQ
     (case-lambda
       ((g$x$5910$kwCBQ) (g$cdadr$5829$kwCBQ (cdr g$x$5910$kwCBQ)))))
   (g$cddaar$5844$kwCBQ
     g$cddaar$6061$kwCBQ
     (case-lambda
       ((g$x$5911$kwCBQ) (g$cddar$5830$kwCBQ (car g$x$5911$kwCBQ)))))
   (g$cddadr$5845$kwCBQ
     g$cddadr$6062$kwCBQ
     (case-lambda
       ((g$x$5912$kwCBQ) (g$cddar$5830$kwCBQ (cdr g$x$5912$kwCBQ)))))
   (g$cdddar$5846$kwCBQ
     g$cdddar$6063$kwCBQ
     (case-lambda
       ((g$x$5913$kwCBQ) (g$cdddr$5831$kwCBQ (car g$x$5913$kwCBQ)))))
   (g$cddddr$5847$kwCBQ
     g$cddddr$6064$kwCBQ
     (case-lambda
       ((g$x$5914$kwCBQ) (g$cdddr$5831$kwCBQ (cdr g$x$5914$kwCBQ)))))
   (g$positive?$5848$kwCBQ
     g$positive?$6065$kwCBQ
     (case-lambda
       ((g$r$5915$kwCBQ)
        (begin
          (if (not (real-valued? g$r$5915$kwCBQ))
            (assertion-violation 'positive? '"not a real" g$r$5915$kwCBQ)
            (void))
          (< '0 g$r$5915$kwCBQ)))))
   (g$negative?$5849$kwCBQ
     g$negative?$6066$kwCBQ
     (case-lambda
       ((g$r$5916$kwCBQ)
        (begin
          (if (not (real-valued? g$r$5916$kwCBQ))
            (assertion-violation 'negative? '"not a real" g$r$5916$kwCBQ)
            (void))
          (> '0 g$r$5916$kwCBQ)))))
   (g$zero?$5850$kwCBQ
     g$zero?$6067$kwCBQ
     (case-lambda
       ((g$r$5917$kwCBQ)
        (begin
          (if (not (real-valued? g$r$5917$kwCBQ))
            (assertion-violation 'zero? '"not a real" g$r$5917$kwCBQ)
            (void))
          (= '0 g$r$5917$kwCBQ)))))
   (g$even?$5851$kwCBQ
     g$even?$6068$kwCBQ
     (case-lambda
       ((g$n$5918$kwCBQ)
        (begin
          (if (not (integer-valued? g$n$5918$kwCBQ))
            (assertion-violation 'even? '"not a integer" g$n$5918$kwCBQ)
            (void))
          (= '0 (mod g$n$5918$kwCBQ '2))))))
   (g$odd?$5852$kwCBQ
     g$odd?$6069$kwCBQ
     (case-lambda
       ((g$n$5919$kwCBQ)
        (begin
          (if (not (integer-valued? g$n$5919$kwCBQ))
            (assertion-violation 'odd? '"not a integer" g$n$5919$kwCBQ)
            (void))
          (= '1 (mod g$n$5919$kwCBQ '2))))))
   (g$max$5853$kwCBQ
     g$max$6070$kwCBQ
     (case-lambda
       ((g$a$5920$kwCBQ . g$rest$5921$kwCBQ)
        (g$fold-left$5815$kwCBQ
          (case-lambda
            ((g$a$5922$kwCBQ g$b$5923$kwCBQ)
             ((case-lambda
                ((g$r$5924$kwCBQ)
                 (if ((case-lambda
                        ((g$t$5925$kwCBQ)
                         (if g$t$5925$kwCBQ
                           g$t$5925$kwCBQ
                           (begin '#f (inexact? g$b$5923$kwCBQ)))))
                      (inexact? g$a$5922$kwCBQ))
                   (inexact g$r$5924$kwCBQ)
                   g$r$5924$kwCBQ)))
              (if (< g$a$5922$kwCBQ g$b$5923$kwCBQ)
                g$b$5923$kwCBQ
                g$a$5922$kwCBQ))))
          g$a$5920$kwCBQ
          g$rest$5921$kwCBQ))))
   (g$min$5854$kwCBQ
     g$min$6071$kwCBQ
     (case-lambda
       ((g$a$5926$kwCBQ . g$rest$5927$kwCBQ)
        (g$fold-left$5815$kwCBQ
          (case-lambda
            ((g$a$5928$kwCBQ g$b$5929$kwCBQ)
             ((case-lambda
                ((g$r$5930$kwCBQ)
                 (if ((case-lambda
                        ((g$t$5931$kwCBQ)
                         (if g$t$5931$kwCBQ
                           g$t$5931$kwCBQ
                           (begin '#f (inexact? g$b$5929$kwCBQ)))))
                      (inexact? g$a$5928$kwCBQ))
                   (inexact g$r$5930$kwCBQ)
                   g$r$5930$kwCBQ)))
              (if (> g$a$5928$kwCBQ g$b$5929$kwCBQ)
                g$b$5929$kwCBQ
                g$a$5928$kwCBQ))))
          g$a$5926$kwCBQ
          g$rest$5927$kwCBQ))))
   (g$gcd$5855$kwCBQ
     g$gcd$6072$kwCBQ
     (case-lambda
       (g$nums$5932$kwCBQ
        ((case-lambda
           ((g$t$5933$kwCBQ)
            (if (g$memv$5805$kwCBQ g$t$5933$kwCBQ '(0))
              '0
              (if (g$memv$5805$kwCBQ g$t$5933$kwCBQ '(1))
                ((case-lambda
                   ((g$n$5934$kwCBQ)
                    (begin
                      (if (not (integer-valued? g$n$5934$kwCBQ))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$5934$kwCBQ)
                        (void))
                      (abs g$n$5934$kwCBQ))))
                 (car g$nums$5932$kwCBQ))
                (if (g$memv$5805$kwCBQ g$t$5933$kwCBQ '(2))
                  ((case-lambda
                     ((g$a$5935$kwCBQ g$b$5936$kwCBQ)
                      (begin
                        (if (not (integer-valued? g$a$5935$kwCBQ))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$5935$kwCBQ)
                          (void))
                        (if (not (integer-valued? g$b$5936$kwCBQ))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$5936$kwCBQ)
                          (void))
                        (if (g$zero?$5850$kwCBQ g$b$5936$kwCBQ)
                          (abs g$a$5935$kwCBQ)
                          (abs (g$gcd$5855$kwCBQ
                                 g$b$5936$kwCBQ
                                 (mod g$a$5935$kwCBQ g$b$5936$kwCBQ)))))))
                   (car g$nums$5932$kwCBQ)
                   (g$cadr$5821$kwCBQ g$nums$5932$kwCBQ))
                  (g$fold-left$5815$kwCBQ
                    g$gcd$5855$kwCBQ
                    (abs (car g$nums$5932$kwCBQ))
                    (cdr g$nums$5932$kwCBQ)))))))
         (length g$nums$5932$kwCBQ)))))
   (g$lcm$5856$kwCBQ
     g$lcm$6073$kwCBQ
     (case-lambda
       (g$nums$5937$kwCBQ
        ((case-lambda
           ((g$t$5938$kwCBQ)
            (if (g$memv$5805$kwCBQ g$t$5938$kwCBQ '(0))
              '1
              (if (g$memv$5805$kwCBQ g$t$5938$kwCBQ '(1))
                ((case-lambda
                   ((g$n$5939$kwCBQ)
                    (begin
                      (if (not (integer-valued? g$n$5939$kwCBQ))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$5939$kwCBQ)
                        (void))
                      (abs g$n$5939$kwCBQ))))
                 (car g$nums$5937$kwCBQ))
                (if (g$memv$5805$kwCBQ g$t$5938$kwCBQ '(2))
                  ((case-lambda
                     ((g$a$5940$kwCBQ g$b$5941$kwCBQ)
                      (begin
                        (if (not (integer-valued? g$a$5940$kwCBQ))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$5940$kwCBQ)
                          (void))
                        (if (not (integer-valued? g$b$5941$kwCBQ))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$5941$kwCBQ)
                          (void))
                        (if ((case-lambda
                               ((g$t$5942$kwCBQ)
                                (if g$t$5942$kwCBQ
                                  g$t$5942$kwCBQ
                                  (begin
                                    '#f
                                    (g$zero?$5850$kwCBQ g$b$5941$kwCBQ)))))
                             (g$zero?$5850$kwCBQ g$a$5940$kwCBQ))
                          '0
                          (abs (* (/ g$a$5940$kwCBQ
                                     (g$gcd$5855$kwCBQ
                                       g$a$5940$kwCBQ
                                       g$b$5941$kwCBQ))
                                  g$b$5941$kwCBQ))))))
                   (car g$nums$5937$kwCBQ)
                   (g$cadr$5821$kwCBQ g$nums$5937$kwCBQ))
                  (g$fold-left$5815$kwCBQ
                    g$lcm$5856$kwCBQ
                    (abs (car g$nums$5937$kwCBQ))
                    (cdr g$nums$5937$kwCBQ)))))))
         (length g$nums$5937$kwCBQ)))))
   (g$string=?$5863$kwCBQ
     g$string=?$6074$kwCBQ
     (case-lambda
       ((g$a$5943$kwCBQ g$b$5944$kwCBQ . g$rest$5945$kwCBQ)
        (begin
          (if (not (string? g$a$5943$kwCBQ))
            (assertion-violation 'string=? '"not a string" g$a$5943$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5946$kwCBQ)
               (begin
                 (if (not (string? g$x$5946$kwCBQ))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5946$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5947$kwCBQ)
                     (begin
                       (set! g$a$5943$kwCBQ g$x$5946$kwCBQ)
                       g$r$5947$kwCBQ)))
                  (fx=? (string-compare g$a$5943$kwCBQ g$x$5946$kwCBQ) '0)))))
            (cons g$b$5944$kwCBQ g$rest$5945$kwCBQ))))))
   (g$string<?$5864$kwCBQ
     g$string<?$6075$kwCBQ
     (case-lambda
       ((g$a$5948$kwCBQ g$b$5949$kwCBQ . g$rest$5950$kwCBQ)
        (begin
          (if (not (string? g$a$5948$kwCBQ))
            (assertion-violation 'string<? '"not a string" g$a$5948$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5951$kwCBQ)
               (begin
                 (if (not (string? g$x$5951$kwCBQ))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5951$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5952$kwCBQ)
                     (begin
                       (set! g$a$5948$kwCBQ g$x$5951$kwCBQ)
                       g$r$5952$kwCBQ)))
                  (fx<? (string-compare g$a$5948$kwCBQ g$x$5951$kwCBQ) '0)))))
            (cons g$b$5949$kwCBQ g$rest$5950$kwCBQ))))))
   (g$string>?$5865$kwCBQ
     g$string>?$6076$kwCBQ
     (case-lambda
       ((g$a$5953$kwCBQ g$b$5954$kwCBQ . g$rest$5955$kwCBQ)
        (begin
          (if (not (string? g$a$5953$kwCBQ))
            (assertion-violation 'string>? '"not a string" g$a$5953$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5956$kwCBQ)
               (begin
                 (if (not (string? g$x$5956$kwCBQ))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5956$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5957$kwCBQ)
                     (begin
                       (set! g$a$5953$kwCBQ g$x$5956$kwCBQ)
                       g$r$5957$kwCBQ)))
                  (fx>? (string-compare g$a$5953$kwCBQ g$x$5956$kwCBQ) '0)))))
            (cons g$b$5954$kwCBQ g$rest$5955$kwCBQ))))))
   (g$string<=?$5866$kwCBQ
     g$string<=?$6077$kwCBQ
     (case-lambda
       ((g$a$5958$kwCBQ g$b$5959$kwCBQ . g$rest$5960$kwCBQ)
        (begin
          (if (not (string? g$a$5958$kwCBQ))
            (assertion-violation 'string<=? '"not a string" g$a$5958$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5961$kwCBQ)
               (begin
                 (if (not (string? g$x$5961$kwCBQ))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5961$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5962$kwCBQ)
                     (begin
                       (set! g$a$5958$kwCBQ g$x$5961$kwCBQ)
                       g$r$5962$kwCBQ)))
                  (fx<=? (string-compare g$a$5958$kwCBQ g$x$5961$kwCBQ) '0)))))
            (cons g$b$5959$kwCBQ g$rest$5960$kwCBQ))))))
   (g$string>=?$5867$kwCBQ
     g$string>=?$6078$kwCBQ
     (case-lambda
       ((g$a$5963$kwCBQ g$b$5964$kwCBQ . g$rest$5965$kwCBQ)
        (begin
          (if (not (string? g$a$5963$kwCBQ))
            (assertion-violation 'string>=? '"not a string" g$a$5963$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5966$kwCBQ)
               (begin
                 (if (not (string? g$x$5966$kwCBQ))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5966$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5967$kwCBQ)
                     (begin
                       (set! g$a$5963$kwCBQ g$x$5966$kwCBQ)
                       g$r$5967$kwCBQ)))
                  (fx>=? (string-compare g$a$5963$kwCBQ g$x$5966$kwCBQ) '0)))))
            (cons g$b$5964$kwCBQ g$rest$5965$kwCBQ))))))
   (g$symbol=?$5868$kwCBQ
     g$symbol=?$6079$kwCBQ
     (case-lambda
       ((g$a$5968$kwCBQ g$b$5969$kwCBQ . g$rest$5970$kwCBQ)
        (begin
          (if (not (symbol? g$a$5968$kwCBQ))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5968$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5971$kwCBQ)
               (begin
                 (if (not (symbol? g$x$5971$kwCBQ))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5971$kwCBQ)
                   (void))
                 (eq? g$a$5968$kwCBQ g$x$5971$kwCBQ))))
            (cons g$b$5969$kwCBQ g$rest$5970$kwCBQ))))))
   (g$boolean=?$5869$kwCBQ
     g$boolean=?$6080$kwCBQ
     (case-lambda
       ((g$a$5972$kwCBQ g$b$5973$kwCBQ . g$rest$5974$kwCBQ)
        (begin
          (if (not (boolean? g$a$5972$kwCBQ))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5972$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5975$kwCBQ)
               (begin
                 (if (not (boolean? g$x$5975$kwCBQ))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5975$kwCBQ)
                   (void))
                 (eq? g$a$5972$kwCBQ g$x$5975$kwCBQ))))
            (cons g$b$5973$kwCBQ g$rest$5974$kwCBQ))))))
   (g$char=?$5876$kwCBQ
     g$char=?$6081$kwCBQ
     (case-lambda
       ((g$a$5976$kwCBQ g$b$5977$kwCBQ . g$rest$5978$kwCBQ)
        (begin
          (if (not (char? g$a$5976$kwCBQ))
            (assertion-violation 'char=? '"not a char" g$a$5976$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5979$kwCBQ)
               (begin
                 (if (not (char? g$x$5979$kwCBQ))
                   (assertion-violation 'char=? '"not a char" g$x$5979$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5980$kwCBQ)
                     (begin
                       (set! g$a$5976$kwCBQ g$x$5979$kwCBQ)
                       g$r$5980$kwCBQ)))
                  (fx=?
                    (char->integer g$a$5976$kwCBQ)
                    (char->integer g$x$5979$kwCBQ))))))
            (cons g$b$5977$kwCBQ g$rest$5978$kwCBQ))))))
   (g$char<?$5877$kwCBQ
     g$char<?$6082$kwCBQ
     (case-lambda
       ((g$a$5981$kwCBQ g$b$5982$kwCBQ . g$rest$5983$kwCBQ)
        (begin
          (if (not (char? g$a$5981$kwCBQ))
            (assertion-violation 'char<? '"not a char" g$a$5981$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5984$kwCBQ)
               (begin
                 (if (not (char? g$x$5984$kwCBQ))
                   (assertion-violation 'char<? '"not a char" g$x$5984$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5985$kwCBQ)
                     (begin
                       (set! g$a$5981$kwCBQ g$x$5984$kwCBQ)
                       g$r$5985$kwCBQ)))
                  (fx<?
                    (char->integer g$a$5981$kwCBQ)
                    (char->integer g$x$5984$kwCBQ))))))
            (cons g$b$5982$kwCBQ g$rest$5983$kwCBQ))))))
   (g$char>?$5878$kwCBQ
     g$char>?$6083$kwCBQ
     (case-lambda
       ((g$a$5986$kwCBQ g$b$5987$kwCBQ . g$rest$5988$kwCBQ)
        (begin
          (if (not (char? g$a$5986$kwCBQ))
            (assertion-violation 'char>? '"not a char" g$a$5986$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5989$kwCBQ)
               (begin
                 (if (not (char? g$x$5989$kwCBQ))
                   (assertion-violation 'char>? '"not a char" g$x$5989$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5990$kwCBQ)
                     (begin
                       (set! g$a$5986$kwCBQ g$x$5989$kwCBQ)
                       g$r$5990$kwCBQ)))
                  (fx>?
                    (char->integer g$a$5986$kwCBQ)
                    (char->integer g$x$5989$kwCBQ))))))
            (cons g$b$5987$kwCBQ g$rest$5988$kwCBQ))))))
   (g$char<=?$5879$kwCBQ
     g$char<=?$6084$kwCBQ
     (case-lambda
       ((g$a$5991$kwCBQ g$b$5992$kwCBQ . g$rest$5993$kwCBQ)
        (begin
          (if (not (char? g$a$5991$kwCBQ))
            (assertion-violation 'char<=? '"not a char" g$a$5991$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5994$kwCBQ)
               (begin
                 (if (not (char? g$x$5994$kwCBQ))
                   (assertion-violation 'char<=? '"not a char" g$x$5994$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$5995$kwCBQ)
                     (begin
                       (set! g$a$5991$kwCBQ g$x$5994$kwCBQ)
                       g$r$5995$kwCBQ)))
                  (fx<=?
                    (char->integer g$a$5991$kwCBQ)
                    (char->integer g$x$5994$kwCBQ))))))
            (cons g$b$5992$kwCBQ g$rest$5993$kwCBQ))))))
   (g$char>=?$5880$kwCBQ
     g$char>=?$6085$kwCBQ
     (case-lambda
       ((g$a$5996$kwCBQ g$b$5997$kwCBQ . g$rest$5998$kwCBQ)
        (begin
          (if (not (char? g$a$5996$kwCBQ))
            (assertion-violation 'char>=? '"not a char" g$a$5996$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$5999$kwCBQ)
               (begin
                 (if (not (char? g$x$5999$kwCBQ))
                   (assertion-violation 'char>=? '"not a char" g$x$5999$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6000$kwCBQ)
                     (begin
                       (set! g$a$5996$kwCBQ g$x$5999$kwCBQ)
                       g$r$6000$kwCBQ)))
                  (fx>=?
                    (char->integer g$a$5996$kwCBQ)
                    (char->integer g$x$5999$kwCBQ))))))
            (cons g$b$5997$kwCBQ g$rest$5998$kwCBQ))))))
   (g$rationalize$5881$kwCBQ
     g$rationalize$6086$kwCBQ
     (case-lambda
       ((g$x$6001$kwCBQ g$e$6002$kwCBQ)
        (if (if (infinite? g$x$6001$kwCBQ)
              (begin '#f (infinite? g$e$6002$kwCBQ))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$6003$kwCBQ)
              (if (if (exact? g$x$6001$kwCBQ)
                    (begin '#f (exact? g$e$6002$kwCBQ))
                    '#f)
                g$r$6003$kwCBQ
                (inexact g$r$6003$kwCBQ))))
           (apply
             /
             (g$find-ratio$5882$kwCBQ g$x$6001$kwCBQ g$e$6002$kwCBQ)))))))
   (g$find-ratio$5882$kwCBQ
     g$find-ratio$6087$kwCBQ
     (case-lambda
       ((g$x$6004$kwCBQ g$e$6005$kwCBQ)
        (g$find-ratio-between$5883$kwCBQ
          (- g$x$6004$kwCBQ g$e$6005$kwCBQ)
          (+ g$x$6004$kwCBQ g$e$6005$kwCBQ)))))
   (g$find-ratio-between$5883$kwCBQ
     g$find-ratio-between$6088$kwCBQ
     (case-lambda
       ((g$x$6006$kwCBQ g$y$6007$kwCBQ)
        (letrec* ((g$sr$6008$kwCBQ
                    (case-lambda
                      ((g$x$6010$kwCBQ g$y$6011$kwCBQ)
                       ((case-lambda
                          ((g$fx$6012$kwCBQ g$fy$6013$kwCBQ)
                           (if (>= g$fx$6012$kwCBQ g$x$6010$kwCBQ)
                             (list g$fx$6012$kwCBQ '1)
                             (if (= g$fx$6012$kwCBQ g$fy$6013$kwCBQ)
                               ((case-lambda
                                  ((g$rat$6014$kwCBQ)
                                   (list
                                     (+ (g$cadr$5821$kwCBQ g$rat$6014$kwCBQ)
                                        (* g$fx$6012$kwCBQ
                                           (car g$rat$6014$kwCBQ)))
                                     (car g$rat$6014$kwCBQ))))
                                (g$sr$6008$kwCBQ
                                  (/ (- g$y$6011$kwCBQ g$fy$6013$kwCBQ))
                                  (/ (- g$x$6010$kwCBQ g$fx$6012$kwCBQ))))
                               (list (+ '1 g$fx$6012$kwCBQ) '1)))))
                        (exact (floor g$x$6010$kwCBQ))
                        (exact (floor g$y$6011$kwCBQ)))))))
          (if (< g$y$6007$kwCBQ g$x$6006$kwCBQ)
            (g$find-ratio-between$5883$kwCBQ g$y$6007$kwCBQ g$x$6006$kwCBQ)
            (if (>= g$x$6006$kwCBQ g$y$6007$kwCBQ)
              (list g$x$6006$kwCBQ '1)
              (if (g$positive?$5848$kwCBQ g$x$6006$kwCBQ)
                (g$sr$6008$kwCBQ g$x$6006$kwCBQ g$y$6007$kwCBQ)
                (if (g$negative?$5849$kwCBQ g$y$6007$kwCBQ)
                  ((case-lambda
                     ((g$rat$6009$kwCBQ)
                      (list
                        (- (car g$rat$6009$kwCBQ))
                        (g$cadr$5821$kwCBQ g$rat$6009$kwCBQ))))
                   (g$sr$6008$kwCBQ (- g$y$6007$kwCBQ) (- g$x$6006$kwCBQ)))
                  '(0 1)))))))))
   (g$vector-map$5884$kwCBQ
     g$vector-map$6089$kwCBQ
     (case-lambda
       ((g$p$6015$kwCBQ g$vec1$6016$kwCBQ . g$vecs$6017$kwCBQ)
        ((case-lambda
           ((g$len$6018$kwCBQ)
            ((case-lambda
               ((g$res$6019$kwCBQ)
                (letrec ((g$loop$6020$kwCBQ
                           (case-lambda
                             ((g$i$6021$kwCBQ)
                              (if (fx=? g$i$6021$kwCBQ g$len$6018$kwCBQ)
                                (begin (if '#f '#f (void)) g$res$6019$kwCBQ)
                                (begin
                                  (vector-set!
                                    g$res$6019$kwCBQ
                                    g$i$6021$kwCBQ
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$5812$kwCBQ
                                             (case-lambda
                                               ((g$x$6022$kwCBQ)
                                                (vector-ref
                                                  g$x$6022$kwCBQ
                                                  g$i$6021$kwCBQ)))
                                             (cons
                                               g$vec1$6016$kwCBQ
                                               g$vecs$6017$kwCBQ)))))
                                      g$p$6015$kwCBQ))
                                  (g$loop$6020$kwCBQ
                                    (fx+ g$i$6021$kwCBQ '1))))))))
                  (g$loop$6020$kwCBQ '0))))
             (make-vector g$len$6018$kwCBQ))))
         (vector-length g$vec1$6016$kwCBQ)))))
   (g$vector-for-each$5885$kwCBQ
     g$vector-for-each$6090$kwCBQ
     (case-lambda
       ((g$p$6023$kwCBQ g$vec1$6024$kwCBQ . g$vecs$6025$kwCBQ)
        ((case-lambda
           ((g$len$6026$kwCBQ)
            (letrec ((g$loop$6027$kwCBQ
                       (case-lambda
                         ((g$i$6028$kwCBQ)
                          (if (fx=? g$i$6028$kwCBQ g$len$6026$kwCBQ)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5812$kwCBQ
                                       (case-lambda
                                         ((g$x$6029$kwCBQ)
                                          (vector-ref
                                            g$x$6029$kwCBQ
                                            g$i$6028$kwCBQ)))
                                       (cons
                                         g$vec1$6024$kwCBQ
                                         g$vecs$6025$kwCBQ)))))
                                g$p$6023$kwCBQ)
                              (g$loop$6027$kwCBQ (fx+ g$i$6028$kwCBQ '1))))))))
              (g$loop$6027$kwCBQ '0))))
         (vector-length g$vec1$6024$kwCBQ)))))
   (g$string-for-each$5886$kwCBQ
     g$string-for-each$6091$kwCBQ
     (case-lambda
       ((g$p$6030$kwCBQ g$str1$6031$kwCBQ . g$strs$6032$kwCBQ)
        ((case-lambda
           ((g$len$6033$kwCBQ)
            (letrec ((g$loop$6034$kwCBQ
                       (case-lambda
                         ((g$i$6035$kwCBQ)
                          (if (fx=? g$i$6035$kwCBQ g$len$6033$kwCBQ)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5812$kwCBQ
                                       (case-lambda
                                         ((g$x$6036$kwCBQ)
                                          (string-ref
                                            g$x$6036$kwCBQ
                                            g$i$6035$kwCBQ)))
                                       (cons
                                         g$str1$6031$kwCBQ
                                         g$strs$6032$kwCBQ)))))
                                g$p$6030$kwCBQ)
                              (g$loop$6034$kwCBQ (fx+ g$i$6035$kwCBQ '1))))))))
              (g$loop$6034$kwCBQ '0))))
         (string-length g$str1$6031$kwCBQ))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6280$kwCBQ g$using$6313$kwCBQ (clr-using-internal 'system))
   (g$using$6282$kwCBQ
     g$using$6314$kwCBQ
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6283$kwCBQ
     g$make-eq-hashtable$6315$kwCBQ
     (case-lambda
       (() (g$make-eq-hashtable$6283$kwCBQ '32))
       ((g$k$6292$kwCBQ)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6292$kwCBQ)))))
   (g$make-eqv-hashtable$6284$kwCBQ
     g$make-eqv-hashtable$6316$kwCBQ
     (case-lambda
       (() (g$make-eqv-hashtable$6284$kwCBQ '32))
       ((g$k$6293$kwCBQ) (make-hashtable eqv-hash eqv? g$k$6293$kwCBQ))))
   (g$hashtable-size$6285$kwCBQ
     g$hashtable-size$6317$kwCBQ
     (case-lambda
       ((g$ht$6294$kwCBQ)
        (clr-call-internal 'hashtable 'get_count g$ht$6294$kwCBQ))))
   (g$hashtable-ref$6286$kwCBQ
     g$hashtable-ref$6318$kwCBQ
     (case-lambda
       ((g$ht$6295$kwCBQ g$key$6296$kwCBQ g$default$6297$kwCBQ)
        (letrec* ((g$r$6298$kwCBQ
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6295$kwCBQ
                      g$key$6296$kwCBQ)))
          (if (not (null? g$r$6298$kwCBQ))
            g$r$6298$kwCBQ
            g$default$6297$kwCBQ)))))
   (g$hashtable-set!$6287$kwCBQ
     g$hashtable-set!$6319$kwCBQ
     (case-lambda
       ((g$ht$6299$kwCBQ g$key$6300$kwCBQ g$obj$6301$kwCBQ)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6299$kwCBQ
          g$key$6300$kwCBQ
          g$obj$6301$kwCBQ))))
   (g$hashtable-delete!$6288$kwCBQ
     g$hashtable-delete!$6320$kwCBQ
     (case-lambda
       ((g$ht$6302$kwCBQ g$key$6303$kwCBQ)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6302$kwCBQ
          g$key$6303$kwCBQ))))
   (g$hashtable-contains?$6289$kwCBQ
     g$hashtable-contains?$6321$kwCBQ
     (case-lambda
       ((g$ht$6304$kwCBQ g$key$6305$kwCBQ)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6304$kwCBQ
          g$key$6305$kwCBQ))))
   (g$hashtable-update!$6290$kwCBQ
     g$hashtable-update!$6322$kwCBQ
     (case-lambda
       ((g$ht$6306$kwCBQ
          g$key$6307$kwCBQ
          g$proc$6308$kwCBQ
          g$default$6309$kwCBQ)
        (g$hashtable-set!$6287$kwCBQ
          g$ht$6306$kwCBQ
          g$key$6307$kwCBQ
          (g$proc$6308$kwCBQ
            (g$hashtable-ref$6286$kwCBQ
              g$ht$6306$kwCBQ
              g$key$6307$kwCBQ
              g$default$6309$kwCBQ))))))
   (g$hashtable-clear!$6291$kwCBQ
     g$hashtable-clear!$6323$kwCBQ
     (case-lambda
       ((g$ht$6310$kwCBQ) (g$hashtable-clear!$6291$kwCBQ g$ht$6310$kwCBQ '32))
       ((g$ht$6311$kwCBQ g$k$6312$kwCBQ)
        (clr-call-internal 'hashtable 'clear g$ht$6311$kwCBQ)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6325$kwCBQ g$using$6332$kwCBQ (clr-using-internal 'system.io))
   (g$file-exists?$6326$kwCBQ
     g$file-exists?$6333$kwCBQ
     (case-lambda
       ((g$fn$6329$kwCBQ)
        (clr-call-internal 'file 'exists '() g$fn$6329$kwCBQ))))
   (g$delete-file$6327$kwCBQ
     g$delete-file$6334$kwCBQ
     (case-lambda
       ((g$fn$6330$kwCBQ)
        (clr-call-internal 'file 'delete '() g$fn$6330$kwCBQ))))
   (g$get-directory-name$6328$kwCBQ
     g$get-directory-name$6335$kwCBQ
     (case-lambda
       ((g$path$6331$kwCBQ)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6331$kwCBQ)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6336$kwCBQ
     g$native-endianness$6447$kwCBQ
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6337$kwCBQ
     g$bytevector-u16-ref$6448$kwCBQ
     (case-lambda
       ((g$bytevector$6365$kwCBQ g$k$6366$kwCBQ g$endianness$6367$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6365$kwCBQ
          g$k$6366$kwCBQ
          g$endianness$6367$kwCBQ
          '2))))
   (g$bytevector-s16-ref$6338$kwCBQ
     g$bytevector-s16-ref$6449$kwCBQ
     (case-lambda
       ((g$bytevector$6368$kwCBQ g$k$6369$kwCBQ g$endianness$6370$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6368$kwCBQ
          g$k$6369$kwCBQ
          g$endianness$6370$kwCBQ
          '2))))
   (g$bytevector-u16-native-ref$6339$kwCBQ
     g$bytevector-u16-native-ref$6450$kwCBQ
     (case-lambda
       ((g$bytevector$6371$kwCBQ g$k$6372$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6371$kwCBQ
          g$k$6372$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '2))))
   (g$bytevector-s16-native-ref$6340$kwCBQ
     g$bytevector-s16-native-ref$6451$kwCBQ
     (case-lambda
       ((g$bytevector$6373$kwCBQ g$k$6374$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6373$kwCBQ
          g$k$6374$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '2))))
   (g$bytevector-u16-set!$6341$kwCBQ
     g$bytevector-u16-set!$6452$kwCBQ
     (case-lambda
       ((g$bytevector$6375$kwCBQ
          g$k$6376$kwCBQ
          g$n$6377$kwCBQ
          g$endianness$6378$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6375$kwCBQ
          g$k$6376$kwCBQ
          g$n$6377$kwCBQ
          g$endianness$6378$kwCBQ
          '2))))
   (g$bytevector-s16-set!$6342$kwCBQ
     g$bytevector-s16-set!$6453$kwCBQ
     (case-lambda
       ((g$bytevector$6379$kwCBQ
          g$k$6380$kwCBQ
          g$n$6381$kwCBQ
          g$endianness$6382$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6379$kwCBQ
          g$k$6380$kwCBQ
          g$n$6381$kwCBQ
          g$endianness$6382$kwCBQ
          '2))))
   (g$bytevector-u16-native-set!$6343$kwCBQ
     g$bytevector-u16-native-set!$6454$kwCBQ
     (case-lambda
       ((g$bytevector$6383$kwCBQ g$k$6384$kwCBQ g$n$6385$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6383$kwCBQ
          g$k$6384$kwCBQ
          g$n$6385$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '2))))
   (g$bytevector-s16-native-set!$6344$kwCBQ
     g$bytevector-s16-native-set!$6455$kwCBQ
     (case-lambda
       ((g$bytevector$6386$kwCBQ g$k$6387$kwCBQ g$n$6388$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6386$kwCBQ
          g$k$6387$kwCBQ
          g$n$6388$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '2))))
   (g$bytevector-u32-ref$6345$kwCBQ
     g$bytevector-u32-ref$6456$kwCBQ
     (case-lambda
       ((g$bytevector$6389$kwCBQ g$k$6390$kwCBQ g$endianness$6391$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6389$kwCBQ
          g$k$6390$kwCBQ
          g$endianness$6391$kwCBQ
          '4))))
   (g$bytevector-s32-ref$6346$kwCBQ
     g$bytevector-s32-ref$6457$kwCBQ
     (case-lambda
       ((g$bytevector$6392$kwCBQ g$k$6393$kwCBQ g$endianness$6394$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6392$kwCBQ
          g$k$6393$kwCBQ
          g$endianness$6394$kwCBQ
          '4))))
   (g$bytevector-u32-native-ref$6347$kwCBQ
     g$bytevector-u32-native-ref$6458$kwCBQ
     (case-lambda
       ((g$bytevector$6395$kwCBQ g$k$6396$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6395$kwCBQ
          g$k$6396$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '4))))
   (g$bytevector-s32-native-ref$6348$kwCBQ
     g$bytevector-s32-native-ref$6459$kwCBQ
     (case-lambda
       ((g$bytevector$6397$kwCBQ g$k$6398$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6397$kwCBQ
          g$k$6398$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '4))))
   (g$bytevector-u32-set!$6349$kwCBQ
     g$bytevector-u32-set!$6460$kwCBQ
     (case-lambda
       ((g$bytevector$6399$kwCBQ
          g$k$6400$kwCBQ
          g$n$6401$kwCBQ
          g$endianness$6402$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6399$kwCBQ
          g$k$6400$kwCBQ
          g$n$6401$kwCBQ
          g$endianness$6402$kwCBQ
          '4))))
   (g$bytevector-s32-set!$6350$kwCBQ
     g$bytevector-s32-set!$6461$kwCBQ
     (case-lambda
       ((g$bytevector$6403$kwCBQ
          g$k$6404$kwCBQ
          g$n$6405$kwCBQ
          g$endianness$6406$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6403$kwCBQ
          g$k$6404$kwCBQ
          g$n$6405$kwCBQ
          g$endianness$6406$kwCBQ
          '4))))
   (g$bytevector-u32-native-set!$6351$kwCBQ
     g$bytevector-u32-native-set!$6462$kwCBQ
     (case-lambda
       ((g$bytevector$6407$kwCBQ g$k$6408$kwCBQ g$n$6409$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6407$kwCBQ
          g$k$6408$kwCBQ
          g$n$6409$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '4))))
   (g$bytevector-s32-native-set!$6352$kwCBQ
     g$bytevector-s32-native-set!$6463$kwCBQ
     (case-lambda
       ((g$bytevector$6410$kwCBQ g$k$6411$kwCBQ g$n$6412$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6410$kwCBQ
          g$k$6411$kwCBQ
          g$n$6412$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '4))))
   (g$bytevector-u64-ref$6353$kwCBQ
     g$bytevector-u64-ref$6464$kwCBQ
     (case-lambda
       ((g$bytevector$6413$kwCBQ g$k$6414$kwCBQ g$endianness$6415$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6413$kwCBQ
          g$k$6414$kwCBQ
          g$endianness$6415$kwCBQ
          '8))))
   (g$bytevector-s64-ref$6354$kwCBQ
     g$bytevector-s64-ref$6465$kwCBQ
     (case-lambda
       ((g$bytevector$6416$kwCBQ g$k$6417$kwCBQ g$endianness$6418$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6416$kwCBQ
          g$k$6417$kwCBQ
          g$endianness$6418$kwCBQ
          '8))))
   (g$bytevector-u64-native-ref$6355$kwCBQ
     g$bytevector-u64-native-ref$6466$kwCBQ
     (case-lambda
       ((g$bytevector$6419$kwCBQ g$k$6420$kwCBQ)
        (bytevector-uint-ref
          g$bytevector$6419$kwCBQ
          g$k$6420$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '8))))
   (g$bytevector-s64-native-ref$6356$kwCBQ
     g$bytevector-s64-native-ref$6467$kwCBQ
     (case-lambda
       ((g$bytevector$6421$kwCBQ g$k$6422$kwCBQ)
        (bytevector-sint-ref
          g$bytevector$6421$kwCBQ
          g$k$6422$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '8))))
   (g$bytevector-u64-set!$6357$kwCBQ
     g$bytevector-u64-set!$6468$kwCBQ
     (case-lambda
       ((g$bytevector$6423$kwCBQ
          g$k$6424$kwCBQ
          g$n$6425$kwCBQ
          g$endianness$6426$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6423$kwCBQ
          g$k$6424$kwCBQ
          g$n$6425$kwCBQ
          g$endianness$6426$kwCBQ
          '8))))
   (g$bytevector-s64-set!$6358$kwCBQ
     g$bytevector-s64-set!$6469$kwCBQ
     (case-lambda
       ((g$bytevector$6427$kwCBQ
          g$k$6428$kwCBQ
          g$n$6429$kwCBQ
          g$endianness$6430$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6427$kwCBQ
          g$k$6428$kwCBQ
          g$n$6429$kwCBQ
          g$endianness$6430$kwCBQ
          '8))))
   (g$bytevector-u64-native-set!$6359$kwCBQ
     g$bytevector-u64-native-set!$6470$kwCBQ
     (case-lambda
       ((g$bytevector$6431$kwCBQ g$k$6432$kwCBQ g$n$6433$kwCBQ)
        (bytevector-uint-set!
          g$bytevector$6431$kwCBQ
          g$k$6432$kwCBQ
          g$n$6433$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '8))))
   (g$bytevector-s64-native-set!$6360$kwCBQ
     g$bytevector-s64-native-set!$6471$kwCBQ
     (case-lambda
       ((g$bytevector$6434$kwCBQ g$k$6435$kwCBQ g$n$6436$kwCBQ)
        (bytevector-sint-set!
          g$bytevector$6434$kwCBQ
          g$k$6435$kwCBQ
          g$n$6436$kwCBQ
          (g$native-endianness$6336$kwCBQ)
          '8))))
   (g$bytevector-ieee-single-native-ref$6361$kwCBQ
     g$bytevector-ieee-single-native-ref$6472$kwCBQ
     (case-lambda
       ((g$bytevector$6437$kwCBQ g$k$6438$kwCBQ)
        (if (not (g$zero?$6067$kwCBQ (mod g$k$6438$kwCBQ '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6438$kwCBQ)
          (bytevector-ieee-single-ref
            g$bytevector$6437$kwCBQ
            g$k$6438$kwCBQ
            (g$native-endianness$6336$kwCBQ))))))
   (g$bytevector-ieee-double-native-ref$6362$kwCBQ
     g$bytevector-ieee-double-native-ref$6473$kwCBQ
     (case-lambda
       ((g$bytevector$6439$kwCBQ g$k$6440$kwCBQ)
        (if (not (g$zero?$6067$kwCBQ (mod g$k$6440$kwCBQ '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6440$kwCBQ)
          (bytevector-ieee-double-ref
            g$bytevector$6439$kwCBQ
            g$k$6440$kwCBQ
            (g$native-endianness$6336$kwCBQ))))))
   (g$bytevector-ieee-single-native-set!$6363$kwCBQ
     g$bytevector-ieee-single-native-set!$6474$kwCBQ
     (case-lambda
       ((g$bytevector$6441$kwCBQ g$k$6442$kwCBQ g$x$6443$kwCBQ)
        (if (not (g$zero?$6067$kwCBQ (mod g$k$6442$kwCBQ '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6442$kwCBQ)
          (bytevector-ieee-single-set!
            g$bytevector$6441$kwCBQ
            g$k$6442$kwCBQ
            g$x$6443$kwCBQ
            (g$native-endianness$6336$kwCBQ))))))
   (g$bytevector-ieee-double-native-set!$6364$kwCBQ
     g$bytevector-ieee-double-native-set!$6475$kwCBQ
     (case-lambda
       ((g$bytevector$6444$kwCBQ g$k$6445$kwCBQ g$x$6446$kwCBQ)
        (if (not (g$zero?$6067$kwCBQ (mod g$k$6445$kwCBQ '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6445$kwCBQ)
          (bytevector-ieee-double-set!
            g$bytevector$6444$kwCBQ
            g$k$6445$kwCBQ
            g$x$6446$kwCBQ
            (g$native-endianness$6336$kwCBQ)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$7459$6476$kwCBQ
     g$7459$6571$kwCBQ
     (make-record-type-descriptor
       '&condition
       '#f
       'g$7462$kwCBQ
       '#f
       '#f
       '#()))
   (g$7461$6477$kwCBQ g$7461$6572$kwCBQ '#f)
   (g$7460$6478$kwCBQ
     g$7460$6573$kwCBQ
     (make-record-constructor-descriptor
       g$7459$6476$kwCBQ
       '#f
       g$7461$6477$kwCBQ))
   (g$&condition?$6479$kwCBQ
     g$&condition?$6574$kwCBQ
     (record-predicate g$7459$6476$kwCBQ))
   (g$make-&condition$6480$kwCBQ
     g$make-&condition$6575$kwCBQ
     (record-constructor g$7460$6478$kwCBQ))
   (g$&condition-rtd$6481$kwCBQ
     g$&condition-rtd$6576$kwCBQ
     g$7459$6476$kwCBQ)
   (g$&condition-rcd$6482$kwCBQ
     g$&condition-rcd$6577$kwCBQ
     g$7460$6478$kwCBQ)
   (g$7475$6483$kwCBQ
     g$7475$6578$kwCBQ
     (make-record-type-descriptor
       '&message
       g$7459$6476$kwCBQ
       'g$7478$kwCBQ
       '#f
       '#f
       '#((immutable message))))
   (g$7477$6484$kwCBQ g$7477$6579$kwCBQ '#f)
   (g$7476$6485$kwCBQ
     g$7476$6580$kwCBQ
     (make-record-constructor-descriptor
       g$7475$6483$kwCBQ
       g$7460$6478$kwCBQ
       g$7477$6484$kwCBQ))
   (g$7474$6486$kwCBQ
     g$7474$6581$kwCBQ
     (record-predicate g$7475$6483$kwCBQ))
   (g$make-message-condition$6487$kwCBQ
     g$make-message-condition$6582$kwCBQ
     (record-constructor g$7476$6485$kwCBQ))
   (g$7473$6488$kwCBQ
     g$7473$6583$kwCBQ
     (record-accessor g$7475$6483$kwCBQ '0))
   (g$message-condition?$6489$kwCBQ
     g$message-condition?$6584$kwCBQ
     (condition-predicate g$7475$6483$kwCBQ))
   (g$condition-message$6490$kwCBQ
     g$condition-message$6585$kwCBQ
     (condition-accessor g$7475$6483$kwCBQ g$7473$6488$kwCBQ))
   (g$7491$6491$kwCBQ
     g$7491$6586$kwCBQ
     (make-record-type-descriptor
       '&warning
       g$7459$6476$kwCBQ
       'g$7494$kwCBQ
       '#f
       '#f
       '#()))
   (g$7493$6492$kwCBQ g$7493$6587$kwCBQ '#f)
   (g$7492$6493$kwCBQ
     g$7492$6588$kwCBQ
     (make-record-constructor-descriptor
       g$7491$6491$kwCBQ
       g$7460$6478$kwCBQ
       g$7493$6492$kwCBQ))
   (g$7490$6494$kwCBQ
     g$7490$6589$kwCBQ
     (record-predicate g$7491$6491$kwCBQ))
   (g$make-warning$6495$kwCBQ
     g$make-warning$6590$kwCBQ
     (record-constructor g$7492$6493$kwCBQ))
   (g$warning?$6496$kwCBQ
     g$warning?$6591$kwCBQ
     (condition-predicate g$7491$6491$kwCBQ))
   (g$7505$6497$kwCBQ
     g$7505$6592$kwCBQ
     (make-record-type-descriptor
       '&serious
       g$7459$6476$kwCBQ
       'g$7508$kwCBQ
       '#f
       '#f
       '#()))
   (g$7507$6498$kwCBQ g$7507$6593$kwCBQ '#f)
   (g$7506$6499$kwCBQ
     g$7506$6594$kwCBQ
     (make-record-constructor-descriptor
       g$7505$6497$kwCBQ
       g$7460$6478$kwCBQ
       g$7507$6498$kwCBQ))
   (g$7504$6500$kwCBQ
     g$7504$6595$kwCBQ
     (record-predicate g$7505$6497$kwCBQ))
   (g$make-serious-condition$6501$kwCBQ
     g$make-serious-condition$6596$kwCBQ
     (record-constructor g$7506$6499$kwCBQ))
   (g$serious-condition?$6502$kwCBQ
     g$serious-condition?$6597$kwCBQ
     (condition-predicate g$7505$6497$kwCBQ))
   (g$7519$6503$kwCBQ
     g$7519$6598$kwCBQ
     (make-record-type-descriptor
       '&error
       g$7505$6497$kwCBQ
       'g$7522$kwCBQ
       '#f
       '#f
       '#()))
   (g$7521$6504$kwCBQ g$7521$6599$kwCBQ '#f)
   (g$7520$6505$kwCBQ
     g$7520$6600$kwCBQ
     (make-record-constructor-descriptor
       g$7519$6503$kwCBQ
       g$7506$6499$kwCBQ
       g$7521$6504$kwCBQ))
   (g$7518$6506$kwCBQ
     g$7518$6601$kwCBQ
     (record-predicate g$7519$6503$kwCBQ))
   (g$make-error$6507$kwCBQ
     g$make-error$6602$kwCBQ
     (record-constructor g$7520$6505$kwCBQ))
   (g$error?$6508$kwCBQ
     g$error?$6603$kwCBQ
     (condition-predicate g$7519$6503$kwCBQ))
   (g$7533$6509$kwCBQ
     g$7533$6604$kwCBQ
     (make-record-type-descriptor
       '&violation
       g$7505$6497$kwCBQ
       'g$7536$kwCBQ
       '#f
       '#f
       '#()))
   (g$7535$6510$kwCBQ g$7535$6605$kwCBQ '#f)
   (g$7534$6511$kwCBQ
     g$7534$6606$kwCBQ
     (make-record-constructor-descriptor
       g$7533$6509$kwCBQ
       g$7506$6499$kwCBQ
       g$7535$6510$kwCBQ))
   (g$7532$6512$kwCBQ
     g$7532$6607$kwCBQ
     (record-predicate g$7533$6509$kwCBQ))
   (g$make-violation$6513$kwCBQ
     g$make-violation$6608$kwCBQ
     (record-constructor g$7534$6511$kwCBQ))
   (g$violation?$6514$kwCBQ
     g$violation?$6609$kwCBQ
     (condition-predicate g$7533$6509$kwCBQ))
   (g$7547$6515$kwCBQ
     g$7547$6610$kwCBQ
     (make-record-type-descriptor
       '&assertion
       g$7533$6509$kwCBQ
       'g$7550$kwCBQ
       '#f
       '#f
       '#()))
   (g$7549$6516$kwCBQ g$7549$6611$kwCBQ '#f)
   (g$7548$6517$kwCBQ
     g$7548$6612$kwCBQ
     (make-record-constructor-descriptor
       g$7547$6515$kwCBQ
       g$7534$6511$kwCBQ
       g$7549$6516$kwCBQ))
   (g$7546$6518$kwCBQ
     g$7546$6613$kwCBQ
     (record-predicate g$7547$6515$kwCBQ))
   (g$make-assertion-violation$6519$kwCBQ
     g$make-assertion-violation$6614$kwCBQ
     (record-constructor g$7548$6517$kwCBQ))
   (g$assertion-violation?$6520$kwCBQ
     g$assertion-violation?$6615$kwCBQ
     (condition-predicate g$7547$6515$kwCBQ))
   (g$7562$6521$kwCBQ
     g$7562$6616$kwCBQ
     (make-record-type-descriptor
       '&irritants
       g$7459$6476$kwCBQ
       'g$7565$kwCBQ
       '#f
       '#f
       '#((immutable irritants))))
   (g$7564$6522$kwCBQ g$7564$6617$kwCBQ '#f)
   (g$7563$6523$kwCBQ
     g$7563$6618$kwCBQ
     (make-record-constructor-descriptor
       g$7562$6521$kwCBQ
       g$7460$6478$kwCBQ
       g$7564$6522$kwCBQ))
   (g$7561$6524$kwCBQ
     g$7561$6619$kwCBQ
     (record-predicate g$7562$6521$kwCBQ))
   (g$make-irritants-condition$6525$kwCBQ
     g$make-irritants-condition$6620$kwCBQ
     (record-constructor g$7563$6523$kwCBQ))
   (g$7560$6526$kwCBQ
     g$7560$6621$kwCBQ
     (record-accessor g$7562$6521$kwCBQ '0))
   (g$irritants-condition?$6527$kwCBQ
     g$irritants-condition?$6622$kwCBQ
     (condition-predicate g$7562$6521$kwCBQ))
   (g$condition-irritants$6528$kwCBQ
     g$condition-irritants$6623$kwCBQ
     (condition-accessor g$7562$6521$kwCBQ g$7560$6526$kwCBQ))
   (g$7579$6529$kwCBQ
     g$7579$6624$kwCBQ
     (make-record-type-descriptor
       '&who
       g$7459$6476$kwCBQ
       'g$7582$kwCBQ
       '#f
       '#f
       '#((immutable who))))
   (g$7581$6530$kwCBQ g$7581$6625$kwCBQ '#f)
   (g$7580$6531$kwCBQ
     g$7580$6626$kwCBQ
     (make-record-constructor-descriptor
       g$7579$6529$kwCBQ
       g$7460$6478$kwCBQ
       g$7581$6530$kwCBQ))
   (g$7578$6532$kwCBQ
     g$7578$6627$kwCBQ
     (record-predicate g$7579$6529$kwCBQ))
   (g$make-who-condition$6533$kwCBQ
     g$make-who-condition$6628$kwCBQ
     (record-constructor g$7580$6531$kwCBQ))
   (g$7577$6534$kwCBQ
     g$7577$6629$kwCBQ
     (record-accessor g$7579$6529$kwCBQ '0))
   (g$who-condition?$6535$kwCBQ
     g$who-condition?$6630$kwCBQ
     (condition-predicate g$7579$6529$kwCBQ))
   (g$condition-who$6536$kwCBQ
     g$condition-who$6631$kwCBQ
     (condition-accessor g$7579$6529$kwCBQ g$7577$6534$kwCBQ))
   (g$7595$6537$kwCBQ
     g$7595$6632$kwCBQ
     (make-record-type-descriptor
       '&non-continuable
       g$7533$6509$kwCBQ
       'g$7598$kwCBQ
       '#f
       '#f
       '#()))
   (g$7597$6538$kwCBQ g$7597$6633$kwCBQ '#f)
   (g$7596$6539$kwCBQ
     g$7596$6634$kwCBQ
     (make-record-constructor-descriptor
       g$7595$6537$kwCBQ
       g$7534$6511$kwCBQ
       g$7597$6538$kwCBQ))
   (g$7594$6540$kwCBQ
     g$7594$6635$kwCBQ
     (record-predicate g$7595$6537$kwCBQ))
   (g$make-non-continuable-violation$6541$kwCBQ
     g$make-non-continuable-violation$6636$kwCBQ
     (record-constructor g$7596$6539$kwCBQ))
   (g$non-continuable-violation?$6542$kwCBQ
     g$non-continuable-violation?$6637$kwCBQ
     (condition-predicate g$7595$6537$kwCBQ))
   (g$7609$6543$kwCBQ
     g$7609$6638$kwCBQ
     (make-record-type-descriptor
       '&implementation-restriction
       g$7533$6509$kwCBQ
       'g$7612$kwCBQ
       '#f
       '#f
       '#()))
   (g$7611$6544$kwCBQ g$7611$6639$kwCBQ '#f)
   (g$7610$6545$kwCBQ
     g$7610$6640$kwCBQ
     (make-record-constructor-descriptor
       g$7609$6543$kwCBQ
       g$7534$6511$kwCBQ
       g$7611$6544$kwCBQ))
   (g$7608$6546$kwCBQ
     g$7608$6641$kwCBQ
     (record-predicate g$7609$6543$kwCBQ))
   (g$make-implementation-restriction-violation$6547$kwCBQ
     g$make-implementation-restriction-violation$6642$kwCBQ
     (record-constructor g$7610$6545$kwCBQ))
   (g$implementation-restriction-violation?$6548$kwCBQ
     g$implementation-restriction-violation?$6643$kwCBQ
     (condition-predicate g$7609$6543$kwCBQ))
   (g$7623$6549$kwCBQ
     g$7623$6644$kwCBQ
     (make-record-type-descriptor
       '&lexical
       g$7533$6509$kwCBQ
       'g$7626$kwCBQ
       '#f
       '#f
       '#()))
   (g$7625$6550$kwCBQ g$7625$6645$kwCBQ '#f)
   (g$7624$6551$kwCBQ
     g$7624$6646$kwCBQ
     (make-record-constructor-descriptor
       g$7623$6549$kwCBQ
       g$7534$6511$kwCBQ
       g$7625$6550$kwCBQ))
   (g$7622$6552$kwCBQ
     g$7622$6647$kwCBQ
     (record-predicate g$7623$6549$kwCBQ))
   (g$make-lexical-violation$6553$kwCBQ
     g$make-lexical-violation$6648$kwCBQ
     (record-constructor g$7624$6551$kwCBQ))
   (g$lexical-violation?$6554$kwCBQ
     g$lexical-violation?$6649$kwCBQ
     (condition-predicate g$7623$6549$kwCBQ))
   (g$7639$6555$kwCBQ
     g$7639$6650$kwCBQ
     (make-record-type-descriptor
       '&syntax
       g$7533$6509$kwCBQ
       'g$7642$kwCBQ
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7641$6556$kwCBQ g$7641$6651$kwCBQ '#f)
   (g$7640$6557$kwCBQ
     g$7640$6652$kwCBQ
     (make-record-constructor-descriptor
       g$7639$6555$kwCBQ
       g$7534$6511$kwCBQ
       g$7641$6556$kwCBQ))
   (g$7638$6558$kwCBQ
     g$7638$6653$kwCBQ
     (record-predicate g$7639$6555$kwCBQ))
   (g$make-syntax-violation$6559$kwCBQ
     g$make-syntax-violation$6654$kwCBQ
     (record-constructor g$7640$6557$kwCBQ))
   (g$7636$6560$kwCBQ
     g$7636$6655$kwCBQ
     (record-accessor g$7639$6555$kwCBQ '0))
   (g$7637$6561$kwCBQ
     g$7637$6656$kwCBQ
     (record-accessor g$7639$6555$kwCBQ '1))
   (g$syntax-violation?$6562$kwCBQ
     g$syntax-violation?$6657$kwCBQ
     (condition-predicate g$7639$6555$kwCBQ))
   (g$syntax-violation-form$6563$kwCBQ
     g$syntax-violation-form$6658$kwCBQ
     (condition-accessor g$7639$6555$kwCBQ g$7636$6560$kwCBQ))
   (g$syntax-violation-subform$6564$kwCBQ
     g$syntax-violation-subform$6659$kwCBQ
     (condition-accessor g$7639$6555$kwCBQ g$7637$6561$kwCBQ))
   (g$7657$6565$kwCBQ
     g$7657$6660$kwCBQ
     (make-record-type-descriptor
       '&undefined
       g$7533$6509$kwCBQ
       'g$7660$kwCBQ
       '#f
       '#f
       '#()))
   (g$7659$6566$kwCBQ g$7659$6661$kwCBQ '#f)
   (g$7658$6567$kwCBQ
     g$7658$6662$kwCBQ
     (make-record-constructor-descriptor
       g$7657$6565$kwCBQ
       g$7534$6511$kwCBQ
       g$7659$6566$kwCBQ))
   (g$7656$6568$kwCBQ
     g$7656$6663$kwCBQ
     (record-predicate g$7657$6565$kwCBQ))
   (g$make-undefined-violation$6569$kwCBQ
     g$make-undefined-violation$6664$kwCBQ
     (record-constructor g$7658$6567$kwCBQ))
   (g$undefined-violation?$6570$kwCBQ
     g$undefined-violation?$6665$kwCBQ
     (condition-predicate g$7657$6565$kwCBQ)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6666$kwCBQ
     g$append!$6672$kwCBQ
     (case-lambda
       ((g$a$6667$kwCBQ . g$b$6668$kwCBQ)
        (if (null? g$a$6667$kwCBQ)
          g$b$6668$kwCBQ
          (if (null? g$b$6668$kwCBQ)
            g$a$6667$kwCBQ
            (begin
              ((letrec ((g$f$6669$kwCBQ
                          (case-lambda
                            ((g$a$6670$kwCBQ)
                             ((case-lambda
                                ((g$n$6671$kwCBQ)
                                 (if (null? g$n$6671$kwCBQ)
                                   (set-cdr! g$a$6670$kwCBQ g$b$6668$kwCBQ)
                                   (g$f$6669$kwCBQ g$n$6671$kwCBQ))))
                              (cdr g$a$6670$kwCBQ))))))
                 g$f$6669$kwCBQ)
               g$a$6667$kwCBQ)
              g$a$6667$kwCBQ)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$6673$kwCBQ g$inexact->exact$6693$kwCBQ exact)
   (g$exact->inexact$6674$kwCBQ g$exact->inexact$6694$kwCBQ inexact)
   (g$sign$6675$kwCBQ
     g$sign$6695$kwCBQ
     (case-lambda
       ((g$n$6681$kwCBQ)
        (if (> g$n$6681$kwCBQ '0) '1 (if (< g$n$6681$kwCBQ '0) '-1 '0)))))
   (g$quotient$6676$kwCBQ
     g$quotient$6696$kwCBQ
     (case-lambda
       ((g$n1$6682$kwCBQ g$n2$6683$kwCBQ)
        (begin
          (if (not (integer-valued? g$n1$6682$kwCBQ))
            (assertion-violation 'quotient '"not an integer" g$n1$6682$kwCBQ)
            (void))
          (if (not (integer-valued? g$n2$6683$kwCBQ))
            (assertion-violation 'quotient '"not an integer" g$n2$6683$kwCBQ)
            (void))
          (* (g$sign$6675$kwCBQ g$n1$6682$kwCBQ)
             (g$sign$6675$kwCBQ g$n2$6683$kwCBQ)
             (div (abs g$n1$6682$kwCBQ) (abs g$n2$6683$kwCBQ)))))))
   (g$remainder$6677$kwCBQ
     g$remainder$6697$kwCBQ
     (case-lambda
       ((g$n1$6684$kwCBQ g$n2$6685$kwCBQ)
        (begin
          (if (not (integer-valued? g$n1$6684$kwCBQ))
            (assertion-violation 'remainder '"not an integer" g$n1$6684$kwCBQ)
            (void))
          (if (not (integer-valued? g$n2$6685$kwCBQ))
            (assertion-violation 'remainder '"not an integer" g$n2$6685$kwCBQ)
            (void))
          (* (g$sign$6675$kwCBQ g$n1$6684$kwCBQ)
             (mod (abs g$n1$6684$kwCBQ) (abs g$n2$6685$kwCBQ)))))))
   (g$modulo$6678$kwCBQ
     g$modulo$6698$kwCBQ
     (case-lambda
       ((g$n1$6686$kwCBQ g$n2$6687$kwCBQ)
        (begin
          (if (not (integer-valued? g$n1$6686$kwCBQ))
            (assertion-violation 'modulo '"not an integer" g$n1$6686$kwCBQ)
            (void))
          (if (not (integer-valued? g$n2$6687$kwCBQ))
            (assertion-violation 'modulo '"not an integer" g$n2$6687$kwCBQ)
            (void))
          (* (g$sign$6675$kwCBQ g$n2$6687$kwCBQ)
             (mod (* (g$sign$6675$kwCBQ g$n2$6687$kwCBQ) g$n1$6686$kwCBQ)
                  (abs g$n2$6687$kwCBQ)))))))
   (g$make-promise$6679$kwCBQ
     g$make-promise$6699$kwCBQ
     (case-lambda
       ((g$proc$6688$kwCBQ)
        ((case-lambda
           ((g$result-ready?$6689$kwCBQ g$result$6690$kwCBQ)
            (case-lambda
              (()
               (if g$result-ready?$6689$kwCBQ
                 g$result$6690$kwCBQ
                 ((case-lambda
                    ((g$x$6691$kwCBQ)
                     (if g$result-ready?$6689$kwCBQ
                       g$result$6690$kwCBQ
                       (begin
                         (set! g$result-ready?$6689$kwCBQ '#t)
                         (set! g$result$6690$kwCBQ g$x$6691$kwCBQ)
                         g$result$6690$kwCBQ))))
                  (g$proc$6688$kwCBQ)))))))
         '#f
         '#f))))
   (g$force$6680$kwCBQ
     g$force$6700$kwCBQ
     (case-lambda ((g$object$6692$kwCBQ) (g$object$6692$kwCBQ)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6701$kwCBQ
     g$split$6726$kwCBQ
     (case-lambda
       ((g$ls$6705$kwCBQ)
        ((letrec ((g$loop$6706$kwCBQ
                    (case-lambda
                      ((g$rest$6707$kwCBQ g$left$6708$kwCBQ g$right$6709$kwCBQ)
                       (if (null? g$rest$6707$kwCBQ)
                         (cons g$left$6708$kwCBQ g$right$6709$kwCBQ)
                         (if (null? (cdr g$rest$6707$kwCBQ))
                           (cons
                             (cons (car g$rest$6707$kwCBQ) g$left$6708$kwCBQ)
                             g$right$6709$kwCBQ)
                           (g$loop$6706$kwCBQ
                             (g$cddr$6040$kwCBQ g$rest$6707$kwCBQ)
                             (cons (car g$rest$6707$kwCBQ) g$left$6708$kwCBQ)
                             (cons
                               (g$cadr$6038$kwCBQ g$rest$6707$kwCBQ)
                               g$right$6709$kwCBQ))))))))
           g$loop$6706$kwCBQ)
         g$ls$6705$kwCBQ
         '()
         '()))))
   (g$reverse-it$6702$kwCBQ
     g$reverse-it$6727$kwCBQ
     (case-lambda
       ((g$head$6710$kwCBQ g$tail$6711$kwCBQ)
        (if (null? g$head$6710$kwCBQ)
          g$tail$6711$kwCBQ
          (g$reverse-it$6702$kwCBQ
            (cdr g$head$6710$kwCBQ)
            (cons (car g$head$6710$kwCBQ) g$tail$6711$kwCBQ))))))
   (g$merge$6703$kwCBQ
     g$merge$6728$kwCBQ
     (case-lambda
       ((g$list-1$6712$kwCBQ g$list-2$6713$kwCBQ g$precedes?$6714$kwCBQ)
        ((letrec ((g$loop$6715$kwCBQ
                    (case-lambda
                      ((g$source-1$6716$kwCBQ
                         g$source-2$6717$kwCBQ
                         g$so-far$6718$kwCBQ)
                       (if (null? g$source-1$6716$kwCBQ)
                         (g$reverse-it$6702$kwCBQ
                           g$so-far$6718$kwCBQ
                           g$source-2$6717$kwCBQ)
                         (if (null? g$source-2$6717$kwCBQ)
                           (g$reverse-it$6702$kwCBQ
                             g$so-far$6718$kwCBQ
                             g$source-1$6716$kwCBQ)
                           ((case-lambda
                              ((g$car-1$6719$kwCBQ g$car-2$6720$kwCBQ)
                               (if (g$precedes?$6714$kwCBQ
                                     g$car-2$6720$kwCBQ
                                     g$car-1$6719$kwCBQ)
                                 (g$loop$6715$kwCBQ
                                   g$source-1$6716$kwCBQ
                                   (cdr g$source-2$6717$kwCBQ)
                                   (cons
                                     g$car-2$6720$kwCBQ
                                     g$so-far$6718$kwCBQ))
                                 (g$loop$6715$kwCBQ
                                   g$source-2$6717$kwCBQ
                                   (cdr g$source-1$6716$kwCBQ)
                                   (cons
                                     g$car-1$6719$kwCBQ
                                     g$so-far$6718$kwCBQ)))))
                            (car g$source-1$6716$kwCBQ)
                            (car g$source-2$6717$kwCBQ))))))))
           g$loop$6715$kwCBQ)
         g$list-1$6712$kwCBQ
         g$list-2$6713$kwCBQ
         '()))))
   (g$list-sort$6704$kwCBQ
     g$list-sort$6729$kwCBQ
     (case-lambda
       ((g$precedes?$6721$kwCBQ g$ls$6722$kwCBQ)
        (if (null? g$ls$6722$kwCBQ)
          '()
          ((letrec ((g$helper$6723$kwCBQ
                      (case-lambda
                        ((g$piece$6724$kwCBQ)
                         (if (null? (cdr g$piece$6724$kwCBQ))
                           g$piece$6724$kwCBQ
                           ((case-lambda
                              ((g$parts$6725$kwCBQ)
                               (g$merge$6703$kwCBQ
                                 (g$helper$6723$kwCBQ (car g$parts$6725$kwCBQ))
                                 (g$helper$6723$kwCBQ (cdr g$parts$6725$kwCBQ))
                                 g$precedes?$6721$kwCBQ)))
                            (g$split$6701$kwCBQ g$piece$6724$kwCBQ)))))))
             g$helper$6723$kwCBQ)
           g$ls$6722$kwCBQ))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6736$kwCBQ
     g$string-ci=?$6802$kwCBQ
     (case-lambda
       ((g$a$6752$kwCBQ g$b$6753$kwCBQ . g$rest$6754$kwCBQ)
        (begin
          (if (not (string? g$a$6752$kwCBQ))
            (assertion-violation 'string-ci=? '"not a string" g$a$6752$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6755$kwCBQ)
               (begin
                 (if (not (string? g$x$6755$kwCBQ))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6755$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6756$kwCBQ)
                     (begin
                       (set! g$a$6752$kwCBQ g$x$6755$kwCBQ)
                       g$r$6756$kwCBQ)))
                  (= (string-ci-compare g$a$6752$kwCBQ g$x$6755$kwCBQ) '0)))))
            (cons g$b$6753$kwCBQ g$rest$6754$kwCBQ))))))
   (g$string-ci<?$6737$kwCBQ
     g$string-ci<?$6803$kwCBQ
     (case-lambda
       ((g$a$6757$kwCBQ g$b$6758$kwCBQ . g$rest$6759$kwCBQ)
        (begin
          (if (not (string? g$a$6757$kwCBQ))
            (assertion-violation 'string-ci<? '"not a string" g$a$6757$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6760$kwCBQ)
               (begin
                 (if (not (string? g$x$6760$kwCBQ))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6760$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6761$kwCBQ)
                     (begin
                       (set! g$a$6757$kwCBQ g$x$6760$kwCBQ)
                       g$r$6761$kwCBQ)))
                  (< (string-ci-compare g$a$6757$kwCBQ g$x$6760$kwCBQ) '0)))))
            (cons g$b$6758$kwCBQ g$rest$6759$kwCBQ))))))
   (g$string-ci>?$6738$kwCBQ
     g$string-ci>?$6804$kwCBQ
     (case-lambda
       ((g$a$6762$kwCBQ g$b$6763$kwCBQ . g$rest$6764$kwCBQ)
        (begin
          (if (not (string? g$a$6762$kwCBQ))
            (assertion-violation 'string-ci>? '"not a string" g$a$6762$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6765$kwCBQ)
               (begin
                 (if (not (string? g$x$6765$kwCBQ))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6765$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6766$kwCBQ)
                     (begin
                       (set! g$a$6762$kwCBQ g$x$6765$kwCBQ)
                       g$r$6766$kwCBQ)))
                  (> (string-ci-compare g$a$6762$kwCBQ g$x$6765$kwCBQ) '0)))))
            (cons g$b$6763$kwCBQ g$rest$6764$kwCBQ))))))
   (g$string-ci<=?$6739$kwCBQ
     g$string-ci<=?$6805$kwCBQ
     (case-lambda
       ((g$a$6767$kwCBQ g$b$6768$kwCBQ . g$rest$6769$kwCBQ)
        (begin
          (if (not (string? g$a$6767$kwCBQ))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6767$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6770$kwCBQ)
               (begin
                 (if (not (string? g$x$6770$kwCBQ))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6770$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6771$kwCBQ)
                     (begin
                       (set! g$a$6767$kwCBQ g$x$6770$kwCBQ)
                       g$r$6771$kwCBQ)))
                  (<= (string-ci-compare g$a$6767$kwCBQ g$x$6770$kwCBQ) '0)))))
            (cons g$b$6768$kwCBQ g$rest$6769$kwCBQ))))))
   (g$string-ci>=?$6740$kwCBQ
     g$string-ci>=?$6806$kwCBQ
     (case-lambda
       ((g$a$6772$kwCBQ g$b$6773$kwCBQ . g$rest$6774$kwCBQ)
        (begin
          (if (not (string? g$a$6772$kwCBQ))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6772$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6775$kwCBQ)
               (begin
                 (if (not (string? g$x$6775$kwCBQ))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6775$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6776$kwCBQ)
                     (begin
                       (set! g$a$6772$kwCBQ g$x$6775$kwCBQ)
                       g$r$6776$kwCBQ)))
                  (>= (string-ci-compare g$a$6772$kwCBQ g$x$6775$kwCBQ) '0)))))
            (cons g$b$6773$kwCBQ g$rest$6774$kwCBQ))))))
   (g$char-ci=?$6747$kwCBQ
     g$char-ci=?$6807$kwCBQ
     (case-lambda
       ((g$a$6777$kwCBQ g$b$6778$kwCBQ . g$rest$6779$kwCBQ)
        (begin
          (if (not (char? g$a$6777$kwCBQ))
            (assertion-violation 'char-ci=? '"not a char" g$a$6777$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6780$kwCBQ)
               (begin
                 (if (not (char? g$x$6780$kwCBQ))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6780$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6781$kwCBQ)
                     (begin
                       (set! g$a$6777$kwCBQ g$x$6780$kwCBQ)
                       g$r$6781$kwCBQ)))
                  (= (char->integer (char-upcase g$a$6777$kwCBQ))
                     (char->integer (char-upcase g$x$6780$kwCBQ)))))))
            (cons g$b$6778$kwCBQ g$rest$6779$kwCBQ))))))
   (g$char-ci<?$6748$kwCBQ
     g$char-ci<?$6808$kwCBQ
     (case-lambda
       ((g$a$6782$kwCBQ g$b$6783$kwCBQ . g$rest$6784$kwCBQ)
        (begin
          (if (not (char? g$a$6782$kwCBQ))
            (assertion-violation 'char-ci<? '"not a char" g$a$6782$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6785$kwCBQ)
               (begin
                 (if (not (char? g$x$6785$kwCBQ))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6785$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6786$kwCBQ)
                     (begin
                       (set! g$a$6782$kwCBQ g$x$6785$kwCBQ)
                       g$r$6786$kwCBQ)))
                  (< (char->integer (char-upcase g$a$6782$kwCBQ))
                     (char->integer (char-upcase g$x$6785$kwCBQ)))))))
            (cons g$b$6783$kwCBQ g$rest$6784$kwCBQ))))))
   (g$char-ci>?$6749$kwCBQ
     g$char-ci>?$6809$kwCBQ
     (case-lambda
       ((g$a$6787$kwCBQ g$b$6788$kwCBQ . g$rest$6789$kwCBQ)
        (begin
          (if (not (char? g$a$6787$kwCBQ))
            (assertion-violation 'char-ci>? '"not a char" g$a$6787$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6790$kwCBQ)
               (begin
                 (if (not (char? g$x$6790$kwCBQ))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6790$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6791$kwCBQ)
                     (begin
                       (set! g$a$6787$kwCBQ g$x$6790$kwCBQ)
                       g$r$6791$kwCBQ)))
                  (> (char->integer (char-upcase g$a$6787$kwCBQ))
                     (char->integer (char-upcase g$x$6790$kwCBQ)))))))
            (cons g$b$6788$kwCBQ g$rest$6789$kwCBQ))))))
   (g$char-ci<=?$6750$kwCBQ
     g$char-ci<=?$6810$kwCBQ
     (case-lambda
       ((g$a$6792$kwCBQ g$b$6793$kwCBQ . g$rest$6794$kwCBQ)
        (begin
          (if (not (char? g$a$6792$kwCBQ))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6792$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6795$kwCBQ)
               (begin
                 (if (not (char? g$x$6795$kwCBQ))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6795$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6796$kwCBQ)
                     (begin
                       (set! g$a$6792$kwCBQ g$x$6795$kwCBQ)
                       g$r$6796$kwCBQ)))
                  (<= (char->integer (char-upcase g$a$6792$kwCBQ))
                      (char->integer (char-upcase g$x$6795$kwCBQ)))))))
            (cons g$b$6793$kwCBQ g$rest$6794$kwCBQ))))))
   (g$char-ci>=?$6751$kwCBQ
     g$char-ci>=?$6811$kwCBQ
     (case-lambda
       ((g$a$6797$kwCBQ g$b$6798$kwCBQ . g$rest$6799$kwCBQ)
        (begin
          (if (not (char? g$a$6797$kwCBQ))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6797$kwCBQ)
            (void))
          (g$for-all$5810$kwCBQ
            (case-lambda
              ((g$x$6800$kwCBQ)
               (begin
                 (if (not (char? g$x$6800$kwCBQ))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6800$kwCBQ)
                   (void))
                 ((case-lambda
                    ((g$r$6801$kwCBQ)
                     (begin
                       (set! g$a$6797$kwCBQ g$x$6800$kwCBQ)
                       g$r$6801$kwCBQ)))
                  (>= (char->integer (char-upcase g$a$6797$kwCBQ))
                      (char->integer (char-upcase g$x$6800$kwCBQ)))))))
            (cons g$b$6798$kwCBQ g$rest$6799$kwCBQ)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6812$kwCBQ
     g$bitwise-if$6843$kwCBQ
     (case-lambda
       ((g$ei1$6819$kwCBQ g$ei2$6820$kwCBQ g$ei3$6821$kwCBQ)
        (bitwise-ior
          (bitwise-and g$ei1$6819$kwCBQ g$ei2$6820$kwCBQ)
          (bitwise-and (bitwise-not g$ei1$6819$kwCBQ) g$ei3$6821$kwCBQ)))))
   (g$bitwise-copy-bit$6813$kwCBQ
     g$bitwise-copy-bit$6844$kwCBQ
     (case-lambda
       ((g$ei1$6822$kwCBQ g$ei2$6823$kwCBQ g$ei3$6824$kwCBQ)
        (g$bitwise-if$6812$kwCBQ
          (g$bitwise-arithmetic-shift-left$6816$kwCBQ '1 g$ei2$6823$kwCBQ)
          (g$bitwise-arithmetic-shift-left$6816$kwCBQ
            g$ei3$6824$kwCBQ
            g$ei2$6823$kwCBQ)
          g$ei1$6822$kwCBQ))))
   (g$bitwise-bit-field$6814$kwCBQ
     g$bitwise-bit-field$6845$kwCBQ
     (case-lambda
       ((g$ei1$6825$kwCBQ g$ei2$6826$kwCBQ g$ei3$6827$kwCBQ)
        (g$bitwise-arithmetic-shift-right$6817$kwCBQ
          (bitwise-and
            g$ei1$6825$kwCBQ
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6816$kwCBQ
                '-1
                g$ei3$6827$kwCBQ)))
          g$ei2$6826$kwCBQ))))
   (g$bitwise-copy-bit-field$6815$kwCBQ
     g$bitwise-copy-bit-field$6846$kwCBQ
     (case-lambda
       ((g$to$6828$kwCBQ g$start$6829$kwCBQ g$end$6830$kwCBQ g$from$6831$kwCBQ)
        (g$bitwise-if$6812$kwCBQ
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6816$kwCBQ '-1 g$start$6829$kwCBQ)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6816$kwCBQ
                '-1
                g$end$6830$kwCBQ)))
          (g$bitwise-arithmetic-shift-left$6816$kwCBQ
            g$from$6831$kwCBQ
            g$start$6829$kwCBQ)
          g$to$6828$kwCBQ))))
   (g$bitwise-arithmetic-shift-left$6816$kwCBQ
     g$bitwise-arithmetic-shift-left$6847$kwCBQ
     (case-lambda
       ((g$ei1$6832$kwCBQ g$ei2$6833$kwCBQ)
        (bitwise-arithmetic-shift g$ei1$6832$kwCBQ g$ei2$6833$kwCBQ))))
   (g$bitwise-arithmetic-shift-right$6817$kwCBQ
     g$bitwise-arithmetic-shift-right$6848$kwCBQ
     (case-lambda
       ((g$ei1$6834$kwCBQ g$ei2$6835$kwCBQ)
        (bitwise-arithmetic-shift g$ei1$6834$kwCBQ (- g$ei2$6835$kwCBQ)))))
   (g$bitwise-rotate-bit-field$6818$kwCBQ
     g$bitwise-rotate-bit-field$6849$kwCBQ
     (case-lambda
       ((g$n$6836$kwCBQ g$start$6837$kwCBQ g$end$6838$kwCBQ g$count$6839$kwCBQ)
        ((case-lambda
           ((g$width$6840$kwCBQ)
            (if (g$positive?$6065$kwCBQ g$width$6840$kwCBQ)
              ((case-lambda
                 ((g$count$6841$kwCBQ g$field$6842$kwCBQ)
                  (g$bitwise-copy-bit-field$6815$kwCBQ
                    g$n$6836$kwCBQ
                    g$start$6837$kwCBQ
                    g$end$6838$kwCBQ
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6816$kwCBQ
                        g$field$6842$kwCBQ
                        g$count$6841$kwCBQ)
                      (g$bitwise-arithmetic-shift-right$6817$kwCBQ
                        g$field$6842$kwCBQ
                        (- g$width$6840$kwCBQ g$count$6841$kwCBQ))))))
               (mod g$count$6839$kwCBQ g$width$6840$kwCBQ)
               (g$bitwise-bit-field$6814$kwCBQ
                 g$n$6836$kwCBQ
                 g$start$6837$kwCBQ
                 g$end$6838$kwCBQ))
              g$n$6836$kwCBQ)))
         (- g$end$6838$kwCBQ g$start$6837$kwCBQ))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6850$kwCBQ
     g$fx*/carry$6899$kwCBQ
     (case-lambda
       ((g$fx1$6860$kwCBQ g$fx2$6861$kwCBQ g$fx3$6862$kwCBQ)
        ((case-lambda
           ((g$s$6863$kwCBQ g$e$6864$kwCBQ)
            (values
              (mod0 g$s$6863$kwCBQ g$e$6864$kwCBQ)
              (div0 g$s$6863$kwCBQ g$e$6864$kwCBQ))))
         (+ (* g$fx1$6860$kwCBQ g$fx2$6861$kwCBQ) g$fx3$6862$kwCBQ)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6851$kwCBQ
     g$fx-/carry$6900$kwCBQ
     (case-lambda
       ((g$fx1$6865$kwCBQ g$fx2$6866$kwCBQ g$fx3$6867$kwCBQ)
        ((case-lambda
           ((g$s$6868$kwCBQ g$e$6869$kwCBQ)
            (values
              (mod0 g$s$6868$kwCBQ g$e$6869$kwCBQ)
              (div0 g$s$6868$kwCBQ g$e$6869$kwCBQ))))
         (- g$fx1$6865$kwCBQ g$fx2$6866$kwCBQ g$fx3$6867$kwCBQ)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6852$kwCBQ
     g$fx+/carry$6901$kwCBQ
     (case-lambda
       ((g$fx1$6870$kwCBQ g$fx2$6871$kwCBQ g$fx3$6872$kwCBQ)
        ((case-lambda
           ((g$s$6873$kwCBQ g$e$6874$kwCBQ)
            (values
              (mod0 g$s$6873$kwCBQ g$e$6874$kwCBQ)
              (div0 g$s$6873$kwCBQ g$e$6874$kwCBQ))))
         (+ g$fx1$6870$kwCBQ g$fx2$6871$kwCBQ g$fx3$6872$kwCBQ)
         (expt '2 (fixnum-width))))))
   (g$fxif$6853$kwCBQ
     g$fxif$6902$kwCBQ
     (case-lambda
       ((g$fx1$6875$kwCBQ g$fx2$6876$kwCBQ g$fx3$6877$kwCBQ)
        (fxior
          (fxand g$fx1$6875$kwCBQ g$fx2$6876$kwCBQ)
          (fxand (fxnot g$fx1$6875$kwCBQ) g$fx3$6877$kwCBQ)))))
   (g$fxcopy-bit$6854$kwCBQ
     g$fxcopy-bit$6903$kwCBQ
     (case-lambda
       ((g$fx1$6878$kwCBQ g$fx2$6879$kwCBQ g$fx3$6880$kwCBQ)
        (g$fxif$6853$kwCBQ
          (g$fxarithmetic-shift-left$6857$kwCBQ '1 g$fx2$6879$kwCBQ)
          (g$fxarithmetic-shift-left$6857$kwCBQ
            g$fx3$6880$kwCBQ
            g$fx2$6879$kwCBQ)
          g$fx1$6878$kwCBQ))))
   (g$fxbit-field$6855$kwCBQ
     g$fxbit-field$6904$kwCBQ
     (case-lambda
       ((g$fx1$6881$kwCBQ g$fx2$6882$kwCBQ g$fx3$6883$kwCBQ)
        (g$fxarithmetic-shift-right$6858$kwCBQ
          (fxand
            g$fx1$6881$kwCBQ
            (fxnot (g$fxarithmetic-shift-left$6857$kwCBQ '-1 g$fx3$6883$kwCBQ)))
          g$fx2$6882$kwCBQ))))
   (g$fxcopy-bit-field$6856$kwCBQ
     g$fxcopy-bit-field$6905$kwCBQ
     (case-lambda
       ((g$to$6884$kwCBQ g$start$6885$kwCBQ g$end$6886$kwCBQ g$from$6887$kwCBQ)
        (g$fxif$6853$kwCBQ
          (fxand
            (g$fxarithmetic-shift-left$6857$kwCBQ '-1 g$start$6885$kwCBQ)
            (fxnot (g$fxarithmetic-shift-left$6857$kwCBQ '-1 g$end$6886$kwCBQ)))
          (g$fxarithmetic-shift-left$6857$kwCBQ
            g$from$6887$kwCBQ
            g$start$6885$kwCBQ)
          g$to$6884$kwCBQ))))
   (g$fxarithmetic-shift-left$6857$kwCBQ
     g$fxarithmetic-shift-left$6906$kwCBQ
     (case-lambda
       ((g$fx1$6888$kwCBQ g$fx2$6889$kwCBQ)
        (fxarithmetic-shift g$fx1$6888$kwCBQ g$fx2$6889$kwCBQ))))
   (g$fxarithmetic-shift-right$6858$kwCBQ
     g$fxarithmetic-shift-right$6907$kwCBQ
     (case-lambda
       ((g$fx1$6890$kwCBQ g$fx2$6891$kwCBQ)
        (fxarithmetic-shift g$fx1$6890$kwCBQ (fx- g$fx2$6891$kwCBQ)))))
   (g$fxrotate-bit-field$6859$kwCBQ
     g$fxrotate-bit-field$6908$kwCBQ
     (case-lambda
       ((g$n$6892$kwCBQ g$start$6893$kwCBQ g$end$6894$kwCBQ g$count$6895$kwCBQ)
        ((case-lambda
           ((g$width$6896$kwCBQ)
            (if (fxpositive? g$width$6896$kwCBQ)
              ((case-lambda
                 ((g$count$6897$kwCBQ g$field$6898$kwCBQ)
                  (g$fxcopy-bit-field$6856$kwCBQ
                    g$n$6892$kwCBQ
                    g$start$6893$kwCBQ
                    g$end$6894$kwCBQ
                    (fxior
                      (g$fxarithmetic-shift-left$6857$kwCBQ
                        g$field$6898$kwCBQ
                        g$count$6897$kwCBQ)
                      (g$fxarithmetic-shift-right$6858$kwCBQ
                        g$field$6898$kwCBQ
                        (fx- g$width$6896$kwCBQ g$count$6897$kwCBQ))))))
               (fxmod g$count$6895$kwCBQ g$width$6896$kwCBQ)
               (g$fxbit-field$6855$kwCBQ
                 g$n$6892$kwCBQ
                 g$start$6893$kwCBQ
                 g$end$6894$kwCBQ))
              g$n$6892$kwCBQ)))
         (fx- g$end$6894$kwCBQ g$start$6893$kwCBQ))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7942$6909$kwCBQ
     g$7942$6921$kwCBQ
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7945$kwCBQ
       '#f
       '#f
       '#()))
   (g$7944$6910$kwCBQ g$7944$6922$kwCBQ '#f)
   (g$7943$6911$kwCBQ
     g$7943$6923$kwCBQ
     (make-record-constructor-descriptor
       g$7942$6909$kwCBQ
       &implementation-restriction-rcd
       g$7944$6910$kwCBQ))
   (g$7941$6912$kwCBQ
     g$7941$6924$kwCBQ
     (record-predicate g$7942$6909$kwCBQ))
   (g$make-no-infinities-violation$6913$kwCBQ
     g$make-no-infinities-violation$6925$kwCBQ
     (record-constructor g$7943$6911$kwCBQ))
   (g$no-infinities-violation?$6914$kwCBQ
     g$no-infinities-violation?$6926$kwCBQ
     (condition-predicate g$7942$6909$kwCBQ))
   (g$7956$6915$kwCBQ
     g$7956$6927$kwCBQ
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7959$kwCBQ
       '#f
       '#f
       '#()))
   (g$7958$6916$kwCBQ g$7958$6928$kwCBQ '#f)
   (g$7957$6917$kwCBQ
     g$7957$6929$kwCBQ
     (make-record-constructor-descriptor
       g$7956$6915$kwCBQ
       &implementation-restriction-rcd
       g$7958$6916$kwCBQ))
   (g$7955$6918$kwCBQ
     g$7955$6930$kwCBQ
     (record-predicate g$7956$6915$kwCBQ))
   (g$make-no-nans-violation$6919$kwCBQ
     g$make-no-nans-violation$6931$kwCBQ
     (record-constructor g$7957$6917$kwCBQ))
   (g$no-nans-violation?$6920$kwCBQ
     g$no-nans-violation?$6932$kwCBQ
     (condition-predicate g$7956$6915$kwCBQ)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7971$6933$kwCBQ
     g$7971$7013$kwCBQ
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7974$kwCBQ
       '#f
       '#f
       '#()))
   (g$7973$6934$kwCBQ g$7973$7014$kwCBQ '#f)
   (g$7972$6935$kwCBQ
     g$7972$7015$kwCBQ
     (make-record-constructor-descriptor
       g$7971$6933$kwCBQ
       &error-rcd
       g$7973$6934$kwCBQ))
   (g$7970$6936$kwCBQ
     g$7970$7016$kwCBQ
     (record-predicate g$7971$6933$kwCBQ))
   (g$make-i/o-error$6937$kwCBQ
     g$make-i/o-error$7017$kwCBQ
     (record-constructor g$7972$6935$kwCBQ))
   (g$i/o-error?$6938$kwCBQ
     g$i/o-error?$7018$kwCBQ
     (condition-predicate g$7971$6933$kwCBQ))
   (g$7985$6939$kwCBQ
     g$7985$7019$kwCBQ
     (make-record-type-descriptor
       '&i/o-read
       g$7971$6933$kwCBQ
       'g$7988$kwCBQ
       '#f
       '#f
       '#()))
   (g$7987$6940$kwCBQ g$7987$7020$kwCBQ '#f)
   (g$7986$6941$kwCBQ
     g$7986$7021$kwCBQ
     (make-record-constructor-descriptor
       g$7985$6939$kwCBQ
       g$7972$6935$kwCBQ
       g$7987$6940$kwCBQ))
   (g$7984$6942$kwCBQ
     g$7984$7022$kwCBQ
     (record-predicate g$7985$6939$kwCBQ))
   (g$make-i/o-read-error$6943$kwCBQ
     g$make-i/o-read-error$7023$kwCBQ
     (record-constructor g$7986$6941$kwCBQ))
   (g$i/o-read-error?$6944$kwCBQ
     g$i/o-read-error?$7024$kwCBQ
     (condition-predicate g$7985$6939$kwCBQ))
   (g$7999$6945$kwCBQ
     g$7999$7025$kwCBQ
     (make-record-type-descriptor
       '&i/o-write
       g$7971$6933$kwCBQ
       'g$8002$kwCBQ
       '#f
       '#f
       '#()))
   (g$8001$6946$kwCBQ g$8001$7026$kwCBQ '#f)
   (g$8000$6947$kwCBQ
     g$8000$7027$kwCBQ
     (make-record-constructor-descriptor
       g$7999$6945$kwCBQ
       g$7972$6935$kwCBQ
       g$8001$6946$kwCBQ))
   (g$7998$6948$kwCBQ
     g$7998$7028$kwCBQ
     (record-predicate g$7999$6945$kwCBQ))
   (g$make-i/o-write-error$6949$kwCBQ
     g$make-i/o-write-error$7029$kwCBQ
     (record-constructor g$8000$6947$kwCBQ))
   (g$i/o-write-error?$6950$kwCBQ
     g$i/o-write-error?$7030$kwCBQ
     (condition-predicate g$7999$6945$kwCBQ))
   (g$8014$6951$kwCBQ
     g$8014$7031$kwCBQ
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7971$6933$kwCBQ
       'g$8017$kwCBQ
       '#f
       '#f
       '#((immutable position))))
   (g$8016$6952$kwCBQ g$8016$7032$kwCBQ '#f)
   (g$8015$6953$kwCBQ
     g$8015$7033$kwCBQ
     (make-record-constructor-descriptor
       g$8014$6951$kwCBQ
       g$7972$6935$kwCBQ
       g$8016$6952$kwCBQ))
   (g$8013$6954$kwCBQ
     g$8013$7034$kwCBQ
     (record-predicate g$8014$6951$kwCBQ))
   (g$make-i/o-invalid-position-error$6955$kwCBQ
     g$make-i/o-invalid-position-error$7035$kwCBQ
     (record-constructor g$8015$6953$kwCBQ))
   (g$8012$6956$kwCBQ
     g$8012$7036$kwCBQ
     (record-accessor g$8014$6951$kwCBQ '0))
   (g$i/o-invalid-position-error?$6957$kwCBQ
     g$i/o-invalid-position-error?$7037$kwCBQ
     (condition-predicate g$8014$6951$kwCBQ))
   (g$i/o-error-position$6958$kwCBQ
     g$i/o-error-position$7038$kwCBQ
     (condition-accessor g$8014$6951$kwCBQ g$8012$6956$kwCBQ))
   (g$8031$6959$kwCBQ
     g$8031$7039$kwCBQ
     (make-record-type-descriptor
       '&i/o-filename
       g$7971$6933$kwCBQ
       'g$8034$kwCBQ
       '#f
       '#f
       '#((immutable filename))))
   (g$8033$6960$kwCBQ g$8033$7040$kwCBQ '#f)
   (g$8032$6961$kwCBQ
     g$8032$7041$kwCBQ
     (make-record-constructor-descriptor
       g$8031$6959$kwCBQ
       g$7972$6935$kwCBQ
       g$8033$6960$kwCBQ))
   (g$8030$6962$kwCBQ
     g$8030$7042$kwCBQ
     (record-predicate g$8031$6959$kwCBQ))
   (g$make-i/o-filename-error$6963$kwCBQ
     g$make-i/o-filename-error$7043$kwCBQ
     (record-constructor g$8032$6961$kwCBQ))
   (g$8029$6964$kwCBQ
     g$8029$7044$kwCBQ
     (record-accessor g$8031$6959$kwCBQ '0))
   (g$i/o-filename-error?$6965$kwCBQ
     g$i/o-filename-error?$7045$kwCBQ
     (condition-predicate g$8031$6959$kwCBQ))
   (g$i/o-error-filename$6966$kwCBQ
     g$i/o-error-filename$7046$kwCBQ
     (condition-accessor g$8031$6959$kwCBQ g$8029$6964$kwCBQ))
   (g$8047$6967$kwCBQ
     g$8047$7047$kwCBQ
     (make-record-type-descriptor
       '&i/o-file-protection
       g$8031$6959$kwCBQ
       'g$8050$kwCBQ
       '#f
       '#f
       '#()))
   (g$8049$6968$kwCBQ g$8049$7048$kwCBQ '#f)
   (g$8048$6969$kwCBQ
     g$8048$7049$kwCBQ
     (make-record-constructor-descriptor
       g$8047$6967$kwCBQ
       g$8032$6961$kwCBQ
       g$8049$6968$kwCBQ))
   (g$8046$6970$kwCBQ
     g$8046$7050$kwCBQ
     (record-predicate g$8047$6967$kwCBQ))
   (g$make-i/o-file-protection-error$6971$kwCBQ
     g$make-i/o-file-protection-error$7051$kwCBQ
     (record-constructor g$8048$6969$kwCBQ))
   (g$i/o-file-protection-error?$6972$kwCBQ
     g$i/o-file-protection-error?$7052$kwCBQ
     (condition-predicate g$8047$6967$kwCBQ))
   (g$8061$6973$kwCBQ
     g$8061$7053$kwCBQ
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$8047$6967$kwCBQ
       'g$8064$kwCBQ
       '#f
       '#f
       '#()))
   (g$8063$6974$kwCBQ g$8063$7054$kwCBQ '#f)
   (g$8062$6975$kwCBQ
     g$8062$7055$kwCBQ
     (make-record-constructor-descriptor
       g$8061$6973$kwCBQ
       g$8048$6969$kwCBQ
       g$8063$6974$kwCBQ))
   (g$8060$6976$kwCBQ
     g$8060$7056$kwCBQ
     (record-predicate g$8061$6973$kwCBQ))
   (g$make-i/o-file-is-read-only-error$6977$kwCBQ
     g$make-i/o-file-is-read-only-error$7057$kwCBQ
     (record-constructor g$8062$6975$kwCBQ))
   (g$i/o-file-is-read-only-error?$6978$kwCBQ
     g$i/o-file-is-read-only-error?$7058$kwCBQ
     (condition-predicate g$8061$6973$kwCBQ))
   (g$8075$6979$kwCBQ
     g$8075$7059$kwCBQ
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$8031$6959$kwCBQ
       'g$8078$kwCBQ
       '#f
       '#f
       '#()))
   (g$8077$6980$kwCBQ g$8077$7060$kwCBQ '#f)
   (g$8076$6981$kwCBQ
     g$8076$7061$kwCBQ
     (make-record-constructor-descriptor
       g$8075$6979$kwCBQ
       g$8032$6961$kwCBQ
       g$8077$6980$kwCBQ))
   (g$8074$6982$kwCBQ
     g$8074$7062$kwCBQ
     (record-predicate g$8075$6979$kwCBQ))
   (g$make-i/o-file-already-exists-error$6983$kwCBQ
     g$make-i/o-file-already-exists-error$7063$kwCBQ
     (record-constructor g$8076$6981$kwCBQ))
   (g$i/o-file-already-exists-error?$6984$kwCBQ
     g$i/o-file-already-exists-error?$7064$kwCBQ
     (condition-predicate g$8075$6979$kwCBQ))
   (g$8089$6985$kwCBQ
     g$8089$7065$kwCBQ
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$8031$6959$kwCBQ
       'g$8092$kwCBQ
       '#f
       '#f
       '#()))
   (g$8091$6986$kwCBQ g$8091$7066$kwCBQ '#f)
   (g$8090$6987$kwCBQ
     g$8090$7067$kwCBQ
     (make-record-constructor-descriptor
       g$8089$6985$kwCBQ
       g$8032$6961$kwCBQ
       g$8091$6986$kwCBQ))
   (g$8088$6988$kwCBQ
     g$8088$7068$kwCBQ
     (record-predicate g$8089$6985$kwCBQ))
   (g$make-i/o-file-does-not-exist-error$6989$kwCBQ
     g$make-i/o-file-does-not-exist-error$7069$kwCBQ
     (record-constructor g$8090$6987$kwCBQ))
   (g$i/o-file-does-not-exist-error?$6990$kwCBQ
     g$i/o-file-does-not-exist-error?$7070$kwCBQ
     (condition-predicate g$8089$6985$kwCBQ))
   (g$8104$6991$kwCBQ
     g$8104$7071$kwCBQ
     (make-record-type-descriptor
       '&i/o-port
       g$7971$6933$kwCBQ
       'g$8107$kwCBQ
       '#f
       '#f
       '#((immutable port))))
   (g$8106$6992$kwCBQ g$8106$7072$kwCBQ '#f)
   (g$8105$6993$kwCBQ
     g$8105$7073$kwCBQ
     (make-record-constructor-descriptor
       g$8104$6991$kwCBQ
       g$7972$6935$kwCBQ
       g$8106$6992$kwCBQ))
   (g$8103$6994$kwCBQ
     g$8103$7074$kwCBQ
     (record-predicate g$8104$6991$kwCBQ))
   (g$make-i/o-port-error$6995$kwCBQ
     g$make-i/o-port-error$7075$kwCBQ
     (record-constructor g$8105$6993$kwCBQ))
   (g$8102$6996$kwCBQ
     g$8102$7076$kwCBQ
     (record-accessor g$8104$6991$kwCBQ '0))
   (g$i/o-port-error?$6997$kwCBQ
     g$i/o-port-error?$7077$kwCBQ
     (condition-predicate g$8104$6991$kwCBQ))
   (g$i/o-error-port$6998$kwCBQ
     g$i/o-error-port$7078$kwCBQ
     (condition-accessor g$8104$6991$kwCBQ g$8102$6996$kwCBQ))
   (g$8120$6999$kwCBQ
     g$8120$7079$kwCBQ
     (make-record-type-descriptor
       '&i/o-decoding
       g$8104$6991$kwCBQ
       'g$8123$kwCBQ
       '#f
       '#f
       '#()))
   (g$8122$7000$kwCBQ g$8122$7080$kwCBQ '#f)
   (g$8121$7001$kwCBQ
     g$8121$7081$kwCBQ
     (make-record-constructor-descriptor
       g$8120$6999$kwCBQ
       g$8105$6993$kwCBQ
       g$8122$7000$kwCBQ))
   (g$8119$7002$kwCBQ
     g$8119$7082$kwCBQ
     (record-predicate g$8120$6999$kwCBQ))
   (g$make-i/o-decoding-error$7003$kwCBQ
     g$make-i/o-decoding-error$7083$kwCBQ
     (record-constructor g$8121$7001$kwCBQ))
   (g$i/o-decoding-error?$7004$kwCBQ
     g$i/o-decoding-error?$7084$kwCBQ
     (condition-predicate g$8120$6999$kwCBQ))
   (g$8135$7005$kwCBQ
     g$8135$7085$kwCBQ
     (make-record-type-descriptor
       '&i/o-encoding
       g$8104$6991$kwCBQ
       'g$8138$kwCBQ
       '#f
       '#f
       '#((immutable char))))
   (g$8137$7006$kwCBQ g$8137$7086$kwCBQ '#f)
   (g$8136$7007$kwCBQ
     g$8136$7087$kwCBQ
     (make-record-constructor-descriptor
       g$8135$7005$kwCBQ
       g$8105$6993$kwCBQ
       g$8137$7006$kwCBQ))
   (g$8134$7008$kwCBQ
     g$8134$7088$kwCBQ
     (record-predicate g$8135$7005$kwCBQ))
   (g$make-i/o-encoding-error$7009$kwCBQ
     g$make-i/o-encoding-error$7089$kwCBQ
     (record-constructor g$8136$7007$kwCBQ))
   (g$8133$7010$kwCBQ
     g$8133$7090$kwCBQ
     (record-accessor g$8135$7005$kwCBQ '0))
   (g$i/o-encoding-error?$7011$kwCBQ
     g$i/o-encoding-error?$7091$kwCBQ
     (condition-predicate g$8135$7005$kwCBQ))
   (g$i/o-encoding-error-char$7012$kwCBQ
     g$i/o-encoding-error-char$7092$kwCBQ
     (condition-accessor g$8135$7005$kwCBQ g$8133$7010$kwCBQ)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$7094$kwCBQ
     g$using$7110$kwCBQ
     (clr-using-internal 'ironscheme.runtime))
   (g$get-output-string$7095$kwCBQ
     g$get-output-string$7111$kwCBQ
     (case-lambda
       ((g$port$7101$kwCBQ)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$7101$kwCBQ))))
   (g$open-output-string$7096$kwCBQ
     g$open-output-string$7112$kwCBQ
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$7097$kwCBQ
     g$open-string-output-port$7113$kwCBQ
     (case-lambda
       (()
        ((case-lambda
           ((g$p$7102$kwCBQ)
            (values
              g$p$7102$kwCBQ
              (case-lambda
                (() (g$get-output-string$7095$kwCBQ g$p$7102$kwCBQ))))))
         (g$open-output-string$7096$kwCBQ)))))
   (g$port?$7098$kwCBQ
     g$port?$7114$kwCBQ
     (case-lambda
       ((g$obj$7103$kwCBQ)
        ((case-lambda
           ((g$t$7104$kwCBQ)
            (if g$t$7104$kwCBQ
              g$t$7104$kwCBQ
              (begin '#f (binary-port? g$obj$7103$kwCBQ)))))
         (textual-port? g$obj$7103$kwCBQ)))))
   (g$call-with-string-output-port$7099$kwCBQ
     g$call-with-string-output-port$7115$kwCBQ
     (case-lambda
       ((g$proc$7105$kwCBQ)
        ((case-lambda
           ((g$p$7106$kwCBQ)
            (begin
              (g$call-with-port$7100$kwCBQ g$p$7106$kwCBQ g$proc$7105$kwCBQ)
              (g$get-output-string$7095$kwCBQ g$p$7106$kwCBQ))))
         (g$open-output-string$7096$kwCBQ)))))
   (g$call-with-port$7100$kwCBQ
     g$call-with-port$7116$kwCBQ
     (case-lambda
       ((g$port$7107$kwCBQ g$proc$7108$kwCBQ)
        ((case-lambda
           ((g$r$7109$kwCBQ)
            (begin (close-port g$port$7107$kwCBQ) g$r$7109$kwCBQ)))
         (g$proc$7108$kwCBQ g$port$7107$kwCBQ))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$7117$kwCBQ
     g$peek-char$7159$kwCBQ
     (case-lambda
       (() (g$peek-char$7117$kwCBQ (current-input-port)))
       ((g$port$7131$kwCBQ) (lookahead-char g$port$7131$kwCBQ))))
   (g$read-char$7118$kwCBQ
     g$read-char$7160$kwCBQ
     (case-lambda
       (() (g$read-char$7118$kwCBQ (current-input-port)))
       ((g$port$7132$kwCBQ) (get-char g$port$7132$kwCBQ))))
   (g$write-char$7119$kwCBQ
     g$write-char$7161$kwCBQ
     (case-lambda
       ((g$chr$7133$kwCBQ)
        (g$write-char$7119$kwCBQ g$chr$7133$kwCBQ (current-output-port)))
       ((g$chr$7134$kwCBQ g$port$7135$kwCBQ)
        (put-char g$port$7135$kwCBQ g$chr$7134$kwCBQ))))
   (g$with-input-from-file$7126$kwCBQ
     g$with-input-from-file$7162$kwCBQ
     (case-lambda
       ((g$filename$7136$kwCBQ g$thunk$7137$kwCBQ)
        ((case-lambda
           ((g$current-input-port$7140$kwCBQ g$t$7141$kwCBQ)
            ((case-lambda
               ((g$swap$7142$kwCBQ)
                (dynamic-wind
                  g$swap$7142$kwCBQ
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$7137$kwCBQ)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$7142$kwCBQ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$7143$kwCBQ)
                    (begin
                      (g$current-input-port$7140$kwCBQ g$t$7141$kwCBQ)
                      (set! g$t$7141$kwCBQ g$t$7143$kwCBQ))))
                 (g$current-input-port$7140$kwCBQ)))))))
         current-input-port
         (open-input-file g$filename$7136$kwCBQ)))))
   (g$with-output-to-file$7127$kwCBQ
     g$with-output-to-file$7163$kwCBQ
     (case-lambda
       ((g$filename$7144$kwCBQ g$thunk$7145$kwCBQ)
        ((case-lambda
           ((g$current-output-port$7148$kwCBQ g$t$7149$kwCBQ)
            ((case-lambda
               ((g$swap$7150$kwCBQ)
                (dynamic-wind
                  g$swap$7150$kwCBQ
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$7145$kwCBQ)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$7150$kwCBQ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$7151$kwCBQ)
                    (begin
                      (g$current-output-port$7148$kwCBQ g$t$7149$kwCBQ)
                      (set! g$t$7149$kwCBQ g$t$7151$kwCBQ))))
                 (g$current-output-port$7148$kwCBQ)))))))
         current-output-port
         (open-output-file g$filename$7144$kwCBQ)))))
   (g$call-with-input-file$7128$kwCBQ
     g$call-with-input-file$7164$kwCBQ
     (case-lambda
       ((g$filename$7152$kwCBQ g$proc$7153$kwCBQ)
        ((case-lambda
           ((g$p$7154$kwCBQ)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7153$kwCBQ g$p$7154$kwCBQ)))
              (case-lambda (() (close-input-port g$p$7154$kwCBQ))))))
         (open-input-file g$filename$7152$kwCBQ)))))
   (g$call-with-output-file$7129$kwCBQ
     g$call-with-output-file$7165$kwCBQ
     (case-lambda
       ((g$filename$7155$kwCBQ g$proc$7156$kwCBQ)
        ((case-lambda
           ((g$p$7157$kwCBQ)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7156$kwCBQ g$p$7157$kwCBQ)))
              (case-lambda (() (close-output-port g$p$7157$kwCBQ))))))
         (open-output-file g$filename$7155$kwCBQ)))))
   (g$newline$7130$kwCBQ
     g$newline$7166$kwCBQ
     (case-lambda
       (() (g$newline$7130$kwCBQ (current-output-port)))
       ((g$port$7158$kwCBQ) (display '"
" g$port$7158$kwCBQ)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8220$7167$kwCBQ
     g$8220$7276$kwCBQ
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8222$7168$kwCBQ g$8222$7277$kwCBQ '#f)
   (g$8221$7169$kwCBQ
     g$8221$7278$kwCBQ
     (make-record-constructor-descriptor
       g$8220$7167$kwCBQ
       '#f
       g$8222$7168$kwCBQ))
   (g$enum?$7170$kwCBQ
     g$enum?$7279$kwCBQ
     (record-predicate g$8220$7167$kwCBQ))
   (g$make-enum$7171$kwCBQ
     g$make-enum$7280$kwCBQ
     (record-constructor g$8221$7169$kwCBQ))
   (g$enum-value$7172$kwCBQ
     g$enum-value$7281$kwCBQ
     (record-accessor g$8220$7167$kwCBQ '0))
   (g$enum-info$7173$kwCBQ
     g$enum-info$7282$kwCBQ
     (record-accessor g$8220$7167$kwCBQ '1))
   (g$8233$7174$kwCBQ
     g$8233$7283$kwCBQ
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8235$7175$kwCBQ g$8235$7284$kwCBQ '#f)
   (g$8234$7176$kwCBQ
     g$8234$7285$kwCBQ
     (make-record-constructor-descriptor
       g$8233$7174$kwCBQ
       '#f
       g$8235$7175$kwCBQ))
   (g$enum-universe?$7177$kwCBQ
     g$enum-universe?$7286$kwCBQ
     (record-predicate g$8233$7174$kwCBQ))
   (g$make-enum-universe$7178$kwCBQ
     g$make-enum-universe$7287$kwCBQ
     (record-constructor g$8234$7176$kwCBQ))
   (g$enum-universe-id$7179$kwCBQ
     g$enum-universe-id$7288$kwCBQ
     (record-accessor g$8233$7174$kwCBQ '0))
   (g$enum-universe-symbols$7180$kwCBQ
     g$enum-universe-symbols$7289$kwCBQ
     (record-accessor g$8233$7174$kwCBQ '1))
   (g$enum-universe-mapping$7181$kwCBQ
     g$enum-universe-mapping$7290$kwCBQ
     (record-accessor g$8233$7174$kwCBQ '2))
   (g$enum-universe-value$7182$kwCBQ
     g$enum-universe-value$7291$kwCBQ
     (record-accessor g$8233$7174$kwCBQ '3))
   (g$enum-type=?$7183$kwCBQ
     g$enum-type=?$7292$kwCBQ
     (case-lambda
       ((g$enumset1$7205$kwCBQ g$enumset2$7206$kwCBQ)
        (eq? (g$enum-universe-id$7179$kwCBQ
               (g$enum-info$7173$kwCBQ g$enumset1$7205$kwCBQ))
             (g$enum-universe-id$7179$kwCBQ
               (g$enum-info$7173$kwCBQ g$enumset2$7206$kwCBQ))))))
   (g$get-symbols$7184$kwCBQ
     g$get-symbols$7293$kwCBQ
     (case-lambda
       ((g$enumset$7207$kwCBQ)
        (g$enum-universe-symbols$7180$kwCBQ
          (g$enum-info$7173$kwCBQ g$enumset$7207$kwCBQ)))))
   (g$get-value$7185$kwCBQ
     g$get-value$7294$kwCBQ
     (case-lambda
       ((g$enumset$7208$kwCBQ g$s$7209$kwCBQ)
        (g$hashtable-ref$6318$kwCBQ
          (g$enum-universe-mapping$7181$kwCBQ
            (g$enum-info$7173$kwCBQ g$enumset$7208$kwCBQ))
          g$s$7209$kwCBQ
          '#f))))
   (g$assert-enum$7186$kwCBQ
     g$assert-enum$7295$kwCBQ
     (case-lambda
       ((g$who$7210$kwCBQ g$enumset$7211$kwCBQ)
        (if (not (g$enum?$7170$kwCBQ g$enumset$7211$kwCBQ))
          (assertion-violation
            g$who$7210$kwCBQ
            '"not an enumeration"
            g$enumset$7211$kwCBQ)
          (void)))))
   (g$make-info$7187$kwCBQ
     g$make-info$7296$kwCBQ
     (case-lambda
       ((g$symbols$7212$kwCBQ)
        ((case-lambda
           ((g$ht$7213$kwCBQ)
            ((letrec ((g$f$7214$kwCBQ
                        (case-lambda
                          ((g$s$7215$kwCBQ g$a$7216$kwCBQ g$mask$7217$kwCBQ)
                           (if (null? g$s$7215$kwCBQ)
                             (values
                               (reverse! g$a$7216$kwCBQ)
                               g$ht$7213$kwCBQ
                               (- g$mask$7217$kwCBQ '1))
                             ((case-lambda
                                ((g$n$7218$kwCBQ)
                                 (if (symbol? g$n$7218$kwCBQ)
                                   (if (g$hashtable-contains?$6321$kwCBQ
                                         g$ht$7213$kwCBQ
                                         g$n$7218$kwCBQ)
                                     (g$f$7214$kwCBQ
                                       (cdr g$s$7215$kwCBQ)
                                       g$a$7216$kwCBQ
                                       g$mask$7217$kwCBQ)
                                     (begin
                                       (g$hashtable-set!$6319$kwCBQ
                                         g$ht$7213$kwCBQ
                                         g$n$7218$kwCBQ
                                         g$mask$7217$kwCBQ)
                                       (g$f$7214$kwCBQ
                                         (cdr g$s$7215$kwCBQ)
                                         (cons g$n$7218$kwCBQ g$a$7216$kwCBQ)
                                         (g$bitwise-arithmetic-shift-left$6847$kwCBQ
                                           g$mask$7217$kwCBQ
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$7218$kwCBQ))))
                              (car g$s$7215$kwCBQ)))))))
               g$f$7214$kwCBQ)
             g$symbols$7212$kwCBQ
             '()
             '1)))
         (g$make-eq-hashtable$6315$kwCBQ)))))
   (g$make-name$7188$kwCBQ
     g$make-name$7297$kwCBQ
     (case-lambda
       ((g$symbols$7219$kwCBQ)
        (string->symbol (g$format$7336$kwCBQ '"~a" g$symbols$7219$kwCBQ)))))
   (g$make-enumeration$7189$kwCBQ
     g$make-enumeration$7298$kwCBQ
     (case-lambda
       ((g$symbols$7220$kwCBQ)
        (call-with-values
          (case-lambda (() (g$make-info$7187$kwCBQ g$symbols$7220$kwCBQ)))
          (case-lambda
            ((g$s$7224$kwCBQ g$mapping$7225$kwCBQ g$mask$7226$kwCBQ)
             ((case-lambda
                ((g$mask$7227$kwCBQ g$mapping$7228$kwCBQ g$s$7229$kwCBQ)
                 (g$make-enum$7171$kwCBQ
                   g$mask$7227$kwCBQ
                   (g$make-enum-universe$7178$kwCBQ
                     (g$make-name$7188$kwCBQ g$s$7229$kwCBQ)
                     g$s$7229$kwCBQ
                     g$mapping$7228$kwCBQ
                     g$mask$7227$kwCBQ))))
              g$mask$7226$kwCBQ
              g$mapping$7225$kwCBQ
              g$s$7224$kwCBQ)))))))
   (g$enum-set-universe$7190$kwCBQ
     g$enum-set-universe$7299$kwCBQ
     (case-lambda
       ((g$enumset$7230$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-universe g$enumset$7230$kwCBQ)
          ((case-lambda
             ((g$ei$7231$kwCBQ)
              (g$make-enum$7171$kwCBQ
                (g$enum-universe-value$7182$kwCBQ g$ei$7231$kwCBQ)
                g$ei$7231$kwCBQ)))
           (g$enum-info$7173$kwCBQ g$enumset$7230$kwCBQ))))))
   (g$enum-set-indexer$7191$kwCBQ
     g$enum-set-indexer$7300$kwCBQ
     (case-lambda
       ((g$enumset$7232$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-indexer g$enumset$7232$kwCBQ)
          (case-lambda
            ((g$symbol$7233$kwCBQ)
             (begin
               (if (not (symbol? g$symbol$7233$kwCBQ))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$7233$kwCBQ)
                 (void))
               ((case-lambda
                  ((g$v$7234$kwCBQ)
                   (if g$v$7234$kwCBQ
                     (- (bitwise-length g$v$7234$kwCBQ) '1)
                     '#f)))
                (g$get-value$7185$kwCBQ
                  g$enumset$7232$kwCBQ
                  g$symbol$7233$kwCBQ)))))))))
   (g$enum-set-constructor$7192$kwCBQ
     g$enum-set-constructor$7301$kwCBQ
     (case-lambda
       ((g$enumset$7235$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-constructor g$enumset$7235$kwCBQ)
          (case-lambda
            ((g$symbols$7236$kwCBQ)
             ((letrec ((g$f$7237$kwCBQ
                         (case-lambda
                           ((g$v$7238$kwCBQ g$s$7239$kwCBQ)
                            (if (null? g$s$7239$kwCBQ)
                              (g$make-enum$7171$kwCBQ
                                g$v$7238$kwCBQ
                                (g$enum-info$7173$kwCBQ g$enumset$7235$kwCBQ))
                              ((case-lambda
                                 ((g$n$7240$kwCBQ)
                                  (if (symbol? g$n$7240$kwCBQ)
                                    ((case-lambda
                                       ((g$v*$7241$kwCBQ)
                                        (if g$v*$7241$kwCBQ
                                          (g$f$7237$kwCBQ
                                            (bitwise-ior
                                              g$v$7238$kwCBQ
                                              g$v*$7241$kwCBQ)
                                            (cdr g$s$7239$kwCBQ))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$7240$kwCBQ))))
                                     (g$get-value$7185$kwCBQ
                                       g$enumset$7235$kwCBQ
                                       g$n$7240$kwCBQ))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$7240$kwCBQ))))
                               (car g$s$7239$kwCBQ)))))))
                g$f$7237$kwCBQ)
              '0
              g$symbols$7236$kwCBQ)))))))
   (g$enum-set->list$7193$kwCBQ
     g$enum-set->list$7302$kwCBQ
     (case-lambda
       ((g$enumset$7242$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set->list g$enumset$7242$kwCBQ)
          ((case-lambda
             ((g$value$7243$kwCBQ)
              ((letrec ((g$f$7244$kwCBQ
                          (case-lambda
                            ((g$s$7245$kwCBQ g$l$7246$kwCBQ)
                             (if (null? g$s$7245$kwCBQ)
                               (reverse! g$l$7246$kwCBQ)
                               (if (g$zero?$6067$kwCBQ
                                     (bitwise-and
                                       (g$get-value$7185$kwCBQ
                                         g$enumset$7242$kwCBQ
                                         (car g$s$7245$kwCBQ))
                                       g$value$7243$kwCBQ))
                                 (g$f$7244$kwCBQ
                                   (cdr g$s$7245$kwCBQ)
                                   g$l$7246$kwCBQ)
                                 (g$f$7244$kwCBQ
                                   (cdr g$s$7245$kwCBQ)
                                   (cons
                                     (car g$s$7245$kwCBQ)
                                     g$l$7246$kwCBQ))))))))
                 g$f$7244$kwCBQ)
               (g$get-symbols$7184$kwCBQ g$enumset$7242$kwCBQ)
               '())))
           (g$enum-value$7172$kwCBQ g$enumset$7242$kwCBQ))))))
   (g$enum-set-member?$7194$kwCBQ
     g$enum-set-member?$7303$kwCBQ
     (case-lambda
       ((g$symbol$7247$kwCBQ g$enumset$7248$kwCBQ)
        (begin
          (if (not (symbol? g$symbol$7247$kwCBQ))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$7247$kwCBQ)
            (void))
          (g$assert-enum$7186$kwCBQ 'enum-set-member? g$enumset$7248$kwCBQ)
          ((case-lambda
             ((g$v$7249$kwCBQ)
              (if g$v$7249$kwCBQ
                (not (g$zero?$6067$kwCBQ
                       (bitwise-and
                         g$v$7249$kwCBQ
                         (g$enum-value$7172$kwCBQ g$enumset$7248$kwCBQ))))
                '#f)))
           (g$get-value$7185$kwCBQ
             g$enumset$7248$kwCBQ
             g$symbol$7247$kwCBQ))))))
   (g$enum-set-subset?$7195$kwCBQ
     g$enum-set-subset?$7304$kwCBQ
     (case-lambda
       ((g$enumset1$7250$kwCBQ g$enumset2$7251$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-subset? g$enumset1$7250$kwCBQ)
          (g$assert-enum$7186$kwCBQ 'enum-set-subset? g$enumset2$7251$kwCBQ)
          ((case-lambda
             ((g$v1$7252$kwCBQ g$v2$7253$kwCBQ)
              (if (g$enum-type=?$7183$kwCBQ
                    g$enumset1$7250$kwCBQ
                    g$enumset2$7251$kwCBQ)
                (= (bitwise-and g$v1$7252$kwCBQ g$v2$7253$kwCBQ)
                   g$v1$7252$kwCBQ)
                ((letrec ((g$f$7254$kwCBQ
                            (case-lambda
                              ((g$s$7255$kwCBQ)
                               (if (null? g$s$7255$kwCBQ)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$7256$kwCBQ g$v2*$7257$kwCBQ)
                                     (if g$v2*$7257$kwCBQ
                                       ((case-lambda
                                          ((g$has1$7258$kwCBQ g$has2$7259$kwCBQ)
                                           (if (if g$has1$7258$kwCBQ
                                                 (begin
                                                   '#f
                                                   (not g$has2$7259$kwCBQ))
                                                 '#f)
                                             '#f
                                             (g$f$7254$kwCBQ
                                               (cdr g$s$7255$kwCBQ)))))
                                        (not (g$zero?$6067$kwCBQ
                                               (bitwise-and
                                                 g$v1$7252$kwCBQ
                                                 g$v1*$7256$kwCBQ)))
                                        (not (g$zero?$6067$kwCBQ
                                               (bitwise-and
                                                 g$v2$7253$kwCBQ
                                                 g$v2*$7257$kwCBQ))))
                                       '#f)))
                                  (g$get-value$7185$kwCBQ
                                    g$enumset1$7250$kwCBQ
                                    (car g$s$7255$kwCBQ))
                                  (g$get-value$7185$kwCBQ
                                    g$enumset2$7251$kwCBQ
                                    (car g$s$7255$kwCBQ))))))))
                   g$f$7254$kwCBQ)
                 (g$get-symbols$7184$kwCBQ g$enumset1$7250$kwCBQ)))))
           (g$enum-value$7172$kwCBQ g$enumset1$7250$kwCBQ)
           (g$enum-value$7172$kwCBQ g$enumset2$7251$kwCBQ))))))
   (g$enum-set=?$7196$kwCBQ
     g$enum-set=?$7305$kwCBQ
     (case-lambda
       ((g$enumset1$7260$kwCBQ g$enumset2$7261$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set=? g$enumset1$7260$kwCBQ)
          (g$assert-enum$7186$kwCBQ 'enum-set=? g$enumset2$7261$kwCBQ)
          (if (g$enum-set-subset?$7195$kwCBQ
                g$enumset1$7260$kwCBQ
                g$enumset2$7261$kwCBQ)
            (begin
              '#f
              (g$enum-set-subset?$7195$kwCBQ
                g$enumset2$7261$kwCBQ
                g$enumset1$7260$kwCBQ))
            '#f)))))
   (g$enum-set-union$7197$kwCBQ
     g$enum-set-union$7306$kwCBQ
     (case-lambda
       ((g$enumset1$7262$kwCBQ g$enumset2$7263$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-union g$enumset1$7262$kwCBQ)
          (g$assert-enum$7186$kwCBQ 'enum-set-union g$enumset2$7263$kwCBQ)
          (if (g$enum-type=?$7183$kwCBQ
                g$enumset1$7262$kwCBQ
                g$enumset2$7263$kwCBQ)
            (g$make-enum$7171$kwCBQ
              (bitwise-ior
                (g$enum-value$7172$kwCBQ g$enumset1$7262$kwCBQ)
                (g$enum-value$7172$kwCBQ g$enumset2$7263$kwCBQ))
              (g$enum-info$7173$kwCBQ g$enumset1$7262$kwCBQ))
            '#f)))))
   (g$enum-set-intersection$7198$kwCBQ
     g$enum-set-intersection$7307$kwCBQ
     (case-lambda
       ((g$enumset1$7264$kwCBQ g$enumset2$7265$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ
            'enum-set-intersection
            g$enumset1$7264$kwCBQ)
          (g$assert-enum$7186$kwCBQ
            'enum-set-intersection
            g$enumset2$7265$kwCBQ)
          (if (g$enum-type=?$7183$kwCBQ
                g$enumset1$7264$kwCBQ
                g$enumset2$7265$kwCBQ)
            (g$make-enum$7171$kwCBQ
              (bitwise-and
                (g$enum-value$7172$kwCBQ g$enumset1$7264$kwCBQ)
                (g$enum-value$7172$kwCBQ g$enumset2$7265$kwCBQ))
              (g$enum-info$7173$kwCBQ g$enumset1$7264$kwCBQ))
            '#f)))))
   (g$enum-set-difference$7199$kwCBQ
     g$enum-set-difference$7308$kwCBQ
     (case-lambda
       ((g$enumset1$7266$kwCBQ g$enumset2$7267$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-difference g$enumset1$7266$kwCBQ)
          (g$assert-enum$7186$kwCBQ 'enum-set-difference g$enumset2$7267$kwCBQ)
          (if (g$enum-type=?$7183$kwCBQ
                g$enumset1$7266$kwCBQ
                g$enumset2$7267$kwCBQ)
            (g$make-enum$7171$kwCBQ
              (bitwise-and
                (g$enum-value$7172$kwCBQ g$enumset1$7266$kwCBQ)
                (bitwise-not (g$enum-value$7172$kwCBQ g$enumset2$7267$kwCBQ)))
              (g$enum-info$7173$kwCBQ g$enumset1$7266$kwCBQ))
            '#f)))))
   (g$enum-set-complement$7200$kwCBQ
     g$enum-set-complement$7309$kwCBQ
     (case-lambda
       ((g$enumset$7268$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-complement g$enumset$7268$kwCBQ)
          (g$make-enum$7171$kwCBQ
            (bitwise-not (g$enum-value$7172$kwCBQ g$enumset$7268$kwCBQ))
            (g$enum-info$7173$kwCBQ g$enumset$7268$kwCBQ))))))
   (g$enum-set-projection$7201$kwCBQ
     g$enum-set-projection$7310$kwCBQ
     (case-lambda
       ((g$enumset1$7269$kwCBQ g$enumset2$7270$kwCBQ)
        (begin
          (g$assert-enum$7186$kwCBQ 'enum-set-projection g$enumset1$7269$kwCBQ)
          (g$assert-enum$7186$kwCBQ 'enum-set-projection g$enumset2$7270$kwCBQ)
          ((case-lambda
             ((g$v1$7271$kwCBQ)
              ((letrec ((g$f$7272$kwCBQ
                          (case-lambda
                            ((g$s$7273$kwCBQ g$v$7274$kwCBQ)
                             (if (null? g$s$7273$kwCBQ)
                               (g$make-enum$7171$kwCBQ
                                 g$v$7274$kwCBQ
                                 (g$enum-info$7173$kwCBQ g$enumset2$7270$kwCBQ))
                               (if (g$zero?$6067$kwCBQ
                                     (bitwise-and
                                       g$v1$7271$kwCBQ
                                       (g$get-value$7185$kwCBQ
                                         g$enumset1$7269$kwCBQ
                                         (car g$s$7273$kwCBQ))))
                                 (g$f$7272$kwCBQ
                                   (cdr g$s$7273$kwCBQ)
                                   g$v$7274$kwCBQ)
                                 ((case-lambda
                                    ((g$v2$7275$kwCBQ)
                                     (if g$v2$7275$kwCBQ
                                       (g$f$7272$kwCBQ
                                         (cdr g$s$7273$kwCBQ)
                                         (bitwise-ior
                                           g$v$7274$kwCBQ
                                           g$v2$7275$kwCBQ))
                                       (g$f$7272$kwCBQ
                                         (cdr g$s$7273$kwCBQ)
                                         g$v$7274$kwCBQ))))
                                  (g$get-value$7185$kwCBQ
                                    g$enumset2$7270$kwCBQ
                                    (car g$s$7273$kwCBQ)))))))))
                 g$f$7272$kwCBQ)
               (g$get-symbols$7184$kwCBQ g$enumset1$7269$kwCBQ)
               '0)))
           (g$enum-value$7172$kwCBQ g$enumset1$7269$kwCBQ)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$7202$kwCBQ g$p$7203$kwCBQ g$wr$7204$kwCBQ)
       (g$fprintf$7335$kwCBQ
         g$p$7203$kwCBQ
         '"#[enum-set ~a]"
         (g$enum-set->list$7193$kwCBQ g$x$7202$kwCBQ))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$7311$kwCBQ
     g$dofmt$7333$kwCBQ
     (case-lambda
       ((g$p$7315$kwCBQ g$cntl$7316$kwCBQ g$args$7317$kwCBQ)
        ((case-lambda
           ((g$nmax$7318$kwCBQ)
            ((letrec ((g$loop$7319$kwCBQ
                        (case-lambda
                          ((g$n$7320$kwCBQ g$a$7321$kwCBQ)
                           (if (fx<=? g$n$7320$kwCBQ g$nmax$7318$kwCBQ)
                             ((case-lambda
                                ((g$c$7322$kwCBQ)
                                 (if (if (g$char=?$6081$kwCBQ
                                           g$c$7322$kwCBQ
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$7320$kwCBQ
                                           g$nmax$7318$kwCBQ))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$7323$kwCBQ)
                                       (if (g$memv$5805$kwCBQ
                                             g$t$7323$kwCBQ
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$7321$kwCBQ)
                                             g$p$7315$kwCBQ)
                                           (g$loop$7319$kwCBQ
                                             (fx+ g$n$7320$kwCBQ '2)
                                             (cdr g$a$7321$kwCBQ)))
                                         (if (g$memv$5805$kwCBQ
                                               g$t$7323$kwCBQ
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$7321$kwCBQ)
                                               g$p$7315$kwCBQ)
                                             (g$loop$7319$kwCBQ
                                               (fx+ g$n$7320$kwCBQ '2)
                                               (cdr g$a$7321$kwCBQ)))
                                           (if (g$memv$5805$kwCBQ
                                                 g$t$7323$kwCBQ
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$7321$kwCBQ)
                                                   '2)
                                                 g$p$7315$kwCBQ)
                                               (g$loop$7319$kwCBQ
                                                 (fx+ g$n$7320$kwCBQ '2)
                                                 (cdr g$a$7321$kwCBQ)))
                                             (if (g$memv$5805$kwCBQ
                                                   g$t$7323$kwCBQ
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$7321$kwCBQ)
                                                     '8)
                                                   g$p$7315$kwCBQ)
                                                 (g$loop$7319$kwCBQ
                                                   (fx+ g$n$7320$kwCBQ '2)
                                                   (cdr g$a$7321$kwCBQ)))
                                               (if (g$memv$5805$kwCBQ
                                                     g$t$7323$kwCBQ
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$7321$kwCBQ)
                                                       '16)
                                                     g$p$7315$kwCBQ)
                                                   (g$loop$7319$kwCBQ
                                                     (fx+ g$n$7320$kwCBQ '2)
                                                     (cdr g$a$7321$kwCBQ)))
                                                 (if (g$memv$5805$kwCBQ
                                                       g$t$7323$kwCBQ
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$7321$kwCBQ)
                                                         '10)
                                                       g$p$7315$kwCBQ)
                                                     (g$loop$7319$kwCBQ
                                                       (fx+ g$n$7320$kwCBQ '2)
                                                       (cdr g$a$7321$kwCBQ)))
                                                   (if (g$memv$5805$kwCBQ
                                                         g$t$7323$kwCBQ
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$7161$kwCBQ
                                                         '#\~
                                                         g$p$7315$kwCBQ)
                                                       (g$loop$7319$kwCBQ
                                                         (fx+ g$n$7320$kwCBQ '2)
                                                         g$a$7321$kwCBQ))
                                                     (begin
                                                       (g$write-char$7161$kwCBQ
                                                         g$c$7322$kwCBQ
                                                         g$p$7315$kwCBQ)
                                                       (g$loop$7319$kwCBQ
                                                         (fx+ g$n$7320$kwCBQ '1)
                                                         g$a$7321$kwCBQ)))))))))))
                                    (string-ref
                                      g$cntl$7316$kwCBQ
                                      (fx+ g$n$7320$kwCBQ '1)))
                                   (begin
                                     (g$write-char$7161$kwCBQ
                                       g$c$7322$kwCBQ
                                       g$p$7315$kwCBQ)
                                     (g$loop$7319$kwCBQ
                                       (fx+ g$n$7320$kwCBQ '1)
                                       g$a$7321$kwCBQ)))))
                              (string-ref g$cntl$7316$kwCBQ g$n$7320$kwCBQ))
                             (void))))))
               g$loop$7319$kwCBQ)
             '0
             g$args$7317$kwCBQ)))
         (fx- (string-length g$cntl$7316$kwCBQ) '1)))))
   (g$printf$7312$kwCBQ
     g$printf$7334$kwCBQ
     (case-lambda
       ((g$control$7324$kwCBQ . g$args$7325$kwCBQ)
        (g$dofmt$7311$kwCBQ
          (current-output-port)
          g$control$7324$kwCBQ
          g$args$7325$kwCBQ))))
   (g$fprintf$7313$kwCBQ
     g$fprintf$7335$kwCBQ
     (case-lambda
       ((g$p$7326$kwCBQ g$control$7327$kwCBQ . g$args$7328$kwCBQ)
        (g$dofmt$7311$kwCBQ
          g$p$7326$kwCBQ
          g$control$7327$kwCBQ
          g$args$7328$kwCBQ))))
   (g$format$7314$kwCBQ
     g$format$7336$kwCBQ
     (case-lambda
       ((g$control$7329$kwCBQ . g$args$7330$kwCBQ)
        (call-with-values
          g$open-string-output-port$7113$kwCBQ
          (case-lambda
            ((g$p$7331$kwCBQ g$c$7332$kwCBQ)
             (begin
               (g$dofmt$7311$kwCBQ
                 g$p$7331$kwCBQ
                 g$control$7329$kwCBQ
                 g$args$7330$kwCBQ)
               (g$c$7332$kwCBQ)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7337$kwCBQ
     g$make-traced-macro$7340$kwCBQ
     (case-lambda
       ((g$name$7338$kwCBQ g$x$7339$kwCBQ)
        (if (procedure? g$x$7339$kwCBQ)
          (make-traced-procedure
            g$name$7338$kwCBQ
            g$x$7339$kwCBQ
            g$syntax->datum$12428$kwCBQ)
          (if (g$variable-transformer?$12250$kwCBQ g$x$7339$kwCBQ)
            (g$make-variable-transformer$12248$kwCBQ
              (make-traced-procedure
                g$name$7338$kwCBQ
                (g$variable-transformer-procedure$12251$kwCBQ g$x$7339$kwCBQ)
                g$syntax->datum$12428$kwCBQ))
            g$x$7339$kwCBQ))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$7341$kwCBQ
     g$cps/generate-reference$7618$kwCBQ
     (case-lambda
       ((g$variable$7397$kwCBQ)
        (g$cps/generate-operand$7345$kwCBQ
          (g$make-reference$7371$kwCBQ g$variable$7397$kwCBQ)))))
   (g$cps/generate-literal$7342$kwCBQ
     g$cps/generate-literal$7619$kwCBQ
     (case-lambda
       ((g$datum$7398$kwCBQ)
        (g$cps/generate-operand$7345$kwCBQ
          (g$make-literal$7370$kwCBQ g$datum$7398$kwCBQ)))))
   (g$cps/generate-abstraction$7343$kwCBQ
     g$cps/generate-abstraction$7620$kwCBQ
     (case-lambda
       ((g$bvl$7399$kwCBQ g$body-generator$7400$kwCBQ)
        (g$cps/generate-operand$7345$kwCBQ
          (g$make-user-abstraction$7372$kwCBQ
            g$bvl$7399$kwCBQ
            (case-lambda
              ((g$continuation-variable$7401$kwCBQ)
               (g$body-generator$7400$kwCBQ
                 (g$variable-continuator$7358$kwCBQ
                   g$continuation-variable$7401$kwCBQ)))))))))
   (g$cps/generate-abstractions$7344$kwCBQ
     g$cps/generate-abstractions$7621$kwCBQ
     (case-lambda
       ((g$bvls$7402$kwCBQ g$body-generators$7403$kwCBQ)
        (g$cps/generate-operand$7345$kwCBQ
          (g$make-user-abstractions$7373$kwCBQ
            g$bvls$7402$kwCBQ
            (g$map$5812$kwCBQ
              (case-lambda
                ((g$body-generator$7404$kwCBQ)
                 (case-lambda
                   ((g$continuation-variable$7405$kwCBQ)
                    (g$body-generator$7404$kwCBQ
                      (g$variable-continuator$7358$kwCBQ
                        g$continuation-variable$7405$kwCBQ))))))
              g$body-generators$7403$kwCBQ))))))
   (g$cps/generate-operand$7345$kwCBQ
     g$cps/generate-operand$7622$kwCBQ
     (case-lambda
       ((g$operand$7406$kwCBQ)
        (case-lambda
          ((g$continuator$7407$kwCBQ)
           (g$continue-with-operand$7361$kwCBQ
             g$continuator$7407$kwCBQ
             g$operand$7406$kwCBQ))))))
   (g$cps/generate-conditional$7346$kwCBQ
     g$cps/generate-conditional$7623$kwCBQ
     (case-lambda
       ((g$condition-generator$7408$kwCBQ
          g$consequent-generator$7409$kwCBQ
          g$alternative-generator$7410$kwCBQ)
        (case-lambda
          ((g$continuator$7411$kwCBQ)
           (letrec* ((g$if-variable$7412$kwCBQ
                       (case-lambda
                         ((g$continuation-variable$7414$kwCBQ)
                          ((case-lambda
                             ((g$continuator*$7415$kwCBQ)
                              (g$condition-generator$7408$kwCBQ
                                (g$conditional-continuator$7357$kwCBQ
                                  (case-lambda
                                    ((g$condition$7416$kwCBQ)
                                     (g$make-conditional$7380$kwCBQ
                                       g$condition$7416$kwCBQ
                                       (g$consequent-generator$7409$kwCBQ
                                         g$continuator*$7415$kwCBQ)
                                       (g$alternative-generator$7410$kwCBQ
                                         g$continuator*$7415$kwCBQ))))))))
                           (g$variable-continuator$7358$kwCBQ
                             g$continuation-variable$7414$kwCBQ))))))
             (g$reify-continuation*$7363$kwCBQ
               g$continuator$7411$kwCBQ
               g$if-variable$7412$kwCBQ
               (case-lambda
                 ((g$continuation-abstraction$7413$kwCBQ)
                  (g$make-conditional-join$7381$kwCBQ
                    g$continuation-abstraction$7413$kwCBQ
                    g$if-variable$7412$kwCBQ))))))))))
   (g$cps/generate-recursive-bind$7347$kwCBQ
     g$cps/generate-recursive-bind$7624$kwCBQ
     (case-lambda
       ((g$variables$7417$kwCBQ
          g$generators$7418$kwCBQ
          g$body-generator$7419$kwCBQ)
        (case-lambda
          ((g$continuator$7420$kwCBQ)
           (g$make-recursive-bind$7375$kwCBQ
             g$variables$7417$kwCBQ
             (g$map$5812$kwCBQ
               (case-lambda
                 ((g$generator$7421$kwCBQ)
                  (case-lambda
                    ((g$continuation-variable$7422$kwCBQ)
                     (g$generator$7421$kwCBQ
                       (g$variable-continuator$7358$kwCBQ
                         g$continuation-variable$7422$kwCBQ))))))
               g$generators$7418$kwCBQ)
             (g$body-generator$7419$kwCBQ
               (g$reified-continuator$7360$kwCBQ
                 g$continuator$7420$kwCBQ))))))))
   (g$cps/generate-recursive*-bind$7348$kwCBQ
     g$cps/generate-recursive*-bind$7625$kwCBQ
     (case-lambda
       ((g$variables$7423$kwCBQ
          g$generators$7424$kwCBQ
          g$body-generator$7425$kwCBQ)
        (case-lambda
          ((g$continuator$7426$kwCBQ)
           (g$make-recursive*-bind$7376$kwCBQ
             g$variables$7423$kwCBQ
             (g$map$5812$kwCBQ
               (case-lambda
                 ((g$generator$7427$kwCBQ)
                  (case-lambda
                    ((g$continuation-variable$7428$kwCBQ)
                     (g$generator$7427$kwCBQ
                       (g$variable-continuator$7358$kwCBQ
                         g$continuation-variable$7428$kwCBQ))))))
               g$generators$7424$kwCBQ)
             (g$body-generator$7425$kwCBQ
               (g$reified-continuator$7360$kwCBQ
                 g$continuator$7426$kwCBQ))))))))
   (g$cps/generate-recursive*-library-bind$7349$kwCBQ
     g$cps/generate-recursive*-library-bind$7626$kwCBQ
     (case-lambda
       ((g$name$7429$kwCBQ
          g$variables$7430$kwCBQ
          g$variables*$7431$kwCBQ
          g$generators$7432$kwCBQ
          g$body-generator$7433$kwCBQ)
        (case-lambda
          ((g$continuator$7434$kwCBQ)
           (g$make-recursive*-library-bind$7377$kwCBQ
             g$name$7429$kwCBQ
             g$variables$7430$kwCBQ
             g$variables*$7431$kwCBQ
             (g$map$5812$kwCBQ
               (case-lambda
                 ((g$generator$7435$kwCBQ)
                  (case-lambda
                    ((g$continuation-variable$7436$kwCBQ)
                     (g$generator$7435$kwCBQ
                       (g$variable-continuator$7358$kwCBQ
                         g$continuation-variable$7436$kwCBQ))))))
               g$generators$7432$kwCBQ)
             (g$body-generator$7433$kwCBQ
               (g$reified-continuator$7360$kwCBQ
                 g$continuator$7434$kwCBQ))))))))
   (g$cps/generate-sequence$7350$kwCBQ
     g$cps/generate-sequence$7627$kwCBQ
     (case-lambda
       ((g$generators$7437$kwCBQ)
        (case-lambda
          ((g$continuator$7438$kwCBQ)
           ((letrec ((g$recur$7439$kwCBQ
                       (case-lambda
                         ((g$generators$7440$kwCBQ)
                          ((car g$generators$7440$kwCBQ)
                           ((case-lambda
                              ((g$generators$7441$kwCBQ)
                               (if (pair? g$generators$7441$kwCBQ)
                                 (g$effect-continuator$7356$kwCBQ
                                   (case-lambda
                                     (()
                                      (g$recur$7439$kwCBQ
                                        g$generators$7441$kwCBQ))))
                                 g$continuator$7438$kwCBQ)))
                            (cdr g$generators$7440$kwCBQ)))))))
              g$recur$7439$kwCBQ)
            g$generators$7437$kwCBQ))))))
   (g$cps/generate-assignment$7351$kwCBQ
     g$cps/generate-assignment$7628$kwCBQ
     (case-lambda
       ((g$location$7442$kwCBQ g$expression-generator$7443$kwCBQ)
        (case-lambda
          ((g$continuator$7444$kwCBQ)
           (g$expression-generator$7443$kwCBQ
             (g$operand-continuator$7355$kwCBQ
               (case-lambda
                 ((g$operand$7445$kwCBQ)
                  (g$make-assignment$7383$kwCBQ
                    g$location$7442$kwCBQ
                    g$operand$7445$kwCBQ
                    (g$continue-with-operand$7361$kwCBQ
                      g$continuator$7444$kwCBQ
                      '(void))))))))))))
   (g$cps/generate-primitive$7352$kwCBQ
     g$cps/generate-primitive$7629$kwCBQ
     (case-lambda
       ((g$operator$7446$kwCBQ g$operand-generators$7447$kwCBQ)
        (case-lambda
          ((g$continuator$7448$kwCBQ)
           (g$continue-with-operand$7361$kwCBQ
             g$continuator$7448$kwCBQ
             (cons
               g$operator$7446$kwCBQ
               (g$map$5812$kwCBQ
                 (case-lambda
                   ((g$generator$7449$kwCBQ)
                    (case-lambda
                      ((g$continuation-variable$7450$kwCBQ)
                       (g$generator$7449$kwCBQ
                         (g$variable-continuator$7358$kwCBQ
                           g$continuation-variable$7450$kwCBQ))))))
                 g$operand-generators$7447$kwCBQ))))))))
   (g$cps/generate-combination$7353$kwCBQ
     g$cps/generate-combination$7630$kwCBQ
     (case-lambda
       ((g$operator-generator$7451$kwCBQ g$operand-generators$7452$kwCBQ)
        (g$cps/generate-subproblems$7354$kwCBQ
          (reverse
            (cons
              g$operator-generator$7451$kwCBQ
              g$operand-generators$7452$kwCBQ))
          (case-lambda
            ((g$operands$7453$kwCBQ g$continuator$7454$kwCBQ)
             (g$make-combination$7378$kwCBQ
               (car g$operands$7453$kwCBQ)
               (g$reify-continuation$7362$kwCBQ g$continuator$7454$kwCBQ)
               (cdr g$operands$7453$kwCBQ))))))))
   (g$cps/generate-subproblems$7354$kwCBQ
     g$cps/generate-subproblems$7631$kwCBQ
     (case-lambda
       ((g$generators$7455$kwCBQ g$combiner$7456$kwCBQ)
        (case-lambda
          ((g$continuator$7457$kwCBQ)
           ((letrec ((g$recur$7458$kwCBQ
                       (case-lambda
                         ((g$generators$7459$kwCBQ g$operands$7460$kwCBQ)
                          (if (pair? g$generators$7459$kwCBQ)
                            ((car g$generators$7459$kwCBQ)
                             ((case-lambda
                                ((g$generators$7461$kwCBQ)
                                 (g$operand-continuator$7355$kwCBQ
                                   (case-lambda
                                     ((g$operand$7462$kwCBQ)
                                      (g$recur$7458$kwCBQ
                                        g$generators$7461$kwCBQ
                                        (cons
                                          g$operand$7462$kwCBQ
                                          g$operands$7460$kwCBQ)))))))
                              (cdr g$generators$7459$kwCBQ)))
                            (g$combiner$7456$kwCBQ
                              g$operands$7460$kwCBQ
                              g$continuator$7457$kwCBQ))))))
              g$recur$7458$kwCBQ)
            g$generators$7455$kwCBQ
            '()))))))
   (g$operand-continuator$7355$kwCBQ
     g$operand-continuator$7632$kwCBQ
     (case-lambda
       ((g$generator$7463$kwCBQ)
        (case-lambda
          ((g$if-operand$7464$kwCBQ
             g$if-effect$7465$kwCBQ
             g$if-conditional$7466$kwCBQ
             g$if-variable$7467$kwCBQ
             g$if-inline$7468$kwCBQ)
           (begin
             g$if-effect$7465$kwCBQ
             g$if-conditional$7466$kwCBQ
             g$if-variable$7467$kwCBQ
             g$if-inline$7468$kwCBQ
             (g$if-operand$7464$kwCBQ g$generator$7463$kwCBQ)))))))
   (g$effect-continuator$7356$kwCBQ
     g$effect-continuator$7633$kwCBQ
     (case-lambda
       ((g$generator$7469$kwCBQ)
        (case-lambda
          ((g$if-operand$7470$kwCBQ
             g$if-effect$7471$kwCBQ
             g$if-conditional$7472$kwCBQ
             g$if-variable$7473$kwCBQ
             g$if-inline$7474$kwCBQ)
           (begin
             g$if-operand$7470$kwCBQ
             g$if-conditional$7472$kwCBQ
             g$if-variable$7473$kwCBQ
             g$if-inline$7474$kwCBQ
             (g$if-effect$7471$kwCBQ g$generator$7469$kwCBQ)))))))
   (g$conditional-continuator$7357$kwCBQ
     g$conditional-continuator$7634$kwCBQ
     (case-lambda
       ((g$generator$7475$kwCBQ)
        (case-lambda
          ((g$if-operand$7476$kwCBQ
             g$if-effect$7477$kwCBQ
             g$if-conditional$7478$kwCBQ
             g$if-variable$7479$kwCBQ
             g$if-inline$7480$kwCBQ)
           (begin
             g$if-operand$7476$kwCBQ
             g$if-effect$7477$kwCBQ
             g$if-variable$7479$kwCBQ
             g$if-inline$7480$kwCBQ
             (g$if-conditional$7478$kwCBQ g$generator$7475$kwCBQ)))))))
   (g$variable-continuator$7358$kwCBQ
     g$variable-continuator$7635$kwCBQ
     (case-lambda
       ((g$variable$7481$kwCBQ)
        (case-lambda
          ((g$if-operand$7482$kwCBQ
             g$if-effect$7483$kwCBQ
             g$if-conditional$7484$kwCBQ
             g$if-variable$7485$kwCBQ
             g$if-inline$7486$kwCBQ)
           (begin
             g$if-operand$7482$kwCBQ
             g$if-effect$7483$kwCBQ
             g$if-variable$7485$kwCBQ
             g$if-inline$7486$kwCBQ
             (g$if-variable$7485$kwCBQ g$variable$7481$kwCBQ)))))))
   (g$inline-continuator$7359$kwCBQ
     g$inline-continuator$7636$kwCBQ
     (case-lambda
       ((g$continuation$7487$kwCBQ)
        (case-lambda
          ((g$if-operand$7488$kwCBQ
             g$if-effect$7489$kwCBQ
             g$if-conditional$7490$kwCBQ
             g$if-variable$7491$kwCBQ
             g$if-inline$7492$kwCBQ)
           (begin
             g$if-operand$7488$kwCBQ
             g$if-effect$7489$kwCBQ
             g$if-conditional$7490$kwCBQ
             g$if-variable$7491$kwCBQ
             (g$if-inline$7492$kwCBQ g$continuation$7487$kwCBQ)))))))
   (g$reified-continuator$7360$kwCBQ
     g$reified-continuator$7637$kwCBQ
     (case-lambda
       ((g$continuator$7493$kwCBQ)
        (case-lambda
          ((g$if-operand$7494$kwCBQ
             g$if-effect$7495$kwCBQ
             g$if-conditional$7496$kwCBQ
             g$if-variable$7497$kwCBQ
             g$if-inline$7498$kwCBQ)
           (begin
             g$if-operand$7494$kwCBQ
             g$if-effect$7495$kwCBQ
             g$if-conditional$7496$kwCBQ
             (g$reify-continuation*$7363$kwCBQ
               g$continuator$7493$kwCBQ
               g$if-variable$7497$kwCBQ
               g$if-inline$7498$kwCBQ)))))))
   (g$continue-with-operand$7361$kwCBQ
     g$continue-with-operand$7638$kwCBQ
     (case-lambda
       ((g$continuator$7499$kwCBQ g$operand$7500$kwCBQ)
        (g$continuator$7499$kwCBQ
          (case-lambda
            ((g$generator$7501$kwCBQ)
             (g$generator$7501$kwCBQ g$operand$7500$kwCBQ)))
          (case-lambda ((g$generator$7502$kwCBQ) (g$generator$7502$kwCBQ)))
          (case-lambda
            ((g$generator$7503$kwCBQ)
             (g$generator$7503$kwCBQ
               (g$make-truth-test$7384$kwCBQ g$operand$7500$kwCBQ))))
          (case-lambda
            ((g$continuation-variable$7504$kwCBQ)
             (g$make-return$7379$kwCBQ
               (g$make-reference$7371$kwCBQ g$continuation-variable$7504$kwCBQ)
               (list g$operand$7500$kwCBQ))))
          (case-lambda
            ((g$continuation-abstraction$7505$kwCBQ)
             (g$make-return$7379$kwCBQ
               g$continuation-abstraction$7505$kwCBQ
               (list g$operand$7500$kwCBQ))))))))
   (g$reify-continuation$7362$kwCBQ
     g$reify-continuation$7639$kwCBQ
     (case-lambda
       ((g$continuator$7506$kwCBQ)
        (g$continuator$7506$kwCBQ
          g$operand-continuation-reifier$7365$kwCBQ
          g$effect-continuation-reifier$7367$kwCBQ
          g$conditional-continuation-reifier$7369$kwCBQ
          (case-lambda
            ((g$variable$7507$kwCBQ)
             (g$make-reference$7371$kwCBQ g$variable$7507$kwCBQ)))
          (case-lambda
            ((g$continuation$7508$kwCBQ) g$continuation$7508$kwCBQ))))))
   (g$reify-continuation*$7363$kwCBQ
     g$reify-continuation*$7640$kwCBQ
     (case-lambda
       ((g$continuator$7509$kwCBQ
          g$if-variable$7510$kwCBQ
          g$if-inline$7511$kwCBQ)
        (g$continuator$7509$kwCBQ
          (g$operand-continuation-reifier*$7364$kwCBQ g$if-inline$7511$kwCBQ)
          (g$effect-continuation-reifier*$7366$kwCBQ g$if-inline$7511$kwCBQ)
          (g$conditional-continuation-reifier*$7368$kwCBQ
            g$if-inline$7511$kwCBQ)
          g$if-variable$7510$kwCBQ
          g$if-inline$7511$kwCBQ))))
   (g$operand-continuation-reifier*$7364$kwCBQ
     g$operand-continuation-reifier*$7641$kwCBQ
     (case-lambda
       ((g$receiver$7512$kwCBQ)
        (case-lambda
          ((g$generator$7513$kwCBQ)
           (g$receiver$7512$kwCBQ
             ((case-lambda
                ((g$variable$7514$kwCBQ)
                 (g$make-continuation-abstraction$7374$kwCBQ
                   (list g$variable$7514$kwCBQ)
                   (g$generator$7513$kwCBQ
                     (g$make-reference$7371$kwCBQ g$variable$7514$kwCBQ)))))
              (g$generate-variable$7385$kwCBQ 'V))))))))
   (g$operand-continuation-reifier$7365$kwCBQ
     g$operand-continuation-reifier$7642$kwCBQ
     (g$operand-continuation-reifier*$7364$kwCBQ values))
   (g$effect-continuation-reifier*$7366$kwCBQ
     g$effect-continuation-reifier*$7643$kwCBQ
     (case-lambda
       ((g$receiver$7515$kwCBQ)
        (case-lambda
          ((g$generator$7516$kwCBQ)
           (g$receiver$7515$kwCBQ
             ((case-lambda
                ((g$variable$7517$kwCBQ)
                 (g$make-continuation-abstraction$7374$kwCBQ
                   g$variable$7517$kwCBQ
                   (g$generator$7516$kwCBQ))))
              (g$generate-variable$7385$kwCBQ 'IGNORE))))))))
   (g$effect-continuation-reifier$7367$kwCBQ
     g$effect-continuation-reifier$7644$kwCBQ
     (g$effect-continuation-reifier*$7366$kwCBQ values))
   (g$conditional-continuation-reifier*$7368$kwCBQ
     g$conditional-continuation-reifier*$7645$kwCBQ
     (case-lambda
       ((g$receiver$7518$kwCBQ)
        (case-lambda
          ((g$generator$7519$kwCBQ)
           (g$receiver$7518$kwCBQ
             ((case-lambda
                ((g$variable$7520$kwCBQ)
                 (g$make-continuation-abstraction$7374$kwCBQ
                   (list g$variable$7520$kwCBQ)
                   (g$generator$7519$kwCBQ
                     (g$make-truth-test$7384$kwCBQ
                       (g$make-reference$7371$kwCBQ g$variable$7520$kwCBQ))))))
              (g$generate-variable$7385$kwCBQ 'T))))))))
   (g$conditional-continuation-reifier$7369$kwCBQ
     g$conditional-continuation-reifier$7646$kwCBQ
     (g$conditional-continuation-reifier*$7368$kwCBQ values))
   (g$make-literal$7370$kwCBQ
     g$make-literal$7647$kwCBQ
     (case-lambda ((g$datum$7521$kwCBQ) (list 'quote g$datum$7521$kwCBQ))))
   (g$make-reference$7371$kwCBQ
     g$make-reference$7648$kwCBQ
     (case-lambda ((g$variable$7522$kwCBQ) g$variable$7522$kwCBQ)))
   (g$make-user-abstraction$7372$kwCBQ
     g$make-user-abstraction$7649$kwCBQ
     (case-lambda
       ((g$bvl$7523$kwCBQ g$body-constructor$7524$kwCBQ)
        ((case-lambda
           ((g$continuation$7525$kwCBQ)
            (list
              'case-lambda
              (list
                (cons g$continuation$7525$kwCBQ g$bvl$7523$kwCBQ)
                (g$body-constructor$7524$kwCBQ g$continuation$7525$kwCBQ)))))
         (g$generate-variable$7385$kwCBQ 'C)))))
   (g$make-user-abstractions$7373$kwCBQ
     g$make-user-abstractions$7650$kwCBQ
     (case-lambda
       ((g$bvls$7526$kwCBQ g$body-constructors$7527$kwCBQ)
        ((case-lambda
           ((g$continuation$7528$kwCBQ)
            (cons
              'case-lambda
              (g$map$5812$kwCBQ
                (case-lambda
                  ((g$bvl$7529$kwCBQ g$body-constructor$7530$kwCBQ)
                   (list
                     (cons g$continuation$7528$kwCBQ g$bvl$7529$kwCBQ)
                     (g$body-constructor$7530$kwCBQ
                       g$continuation$7528$kwCBQ))))
                g$bvls$7526$kwCBQ
                g$body-constructors$7527$kwCBQ))))
         (g$generate-variable$7385$kwCBQ 'C)))))
   (g$make-continuation-abstraction$7374$kwCBQ
     g$make-continuation-abstraction$7651$kwCBQ
     (case-lambda
       ((g$bvl$7531$kwCBQ g$body$7532$kwCBQ)
        (list 'case-lambda (list g$bvl$7531$kwCBQ g$body$7532$kwCBQ)))))
   (g$make-recursive-bind$7375$kwCBQ
     g$make-recursive-bind$7652$kwCBQ
     (case-lambda
       ((g$variables$7533$kwCBQ g$constructors$7534$kwCBQ g$body$7535$kwCBQ)
        (list
          'letrec
          (g$map$5812$kwCBQ
            (case-lambda
              ((g$variable$7536$kwCBQ g$constructor$7537$kwCBQ)
               (list
                 g$variable$7536$kwCBQ
                 (list
                   (g$make-user-abstraction$7372$kwCBQ
                     '()
                     g$constructor$7537$kwCBQ)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$7536$kwCBQ))))))
            g$variables$7533$kwCBQ
            g$constructors$7534$kwCBQ)
          g$body$7535$kwCBQ))))
   (g$make-recursive*-bind$7376$kwCBQ
     g$make-recursive*-bind$7653$kwCBQ
     (case-lambda
       ((g$variables$7538$kwCBQ g$constructors$7539$kwCBQ g$body$7540$kwCBQ)
        (list
          'letrec*
          (g$map$5812$kwCBQ
            (case-lambda
              ((g$variable$7541$kwCBQ g$constructor$7542$kwCBQ)
               (list
                 g$variable$7541$kwCBQ
                 (list
                   (g$make-user-abstraction$7372$kwCBQ
                     '()
                     g$constructor$7542$kwCBQ)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$7541$kwCBQ))))))
            g$variables$7538$kwCBQ
            g$constructors$7539$kwCBQ)
          g$body$7540$kwCBQ))))
   (g$make-recursive*-library-bind$7377$kwCBQ
     g$make-recursive*-library-bind$7654$kwCBQ
     (case-lambda
       ((g$name$7543$kwCBQ
          g$variables$7544$kwCBQ
          g$variables*$7545$kwCBQ
          g$constructors$7546$kwCBQ
          g$body$7547$kwCBQ)
        (list
          'library-letrec*
          g$name$7543$kwCBQ
          (g$map$5812$kwCBQ
            (case-lambda
              ((g$variable$7548$kwCBQ
                 g$variable*$7549$kwCBQ
                 g$constructor$7550$kwCBQ)
               (list
                 g$variable$7548$kwCBQ
                 g$variable*$7549$kwCBQ
                 (list
                   (g$make-user-abstraction$7372$kwCBQ
                     '()
                     g$constructor$7550$kwCBQ)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$7548$kwCBQ))))))
            g$variables$7544$kwCBQ
            g$variables*$7545$kwCBQ
            g$constructors$7546$kwCBQ)
          g$body$7547$kwCBQ))))
   (g$make-combination$7378$kwCBQ
     g$make-combination$7655$kwCBQ
     (case-lambda
       ((g$operator$7551$kwCBQ g$continuation$7552$kwCBQ g$operands$7553$kwCBQ)
        (cons
          g$operator$7551$kwCBQ
          (cons g$continuation$7552$kwCBQ g$operands$7553$kwCBQ)))))
   (g$make-return$7379$kwCBQ
     g$make-return$7656$kwCBQ
     (case-lambda
       ((g$continuation$7554$kwCBQ g$operands$7555$kwCBQ)
        (cons g$continuation$7554$kwCBQ g$operands$7555$kwCBQ))))
   (g$make-conditional$7380$kwCBQ
     g$make-conditional$7657$kwCBQ
     (case-lambda
       ((g$condition$7556$kwCBQ
          g$consequent$7557$kwCBQ
          g$alternative$7558$kwCBQ)
        (list
          'if
          g$condition$7556$kwCBQ
          g$consequent$7557$kwCBQ
          g$alternative$7558$kwCBQ))))
   (g$make-conditional-join$7381$kwCBQ
     g$make-conditional-join$7658$kwCBQ
     (case-lambda
       ((g$continuation$7559$kwCBQ g$constructor$7560$kwCBQ)
        ((case-lambda
           ((g$variable$7561$kwCBQ)
            (g$make-let$7382$kwCBQ
              (list g$variable$7561$kwCBQ)
              (list g$continuation$7559$kwCBQ)
              (g$constructor$7560$kwCBQ g$variable$7561$kwCBQ))))
         (g$generate-variable$7385$kwCBQ 'J)))))
   (g$make-let$7382$kwCBQ
     g$make-let$7659$kwCBQ
     (case-lambda
       ((g$variables$7562$kwCBQ g$expressions$7563$kwCBQ g$body$7564$kwCBQ)
        (cons
          (list 'case-lambda (list g$variables$7562$kwCBQ g$body$7564$kwCBQ))
          g$expressions$7563$kwCBQ))))
   (g$make-assignment$7383$kwCBQ
     g$make-assignment$7660$kwCBQ
     (case-lambda
       ((g$location$7565$kwCBQ g$operand$7566$kwCBQ g$expression$7567$kwCBQ)
        (list
          'begin
          (list 'set! g$location$7565$kwCBQ g$operand$7566$kwCBQ)
          g$expression$7567$kwCBQ))))
   (g$make-truth-test$7384$kwCBQ
     g$make-truth-test$7661$kwCBQ
     (case-lambda ((g$operand$7568$kwCBQ) g$operand$7568$kwCBQ)))
   (g$generate-variable$7385$kwCBQ
     g$generate-variable$7662$kwCBQ
     (case-lambda ((g$name$7569$kwCBQ) (gensym g$name$7569$kwCBQ))))
   (g$parse$7386$kwCBQ
     g$parse$7663$kwCBQ
     (case-lambda
       ((g$x$7570$kwCBQ)
        (if (pair? g$x$7570$kwCBQ)
          ((case-lambda
             ((g$t$7571$kwCBQ)
              (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(quote))
                (g$cps/generate-literal$7342$kwCBQ
                  (g$cadr$6038$kwCBQ g$x$7570$kwCBQ))
                (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(if))
                  (g$cps/generate-conditional$7346$kwCBQ
                    (g$parse$7386$kwCBQ (g$cadr$6038$kwCBQ g$x$7570$kwCBQ))
                    (g$parse$7386$kwCBQ (g$caddr$6044$kwCBQ g$x$7570$kwCBQ))
                    (g$parse$7386$kwCBQ (g$cadddr$6056$kwCBQ g$x$7570$kwCBQ)))
                  (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(case-lambda))
                    ((case-lambda
                       ((g$d$7572$kwCBQ)
                        (g$cps/generate-abstractions$7344$kwCBQ
                          (g$map$5812$kwCBQ car g$d$7572$kwCBQ)
                          (g$map$5812$kwCBQ
                            (case-lambda
                              ((g$e$7573$kwCBQ)
                               (g$cps/generate-sequence$7350$kwCBQ
                                 (g$map$5812$kwCBQ
                                   g$parse$7386$kwCBQ
                                   (cdr g$e$7573$kwCBQ)))))
                            g$d$7572$kwCBQ))))
                     (cdr g$x$7570$kwCBQ))
                    (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(letrec))
                      ((case-lambda
                         ((g$bindings$7574$kwCBQ g$body*$7575$kwCBQ)
                          ((case-lambda
                             ((g$lhs*$7576$kwCBQ g$rhs*$7577$kwCBQ)
                              (g$cps/generate-recursive-bind$7347$kwCBQ
                                g$lhs*$7576$kwCBQ
                                (g$map$5812$kwCBQ
                                  g$parse$7386$kwCBQ
                                  g$rhs*$7577$kwCBQ)
                                (g$parse$7386$kwCBQ
                                  (cons 'begin g$body*$7575$kwCBQ)))))
                           (g$map$5812$kwCBQ car g$bindings$7574$kwCBQ)
                           (g$map$5812$kwCBQ
                             g$cadr$6038$kwCBQ
                             g$bindings$7574$kwCBQ))))
                       (g$cadr$6038$kwCBQ g$x$7570$kwCBQ)
                       (g$cddr$6040$kwCBQ g$x$7570$kwCBQ))
                      (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(letrec*))
                        ((case-lambda
                           ((g$bindings$7578$kwCBQ g$body*$7579$kwCBQ)
                            ((case-lambda
                               ((g$lhs*$7580$kwCBQ g$rhs*$7581$kwCBQ)
                                (g$cps/generate-recursive*-bind$7348$kwCBQ
                                  g$lhs*$7580$kwCBQ
                                  (g$map$5812$kwCBQ
                                    g$parse$7386$kwCBQ
                                    g$rhs*$7581$kwCBQ)
                                  (g$parse$7386$kwCBQ
                                    (cons 'begin g$body*$7579$kwCBQ)))))
                             (g$map$5812$kwCBQ car g$bindings$7578$kwCBQ)
                             (g$map$5812$kwCBQ
                               g$cadr$6038$kwCBQ
                               g$bindings$7578$kwCBQ))))
                         (g$cadr$6038$kwCBQ g$x$7570$kwCBQ)
                         (g$cddr$6040$kwCBQ g$x$7570$kwCBQ))
                        (if (g$memv$5805$kwCBQ
                              g$t$7571$kwCBQ
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$7582$kwCBQ g$x$7583$kwCBQ)
                              ((case-lambda
                                 ((g$bindings$7584$kwCBQ g$body*$7585$kwCBQ)
                                  ((case-lambda
                                     ((g$lhs*$7586$kwCBQ
                                        g$lhs**$7587$kwCBQ
                                        g$rhs*$7588$kwCBQ)
                                      (g$cps/generate-recursive*-library-bind$7349$kwCBQ
                                        g$name$7582$kwCBQ
                                        g$lhs*$7586$kwCBQ
                                        g$lhs**$7587$kwCBQ
                                        (g$map$5812$kwCBQ
                                          g$parse$7386$kwCBQ
                                          g$rhs*$7588$kwCBQ)
                                        (g$parse$7386$kwCBQ
                                          (cons 'begin g$body*$7585$kwCBQ)))))
                                   (g$map$5812$kwCBQ car g$bindings$7584$kwCBQ)
                                   (g$map$5812$kwCBQ
                                     g$cadr$6038$kwCBQ
                                     g$bindings$7584$kwCBQ)
                                   (g$map$5812$kwCBQ
                                     g$caddr$6044$kwCBQ
                                     g$bindings$7584$kwCBQ))))
                               (g$cadr$6038$kwCBQ g$x$7583$kwCBQ)
                               (g$cddr$6040$kwCBQ g$x$7583$kwCBQ))))
                           (g$cadr$6038$kwCBQ g$x$7570$kwCBQ)
                           (cdr g$x$7570$kwCBQ))
                          (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(begin))
                            (g$cps/generate-sequence$7350$kwCBQ
                              (g$map$5812$kwCBQ
                                g$parse$7386$kwCBQ
                                (cdr g$x$7570$kwCBQ)))
                            (if (g$memv$5805$kwCBQ g$t$7571$kwCBQ '(set!))
                              (g$cps/generate-assignment$7351$kwCBQ
                                (g$cadr$6038$kwCBQ g$x$7570$kwCBQ)
                                (g$parse$7386$kwCBQ
                                  (g$caddr$6044$kwCBQ g$x$7570$kwCBQ)))
                              (if (list? g$x$7570$kwCBQ)
                                (g$cps/generate-combination$7353$kwCBQ
                                  (g$parse$7386$kwCBQ (car g$x$7570$kwCBQ))
                                  (g$map$5812$kwCBQ
                                    g$parse$7386$kwCBQ
                                    (cdr g$x$7570$kwCBQ)))
                                (error
                                  'rewrite
                                  '"invalid form ~s ~s"
                                  g$x$7570$kwCBQ
                                  (list? g$x$7570$kwCBQ)))))))))))))
           (car g$x$7570$kwCBQ))
          (if (symbol? g$x$7570$kwCBQ)
            (g$cps/generate-reference$7341$kwCBQ g$x$7570$kwCBQ)
            (g$cps/generate-literal$7342$kwCBQ g$x$7570$kwCBQ))))))
   (g$starts-with?$7387$kwCBQ
     g$starts-with?$7664$kwCBQ
     (case-lambda
       ((g$str$7589$kwCBQ g$sub$7590$kwCBQ)
        (clr-call-internal
          'system.string
          'startswith
          g$str$7589$kwCBQ
          g$sub$7590$kwCBQ))))
   (g$special$7388$kwCBQ
     g$special$7665$kwCBQ
     '(identity-for-cps
        letrec-identity
        library-letrec*-identity
        letrec*-identity
        cps-prim
        eval-core
        dynamic-wind
        values
        apply
        call-with-values
        call/cc
        call-with-current-continuation))
   (g$primitive?$7389$kwCBQ
     g$primitive?$7666$kwCBQ
     (case-lambda
       ((g$o$7591$kwCBQ)
        (if (if (symbol? g$o$7591$kwCBQ)
              (begin
                '#f
                (not (g$memq$5804$kwCBQ g$o$7591$kwCBQ g$special$7388$kwCBQ)))
              '#f)
          ((case-lambda
             ((g$b$7592$kwCBQ)
              ((case-lambda
                 ((g$t$7593$kwCBQ)
                  (if g$t$7593$kwCBQ
                    g$t$7593$kwCBQ
                    (begin '#f (g$clr-generator?$7390$kwCBQ g$o$7591$kwCBQ)))))
               (clr-is-internal
                 'ironscheme.runtime.builtinmethod
                 g$b$7592$kwCBQ))))
           (if (symbol-bound? g$o$7591$kwCBQ)
             (begin '#f (symbol-value g$o$7591$kwCBQ))
             '#f))
          '#f))))
   (g$clr-generator?$7390$kwCBQ
     g$clr-generator?$7667$kwCBQ
     (case-lambda
       ((g$o$7594$kwCBQ)
        (if (symbol? g$o$7594$kwCBQ)
          (begin
            '#f
            (g$starts-with?$7387$kwCBQ (symbol->string g$o$7594$kwCBQ) '"clr-"))
          '#f))))
   (g$fix-primitives$7391$kwCBQ
     g$fix-primitives$7668$kwCBQ
     (case-lambda
       ((g$e$7595$kwCBQ)
        (if (if (pair? g$e$7595$kwCBQ) (begin '#f (list? g$e$7595$kwCBQ)) '#f)
          ((case-lambda
             ((g$o$7596$kwCBQ)
              (if (eq? g$o$7596$kwCBQ 'quote)
                g$e$7595$kwCBQ
                (if (eq? g$o$7596$kwCBQ 'library-letrec*)
                  ((case-lambda
                     ((g$name$7597$kwCBQ g$e$7598$kwCBQ)
                      ((case-lambda
                         ((g$bindings$7599$kwCBQ g$body*$7600$kwCBQ)
                          ((case-lambda
                             ((g$lhs*$7601$kwCBQ
                                g$lhs**$7602$kwCBQ
                                g$rhs*$7603$kwCBQ)
                              (cons
                                'library-letrec*
                                (cons
                                  g$name$7597$kwCBQ
                                  (cons
                                    (g$map$5812$kwCBQ
                                      list
                                      g$lhs*$7601$kwCBQ
                                      g$lhs**$7602$kwCBQ
                                      (g$map$5812$kwCBQ
                                        g$fix-primitives$7391$kwCBQ
                                        g$rhs*$7603$kwCBQ))
                                    (g$map$5812$kwCBQ
                                      g$fix-primitives$7391$kwCBQ
                                      g$body*$7600$kwCBQ))))))
                           (g$map$5812$kwCBQ car g$bindings$7599$kwCBQ)
                           (g$map$5812$kwCBQ
                             g$cadr$6038$kwCBQ
                             g$bindings$7599$kwCBQ)
                           (g$map$5812$kwCBQ
                             g$caddr$6044$kwCBQ
                             g$bindings$7599$kwCBQ))))
                       (g$cadr$6038$kwCBQ g$e$7598$kwCBQ)
                       (g$cddr$6040$kwCBQ g$e$7598$kwCBQ))))
                   (g$cadr$6038$kwCBQ g$e$7595$kwCBQ)
                   (cdr g$e$7595$kwCBQ))
                  (if (begin '#f (g$clr-generator?$7390$kwCBQ g$o$7596$kwCBQ))
                    (if (pair? (cdr g$e$7595$kwCBQ))
                      (list
                        (g$fix-primitives$7391$kwCBQ
                          (g$cadr$6038$kwCBQ g$e$7595$kwCBQ))
                        (cons
                          g$o$7596$kwCBQ
                          (g$map$5812$kwCBQ
                            g$fix-primitives$7391$kwCBQ
                            (g$cddr$6040$kwCBQ g$e$7595$kwCBQ))))
                      g$e$7595$kwCBQ)
                    (if (if (eq? g$o$7596$kwCBQ 'void)
                          (begin '#f (null? (cdr g$e$7595$kwCBQ)))
                          '#f)
                      g$e$7595$kwCBQ
                      (cons
                        (g$fix-primitives$7391$kwCBQ g$o$7596$kwCBQ)
                        (g$map$5812$kwCBQ
                          g$fix-primitives$7391$kwCBQ
                          (cdr g$e$7595$kwCBQ)))))))))
           (car g$e$7595$kwCBQ))
          (if (g$primitive?$7389$kwCBQ g$e$7595$kwCBQ)
            (list 'cps-prim g$e$7595$kwCBQ)
            g$e$7595$kwCBQ)))))
   (g$parse->cps$7392$kwCBQ
     g$parse->cps$7669$kwCBQ
     (case-lambda
       ((g$e$7604$kwCBQ g$var$7605$kwCBQ)
        ((g$parse$7386$kwCBQ g$e$7604$kwCBQ)
         (g$variable-continuator$7358$kwCBQ g$var$7605$kwCBQ)))))
   (g$convert->cps$7393$kwCBQ
     g$convert->cps$7670$kwCBQ
     (case-lambda
       ((g$e$7606$kwCBQ g$var$7607$kwCBQ)
        (g$fix-primitives$7391$kwCBQ
          (g$parse->cps$7392$kwCBQ g$e$7606$kwCBQ g$var$7607$kwCBQ)))))
   (g$bootfile$7394$kwCBQ g$bootfile$7671$kwCBQ '"ironscheme.boot.pp")
   (g$bootfile-cps$7395$kwCBQ
     g$bootfile-cps$7672$kwCBQ
     '"ironscheme.boot.cps")
   (g$expand-boot-cps$7396$kwCBQ
     g$expand-boot-cps$7673$kwCBQ
     (case-lambda
       (() (g$expand-boot-cps$7396$kwCBQ write))
       ((g$write$7608$kwCBQ)
        (letrec* ((g$read-file$7609$kwCBQ
                    (case-lambda
                      ((g$port$7613$kwCBQ)
                       ((letrec ((g$f$7614$kwCBQ
                                   (case-lambda
                                     ((g$e$7615$kwCBQ g$a$7616$kwCBQ)
                                      (if (eof-object? g$e$7615$kwCBQ)
                                        (reverse g$a$7616$kwCBQ)
                                        ((case-lambda
                                           ((g$r$7617$kwCBQ)
                                            (g$f$7614$kwCBQ
                                              (read g$port$7613$kwCBQ)
                                              (cons
                                                g$r$7617$kwCBQ
                                                g$a$7616$kwCBQ))))
                                         (g$convert->cps$7393$kwCBQ
                                           g$e$7615$kwCBQ
                                           'identity-for-cps)))))))
                          g$f$7614$kwCBQ)
                        (read g$port$7613$kwCBQ)
                        '())))))
          (begin
            (if (g$file-exists?$6333$kwCBQ g$bootfile-cps$7395$kwCBQ)
              (g$delete-file$6334$kwCBQ g$bootfile-cps$7395$kwCBQ)
              (void))
            (g$call-with-input-file$7164$kwCBQ
              g$bootfile$7394$kwCBQ
              (case-lambda
                ((g$in$7610$kwCBQ)
                 (g$call-with-output-file$7165$kwCBQ
                   g$bootfile-cps$7395$kwCBQ
                   (case-lambda
                     ((g$out$7611$kwCBQ)
                      (g$for-each$5813$kwCBQ
                        (case-lambda
                          ((g$e$7612$kwCBQ)
                           (g$write$7608$kwCBQ
                             g$e$7612$kwCBQ
                             g$out$7611$kwCBQ)))
                        (g$read-file$7609$kwCBQ g$in$7610$kwCBQ))))))))))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7674$kwCBQ
     g$library-version-mismatch-warning$7775$kwCBQ
     (case-lambda
       ((g$name$7749$kwCBQ g$depname$7750$kwCBQ g$filename$7751$kwCBQ)
        (g$fprintf$7335$kwCBQ
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7749$kwCBQ
          g$depname$7750$kwCBQ
          g$filename$7751$kwCBQ))))
   (g$file-locator-resolution-error$7675$kwCBQ
     g$file-locator-resolution-error$7776$kwCBQ
     (case-lambda
       ((g$libname$7752$kwCBQ g$failed-list$7753$kwCBQ)
        (letrec* ((g$8745$7754$kwCBQ
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8748$kwCBQ
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8747$7755$kwCBQ '#f)
                  (g$8746$7756$kwCBQ
                    (make-record-constructor-descriptor
                      g$8745$7754$kwCBQ
                      &condition-rcd
                      g$8747$7755$kwCBQ))
                  (g$8744$7757$kwCBQ (record-predicate g$8745$7754$kwCBQ))
                  (g$make-library-resolution-condition$7758$kwCBQ
                    (record-constructor g$8746$7756$kwCBQ))
                  (g$8742$7759$kwCBQ (record-accessor g$8745$7754$kwCBQ '0))
                  (g$8743$7760$kwCBQ (record-accessor g$8745$7754$kwCBQ '1))
                  (g$library-resolution-condition?$7761$kwCBQ
                    (condition-predicate g$8745$7754$kwCBQ))
                  (g$condition-library$7762$kwCBQ
                    (condition-accessor g$8745$7754$kwCBQ g$8742$7759$kwCBQ))
                  (g$condition-files$7763$kwCBQ
                    (condition-accessor g$8745$7754$kwCBQ g$8743$7760$kwCBQ)))
          (raise
            (condition
              (g$make-error$6602$kwCBQ)
              (g$make-who-condition$6628$kwCBQ 'expander)
              (g$make-message-condition$6582$kwCBQ
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7758$kwCBQ
                g$libname$7752$kwCBQ
                g$failed-list$7753$kwCBQ)))))))
   (g$read-library-source-file$7676$kwCBQ
     g$read-library-source-file$7777$kwCBQ
     (case-lambda
       ((g$file-name$7764$kwCBQ)
        (g$with-input-from-file$7162$kwCBQ
          g$file-name$7764$kwCBQ
          read-annotated))))
   (g$make-parameter$7677$kwCBQ
     g$make-parameter$7778$kwCBQ
     (case-lambda
       ((g$x$7765$kwCBQ)
        (g$make-parameter$7677$kwCBQ
          g$x$7765$kwCBQ
          (case-lambda ((g$x$7766$kwCBQ) g$x$7766$kwCBQ))))
       ((g$x$7767$kwCBQ g$fender$7768$kwCBQ)
        (begin
          (if (not (procedure? g$fender$7768$kwCBQ))
            (g$assertion-error$12421$kwCBQ
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$7769$kwCBQ)
              (case-lambda
                (() g$x$7769$kwCBQ)
                ((g$v$7770$kwCBQ)
                 (set! g$x$7769$kwCBQ (g$fender$7768$kwCBQ g$v$7770$kwCBQ))))))
           (g$fender$7768$kwCBQ g$x$7767$kwCBQ))))))
   (g$file-options-constructor$7745$kwCBQ
     g$file-options-constructor$7779$kwCBQ
     (g$make-parameter$7677$kwCBQ '#f))
   (g$file-options-spec$7746$kwCBQ
     g$file-options-spec$7780$kwCBQ
     (case-lambda
       ((g$x$7771$kwCBQ)
        ((g$file-options-constructor$7745$kwCBQ) g$x$7771$kwCBQ))))
   (g$set-label-binding!$7747$kwCBQ
     g$set-label-binding!$7781$kwCBQ
     (case-lambda
       ((g$label$7772$kwCBQ g$binding$7773$kwCBQ)
        (set-symbol-value! g$label$7772$kwCBQ g$binding$7773$kwCBQ))))
   (g$label-binding$7748$kwCBQ
     g$label-binding$7782$kwCBQ
     (case-lambda
       ((g$label$7774$kwCBQ)
        (if (symbol-bound? g$label$7774$kwCBQ)
          (begin '#f (symbol-value g$label$7774$kwCBQ))
          '#f)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7978$kwCBQ
     g$current-primitive-locations$8023$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda ((g$x$7984$kwCBQ) '#f))
       (case-lambda
         ((g$p$7985$kwCBQ)
          (begin
            (if (not (procedure? g$p$7985$kwCBQ))
              (g$assertion-error$12421$kwCBQ
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7985$kwCBQ)))))
   (g$mutable?$7979$kwCBQ
     g$mutable?$8024$kwCBQ
     (case-lambda
       ((g$x$7986$kwCBQ)
        (letrec* ((g$simple?$7987$kwCBQ
                    (case-lambda
                      ((g$x$7988$kwCBQ)
                       ((case-lambda
                          ((g$t$7989$kwCBQ)
                           (if g$t$7989$kwCBQ
                             g$t$7989$kwCBQ
                             ((case-lambda
                                ((g$t$7990$kwCBQ)
                                 (if g$t$7990$kwCBQ
                                   g$t$7990$kwCBQ
                                   ((case-lambda
                                      ((g$t$7991$kwCBQ)
                                       (if g$t$7991$kwCBQ
                                         g$t$7991$kwCBQ
                                         ((case-lambda
                                            ((g$t$7992$kwCBQ)
                                             (if g$t$7992$kwCBQ
                                               g$t$7992$kwCBQ
                                               ((case-lambda
                                                  ((g$t$7993$kwCBQ)
                                                   (if g$t$7993$kwCBQ
                                                     g$t$7993$kwCBQ
                                                     ((case-lambda
                                                        ((g$t$7994$kwCBQ)
                                                         (if g$t$7994$kwCBQ
                                                           g$t$7994$kwCBQ
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7988$kwCBQ)))))
                                                      (bytevector?
                                                        g$x$7988$kwCBQ)))))
                                                (string? g$x$7988$kwCBQ)))))
                                          (boolean? g$x$7988$kwCBQ)))))
                                    (symbol? g$x$7988$kwCBQ)))))
                              (char? g$x$7988$kwCBQ)))))
                        (null? g$x$7988$kwCBQ))))))
          (not (g$simple?$7987$kwCBQ g$x$7986$kwCBQ))))))
   (g$rewriter$7980$kwCBQ
     g$rewriter$8025$kwCBQ
     (case-lambda
       ((g$quote-hack?$7995$kwCBQ)
        (letrec* ((g$f$7996$kwCBQ
                    (case-lambda
                      ((g$x$7997$kwCBQ)
                       (if (pair? g$x$7997$kwCBQ)
                         ((case-lambda
                            ((g$t$7998$kwCBQ)
                             (if (g$memv$5805$kwCBQ g$t$7998$kwCBQ '(quote))
                               (if (if g$quote-hack?$7995$kwCBQ
                                     (begin
                                       '#f
                                       (g$mutable?$7979$kwCBQ
                                         (g$cadr$6038$kwCBQ g$x$7997$kwCBQ)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7999$kwCBQ)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7999$kwCBQ
                                         (g$cadr$6038$kwCBQ g$x$7997$kwCBQ))
                                       g$g$7999$kwCBQ)))
                                  (gensym))
                                 g$x$7997$kwCBQ)
                               (if (g$memv$5805$kwCBQ
                                     g$t$7998$kwCBQ
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5812$kwCBQ
                                     (case-lambda
                                       ((g$x$8000$kwCBQ)
                                        (cons
                                          (car g$x$8000$kwCBQ)
                                          (g$map$5812$kwCBQ
                                            g$f$7996$kwCBQ
                                            (cdr g$x$8000$kwCBQ)))))
                                     (cdr g$x$7997$kwCBQ)))
                                 (if (g$memv$5805$kwCBQ
                                       g$t$7998$kwCBQ
                                       '(lambda))
                                   (g$cons*$5814$kwCBQ
                                     'lambda
                                     (g$cadr$6038$kwCBQ g$x$7997$kwCBQ)
                                     (g$map$5812$kwCBQ
                                       g$f$7996$kwCBQ
                                       (g$cddr$6040$kwCBQ g$x$7997$kwCBQ)))
                                   (if (g$memv$5805$kwCBQ
                                         g$t$7998$kwCBQ
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$8001$kwCBQ
                                           g$body*$8002$kwCBQ)
                                         ((case-lambda
                                            ((g$lhs*$8003$kwCBQ
                                               g$rhs*$8004$kwCBQ)
                                             (g$cons*$5814$kwCBQ
                                               'letrec
                                               (g$map$5812$kwCBQ
                                                 list
                                                 g$lhs*$8003$kwCBQ
                                                 (g$map$5812$kwCBQ
                                                   g$f$7996$kwCBQ
                                                   g$rhs*$8004$kwCBQ))
                                               (g$map$5812$kwCBQ
                                                 g$f$7996$kwCBQ
                                                 g$body*$8002$kwCBQ))))
                                          (g$map$5812$kwCBQ
                                            car
                                            g$bindings$8001$kwCBQ)
                                          (g$map$5812$kwCBQ
                                            g$cadr$6038$kwCBQ
                                            g$bindings$8001$kwCBQ))))
                                      (g$cadr$6038$kwCBQ g$x$7997$kwCBQ)
                                      (g$cddr$6040$kwCBQ g$x$7997$kwCBQ))
                                     (if (g$memv$5805$kwCBQ
                                           g$t$7998$kwCBQ
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$8005$kwCBQ
                                             g$body*$8006$kwCBQ)
                                           ((case-lambda
                                              ((g$lhs*$8007$kwCBQ
                                                 g$rhs*$8008$kwCBQ)
                                               (g$cons*$5814$kwCBQ
                                                 'letrec*
                                                 (g$map$5812$kwCBQ
                                                   list
                                                   g$lhs*$8007$kwCBQ
                                                   (g$map$5812$kwCBQ
                                                     g$f$7996$kwCBQ
                                                     g$rhs*$8008$kwCBQ))
                                                 (g$map$5812$kwCBQ
                                                   g$f$7996$kwCBQ
                                                   g$body*$8006$kwCBQ))))
                                            (g$map$5812$kwCBQ
                                              car
                                              g$bindings$8005$kwCBQ)
                                            (g$map$5812$kwCBQ
                                              g$cadr$6038$kwCBQ
                                              g$bindings$8005$kwCBQ))))
                                        (g$cadr$6038$kwCBQ g$x$7997$kwCBQ)
                                        (g$cddr$6040$kwCBQ g$x$7997$kwCBQ))
                                       (if (g$memv$5805$kwCBQ
                                             g$t$7998$kwCBQ
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$8009$kwCBQ g$x$8010$kwCBQ)
                                             ((case-lambda
                                                ((g$bindings$8011$kwCBQ
                                                   g$body*$8012$kwCBQ)
                                                 ((case-lambda
                                                    ((g$lhs*$8013$kwCBQ
                                                       g$lhs**$8014$kwCBQ
                                                       g$rhs*$8015$kwCBQ)
                                                     (g$cons*$5814$kwCBQ
                                                       'library-letrec*
                                                       g$name$8009$kwCBQ
                                                       (g$map$5812$kwCBQ
                                                         list
                                                         g$lhs*$8013$kwCBQ
                                                         g$lhs**$8014$kwCBQ
                                                         (g$map$5812$kwCBQ
                                                           g$f$7996$kwCBQ
                                                           g$rhs*$8015$kwCBQ))
                                                       (g$map$5812$kwCBQ
                                                         g$f$7996$kwCBQ
                                                         g$body*$8012$kwCBQ))))
                                                  (g$map$5812$kwCBQ
                                                    car
                                                    g$bindings$8011$kwCBQ)
                                                  (g$map$5812$kwCBQ
                                                    g$cadr$6038$kwCBQ
                                                    g$bindings$8011$kwCBQ)
                                                  (g$map$5812$kwCBQ
                                                    g$caddr$6044$kwCBQ
                                                    g$bindings$8011$kwCBQ))))
                                              (g$cadr$6038$kwCBQ g$x$8010$kwCBQ)
                                              (g$cddr$6040$kwCBQ
                                                g$x$8010$kwCBQ))))
                                          (g$cadr$6038$kwCBQ g$x$7997$kwCBQ)
                                          (cdr g$x$7997$kwCBQ))
                                         (if (g$memv$5805$kwCBQ
                                               g$t$7998$kwCBQ
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5812$kwCBQ
                                               g$f$7996$kwCBQ
                                               (cdr g$x$7997$kwCBQ)))
                                           (if (g$memv$5805$kwCBQ
                                                 g$t$7998$kwCBQ
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$6038$kwCBQ
                                                 g$x$7997$kwCBQ)
                                               (g$f$7996$kwCBQ
                                                 (g$caddr$6044$kwCBQ
                                                   g$x$7997$kwCBQ)))
                                             (if (g$memv$5805$kwCBQ
                                                   g$t$7998$kwCBQ
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$8016$kwCBQ)
                                                   ((case-lambda
                                                      ((g$t$8017$kwCBQ)
                                                       (if g$t$8017$kwCBQ
                                                         ((case-lambda
                                                            ((g$loc$8018$kwCBQ)
                                                             g$loc$8018$kwCBQ))
                                                          g$t$8017$kwCBQ)
                                                         g$op$8016$kwCBQ)))
                                                    ((g$current-primitive-locations$7978$kwCBQ)
                                                     g$op$8016$kwCBQ))))
                                                (g$cadr$6038$kwCBQ
                                                  g$x$7997$kwCBQ))
                                               (if (g$memv$5805$kwCBQ
                                                     g$t$7998$kwCBQ
                                                     '(define))
                                                 g$x$7997$kwCBQ
                                                 (if (list? g$x$7997$kwCBQ)
                                                   (g$map$5812$kwCBQ
                                                     g$f$7996$kwCBQ
                                                     g$x$7997$kwCBQ)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7997$kwCBQ
                                                     (list?
                                                       g$x$7997$kwCBQ)))))))))))))))
                          (car g$x$7997$kwCBQ))
                         g$x$7997$kwCBQ)))))
          g$f$7996$kwCBQ))))
   (g$expanded->core$7981$kwCBQ
     g$expanded->core$8026$kwCBQ
     (case-lambda
       ((g$x$8019$kwCBQ) ((g$rewriter$7980$kwCBQ '#t) g$x$8019$kwCBQ))))
   (g$compile-core-expr$7982$kwCBQ
     g$compile-core-expr$8027$kwCBQ
     (case-lambda
       ((g$x$8020$kwCBQ) ((g$rewriter$7980$kwCBQ '#f) g$x$8020$kwCBQ))))
   (g$compile-core-expr-to-port$7983$kwCBQ
     g$compile-core-expr-to-port$8028$kwCBQ
     (case-lambda
       ((g$x$8021$kwCBQ g$p$8022$kwCBQ)
        (g$pretty-print$7977$kwCBQ
          ((g$rewriter$7980$kwCBQ '#f) g$x$8021$kwCBQ)
          g$p$8022$kwCBQ)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$8067$kwCBQ
     g$make-collection$8270$kwCBQ
     (case-lambda
       (()
        ((case-lambda
           ((g$set$8128$kwCBQ)
            (letrec* ((g$set-cons$8129$kwCBQ
                        (case-lambda
                          ((g$x$8133$kwCBQ g$ls$8134$kwCBQ)
                           (if (g$memq$5804$kwCBQ
                                 g$x$8133$kwCBQ
                                 g$ls$8134$kwCBQ)
                             g$ls$8134$kwCBQ
                             (cons g$x$8133$kwCBQ g$ls$8134$kwCBQ))))))
              (case-lambda
                (() g$set$8128$kwCBQ)
                ((g$x$8130$kwCBQ)
                 (set! g$set$8128$kwCBQ
                   (g$set-cons$8129$kwCBQ g$x$8130$kwCBQ g$set$8128$kwCBQ)))
                ((g$x$8131$kwCBQ g$del?$8132$kwCBQ)
                 (if g$del?$8132$kwCBQ
                   (set! g$set$8128$kwCBQ
                     (g$remq$5819$kwCBQ g$x$8131$kwCBQ g$set$8128$kwCBQ))
                   (set! g$set$8128$kwCBQ
                     (g$set-cons$8129$kwCBQ
                       g$x$8131$kwCBQ
                       g$set$8128$kwCBQ))))))))
         '()))))
   (g$current-library-collection$8068$kwCBQ
     g$current-library-collection$8271$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (g$make-collection$8067$kwCBQ)
       (case-lambda
         ((g$x$8135$kwCBQ)
          (begin
            (if (not (procedure? g$x$8135$kwCBQ))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$8135$kwCBQ)
              (void))
            g$x$8135$kwCBQ)))))
   (g$9064$8069$kwCBQ
     g$9064$8272$kwCBQ
     (make-record-type-descriptor
       'library
       '#f
       'g$9067$kwCBQ
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9066$8070$kwCBQ g$9066$8273$kwCBQ '#f)
   (g$9065$8071$kwCBQ
     g$9065$8274$kwCBQ
     (make-record-constructor-descriptor
       g$9064$8069$kwCBQ
       '#f
       g$9066$8070$kwCBQ))
   (g$library?$8072$kwCBQ
     g$library?$8275$kwCBQ
     (record-predicate g$9064$8069$kwCBQ))
   (g$make-library$8073$kwCBQ
     g$make-library$8276$kwCBQ
     (record-constructor g$9065$8071$kwCBQ))
   (g$library-id$8074$kwCBQ
     g$library-id$8277$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '0))
   (g$library-name$8075$kwCBQ
     g$library-name$8278$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '1))
   (g$library-version$8076$kwCBQ
     g$library-version$8279$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '2))
   (g$library-imp*$8077$kwCBQ
     g$library-imp*$8280$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '3))
   (g$library-vis*$8078$kwCBQ
     g$library-vis*$8281$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '4))
   (g$library-inv*$8079$kwCBQ
     g$library-inv*$8282$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '5))
   (g$library-subst$8080$kwCBQ
     g$library-subst$8283$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '6))
   (g$library-env$8081$kwCBQ
     g$library-env$8284$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '7))
   (g$library-visit-state$8082$kwCBQ
     g$library-visit-state$8285$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '8))
   (g$library-invoke-state$8083$kwCBQ
     g$library-invoke-state$8286$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '9))
   (g$library-visit-code$8084$kwCBQ
     g$library-visit-code$8287$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '10))
   (g$library-invoke-code$8085$kwCBQ
     g$library-invoke-code$8288$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '11))
   (g$library-visible?$8086$kwCBQ
     g$library-visible?$8289$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '12))
   (g$library-source-file-name$8087$kwCBQ
     g$library-source-file-name$8290$kwCBQ
     (record-accessor g$9064$8069$kwCBQ '13))
   (g$set-library-id!$8088$kwCBQ
     g$set-library-id!$8291$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '0))
   (g$set-library-name!$8089$kwCBQ
     g$set-library-name!$8292$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '1))
   (g$set-library-version!$8090$kwCBQ
     g$set-library-version!$8293$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '2))
   (g$set-library-imp*!$8091$kwCBQ
     g$set-library-imp*!$8294$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '3))
   (g$set-library-vis*!$8092$kwCBQ
     g$set-library-vis*!$8295$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '4))
   (g$set-library-inv*!$8093$kwCBQ
     g$set-library-inv*!$8296$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '5))
   (g$set-library-subst!$8094$kwCBQ
     g$set-library-subst!$8297$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '6))
   (g$set-library-env!$8095$kwCBQ
     g$set-library-env!$8298$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '7))
   (g$set-library-visit-state!$8096$kwCBQ
     g$set-library-visit-state!$8299$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '8))
   (g$set-library-invoke-state!$8097$kwCBQ
     g$set-library-invoke-state!$8300$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '9))
   (g$set-library-visit-code!$8098$kwCBQ
     g$set-library-visit-code!$8301$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '10))
   (g$set-library-invoke-code!$8099$kwCBQ
     g$set-library-invoke-code!$8302$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '11))
   (g$set-library-visible?!$8100$kwCBQ
     g$set-library-visible?!$8303$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '12))
   (g$set-library-source-file-name!$8101$kwCBQ
     g$set-library-source-file-name!$8304$kwCBQ
     (record-mutator g$9064$8069$kwCBQ '13))
   (g$rp$8102$kwCBQ
     g$rp$8305$kwCBQ
     (make-record-printer
       'library
       (case-lambda
         ((g$x$8136$kwCBQ g$p$8137$kwCBQ g$wr$8138$kwCBQ)
          (begin
            (if (not (g$library?$8072$kwCBQ g$x$8136$kwCBQ))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$7336$kwCBQ
                '"#<library ~s>"
                (if (null? (g$library-version$8076$kwCBQ g$x$8136$kwCBQ))
                  (g$library-name$8075$kwCBQ g$x$8136$kwCBQ)
                  (append
                    (g$library-name$8075$kwCBQ g$x$8136$kwCBQ)
                    (list (g$library-version$8076$kwCBQ g$x$8136$kwCBQ)))))
              g$p$8137$kwCBQ))))))
   (g$find-dependencies$8103$kwCBQ
     g$find-dependencies$8306$kwCBQ
     (case-lambda
       ((g$ls$8139$kwCBQ)
        (if (null? g$ls$8139$kwCBQ)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$8104$kwCBQ
     g$find-library-by$8307$kwCBQ
     (case-lambda
       ((g$pred$8140$kwCBQ)
        ((letrec ((g$f$8141$kwCBQ
                    (case-lambda
                      ((g$ls$8142$kwCBQ)
                       (if (null? g$ls$8142$kwCBQ)
                         '#f
                         (if (g$pred$8140$kwCBQ (car g$ls$8142$kwCBQ))
                           (car g$ls$8142$kwCBQ)
                           (g$f$8141$kwCBQ (cdr g$ls$8142$kwCBQ))))))))
           g$f$8141$kwCBQ)
         ((g$current-library-collection$8068$kwCBQ))))))
   (g$library-path$8105$kwCBQ
     g$library-path$8308$kwCBQ
     (g$make-parameter$7778$kwCBQ
       '(".")
       (case-lambda
         ((g$x$8143$kwCBQ)
          (if (if (list? g$x$8143$kwCBQ)
                (begin '#f (g$for-all$5810$kwCBQ string? g$x$8143$kwCBQ))
                '#f)
            (g$map$5812$kwCBQ
              (case-lambda ((g$x$8144$kwCBQ) g$x$8144$kwCBQ))
              g$x$8143$kwCBQ)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$8143$kwCBQ))))))
   (g$library-extensions$8106$kwCBQ
     g$library-extensions$8309$kwCBQ
     (g$make-parameter$7778$kwCBQ
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$8145$kwCBQ)
          (if (if (list? g$x$8145$kwCBQ)
                (begin '#f (g$for-all$5810$kwCBQ string? g$x$8145$kwCBQ))
                '#f)
            (g$map$5812$kwCBQ
              (case-lambda ((g$x$8146$kwCBQ) g$x$8146$kwCBQ))
              g$x$8145$kwCBQ)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$8145$kwCBQ))))))
   (g$library-name->file-name$8107$kwCBQ
     g$library-name->file-name$8310$kwCBQ
     (case-lambda
       ((g$x$8147$kwCBQ)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$7113$kwCBQ)))
          (case-lambda
            ((g$p$8150$kwCBQ g$extract$8151$kwCBQ)
             ((case-lambda
                ((g$extract$8152$kwCBQ g$p$8153$kwCBQ)
                 (letrec* ((g$display-hex$8154$kwCBQ
                             (case-lambda
                               ((g$n$8162$kwCBQ)
                                (if (<= '0 g$n$8162$kwCBQ '9)
                                  (display g$n$8162$kwCBQ g$p$8153$kwCBQ)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$8162$kwCBQ '10)))
                                    g$p$8153$kwCBQ))))))
                   (begin
                     ((letrec ((g$f$8155$kwCBQ
                                 (case-lambda
                                   ((g$ls$8156$kwCBQ)
                                    (if (not (null? g$ls$8156$kwCBQ))
                                      (begin
                                        (display '"/" g$p$8153$kwCBQ)
                                        (g$for-each$5813$kwCBQ
                                          (case-lambda
                                            ((g$c$8157$kwCBQ)
                                             (if ((case-lambda
                                                    ((g$t$8158$kwCBQ)
                                                     (if g$t$8158$kwCBQ
                                                       g$t$8158$kwCBQ
                                                       ((case-lambda
                                                          ((g$t$8159$kwCBQ)
                                                           (if g$t$8159$kwCBQ
                                                             g$t$8159$kwCBQ
                                                             ((case-lambda
                                                                ((g$t$8160$kwCBQ)
                                                                 (if g$t$8160$kwCBQ
                                                                   g$t$8160$kwCBQ
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5805$kwCBQ
                                                                       g$c$8157$kwCBQ
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$6084$kwCBQ
                                                                '#\0
                                                                g$c$8157$kwCBQ
                                                                '#\9)))))
                                                        (g$char<=?$6084$kwCBQ
                                                          '#\A
                                                          g$c$8157$kwCBQ
                                                          '#\Z)))))
                                                  (g$char<=?$6084$kwCBQ
                                                    '#\a
                                                    g$c$8157$kwCBQ
                                                    '#\z))
                                               (display
                                                 g$c$8157$kwCBQ
                                                 g$p$8153$kwCBQ)
                                               (begin
                                                 (display '"%" g$p$8153$kwCBQ)
                                                 ((case-lambda
                                                    ((g$n$8161$kwCBQ)
                                                     (begin
                                                       (g$display-hex$8154$kwCBQ
                                                         (g$quotient$6696$kwCBQ
                                                           g$n$8161$kwCBQ
                                                           '16))
                                                       (g$display-hex$8154$kwCBQ
                                                         (g$remainder$6697$kwCBQ
                                                           g$n$8161$kwCBQ
                                                           '16)))))
                                                  (char->integer
                                                    g$c$8157$kwCBQ))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$8156$kwCBQ))))
                                        (g$f$8155$kwCBQ (cdr g$ls$8156$kwCBQ)))
                                      (void))))))
                        g$f$8155$kwCBQ)
                      g$x$8147$kwCBQ)
                     (g$extract$8152$kwCBQ)))))
              g$extract$8151$kwCBQ
              g$p$8150$kwCBQ)))))))
   (g$file-locator$8108$kwCBQ
     g$file-locator$8311$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         ((g$x$8163$kwCBQ)
          ((case-lambda
             ((g$str$8164$kwCBQ)
              ((letrec ((g$f$8165$kwCBQ
                          (case-lambda
                            ((g$ls$8166$kwCBQ
                               g$exts$8167$kwCBQ
                               g$failed-list$8168$kwCBQ)
                             (if (null? g$ls$8166$kwCBQ)
                               (g$file-locator-resolution-error$7776$kwCBQ
                                 g$x$8163$kwCBQ
                                 (reverse g$failed-list$8168$kwCBQ))
                               (if (null? g$exts$8167$kwCBQ)
                                 (g$f$8165$kwCBQ
                                   (cdr g$ls$8166$kwCBQ)
                                   (g$library-extensions$8106$kwCBQ)
                                   g$failed-list$8168$kwCBQ)
                                 ((case-lambda
                                    ((g$name$8169$kwCBQ)
                                     (if (g$file-exists?$6333$kwCBQ
                                           g$name$8169$kwCBQ)
                                       g$name$8169$kwCBQ
                                       (g$f$8165$kwCBQ
                                         g$ls$8166$kwCBQ
                                         (cdr g$exts$8167$kwCBQ)
                                         (cons
                                           g$name$8169$kwCBQ
                                           g$failed-list$8168$kwCBQ)))))
                                  (string-append
                                    (car g$ls$8166$kwCBQ)
                                    g$str$8164$kwCBQ
                                    (car g$exts$8167$kwCBQ)))))))))
                 g$f$8165$kwCBQ)
               (g$library-path$8105$kwCBQ)
               (g$library-extensions$8106$kwCBQ)
               '())))
           (g$library-name->file-name$8107$kwCBQ g$x$8163$kwCBQ))))
       (case-lambda
         ((g$f$8170$kwCBQ)
          (if (procedure? g$f$8170$kwCBQ)
            g$f$8170$kwCBQ
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$8170$kwCBQ))))))
   (g$serialize-all$8109$kwCBQ
     g$serialize-all$8312$kwCBQ
     (case-lambda
       ((g$serialize$8171$kwCBQ g$compile$8172$kwCBQ)
        (letrec* ((g$library-desc$8173$kwCBQ
                    (case-lambda
                      ((g$x$8175$kwCBQ)
                       (list
                         (g$library-id$8074$kwCBQ g$x$8175$kwCBQ)
                         (g$library-name$8075$kwCBQ g$x$8175$kwCBQ))))))
          (g$for-each$5813$kwCBQ
            (case-lambda
              ((g$x$8174$kwCBQ)
               (if (g$library-source-file-name$8087$kwCBQ g$x$8174$kwCBQ)
                 (g$serialize$8171$kwCBQ
                   (g$library-source-file-name$8087$kwCBQ g$x$8174$kwCBQ)
                   (list
                     (g$library-id$8074$kwCBQ g$x$8174$kwCBQ)
                     (g$library-name$8075$kwCBQ g$x$8174$kwCBQ)
                     (g$library-version$8076$kwCBQ g$x$8174$kwCBQ)
                     (g$map$5812$kwCBQ
                       g$library-desc$8173$kwCBQ
                       (g$library-imp*$8077$kwCBQ g$x$8174$kwCBQ))
                     (g$map$5812$kwCBQ
                       g$library-desc$8173$kwCBQ
                       (g$library-vis*$8078$kwCBQ g$x$8174$kwCBQ))
                     (g$map$5812$kwCBQ
                       g$library-desc$8173$kwCBQ
                       (g$library-inv*$8079$kwCBQ g$x$8174$kwCBQ))
                     (g$library-subst$8080$kwCBQ g$x$8174$kwCBQ)
                     (g$library-env$8081$kwCBQ g$x$8174$kwCBQ)
                     (g$compile$8172$kwCBQ
                       (g$library-visit-code$8084$kwCBQ g$x$8174$kwCBQ))
                     (g$compile$8172$kwCBQ
                       (g$library-invoke-code$8085$kwCBQ g$x$8174$kwCBQ))
                     (g$library-visible?$8086$kwCBQ g$x$8174$kwCBQ)))
                 (void))))
            ((g$current-library-collection$8068$kwCBQ)))))))
   (g$current-precompiled-library-loader$8110$kwCBQ
     g$current-precompiled-library-loader$8313$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda ((g$filename$8176$kwCBQ g$sk$8177$kwCBQ) '#f))))
   (g$try-load-from-file$8111$kwCBQ
     g$try-load-from-file$8314$kwCBQ
     (case-lambda
       ((g$filename$8178$kwCBQ)
        ((g$current-precompiled-library-loader$8110$kwCBQ)
         g$filename$8178$kwCBQ
         (case-lambda
           ((g$id$8179$kwCBQ
              g$name$8180$kwCBQ
              g$ver$8181$kwCBQ
              g$imp*$8182$kwCBQ
              g$vis*$8183$kwCBQ
              g$inv*$8184$kwCBQ
              g$exp-subst$8185$kwCBQ
              g$exp-env$8186$kwCBQ
              g$visit-proc$8187$kwCBQ
              g$invoke-proc$8188$kwCBQ
              g$visible?$8189$kwCBQ)
            ((letrec ((g$f$8190$kwCBQ
                        (case-lambda
                          ((g$deps$8191$kwCBQ)
                           (if (null? g$deps$8191$kwCBQ)
                             (begin
                               (g$install-library$8121$kwCBQ
                                 g$id$8179$kwCBQ
                                 g$name$8180$kwCBQ
                                 g$ver$8181$kwCBQ
                                 g$imp*$8182$kwCBQ
                                 g$vis*$8183$kwCBQ
                                 g$inv*$8184$kwCBQ
                                 g$exp-subst$8185$kwCBQ
                                 g$exp-env$8186$kwCBQ
                                 g$visit-proc$8187$kwCBQ
                                 g$invoke-proc$8188$kwCBQ
                                 '#f
                                 '#f
                                 g$visible?$8189$kwCBQ
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$8192$kwCBQ)
                                 ((case-lambda
                                    ((g$label$8193$kwCBQ g$dname$8194$kwCBQ)
                                     ((case-lambda
                                        ((g$l$8195$kwCBQ)
                                         (if (if (g$library?$8072$kwCBQ
                                                   g$l$8195$kwCBQ)
                                               (begin
                                                 '#f
                                                 (eq? g$label$8193$kwCBQ
                                                      (g$library-id$8074$kwCBQ
                                                        g$l$8195$kwCBQ)))
                                               '#f)
                                           (g$f$8190$kwCBQ
                                             (cdr g$deps$8191$kwCBQ))
                                           (begin
                                             (g$library-version-mismatch-warning$7775$kwCBQ
                                               g$name$8180$kwCBQ
                                               g$dname$8194$kwCBQ
                                               g$filename$8178$kwCBQ)
                                             '#f))))
                                      (g$find-library-by-name$8116$kwCBQ
                                        g$dname$8194$kwCBQ))))
                                  (car g$d$8192$kwCBQ)
                                  (g$cadr$6038$kwCBQ g$d$8192$kwCBQ))))
                              (car g$deps$8191$kwCBQ)))))))
               g$f$8190$kwCBQ)
             (append g$imp*$8182$kwCBQ g$vis*$8183$kwCBQ g$inv*$8184$kwCBQ)))
           (g$others$8196$kwCBQ '#f))))))
   (g$library-loader$8112$kwCBQ
     g$library-loader$8315$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         ((g$x$8197$kwCBQ)
          ((case-lambda
             ((g$file-name$8198$kwCBQ)
              (if (not g$file-name$8198$kwCBQ)
                (assertion-violation '#f '"cannot file library" g$x$8197$kwCBQ)
                ((case-lambda
                   ((g$t$8199$kwCBQ)
                    (if g$t$8199$kwCBQ
                      g$t$8199$kwCBQ
                      (begin
                        '#f
                        ((g$current-library-expander$8113$kwCBQ)
                         (g$read-library-source-file$7777$kwCBQ
                           g$file-name$8198$kwCBQ)
                         g$file-name$8198$kwCBQ
                         (case-lambda
                           ((g$name$8200$kwCBQ)
                            (if (not (equal? g$name$8200$kwCBQ g$x$8197$kwCBQ))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$7113$kwCBQ)))
                                  (case-lambda
                                    ((g$p$8203$kwCBQ g$e$8204$kwCBQ)
                                     ((case-lambda
                                        ((g$e$8205$kwCBQ g$p$8206$kwCBQ)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$8206$kwCBQ)
                                           (write g$x$8197$kwCBQ g$p$8206$kwCBQ)
                                           (display '" in file " g$p$8206$kwCBQ)
                                           (display
                                             g$file-name$8198$kwCBQ
                                             g$p$8206$kwCBQ)
                                           (display '", found " g$p$8206$kwCBQ)
                                           (write
                                             g$name$8200$kwCBQ
                                             g$p$8206$kwCBQ)
                                           (display '" instead" g$p$8206$kwCBQ)
                                           (g$e$8205$kwCBQ))))
                                      g$e$8204$kwCBQ
                                      g$p$8203$kwCBQ)))))
                              (void)))))))))
                 (g$try-load-from-file$8111$kwCBQ g$file-name$8198$kwCBQ)))))
           ((g$file-locator$8108$kwCBQ) g$x$8197$kwCBQ))))
       (case-lambda
         ((g$f$8207$kwCBQ)
          (if (procedure? g$f$8207$kwCBQ)
            g$f$8207$kwCBQ
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$8207$kwCBQ))))))
   (g$current-library-expander$8113$kwCBQ
     g$current-library-expander$8316$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         ((g$x$8208$kwCBQ)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$8209$kwCBQ)
          (if (procedure? g$f$8209$kwCBQ)
            g$f$8209$kwCBQ
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$8209$kwCBQ))))))
   (g$external-pending-libraries$8114$kwCBQ
     g$external-pending-libraries$8317$kwCBQ
     (g$make-parameter$7778$kwCBQ '()))
   (g$find-external-library$8115$kwCBQ
     g$find-external-library$8318$kwCBQ
     (case-lambda
       ((g$name$8210$kwCBQ)
        (begin
          (if (g$member$5806$kwCBQ
                g$name$8210$kwCBQ
                (g$external-pending-libraries$8114$kwCBQ))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$8210$kwCBQ)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$8213$kwCBQ
                g$external-pending-libraries$8214$kwCBQ)
              ((case-lambda
                 ((g$swap$8215$kwCBQ)
                  (dynamic-wind
                    g$swap$8215$kwCBQ
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$8112$kwCBQ) g$name$8210$kwCBQ)
                         ((case-lambda
                            ((g$t$8216$kwCBQ)
                             (if g$t$8216$kwCBQ
                               g$t$8216$kwCBQ
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$8210$kwCBQ)))))
                          (g$find-library-by$8104$kwCBQ
                            (case-lambda
                              ((g$x$8217$kwCBQ)
                               (equal?
                                 (g$library-name$8075$kwCBQ g$x$8217$kwCBQ)
                                 g$name$8210$kwCBQ))))))))
                    g$swap$8215$kwCBQ)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$8218$kwCBQ)
                      (begin
                        (g$external-pending-libraries$8213$kwCBQ
                          g$external-pending-libraries$8214$kwCBQ)
                        (set! g$external-pending-libraries$8214$kwCBQ
                          g$t$8218$kwCBQ))))
                   (g$external-pending-libraries$8213$kwCBQ)))))))
           g$external-pending-libraries$8114$kwCBQ
           (cons
             g$name$8210$kwCBQ
             (g$external-pending-libraries$8114$kwCBQ)))))))
   (g$find-library-by-name$8116$kwCBQ
     g$find-library-by-name$8319$kwCBQ
     (case-lambda
       ((g$name$8219$kwCBQ)
        ((case-lambda
           ((g$t$8220$kwCBQ)
            (if g$t$8220$kwCBQ
              g$t$8220$kwCBQ
              (begin
                '#f
                (g$find-external-library$8115$kwCBQ g$name$8219$kwCBQ)))))
         (g$find-library-by$8104$kwCBQ
           (case-lambda
             ((g$x$8221$kwCBQ)
              (equal?
                (g$library-name$8075$kwCBQ g$x$8221$kwCBQ)
                g$name$8219$kwCBQ))))))))
   (g$uninstall-library$8117$kwCBQ
     g$uninstall-library$8320$kwCBQ
     (case-lambda
       ((g$name$8222$kwCBQ g$err?$8223$kwCBQ)
        (letrec* ((g$who$8224$kwCBQ 'uninstall-library))
          ((case-lambda
             ((g$lib$8225$kwCBQ)
              (begin
                (if (if g$err?$8223$kwCBQ
                      (begin '#f (not g$lib$8225$kwCBQ))
                      '#f)
                  (assertion-violation
                    g$who$8224$kwCBQ
                    '"library not installed"
                    g$name$8222$kwCBQ)
                  (void))
                ((g$current-library-collection$8068$kwCBQ)
                 g$lib$8225$kwCBQ
                 '#t))))
           (g$find-library-by$8104$kwCBQ
             (case-lambda
               ((g$x$8226$kwCBQ)
                (equal?
                  (g$library-name$8075$kwCBQ g$x$8226$kwCBQ)
                  g$name$8222$kwCBQ)))))))
       ((g$name$8227$kwCBQ)
        (g$uninstall-library$8117$kwCBQ g$name$8227$kwCBQ '#t))))
   (g$library-exists?$8118$kwCBQ
     g$library-exists?$8321$kwCBQ
     (case-lambda
       ((g$name$8228$kwCBQ)
        (if (g$find-library-by$8104$kwCBQ
              (case-lambda
                ((g$x$8229$kwCBQ)
                 (equal?
                   (g$library-name$8075$kwCBQ g$x$8229$kwCBQ)
                   g$name$8228$kwCBQ))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$8119$kwCBQ
     g$find-library-by-spec/die$8322$kwCBQ
     (case-lambda
       ((g$spec$8230$kwCBQ)
        ((case-lambda
           ((g$id$8231$kwCBQ)
            ((case-lambda
               ((g$t$8232$kwCBQ)
                (if g$t$8232$kwCBQ
                  g$t$8232$kwCBQ
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$8230$kwCBQ)))))
             (g$find-library-by$8104$kwCBQ
               (case-lambda
                 ((g$x$8233$kwCBQ)
                  (eq? g$id$8231$kwCBQ
                       (g$library-id$8074$kwCBQ g$x$8233$kwCBQ))))))))
         (car g$spec$8230$kwCBQ)))))
   (g$install-library-record$8120$kwCBQ
     g$install-library-record$8323$kwCBQ
     (case-lambda
       ((g$lib$8234$kwCBQ)
        (begin
          ((case-lambda
             ((g$exp-env$8235$kwCBQ)
              (g$for-each$5813$kwCBQ
                (case-lambda
                  ((g$x$8236$kwCBQ)
                   ((case-lambda
                      ((g$label$8237$kwCBQ g$binding$8238$kwCBQ)
                       ((case-lambda
                          ((g$binding$8239$kwCBQ)
                           (g$set-label-binding!$7781$kwCBQ
                             g$label$8237$kwCBQ
                             g$binding$8239$kwCBQ)))
                        ((case-lambda
                           ((g$t$8240$kwCBQ)
                            (if (g$memv$5805$kwCBQ g$t$8240$kwCBQ '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$8234$kwCBQ
                                  (cdr g$binding$8238$kwCBQ)))
                              (if (g$memv$5805$kwCBQ
                                    g$t$8240$kwCBQ
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$8234$kwCBQ
                                    (cdr g$binding$8238$kwCBQ)))
                                (if (g$memv$5805$kwCBQ
                                      g$t$8240$kwCBQ
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$8234$kwCBQ
                                      (cdr g$binding$8238$kwCBQ)))
                                  (if (g$memv$5805$kwCBQ
                                        g$t$8240$kwCBQ
                                        '(global-ctv))
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$8234$kwCBQ
                                        (cdr g$binding$8238$kwCBQ)))
                                    g$binding$8238$kwCBQ))))))
                         (car g$binding$8238$kwCBQ)))))
                    (car g$x$8236$kwCBQ)
                    (cdr g$x$8236$kwCBQ))))
                g$exp-env$8235$kwCBQ)))
           (g$library-env$8081$kwCBQ g$lib$8234$kwCBQ))
          ((g$current-library-collection$8068$kwCBQ) g$lib$8234$kwCBQ)))))
   (g$install-library$8121$kwCBQ
     g$install-library$8324$kwCBQ
     (case-lambda
       ((g$id$8241$kwCBQ
          g$name$8242$kwCBQ
          g$ver$8243$kwCBQ
          g$imp*$8244$kwCBQ
          g$vis*$8245$kwCBQ
          g$inv*$8246$kwCBQ
          g$exp-subst$8247$kwCBQ
          g$exp-env$8248$kwCBQ
          g$visit-proc$8249$kwCBQ
          g$invoke-proc$8250$kwCBQ
          g$visit-code$8251$kwCBQ
          g$invoke-code$8252$kwCBQ
          g$visible?$8253$kwCBQ
          g$source-file-name$8254$kwCBQ)
        ((case-lambda
           ((g$imp-lib*$8255$kwCBQ g$vis-lib*$8256$kwCBQ g$inv-lib*$8257$kwCBQ)
            (begin
              (if (not (if (symbol? g$id$8241$kwCBQ)
                         (if (list? g$name$8242$kwCBQ)
                           (begin '#f (list? g$ver$8243$kwCBQ))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$8241$kwCBQ
                  g$name$8242$kwCBQ
                  g$ver$8243$kwCBQ)
                (void))
              (if (g$library-exists?$8118$kwCBQ g$name$8242$kwCBQ)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$8242$kwCBQ)
                (void))
              ((case-lambda
                 ((g$lib$8258$kwCBQ)
                  (g$install-library-record$8120$kwCBQ g$lib$8258$kwCBQ)))
               (g$make-library$8073$kwCBQ
                 g$id$8241$kwCBQ
                 g$name$8242$kwCBQ
                 g$ver$8243$kwCBQ
                 g$imp-lib*$8255$kwCBQ
                 g$vis-lib*$8256$kwCBQ
                 g$inv-lib*$8257$kwCBQ
                 g$exp-subst$8247$kwCBQ
                 g$exp-env$8248$kwCBQ
                 g$visit-proc$8249$kwCBQ
                 g$invoke-proc$8250$kwCBQ
                 g$visit-code$8251$kwCBQ
                 g$invoke-code$8252$kwCBQ
                 g$visible?$8253$kwCBQ
                 g$source-file-name$8254$kwCBQ)))))
         (g$map$5812$kwCBQ
           g$find-library-by-spec/die$8119$kwCBQ
           g$imp*$8244$kwCBQ)
         (g$map$5812$kwCBQ
           g$find-library-by-spec/die$8119$kwCBQ
           g$vis*$8245$kwCBQ)
         (g$map$5812$kwCBQ
           g$find-library-by-spec/die$8119$kwCBQ
           g$inv*$8246$kwCBQ)))))
   (g$imported-label->binding$8122$kwCBQ
     g$imported-label->binding$8325$kwCBQ
     (case-lambda
       ((g$lab$8259$kwCBQ) (g$label-binding$7782$kwCBQ g$lab$8259$kwCBQ))))
   (g$invoke-library$8123$kwCBQ
     g$invoke-library$8326$kwCBQ
     (case-lambda
       ((g$lib$8260$kwCBQ)
        ((case-lambda
           ((g$invoke$8261$kwCBQ)
            (if (procedure? g$invoke$8261$kwCBQ)
              (begin
                (g$set-library-invoke-state!$8097$kwCBQ
                  g$lib$8260$kwCBQ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$8260$kwCBQ))))
                (g$for-each$5813$kwCBQ
                  g$invoke-library$8123$kwCBQ
                  (g$library-inv*$8079$kwCBQ g$lib$8260$kwCBQ))
                (g$set-library-invoke-state!$8097$kwCBQ
                  g$lib$8260$kwCBQ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$8260$kwCBQ))))
                (g$invoke$8261$kwCBQ)
                (g$set-library-invoke-state!$8097$kwCBQ g$lib$8260$kwCBQ '#t))
              (void))))
         (g$library-invoke-state$8083$kwCBQ g$lib$8260$kwCBQ)))))
   (g$visit-library$8124$kwCBQ
     g$visit-library$8327$kwCBQ
     (case-lambda
       ((g$lib$8262$kwCBQ)
        ((case-lambda
           ((g$visit$8263$kwCBQ)
            (if (procedure? g$visit$8263$kwCBQ)
              (begin
                (g$set-library-visit-state!$8096$kwCBQ
                  g$lib$8262$kwCBQ
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$8262$kwCBQ))))
                (g$for-each$5813$kwCBQ
                  g$invoke-library$8123$kwCBQ
                  (g$library-vis*$8078$kwCBQ g$lib$8262$kwCBQ))
                (g$set-library-visit-state!$8096$kwCBQ
                  g$lib$8262$kwCBQ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$8262$kwCBQ))))
                (g$visit$8263$kwCBQ)
                (g$set-library-visit-state!$8096$kwCBQ g$lib$8262$kwCBQ '#t))
              (void))))
         (g$library-visit-state$8082$kwCBQ g$lib$8262$kwCBQ)))))
   (g$invoke-library-by-spec$8125$kwCBQ
     g$invoke-library-by-spec$8328$kwCBQ
     (case-lambda
       ((g$spec$8264$kwCBQ)
        (g$invoke-library$8123$kwCBQ
          (g$find-library-by-spec/die$8119$kwCBQ g$spec$8264$kwCBQ)))))
   (g$installed-libraries$8126$kwCBQ
     g$installed-libraries$8329$kwCBQ
     (case-lambda
       ((g$all?$8265$kwCBQ)
        ((letrec ((g$f$8266$kwCBQ
                    (case-lambda
                      ((g$ls$8267$kwCBQ)
                       (if (null? g$ls$8267$kwCBQ)
                         '()
                         (if ((case-lambda
                                ((g$t$8268$kwCBQ)
                                 (if g$t$8268$kwCBQ
                                   g$t$8268$kwCBQ
                                   (begin
                                     '#f
                                     (g$library-visible?$8086$kwCBQ
                                       (car g$ls$8267$kwCBQ))))))
                              g$all?$8265$kwCBQ)
                           (cons
                             (g$library-name$8075$kwCBQ (car g$ls$8267$kwCBQ))
                             (g$f$8266$kwCBQ (cdr g$ls$8267$kwCBQ)))
                           (g$f$8266$kwCBQ (cdr g$ls$8267$kwCBQ))))))))
           g$f$8266$kwCBQ)
         ((g$current-library-collection$8068$kwCBQ))))
       (() (g$installed-libraries$8126$kwCBQ '#f))))
   (g$library-spec$8127$kwCBQ
     g$library-spec$8330$kwCBQ
     (case-lambda
       ((g$x$8269$kwCBQ)
        (begin
          (if (not (g$library?$8072$kwCBQ g$x$8269$kwCBQ))
            (assertion-violation 'library-spec '"not a library" g$x$8269$kwCBQ)
            (void))
          (list
            (g$library-id$8074$kwCBQ g$x$8269$kwCBQ)
            (g$library-name$8075$kwCBQ g$x$8269$kwCBQ)
            (g$library-version$8076$kwCBQ g$x$8269$kwCBQ)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$8331$kwCBQ
     g$build-global-define$8441$kwCBQ
     (case-lambda ((g$x$8412$kwCBQ) (g$build-void$8408$kwCBQ))))
   (g$build-lambda$8380$kwCBQ
     g$build-lambda$8442$kwCBQ
     (case-lambda
       ((g$ae$8413$kwCBQ g$vars$8414$kwCBQ g$exp$8415$kwCBQ)
        (list 'case-lambda (list g$vars$8414$kwCBQ g$exp$8415$kwCBQ)))))
   (g$build-case-lambda$8381$kwCBQ
     g$build-case-lambda$8443$kwCBQ
     (case-lambda
       ((g$ae$8416$kwCBQ g$vars*$8417$kwCBQ g$exp*$8418$kwCBQ)
        (cons
          'case-lambda
          (g$map$5812$kwCBQ list g$vars*$8417$kwCBQ g$exp*$8418$kwCBQ)))))
   (g$build-let$8382$kwCBQ
     g$build-let$8444$kwCBQ
     (case-lambda
       ((g$ae$8419$kwCBQ g$lhs*$8420$kwCBQ g$rhs*$8421$kwCBQ g$body$8422$kwCBQ)
        (cons
          (g$build-lambda$8380$kwCBQ
            g$ae$8419$kwCBQ
            g$lhs*$8420$kwCBQ
            g$body$8422$kwCBQ)
          g$rhs*$8421$kwCBQ))))
   (g$build-sequence$8407$kwCBQ
     g$build-sequence$8445$kwCBQ
     (case-lambda
       ((g$ae$8423$kwCBQ g$exps$8424$kwCBQ)
        ((letrec ((g$loop$8425$kwCBQ
                    (case-lambda
                      ((g$exps$8426$kwCBQ)
                       (if (null? (cdr g$exps$8426$kwCBQ))
                         (car g$exps$8426$kwCBQ)
                         (if (equal?
                               (car g$exps$8426$kwCBQ)
                               (g$build-void$8408$kwCBQ))
                           (g$loop$8425$kwCBQ (cdr g$exps$8426$kwCBQ))
                           (cons 'begin g$exps$8426$kwCBQ)))))))
           g$loop$8425$kwCBQ)
         g$exps$8424$kwCBQ))))
   (g$build-void$8408$kwCBQ
     g$build-void$8446$kwCBQ
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$8409$kwCBQ
     g$build-letrec$8447$kwCBQ
     (case-lambda
       ((g$ae$8427$kwCBQ
          g$vars$8428$kwCBQ
          g$val-exps$8429$kwCBQ
          g$body-exp$8430$kwCBQ)
        (if (null? g$vars$8428$kwCBQ)
          g$body-exp$8430$kwCBQ
          (list
            'letrec
            (g$map$5812$kwCBQ list g$vars$8428$kwCBQ g$val-exps$8429$kwCBQ)
            g$body-exp$8430$kwCBQ)))))
   (g$build-letrec*$8410$kwCBQ
     g$build-letrec*$8448$kwCBQ
     (case-lambda
       ((g$ae$8431$kwCBQ
          g$vars$8432$kwCBQ
          g$val-exps$8433$kwCBQ
          g$body-exp$8434$kwCBQ)
        (if (null? g$vars$8432$kwCBQ)
          g$body-exp$8434$kwCBQ
          (list
            'letrec*
            (g$map$5812$kwCBQ list g$vars$8432$kwCBQ g$val-exps$8433$kwCBQ)
            g$body-exp$8434$kwCBQ)))))
   (g$build-library-letrec*$8411$kwCBQ
     g$build-library-letrec*$8449$kwCBQ
     (case-lambda
       ((g$ae$8435$kwCBQ
          g$name$8436$kwCBQ
          g$vars$8437$kwCBQ
          g$locs$8438$kwCBQ
          g$val-exps$8439$kwCBQ
          g$body-exp$8440$kwCBQ)
        (list
          'library-letrec*
          g$name$8436$kwCBQ
          (g$map$5812$kwCBQ
            list
            g$vars$8437$kwCBQ
            g$locs$8438$kwCBQ
            g$val-exps$8439$kwCBQ)
          g$body-exp$8440$kwCBQ)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$8450$kwCBQ
     g$set-cons$12161$kwCBQ
     (case-lambda
       ((g$x$8916$kwCBQ g$ls$8917$kwCBQ)
        (if (g$memq$5804$kwCBQ g$x$8916$kwCBQ g$ls$8917$kwCBQ)
          g$ls$8917$kwCBQ
          (cons g$x$8916$kwCBQ g$ls$8917$kwCBQ)))))
   (g$set-union$8451$kwCBQ
     g$set-union$12162$kwCBQ
     (case-lambda
       ((g$ls1$8918$kwCBQ g$ls2$8919$kwCBQ)
        (if (null? g$ls1$8918$kwCBQ)
          g$ls2$8919$kwCBQ
          (if (g$memq$5804$kwCBQ (car g$ls1$8918$kwCBQ) g$ls2$8919$kwCBQ)
            (g$set-union$8451$kwCBQ (cdr g$ls1$8918$kwCBQ) g$ls2$8919$kwCBQ)
            (cons
              (car g$ls1$8918$kwCBQ)
              (g$set-union$8451$kwCBQ
                (cdr g$ls1$8918$kwCBQ)
                g$ls2$8919$kwCBQ)))))))
   (g$top-mark*$8453$kwCBQ g$top-mark*$12163$kwCBQ '(top))
   (g$top-marked?$8454$kwCBQ
     g$top-marked?$12164$kwCBQ
     (case-lambda
       ((g$m*$8920$kwCBQ) (g$memq$5804$kwCBQ 'top g$m*$8920$kwCBQ))))
   (g$gen-lexical$8455$kwCBQ
     g$gen-lexical$12165$kwCBQ
     (case-lambda
       ((g$sym$8921$kwCBQ)
        (if (symbol? g$sym$8921$kwCBQ)
          (gensym g$sym$8921$kwCBQ)
          (if (g$stx?$8488$kwCBQ g$sym$8921$kwCBQ)
            (g$gen-lexical$8455$kwCBQ (g$id->sym$8517$kwCBQ g$sym$8921$kwCBQ))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8921$kwCBQ))))))
   (g$gen-global$8456$kwCBQ
     g$gen-global$12166$kwCBQ
     (case-lambda
       ((g$x$8922$kwCBQ) (g$gen-lexical$8455$kwCBQ g$x$8922$kwCBQ))))
   (g$gen-label$8457$kwCBQ
     g$gen-label$12167$kwCBQ
     (case-lambda ((g$_$8923$kwCBQ) (gensym))))
   (g$gen-top-level-label$8458$kwCBQ
     g$gen-top-level-label$12168$kwCBQ
     (case-lambda
       ((g$id$8924$kwCBQ g$rib$8925$kwCBQ)
        (letrec* ((g$find$8926$kwCBQ
                    (case-lambda
                      ((g$sym$8932$kwCBQ
                         g$mark*$8933$kwCBQ
                         g$sym*$8934$kwCBQ
                         g$mark**$8935$kwCBQ
                         g$label*$8936$kwCBQ)
                       (if (pair? g$sym*$8934$kwCBQ)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8932$kwCBQ
                                        (car g$sym*$8934$kwCBQ))
                                 (begin
                                   '#f
                                   (g$same-marks?$8518$kwCBQ
                                     g$mark*$8933$kwCBQ
                                     (car g$mark**$8935$kwCBQ)))
                                 '#f)
                             (car g$label*$8936$kwCBQ)
                             (g$find$8926$kwCBQ
                               g$sym$8932$kwCBQ
                               g$mark*$8933$kwCBQ
                               (cdr g$sym*$8934$kwCBQ)
                               (cdr g$mark**$8935$kwCBQ)
                               (cdr g$label*$8936$kwCBQ))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8927$kwCBQ g$mark*$8928$kwCBQ)
              ((case-lambda
                 ((g$sym*$8929$kwCBQ)
                  ((case-lambda
                     ((g$t$8930$kwCBQ)
                      (if g$t$8930$kwCBQ
                        ((case-lambda
                           ((g$label$8931$kwCBQ)
                            (if (g$imported-label->binding$8325$kwCBQ
                                  g$label$8931$kwCBQ)
                              (gensym)
                              g$label$8931$kwCBQ)))
                         g$t$8930$kwCBQ)
                        (gensym))))
                   (if (g$memq$5804$kwCBQ
                         g$sym$8927$kwCBQ
                         (g$rib-sym*$8466$kwCBQ g$rib$8925$kwCBQ))
                     (begin
                       '#f
                       (g$find$8926$kwCBQ
                         g$sym$8927$kwCBQ
                         g$mark*$8928$kwCBQ
                         g$sym*$8929$kwCBQ
                         (g$rib-mark**$8467$kwCBQ g$rib$8925$kwCBQ)
                         (g$rib-label*$8468$kwCBQ g$rib$8925$kwCBQ)))
                     '#f))))
               (g$rib-sym*$8466$kwCBQ g$rib$8925$kwCBQ))))
           (g$id->sym$8517$kwCBQ g$id$8924$kwCBQ)
           (g$stx-mark*$8491$kwCBQ g$id$8924$kwCBQ))))))
   (g$gen-define-label+loc$8459$kwCBQ
     g$gen-define-label+loc$12169$kwCBQ
     (case-lambda
       ((g$id$8937$kwCBQ g$rib$8938$kwCBQ g$sd?$8939$kwCBQ)
        (if g$sd?$8939$kwCBQ
          (values (gensym) (g$gen-lexical$8455$kwCBQ g$id$8937$kwCBQ))
          ((case-lambda
             ((g$env$8940$kwCBQ)
              ((case-lambda
                 ((g$label$8941$kwCBQ g$locs$8942$kwCBQ)
                  (values
                    g$label$8941$kwCBQ
                    ((case-lambda
                       ((g$t$8943$kwCBQ)
                        (if g$t$8943$kwCBQ
                          (cdr g$t$8943$kwCBQ)
                          ((case-lambda
                             ((g$loc$8944$kwCBQ)
                              (begin
                                (g$set-interaction-env-locs!$8878$kwCBQ
                                  g$env$8940$kwCBQ
                                  (cons
                                    (cons g$label$8941$kwCBQ g$loc$8944$kwCBQ)
                                    g$locs$8942$kwCBQ))
                                g$loc$8944$kwCBQ)))
                           (g$gen-lexical$8455$kwCBQ g$id$8937$kwCBQ)))))
                     (g$assq$5800$kwCBQ
                       g$label$8941$kwCBQ
                       g$locs$8942$kwCBQ)))))
               (g$gen-top-level-label$8458$kwCBQ
                 g$id$8937$kwCBQ
                 g$rib$8938$kwCBQ)
               (g$interaction-env-locs$8875$kwCBQ g$env$8940$kwCBQ))))
           (g$top-level-context$8915$kwCBQ))))))
   (g$gen-define-label$8460$kwCBQ
     g$gen-define-label$12170$kwCBQ
     (case-lambda
       ((g$id$8945$kwCBQ g$rib$8946$kwCBQ g$sd?$8947$kwCBQ)
        (if g$sd?$8947$kwCBQ
          (gensym)
          (g$gen-top-level-label$8458$kwCBQ
            g$id$8945$kwCBQ
            g$rib$8946$kwCBQ)))))
   (g$9456$8461$kwCBQ
     g$9456$12171$kwCBQ
     (make-record-type-descriptor
       'rib
       '#f
       'g$9459$kwCBQ
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9458$8462$kwCBQ g$9458$12172$kwCBQ '#f)
   (g$9457$8463$kwCBQ
     g$9457$12173$kwCBQ
     (make-record-constructor-descriptor
       g$9456$8461$kwCBQ
       '#f
       g$9458$8462$kwCBQ))
   (g$rib?$8464$kwCBQ
     g$rib?$12174$kwCBQ
     (record-predicate g$9456$8461$kwCBQ))
   (g$make-rib$8465$kwCBQ
     g$make-rib$12175$kwCBQ
     (record-constructor g$9457$8463$kwCBQ))
   (g$rib-sym*$8466$kwCBQ
     g$rib-sym*$12176$kwCBQ
     (record-accessor g$9456$8461$kwCBQ '0))
   (g$rib-mark**$8467$kwCBQ
     g$rib-mark**$12177$kwCBQ
     (record-accessor g$9456$8461$kwCBQ '1))
   (g$rib-label*$8468$kwCBQ
     g$rib-label*$12178$kwCBQ
     (record-accessor g$9456$8461$kwCBQ '2))
   (g$rib-sealed/freq$8469$kwCBQ
     g$rib-sealed/freq$12179$kwCBQ
     (record-accessor g$9456$8461$kwCBQ '3))
   (g$rib-cache$8470$kwCBQ
     g$rib-cache$12180$kwCBQ
     (record-accessor g$9456$8461$kwCBQ '4))
   (g$set-rib-sym*!$8471$kwCBQ
     g$set-rib-sym*!$12181$kwCBQ
     (record-mutator g$9456$8461$kwCBQ '0))
   (g$set-rib-mark**!$8472$kwCBQ
     g$set-rib-mark**!$12182$kwCBQ
     (record-mutator g$9456$8461$kwCBQ '1))
   (g$set-rib-label*!$8473$kwCBQ
     g$set-rib-label*!$12183$kwCBQ
     (record-mutator g$9456$8461$kwCBQ '2))
   (g$set-rib-sealed/freq!$8474$kwCBQ
     g$set-rib-sealed/freq!$12184$kwCBQ
     (record-mutator g$9456$8461$kwCBQ '3))
   (g$set-rib-cache!$8475$kwCBQ
     g$set-rib-cache!$12185$kwCBQ
     (record-mutator g$9456$8461$kwCBQ '4))
   (g$make-empty-rib$8476$kwCBQ
     g$make-empty-rib$12186$kwCBQ
     (case-lambda (() (g$make-rib$8465$kwCBQ '() '() '() '#f '#f))))
   (g$make-cache-rib$8477$kwCBQ
     g$make-cache-rib$12187$kwCBQ
     (case-lambda
       (()
        (g$make-rib$8465$kwCBQ
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6315$kwCBQ)))))
   (g$find-label$8478$kwCBQ
     g$find-label$12188$kwCBQ
     (case-lambda
       ((g$rib$8948$kwCBQ g$sym$8949$kwCBQ g$mark*$8950$kwCBQ)
        ((case-lambda
           ((g$ht$8951$kwCBQ)
            (if g$ht$8951$kwCBQ
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8952$kwCBQ)
                    ((case-lambda
                       ((g$t$8953$kwCBQ)
                        (if g$t$8953$kwCBQ (cdr g$t$8953$kwCBQ) '#f)))
                     (if g$cv$8952$kwCBQ
                       (begin
                         '#f
                         (g$assp$5803$kwCBQ
                           (case-lambda
                             ((g$m$8954$kwCBQ)
                              (g$same-marks?$8518$kwCBQ
                                g$mark*$8950$kwCBQ
                                g$m$8954$kwCBQ)))
                           g$cv$8952$kwCBQ))
                       '#f))))
                 (g$hashtable-ref$6318$kwCBQ
                   g$ht$8951$kwCBQ
                   g$sym$8949$kwCBQ
                   '#f)))
              '#f)))
         (g$rib-cache$8470$kwCBQ g$rib$8948$kwCBQ)))))
   (g$extend-rib!$8479$kwCBQ
     g$extend-rib!$12189$kwCBQ
     (case-lambda
       ((g$rib$8955$kwCBQ g$id$8956$kwCBQ g$label$8957$kwCBQ g$sd?$8958$kwCBQ)
        (letrec* ((g$find$8959$kwCBQ
                    (case-lambda
                      ((g$sym$8968$kwCBQ
                         g$mark*$8969$kwCBQ
                         g$sym*$8970$kwCBQ
                         g$mark**$8971$kwCBQ
                         g$label*$8972$kwCBQ)
                       (if (pair? g$sym*$8970$kwCBQ)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8968$kwCBQ
                                        (car g$sym*$8970$kwCBQ))
                                 (begin
                                   '#f
                                   (g$same-marks?$8518$kwCBQ
                                     g$mark*$8969$kwCBQ
                                     (car g$mark**$8971$kwCBQ)))
                                 '#f)
                             g$label*$8972$kwCBQ
                             (g$find$8959$kwCBQ
                               g$sym$8968$kwCBQ
                               g$mark*$8969$kwCBQ
                               (cdr g$sym*$8970$kwCBQ)
                               (cdr g$mark**$8971$kwCBQ)
                               (cdr g$label*$8972$kwCBQ))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$8469$kwCBQ g$rib$8955$kwCBQ)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8955$kwCBQ)
              (void))
            ((case-lambda
               ((g$sym$8960$kwCBQ g$mark*$8961$kwCBQ)
                ((case-lambda
                   ((g$sym*$8962$kwCBQ)
                    ((case-lambda
                       ((g$t$8963$kwCBQ)
                        (if g$t$8963$kwCBQ
                          ((case-lambda
                             ((g$p$8964$kwCBQ)
                              (if (not (eq? g$label$8957$kwCBQ g$p$8964$kwCBQ))
                                (g$syntax-violation$8907$kwCBQ
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8956$kwCBQ)
                                (void))))
                           g$t$8963$kwCBQ)
                          ((case-lambda
                             ((g$t$8965$kwCBQ)
                              (if g$t$8965$kwCBQ
                                ((case-lambda
                                   ((g$p$8966$kwCBQ)
                                    (if (not (eq? g$label$8957$kwCBQ
                                                  (car g$p$8966$kwCBQ)))
                                      (if (not g$sd?$8958$kwCBQ)
                                        (set-car!
                                          g$p$8966$kwCBQ
                                          g$label$8957$kwCBQ)
                                        (g$syntax-violation$8907$kwCBQ
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8956$kwCBQ))
                                      (void))))
                                 g$t$8965$kwCBQ)
                                (begin
                                  (if (g$rib-cache$8470$kwCBQ g$rib$8955$kwCBQ)
                                    (g$hashtable-update!$6322$kwCBQ
                                      (g$rib-cache$8470$kwCBQ g$rib$8955$kwCBQ)
                                      g$sym$8960$kwCBQ
                                      (case-lambda
                                        ((g$e$8967$kwCBQ)
                                         (cons
                                           (cons
                                             g$mark*$8961$kwCBQ
                                             g$label$8957$kwCBQ)
                                           g$e$8967$kwCBQ)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$8471$kwCBQ
                                    g$rib$8955$kwCBQ
                                    (cons g$sym$8960$kwCBQ g$sym*$8962$kwCBQ))
                                  (g$set-rib-mark**!$8472$kwCBQ
                                    g$rib$8955$kwCBQ
                                    (cons
                                      g$mark*$8961$kwCBQ
                                      (g$rib-mark**$8467$kwCBQ
                                        g$rib$8955$kwCBQ)))
                                  (g$set-rib-label*!$8473$kwCBQ
                                    g$rib$8955$kwCBQ
                                    (cons
                                      g$label$8957$kwCBQ
                                      (g$rib-label*$8468$kwCBQ
                                        g$rib$8955$kwCBQ)))))))
                           (if (g$memq$5804$kwCBQ
                                 g$sym$8960$kwCBQ
                                 (g$rib-sym*$8466$kwCBQ g$rib$8955$kwCBQ))
                             (begin
                               '#f
                               (g$find$8959$kwCBQ
                                 g$sym$8960$kwCBQ
                                 g$mark*$8961$kwCBQ
                                 g$sym*$8962$kwCBQ
                                 (g$rib-mark**$8467$kwCBQ g$rib$8955$kwCBQ)
                                 (g$rib-label*$8468$kwCBQ g$rib$8955$kwCBQ)))
                             '#f)))))
                     (g$find-label$8478$kwCBQ
                       g$rib$8955$kwCBQ
                       g$sym$8960$kwCBQ
                       g$mark*$8961$kwCBQ))))
                 (g$rib-sym*$8466$kwCBQ g$rib$8955$kwCBQ))))
             (g$id->sym$8517$kwCBQ g$id$8956$kwCBQ)
             (g$stx-mark*$8491$kwCBQ g$id$8956$kwCBQ)))))))
   (g$extend-rib/nc!$8480$kwCBQ
     g$extend-rib/nc!$12190$kwCBQ
     (case-lambda
       ((g$rib$8973$kwCBQ g$id$8974$kwCBQ g$label$8975$kwCBQ)
        ((case-lambda
           ((g$sym$8976$kwCBQ g$mark*$8977$kwCBQ)
            ((case-lambda
               ((g$sym*$8978$kwCBQ)
                (begin
                  (if (g$rib-cache$8470$kwCBQ g$rib$8973$kwCBQ)
                    (g$hashtable-update!$6322$kwCBQ
                      (g$rib-cache$8470$kwCBQ g$rib$8973$kwCBQ)
                      g$sym$8976$kwCBQ
                      (case-lambda
                        ((g$e$8979$kwCBQ)
                         (cons
                           (cons g$mark*$8977$kwCBQ g$label$8975$kwCBQ)
                           g$e$8979$kwCBQ)))
                      '())
                    (void))
                  (g$set-rib-sym*!$8471$kwCBQ
                    g$rib$8973$kwCBQ
                    (cons g$sym$8976$kwCBQ g$sym*$8978$kwCBQ))
                  (g$set-rib-mark**!$8472$kwCBQ
                    g$rib$8973$kwCBQ
                    (cons
                      g$mark*$8977$kwCBQ
                      (g$rib-mark**$8467$kwCBQ g$rib$8973$kwCBQ)))
                  (g$set-rib-label*!$8473$kwCBQ
                    g$rib$8973$kwCBQ
                    (cons
                      g$label$8975$kwCBQ
                      (g$rib-label*$8468$kwCBQ g$rib$8973$kwCBQ))))))
             (g$rib-sym*$8466$kwCBQ g$rib$8973$kwCBQ))))
         (g$id->sym$8517$kwCBQ g$id$8974$kwCBQ)
         (g$stx-mark*$8491$kwCBQ g$id$8974$kwCBQ)))))
   (g$make-rib-map$8481$kwCBQ
     g$make-rib-map$12191$kwCBQ
     (case-lambda
       ((g$sym*$8980$kwCBQ)
        ((case-lambda
           ((g$ht$8981$kwCBQ)
            ((letrec ((g$f$8982$kwCBQ
                        (case-lambda
                          ((g$i$8983$kwCBQ g$sym*$8984$kwCBQ)
                           (if (null? g$sym*$8984$kwCBQ)
                             g$ht$8981$kwCBQ
                             (begin
                               (g$hashtable-update!$6322$kwCBQ
                                 g$ht$8981$kwCBQ
                                 (car g$sym*$8984$kwCBQ)
                                 (case-lambda
                                   ((g$x$8985$kwCBQ)
                                    (cons g$i$8983$kwCBQ g$x$8985$kwCBQ)))
                                 '())
                               (g$f$8982$kwCBQ
                                 (+ g$i$8983$kwCBQ '1)
                                 (cdr g$sym*$8984$kwCBQ))))))))
               g$f$8982$kwCBQ)
             '0
             g$sym*$8980$kwCBQ)))
         (g$make-eq-hashtable$6315$kwCBQ)))))
   (g$seal-rib!$8482$kwCBQ
     g$seal-rib!$12192$kwCBQ
     (case-lambda
       ((g$rib$8986$kwCBQ)
        ((case-lambda
           ((g$sym*$8987$kwCBQ)
            (if (not (null? g$sym*$8987$kwCBQ))
              (begin
                (g$set-rib-sym*!$8471$kwCBQ
                  g$rib$8986$kwCBQ
                  (list->vector g$sym*$8987$kwCBQ))
                (g$set-rib-mark**!$8472$kwCBQ
                  g$rib$8986$kwCBQ
                  (list->vector (g$rib-mark**$8467$kwCBQ g$rib$8986$kwCBQ)))
                (g$set-rib-label*!$8473$kwCBQ
                  g$rib$8986$kwCBQ
                  (list->vector (g$rib-label*$8468$kwCBQ g$rib$8986$kwCBQ)))
                (g$set-rib-sealed/freq!$8474$kwCBQ
                  g$rib$8986$kwCBQ
                  (g$make-rib-map$8481$kwCBQ g$sym*$8987$kwCBQ)))
              (void))))
         (g$rib-sym*$8466$kwCBQ g$rib$8986$kwCBQ)))))
   (g$unseal-rib!$8483$kwCBQ
     g$unseal-rib!$12193$kwCBQ
     (case-lambda
       ((g$rib$8988$kwCBQ)
        (if (g$rib-sealed/freq$8469$kwCBQ g$rib$8988$kwCBQ)
          (begin
            (g$set-rib-sealed/freq!$8474$kwCBQ g$rib$8988$kwCBQ '#f)
            (g$set-rib-sym*!$8471$kwCBQ
              g$rib$8988$kwCBQ
              (vector->list (g$rib-sym*$8466$kwCBQ g$rib$8988$kwCBQ)))
            (g$set-rib-mark**!$8472$kwCBQ
              g$rib$8988$kwCBQ
              (vector->list (g$rib-mark**$8467$kwCBQ g$rib$8988$kwCBQ)))
            (g$set-rib-label*!$8473$kwCBQ
              g$rib$8988$kwCBQ
              (vector->list (g$rib-label*$8468$kwCBQ g$rib$8988$kwCBQ))))
          (void)))))
   (g$make-full-rib$8484$kwCBQ
     g$make-full-rib$12194$kwCBQ
     (case-lambda
       ((g$id*$8989$kwCBQ g$label*$8990$kwCBQ)
        ((case-lambda
           ((g$r$8991$kwCBQ)
            (begin (g$seal-rib!$8482$kwCBQ g$r$8991$kwCBQ) g$r$8991$kwCBQ)))
         (g$make-rib$8465$kwCBQ
           (g$map$5812$kwCBQ g$id->sym$8517$kwCBQ g$id*$8989$kwCBQ)
           (g$map$5812$kwCBQ g$stx-mark*$8491$kwCBQ g$id*$8989$kwCBQ)
           g$label*$8990$kwCBQ
           '#f
           '#f)))))
   (g$9487$8485$kwCBQ
     g$9487$12195$kwCBQ
     (make-record-type-descriptor
       'stx
       '#f
       'g$9490$kwCBQ
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9489$8486$kwCBQ g$9489$12196$kwCBQ '#f)
   (g$9488$8487$kwCBQ
     g$9488$12197$kwCBQ
     (make-record-constructor-descriptor
       g$9487$8485$kwCBQ
       '#f
       g$9489$8486$kwCBQ))
   (g$stx?$8488$kwCBQ
     g$stx?$12198$kwCBQ
     (record-predicate g$9487$8485$kwCBQ))
   (g$make-stx$8489$kwCBQ
     g$make-stx$12199$kwCBQ
     (record-constructor g$9488$8487$kwCBQ))
   (g$stx-expr$8490$kwCBQ
     g$stx-expr$12200$kwCBQ
     (record-accessor g$9487$8485$kwCBQ '0))
   (g$stx-mark*$8491$kwCBQ
     g$stx-mark*$12201$kwCBQ
     (record-accessor g$9487$8485$kwCBQ '1))
   (g$stx-subst*$8492$kwCBQ
     g$stx-subst*$12202$kwCBQ
     (record-accessor g$9487$8485$kwCBQ '2))
   (g$stx-ae*$8493$kwCBQ
     g$stx-ae*$12203$kwCBQ
     (record-accessor g$9487$8485$kwCBQ '3))
   (g$set-stx-expr!$8494$kwCBQ
     g$set-stx-expr!$12204$kwCBQ
     (record-mutator g$9487$8485$kwCBQ '0))
   (g$set-stx-mark*!$8495$kwCBQ
     g$set-stx-mark*!$12205$kwCBQ
     (record-mutator g$9487$8485$kwCBQ '1))
   (g$set-stx-subst*!$8496$kwCBQ
     g$set-stx-subst*!$12206$kwCBQ
     (record-mutator g$9487$8485$kwCBQ '2))
   (g$set-stx-ae*!$8497$kwCBQ
     g$set-stx-ae*!$12207$kwCBQ
     (record-mutator g$9487$8485$kwCBQ '3))
   (g$rp$8498$kwCBQ
     g$rp$12208$kwCBQ
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8992$kwCBQ g$p$8993$kwCBQ g$wr$8994$kwCBQ)
          (begin
            (display '"#<syntax " g$p$8993$kwCBQ)
            (write (g$stx->datum$8527$kwCBQ g$x$8992$kwCBQ) g$p$8993$kwCBQ)
            ((case-lambda
               ((g$expr$8995$kwCBQ)
                (if (annotation? g$expr$8995$kwCBQ)
                  ((case-lambda
                     ((g$src$8996$kwCBQ)
                      (if (pair? g$src$8996$kwCBQ)
                        (begin
                          (display '" (" g$p$8993$kwCBQ)
                          (display (cdr g$src$8996$kwCBQ) g$p$8993$kwCBQ)
                          (display '" of " g$p$8993$kwCBQ)
                          (display (car g$src$8996$kwCBQ) g$p$8993$kwCBQ)
                          (display '")" g$p$8993$kwCBQ))
                        (void))))
                   (annotation-source g$expr$8995$kwCBQ))
                  (void))))
             (g$stx-expr$8490$kwCBQ g$x$8992$kwCBQ))
            (display '">" g$p$8993$kwCBQ))))))
   (g$datum->stx$8499$kwCBQ
     g$datum->stx$12209$kwCBQ
     (case-lambda
       ((g$id$8997$kwCBQ g$datum$8998$kwCBQ)
        (g$make-stx$8489$kwCBQ
          g$datum$8998$kwCBQ
          (g$stx-mark*$8491$kwCBQ g$id$8997$kwCBQ)
          (g$stx-subst*$8492$kwCBQ g$id$8997$kwCBQ)
          (g$stx-ae*$8493$kwCBQ g$id$8997$kwCBQ)))))
   (g$gen-mark$8500$kwCBQ
     g$gen-mark$12210$kwCBQ
     (case-lambda (() (string '#\m))))
   (g$anti-mark$8501$kwCBQ g$anti-mark$12211$kwCBQ '#f)
   (g$anti-mark?$8502$kwCBQ g$anti-mark?$12212$kwCBQ not)
   (g$join-wraps$8503$kwCBQ
     g$join-wraps$12213$kwCBQ
     (case-lambda
       ((g$m1*$8999$kwCBQ g$s1*$9000$kwCBQ g$ae1*$9001$kwCBQ g$e$9002$kwCBQ)
        (letrec* ((g$cancel$9003$kwCBQ
                    (case-lambda
                      ((g$ls1$9007$kwCBQ g$ls2$9008$kwCBQ)
                       ((letrec ((g$f$9009$kwCBQ
                                   (case-lambda
                                     ((g$x$9010$kwCBQ g$ls1$9011$kwCBQ)
                                      (if (null? g$ls1$9011$kwCBQ)
                                        (cdr g$ls2$9008$kwCBQ)
                                        (cons
                                          g$x$9010$kwCBQ
                                          (g$f$9009$kwCBQ
                                            (car g$ls1$9011$kwCBQ)
                                            (cdr g$ls1$9011$kwCBQ))))))))
                          g$f$9009$kwCBQ)
                        (car g$ls1$9007$kwCBQ)
                        (cdr g$ls1$9007$kwCBQ))))))
          ((case-lambda
             ((g$m2*$9004$kwCBQ g$s2*$9005$kwCBQ g$ae2*$9006$kwCBQ)
              (if (if (not (null? g$m1*$8999$kwCBQ))
                    (if (not (null? g$m2*$9004$kwCBQ))
                      (begin
                        '#f
                        (g$anti-mark?$8502$kwCBQ (car g$m2*$9004$kwCBQ)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$9003$kwCBQ g$m1*$8999$kwCBQ g$m2*$9004$kwCBQ)
                  (g$cancel$9003$kwCBQ g$s1*$9000$kwCBQ g$s2*$9005$kwCBQ)
                  (g$cancel$9003$kwCBQ g$ae1*$9001$kwCBQ g$ae2*$9006$kwCBQ))
                (values
                  (append g$m1*$8999$kwCBQ g$m2*$9004$kwCBQ)
                  (append g$s1*$9000$kwCBQ g$s2*$9005$kwCBQ)
                  (append g$ae1*$9001$kwCBQ g$ae2*$9006$kwCBQ)))))
           (g$stx-mark*$8491$kwCBQ g$e$9002$kwCBQ)
           (g$stx-subst*$8492$kwCBQ g$e$9002$kwCBQ)
           (g$stx-ae*$8493$kwCBQ g$e$9002$kwCBQ))))))
   (g$mkstx$8504$kwCBQ
     g$mkstx$12214$kwCBQ
     (case-lambda
       ((g$e$9012$kwCBQ g$m*$9013$kwCBQ g$s*$9014$kwCBQ g$ae*$9015$kwCBQ)
        (if (if (g$stx?$8488$kwCBQ g$e$9012$kwCBQ)
              (begin '#f (not (g$top-marked?$8454$kwCBQ g$m*$9013$kwCBQ)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$8503$kwCBQ
                 g$m*$9013$kwCBQ
                 g$s*$9014$kwCBQ
                 g$ae*$9015$kwCBQ
                 g$e$9012$kwCBQ)))
            (case-lambda
              ((g$m*$9019$kwCBQ g$s*$9020$kwCBQ g$ae*$9021$kwCBQ)
               ((case-lambda
                  ((g$ae*$9022$kwCBQ g$s*$9023$kwCBQ g$m*$9024$kwCBQ)
                   (g$make-stx$8489$kwCBQ
                     (g$stx-expr$8490$kwCBQ g$e$9012$kwCBQ)
                     g$m*$9024$kwCBQ
                     g$s*$9023$kwCBQ
                     g$ae*$9022$kwCBQ)))
                g$ae*$9021$kwCBQ
                g$s*$9020$kwCBQ
                g$m*$9019$kwCBQ))))
          (g$make-stx$8489$kwCBQ
            g$e$9012$kwCBQ
            g$m*$9013$kwCBQ
            g$s*$9014$kwCBQ
            g$ae*$9015$kwCBQ)))))
   (g$add-mark$8505$kwCBQ
     g$add-mark$12215$kwCBQ
     (case-lambda
       ((g$m$9025$kwCBQ g$e$9026$kwCBQ g$ae$9027$kwCBQ)
        (g$mkstx$8504$kwCBQ
          g$e$9026$kwCBQ
          (list g$m$9025$kwCBQ)
          '(shift)
          (list g$ae$9027$kwCBQ)))))
   (g$add-subst$8506$kwCBQ
     g$add-subst$12216$kwCBQ
     (case-lambda
       ((g$subst$9028$kwCBQ g$e$9029$kwCBQ)
        (g$mkstx$8504$kwCBQ g$e$9029$kwCBQ '() (list g$subst$9028$kwCBQ) '()))))
   (g$syntax-kind?$8507$kwCBQ
     g$syntax-kind?$12217$kwCBQ
     (case-lambda
       ((g$x$9030$kwCBQ g$p?$9031$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$9030$kwCBQ)
          (g$syntax-kind?$8507$kwCBQ
            (g$stx-expr$8490$kwCBQ g$x$9030$kwCBQ)
            g$p?$9031$kwCBQ)
          (if (annotation? g$x$9030$kwCBQ)
            (g$syntax-kind?$8507$kwCBQ
              (annotation-expression g$x$9030$kwCBQ)
              g$p?$9031$kwCBQ)
            (g$p?$9031$kwCBQ g$x$9030$kwCBQ))))))
   (g$syntax-vector->list$8508$kwCBQ
     g$syntax-vector->list$12218$kwCBQ
     (case-lambda
       ((g$x$9032$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$9032$kwCBQ)
          ((case-lambda
             ((g$ls$9033$kwCBQ g$m*$9034$kwCBQ g$s*$9035$kwCBQ g$ae*$9036$kwCBQ)
              (g$map$5812$kwCBQ
                (case-lambda
                  ((g$x$9037$kwCBQ)
                   (g$mkstx$8504$kwCBQ
                     g$x$9037$kwCBQ
                     g$m*$9034$kwCBQ
                     g$s*$9035$kwCBQ
                     g$ae*$9036$kwCBQ)))
                g$ls$9033$kwCBQ)))
           (g$syntax-vector->list$8508$kwCBQ
             (g$stx-expr$8490$kwCBQ g$x$9032$kwCBQ))
           (g$stx-mark*$8491$kwCBQ g$x$9032$kwCBQ)
           (g$stx-subst*$8492$kwCBQ g$x$9032$kwCBQ)
           (g$stx-ae*$8493$kwCBQ g$x$9032$kwCBQ))
          (if (annotation? g$x$9032$kwCBQ)
            (g$syntax-vector->list$8508$kwCBQ
              (annotation-expression g$x$9032$kwCBQ))
            (if (vector? g$x$9032$kwCBQ)
              (vector->list g$x$9032$kwCBQ)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$9032$kwCBQ)))))))
   (g$syntax-pair?$8509$kwCBQ
     g$syntax-pair?$12219$kwCBQ
     (case-lambda
       ((g$x$9038$kwCBQ) (g$syntax-kind?$8507$kwCBQ g$x$9038$kwCBQ pair?))))
   (g$syntax-vector?$8510$kwCBQ
     g$syntax-vector?$12220$kwCBQ
     (case-lambda
       ((g$x$9039$kwCBQ) (g$syntax-kind?$8507$kwCBQ g$x$9039$kwCBQ vector?))))
   (g$syntax-null?$8511$kwCBQ
     g$syntax-null?$12221$kwCBQ
     (case-lambda
       ((g$x$9040$kwCBQ) (g$syntax-kind?$8507$kwCBQ g$x$9040$kwCBQ null?))))
   (g$syntax-list?$8512$kwCBQ
     g$syntax-list?$12222$kwCBQ
     (case-lambda
       ((g$x$9041$kwCBQ)
        ((case-lambda
           ((g$t$9042$kwCBQ)
            (if g$t$9042$kwCBQ
              g$t$9042$kwCBQ
              (begin
                '#f
                (if (g$syntax-pair?$8509$kwCBQ g$x$9041$kwCBQ)
                  (begin
                    '#f
                    (g$syntax-list?$8512$kwCBQ
                      (g$syntax-cdr$8514$kwCBQ g$x$9041$kwCBQ)))
                  '#f)))))
         (g$syntax-null?$8511$kwCBQ g$x$9041$kwCBQ)))))
   (g$syntax-car$8513$kwCBQ
     g$syntax-car$12223$kwCBQ
     (case-lambda
       ((g$x$9043$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$9043$kwCBQ)
          (g$mkstx$8504$kwCBQ
            (g$syntax-car$8513$kwCBQ (g$stx-expr$8490$kwCBQ g$x$9043$kwCBQ))
            (g$stx-mark*$8491$kwCBQ g$x$9043$kwCBQ)
            (g$stx-subst*$8492$kwCBQ g$x$9043$kwCBQ)
            (g$stx-ae*$8493$kwCBQ g$x$9043$kwCBQ))
          (if (annotation? g$x$9043$kwCBQ)
            (g$syntax-car$8513$kwCBQ (annotation-expression g$x$9043$kwCBQ))
            (if (pair? g$x$9043$kwCBQ)
              (car g$x$9043$kwCBQ)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$9043$kwCBQ)))))))
   (g$syntax-cdr$8514$kwCBQ
     g$syntax-cdr$12224$kwCBQ
     (case-lambda
       ((g$x$9044$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$9044$kwCBQ)
          (g$mkstx$8504$kwCBQ
            (g$syntax-cdr$8514$kwCBQ (g$stx-expr$8490$kwCBQ g$x$9044$kwCBQ))
            (g$stx-mark*$8491$kwCBQ g$x$9044$kwCBQ)
            (g$stx-subst*$8492$kwCBQ g$x$9044$kwCBQ)
            (g$stx-ae*$8493$kwCBQ g$x$9044$kwCBQ))
          (if (annotation? g$x$9044$kwCBQ)
            (g$syntax-cdr$8514$kwCBQ (annotation-expression g$x$9044$kwCBQ))
            (if (pair? g$x$9044$kwCBQ)
              (cdr g$x$9044$kwCBQ)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$9044$kwCBQ)))))))
   (g$syntax->list$8515$kwCBQ
     g$syntax->list$12225$kwCBQ
     (case-lambda
       ((g$x$9045$kwCBQ)
        (if (g$syntax-pair?$8509$kwCBQ g$x$9045$kwCBQ)
          (cons
            (g$syntax-car$8513$kwCBQ g$x$9045$kwCBQ)
            (g$syntax->list$8515$kwCBQ
              (g$syntax-cdr$8514$kwCBQ g$x$9045$kwCBQ)))
          (if (g$syntax-null?$8511$kwCBQ g$x$9045$kwCBQ)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$9045$kwCBQ))))))
   (g$id?$8516$kwCBQ
     g$id?$12226$kwCBQ
     (case-lambda
       ((g$x$9046$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$9046$kwCBQ)
          (begin
            '#f
            ((case-lambda
               ((g$expr$9047$kwCBQ)
                (symbol?
                  (if (annotation? g$expr$9047$kwCBQ)
                    (annotation-stripped g$expr$9047$kwCBQ)
                    g$expr$9047$kwCBQ))))
             (g$stx-expr$8490$kwCBQ g$x$9046$kwCBQ)))
          '#f))))
   (g$id->sym$8517$kwCBQ
     g$id->sym$12227$kwCBQ
     (case-lambda
       ((g$x$9048$kwCBQ)
        (begin
          (if (not (g$stx?$8488$kwCBQ g$x$9048$kwCBQ))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$9048$kwCBQ)
            (void))
          ((case-lambda
             ((g$expr$9049$kwCBQ)
              ((case-lambda
                 ((g$sym$9050$kwCBQ)
                  (if (symbol? g$sym$9050$kwCBQ)
                    g$sym$9050$kwCBQ
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$9048$kwCBQ))))
               (if (annotation? g$expr$9049$kwCBQ)
                 (annotation-stripped g$expr$9049$kwCBQ)
                 g$expr$9049$kwCBQ))))
           (g$stx-expr$8490$kwCBQ g$x$9048$kwCBQ))))))
   (g$same-marks?$8518$kwCBQ
     g$same-marks?$12228$kwCBQ
     (case-lambda
       ((g$x$9051$kwCBQ g$y$9052$kwCBQ)
        ((case-lambda
           ((g$t$9053$kwCBQ)
            (if g$t$9053$kwCBQ
              g$t$9053$kwCBQ
              (begin
                '#f
                (if (pair? g$x$9051$kwCBQ)
                  (if (pair? g$y$9052$kwCBQ)
                    (if (eq? (car g$x$9051$kwCBQ) (car g$y$9052$kwCBQ))
                      (begin
                        '#f
                        (g$same-marks?$8518$kwCBQ
                          (cdr g$x$9051$kwCBQ)
                          (cdr g$y$9052$kwCBQ)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$9051$kwCBQ) (begin '#f (null? g$y$9052$kwCBQ)) '#f)))))
   (g$bound-id=?$8519$kwCBQ
     g$bound-id=?$12229$kwCBQ
     (case-lambda
       ((g$x$9054$kwCBQ g$y$9055$kwCBQ)
        (if (eq? (g$id->sym$8517$kwCBQ g$x$9054$kwCBQ)
                 (g$id->sym$8517$kwCBQ g$y$9055$kwCBQ))
          (begin
            '#f
            (g$same-marks?$8518$kwCBQ
              (g$stx-mark*$8491$kwCBQ g$x$9054$kwCBQ)
              (g$stx-mark*$8491$kwCBQ g$y$9055$kwCBQ)))
          '#f))))
   (g$free-id=?$8520$kwCBQ
     g$free-id=?$12230$kwCBQ
     (case-lambda
       ((g$i$9056$kwCBQ g$j$9057$kwCBQ)
        ((case-lambda
           ((g$t0$9058$kwCBQ g$t1$9059$kwCBQ)
            (if ((case-lambda
                   ((g$t$9060$kwCBQ)
                    (if g$t$9060$kwCBQ
                      g$t$9060$kwCBQ
                      (begin '#f g$t1$9059$kwCBQ))))
                 g$t0$9058$kwCBQ)
              (eq? g$t0$9058$kwCBQ g$t1$9059$kwCBQ)
              (eq? (g$id->sym$8517$kwCBQ g$i$9056$kwCBQ)
                   (g$id->sym$8517$kwCBQ g$j$9057$kwCBQ)))))
         (g$id->real-label$8530$kwCBQ g$i$9056$kwCBQ)
         (g$id->real-label$8530$kwCBQ g$j$9057$kwCBQ)))))
   (g$valid-bound-ids?$8521$kwCBQ
     g$valid-bound-ids?$12231$kwCBQ
     (case-lambda
       ((g$id*$9061$kwCBQ)
        (if (g$for-all$5810$kwCBQ g$id?$8516$kwCBQ g$id*$9061$kwCBQ)
          (begin '#f (g$distinct-bound-ids?$8522$kwCBQ g$id*$9061$kwCBQ))
          '#f))))
   (g$distinct-bound-ids?$8522$kwCBQ
     g$distinct-bound-ids?$12232$kwCBQ
     (case-lambda
       ((g$id*$9062$kwCBQ)
        ((case-lambda
           ((g$t$9063$kwCBQ)
            (if g$t$9063$kwCBQ
              g$t$9063$kwCBQ
              (begin
                '#f
                (if (not (g$bound-id-member?$8523$kwCBQ
                           (car g$id*$9062$kwCBQ)
                           (cdr g$id*$9062$kwCBQ)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8522$kwCBQ (cdr g$id*$9062$kwCBQ)))
                  '#f)))))
         (null? g$id*$9062$kwCBQ)))))
   (g$bound-id-member?$8523$kwCBQ
     g$bound-id-member?$12233$kwCBQ
     (case-lambda
       ((g$id$9064$kwCBQ g$id*$9065$kwCBQ)
        (if (pair? g$id*$9065$kwCBQ)
          (begin
            '#f
            ((case-lambda
               ((g$t$9066$kwCBQ)
                (if g$t$9066$kwCBQ
                  g$t$9066$kwCBQ
                  (begin
                    '#f
                    (g$bound-id-member?$8523$kwCBQ
                      g$id$9064$kwCBQ
                      (cdr g$id*$9065$kwCBQ))))))
             (g$bound-id=?$8519$kwCBQ g$id$9064$kwCBQ (car g$id*$9065$kwCBQ))))
          '#f))))
   (g$self-evaluating?$8524$kwCBQ
     g$self-evaluating?$12234$kwCBQ
     (case-lambda
       ((g$x$9067$kwCBQ)
        ((case-lambda
           ((g$t$9068$kwCBQ)
            (if g$t$9068$kwCBQ
              g$t$9068$kwCBQ
              ((case-lambda
                 ((g$t$9069$kwCBQ)
                  (if g$t$9069$kwCBQ
                    g$t$9069$kwCBQ
                    ((case-lambda
                       ((g$t$9070$kwCBQ)
                        (if g$t$9070$kwCBQ
                          g$t$9070$kwCBQ
                          ((case-lambda
                             ((g$t$9071$kwCBQ)
                              (if g$t$9071$kwCBQ
                                g$t$9071$kwCBQ
                                (begin '#f (bytevector? g$x$9067$kwCBQ)))))
                           (boolean? g$x$9067$kwCBQ)))))
                     (char? g$x$9067$kwCBQ)))))
               (string? g$x$9067$kwCBQ)))))
         (number? g$x$9067$kwCBQ)))))
   (g$strip-annotations$8525$kwCBQ
     g$strip-annotations$12235$kwCBQ
     (case-lambda
       ((g$x$9072$kwCBQ)
        (if (pair? g$x$9072$kwCBQ)
          (cons
            (g$strip-annotations$8525$kwCBQ (car g$x$9072$kwCBQ))
            (g$strip-annotations$8525$kwCBQ (cdr g$x$9072$kwCBQ)))
          (if (vector? g$x$9072$kwCBQ)
            (g$vector-map$6089$kwCBQ
              g$strip-annotations$8525$kwCBQ
              g$x$9072$kwCBQ)
            (if (annotation? g$x$9072$kwCBQ)
              (annotation-stripped g$x$9072$kwCBQ)
              g$x$9072$kwCBQ))))))
   (g$strip$8526$kwCBQ
     g$strip$12236$kwCBQ
     (case-lambda
       ((g$x$9073$kwCBQ g$m*$9074$kwCBQ)
        (if (g$top-marked?$8454$kwCBQ g$m*$9074$kwCBQ)
          (if ((case-lambda
                 ((g$t$9075$kwCBQ)
                  (if g$t$9075$kwCBQ
                    g$t$9075$kwCBQ
                    ((case-lambda
                       ((g$t$9076$kwCBQ)
                        (if g$t$9076$kwCBQ
                          g$t$9076$kwCBQ
                          (begin
                            '#f
                            (if (vector? g$x$9073$kwCBQ)
                              (if (> (vector-length g$x$9073$kwCBQ) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$9073$kwCBQ '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$9073$kwCBQ)
                       (begin '#f (annotation? (car g$x$9073$kwCBQ)))
                       '#f)))))
               (annotation? g$x$9073$kwCBQ))
            (g$strip-annotations$8525$kwCBQ g$x$9073$kwCBQ)
            g$x$9073$kwCBQ)
          ((letrec ((g$f$9077$kwCBQ
                      (case-lambda
                        ((g$x$9078$kwCBQ)
                         (if (g$stx?$8488$kwCBQ g$x$9078$kwCBQ)
                           (g$strip$8526$kwCBQ
                             (g$stx-expr$8490$kwCBQ g$x$9078$kwCBQ)
                             (g$stx-mark*$8491$kwCBQ g$x$9078$kwCBQ))
                           (if (annotation? g$x$9078$kwCBQ)
                             (annotation-stripped g$x$9078$kwCBQ)
                             (if (pair? g$x$9078$kwCBQ)
                               ((case-lambda
                                  ((g$a$9079$kwCBQ g$d$9080$kwCBQ)
                                   (if (if (eq? g$a$9079$kwCBQ
                                                (car g$x$9078$kwCBQ))
                                         (begin
                                           '#f
                                           (eq? g$d$9080$kwCBQ
                                                (cdr g$x$9078$kwCBQ)))
                                         '#f)
                                     g$x$9078$kwCBQ
                                     (cons g$a$9079$kwCBQ g$d$9080$kwCBQ))))
                                (g$f$9077$kwCBQ (car g$x$9078$kwCBQ))
                                (g$f$9077$kwCBQ (cdr g$x$9078$kwCBQ)))
                               (if (vector? g$x$9078$kwCBQ)
                                 ((case-lambda
                                    ((g$old$9081$kwCBQ)
                                     ((case-lambda
                                        ((g$new$9082$kwCBQ)
                                         (if (g$for-all$5810$kwCBQ
                                               eq?
                                               g$old$9081$kwCBQ
                                               g$new$9082$kwCBQ)
                                           g$x$9078$kwCBQ
                                           (list->vector g$new$9082$kwCBQ))))
                                      (g$map$5812$kwCBQ
                                        g$f$9077$kwCBQ
                                        g$old$9081$kwCBQ))))
                                  (vector->list g$x$9078$kwCBQ))
                                 g$x$9078$kwCBQ))))))))
             g$f$9077$kwCBQ)
           g$x$9073$kwCBQ)))))
   (g$stx->datum$8527$kwCBQ
     g$stx->datum$12237$kwCBQ
     (case-lambda
       ((g$x$9083$kwCBQ) (g$strip$8526$kwCBQ g$x$9083$kwCBQ '()))))
   (g$same-marks*?$8528$kwCBQ
     g$same-marks*?$12238$kwCBQ
     (case-lambda
       ((g$mark*$9084$kwCBQ g$mark**$9085$kwCBQ g$si$9086$kwCBQ)
        (if (null? g$si$9086$kwCBQ)
          '#f
          (if (g$same-marks?$8518$kwCBQ
                g$mark*$9084$kwCBQ
                (vector-ref g$mark**$9085$kwCBQ (car g$si$9086$kwCBQ)))
            (car g$si$9086$kwCBQ)
            (g$same-marks*?$8528$kwCBQ
              g$mark*$9084$kwCBQ
              g$mark**$9085$kwCBQ
              (cdr g$si$9086$kwCBQ)))))))
   (g$id->label$8529$kwCBQ
     g$id->label$12239$kwCBQ
     (case-lambda
       ((g$id$9087$kwCBQ)
        ((case-lambda
           ((g$t$9088$kwCBQ)
            (if g$t$9088$kwCBQ
              g$t$9088$kwCBQ
              (begin
                '#f
                ((case-lambda
                   ((g$t$9089$kwCBQ)
                    (if g$t$9089$kwCBQ
                      ((case-lambda
                         ((g$env$9090$kwCBQ)
                          ((case-lambda
                             ((g$rib$9091$kwCBQ)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$8459$kwCBQ
                                     g$id$9087$kwCBQ
                                     g$rib$9091$kwCBQ
                                     '#f)))
                                (case-lambda
                                  ((g$lab$9094$kwCBQ g$_loc$9095$kwCBQ)
                                   ((case-lambda
                                      ((g$_loc$9096$kwCBQ g$lab$9097$kwCBQ)
                                       (begin
                                         (g$extend-rib!$8479$kwCBQ
                                           g$rib$9091$kwCBQ
                                           g$id$9087$kwCBQ
                                           g$lab$9097$kwCBQ
                                           '#t)
                                         g$lab$9097$kwCBQ)))
                                    g$_loc$9095$kwCBQ
                                    g$lab$9094$kwCBQ))))))
                           (g$interaction-env-rib$8873$kwCBQ
                             g$env$9090$kwCBQ))))
                       g$t$9089$kwCBQ)
                      '#f)))
                 (g$top-level-context$8915$kwCBQ))))))
         (g$id->real-label$8530$kwCBQ g$id$9087$kwCBQ)))))
   (g$id->real-label$8530$kwCBQ
     g$id->real-label$12240$kwCBQ
     (case-lambda
       ((g$id$9098$kwCBQ)
        ((case-lambda
           ((g$sym$9099$kwCBQ)
            ((letrec ((g$search$9100$kwCBQ
                        (case-lambda
                          ((g$subst*$9101$kwCBQ g$mark*$9102$kwCBQ)
                           (if (null? g$subst*$9101$kwCBQ)
                             '#f
                             (if (eq? (car g$subst*$9101$kwCBQ) 'shift)
                               (g$search$9100$kwCBQ
                                 (cdr g$subst*$9101$kwCBQ)
                                 (cdr g$mark*$9102$kwCBQ))
                               ((case-lambda
                                  ((g$rib$9103$kwCBQ)
                                   ((case-lambda
                                      ((g$t$9104$kwCBQ)
                                       (if g$t$9104$kwCBQ
                                         ((case-lambda
                                            ((g$ht$9105$kwCBQ)
                                             ((case-lambda
                                                ((g$si$9106$kwCBQ)
                                                 ((case-lambda
                                                    ((g$i$9107$kwCBQ)
                                                     (if g$i$9107$kwCBQ
                                                       (vector-ref
                                                         (g$rib-label*$8468$kwCBQ
                                                           g$rib$9103$kwCBQ)
                                                         g$i$9107$kwCBQ)
                                                       (g$search$9100$kwCBQ
                                                         (cdr g$subst*$9101$kwCBQ)
                                                         g$mark*$9102$kwCBQ))))
                                                  (if g$si$9106$kwCBQ
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8528$kwCBQ
                                                        g$mark*$9102$kwCBQ
                                                        (g$rib-mark**$8467$kwCBQ
                                                          g$rib$9103$kwCBQ)
                                                        (reverse
                                                          g$si$9106$kwCBQ)))
                                                    '#f))))
                                              (g$hashtable-ref$6318$kwCBQ
                                                g$ht$9105$kwCBQ
                                                g$sym$9099$kwCBQ
                                                '#f))))
                                          g$t$9104$kwCBQ)
                                         ((case-lambda
                                            ((g$t$9108$kwCBQ)
                                             (if g$t$9108$kwCBQ
                                               g$t$9108$kwCBQ
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$9109$kwCBQ
                                                             (case-lambda
                                                               ((g$sym*$9110$kwCBQ
                                                                  g$mark**$9111$kwCBQ
                                                                  g$label*$9112$kwCBQ)
                                                                (if (null?
                                                                      g$sym*$9110$kwCBQ)
                                                                  (g$search$9100$kwCBQ
                                                                    (cdr g$subst*$9101$kwCBQ)
                                                                    g$mark*$9102$kwCBQ)
                                                                  (if (if (eq? (car g$sym*$9110$kwCBQ)
                                                                               g$sym$9099$kwCBQ)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8518$kwCBQ
                                                                            (car g$mark**$9111$kwCBQ)
                                                                            g$mark*$9102$kwCBQ))
                                                                        '#f)
                                                                    (car g$label*$9112$kwCBQ)
                                                                    (g$f$9109$kwCBQ
                                                                      (cdr g$sym*$9110$kwCBQ)
                                                                      (cdr g$mark**$9111$kwCBQ)
                                                                      (cdr g$label*$9112$kwCBQ))))))))
                                                    g$f$9109$kwCBQ)
                                                  (g$rib-sym*$8466$kwCBQ
                                                    g$rib$9103$kwCBQ)
                                                  (g$rib-mark**$8467$kwCBQ
                                                    g$rib$9103$kwCBQ)
                                                  (g$rib-label*$8468$kwCBQ
                                                    g$rib$9103$kwCBQ))))))
                                          (g$find-label$8478$kwCBQ
                                            g$rib$9103$kwCBQ
                                            g$sym$9099$kwCBQ
                                            g$mark*$9102$kwCBQ)))))
                                    (g$rib-sealed/freq$8469$kwCBQ
                                      g$rib$9103$kwCBQ))))
                                (car g$subst*$9101$kwCBQ))))))))
               g$search$9100$kwCBQ)
             (g$stx-subst*$8492$kwCBQ g$id$9098$kwCBQ)
             (g$stx-mark*$8491$kwCBQ g$id$9098$kwCBQ))))
         (g$id->sym$8517$kwCBQ g$id$9098$kwCBQ)))))
   (g$label->binding$8531$kwCBQ
     g$label->binding$12241$kwCBQ
     (case-lambda
       ((g$x$9113$kwCBQ g$r$9114$kwCBQ)
        (if (not g$x$9113$kwCBQ)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$9115$kwCBQ)
              (if g$t$9115$kwCBQ
                ((case-lambda
                   ((g$b$9116$kwCBQ)
                    (if (if (pair? g$b$9116$kwCBQ)
                          (begin '#f (eq? (car g$b$9116$kwCBQ) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$5812$kwCBQ
                          g$bless$8758$kwCBQ
                          (cdr g$b$9116$kwCBQ)))
                      (if (if (pair? g$b$9116$kwCBQ)
                            (begin '#f (eq? (car g$b$9116$kwCBQ) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$9117$kwCBQ g$loc$9118$kwCBQ)
                            (cons '$rtd (symbol-value g$loc$9118$kwCBQ))))
                         (g$cadr$6038$kwCBQ g$b$9116$kwCBQ)
                         (g$cddr$6040$kwCBQ g$b$9116$kwCBQ))
                        g$b$9116$kwCBQ))))
                 g$t$9115$kwCBQ)
                ((case-lambda
                   ((g$t$9119$kwCBQ)
                    (if g$t$9119$kwCBQ
                      (cdr g$t$9119$kwCBQ)
                      ((case-lambda
                         ((g$t$9120$kwCBQ)
                          (if g$t$9120$kwCBQ
                            ((case-lambda
                               ((g$env$9121$kwCBQ)
                                ((case-lambda
                                   ((g$t$9122$kwCBQ)
                                    (if g$t$9122$kwCBQ
                                      ((case-lambda
                                         ((g$p$9123$kwCBQ)
                                          (g$cons*$5814$kwCBQ
                                            'lexical
                                            (cdr g$p$9123$kwCBQ)
                                            '#f)))
                                       g$t$9122$kwCBQ)
                                      '(displaced-lexical . #f))))
                                 (g$assq$5800$kwCBQ
                                   g$x$9113$kwCBQ
                                   (g$interaction-env-locs$8875$kwCBQ
                                     g$env$9121$kwCBQ)))))
                             g$t$9120$kwCBQ)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$8915$kwCBQ)))))
                 (g$assq$5800$kwCBQ g$x$9113$kwCBQ g$r$9114$kwCBQ)))))
           (g$imported-label->binding$8325$kwCBQ g$x$9113$kwCBQ))))))
   (g$make-binding$8532$kwCBQ g$make-binding$12242$kwCBQ cons)
   (g$binding-type$8533$kwCBQ g$binding-type$12243$kwCBQ car)
   (g$binding-value$8534$kwCBQ g$binding-value$12244$kwCBQ cdr)
   (g$raise-unbound-error$8535$kwCBQ
     g$raise-unbound-error$12245$kwCBQ
     (case-lambda
       ((g$id$9124$kwCBQ)
        (g$syntax-violation*$8906$kwCBQ
          '#f
          '"unbound identifier"
          g$id$9124$kwCBQ
          (g$make-undefined-violation$6664$kwCBQ)))))
   (g$syntax-type$8536$kwCBQ
     g$syntax-type$12246$kwCBQ
     (case-lambda
       ((g$e$9125$kwCBQ g$r$9126$kwCBQ)
        (if (g$id?$8516$kwCBQ g$e$9125$kwCBQ)
          ((case-lambda
             ((g$id$9127$kwCBQ)
              ((case-lambda
                 ((g$label$9128$kwCBQ)
                  ((case-lambda
                     ((g$b$9129$kwCBQ)
                      ((case-lambda
                         ((g$type$9130$kwCBQ)
                          (begin
                            (if (not g$label$9128$kwCBQ)
                              (g$raise-unbound-error$8535$kwCBQ g$id$9127$kwCBQ)
                              (void))
                            ((case-lambda
                               ((g$t$9131$kwCBQ)
                                (if (g$memv$5805$kwCBQ
                                      g$t$9131$kwCBQ
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$9130$kwCBQ
                                    (g$binding-value$8534$kwCBQ g$b$9129$kwCBQ)
                                    g$id$9127$kwCBQ)
                                  (values 'other '#f '#f))))
                             g$type$9130$kwCBQ))))
                       (g$binding-type$8533$kwCBQ g$b$9129$kwCBQ))))
                   (g$label->binding$8531$kwCBQ
                     g$label$9128$kwCBQ
                     g$r$9126$kwCBQ))))
               (g$id->label$8529$kwCBQ g$id$9127$kwCBQ))))
           g$e$9125$kwCBQ)
          (if (g$syntax-pair?$8509$kwCBQ g$e$9125$kwCBQ)
            ((case-lambda
               ((g$id$9132$kwCBQ)
                (if (g$id?$8516$kwCBQ g$id$9132$kwCBQ)
                  ((case-lambda
                     ((g$label$9133$kwCBQ)
                      ((case-lambda
                         ((g$b$9134$kwCBQ)
                          ((case-lambda
                             ((g$type$9135$kwCBQ)
                              (begin
                                (if (not g$label$9133$kwCBQ)
                                  (g$raise-unbound-error$8535$kwCBQ
                                    g$id$9132$kwCBQ)
                                  (void))
                                ((case-lambda
                                   ((g$t$9136$kwCBQ)
                                    (if (g$memv$5805$kwCBQ
                                          g$t$9136$kwCBQ
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$9135$kwCBQ
                                        (g$binding-value$8534$kwCBQ
                                          g$b$9134$kwCBQ)
                                        g$id$9132$kwCBQ)
                                      (values 'call '#f '#f))))
                                 g$type$9135$kwCBQ))))
                           (g$binding-type$8533$kwCBQ g$b$9134$kwCBQ))))
                       (g$label->binding$8531$kwCBQ
                         g$label$9133$kwCBQ
                         g$r$9126$kwCBQ))))
                   (g$id->label$8529$kwCBQ g$id$9132$kwCBQ))
                  (values 'call '#f '#f))))
             (g$syntax-car$8513$kwCBQ g$e$9125$kwCBQ))
            ((case-lambda
               ((g$d$9137$kwCBQ)
                (if (g$self-evaluating?$8524$kwCBQ g$d$9137$kwCBQ)
                  (values 'constant g$d$9137$kwCBQ '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8527$kwCBQ g$e$9125$kwCBQ)))))))
   (g$sanitize-binding$8544$kwCBQ
     g$sanitize-binding$12247$kwCBQ
     (case-lambda
       ((g$x$9138$kwCBQ g$src$9139$kwCBQ)
        (if (procedure? g$x$9138$kwCBQ)
          (g$cons*$5814$kwCBQ 'local-macro g$x$9138$kwCBQ g$src$9139$kwCBQ)
          (if (if (pair? g$x$9138$kwCBQ)
                (if (eq? (car g$x$9138$kwCBQ) 'macro!)
                  (begin '#f (procedure? (cdr g$x$9138$kwCBQ)))
                  '#f)
                '#f)
            (g$cons*$5814$kwCBQ
              'local-macro!
              (cdr g$x$9138$kwCBQ)
              g$src$9139$kwCBQ)
            (if (if (pair? g$x$9138$kwCBQ)
                  (begin '#f (eq? (car g$x$9138$kwCBQ) '$rtd))
                  '#f)
              g$x$9138$kwCBQ
              (if (if (pair? g$x$9138$kwCBQ)
                    (begin '#f (eq? (car g$x$9138$kwCBQ) 'ctv))
                    '#f)
                (g$cons*$5814$kwCBQ
                  'local-ctv
                  (cdr g$x$9138$kwCBQ)
                  g$src$9139$kwCBQ)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$9138$kwCBQ))))))))
   (g$make-variable-transformer$8545$kwCBQ
     g$make-variable-transformer$12248$kwCBQ
     (case-lambda
       ((g$x$9140$kwCBQ)
        (if (procedure? g$x$9140$kwCBQ)
          (cons 'macro! g$x$9140$kwCBQ)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$9140$kwCBQ)))))
   (g$make-compile-time-value$8546$kwCBQ
     g$make-compile-time-value$12249$kwCBQ
     (case-lambda ((g$x$9141$kwCBQ) (cons 'ctv g$x$9141$kwCBQ))))
   (g$variable-transformer?$8547$kwCBQ
     g$variable-transformer?$12250$kwCBQ
     (case-lambda
       ((g$x$9142$kwCBQ)
        (if (pair? g$x$9142$kwCBQ)
          (if (eq? (car g$x$9142$kwCBQ) 'macro!)
            (begin '#f (procedure? (cdr g$x$9142$kwCBQ)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8548$kwCBQ
     g$variable-transformer-procedure$12251$kwCBQ
     (case-lambda
       ((g$x$9143$kwCBQ)
        (if (g$variable-transformer?$8547$kwCBQ g$x$9143$kwCBQ)
          (cdr g$x$9143$kwCBQ)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$9143$kwCBQ)))))
   (g$make-eval-transformer$8549$kwCBQ
     g$make-eval-transformer$12252$kwCBQ
     (case-lambda
       ((g$x$9144$kwCBQ)
        (g$sanitize-binding$8544$kwCBQ
          (eval-core (g$expanded->core$8026$kwCBQ g$x$9144$kwCBQ))
          g$x$9144$kwCBQ))))
   (g$parse-define$8735$kwCBQ
     g$parse-define$12253$kwCBQ
     (case-lambda
       ((g$x$9145$kwCBQ)
        ((case-lambda
           ((g$t$9146$kwCBQ)
            ((case-lambda
               ((g$ls/false$9147$kwCBQ)
                (if (if g$ls/false$9147$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9148$kwCBQ
                               g$fmls$9149$kwCBQ
                               g$b$9150$kwCBQ
                               g$b*$9151$kwCBQ)
                             (g$id?$8516$kwCBQ g$id$9148$kwCBQ)))
                          g$ls/false$9147$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9152$kwCBQ
                         g$fmls$9153$kwCBQ
                         g$b$9154$kwCBQ
                         g$b*$9155$kwCBQ)
                       (begin
                         (g$verify-formals$8815$kwCBQ
                           g$fmls$9153$kwCBQ
                           g$x$9145$kwCBQ)
                         (values
                           g$id$9152$kwCBQ
                           (cons
                             'defun
                             (cons
                               g$fmls$9153$kwCBQ
                               (cons g$b$9154$kwCBQ g$b*$9155$kwCBQ)))))))
                    g$ls/false$9147$kwCBQ)
                  ((case-lambda
                     ((g$t$9156$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9157$kwCBQ)
                          (if (if g$ls/false$9157$kwCBQ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$9158$kwCBQ g$val$9159$kwCBQ)
                                       (g$id?$8516$kwCBQ g$id$9158$kwCBQ)))
                                    g$ls/false$9157$kwCBQ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$9160$kwCBQ g$val$9161$kwCBQ)
                                 (values
                                   g$id$9160$kwCBQ
                                   (cons 'expr g$val$9161$kwCBQ))))
                              g$ls/false$9157$kwCBQ)
                            ((case-lambda
                               ((g$t$9162$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$9163$kwCBQ)
                                    (if (if g$ls/false$9163$kwCBQ
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$9164$kwCBQ)
                                                 (g$id?$8516$kwCBQ
                                                   g$id$9164$kwCBQ)))
                                              g$ls/false$9163$kwCBQ))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$9165$kwCBQ)
                                           (values
                                             g$id$9165$kwCBQ
                                             (cons
                                               'expr
                                               (g$bless$8758$kwCBQ '(void))))))
                                        g$ls/false$9163$kwCBQ)
                                      (g$syntax-violation$8907$kwCBQ
                                        '#f
                                        '"invalid syntax"
                                        g$t$9162$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$9162$kwCBQ
                                   '(_ any)))))
                             g$t$9156$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9156$kwCBQ
                         '(_ any any)))))
                   g$t$9146$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9146$kwCBQ
               '(_ (any . any) any . each-any)))))
         g$x$9145$kwCBQ))))
   (g$parse-define-syntax$8736$kwCBQ
     g$parse-define-syntax$12254$kwCBQ
     (case-lambda
       ((g$x$9166$kwCBQ)
        ((case-lambda
           ((g$t$9167$kwCBQ)
            ((case-lambda
               ((g$ls/false$9168$kwCBQ)
                (if (if g$ls/false$9168$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9169$kwCBQ g$val$9170$kwCBQ)
                             (g$id?$8516$kwCBQ g$id$9169$kwCBQ)))
                          g$ls/false$9168$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9171$kwCBQ g$val$9172$kwCBQ)
                       (values g$id$9171$kwCBQ g$val$9172$kwCBQ)))
                    g$ls/false$9168$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9167$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9167$kwCBQ '(_ any any)))))
         g$x$9166$kwCBQ))))
   (g$scheme-stx-hashtable$8737$kwCBQ
     g$scheme-stx-hashtable$12255$kwCBQ
     (g$make-eq-hashtable$6315$kwCBQ))
   (g$scheme-stx$8738$kwCBQ
     g$scheme-stx$12256$kwCBQ
     (case-lambda
       ((g$sym$9173$kwCBQ)
        ((case-lambda
           ((g$t$9174$kwCBQ)
            (if g$t$9174$kwCBQ
              g$t$9174$kwCBQ
              (begin
                '#f
                ((case-lambda
                   ((g$subst$9175$kwCBQ)
                    ((case-lambda
                       ((g$stx$9176$kwCBQ)
                        ((case-lambda
                           ((g$stx$9177$kwCBQ)
                            (begin
                              (g$hashtable-set!$6319$kwCBQ
                                g$scheme-stx-hashtable$8737$kwCBQ
                                g$sym$9173$kwCBQ
                                g$stx$9177$kwCBQ)
                              g$stx$9177$kwCBQ)))
                         ((case-lambda
                            ((g$t$9178$kwCBQ)
                             (if g$t$9178$kwCBQ
                               ((case-lambda
                                  ((g$x$9179$kwCBQ)
                                   ((case-lambda
                                      ((g$name$9180$kwCBQ g$label$9181$kwCBQ)
                                       (g$add-subst$8506$kwCBQ
                                         (g$make-rib$8465$kwCBQ
                                           (list g$name$9180$kwCBQ)
                                           (list g$top-mark*$8453$kwCBQ)
                                           (list g$label$9181$kwCBQ)
                                           '#f
                                           '#f)
                                         g$stx$9176$kwCBQ)))
                                    (car g$x$9179$kwCBQ)
                                    (cdr g$x$9179$kwCBQ))))
                                g$t$9178$kwCBQ)
                               g$stx$9176$kwCBQ)))
                          (g$assq$5800$kwCBQ
                            g$sym$9173$kwCBQ
                            g$subst$9175$kwCBQ)))))
                     (g$make-stx$8489$kwCBQ
                       g$sym$9173$kwCBQ
                       g$top-mark*$8453$kwCBQ
                       '()
                       '()))))
                 (g$library-subst$8283$kwCBQ
                   (g$find-library-by-name$8319$kwCBQ
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6318$kwCBQ
           g$scheme-stx-hashtable$8737$kwCBQ
           g$sym$9173$kwCBQ
           '#f)))))
   (g$lexical-var$8739$kwCBQ g$lexical-var$12257$kwCBQ car)
   (g$lexical-mutable?$8740$kwCBQ g$lexical-mutable?$12258$kwCBQ cdr)
   (g$set-lexical-mutable!$8741$kwCBQ
     g$set-lexical-mutable!$12259$kwCBQ
     set-cdr!)
   (g$add-lexical$8742$kwCBQ
     g$add-lexical$12260$kwCBQ
     (case-lambda
       ((g$lab$9182$kwCBQ g$lex$9183$kwCBQ g$r$9184$kwCBQ)
        (cons
          (g$cons*$5814$kwCBQ g$lab$9182$kwCBQ 'lexical g$lex$9183$kwCBQ '#f)
          g$r$9184$kwCBQ))))
   (g$add-lexicals$8743$kwCBQ
     g$add-lexicals$12261$kwCBQ
     (case-lambda
       ((g$lab*$9185$kwCBQ g$lex*$9186$kwCBQ g$r$9187$kwCBQ)
        (if (null? g$lab*$9185$kwCBQ)
          g$r$9187$kwCBQ
          (g$add-lexicals$8743$kwCBQ
            (cdr g$lab*$9185$kwCBQ)
            (cdr g$lex*$9186$kwCBQ)
            (g$add-lexical$8742$kwCBQ
              (car g$lab*$9185$kwCBQ)
              (car g$lex*$9186$kwCBQ)
              g$r$9187$kwCBQ))))))
   (g$letrec-helper$8744$kwCBQ
     g$letrec-helper$12262$kwCBQ
     (case-lambda
       ((g$e$9188$kwCBQ g$r$9189$kwCBQ g$mr$9190$kwCBQ g$build$9191$kwCBQ)
        ((case-lambda
           ((g$t$9192$kwCBQ)
            ((case-lambda
               ((g$ls/false$9193$kwCBQ)
                (if g$ls/false$9193$kwCBQ
                  (apply
                    (case-lambda
                      ((g$lhs*$9194$kwCBQ
                         g$rhs*$9195$kwCBQ
                         g$b$9196$kwCBQ
                         g$b*$9197$kwCBQ)
                       (if (not (g$valid-bound-ids?$8521$kwCBQ
                                  g$lhs*$9194$kwCBQ))
                         (g$invalid-fmls-error$8760$kwCBQ
                           g$e$9188$kwCBQ
                           g$lhs*$9194$kwCBQ)
                         ((case-lambda
                            ((g$lex*$9198$kwCBQ g$lab*$9199$kwCBQ)
                             ((case-lambda
                                ((g$rib$9200$kwCBQ g$r$9201$kwCBQ)
                                 ((case-lambda
                                    ((g$body$9202$kwCBQ g$rhs*$9203$kwCBQ)
                                     (g$build$9191$kwCBQ
                                       '#f
                                       g$lex*$9198$kwCBQ
                                       g$rhs*$9203$kwCBQ
                                       g$body$9202$kwCBQ)))
                                  (g$chi-internal$8824$kwCBQ
                                    (g$add-subst$8506$kwCBQ
                                      g$rib$9200$kwCBQ
                                      (cons g$b$9196$kwCBQ g$b*$9197$kwCBQ))
                                    g$r$9201$kwCBQ
                                    g$mr$9190$kwCBQ)
                                  (g$chi-expr*$8811$kwCBQ
                                    (g$map$5812$kwCBQ
                                      (case-lambda
                                        ((g$x$9204$kwCBQ)
                                         (g$add-subst$8506$kwCBQ
                                           g$rib$9200$kwCBQ
                                           g$x$9204$kwCBQ)))
                                      g$rhs*$9195$kwCBQ)
                                    g$r$9201$kwCBQ
                                    g$mr$9190$kwCBQ))))
                              (g$make-full-rib$8484$kwCBQ
                                g$lhs*$9194$kwCBQ
                                g$lab*$9199$kwCBQ)
                              (g$add-lexicals$8743$kwCBQ
                                g$lab*$9199$kwCBQ
                                g$lex*$9198$kwCBQ
                                g$r$9189$kwCBQ))))
                          (g$map$5812$kwCBQ
                            g$gen-lexical$8455$kwCBQ
                            g$lhs*$9194$kwCBQ)
                          (g$map$5812$kwCBQ
                            g$gen-label$8457$kwCBQ
                            g$lhs*$9194$kwCBQ)))))
                    g$ls/false$9193$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9192$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9192$kwCBQ
               '(_ #(each (any any)) any . each-any)))))
         g$e$9188$kwCBQ))))
   (g$letrec-transformer$8745$kwCBQ
     g$letrec-transformer$12263$kwCBQ
     (case-lambda
       ((g$e$9205$kwCBQ g$r$9206$kwCBQ g$mr$9207$kwCBQ)
        (g$letrec-helper$8744$kwCBQ
          g$e$9205$kwCBQ
          g$r$9206$kwCBQ
          g$mr$9207$kwCBQ
          g$build-letrec$8447$kwCBQ))))
   (g$letrec*-transformer$8746$kwCBQ
     g$letrec*-transformer$12264$kwCBQ
     (case-lambda
       ((g$e$9208$kwCBQ g$r$9209$kwCBQ g$mr$9210$kwCBQ)
        (g$letrec-helper$8744$kwCBQ
          g$e$9208$kwCBQ
          g$r$9209$kwCBQ
          g$mr$9210$kwCBQ
          g$build-letrec*$8448$kwCBQ))))
   (g$fluid-let-syntax-transformer$8747$kwCBQ
     g$fluid-let-syntax-transformer$12265$kwCBQ
     (case-lambda
       ((g$e$9211$kwCBQ g$r$9212$kwCBQ g$mr$9213$kwCBQ)
        (letrec* ((g$lookup$9214$kwCBQ
                    (case-lambda
                      ((g$x$9224$kwCBQ)
                       ((case-lambda
                          ((g$t$9225$kwCBQ)
                           (if g$t$9225$kwCBQ
                             g$t$9225$kwCBQ
                             (begin
                               '#f
                               (g$syntax-violation$8907$kwCBQ
                                 '#f
                                 '"unbound identifier"
                                 g$e$9211$kwCBQ
                                 g$x$9224$kwCBQ)))))
                        (g$id->label$8529$kwCBQ g$x$9224$kwCBQ))))))
          ((case-lambda
             ((g$t$9215$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9216$kwCBQ)
                  (if g$ls/false$9216$kwCBQ
                    (apply
                      (case-lambda
                        ((g$lhs*$9217$kwCBQ
                           g$rhs*$9218$kwCBQ
                           g$b$9219$kwCBQ
                           g$b*$9220$kwCBQ)
                         (if (not (g$valid-bound-ids?$8521$kwCBQ
                                    g$lhs*$9217$kwCBQ))
                           (g$invalid-fmls-error$8760$kwCBQ
                             g$e$9211$kwCBQ
                             g$lhs*$9217$kwCBQ)
                           ((case-lambda
                              ((g$lab*$9221$kwCBQ g$rhs*$9222$kwCBQ)
                               (g$chi-internal$8824$kwCBQ
                                 (cons g$b$9219$kwCBQ g$b*$9220$kwCBQ)
                                 (append
                                   (g$map$5812$kwCBQ
                                     cons
                                     g$lab*$9221$kwCBQ
                                     g$rhs*$9222$kwCBQ)
                                   g$r$9212$kwCBQ)
                                 (append
                                   (g$map$5812$kwCBQ
                                     cons
                                     g$lab*$9221$kwCBQ
                                     g$rhs*$9222$kwCBQ)
                                   g$mr$9213$kwCBQ))))
                            (g$map$5812$kwCBQ
                              g$lookup$9214$kwCBQ
                              g$lhs*$9217$kwCBQ)
                            (g$map$5812$kwCBQ
                              (case-lambda
                                ((g$x$9223$kwCBQ)
                                 (g$make-eval-transformer$8549$kwCBQ
                                   (g$expand-transformer$8840$kwCBQ
                                     g$x$9223$kwCBQ
                                     g$mr$9213$kwCBQ))))
                              g$rhs*$9218$kwCBQ)))))
                      g$ls/false$9216$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$9215$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9215$kwCBQ
                 '(_ #(each (any any)) any . each-any)))))
           g$e$9211$kwCBQ)))))
   (g$type-descriptor-transformer$8748$kwCBQ
     g$type-descriptor-transformer$12266$kwCBQ
     (case-lambda
       ((g$e$9226$kwCBQ g$r$9227$kwCBQ g$mr$9228$kwCBQ)
        ((case-lambda
           ((g$t$9229$kwCBQ)
            ((case-lambda
               ((g$ls/false$9230$kwCBQ)
                (if (if g$ls/false$9230$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9231$kwCBQ)
                             (g$id?$8516$kwCBQ g$id$9231$kwCBQ)))
                          g$ls/false$9230$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9232$kwCBQ)
                       ((case-lambda
                          ((g$lab$9233$kwCBQ)
                           ((case-lambda
                              ((g$b$9234$kwCBQ)
                               ((case-lambda
                                  ((g$type$9235$kwCBQ)
                                   (begin
                                     (if (not g$lab$9233$kwCBQ)
                                       (g$raise-unbound-error$8535$kwCBQ
                                         g$id$9232$kwCBQ)
                                       (void))
                                     (if (not (if (eq? g$type$9235$kwCBQ '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$8534$kwCBQ
                                                           g$b$9234$kwCBQ))))
                                                '#f))
                                       (g$syntax-violation$8907$kwCBQ
                                         '#f
                                         '"not a record type"
                                         g$e$9226$kwCBQ)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$8534$kwCBQ
                                         g$b$9234$kwCBQ)))))
                                (g$binding-type$8533$kwCBQ g$b$9234$kwCBQ))))
                            (g$label->binding$8531$kwCBQ
                              g$lab$9233$kwCBQ
                              g$r$9227$kwCBQ))))
                        (g$id->label$8529$kwCBQ g$id$9232$kwCBQ))))
                    g$ls/false$9230$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9229$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9229$kwCBQ '(_ any)))))
         g$e$9226$kwCBQ))))
   (g$record-type-descriptor-transformer$8749$kwCBQ
     g$record-type-descriptor-transformer$12267$kwCBQ
     (case-lambda
       ((g$e$9236$kwCBQ g$r$9237$kwCBQ g$mr$9238$kwCBQ)
        ((case-lambda
           ((g$t$9239$kwCBQ)
            ((case-lambda
               ((g$ls/false$9240$kwCBQ)
                (if (if g$ls/false$9240$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9241$kwCBQ)
                             (g$id?$8516$kwCBQ g$id$9241$kwCBQ)))
                          g$ls/false$9240$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9242$kwCBQ)
                       ((case-lambda
                          ((g$lab$9243$kwCBQ)
                           ((case-lambda
                              ((g$b$9244$kwCBQ)
                               ((case-lambda
                                  ((g$type$9245$kwCBQ)
                                   (begin
                                     (if (not g$lab$9243$kwCBQ)
                                       (g$raise-unbound-error$8535$kwCBQ
                                         g$id$9242$kwCBQ)
                                       (void))
                                     (if (not (if (eq? g$type$9245$kwCBQ '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8534$kwCBQ
                                                      g$b$9244$kwCBQ)))
                                                '#f))
                                       (g$syntax-violation$8907$kwCBQ
                                         '#f
                                         '"not a record type"
                                         g$e$9236$kwCBQ)
                                       (void))
                                     (g$chi-expr$8813$kwCBQ
                                       (car (g$binding-value$8534$kwCBQ
                                              g$b$9244$kwCBQ))
                                       g$r$9237$kwCBQ
                                       g$mr$9238$kwCBQ))))
                                (g$binding-type$8533$kwCBQ g$b$9244$kwCBQ))))
                            (g$label->binding$8531$kwCBQ
                              g$lab$9243$kwCBQ
                              g$r$9237$kwCBQ))))
                        (g$id->label$8529$kwCBQ g$id$9242$kwCBQ))))
                    g$ls/false$9240$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9239$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9239$kwCBQ '(_ any)))))
         g$e$9236$kwCBQ))))
   (g$record-constructor-descriptor-transformer$8750$kwCBQ
     g$record-constructor-descriptor-transformer$12268$kwCBQ
     (case-lambda
       ((g$e$9246$kwCBQ g$r$9247$kwCBQ g$mr$9248$kwCBQ)
        ((case-lambda
           ((g$t$9249$kwCBQ)
            ((case-lambda
               ((g$ls/false$9250$kwCBQ)
                (if (if g$ls/false$9250$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9251$kwCBQ)
                             (g$id?$8516$kwCBQ g$id$9251$kwCBQ)))
                          g$ls/false$9250$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9252$kwCBQ)
                       ((case-lambda
                          ((g$lab$9253$kwCBQ)
                           ((case-lambda
                              ((g$b$9254$kwCBQ)
                               ((case-lambda
                                  ((g$type$9255$kwCBQ)
                                   (begin
                                     (if (not g$lab$9253$kwCBQ)
                                       (g$raise-unbound-error$8535$kwCBQ
                                         g$id$9252$kwCBQ)
                                       (void))
                                     (if (not (if (eq? g$type$9255$kwCBQ '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8534$kwCBQ
                                                      g$b$9254$kwCBQ)))
                                                '#f))
                                       (g$syntax-violation$8907$kwCBQ
                                         '#f
                                         '"invalid type"
                                         g$e$9246$kwCBQ)
                                       (void))
                                     (g$chi-expr$8813$kwCBQ
                                       (g$cadr$6038$kwCBQ
                                         (g$binding-value$8534$kwCBQ
                                           g$b$9254$kwCBQ))
                                       g$r$9247$kwCBQ
                                       g$mr$9248$kwCBQ))))
                                (g$binding-type$8533$kwCBQ g$b$9254$kwCBQ))))
                            (g$label->binding$8531$kwCBQ
                              g$lab$9253$kwCBQ
                              g$r$9247$kwCBQ))))
                        (g$id->label$8529$kwCBQ g$id$9252$kwCBQ))))
                    g$ls/false$9250$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9249$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9249$kwCBQ '(_ any)))))
         g$e$9246$kwCBQ))))
   (g$when-macro$8751$kwCBQ
     g$when-macro$12269$kwCBQ
     (case-lambda
       ((g$e$9256$kwCBQ)
        ((case-lambda
           ((g$t$9257$kwCBQ)
            ((case-lambda
               ((g$ls/false$9258$kwCBQ)
                (if g$ls/false$9258$kwCBQ
                  (apply
                    (case-lambda
                      ((g$test$9259$kwCBQ g$e$9260$kwCBQ g$e*$9261$kwCBQ)
                       (g$bless$8758$kwCBQ
                         (list
                           'if
                           g$test$9259$kwCBQ
                           (cons
                             'begin
                             (cons g$e$9260$kwCBQ g$e*$9261$kwCBQ))))))
                    g$ls/false$9258$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9257$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9257$kwCBQ
               '(_ any any . each-any)))))
         g$e$9256$kwCBQ))))
   (g$unless-macro$8752$kwCBQ
     g$unless-macro$12270$kwCBQ
     (case-lambda
       ((g$e$9262$kwCBQ)
        ((case-lambda
           ((g$t$9263$kwCBQ)
            ((case-lambda
               ((g$ls/false$9264$kwCBQ)
                (if g$ls/false$9264$kwCBQ
                  (apply
                    (case-lambda
                      ((g$test$9265$kwCBQ g$e$9266$kwCBQ g$e*$9267$kwCBQ)
                       (g$bless$8758$kwCBQ
                         (list
                           'if
                           (list 'not g$test$9265$kwCBQ)
                           (cons
                             'begin
                             (cons g$e$9266$kwCBQ g$e*$9267$kwCBQ))))))
                    g$ls/false$9264$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9263$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9263$kwCBQ
               '(_ any any . each-any)))))
         g$e$9262$kwCBQ))))
   (g$if-transformer$8753$kwCBQ
     g$if-transformer$12271$kwCBQ
     (case-lambda
       ((g$e$9268$kwCBQ g$r$9269$kwCBQ g$mr$9270$kwCBQ)
        ((case-lambda
           ((g$t$9271$kwCBQ)
            ((case-lambda
               ((g$ls/false$9272$kwCBQ)
                (if g$ls/false$9272$kwCBQ
                  (apply
                    (case-lambda
                      ((g$e0$9273$kwCBQ g$e1$9274$kwCBQ g$e2$9275$kwCBQ)
                       (list
                         'if
                         (g$chi-expr$8813$kwCBQ
                           g$e0$9273$kwCBQ
                           g$r$9269$kwCBQ
                           g$mr$9270$kwCBQ)
                         (g$chi-expr$8813$kwCBQ
                           g$e1$9274$kwCBQ
                           g$r$9269$kwCBQ
                           g$mr$9270$kwCBQ)
                         (g$chi-expr$8813$kwCBQ
                           g$e2$9275$kwCBQ
                           g$r$9269$kwCBQ
                           g$mr$9270$kwCBQ))))
                    g$ls/false$9272$kwCBQ)
                  ((case-lambda
                     ((g$t$9276$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9277$kwCBQ)
                          (if g$ls/false$9277$kwCBQ
                            (apply
                              (case-lambda
                                ((g$e0$9278$kwCBQ g$e1$9279$kwCBQ)
                                 (list
                                   'if
                                   (g$chi-expr$8813$kwCBQ
                                     g$e0$9278$kwCBQ
                                     g$r$9269$kwCBQ
                                     g$mr$9270$kwCBQ)
                                   (g$chi-expr$8813$kwCBQ
                                     g$e1$9279$kwCBQ
                                     g$r$9269$kwCBQ
                                     g$mr$9270$kwCBQ)
                                   (g$build-void$8446$kwCBQ))))
                              g$ls/false$9277$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9276$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9276$kwCBQ
                         '(_ any any)))))
                   g$t$9271$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9271$kwCBQ '(_ any any any)))))
         g$e$9268$kwCBQ))))
   (g$case-macro$8754$kwCBQ
     g$case-macro$12272$kwCBQ
     (case-lambda
       ((g$e$9280$kwCBQ)
        (letrec* ((g$build-last$9281$kwCBQ
                    (case-lambda
                      ((g$cls$9301$kwCBQ)
                       ((case-lambda
                          ((g$t$9302$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$9303$kwCBQ)
                               (if g$ls/false$9303$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$e$9304$kwCBQ g$e*$9305$kwCBQ)
                                      (cons
                                        'begin
                                        (cons g$e$9304$kwCBQ g$e*$9305$kwCBQ))))
                                   g$ls/false$9303$kwCBQ)
                                 ((case-lambda
                                    ((g$t$9306$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$9307$kwCBQ)
                                         (if g$ls/false$9307$kwCBQ
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$9282$kwCBQ
                                                  g$cls$9301$kwCBQ
                                                  '(if #f #f))))
                                             g$ls/false$9307$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$9306$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$9306$kwCBQ
                                        '_))))
                                  g$t$9302$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$9302$kwCBQ
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$9301$kwCBQ))))
                  (g$build-one$9282$kwCBQ
                    (case-lambda
                      ((g$cls$9294$kwCBQ g$k$9295$kwCBQ)
                       ((case-lambda
                          ((g$t$9296$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$9297$kwCBQ)
                               (if g$ls/false$9297$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$d*$9298$kwCBQ
                                        g$e$9299$kwCBQ
                                        g$e*$9300$kwCBQ)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$9298$kwCBQ))
                                        (cons
                                          'begin
                                          (cons g$e$9299$kwCBQ g$e*$9300$kwCBQ))
                                        g$k$9295$kwCBQ)))
                                   g$ls/false$9297$kwCBQ)
                                 (g$syntax-violation$8907$kwCBQ
                                   '#f
                                   '"invalid syntax"
                                   g$t$9296$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$9296$kwCBQ
                              '(each-any any . each-any)))))
                        g$cls$9294$kwCBQ)))))
          ((case-lambda
             ((g$t$9283$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9284$kwCBQ)
                  (if g$ls/false$9284$kwCBQ
                    (apply
                      (case-lambda
                        ((g$expr$9285$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$9285$kwCBQ))
                               '((if #f #f)))))))
                      g$ls/false$9284$kwCBQ)
                    ((case-lambda
                       ((g$t$9286$kwCBQ)
                        ((case-lambda
                           ((g$ls/false$9287$kwCBQ)
                            (if g$ls/false$9287$kwCBQ
                              (apply
                                (case-lambda
                                  ((g$expr$9288$kwCBQ
                                     g$cls$9289$kwCBQ
                                     g$cls*$9290$kwCBQ)
                                   (g$bless$8758$kwCBQ
                                     (list
                                       'let
                                       (list (list 't g$expr$9288$kwCBQ))
                                       ((letrec ((g$f$9291$kwCBQ
                                                   (case-lambda
                                                     ((g$cls$9292$kwCBQ
                                                        g$cls*$9293$kwCBQ)
                                                      (if (null?
                                                            g$cls*$9293$kwCBQ)
                                                        (g$build-last$9281$kwCBQ
                                                          g$cls$9292$kwCBQ)
                                                        (g$build-one$9282$kwCBQ
                                                          g$cls$9292$kwCBQ
                                                          (g$f$9291$kwCBQ
                                                            (car g$cls*$9293$kwCBQ)
                                                            (cdr g$cls*$9293$kwCBQ))))))))
                                          g$f$9291$kwCBQ)
                                        g$cls$9289$kwCBQ
                                        g$cls*$9290$kwCBQ)))))
                                g$ls/false$9287$kwCBQ)
                              (g$syntax-violation$8907$kwCBQ
                                '#f
                                '"invalid syntax"
                                g$t$9286$kwCBQ))))
                         (g$syntax-dispatch$8795$kwCBQ
                           g$t$9286$kwCBQ
                           '(_ any any . each-any)))))
                     g$t$9283$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ g$t$9283$kwCBQ '(_ any)))))
           g$e$9280$kwCBQ)))))
   (g$quote-transformer$8755$kwCBQ
     g$quote-transformer$12273$kwCBQ
     (case-lambda
       ((g$e$9308$kwCBQ g$r$9309$kwCBQ g$mr$9310$kwCBQ)
        ((case-lambda
           ((g$t$9311$kwCBQ)
            ((case-lambda
               ((g$ls/false$9312$kwCBQ)
                (if g$ls/false$9312$kwCBQ
                  (apply
                    (case-lambda
                      ((g$datum$9313$kwCBQ)
                       (list
                         'quote
                         (g$stx->datum$8527$kwCBQ g$datum$9313$kwCBQ))))
                    g$ls/false$9312$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9311$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9311$kwCBQ '(_ any)))))
         g$e$9308$kwCBQ))))
   (g$case-lambda-transformer$8756$kwCBQ
     g$case-lambda-transformer$12274$kwCBQ
     (case-lambda
       ((g$e$9314$kwCBQ g$r$9315$kwCBQ g$mr$9316$kwCBQ)
        ((case-lambda
           ((g$t$9317$kwCBQ)
            ((case-lambda
               ((g$ls/false$9318$kwCBQ)
                (if g$ls/false$9318$kwCBQ
                  (apply
                    (case-lambda
                      ((g$fmls*$9319$kwCBQ g$b*$9320$kwCBQ g$b**$9321$kwCBQ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8817$kwCBQ
                              g$e$9314$kwCBQ
                              g$fmls*$9319$kwCBQ
                              (g$map$5812$kwCBQ
                                cons
                                g$b*$9320$kwCBQ
                                g$b**$9321$kwCBQ)
                              g$r$9315$kwCBQ
                              g$mr$9316$kwCBQ)))
                         (case-lambda
                           ((g$fmls*$9324$kwCBQ g$body*$9325$kwCBQ)
                            ((case-lambda
                               ((g$body*$9326$kwCBQ g$fmls*$9327$kwCBQ)
                                (g$build-case-lambda$8443$kwCBQ
                                  '#f
                                  g$fmls*$9327$kwCBQ
                                  g$body*$9326$kwCBQ)))
                             g$body*$9325$kwCBQ
                             g$fmls*$9324$kwCBQ))))))
                    g$ls/false$9318$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9317$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9317$kwCBQ
               '(_ . #(each (any any . each-any)))))))
         g$e$9314$kwCBQ))))
   (g$lambda-transformer$8757$kwCBQ
     g$lambda-transformer$12275$kwCBQ
     (case-lambda
       ((g$e$9328$kwCBQ g$r$9329$kwCBQ g$mr$9330$kwCBQ)
        ((case-lambda
           ((g$t$9331$kwCBQ)
            ((case-lambda
               ((g$ls/false$9332$kwCBQ)
                (if g$ls/false$9332$kwCBQ
                  (apply
                    (case-lambda
                      ((g$fmls$9333$kwCBQ g$b$9334$kwCBQ g$b*$9335$kwCBQ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8816$kwCBQ
                              g$e$9328$kwCBQ
                              g$fmls$9333$kwCBQ
                              (cons g$b$9334$kwCBQ g$b*$9335$kwCBQ)
                              g$r$9329$kwCBQ
                              g$mr$9330$kwCBQ)))
                         (case-lambda
                           ((g$fmls$9338$kwCBQ g$body$9339$kwCBQ)
                            ((case-lambda
                               ((g$body$9340$kwCBQ g$fmls$9341$kwCBQ)
                                (g$build-lambda$8442$kwCBQ
                                  '#f
                                  g$fmls$9341$kwCBQ
                                  g$body$9340$kwCBQ)))
                             g$body$9339$kwCBQ
                             g$fmls$9338$kwCBQ))))))
                    g$ls/false$9332$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9331$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9331$kwCBQ
               '(_ any any . each-any)))))
         g$e$9328$kwCBQ))))
   (g$bless$8758$kwCBQ
     g$bless$12276$kwCBQ
     (case-lambda
       ((g$x$9342$kwCBQ)
        (g$mkstx$8504$kwCBQ
          ((letrec ((g$f$9343$kwCBQ
                      (case-lambda
                        ((g$x$9344$kwCBQ)
                         (if (g$stx?$8488$kwCBQ g$x$9344$kwCBQ)
                           g$x$9344$kwCBQ
                           (if (pair? g$x$9344$kwCBQ)
                             (cons
                               (g$f$9343$kwCBQ (car g$x$9344$kwCBQ))
                               (g$f$9343$kwCBQ (cdr g$x$9344$kwCBQ)))
                             (if (symbol? g$x$9344$kwCBQ)
                               (g$scheme-stx$8738$kwCBQ g$x$9344$kwCBQ)
                               (if (vector? g$x$9344$kwCBQ)
                                 (g$vector-map$6089$kwCBQ
                                   g$f$9343$kwCBQ
                                   g$x$9344$kwCBQ)
                                 g$x$9344$kwCBQ))))))))
             g$f$9343$kwCBQ)
           g$x$9342$kwCBQ)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8759$kwCBQ
     g$with-syntax-macro$12277$kwCBQ
     (case-lambda
       ((g$e$9345$kwCBQ)
        ((case-lambda
           ((g$t$9346$kwCBQ)
            ((case-lambda
               ((g$ls/false$9347$kwCBQ)
                (if g$ls/false$9347$kwCBQ
                  (apply
                    (case-lambda
                      ((g$pat*$9348$kwCBQ
                         g$expr*$9349$kwCBQ
                         g$b$9350$kwCBQ
                         g$b*$9351$kwCBQ)
                       ((case-lambda
                          ((g$idn*$9352$kwCBQ)
                           (begin
                             (g$verify-formals$8815$kwCBQ
                               (g$map$5812$kwCBQ car g$idn*$9352$kwCBQ)
                               g$e$9345$kwCBQ)
                             ((case-lambda
                                ((g$t*$9353$kwCBQ)
                                 (g$bless$8758$kwCBQ
                                   (list
                                     'let
                                     (g$map$5812$kwCBQ
                                       list
                                       g$t*$9353$kwCBQ
                                       g$expr*$9349$kwCBQ)
                                     ((letrec ((g$f$9354$kwCBQ
                                                 (case-lambda
                                                   ((g$pat*$9355$kwCBQ
                                                      g$t*$9356$kwCBQ)
                                                    (if (null?
                                                          g$pat*$9355$kwCBQ)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$9350$kwCBQ
                                                            g$b*$9351$kwCBQ)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$9356$kwCBQ)
                                                        '()
                                                        (list
                                                          (car g$pat*$9355$kwCBQ)
                                                          (g$f$9354$kwCBQ
                                                            (cdr g$pat*$9355$kwCBQ)
                                                            (cdr g$t*$9356$kwCBQ)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$9355$kwCBQ))
                                                            (car g$t*$9356$kwCBQ)))))))))
                                        g$f$9354$kwCBQ)
                                      g$pat*$9348$kwCBQ
                                      g$t*$9353$kwCBQ)))))
                              (g$generate-temporaries$8897$kwCBQ
                                g$expr*$9349$kwCBQ)))))
                        ((letrec ((g$f$9357$kwCBQ
                                    (case-lambda
                                      ((g$pat*$9358$kwCBQ)
                                       (if (null? g$pat*$9358$kwCBQ)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8794$kwCBQ
                                                (car g$pat*$9358$kwCBQ)
                                                '())))
                                           (case-lambda
                                             ((g$pat$9361$kwCBQ
                                                g$idn*$9362$kwCBQ)
                                              ((case-lambda
                                                 ((g$idn*$9363$kwCBQ
                                                    g$pat$9364$kwCBQ)
                                                  (append
                                                    g$idn*$9363$kwCBQ
                                                    (g$f$9357$kwCBQ
                                                      (cdr g$pat*$9358$kwCBQ)))))
                                               g$idn*$9362$kwCBQ
                                               g$pat$9361$kwCBQ)))))))))
                           g$f$9357$kwCBQ)
                         g$pat*$9348$kwCBQ))))
                    g$ls/false$9347$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9346$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9346$kwCBQ
               '(_ #(each (any any)) any . each-any)))))
         g$e$9345$kwCBQ))))
   (g$invalid-fmls-error$8760$kwCBQ
     g$invalid-fmls-error$12278$kwCBQ
     (case-lambda
       ((g$stx$9365$kwCBQ g$fmls$9366$kwCBQ)
        ((case-lambda
           ((g$t$9367$kwCBQ)
            ((case-lambda
               ((g$ls/false$9368$kwCBQ)
                (if g$ls/false$9368$kwCBQ
                  (apply
                    (case-lambda
                      ((g$id*$9369$kwCBQ g$last$9370$kwCBQ)
                       ((letrec ((g$f$9371$kwCBQ
                                   (case-lambda
                                     ((g$id*$9372$kwCBQ)
                                      (if (null? g$id*$9372$kwCBQ)
                                        (values)
                                        (if (not (g$id?$8516$kwCBQ
                                                   (car g$id*$9372$kwCBQ)))
                                          (g$syntax-violation$8907$kwCBQ
                                            '#f
                                            '"not an identifier"
                                            g$stx$9365$kwCBQ
                                            (car g$id*$9372$kwCBQ))
                                          (begin
                                            (g$f$9371$kwCBQ
                                              (cdr g$id*$9372$kwCBQ))
                                            (if (g$bound-id-member?$8523$kwCBQ
                                                  (car g$id*$9372$kwCBQ)
                                                  (cdr g$id*$9372$kwCBQ))
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"duplicate binding"
                                                g$stx$9365$kwCBQ
                                                (car g$id*$9372$kwCBQ))
                                              (void)))))))))
                          g$f$9371$kwCBQ)
                        (if (g$id?$8516$kwCBQ g$last$9370$kwCBQ)
                          (cons g$last$9370$kwCBQ g$id*$9369$kwCBQ)
                          (if (g$syntax-null?$8511$kwCBQ g$last$9370$kwCBQ)
                            g$id*$9369$kwCBQ
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"not an identifier"
                              g$stx$9365$kwCBQ
                              g$last$9370$kwCBQ))))))
                    g$ls/false$9368$kwCBQ)
                  ((case-lambda
                     ((g$t$9373$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9374$kwCBQ)
                          (if g$ls/false$9374$kwCBQ
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8907$kwCBQ
                                   '#f
                                   '"malformed binding form"
                                   g$stx$9365$kwCBQ
                                   g$fmls$9366$kwCBQ)))
                              g$ls/false$9374$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9373$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ g$t$9373$kwCBQ '_))))
                   g$t$9367$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9367$kwCBQ
               '#(each+ any () any)))))
         g$fmls$9366$kwCBQ))))
   (g$let-macro$8761$kwCBQ
     g$let-macro$12279$kwCBQ
     (case-lambda
       ((g$stx$9375$kwCBQ)
        ((case-lambda
           ((g$t$9376$kwCBQ)
            ((case-lambda
               ((g$ls/false$9377$kwCBQ)
                (if g$ls/false$9377$kwCBQ
                  (apply
                    (case-lambda
                      ((g$lhs*$9378$kwCBQ
                         g$rhs*$9379$kwCBQ
                         g$b$9380$kwCBQ
                         g$b*$9381$kwCBQ)
                       (if (g$valid-bound-ids?$8521$kwCBQ g$lhs*$9378$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$9378$kwCBQ
                                 (cons g$b$9380$kwCBQ g$b*$9381$kwCBQ)))
                             g$rhs*$9379$kwCBQ))
                         (g$invalid-fmls-error$8760$kwCBQ
                           g$stx$9375$kwCBQ
                           g$lhs*$9378$kwCBQ))))
                    g$ls/false$9377$kwCBQ)
                  ((case-lambda
                     ((g$t$9382$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9383$kwCBQ)
                          (if (if g$ls/false$9383$kwCBQ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$9384$kwCBQ
                                         g$lhs*$9385$kwCBQ
                                         g$rhs*$9386$kwCBQ
                                         g$b$9387$kwCBQ
                                         g$b*$9388$kwCBQ)
                                       (g$id?$8516$kwCBQ g$f$9384$kwCBQ)))
                                    g$ls/false$9383$kwCBQ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$9389$kwCBQ
                                   g$lhs*$9390$kwCBQ
                                   g$rhs*$9391$kwCBQ
                                   g$b$9392$kwCBQ
                                   g$b*$9393$kwCBQ)
                                 (if (g$valid-bound-ids?$8521$kwCBQ
                                       g$lhs*$9390$kwCBQ)
                                   (g$bless$8758$kwCBQ
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$9389$kwCBQ
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$9390$kwCBQ
                                                 (cons
                                                   g$b$9392$kwCBQ
                                                   g$b*$9393$kwCBQ)))))
                                         g$f$9389$kwCBQ)
                                       g$rhs*$9391$kwCBQ))
                                   (g$invalid-fmls-error$8760$kwCBQ
                                     g$stx$9375$kwCBQ
                                     g$lhs*$9390$kwCBQ))))
                              g$ls/false$9383$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9382$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9382$kwCBQ
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$9376$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9376$kwCBQ
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9375$kwCBQ))))
   (g$let-values-macro$8762$kwCBQ
     g$let-values-macro$12280$kwCBQ
     (case-lambda
       ((g$stx$9394$kwCBQ)
        (letrec* ((g$rename$9395$kwCBQ
                    (case-lambda
                      ((g$x$9446$kwCBQ g$old*$9447$kwCBQ g$new*$9448$kwCBQ)
                       (begin
                         (if (not (g$id?$8516$kwCBQ g$x$9446$kwCBQ))
                           (g$syntax-violation$8907$kwCBQ
                             '#f
                             '"not an indentifier"
                             g$stx$9394$kwCBQ
                             g$x$9446$kwCBQ)
                           (void))
                         (if (g$bound-id-member?$8523$kwCBQ
                               g$x$9446$kwCBQ
                               g$old*$9447$kwCBQ)
                           (g$syntax-violation$8907$kwCBQ
                             '#f
                             '"duplicate binding"
                             g$stx$9394$kwCBQ
                             g$x$9446$kwCBQ)
                           (void))
                         ((case-lambda
                            ((g$y$9449$kwCBQ)
                             (values
                               g$y$9449$kwCBQ
                               (cons g$x$9446$kwCBQ g$old*$9447$kwCBQ)
                               (cons g$y$9449$kwCBQ g$new*$9448$kwCBQ))))
                          (gensym
                            (g$syntax->datum$8910$kwCBQ g$x$9446$kwCBQ)))))))
                  (g$rename*$9396$kwCBQ
                    (case-lambda
                      ((g$x*$9437$kwCBQ g$old*$9438$kwCBQ g$new*$9439$kwCBQ)
                       (if (null? g$x*$9437$kwCBQ)
                         (values '() g$old*$9438$kwCBQ g$new*$9439$kwCBQ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$9395$kwCBQ
                                (car g$x*$9437$kwCBQ)
                                g$old*$9438$kwCBQ
                                g$new*$9439$kwCBQ)))
                           (case-lambda
                             ((g$x$9440$kwCBQ
                                g$old*$9441$kwCBQ
                                g$new*$9442$kwCBQ)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$9396$kwCBQ
                                     (cdr g$x*$9437$kwCBQ)
                                     g$old*$9441$kwCBQ
                                     g$new*$9442$kwCBQ)))
                                (case-lambda
                                  ((g$x*$9443$kwCBQ
                                     g$old*$9444$kwCBQ
                                     g$new*$9445$kwCBQ)
                                   (values
                                     (cons g$x$9440$kwCBQ g$x*$9443$kwCBQ)
                                     g$old*$9444$kwCBQ
                                     g$new*$9445$kwCBQ))))))))))))
          ((case-lambda
             ((g$t$9397$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9398$kwCBQ)
                  (if g$ls/false$9398$kwCBQ
                    (apply
                      (case-lambda
                        ((g$b$9399$kwCBQ g$b*$9400$kwCBQ)
                         (g$cons*$5814$kwCBQ
                           (g$bless$8758$kwCBQ 'let)
                           '()
                           g$b$9399$kwCBQ
                           g$b*$9400$kwCBQ)))
                      g$ls/false$9398$kwCBQ)
                    ((case-lambda
                       ((g$t$9401$kwCBQ)
                        ((case-lambda
                           ((g$ls/false$9402$kwCBQ)
                            (if g$ls/false$9402$kwCBQ
                              (apply
                                (case-lambda
                                  ((g$lhs*$9403$kwCBQ
                                     g$rhs*$9404$kwCBQ
                                     g$b$9405$kwCBQ
                                     g$b*$9406$kwCBQ)
                                   (g$bless$8758$kwCBQ
                                     ((letrec ((g$f$9407$kwCBQ
                                                 (case-lambda
                                                   ((g$lhs*$9408$kwCBQ
                                                      g$rhs*$9409$kwCBQ
                                                      g$old*$9410$kwCBQ
                                                      g$new*$9411$kwCBQ)
                                                    (if (null?
                                                          g$lhs*$9408$kwCBQ)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5812$kwCBQ
                                                            list
                                                            g$old*$9410$kwCBQ
                                                            g$new*$9411$kwCBQ)
                                                          (cons
                                                            g$b$9405$kwCBQ
                                                            g$b*$9406$kwCBQ)))
                                                      ((case-lambda
                                                         ((g$t$9412$kwCBQ)
                                                          ((case-lambda
                                                             ((g$ls/false$9413$kwCBQ)
                                                              (if g$ls/false$9413$kwCBQ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9414$kwCBQ)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$9396$kwCBQ
                                                                            g$x*$9414$kwCBQ
                                                                            g$old*$9410$kwCBQ
                                                                            g$new*$9411$kwCBQ)))
                                                                       (case-lambda
                                                                         ((g$y*$9418$kwCBQ
                                                                            g$old*$9419$kwCBQ
                                                                            g$new*$9420$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$new*$9421$kwCBQ
                                                                                g$old*$9422$kwCBQ
                                                                                g$y*$9423$kwCBQ)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$9409$kwCBQ))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$9423$kwCBQ
                                                                                  (g$f$9407$kwCBQ
                                                                                    (cdr g$lhs*$9408$kwCBQ)
                                                                                    (cdr g$rhs*$9409$kwCBQ)
                                                                                    g$old*$9422$kwCBQ
                                                                                    g$new*$9421$kwCBQ)))))
                                                                           g$new*$9420$kwCBQ
                                                                           g$old*$9419$kwCBQ
                                                                           g$y*$9418$kwCBQ))))))
                                                                  g$ls/false$9413$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$t$9424$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9425$kwCBQ)
                                                                        (if g$ls/false$9425$kwCBQ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9426$kwCBQ
                                                                                 g$x$9427$kwCBQ)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$9395$kwCBQ
                                                                                      g$x$9427$kwCBQ
                                                                                      g$old*$9410$kwCBQ
                                                                                      g$new*$9411$kwCBQ)))
                                                                                 (case-lambda
                                                                                   ((g$y$9428$kwCBQ
                                                                                      g$old*$9429$kwCBQ
                                                                                      g$new*$9430$kwCBQ)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$9396$kwCBQ
                                                                                           g$x*$9426$kwCBQ
                                                                                           g$old*$9429$kwCBQ
                                                                                           g$new*$9430$kwCBQ)))
                                                                                      (case-lambda
                                                                                        ((g$y*$9431$kwCBQ
                                                                                           g$old*$9432$kwCBQ
                                                                                           g$new*$9433$kwCBQ)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$9409$kwCBQ))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$9431$kwCBQ
                                                                                               g$y$9428$kwCBQ)
                                                                                             (g$f$9407$kwCBQ
                                                                                               (cdr g$lhs*$9408$kwCBQ)
                                                                                               (cdr g$rhs*$9409$kwCBQ)
                                                                                               g$old*$9432$kwCBQ
                                                                                               g$new*$9433$kwCBQ)))))))))))
                                                                            g$ls/false$9425$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$9434$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9435$kwCBQ)
                                                                                  (if g$ls/false$9435$kwCBQ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9436$kwCBQ)
                                                                                         (g$syntax-violation$8907$kwCBQ
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9394$kwCBQ
                                                                                           g$others$9436$kwCBQ)))
                                                                                      g$ls/false$9435$kwCBQ)
                                                                                    (g$syntax-violation$8907$kwCBQ
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9434$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$9434$kwCBQ
                                                                                 'any))))
                                                                           g$t$9424$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$9424$kwCBQ
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9412$kwCBQ))))
                                                           (g$syntax-dispatch$8795$kwCBQ
                                                             g$t$9412$kwCBQ
                                                             'each-any))))
                                                       (car g$lhs*$9408$kwCBQ)))))))
                                        g$f$9407$kwCBQ)
                                      g$lhs*$9403$kwCBQ
                                      g$rhs*$9404$kwCBQ
                                      '()
                                      '()))))
                                g$ls/false$9402$kwCBQ)
                              (g$syntax-violation$8907$kwCBQ
                                '#f
                                '"invalid syntax"
                                g$t$9401$kwCBQ))))
                         (g$syntax-dispatch$8795$kwCBQ
                           g$t$9401$kwCBQ
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9397$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9397$kwCBQ
                 '(_ () any . each-any)))))
           g$stx$9394$kwCBQ)))))
   (g$let*-values-macro$8763$kwCBQ
     g$let*-values-macro$12281$kwCBQ
     (case-lambda
       ((g$stx$9450$kwCBQ)
        (letrec* ((g$check$9451$kwCBQ
                    (case-lambda
                      ((g$x*$9475$kwCBQ)
                       (if (not (null? g$x*$9475$kwCBQ))
                         ((case-lambda
                            ((g$x$9476$kwCBQ)
                             (begin
                               (if (not (g$id?$8516$kwCBQ g$x$9476$kwCBQ))
                                 (g$syntax-violation$8907$kwCBQ
                                   '#f
                                   '"not an identifier"
                                   g$stx$9450$kwCBQ
                                   g$x$9476$kwCBQ)
                                 (void))
                               (g$check$9451$kwCBQ (cdr g$x*$9475$kwCBQ))
                               (if (g$bound-id-member?$8523$kwCBQ
                                     g$x$9476$kwCBQ
                                     (cdr g$x*$9475$kwCBQ))
                                 (g$syntax-violation$8907$kwCBQ
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$9450$kwCBQ
                                   g$x$9476$kwCBQ)
                                 (void)))))
                          (car g$x*$9475$kwCBQ))
                         (void))))))
          ((case-lambda
             ((g$t$9452$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9453$kwCBQ)
                  (if g$ls/false$9453$kwCBQ
                    (apply
                      (case-lambda
                        ((g$b$9454$kwCBQ g$b*$9455$kwCBQ)
                         (g$cons*$5814$kwCBQ
                           (g$bless$8758$kwCBQ 'let)
                           '()
                           g$b$9454$kwCBQ
                           g$b*$9455$kwCBQ)))
                      g$ls/false$9453$kwCBQ)
                    ((case-lambda
                       ((g$t$9456$kwCBQ)
                        ((case-lambda
                           ((g$ls/false$9457$kwCBQ)
                            (if g$ls/false$9457$kwCBQ
                              (apply
                                (case-lambda
                                  ((g$lhs*$9458$kwCBQ
                                     g$rhs*$9459$kwCBQ
                                     g$b$9460$kwCBQ
                                     g$b*$9461$kwCBQ)
                                   (g$bless$8758$kwCBQ
                                     ((letrec ((g$f$9462$kwCBQ
                                                 (case-lambda
                                                   ((g$lhs*$9463$kwCBQ
                                                      g$rhs*$9464$kwCBQ)
                                                    (if (null?
                                                          g$lhs*$9463$kwCBQ)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$9460$kwCBQ
                                                          g$b*$9461$kwCBQ))
                                                      ((case-lambda
                                                         ((g$t$9465$kwCBQ)
                                                          ((case-lambda
                                                             ((g$ls/false$9466$kwCBQ)
                                                              (if g$ls/false$9466$kwCBQ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9467$kwCBQ)
                                                                     (begin
                                                                       (g$check$9451$kwCBQ
                                                                         g$x*$9467$kwCBQ)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$9464$kwCBQ))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$9467$kwCBQ
                                                                           (g$f$9462$kwCBQ
                                                                             (cdr g$lhs*$9463$kwCBQ)
                                                                             (cdr g$rhs*$9464$kwCBQ)))))))
                                                                  g$ls/false$9466$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$t$9468$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9469$kwCBQ)
                                                                        (if g$ls/false$9469$kwCBQ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9470$kwCBQ
                                                                                 g$x$9471$kwCBQ)
                                                                               (begin
                                                                                 (g$check$9451$kwCBQ
                                                                                   (cons
                                                                                     g$x$9471$kwCBQ
                                                                                     g$x*$9470$kwCBQ))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$9464$kwCBQ))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$9470$kwCBQ
                                                                                       g$x$9471$kwCBQ)
                                                                                     (g$f$9462$kwCBQ
                                                                                       (cdr g$lhs*$9463$kwCBQ)
                                                                                       (cdr g$rhs*$9464$kwCBQ)))))))
                                                                            g$ls/false$9469$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$9472$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9473$kwCBQ)
                                                                                  (if g$ls/false$9473$kwCBQ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9474$kwCBQ)
                                                                                         (g$syntax-violation$8907$kwCBQ
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9450$kwCBQ
                                                                                           g$others$9474$kwCBQ)))
                                                                                      g$ls/false$9473$kwCBQ)
                                                                                    (g$syntax-violation$8907$kwCBQ
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9472$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$9472$kwCBQ
                                                                                 'any))))
                                                                           g$t$9468$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$9468$kwCBQ
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9465$kwCBQ))))
                                                           (g$syntax-dispatch$8795$kwCBQ
                                                             g$t$9465$kwCBQ
                                                             'each-any))))
                                                       (car g$lhs*$9463$kwCBQ)))))))
                                        g$f$9462$kwCBQ)
                                      g$lhs*$9458$kwCBQ
                                      g$rhs*$9459$kwCBQ))))
                                g$ls/false$9457$kwCBQ)
                              (g$syntax-violation$8907$kwCBQ
                                '#f
                                '"invalid syntax"
                                g$t$9456$kwCBQ))))
                         (g$syntax-dispatch$8795$kwCBQ
                           g$t$9456$kwCBQ
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9452$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9452$kwCBQ
                 '(_ () any . each-any)))))
           g$stx$9450$kwCBQ)))))
   (g$trace-lambda-macro$8764$kwCBQ
     g$trace-lambda-macro$12282$kwCBQ
     (case-lambda
       ((g$stx$9477$kwCBQ)
        ((case-lambda
           ((g$t$9478$kwCBQ)
            ((case-lambda
               ((g$ls/false$9479$kwCBQ)
                (if g$ls/false$9479$kwCBQ
                  (apply
                    (case-lambda
                      ((g$who$9480$kwCBQ
                         g$fmls$9481$kwCBQ
                         g$b$9482$kwCBQ
                         g$b*$9483$kwCBQ)
                       (if (g$valid-bound-ids?$8521$kwCBQ g$fmls$9481$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$9480$kwCBQ)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$9481$kwCBQ
                                 (cons g$b$9482$kwCBQ g$b*$9483$kwCBQ)))))
                         (g$invalid-fmls-error$8760$kwCBQ
                           g$stx$9477$kwCBQ
                           g$fmls$9481$kwCBQ))))
                    g$ls/false$9479$kwCBQ)
                  ((case-lambda
                     ((g$t$9484$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9485$kwCBQ)
                          (if g$ls/false$9485$kwCBQ
                            (apply
                              (case-lambda
                                ((g$who$9486$kwCBQ
                                   g$fmls$9487$kwCBQ
                                   g$last$9488$kwCBQ
                                   g$b$9489$kwCBQ
                                   g$b*$9490$kwCBQ)
                                 (if (g$valid-bound-ids?$8521$kwCBQ
                                       (cons
                                         g$last$9488$kwCBQ
                                         g$fmls$9487$kwCBQ))
                                   (g$bless$8758$kwCBQ
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$9486$kwCBQ)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$9487$kwCBQ
                                             g$last$9488$kwCBQ)
                                           (cons
                                             g$b$9489$kwCBQ
                                             g$b*$9490$kwCBQ)))))
                                   (g$invalid-fmls-error$8760$kwCBQ
                                     g$stx$9477$kwCBQ
                                     (append
                                       g$fmls$9487$kwCBQ
                                       g$last$9488$kwCBQ)))))
                              g$ls/false$9485$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9484$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9484$kwCBQ
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$9478$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9478$kwCBQ
               '(_ any each-any any . each-any)))))
         g$stx$9477$kwCBQ))))
   (g$trace-define-macro$8765$kwCBQ
     g$trace-define-macro$12283$kwCBQ
     (case-lambda
       ((g$stx$9491$kwCBQ)
        ((case-lambda
           ((g$t$9492$kwCBQ)
            ((case-lambda
               ((g$ls/false$9493$kwCBQ)
                (if g$ls/false$9493$kwCBQ
                  (apply
                    (case-lambda
                      ((g$who$9494$kwCBQ
                         g$fmls$9495$kwCBQ
                         g$b$9496$kwCBQ
                         g$b*$9497$kwCBQ)
                       (if (g$valid-bound-ids?$8521$kwCBQ g$fmls$9495$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (list
                             'define
                             g$who$9494$kwCBQ
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$9494$kwCBQ)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$9495$kwCBQ
                                   (cons g$b$9496$kwCBQ g$b*$9497$kwCBQ))))))
                         (g$invalid-fmls-error$8760$kwCBQ
                           g$stx$9491$kwCBQ
                           g$fmls$9495$kwCBQ))))
                    g$ls/false$9493$kwCBQ)
                  ((case-lambda
                     ((g$t$9498$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9499$kwCBQ)
                          (if g$ls/false$9499$kwCBQ
                            (apply
                              (case-lambda
                                ((g$who$9500$kwCBQ
                                   g$fmls$9501$kwCBQ
                                   g$last$9502$kwCBQ
                                   g$b$9503$kwCBQ
                                   g$b*$9504$kwCBQ)
                                 (if (g$valid-bound-ids?$8521$kwCBQ
                                       (cons
                                         g$last$9502$kwCBQ
                                         g$fmls$9501$kwCBQ))
                                   (g$bless$8758$kwCBQ
                                     (list
                                       'define
                                       g$who$9500$kwCBQ
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$9500$kwCBQ)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$9501$kwCBQ
                                               g$last$9502$kwCBQ)
                                             (cons
                                               g$b$9503$kwCBQ
                                               g$b*$9504$kwCBQ))))))
                                   (g$invalid-fmls-error$8760$kwCBQ
                                     g$stx$9491$kwCBQ
                                     (append
                                       g$fmls$9501$kwCBQ
                                       g$last$9502$kwCBQ)))))
                              g$ls/false$9499$kwCBQ)
                            ((case-lambda
                               ((g$t$9505$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$9506$kwCBQ)
                                    (if g$ls/false$9506$kwCBQ
                                      (apply
                                        (case-lambda
                                          ((g$who$9507$kwCBQ g$expr$9508$kwCBQ)
                                           (if (g$id?$8516$kwCBQ
                                                 g$who$9507$kwCBQ)
                                             (g$bless$8758$kwCBQ
                                               (list
                                                 'define
                                                 g$who$9507$kwCBQ
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$9508$kwCBQ))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$9507$kwCBQ)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8907$kwCBQ
                                               '#f
                                               '"invalid name"
                                               g$stx$9491$kwCBQ))))
                                        g$ls/false$9506$kwCBQ)
                                      (g$syntax-violation$8907$kwCBQ
                                        '#f
                                        '"invalid syntax"
                                        g$t$9505$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$9505$kwCBQ
                                   '(_ any any)))))
                             g$t$9498$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9498$kwCBQ
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$9492$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9492$kwCBQ
               '(_ (any . each-any) any . each-any)))))
         g$stx$9491$kwCBQ))))
   (g$trace-define-syntax-macro$8766$kwCBQ
     g$trace-define-syntax-macro$12284$kwCBQ
     (case-lambda
       ((g$stx$9509$kwCBQ)
        ((case-lambda
           ((g$t$9510$kwCBQ)
            ((case-lambda
               ((g$ls/false$9511$kwCBQ)
                (if g$ls/false$9511$kwCBQ
                  (apply
                    (case-lambda
                      ((g$who$9512$kwCBQ g$expr$9513$kwCBQ)
                       (if (g$id?$8516$kwCBQ g$who$9512$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (list
                             'define-syntax
                             g$who$9512$kwCBQ
                             (list
                               'make-traced-macro
                               (list 'quote g$who$9512$kwCBQ)
                               g$expr$9513$kwCBQ)))
                         (g$syntax-violation$8907$kwCBQ
                           '#f
                           '"invalid name"
                           g$stx$9509$kwCBQ))))
                    g$ls/false$9511$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9510$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9510$kwCBQ '(_ any any)))))
         g$stx$9509$kwCBQ))))
   (g$trace-let/rec-syntax$8767$kwCBQ
     g$trace-let/rec-syntax$12285$kwCBQ
     (case-lambda
       ((g$who$9514$kwCBQ)
        (case-lambda
          ((g$stx$9515$kwCBQ)
           ((case-lambda
              ((g$t$9516$kwCBQ)
               ((case-lambda
                  ((g$ls/false$9517$kwCBQ)
                   (if g$ls/false$9517$kwCBQ
                     (apply
                       (case-lambda
                         ((g$lhs*$9518$kwCBQ
                            g$rhs*$9519$kwCBQ
                            g$b$9520$kwCBQ
                            g$b*$9521$kwCBQ)
                          (if (g$valid-bound-ids?$8521$kwCBQ g$lhs*$9518$kwCBQ)
                            ((case-lambda
                               ((g$rhs*$9522$kwCBQ)
                                (g$bless$8758$kwCBQ
                                  (cons
                                    g$who$9514$kwCBQ
                                    (cons
                                      (g$map$5812$kwCBQ
                                        list
                                        g$lhs*$9518$kwCBQ
                                        g$rhs*$9522$kwCBQ)
                                      (cons g$b$9520$kwCBQ g$b*$9521$kwCBQ))))))
                             (g$map$5812$kwCBQ
                               (case-lambda
                                 ((g$lhs$9523$kwCBQ g$rhs$9524$kwCBQ)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$9523$kwCBQ)
                                    g$rhs$9524$kwCBQ)))
                               g$lhs*$9518$kwCBQ
                               g$rhs*$9519$kwCBQ))
                            (g$invalid-fmls-error$8760$kwCBQ
                              g$stx$9515$kwCBQ
                              g$lhs*$9518$kwCBQ))))
                       g$ls/false$9517$kwCBQ)
                     (g$syntax-violation$8907$kwCBQ
                       '#f
                       '"invalid syntax"
                       g$t$9516$kwCBQ))))
                (g$syntax-dispatch$8795$kwCBQ
                  g$t$9516$kwCBQ
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$9515$kwCBQ))))))
   (g$trace-let-syntax-macro$8768$kwCBQ
     g$trace-let-syntax-macro$12286$kwCBQ
     (g$trace-let/rec-syntax$8767$kwCBQ 'let-syntax))
   (g$trace-letrec-syntax-macro$8769$kwCBQ
     g$trace-letrec-syntax-macro$12287$kwCBQ
     (g$trace-let/rec-syntax$8767$kwCBQ 'letrec-syntax))
   (g$guard-macro$8770$kwCBQ
     g$guard-macro$12288$kwCBQ
     (case-lambda
       ((g$x$9525$kwCBQ)
        (letrec* ((g$gen-clauses$9526$kwCBQ
                    (case-lambda
                      ((g$con$9538$kwCBQ
                         g$outerk$9539$kwCBQ
                         g$clause*$9540$kwCBQ)
                       (letrec* ((g$f$9541$kwCBQ
                                   (case-lambda
                                     ((g$x$9569$kwCBQ g$k$9570$kwCBQ)
                                      ((case-lambda
                                         ((g$t$9571$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$9572$kwCBQ)
                                              (if g$ls/false$9572$kwCBQ
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9573$kwCBQ
                                                       g$p$9574$kwCBQ)
                                                     ((case-lambda
                                                        ((g$t$9575$kwCBQ)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9575$kwCBQ
                                                               g$e$9573$kwCBQ))
                                                           (list
                                                             'if
                                                             g$t$9575$kwCBQ
                                                             (list
                                                               g$p$9574$kwCBQ
                                                               g$t$9575$kwCBQ)
                                                             g$k$9570$kwCBQ))))
                                                      (gensym))))
                                                  g$ls/false$9572$kwCBQ)
                                                ((case-lambda
                                                   ((g$t$9576$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$9577$kwCBQ)
                                                        (if g$ls/false$9577$kwCBQ
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9578$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$t$9579$kwCBQ)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9579$kwCBQ
                                                                         g$e$9578$kwCBQ))
                                                                     (list
                                                                       'if
                                                                       g$t$9579$kwCBQ
                                                                       g$t$9579$kwCBQ
                                                                       g$k$9570$kwCBQ))))
                                                                (gensym))))
                                                            g$ls/false$9577$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$9580$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$9581$kwCBQ)
                                                                  (if g$ls/false$9581$kwCBQ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9582$kwCBQ
                                                                           g$v$9583$kwCBQ
                                                                           g$v*$9584$kwCBQ)
                                                                         (list
                                                                           'if
                                                                           g$e$9582$kwCBQ
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9583$kwCBQ
                                                                               g$v*$9584$kwCBQ))
                                                                           g$k$9570$kwCBQ)))
                                                                      g$ls/false$9581$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$t$9585$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9586$kwCBQ)
                                                                            (if g$ls/false$9586$kwCBQ
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8907$kwCBQ
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9569$kwCBQ)))
                                                                                g$ls/false$9586$kwCBQ)
                                                                              (g$syntax-violation$8907$kwCBQ
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9585$kwCBQ))))
                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                           g$t$9585$kwCBQ
                                                                           '_))))
                                                                     g$t$9580$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$9580$kwCBQ
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9576$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$9576$kwCBQ
                                                       '(any)))))
                                                 g$t$9571$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$9571$kwCBQ
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9569$kwCBQ))))
                                 (g$f*$9542$kwCBQ
                                   (case-lambda
                                     ((g$x*$9549$kwCBQ)
                                      ((case-lambda
                                         ((g$t$9550$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$9551$kwCBQ)
                                              (if g$ls/false$9551$kwCBQ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9538$kwCBQ)
                                                       '#t)))
                                                  g$ls/false$9551$kwCBQ)
                                                ((case-lambda
                                                   ((g$t$9552$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$9553$kwCBQ)
                                                        (if g$ls/false$9553$kwCBQ
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9554$kwCBQ
                                                                 g$e*$9555$kwCBQ)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9554$kwCBQ
                                                                     g$e*$9555$kwCBQ))
                                                                 '#f)))
                                                            g$ls/false$9553$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$9556$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$9557$kwCBQ)
                                                                  (if g$ls/false$9557$kwCBQ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9558$kwCBQ
                                                                           g$cls*$9559$kwCBQ)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9542$kwCBQ
                                                                                g$cls*$9559$kwCBQ)))
                                                                           (case-lambda
                                                                             ((g$e$9562$kwCBQ
                                                                                g$g$9563$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$g$9564$kwCBQ
                                                                                    g$e$9565$kwCBQ)
                                                                                  (values
                                                                                    (g$f$9541$kwCBQ
                                                                                      g$cls$9558$kwCBQ
                                                                                      g$e$9565$kwCBQ)
                                                                                    g$g$9564$kwCBQ)))
                                                                               g$g$9563$kwCBQ
                                                                               g$e$9562$kwCBQ))))))
                                                                      g$ls/false$9557$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$t$9566$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9567$kwCBQ)
                                                                            (if g$ls/false$9567$kwCBQ
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9568$kwCBQ)
                                                                                   (g$syntax-violation$8907$kwCBQ
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9568$kwCBQ)))
                                                                                g$ls/false$9567$kwCBQ)
                                                                              (g$syntax-violation$8907$kwCBQ
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9566$kwCBQ))))
                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                           g$t$9566$kwCBQ
                                                                           'any))))
                                                                     g$t$9556$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$9556$kwCBQ
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9552$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$9552$kwCBQ
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9550$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$9550$kwCBQ
                                             '()))))
                                       g$x*$9549$kwCBQ)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9542$kwCBQ g$clause*$9540$kwCBQ)))
                           (case-lambda
                             ((g$code$9545$kwCBQ g$raisek$9546$kwCBQ)
                              ((case-lambda
                                 ((g$raisek$9547$kwCBQ g$code$9548$kwCBQ)
                                  (if g$raisek$9547$kwCBQ
                                    (list g$outerk$9539$kwCBQ g$code$9548$kwCBQ)
                                    g$code$9548$kwCBQ)))
                               g$raisek$9546$kwCBQ
                               g$code$9545$kwCBQ)))))))))
          ((case-lambda
             ((g$t$9527$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9528$kwCBQ)
                  (if (if g$ls/false$9528$kwCBQ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9529$kwCBQ
                                 g$clause*$9530$kwCBQ
                                 g$b$9531$kwCBQ
                                 g$b*$9532$kwCBQ)
                               (g$id?$8516$kwCBQ g$con$9529$kwCBQ)))
                            g$ls/false$9528$kwCBQ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9533$kwCBQ
                           g$clause*$9534$kwCBQ
                           g$b$9535$kwCBQ
                           g$b*$9536$kwCBQ)
                         ((case-lambda
                            ((g$outerk$9537$kwCBQ)
                             (g$bless$8758$kwCBQ
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9537$kwCBQ)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9533$kwCBQ)
                                           (g$gen-clauses$9526$kwCBQ
                                             g$con$9533$kwCBQ
                                             g$outerk$9537$kwCBQ
                                             g$clause*$9534$kwCBQ))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9535$kwCBQ
                                                 g$b*$9536$kwCBQ))))))))))))
                          (gensym))))
                      g$ls/false$9528$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$9527$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9527$kwCBQ
                 '(_ (any . each-any) any . each-any)))))
           g$x$9525$kwCBQ)))))
   (g$define-enumeration-macro$8771$kwCBQ
     g$define-enumeration-macro$12289$kwCBQ
     (case-lambda
       ((g$stx$9587$kwCBQ)
        (letrec* ((g$set?$9588$kwCBQ
                    (case-lambda
                      ((g$x$9601$kwCBQ)
                       ((case-lambda
                          ((g$t$9602$kwCBQ)
                           (if g$t$9602$kwCBQ
                             g$t$9602$kwCBQ
                             (begin
                               '#f
                               (if (not (g$memq$5804$kwCBQ
                                          (car g$x$9601$kwCBQ)
                                          (cdr g$x$9601$kwCBQ)))
                                 (begin
                                   '#f
                                   (g$set?$9588$kwCBQ (cdr g$x$9601$kwCBQ)))
                                 '#f)))))
                        (null? g$x$9601$kwCBQ)))))
                  (g$remove-dups$9589$kwCBQ
                    (case-lambda
                      ((g$ls$9600$kwCBQ)
                       (if (null? g$ls$9600$kwCBQ)
                         '()
                         (cons
                           (car g$ls$9600$kwCBQ)
                           (g$remove-dups$9589$kwCBQ
                             (g$remq$5819$kwCBQ
                               (car g$ls$9600$kwCBQ)
                               (cdr g$ls$9600$kwCBQ)))))))))
          ((case-lambda
             ((g$t$9590$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9591$kwCBQ)
                  (if (if g$ls/false$9591$kwCBQ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9592$kwCBQ
                                 g$id*$9593$kwCBQ
                                 g$maker$9594$kwCBQ)
                               (if (g$id?$8516$kwCBQ g$name$9592$kwCBQ)
                                 (if (g$id?$8516$kwCBQ g$maker$9594$kwCBQ)
                                   (begin
                                     '#f
                                     (g$for-all$5810$kwCBQ
                                       g$id?$8516$kwCBQ
                                       g$id*$9593$kwCBQ))
                                   '#f)
                                 '#f)))
                            g$ls/false$9591$kwCBQ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9595$kwCBQ g$id*$9596$kwCBQ g$maker$9597$kwCBQ)
                         ((case-lambda
                            ((g$name*$9598$kwCBQ g$mk$9599$kwCBQ)
                             (g$bless$8758$kwCBQ
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9599$kwCBQ
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9598$kwCBQ))))
                                 (list
                                   'define-syntax
                                   g$name$9595$kwCBQ
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9598$kwCBQ))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9595$kwCBQ)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9597$kwCBQ
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9597$kwCBQ)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9598$kwCBQ))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9597$kwCBQ)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9599$kwCBQ
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9589$kwCBQ
                            (g$syntax->datum$8910$kwCBQ g$id*$9596$kwCBQ))
                          (gensym))))
                      g$ls/false$9591$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$9590$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9590$kwCBQ
                 '(_ any each-any any)))))
           g$stx$9587$kwCBQ)))))
   (g$time-macro$8772$kwCBQ
     g$time-macro$12290$kwCBQ
     (case-lambda
       ((g$stx$9603$kwCBQ)
        ((case-lambda
           ((g$t$9604$kwCBQ)
            ((case-lambda
               ((g$ls/false$9605$kwCBQ)
                (if g$ls/false$9605$kwCBQ
                  (apply
                    (case-lambda
                      ((g$expr$9606$kwCBQ)
                       ((case-lambda
                          ((g$str$9607$kwCBQ)
                           (g$bless$8758$kwCBQ
                             (list
                               'time-it
                               g$str$9607$kwCBQ
                               (list 'lambda '() g$expr$9606$kwCBQ)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$7113$kwCBQ)))
                          (case-lambda
                            ((g$p$9610$kwCBQ g$e$9611$kwCBQ)
                             ((case-lambda
                                ((g$e$9612$kwCBQ g$p$9613$kwCBQ)
                                 (begin
                                   (write
                                     (g$syntax->datum$8910$kwCBQ
                                       g$expr$9606$kwCBQ)
                                     g$p$9613$kwCBQ)
                                   (g$e$9612$kwCBQ))))
                              g$e$9611$kwCBQ
                              g$p$9610$kwCBQ)))))))
                    g$ls/false$9605$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9604$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9604$kwCBQ '(_ any)))))
         g$stx$9603$kwCBQ))))
   (g$delay-macro$8773$kwCBQ
     g$delay-macro$12291$kwCBQ
     (case-lambda
       ((g$stx$9614$kwCBQ)
        ((case-lambda
           ((g$t$9615$kwCBQ)
            ((case-lambda
               ((g$ls/false$9616$kwCBQ)
                (if g$ls/false$9616$kwCBQ
                  (apply
                    (case-lambda
                      ((g$expr$9617$kwCBQ)
                       (g$bless$8758$kwCBQ
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9617$kwCBQ)))))
                    g$ls/false$9616$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9615$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9615$kwCBQ '(_ any)))))
         g$stx$9614$kwCBQ))))
   (g$assert-macro$8774$kwCBQ
     g$assert-macro$12292$kwCBQ
     (case-lambda
       ((g$stx$9618$kwCBQ)
        ((case-lambda
           ((g$t$9619$kwCBQ)
            ((case-lambda
               ((g$ls/false$9620$kwCBQ)
                (if g$ls/false$9620$kwCBQ
                  (apply
                    (case-lambda
                      ((g$expr$9621$kwCBQ)
                       ((case-lambda
                          ((g$pos$9622$kwCBQ)
                           (g$bless$8758$kwCBQ
                             (list
                               'unless
                               g$expr$9621$kwCBQ
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9621$kwCBQ)
                                 (list 'quote g$pos$9622$kwCBQ))))))
                        ((case-lambda
                           ((g$t$9623$kwCBQ)
                            (if g$t$9623$kwCBQ
                              g$t$9623$kwCBQ
                              (begin
                                '#f
                                (g$expression-position$8902$kwCBQ
                                  g$expr$9621$kwCBQ)))))
                         (g$expression-position$8902$kwCBQ g$stx$9618$kwCBQ)))))
                    g$ls/false$9620$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9619$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9619$kwCBQ '(_ any)))))
         g$stx$9618$kwCBQ))))
   (g$endianness-macro$8775$kwCBQ
     g$endianness-macro$12293$kwCBQ
     (case-lambda
       ((g$stx$9624$kwCBQ)
        ((case-lambda
           ((g$t$9625$kwCBQ)
            ((case-lambda
               ((g$ls/false$9626$kwCBQ)
                (if g$ls/false$9626$kwCBQ
                  (apply
                    (case-lambda
                      ((g$e$9627$kwCBQ)
                       ((case-lambda
                          ((g$t$9628$kwCBQ)
                           (if (g$memv$5805$kwCBQ g$t$9628$kwCBQ '(little))
                             (g$bless$8758$kwCBQ ''little)
                             (if (g$memv$5805$kwCBQ g$t$9628$kwCBQ '(big))
                               (g$bless$8758$kwCBQ ''big)
                               (g$syntax-violation$8907$kwCBQ
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9624$kwCBQ)))))
                        (g$syntax->datum$8910$kwCBQ g$e$9627$kwCBQ))))
                    g$ls/false$9626$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9625$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9625$kwCBQ '(_ any)))))
         g$stx$9624$kwCBQ))))
   (g$identifier-syntax-macro$8776$kwCBQ
     g$identifier-syntax-macro$12294$kwCBQ
     (case-lambda
       ((g$stx$9629$kwCBQ)
        ((case-lambda
           ((g$t$9630$kwCBQ)
            ((case-lambda
               ((g$ls/false$9631$kwCBQ)
                (if g$ls/false$9631$kwCBQ
                  (apply
                    (case-lambda
                      ((g$expr$9632$kwCBQ)
                       (g$bless$8758$kwCBQ
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9632$kwCBQ))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9632$kwCBQ)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9631$kwCBQ)
                  ((case-lambda
                     ((g$t$9633$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9634$kwCBQ)
                          (if (if g$ls/false$9634$kwCBQ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9635$kwCBQ
                                         g$expr1$9636$kwCBQ
                                         g$id2$9637$kwCBQ
                                         g$expr2$9638$kwCBQ
                                         g$expr3$9639$kwCBQ)
                                       (if (g$id?$8516$kwCBQ g$id1$9635$kwCBQ)
                                         (if (g$id?$8516$kwCBQ g$id2$9637$kwCBQ)
                                           (begin
                                             '#f
                                             (g$id?$8516$kwCBQ
                                               g$expr2$9638$kwCBQ))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9634$kwCBQ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9640$kwCBQ
                                   g$expr1$9641$kwCBQ
                                   g$id2$9642$kwCBQ
                                   g$expr2$9643$kwCBQ
                                   g$expr3$9644$kwCBQ)
                                 (g$bless$8758$kwCBQ
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9641$kwCBQ))
                                         (list
                                           (list 'set! 'id g$expr2$9643$kwCBQ)
                                           (list 'syntax g$expr3$9644$kwCBQ))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9641$kwCBQ
                                               '(e* ...))))))))))
                              g$ls/false$9634$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9633$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9633$kwCBQ
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9630$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9630$kwCBQ '(_ any)))))
         g$stx$9629$kwCBQ))))
   (g$do-macro$8777$kwCBQ
     g$do-macro$12295$kwCBQ
     (case-lambda
       ((g$stx$9645$kwCBQ)
        (letrec* ((g$bind$9646$kwCBQ
                    (case-lambda
                      ((g$x$9658$kwCBQ)
                       ((case-lambda
                          ((g$t$9659$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$9660$kwCBQ)
                               (if g$ls/false$9660$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$x$9661$kwCBQ g$init$9662$kwCBQ)
                                      (list
                                        g$x$9661$kwCBQ
                                        g$init$9662$kwCBQ
                                        g$x$9661$kwCBQ)))
                                   g$ls/false$9660$kwCBQ)
                                 ((case-lambda
                                    ((g$t$9663$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$9664$kwCBQ)
                                         (if g$ls/false$9664$kwCBQ
                                           (apply
                                             (case-lambda
                                               ((g$x$9665$kwCBQ
                                                  g$init$9666$kwCBQ
                                                  g$step$9667$kwCBQ)
                                                (list
                                                  g$x$9665$kwCBQ
                                                  g$init$9666$kwCBQ
                                                  g$step$9667$kwCBQ)))
                                             g$ls/false$9664$kwCBQ)
                                           ((case-lambda
                                              ((g$t$9668$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$9669$kwCBQ)
                                                   (if g$ls/false$9669$kwCBQ
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8907$kwCBQ
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9645$kwCBQ)))
                                                       g$ls/false$9669$kwCBQ)
                                                     (g$syntax-violation$8907$kwCBQ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9668$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$9668$kwCBQ
                                                  '_))))
                                            g$t$9663$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$9663$kwCBQ
                                        '(any any any)))))
                                  g$t$9659$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$9659$kwCBQ
                              '(any any)))))
                        g$x$9658$kwCBQ)))))
          ((case-lambda
             ((g$t$9647$kwCBQ)
              ((case-lambda
                 ((g$ls/false$9648$kwCBQ)
                  (if g$ls/false$9648$kwCBQ
                    (apply
                      (case-lambda
                        ((g$binding*$9649$kwCBQ
                           g$test$9650$kwCBQ
                           g$expr*$9651$kwCBQ
                           g$command*$9652$kwCBQ)
                         ((case-lambda
                            ((g$t$9653$kwCBQ)
                             ((case-lambda
                                ((g$ls/false$9654$kwCBQ)
                                 (if g$ls/false$9654$kwCBQ
                                   (apply
                                     (case-lambda
                                       ((g$x*$9655$kwCBQ
                                          g$init*$9656$kwCBQ
                                          g$step*$9657$kwCBQ)
                                        (if (g$valid-bound-ids?$8521$kwCBQ
                                              g$x*$9655$kwCBQ)
                                          (g$bless$8758$kwCBQ
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9655$kwCBQ
                                                    (list
                                                      'if
                                                      g$test$9650$kwCBQ
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9651$kwCBQ))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9652$kwCBQ
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9657$kwCBQ))))))))
                                              (cons 'loop g$init*$9656$kwCBQ)))
                                          (g$syntax-violation$8907$kwCBQ
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9645$kwCBQ))))
                                     g$ls/false$9654$kwCBQ)
                                   (g$syntax-violation$8907$kwCBQ
                                     '#f
                                     '"invalid syntax"
                                     g$t$9653$kwCBQ))))
                              (g$syntax-dispatch$8795$kwCBQ
                                g$t$9653$kwCBQ
                                '#(each (any any any))))))
                          (g$map$5812$kwCBQ
                            g$bind$9646$kwCBQ
                            g$binding*$9649$kwCBQ))))
                      g$ls/false$9648$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$9647$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$9647$kwCBQ
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9645$kwCBQ)))))
   (g$let*-macro$8778$kwCBQ
     g$let*-macro$12296$kwCBQ
     (case-lambda
       ((g$stx$9670$kwCBQ)
        ((case-lambda
           ((g$t$9671$kwCBQ)
            ((case-lambda
               ((g$ls/false$9672$kwCBQ)
                (if (if g$ls/false$9672$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9673$kwCBQ
                               g$rhs*$9674$kwCBQ
                               g$b$9675$kwCBQ
                               g$b*$9676$kwCBQ)
                             (g$for-all$5810$kwCBQ
                               g$id?$8516$kwCBQ
                               g$lhs*$9673$kwCBQ)))
                          g$ls/false$9672$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9677$kwCBQ
                         g$rhs*$9678$kwCBQ
                         g$b$9679$kwCBQ
                         g$b*$9680$kwCBQ)
                       (g$bless$8758$kwCBQ
                         ((letrec ((g$f$9681$kwCBQ
                                     (case-lambda
                                       ((g$x*$9682$kwCBQ)
                                        (if (null? g$x*$9682$kwCBQ)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9679$kwCBQ
                                                g$b*$9680$kwCBQ)))
                                          (if (null? (cdr g$x*$9682$kwCBQ))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$9682$kwCBQ))
                                                (cons
                                                  g$b$9679$kwCBQ
                                                  g$b*$9680$kwCBQ)))
                                            (list
                                              'let
                                              (list (car g$x*$9682$kwCBQ))
                                              (g$f$9681$kwCBQ
                                                (cdr g$x*$9682$kwCBQ)))))))))
                            g$f$9681$kwCBQ)
                          (g$map$5812$kwCBQ
                            list
                            g$lhs*$9677$kwCBQ
                            g$rhs*$9678$kwCBQ)))))
                    g$ls/false$9672$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9671$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9671$kwCBQ
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9670$kwCBQ))))
   (g$or-macro$8779$kwCBQ
     g$or-macro$12297$kwCBQ
     (case-lambda
       ((g$stx$9683$kwCBQ)
        ((case-lambda
           ((g$t$9684$kwCBQ)
            ((case-lambda
               ((g$ls/false$9685$kwCBQ)
                (if g$ls/false$9685$kwCBQ
                  (apply (case-lambda (() '#f)) g$ls/false$9685$kwCBQ)
                  ((case-lambda
                     ((g$t$9686$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9687$kwCBQ)
                          (if g$ls/false$9687$kwCBQ
                            (apply
                              (case-lambda
                                ((g$e$9688$kwCBQ g$e*$9689$kwCBQ)
                                 (g$bless$8758$kwCBQ
                                   ((letrec ((g$f$9690$kwCBQ
                                               (case-lambda
                                                 ((g$e$9691$kwCBQ
                                                    g$e*$9692$kwCBQ)
                                                  (if (null? g$e*$9692$kwCBQ)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9691$kwCBQ)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9691$kwCBQ))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9690$kwCBQ
                                                          (car g$e*$9692$kwCBQ)
                                                          (cdr g$e*$9692$kwCBQ)))))))))
                                      g$f$9690$kwCBQ)
                                    g$e$9688$kwCBQ
                                    g$e*$9689$kwCBQ))))
                              g$ls/false$9687$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9686$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9686$kwCBQ
                         '(_ any . each-any)))))
                   g$t$9684$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9684$kwCBQ '(_)))))
         g$stx$9683$kwCBQ))))
   (g$and-macro$8780$kwCBQ
     g$and-macro$12298$kwCBQ
     (case-lambda
       ((g$stx$9693$kwCBQ)
        ((case-lambda
           ((g$t$9694$kwCBQ)
            ((case-lambda
               ((g$ls/false$9695$kwCBQ)
                (if g$ls/false$9695$kwCBQ
                  (apply (case-lambda (() '#t)) g$ls/false$9695$kwCBQ)
                  ((case-lambda
                     ((g$t$9696$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$9697$kwCBQ)
                          (if g$ls/false$9697$kwCBQ
                            (apply
                              (case-lambda
                                ((g$e$9698$kwCBQ g$e*$9699$kwCBQ)
                                 (g$bless$8758$kwCBQ
                                   ((letrec ((g$f$9700$kwCBQ
                                               (case-lambda
                                                 ((g$e$9701$kwCBQ
                                                    g$e*$9702$kwCBQ)
                                                  (if (null? g$e*$9702$kwCBQ)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9701$kwCBQ)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9701$kwCBQ
                                                        (cons
                                                          (g$f$9700$kwCBQ
                                                            (car g$e*$9702$kwCBQ)
                                                            (cdr g$e*$9702$kwCBQ))
                                                          '(#f)))))))))
                                      g$f$9700$kwCBQ)
                                    g$e$9698$kwCBQ
                                    g$e*$9699$kwCBQ))))
                              g$ls/false$9697$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$9696$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$9696$kwCBQ
                         '(_ any . each-any)))))
                   g$t$9694$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9694$kwCBQ '(_)))))
         g$stx$9693$kwCBQ))))
   (g$cond-macro$8781$kwCBQ
     g$cond-macro$12299$kwCBQ
     (case-lambda
       ((g$stx$9703$kwCBQ)
        ((case-lambda
           ((g$t$9704$kwCBQ)
            ((case-lambda
               ((g$ls/false$9705$kwCBQ)
                (if g$ls/false$9705$kwCBQ
                  (apply
                    (case-lambda
                      ((g$cls$9706$kwCBQ g$cls*$9707$kwCBQ)
                       (g$bless$8758$kwCBQ
                         ((letrec ((g$f$9708$kwCBQ
                                     (case-lambda
                                       ((g$cls$9709$kwCBQ g$cls*$9710$kwCBQ)
                                        (if (null? g$cls*$9710$kwCBQ)
                                          ((case-lambda
                                             ((g$t$9711$kwCBQ)
                                              ((case-lambda
                                                 ((g$ls/false$9712$kwCBQ)
                                                  (if g$ls/false$9712$kwCBQ
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9713$kwCBQ
                                                           g$e*$9714$kwCBQ)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9713$kwCBQ
                                                             g$e*$9714$kwCBQ))))
                                                      g$ls/false$9712$kwCBQ)
                                                    ((case-lambda
                                                       ((g$t$9715$kwCBQ)
                                                        ((case-lambda
                                                           ((g$ls/false$9716$kwCBQ)
                                                            (if g$ls/false$9716$kwCBQ
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9717$kwCBQ
                                                                     g$p$9718$kwCBQ)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9717$kwCBQ))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9718$kwCBQ
                                                                         '(t))))))
                                                                g$ls/false$9716$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$t$9719$kwCBQ)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9720$kwCBQ)
                                                                      (if g$ls/false$9720$kwCBQ
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9721$kwCBQ)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9721$kwCBQ
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9720$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$t$9722$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9723$kwCBQ)
                                                                                (if g$ls/false$9723$kwCBQ
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9724$kwCBQ
                                                                                         g$e*$9725$kwCBQ)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9724$kwCBQ
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9725$kwCBQ))))
                                                                                    g$ls/false$9723$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$t$9726$kwCBQ)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9727$kwCBQ)
                                                                                          (if g$ls/false$9727$kwCBQ
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8907$kwCBQ
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9703$kwCBQ)))
                                                                                              g$ls/false$9727$kwCBQ)
                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9726$kwCBQ))))
                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                         g$t$9726$kwCBQ
                                                                                         '_))))
                                                                                   g$t$9722$kwCBQ))))
                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                               g$t$9722$kwCBQ
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9719$kwCBQ))))
                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                     g$t$9719$kwCBQ
                                                                     '(any)))))
                                                               g$t$9715$kwCBQ))))
                                                         (g$syntax-dispatch$8795$kwCBQ
                                                           g$t$9715$kwCBQ
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9711$kwCBQ))))
                                               (g$syntax-dispatch$8795$kwCBQ
                                                 g$t$9711$kwCBQ
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9709$kwCBQ)
                                          ((case-lambda
                                             ((g$t$9728$kwCBQ)
                                              ((case-lambda
                                                 ((g$ls/false$9729$kwCBQ)
                                                  (if g$ls/false$9729$kwCBQ
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9730$kwCBQ
                                                           g$e*$9731$kwCBQ)
                                                         (g$syntax-violation$8907$kwCBQ
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9703$kwCBQ)))
                                                      g$ls/false$9729$kwCBQ)
                                                    ((case-lambda
                                                       ((g$t$9732$kwCBQ)
                                                        ((case-lambda
                                                           ((g$ls/false$9733$kwCBQ)
                                                            (if g$ls/false$9733$kwCBQ
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9734$kwCBQ
                                                                     g$p$9735$kwCBQ)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9734$kwCBQ))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9735$kwCBQ
                                                                         '(t))
                                                                       (g$f$9708$kwCBQ
                                                                         (car g$cls*$9710$kwCBQ)
                                                                         (cdr g$cls*$9710$kwCBQ))))))
                                                                g$ls/false$9733$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$t$9736$kwCBQ)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9737$kwCBQ)
                                                                      (if g$ls/false$9737$kwCBQ
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9738$kwCBQ)
                                                                             (list
                                                                               'or
                                                                               g$e$9738$kwCBQ
                                                                               (g$f$9708$kwCBQ
                                                                                 (car g$cls*$9710$kwCBQ)
                                                                                 (cdr g$cls*$9710$kwCBQ)))))
                                                                          g$ls/false$9737$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$t$9739$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9740$kwCBQ)
                                                                                (if g$ls/false$9740$kwCBQ
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9741$kwCBQ
                                                                                         g$e*$9742$kwCBQ)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9741$kwCBQ
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9742$kwCBQ)
                                                                                         (g$f$9708$kwCBQ
                                                                                           (car g$cls*$9710$kwCBQ)
                                                                                           (cdr g$cls*$9710$kwCBQ)))))
                                                                                    g$ls/false$9740$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$t$9743$kwCBQ)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9744$kwCBQ)
                                                                                          (if g$ls/false$9744$kwCBQ
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8907$kwCBQ
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9703$kwCBQ)))
                                                                                              g$ls/false$9744$kwCBQ)
                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9743$kwCBQ))))
                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                         g$t$9743$kwCBQ
                                                                                         '_))))
                                                                                   g$t$9739$kwCBQ))))
                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                               g$t$9739$kwCBQ
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9736$kwCBQ))))
                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                     g$t$9736$kwCBQ
                                                                     '(any)))))
                                                               g$t$9732$kwCBQ))))
                                                         (g$syntax-dispatch$8795$kwCBQ
                                                           g$t$9732$kwCBQ
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9728$kwCBQ))))
                                               (g$syntax-dispatch$8795$kwCBQ
                                                 g$t$9728$kwCBQ
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9709$kwCBQ))))))
                            g$f$9708$kwCBQ)
                          g$cls$9706$kwCBQ
                          g$cls*$9707$kwCBQ))))
                    g$ls/false$9705$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9704$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9704$kwCBQ
               '(_ any . each-any)))))
         g$stx$9703$kwCBQ))))
   (g$do-include$8782$kwCBQ
     g$do-include$12300$kwCBQ
     (case-lambda
       ((g$stx$9745$kwCBQ g$id$9746$kwCBQ g$filename$9747$kwCBQ)
        ((case-lambda
           ((g$filename$9748$kwCBQ)
            (begin
              (if (not (if (string? g$filename$9748$kwCBQ)
                         (begin '#f (g$id?$8516$kwCBQ g$id$9746$kwCBQ))
                         '#f))
                (g$syntax-violation$8907$kwCBQ
                  '#f
                  '"invalid syntax"
                  g$stx$9745$kwCBQ)
                (void))
              (cons
                (g$bless$8758$kwCBQ 'begin)
                (g$with-input-from-file$7162$kwCBQ
                  g$filename$9748$kwCBQ
                  (case-lambda
                    (()
                     ((letrec ((g$f$9749$kwCBQ
                                 (case-lambda
                                   ((g$ls$9750$kwCBQ)
                                    ((case-lambda
                                       ((g$x$9751$kwCBQ)
                                        (if (eof-object? g$x$9751$kwCBQ)
                                          (reverse g$ls$9750$kwCBQ)
                                          (g$f$9749$kwCBQ
                                            (cons
                                              (g$datum->stx$8499$kwCBQ
                                                g$id$9746$kwCBQ
                                                g$x$9751$kwCBQ)
                                              g$ls$9750$kwCBQ)))))
                                     (read-annotated))))))
                        g$f$9749$kwCBQ)
                      '()))))))))
         (g$stx->datum$8527$kwCBQ g$filename$9747$kwCBQ)))))
   (g$include-macro$8783$kwCBQ
     g$include-macro$12301$kwCBQ
     (case-lambda
       ((g$e$9752$kwCBQ)
        ((case-lambda
           ((g$t$9753$kwCBQ)
            ((case-lambda
               ((g$ls/false$9754$kwCBQ)
                (if g$ls/false$9754$kwCBQ
                  (apply
                    (case-lambda
                      ((g$id$9755$kwCBQ g$filename$9756$kwCBQ)
                       (g$do-include$8782$kwCBQ
                         g$e$9752$kwCBQ
                         g$id$9755$kwCBQ
                         g$filename$9756$kwCBQ)))
                    g$ls/false$9754$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9753$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9753$kwCBQ '(any any)))))
         g$e$9752$kwCBQ))))
   (g$include-into-macro$8784$kwCBQ
     g$include-into-macro$12302$kwCBQ
     (case-lambda
       ((g$e$9757$kwCBQ)
        ((case-lambda
           ((g$t$9758$kwCBQ)
            ((case-lambda
               ((g$ls/false$9759$kwCBQ)
                (if g$ls/false$9759$kwCBQ
                  (apply
                    (case-lambda
                      ((g$id$9760$kwCBQ g$filename$9761$kwCBQ)
                       (g$do-include$8782$kwCBQ
                         g$e$9757$kwCBQ
                         g$id$9760$kwCBQ
                         g$filename$9761$kwCBQ)))
                    g$ls/false$9759$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9758$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$9758$kwCBQ '(_ any any)))))
         g$e$9757$kwCBQ))))
   (g$syntax-rules-macro$8785$kwCBQ
     g$syntax-rules-macro$12303$kwCBQ
     (case-lambda
       ((g$e$9762$kwCBQ)
        ((case-lambda
           ((g$t$9763$kwCBQ)
            ((case-lambda
               ((g$ls/false$9764$kwCBQ)
                (if g$ls/false$9764$kwCBQ
                  (apply
                    (case-lambda
                      ((g$lits$9765$kwCBQ g$pat*$9766$kwCBQ g$tmp*$9767$kwCBQ)
                       (begin
                         (g$verify-literals$8798$kwCBQ
                           g$lits$9765$kwCBQ
                           g$e$9762$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9765$kwCBQ
                                   (g$map$5812$kwCBQ
                                     (case-lambda
                                       ((g$pat$9768$kwCBQ g$tmp$9769$kwCBQ)
                                        ((case-lambda
                                           ((g$t$9770$kwCBQ)
                                            ((case-lambda
                                               ((g$ls/false$9771$kwCBQ)
                                                (if g$ls/false$9771$kwCBQ
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$9772$kwCBQ)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$9772$kwCBQ)
                                                         (list
                                                           'syntax
                                                           g$tmp$9769$kwCBQ))))
                                                    g$ls/false$9771$kwCBQ)
                                                  ((case-lambda
                                                     ((g$t$9773$kwCBQ)
                                                      ((case-lambda
                                                         ((g$ls/false$9774$kwCBQ)
                                                          (if g$ls/false$9774$kwCBQ
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8907$kwCBQ
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$9762$kwCBQ
                                                                   g$pat$9768$kwCBQ)))
                                                              g$ls/false$9774$kwCBQ)
                                                            (g$syntax-violation$8907$kwCBQ
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$9773$kwCBQ))))
                                                       (g$syntax-dispatch$8795$kwCBQ
                                                         g$t$9773$kwCBQ
                                                         '_))))
                                                   g$t$9770$kwCBQ))))
                                             (g$syntax-dispatch$8795$kwCBQ
                                               g$t$9770$kwCBQ
                                               '(_ . any)))))
                                         g$pat$9768$kwCBQ)))
                                     g$pat*$9766$kwCBQ
                                     g$tmp*$9767$kwCBQ)))))))))
                    g$ls/false$9764$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$9763$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$9763$kwCBQ
               '(_ each-any . #(each (any any)))))))
         g$e$9762$kwCBQ))))
   (g$quasiquote-macro$8786$kwCBQ
     g$quasiquote-macro$12304$kwCBQ
     ((case-lambda
        (()
         (letrec* ((g$datum$9775$kwCBQ
                     (case-lambda
                       ((g$x$9906$kwCBQ)
                        (list
                          (g$scheme-stx$8738$kwCBQ 'quote)
                          (g$mkstx$8504$kwCBQ g$x$9906$kwCBQ '() '() '())))))
                   (g$quasicons*$9791$kwCBQ
                     (case-lambda
                       ((g$x$9902$kwCBQ g$y$9903$kwCBQ)
                        ((letrec ((g$f$9904$kwCBQ
                                    (case-lambda
                                      ((g$x$9905$kwCBQ)
                                       (if (null? g$x$9905$kwCBQ)
                                         g$y$9903$kwCBQ
                                         (g$quasicons$9792$kwCBQ
                                           (car g$x$9905$kwCBQ)
                                           (g$f$9904$kwCBQ
                                             (cdr g$x$9905$kwCBQ))))))))
                           g$f$9904$kwCBQ)
                         g$x$9902$kwCBQ))))
                   (g$quasicons$9792$kwCBQ
                     (case-lambda
                       ((g$x$9883$kwCBQ g$y$9884$kwCBQ)
                        ((case-lambda
                           ((g$t$9885$kwCBQ)
                            ((case-lambda
                               ((g$ls/false$9886$kwCBQ)
                                (if g$ls/false$9886$kwCBQ
                                  (apply
                                    (case-lambda
                                      ((g$dy$9887$kwCBQ)
                                       ((case-lambda
                                          ((g$t$9888$kwCBQ)
                                           ((case-lambda
                                              ((g$ls/false$9889$kwCBQ)
                                               (if g$ls/false$9889$kwCBQ
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9890$kwCBQ)
                                                      (list
                                                        (g$scheme-stx$8738$kwCBQ
                                                          'quote)
                                                        (cons
                                                          g$dx$9890$kwCBQ
                                                          g$dy$9887$kwCBQ))))
                                                   g$ls/false$9889$kwCBQ)
                                                 ((case-lambda
                                                    ((g$t$9891$kwCBQ)
                                                     ((case-lambda
                                                        ((g$ls/false$9892$kwCBQ)
                                                         (if g$ls/false$9892$kwCBQ
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9893$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9894$kwCBQ)
                                                                        (if g$ls/false$9894$kwCBQ
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8738$kwCBQ
                                                                                   'list)
                                                                                 g$x$9883$kwCBQ)))
                                                                            g$ls/false$9894$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$9895$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9896$kwCBQ)
                                                                                  (if g$ls/false$9896$kwCBQ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8738$kwCBQ
                                                                                             'cons)
                                                                                           g$x$9883$kwCBQ
                                                                                           g$y$9884$kwCBQ)))
                                                                                      g$ls/false$9896$kwCBQ)
                                                                                    (g$syntax-violation$8907$kwCBQ
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9895$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$9895$kwCBQ
                                                                                 '_))))
                                                                           g$t$9893$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$9893$kwCBQ
                                                                       '()))))
                                                                 g$dy$9887$kwCBQ)))
                                                             g$ls/false$9892$kwCBQ)
                                                           (g$syntax-violation$8907$kwCBQ
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9891$kwCBQ))))
                                                      (g$syntax-dispatch$8795$kwCBQ
                                                        g$t$9891$kwCBQ
                                                        '_))))
                                                  g$t$9888$kwCBQ))))
                                            (g$syntax-dispatch$8795$kwCBQ
                                              g$t$9888$kwCBQ
                                              '(#(scheme-id quote) any)))))
                                        g$x$9883$kwCBQ)))
                                    g$ls/false$9886$kwCBQ)
                                  ((case-lambda
                                     ((g$t$9897$kwCBQ)
                                      ((case-lambda
                                         ((g$ls/false$9898$kwCBQ)
                                          (if g$ls/false$9898$kwCBQ
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9899$kwCBQ)
                                                 (g$cons*$5814$kwCBQ
                                                   (g$scheme-stx$8738$kwCBQ
                                                     'list)
                                                   g$x$9883$kwCBQ
                                                   g$stuff$9899$kwCBQ)))
                                              g$ls/false$9898$kwCBQ)
                                            ((case-lambda
                                               ((g$t$9900$kwCBQ)
                                                ((case-lambda
                                                   ((g$ls/false$9901$kwCBQ)
                                                    (if g$ls/false$9901$kwCBQ
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8738$kwCBQ
                                                               'cons)
                                                             g$x$9883$kwCBQ
                                                             g$y$9884$kwCBQ)))
                                                        g$ls/false$9901$kwCBQ)
                                                      (g$syntax-violation$8907$kwCBQ
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9900$kwCBQ))))
                                                 (g$syntax-dispatch$8795$kwCBQ
                                                   g$t$9900$kwCBQ
                                                   '_))))
                                             g$t$9897$kwCBQ))))
                                       (g$syntax-dispatch$8795$kwCBQ
                                         g$t$9897$kwCBQ
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9885$kwCBQ))))
                             (g$syntax-dispatch$8795$kwCBQ
                               g$t$9885$kwCBQ
                               '(#(scheme-id quote) any)))))
                         g$y$9884$kwCBQ))))
                   (g$quasiappend$9793$kwCBQ
                     (case-lambda
                       ((g$x$9870$kwCBQ g$y$9871$kwCBQ)
                        ((case-lambda
                           ((g$ls$9872$kwCBQ)
                            (if (null? g$ls$9872$kwCBQ)
                              (list (g$scheme-stx$8738$kwCBQ 'quote) '())
                              (if (null? (cdr g$ls$9872$kwCBQ))
                                (car g$ls$9872$kwCBQ)
                                (g$cons*$5814$kwCBQ
                                  (g$scheme-stx$8738$kwCBQ 'append)
                                  g$ls$9872$kwCBQ)))))
                         ((letrec ((g$f$9873$kwCBQ
                                     (case-lambda
                                       ((g$x$9874$kwCBQ)
                                        (if (null? g$x$9874$kwCBQ)
                                          ((case-lambda
                                             ((g$t$9875$kwCBQ)
                                              ((case-lambda
                                                 ((g$ls/false$9876$kwCBQ)
                                                  (if g$ls/false$9876$kwCBQ
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9876$kwCBQ)
                                                    ((case-lambda
                                                       ((g$t$9877$kwCBQ)
                                                        ((case-lambda
                                                           ((g$ls/false$9878$kwCBQ)
                                                            (if g$ls/false$9878$kwCBQ
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9871$kwCBQ)))
                                                                g$ls/false$9878$kwCBQ)
                                                              (g$syntax-violation$8907$kwCBQ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9877$kwCBQ))))
                                                         (g$syntax-dispatch$8795$kwCBQ
                                                           g$t$9877$kwCBQ
                                                           '_))))
                                                     g$t$9875$kwCBQ))))
                                               (g$syntax-dispatch$8795$kwCBQ
                                                 g$t$9875$kwCBQ
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9871$kwCBQ)
                                          ((case-lambda
                                             ((g$t$9879$kwCBQ)
                                              ((case-lambda
                                                 ((g$ls/false$9880$kwCBQ)
                                                  (if g$ls/false$9880$kwCBQ
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9873$kwCBQ
                                                           (cdr g$x$9874$kwCBQ))))
                                                      g$ls/false$9880$kwCBQ)
                                                    ((case-lambda
                                                       ((g$t$9881$kwCBQ)
                                                        ((case-lambda
                                                           ((g$ls/false$9882$kwCBQ)
                                                            (if g$ls/false$9882$kwCBQ
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9874$kwCBQ)
                                                                     (g$f$9873$kwCBQ
                                                                       (cdr g$x$9874$kwCBQ)))))
                                                                g$ls/false$9882$kwCBQ)
                                                              (g$syntax-violation$8907$kwCBQ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9881$kwCBQ))))
                                                         (g$syntax-dispatch$8795$kwCBQ
                                                           g$t$9881$kwCBQ
                                                           '_))))
                                                     g$t$9879$kwCBQ))))
                                               (g$syntax-dispatch$8795$kwCBQ
                                                 g$t$9879$kwCBQ
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9874$kwCBQ)))))))
                            g$f$9873$kwCBQ)
                          g$x$9870$kwCBQ)))))
                   (g$quasivector$9794$kwCBQ
                     (case-lambda
                       ((g$x$9845$kwCBQ)
                        ((case-lambda
                           ((g$pat-x$9846$kwCBQ)
                            ((case-lambda
                               ((g$t$9847$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$9848$kwCBQ)
                                    (if g$ls/false$9848$kwCBQ
                                      (apply
                                        (case-lambda
                                          ((g$x*$9849$kwCBQ)
                                           (list
                                             (g$scheme-stx$8738$kwCBQ 'quote)
                                             (list->vector g$x*$9849$kwCBQ))))
                                        g$ls/false$9848$kwCBQ)
                                      ((case-lambda
                                         ((g$t$9850$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$9851$kwCBQ)
                                              (if g$ls/false$9851$kwCBQ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9852$kwCBQ
                                                                 (case-lambda
                                                                   ((g$x$9853$kwCBQ
                                                                      g$k$9854$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$t$9855$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9856$kwCBQ)
                                                                            (if g$ls/false$9856$kwCBQ
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9857$kwCBQ)
                                                                                   (g$k$9854$kwCBQ
                                                                                     (g$map$5812$kwCBQ
                                                                                       (case-lambda
                                                                                         ((g$x$9858$kwCBQ)
                                                                                          (list
                                                                                            (g$scheme-stx$8738$kwCBQ
                                                                                              'quote)
                                                                                            g$x$9858$kwCBQ)))
                                                                                       g$x*$9857$kwCBQ))))
                                                                                g$ls/false$9856$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$t$9859$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9860$kwCBQ)
                                                                                      (if g$ls/false$9860$kwCBQ
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9861$kwCBQ)
                                                                                             (g$k$9854$kwCBQ
                                                                                               g$x*$9861$kwCBQ)))
                                                                                          g$ls/false$9860$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$t$9862$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9863$kwCBQ)
                                                                                                (if g$ls/false$9863$kwCBQ
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9864$kwCBQ
                                                                                                         g$y$9865$kwCBQ)
                                                                                                       (g$f$9852$kwCBQ
                                                                                                         g$y$9865$kwCBQ
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9866$kwCBQ)
                                                                                                            (g$k$9854$kwCBQ
                                                                                                              (cons
                                                                                                                g$x$9864$kwCBQ
                                                                                                                g$ls$9866$kwCBQ)))))))
                                                                                                    g$ls/false$9863$kwCBQ)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9867$kwCBQ)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9868$kwCBQ)
                                                                                                          (if g$ls/false$9868$kwCBQ
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8738$kwCBQ
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9846$kwCBQ)))
                                                                                                              g$ls/false$9868$kwCBQ)
                                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9867$kwCBQ))))
                                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                                         g$t$9867$kwCBQ
                                                                                                         '_))))
                                                                                                   g$t$9862$kwCBQ))))
                                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                                               g$t$9862$kwCBQ
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9859$kwCBQ))))
                                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                                     g$t$9859$kwCBQ
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9855$kwCBQ))))
                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                           g$t$9855$kwCBQ
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9853$kwCBQ)))))
                                                        g$f$9852$kwCBQ)
                                                      g$x$9845$kwCBQ
                                                      (case-lambda
                                                        ((g$ls$9869$kwCBQ)
                                                         (g$cons*$5814$kwCBQ
                                                           (g$scheme-stx$8738$kwCBQ
                                                             'vector)
                                                           g$ls$9869$kwCBQ))))))
                                                  g$ls/false$9851$kwCBQ)
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9850$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$9850$kwCBQ
                                             '_))))
                                       g$t$9847$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$9847$kwCBQ
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9846$kwCBQ)))
                         g$x$9845$kwCBQ))))
                   (g$vquasi$9795$kwCBQ
                     (case-lambda
                       ((g$p$9828$kwCBQ g$lev$9829$kwCBQ)
                        ((case-lambda
                           ((g$t$9830$kwCBQ)
                            ((case-lambda
                               ((g$ls/false$9831$kwCBQ)
                                (if g$ls/false$9831$kwCBQ
                                  (apply
                                    (case-lambda
                                      ((g$p$9832$kwCBQ g$q$9833$kwCBQ)
                                       ((case-lambda
                                          ((g$t$9834$kwCBQ)
                                           ((case-lambda
                                              ((g$ls/false$9835$kwCBQ)
                                               (if g$ls/false$9835$kwCBQ
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9836$kwCBQ)
                                                      (if (= g$lev$9829$kwCBQ
                                                             '0)
                                                        (g$quasicons*$9791$kwCBQ
                                                          g$p$9836$kwCBQ
                                                          (g$vquasi$9795$kwCBQ
                                                            g$q$9833$kwCBQ
                                                            g$lev$9829$kwCBQ))
                                                        (g$quasicons$9792$kwCBQ
                                                          (g$quasicons$9792$kwCBQ
                                                            (g$datum$9775$kwCBQ
                                                              'unquote)
                                                            (g$quasi$9796$kwCBQ
                                                              g$p$9836$kwCBQ
                                                              (- g$lev$9829$kwCBQ
                                                                 '1)))
                                                          (g$vquasi$9795$kwCBQ
                                                            g$q$9833$kwCBQ
                                                            g$lev$9829$kwCBQ)))))
                                                   g$ls/false$9835$kwCBQ)
                                                 ((case-lambda
                                                    ((g$t$9837$kwCBQ)
                                                     ((case-lambda
                                                        ((g$ls/false$9838$kwCBQ)
                                                         (if g$ls/false$9838$kwCBQ
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9839$kwCBQ)
                                                                (if (= g$lev$9829$kwCBQ
                                                                       '0)
                                                                  (g$quasiappend$9793$kwCBQ
                                                                    g$p$9839$kwCBQ
                                                                    (g$vquasi$9795$kwCBQ
                                                                      g$q$9833$kwCBQ
                                                                      g$lev$9829$kwCBQ))
                                                                  (g$quasicons$9792$kwCBQ
                                                                    (g$quasicons$9792$kwCBQ
                                                                      (g$datum$9775$kwCBQ
                                                                        'unquote-splicing)
                                                                      (g$quasi$9796$kwCBQ
                                                                        g$p$9839$kwCBQ
                                                                        (- g$lev$9829$kwCBQ
                                                                           '1)))
                                                                    (g$vquasi$9795$kwCBQ
                                                                      g$q$9833$kwCBQ
                                                                      g$lev$9829$kwCBQ)))))
                                                             g$ls/false$9838$kwCBQ)
                                                           ((case-lambda
                                                              ((g$t$9840$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$ls/false$9841$kwCBQ)
                                                                   (if g$ls/false$9841$kwCBQ
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9842$kwCBQ)
                                                                          (g$quasicons$9792$kwCBQ
                                                                            (g$quasi$9796$kwCBQ
                                                                              g$p$9842$kwCBQ
                                                                              g$lev$9829$kwCBQ)
                                                                            (g$vquasi$9795$kwCBQ
                                                                              g$q$9833$kwCBQ
                                                                              g$lev$9829$kwCBQ))))
                                                                       g$ls/false$9841$kwCBQ)
                                                                     (g$syntax-violation$8907$kwCBQ
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9840$kwCBQ))))
                                                                (g$syntax-dispatch$8795$kwCBQ
                                                                  g$t$9840$kwCBQ
                                                                  'any))))
                                                            g$t$9837$kwCBQ))))
                                                      (g$syntax-dispatch$8795$kwCBQ
                                                        g$t$9837$kwCBQ
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9834$kwCBQ))))
                                            (g$syntax-dispatch$8795$kwCBQ
                                              g$t$9834$kwCBQ
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9832$kwCBQ)))
                                    g$ls/false$9831$kwCBQ)
                                  ((case-lambda
                                     ((g$t$9843$kwCBQ)
                                      ((case-lambda
                                         ((g$ls/false$9844$kwCBQ)
                                          (if g$ls/false$9844$kwCBQ
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8738$kwCBQ
                                                     'quote)
                                                   '())))
                                              g$ls/false$9844$kwCBQ)
                                            (g$syntax-violation$8907$kwCBQ
                                              '#f
                                              '"invalid syntax"
                                              g$t$9843$kwCBQ))))
                                       (g$syntax-dispatch$8795$kwCBQ
                                         g$t$9843$kwCBQ
                                         '()))))
                                   g$t$9830$kwCBQ))))
                             (g$syntax-dispatch$8795$kwCBQ
                               g$t$9830$kwCBQ
                               '(any . any)))))
                         g$p$9828$kwCBQ))))
                   (g$quasi$9796$kwCBQ
                     (case-lambda
                       ((g$p$9801$kwCBQ g$lev$9802$kwCBQ)
                        ((case-lambda
                           ((g$t$9803$kwCBQ)
                            ((case-lambda
                               ((g$ls/false$9804$kwCBQ)
                                (if g$ls/false$9804$kwCBQ
                                  (apply
                                    (case-lambda
                                      ((g$p$9805$kwCBQ)
                                       (if (= g$lev$9802$kwCBQ '0)
                                         g$p$9805$kwCBQ
                                         (g$quasicons$9792$kwCBQ
                                           (g$datum$9775$kwCBQ 'unquote)
                                           (g$quasi$9796$kwCBQ
                                             (list g$p$9805$kwCBQ)
                                             (- g$lev$9802$kwCBQ '1))))))
                                    g$ls/false$9804$kwCBQ)
                                  ((case-lambda
                                     ((g$t$9806$kwCBQ)
                                      ((case-lambda
                                         ((g$ls/false$9807$kwCBQ)
                                          (if g$ls/false$9807$kwCBQ
                                            (apply
                                              (case-lambda
                                                ((g$p$9808$kwCBQ g$q$9809$kwCBQ)
                                                 (if (= g$lev$9802$kwCBQ '0)
                                                   (g$quasicons*$9791$kwCBQ
                                                     g$p$9808$kwCBQ
                                                     (g$quasi$9796$kwCBQ
                                                       g$q$9809$kwCBQ
                                                       g$lev$9802$kwCBQ))
                                                   (g$quasicons$9792$kwCBQ
                                                     (g$quasicons$9792$kwCBQ
                                                       (g$datum$9775$kwCBQ
                                                         'unquote)
                                                       (g$quasi$9796$kwCBQ
                                                         g$p$9808$kwCBQ
                                                         (- g$lev$9802$kwCBQ
                                                            '1)))
                                                     (g$quasi$9796$kwCBQ
                                                       g$q$9809$kwCBQ
                                                       g$lev$9802$kwCBQ)))))
                                              g$ls/false$9807$kwCBQ)
                                            ((case-lambda
                                               ((g$t$9810$kwCBQ)
                                                ((case-lambda
                                                   ((g$ls/false$9811$kwCBQ)
                                                    (if g$ls/false$9811$kwCBQ
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9812$kwCBQ
                                                             g$q$9813$kwCBQ)
                                                           (if (= g$lev$9802$kwCBQ
                                                                  '0)
                                                             (g$quasiappend$9793$kwCBQ
                                                               g$p$9812$kwCBQ
                                                               (g$quasi$9796$kwCBQ
                                                                 g$q$9813$kwCBQ
                                                                 g$lev$9802$kwCBQ))
                                                             (g$quasicons$9792$kwCBQ
                                                               (g$quasicons$9792$kwCBQ
                                                                 (g$datum$9775$kwCBQ
                                                                   'unquote-splicing)
                                                                 (g$quasi$9796$kwCBQ
                                                                   g$p$9812$kwCBQ
                                                                   (- g$lev$9802$kwCBQ
                                                                      '1)))
                                                               (g$quasi$9796$kwCBQ
                                                                 g$q$9813$kwCBQ
                                                                 g$lev$9802$kwCBQ)))))
                                                        g$ls/false$9811$kwCBQ)
                                                      ((case-lambda
                                                         ((g$t$9814$kwCBQ)
                                                          ((case-lambda
                                                             ((g$ls/false$9815$kwCBQ)
                                                              (if g$ls/false$9815$kwCBQ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9816$kwCBQ)
                                                                     (g$quasicons$9792$kwCBQ
                                                                       (g$datum$9775$kwCBQ
                                                                         'quasiquote)
                                                                       (g$quasi$9796$kwCBQ
                                                                         (list
                                                                           g$p$9816$kwCBQ)
                                                                         (+ g$lev$9802$kwCBQ
                                                                            '1)))))
                                                                  g$ls/false$9815$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$t$9817$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9818$kwCBQ)
                                                                        (if g$ls/false$9818$kwCBQ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9819$kwCBQ
                                                                                 g$q$9820$kwCBQ)
                                                                               (g$quasicons$9792$kwCBQ
                                                                                 (g$quasi$9796$kwCBQ
                                                                                   g$p$9819$kwCBQ
                                                                                   g$lev$9802$kwCBQ)
                                                                                 (g$quasi$9796$kwCBQ
                                                                                   g$q$9820$kwCBQ
                                                                                   g$lev$9802$kwCBQ))))
                                                                            g$ls/false$9818$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$9821$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9822$kwCBQ)
                                                                                  (if (if g$ls/false$9822$kwCBQ
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9823$kwCBQ)
                                                                                               (not (g$stx?$8488$kwCBQ
                                                                                                      g$x$9823$kwCBQ))))
                                                                                            g$ls/false$9822$kwCBQ))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9824$kwCBQ)
                                                                                         (g$quasivector$9794$kwCBQ
                                                                                           (g$vquasi$9795$kwCBQ
                                                                                             g$x$9824$kwCBQ
                                                                                             g$lev$9802$kwCBQ))))
                                                                                      g$ls/false$9822$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$t$9825$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9826$kwCBQ)
                                                                                            (if g$ls/false$9826$kwCBQ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9827$kwCBQ)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8738$kwCBQ
                                                                                                       'quote)
                                                                                                     g$p$9827$kwCBQ)))
                                                                                                g$ls/false$9826$kwCBQ)
                                                                                              (g$syntax-violation$8907$kwCBQ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9825$kwCBQ))))
                                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                                           g$t$9825$kwCBQ
                                                                                           'any))))
                                                                                     g$t$9821$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$9821$kwCBQ
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9817$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$9817$kwCBQ
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9814$kwCBQ))))
                                                           (g$syntax-dispatch$8795$kwCBQ
                                                             g$t$9814$kwCBQ
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9810$kwCBQ))))
                                                 (g$syntax-dispatch$8795$kwCBQ
                                                   g$t$9810$kwCBQ
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9806$kwCBQ))))
                                       (g$syntax-dispatch$8795$kwCBQ
                                         g$t$9806$kwCBQ
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9803$kwCBQ))))
                             (g$syntax-dispatch$8795$kwCBQ
                               g$t$9803$kwCBQ
                               '(#(scheme-id unquote) any)))))
                         g$p$9801$kwCBQ)))))
           (case-lambda
             ((g$x$9797$kwCBQ)
              ((case-lambda
                 ((g$t$9798$kwCBQ)
                  ((case-lambda
                     ((g$ls/false$9799$kwCBQ)
                      (if g$ls/false$9799$kwCBQ
                        (apply
                          (case-lambda
                            ((g$e$9800$kwCBQ)
                             (g$quasi$9796$kwCBQ g$e$9800$kwCBQ '0)))
                          g$ls/false$9799$kwCBQ)
                        (g$syntax-violation$8907$kwCBQ
                          '#f
                          '"invalid syntax"
                          g$t$9798$kwCBQ))))
                   (g$syntax-dispatch$8795$kwCBQ g$t$9798$kwCBQ '(_ any)))))
               g$x$9797$kwCBQ))))))))
   (g$quasisyntax-macro$8787$kwCBQ
     g$quasisyntax-macro$12305$kwCBQ
     ((case-lambda
        (()
         (letrec* ((g$quasi$9907$kwCBQ
                     (case-lambda
                       ((g$p$9921$kwCBQ g$lev$9922$kwCBQ)
                        ((case-lambda
                           ((g$t$9923$kwCBQ)
                            ((case-lambda
                               ((g$ls/false$9924$kwCBQ)
                                (if g$ls/false$9924$kwCBQ
                                  (apply
                                    (case-lambda
                                      ((g$p$9925$kwCBQ)
                                       (if (= g$lev$9922$kwCBQ '0)
                                         ((case-lambda
                                            ((g$g$9926$kwCBQ)
                                             (values
                                               (list g$g$9926$kwCBQ)
                                               (list g$p$9925$kwCBQ)
                                               g$g$9926$kwCBQ)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9907$kwCBQ
                                                g$p$9925$kwCBQ
                                                (- g$lev$9922$kwCBQ '1))))
                                           (case-lambda
                                             ((g$lhs*$9930$kwCBQ
                                                g$rhs*$9931$kwCBQ
                                                g$p$9932$kwCBQ)
                                              ((case-lambda
                                                 ((g$p$9933$kwCBQ
                                                    g$rhs*$9934$kwCBQ
                                                    g$lhs*$9935$kwCBQ)
                                                  (values
                                                    g$lhs*$9935$kwCBQ
                                                    g$rhs*$9934$kwCBQ
                                                    (list
                                                      'unsyntax
                                                      g$p$9933$kwCBQ))))
                                               g$p$9932$kwCBQ
                                               g$rhs*$9931$kwCBQ
                                               g$lhs*$9930$kwCBQ)))))))
                                    g$ls/false$9924$kwCBQ)
                                  ((case-lambda
                                     ((g$t$9936$kwCBQ)
                                      ((case-lambda
                                         ((g$ls/false$9937$kwCBQ)
                                          (if (if g$ls/false$9937$kwCBQ
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9922$kwCBQ '0)))
                                                    g$ls/false$9937$kwCBQ))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8907$kwCBQ
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9921$kwCBQ)))
                                              g$ls/false$9937$kwCBQ)
                                            ((case-lambda
                                               ((g$t$9938$kwCBQ)
                                                ((case-lambda
                                                   ((g$ls/false$9939$kwCBQ)
                                                    (if g$ls/false$9939$kwCBQ
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9940$kwCBQ
                                                             g$q$9941$kwCBQ)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9907$kwCBQ
                                                                  g$q$9941$kwCBQ
                                                                  g$lev$9922$kwCBQ)))
                                                             (case-lambda
                                                               ((g$lhs*$9945$kwCBQ
                                                                  g$rhs*$9946$kwCBQ
                                                                  g$q$9947$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$q$9948$kwCBQ
                                                                      g$rhs*$9949$kwCBQ
                                                                      g$lhs*$9950$kwCBQ)
                                                                    (if (= g$lev$9922$kwCBQ
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9951$kwCBQ)
                                                                          (values
                                                                            (append
                                                                              g$g*$9951$kwCBQ
                                                                              g$lhs*$9950$kwCBQ)
                                                                            (append
                                                                              g$p*$9940$kwCBQ
                                                                              g$rhs*$9949$kwCBQ)
                                                                            (append
                                                                              g$g*$9951$kwCBQ
                                                                              g$q$9948$kwCBQ))))
                                                                       (g$map$5812$kwCBQ
                                                                         (case-lambda
                                                                           ((g$x$9952$kwCBQ)
                                                                            (gensym)))
                                                                         g$p*$9940$kwCBQ))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9907$kwCBQ
                                                                             g$p*$9940$kwCBQ
                                                                             (- g$lev$9922$kwCBQ
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9956$kwCBQ
                                                                             g$rhs2*$9957$kwCBQ
                                                                             g$p*$9958$kwCBQ)
                                                                           ((case-lambda
                                                                              ((g$p*$9959$kwCBQ
                                                                                 g$rhs2*$9960$kwCBQ
                                                                                 g$lhs2*$9961$kwCBQ)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9961$kwCBQ
                                                                                   g$lhs*$9950$kwCBQ)
                                                                                 (append
                                                                                   g$rhs2*$9960$kwCBQ
                                                                                   g$rhs*$9949$kwCBQ)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9959$kwCBQ)
                                                                                   g$q$9948$kwCBQ))))
                                                                            g$p*$9958$kwCBQ
                                                                            g$rhs2*$9957$kwCBQ
                                                                            g$lhs2*$9956$kwCBQ)))))))
                                                                 g$q$9947$kwCBQ
                                                                 g$rhs*$9946$kwCBQ
                                                                 g$lhs*$9945$kwCBQ))))))
                                                        g$ls/false$9939$kwCBQ)
                                                      ((case-lambda
                                                         ((g$t$9962$kwCBQ)
                                                          ((case-lambda
                                                             ((g$ls/false$9963$kwCBQ)
                                                              (if g$ls/false$9963$kwCBQ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9964$kwCBQ
                                                                       g$q$9965$kwCBQ)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9907$kwCBQ
                                                                            g$q$9965$kwCBQ
                                                                            g$lev$9922$kwCBQ)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9969$kwCBQ
                                                                            g$rhs*$9970$kwCBQ
                                                                            g$q$9971$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$q$9972$kwCBQ
                                                                                g$rhs*$9973$kwCBQ
                                                                                g$lhs*$9974$kwCBQ)
                                                                              (if (= g$lev$9922$kwCBQ
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9975$kwCBQ)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5812$kwCBQ
                                                                                          (case-lambda
                                                                                            ((g$g$9976$kwCBQ)
                                                                                             (cons
                                                                                               g$g$9976$kwCBQ
                                                                                               '(...))))
                                                                                          g$g*$9975$kwCBQ)
                                                                                        g$lhs*$9974$kwCBQ)
                                                                                      (append
                                                                                        g$p*$9964$kwCBQ
                                                                                        g$rhs*$9973$kwCBQ)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5812$kwCBQ
                                                                                            (case-lambda
                                                                                              ((g$g$9977$kwCBQ)
                                                                                               (cons
                                                                                                 g$g$9977$kwCBQ
                                                                                                 '(...))))
                                                                                            g$g*$9975$kwCBQ))
                                                                                        g$q$9972$kwCBQ))))
                                                                                 (g$map$5812$kwCBQ
                                                                                   (case-lambda
                                                                                     ((g$x$9978$kwCBQ)
                                                                                      (gensym)))
                                                                                   g$p*$9964$kwCBQ))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9907$kwCBQ
                                                                                       g$p*$9964$kwCBQ
                                                                                       (- g$lev$9922$kwCBQ
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9982$kwCBQ
                                                                                       g$rhs2*$9983$kwCBQ
                                                                                       g$p*$9984$kwCBQ)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9985$kwCBQ
                                                                                           g$rhs2*$9986$kwCBQ
                                                                                           g$lhs2*$9987$kwCBQ)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9987$kwCBQ
                                                                                             g$lhs*$9974$kwCBQ)
                                                                                           (append
                                                                                             g$rhs2*$9986$kwCBQ
                                                                                             g$rhs*$9973$kwCBQ)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9985$kwCBQ)
                                                                                             g$q$9972$kwCBQ))))
                                                                                      g$p*$9984$kwCBQ
                                                                                      g$rhs2*$9983$kwCBQ
                                                                                      g$lhs2*$9982$kwCBQ)))))))
                                                                           g$q$9971$kwCBQ
                                                                           g$rhs*$9970$kwCBQ
                                                                           g$lhs*$9969$kwCBQ))))))
                                                                  g$ls/false$9963$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$t$9988$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9989$kwCBQ)
                                                                        (if (if g$ls/false$9989$kwCBQ
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9922$kwCBQ
                                                                                        '0)))
                                                                                  g$ls/false$9989$kwCBQ))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8907$kwCBQ
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9921$kwCBQ)))
                                                                            g$ls/false$9989$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$9990$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9991$kwCBQ)
                                                                                  (if g$ls/false$9991$kwCBQ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9992$kwCBQ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9907$kwCBQ
                                                                                                g$p$9992$kwCBQ
                                                                                                (+ g$lev$9922$kwCBQ
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9996$kwCBQ
                                                                                                g$rhs*$9997$kwCBQ
                                                                                                g$p$9998$kwCBQ)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9999$kwCBQ
                                                                                                    g$rhs*$10000$kwCBQ
                                                                                                    g$lhs*$10001$kwCBQ)
                                                                                                  (values
                                                                                                    g$lhs*$10001$kwCBQ
                                                                                                    g$rhs*$10000$kwCBQ
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9999$kwCBQ))))
                                                                                               g$p$9998$kwCBQ
                                                                                               g$rhs*$9997$kwCBQ
                                                                                               g$lhs*$9996$kwCBQ))))))
                                                                                      g$ls/false$9991$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$t$10002$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10003$kwCBQ)
                                                                                            (if g$ls/false$10003$kwCBQ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$10004$kwCBQ
                                                                                                     g$q$10005$kwCBQ)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9907$kwCBQ
                                                                                                          g$p$10004$kwCBQ
                                                                                                          g$lev$9922$kwCBQ)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$10012$kwCBQ
                                                                                                          g$rhs*$10013$kwCBQ
                                                                                                          g$p$10014$kwCBQ)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9907$kwCBQ
                                                                                                               g$q$10005$kwCBQ
                                                                                                               g$lev$9922$kwCBQ)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$10015$kwCBQ
                                                                                                               g$rhs2*$10016$kwCBQ
                                                                                                               g$q$10017$kwCBQ)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$10018$kwCBQ
                                                                                                                   g$rhs2*$10019$kwCBQ
                                                                                                                   g$lhs2*$10020$kwCBQ
                                                                                                                   g$p$10021$kwCBQ
                                                                                                                   g$rhs*$10022$kwCBQ
                                                                                                                   g$lhs*$10023$kwCBQ)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$10020$kwCBQ
                                                                                                                     g$lhs*$10023$kwCBQ)
                                                                                                                   (append
                                                                                                                     g$rhs2*$10019$kwCBQ
                                                                                                                     g$rhs*$10022$kwCBQ)
                                                                                                                   (cons
                                                                                                                     g$p$10021$kwCBQ
                                                                                                                     g$q$10018$kwCBQ))))
                                                                                                              g$q$10017$kwCBQ
                                                                                                              g$rhs2*$10016$kwCBQ
                                                                                                              g$lhs2*$10015$kwCBQ
                                                                                                              g$p$10014$kwCBQ
                                                                                                              g$rhs*$10013$kwCBQ
                                                                                                              g$lhs*$10012$kwCBQ)))))))))
                                                                                                g$ls/false$10003$kwCBQ)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10024$kwCBQ)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10025$kwCBQ)
                                                                                                      (if g$ls/false$10025$kwCBQ
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$10026$kwCBQ)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9907$kwCBQ
                                                                                                                    g$x*$10026$kwCBQ
                                                                                                                    g$lev$9922$kwCBQ)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$10030$kwCBQ
                                                                                                                    g$rhs*$10031$kwCBQ
                                                                                                                    g$x*$10032$kwCBQ)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$10033$kwCBQ
                                                                                                                        g$rhs*$10034$kwCBQ
                                                                                                                        g$lhs*$10035$kwCBQ)
                                                                                                                      (values
                                                                                                                        g$lhs*$10035$kwCBQ
                                                                                                                        g$rhs*$10034$kwCBQ
                                                                                                                        (list->vector
                                                                                                                          g$x*$10033$kwCBQ))))
                                                                                                                   g$x*$10032$kwCBQ
                                                                                                                   g$rhs*$10031$kwCBQ
                                                                                                                   g$lhs*$10030$kwCBQ))))))
                                                                                                          g$ls/false$10025$kwCBQ)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10036$kwCBQ)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10037$kwCBQ)
                                                                                                                (if g$ls/false$10037$kwCBQ
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9921$kwCBQ)))
                                                                                                                    g$ls/false$10037$kwCBQ)
                                                                                                                  (g$syntax-violation$8907$kwCBQ
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10036$kwCBQ))))
                                                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                                                               g$t$10036$kwCBQ
                                                                                                               '_))))
                                                                                                         g$t$10024$kwCBQ))))
                                                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                                                     g$t$10024$kwCBQ
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$10002$kwCBQ))))
                                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                                           g$t$10002$kwCBQ
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9990$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$9990$kwCBQ
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9988$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$9988$kwCBQ
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9962$kwCBQ))))
                                                           (g$syntax-dispatch$8795$kwCBQ
                                                             g$t$9962$kwCBQ
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9938$kwCBQ))))
                                                 (g$syntax-dispatch$8795$kwCBQ
                                                   g$t$9938$kwCBQ
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9936$kwCBQ))))
                                       (g$syntax-dispatch$8795$kwCBQ
                                         g$t$9936$kwCBQ
                                         '#(scheme-id unsyntax)))))
                                   g$t$9923$kwCBQ))))
                             (g$syntax-dispatch$8795$kwCBQ
                               g$t$9923$kwCBQ
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9921$kwCBQ)))))
           (case-lambda
             ((g$x$9908$kwCBQ)
              ((case-lambda
                 ((g$t$9909$kwCBQ)
                  ((case-lambda
                     ((g$ls/false$9910$kwCBQ)
                      (if g$ls/false$9910$kwCBQ
                        (apply
                          (case-lambda
                            ((g$e$9911$kwCBQ)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9907$kwCBQ g$e$9911$kwCBQ '0)))
                               (case-lambda
                                 ((g$lhs*$9915$kwCBQ
                                    g$rhs*$9916$kwCBQ
                                    g$v$9917$kwCBQ)
                                  ((case-lambda
                                     ((g$v$9918$kwCBQ
                                        g$rhs*$9919$kwCBQ
                                        g$lhs*$9920$kwCBQ)
                                      (g$bless$8758$kwCBQ
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9919$kwCBQ)
                                          '()
                                          (list
                                            g$lhs*$9920$kwCBQ
                                            (list 'syntax g$v$9918$kwCBQ))))))
                                   g$v$9917$kwCBQ
                                   g$rhs*$9916$kwCBQ
                                   g$lhs*$9915$kwCBQ))))))
                          g$ls/false$9910$kwCBQ)
                        (g$syntax-violation$8907$kwCBQ
                          '#f
                          '"invalid syntax"
                          g$t$9909$kwCBQ))))
                   (g$syntax-dispatch$8795$kwCBQ g$t$9909$kwCBQ '(_ any)))))
               g$x$9908$kwCBQ))))))))
   (g$define-struct-macro$8788$kwCBQ
     g$define-struct-macro$12306$kwCBQ
     (case-lambda
       ((g$stx$10038$kwCBQ)
        (g$syntax-violation$8907$kwCBQ
          '#f
          '"define-struct not supported"
          g$stx$10038$kwCBQ))))
   (g$define-record-type-macro$8789$kwCBQ
     g$define-record-type-macro$12307$kwCBQ
     (case-lambda
       ((g$x$10039$kwCBQ)
        (letrec* ((g$id$10040$kwCBQ
                    (case-lambda
                      ((g$ctxt$10292$kwCBQ . g$str*$10293$kwCBQ)
                       (g$datum->syntax$8909$kwCBQ
                         g$ctxt$10292$kwCBQ
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5812$kwCBQ
                               (case-lambda
                                 ((g$x$10294$kwCBQ)
                                  (if (symbol? g$x$10294$kwCBQ)
                                    (symbol->string g$x$10294$kwCBQ)
                                    (if (string? g$x$10294$kwCBQ)
                                      g$x$10294$kwCBQ
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$10293$kwCBQ)))))))
                  (g$get-record-name$10041$kwCBQ
                    (case-lambda
                      ((g$spec$10283$kwCBQ)
                       ((case-lambda
                          ((g$t$10284$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10285$kwCBQ)
                               (if g$ls/false$10285$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$foo$10286$kwCBQ
                                        g$make-foo$10287$kwCBQ
                                        g$foo?$10288$kwCBQ)
                                      g$foo$10286$kwCBQ))
                                   g$ls/false$10285$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10289$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10290$kwCBQ)
                                         (if g$ls/false$10290$kwCBQ
                                           (apply
                                             (case-lambda
                                               ((g$foo$10291$kwCBQ)
                                                g$foo$10291$kwCBQ))
                                             g$ls/false$10290$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10289$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10289$kwCBQ
                                        'any))))
                                  g$t$10284$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10284$kwCBQ
                              '(any any any)))))
                        g$spec$10283$kwCBQ))))
                  (g$get-record-constructor-name$10042$kwCBQ
                    (case-lambda
                      ((g$spec$10273$kwCBQ)
                       ((case-lambda
                          ((g$t$10274$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10275$kwCBQ)
                               (if g$ls/false$10275$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$foo$10276$kwCBQ
                                        g$make-foo$10277$kwCBQ
                                        g$foo?$10278$kwCBQ)
                                      g$make-foo$10277$kwCBQ))
                                   g$ls/false$10275$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10279$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10280$kwCBQ)
                                         (if (if g$ls/false$10280$kwCBQ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$10281$kwCBQ)
                                                      (g$id?$8516$kwCBQ
                                                        g$foo$10281$kwCBQ)))
                                                   g$ls/false$10280$kwCBQ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$10282$kwCBQ)
                                                (g$id$10040$kwCBQ
                                                  g$foo$10282$kwCBQ
                                                  '"make-"
                                                  (g$stx->datum$8527$kwCBQ
                                                    g$foo$10282$kwCBQ))))
                                             g$ls/false$10280$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10279$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10279$kwCBQ
                                        'any))))
                                  g$t$10274$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10274$kwCBQ
                              '(any any any)))))
                        g$spec$10273$kwCBQ))))
                  (g$get-record-predicate-name$10043$kwCBQ
                    (case-lambda
                      ((g$spec$10263$kwCBQ)
                       ((case-lambda
                          ((g$t$10264$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10265$kwCBQ)
                               (if g$ls/false$10265$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$foo$10266$kwCBQ
                                        g$make-foo$10267$kwCBQ
                                        g$foo?$10268$kwCBQ)
                                      g$foo?$10268$kwCBQ))
                                   g$ls/false$10265$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10269$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10270$kwCBQ)
                                         (if (if g$ls/false$10270$kwCBQ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$10271$kwCBQ)
                                                      (g$id?$8516$kwCBQ
                                                        g$foo$10271$kwCBQ)))
                                                   g$ls/false$10270$kwCBQ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$10272$kwCBQ)
                                                (g$id$10040$kwCBQ
                                                  g$foo$10272$kwCBQ
                                                  (g$stx->datum$8527$kwCBQ
                                                    g$foo$10272$kwCBQ)
                                                  '"?")))
                                             g$ls/false$10270$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10269$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10269$kwCBQ
                                        'any))))
                                  g$t$10264$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10264$kwCBQ
                              '(any any any)))))
                        g$spec$10263$kwCBQ))))
                  (g$get-clause$10044$kwCBQ
                    (case-lambda
                      ((g$id$10254$kwCBQ g$ls$10255$kwCBQ)
                       ((case-lambda
                          ((g$t$10256$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10257$kwCBQ)
                               (if g$ls/false$10257$kwCBQ
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$10257$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10258$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10259$kwCBQ)
                                         (if g$ls/false$10259$kwCBQ
                                           (apply
                                             (case-lambda
                                               ((g$x$10260$kwCBQ
                                                  g$rest$10261$kwCBQ
                                                  g$ls$10262$kwCBQ)
                                                (if (g$free-id=?$8520$kwCBQ
                                                      (g$bless$8758$kwCBQ
                                                        g$id$10254$kwCBQ)
                                                      g$x$10260$kwCBQ)
                                                  (cons
                                                    g$x$10260$kwCBQ
                                                    g$rest$10261$kwCBQ)
                                                  (g$get-clause$10044$kwCBQ
                                                    g$id$10254$kwCBQ
                                                    g$ls$10262$kwCBQ))))
                                             g$ls/false$10259$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10258$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10258$kwCBQ
                                        '((any . any) . any)))))
                                  g$t$10256$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10256$kwCBQ
                              '()))))
                        g$ls$10255$kwCBQ))))
                  (g$foo-rtd-code$10045$kwCBQ
                    (case-lambda
                      ((g$name$10213$kwCBQ
                         g$clause*$10214$kwCBQ
                         g$parent-rtd-code$10215$kwCBQ)
                       (letrec* ((g$convert-field-spec*$10216$kwCBQ
                                   (case-lambda
                                     ((g$ls$10241$kwCBQ)
                                      (list->vector
                                        (g$map$5812$kwCBQ
                                          (case-lambda
                                            ((g$x$10242$kwCBQ)
                                             ((case-lambda
                                                ((g$t$10243$kwCBQ)
                                                 ((case-lambda
                                                    ((g$ls/false$10244$kwCBQ)
                                                     (if g$ls/false$10244$kwCBQ
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$10245$kwCBQ
                                                              g$rest$10246$kwCBQ)
                                                            (list
                                                              'mutable
                                                              g$name$10245$kwCBQ)))
                                                         g$ls/false$10244$kwCBQ)
                                                       ((case-lambda
                                                          ((g$t$10247$kwCBQ)
                                                           ((case-lambda
                                                              ((g$ls/false$10248$kwCBQ)
                                                               (if g$ls/false$10248$kwCBQ
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$10249$kwCBQ
                                                                        g$rest$10250$kwCBQ)
                                                                      (list
                                                                        'immutable
                                                                        g$name$10249$kwCBQ)))
                                                                   g$ls/false$10248$kwCBQ)
                                                                 ((case-lambda
                                                                    ((g$t$10251$kwCBQ)
                                                                     ((case-lambda
                                                                        ((g$ls/false$10252$kwCBQ)
                                                                         (if g$ls/false$10252$kwCBQ
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$10253$kwCBQ)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$10253$kwCBQ)))
                                                                             g$ls/false$10252$kwCBQ)
                                                                           (g$syntax-violation$8907$kwCBQ
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$10251$kwCBQ))))
                                                                      (g$syntax-dispatch$8795$kwCBQ
                                                                        g$t$10251$kwCBQ
                                                                        'any))))
                                                                  g$t$10247$kwCBQ))))
                                                            (g$syntax-dispatch$8795$kwCBQ
                                                              g$t$10247$kwCBQ
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$10243$kwCBQ))))
                                                  (g$syntax-dispatch$8795$kwCBQ
                                                    g$t$10243$kwCBQ
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$10242$kwCBQ)))
                                          g$ls$10241$kwCBQ))))))
                         ((case-lambda
                            ((g$uid-code$10217$kwCBQ
                               g$sealed?$10218$kwCBQ
                               g$opaque?$10219$kwCBQ
                               g$fields$10220$kwCBQ)
                             (g$bless$8758$kwCBQ
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$10213$kwCBQ)
                                 g$parent-rtd-code$10215$kwCBQ
                                 g$uid-code$10217$kwCBQ
                                 g$sealed?$10218$kwCBQ
                                 g$opaque?$10219$kwCBQ
                                 g$fields$10220$kwCBQ))))
                          ((case-lambda
                             ((g$t$10221$kwCBQ)
                              ((case-lambda
                                 ((g$ls/false$10222$kwCBQ)
                                  (if g$ls/false$10222$kwCBQ
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$10222$kwCBQ)
                                    ((case-lambda
                                       ((g$t$10223$kwCBQ)
                                        ((case-lambda
                                           ((g$ls/false$10224$kwCBQ)
                                            (if g$ls/false$10224$kwCBQ
                                              (apply
                                                (case-lambda
                                                  ((g$uid$10225$kwCBQ)
                                                   (list
                                                     'quote
                                                     g$uid$10225$kwCBQ)))
                                                g$ls/false$10224$kwCBQ)
                                              ((case-lambda
                                                 ((g$t$10226$kwCBQ)
                                                  ((case-lambda
                                                     ((g$ls/false$10227$kwCBQ)
                                                      (if g$ls/false$10227$kwCBQ
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$10227$kwCBQ)
                                                        (g$syntax-violation$8907$kwCBQ
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$10226$kwCBQ))))
                                                   (g$syntax-dispatch$8795$kwCBQ
                                                     g$t$10226$kwCBQ
                                                     '_))))
                                               g$t$10223$kwCBQ))))
                                         (g$syntax-dispatch$8795$kwCBQ
                                           g$t$10223$kwCBQ
                                           '(_ any)))))
                                     g$t$10221$kwCBQ))))
                               (g$syntax-dispatch$8795$kwCBQ
                                 g$t$10221$kwCBQ
                                 '(_)))))
                           (g$get-clause$10044$kwCBQ
                             'nongenerative
                             g$clause*$10214$kwCBQ))
                          ((case-lambda
                             ((g$t$10228$kwCBQ)
                              ((case-lambda
                                 ((g$ls/false$10229$kwCBQ)
                                  (if g$ls/false$10229$kwCBQ
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$10229$kwCBQ)
                                    ((case-lambda
                                       ((g$t$10230$kwCBQ)
                                        ((case-lambda
                                           ((g$ls/false$10231$kwCBQ)
                                            (if g$ls/false$10231$kwCBQ
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$10231$kwCBQ)
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"invalid syntax"
                                                g$t$10230$kwCBQ))))
                                         (g$syntax-dispatch$8795$kwCBQ
                                           g$t$10230$kwCBQ
                                           '_))))
                                     g$t$10228$kwCBQ))))
                               (g$syntax-dispatch$8795$kwCBQ
                                 g$t$10228$kwCBQ
                                 '(_ #(atom #t))))))
                           (g$get-clause$10044$kwCBQ
                             'sealed
                             g$clause*$10214$kwCBQ))
                          ((case-lambda
                             ((g$t$10232$kwCBQ)
                              ((case-lambda
                                 ((g$ls/false$10233$kwCBQ)
                                  (if g$ls/false$10233$kwCBQ
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$10233$kwCBQ)
                                    ((case-lambda
                                       ((g$t$10234$kwCBQ)
                                        ((case-lambda
                                           ((g$ls/false$10235$kwCBQ)
                                            (if g$ls/false$10235$kwCBQ
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$10235$kwCBQ)
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"invalid syntax"
                                                g$t$10234$kwCBQ))))
                                         (g$syntax-dispatch$8795$kwCBQ
                                           g$t$10234$kwCBQ
                                           '_))))
                                     g$t$10232$kwCBQ))))
                               (g$syntax-dispatch$8795$kwCBQ
                                 g$t$10232$kwCBQ
                                 '(_ #(atom #t))))))
                           (g$get-clause$10044$kwCBQ
                             'opaque
                             g$clause*$10214$kwCBQ))
                          ((case-lambda
                             ((g$t$10236$kwCBQ)
                              ((case-lambda
                                 ((g$ls/false$10237$kwCBQ)
                                  (if g$ls/false$10237$kwCBQ
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$10238$kwCBQ)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$10216$kwCBQ
                                             g$field-spec*$10238$kwCBQ))))
                                      g$ls/false$10237$kwCBQ)
                                    ((case-lambda
                                       ((g$t$10239$kwCBQ)
                                        ((case-lambda
                                           ((g$ls/false$10240$kwCBQ)
                                            (if g$ls/false$10240$kwCBQ
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$10240$kwCBQ)
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"invalid syntax"
                                                g$t$10239$kwCBQ))))
                                         (g$syntax-dispatch$8795$kwCBQ
                                           g$t$10239$kwCBQ
                                           '_))))
                                     g$t$10236$kwCBQ))))
                               (g$syntax-dispatch$8795$kwCBQ
                                 g$t$10236$kwCBQ
                                 '(_ . each-any)))))
                           (g$get-clause$10044$kwCBQ
                             'fields
                             g$clause*$10214$kwCBQ)))))))
                  (g$parent-rtd-code$10046$kwCBQ
                    (case-lambda
                      ((g$clause*$10201$kwCBQ)
                       ((case-lambda
                          ((g$t$10202$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10203$kwCBQ)
                               (if g$ls/false$10203$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$name$10204$kwCBQ)
                                      (list
                                        'record-type-descriptor
                                        g$name$10204$kwCBQ)))
                                   g$ls/false$10203$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10205$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10206$kwCBQ)
                                         (if g$ls/false$10206$kwCBQ
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$10207$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$10208$kwCBQ)
                                                        (if g$ls/false$10208$kwCBQ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$10209$kwCBQ
                                                                 g$rcd$10210$kwCBQ)
                                                               g$rtd$10209$kwCBQ))
                                                            g$ls/false$10208$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$10211$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$10212$kwCBQ)
                                                                  (if g$ls/false$10212$kwCBQ
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$10212$kwCBQ)
                                                                    (g$syntax-violation$8907$kwCBQ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$10211$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$10211$kwCBQ
                                                                 '#(atom #f)))))
                                                           g$t$10207$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$10207$kwCBQ
                                                       '(_ any any)))))
                                                 (g$get-clause$10044$kwCBQ
                                                   'parent-rtd
                                                   g$clause*$10201$kwCBQ))))
                                             g$ls/false$10206$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10205$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10205$kwCBQ
                                        '#(atom #f)))))
                                  g$t$10202$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10202$kwCBQ
                              '(_ any)))))
                        (g$get-clause$10044$kwCBQ
                          'parent
                          g$clause*$10201$kwCBQ)))))
                  (g$parent-rcd-code$10047$kwCBQ
                    (case-lambda
                      ((g$clause*$10189$kwCBQ)
                       ((case-lambda
                          ((g$t$10190$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10191$kwCBQ)
                               (if g$ls/false$10191$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$name$10192$kwCBQ)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$10192$kwCBQ)))
                                   g$ls/false$10191$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10193$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10194$kwCBQ)
                                         (if g$ls/false$10194$kwCBQ
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$10195$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$10196$kwCBQ)
                                                        (if g$ls/false$10196$kwCBQ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$10197$kwCBQ
                                                                 g$rcd$10198$kwCBQ)
                                                               g$rcd$10198$kwCBQ))
                                                            g$ls/false$10196$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$10199$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$10200$kwCBQ)
                                                                  (if g$ls/false$10200$kwCBQ
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$10200$kwCBQ)
                                                                    (g$syntax-violation$8907$kwCBQ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$10199$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$10199$kwCBQ
                                                                 '#(atom #f)))))
                                                           g$t$10195$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$10195$kwCBQ
                                                       '(_ any any)))))
                                                 (g$get-clause$10044$kwCBQ
                                                   'parent-rtd
                                                   g$clause*$10189$kwCBQ))))
                                             g$ls/false$10194$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10193$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10193$kwCBQ
                                        '#(atom #f)))))
                                  g$t$10190$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10190$kwCBQ
                              '(_ any)))))
                        (g$get-clause$10044$kwCBQ
                          'parent
                          g$clause*$10189$kwCBQ)))))
                  (g$foo-rcd-code$10048$kwCBQ
                    (case-lambda
                      ((g$clause*$10185$kwCBQ
                         g$foo-rtd$10186$kwCBQ
                         g$protocol$10187$kwCBQ
                         g$parent-rcd-code$10188$kwCBQ)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$10186$kwCBQ
                         g$parent-rcd-code$10188$kwCBQ
                         g$protocol$10187$kwCBQ))))
                  (g$get-protocol-code$10049$kwCBQ
                    (case-lambda
                      ((g$clause*$10179$kwCBQ)
                       ((case-lambda
                          ((g$t$10180$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10181$kwCBQ)
                               (if g$ls/false$10181$kwCBQ
                                 (apply
                                   (case-lambda
                                     ((g$expr$10182$kwCBQ) g$expr$10182$kwCBQ))
                                   g$ls/false$10181$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10183$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10184$kwCBQ)
                                         (if g$ls/false$10184$kwCBQ
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$10184$kwCBQ)
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$t$10183$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10183$kwCBQ
                                        '_))))
                                  g$t$10180$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10180$kwCBQ
                              '(_ any)))))
                        (g$get-clause$10044$kwCBQ
                          'protocol
                          g$clause*$10179$kwCBQ)))))
                  (g$get-fields$10050$kwCBQ
                    (case-lambda
                      ((g$clause*$10170$kwCBQ)
                       ((case-lambda
                          ((g$t$10171$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10172$kwCBQ)
                               (if g$ls/false$10172$kwCBQ
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$10172$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10173$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10174$kwCBQ)
                                         (if g$ls/false$10174$kwCBQ
                                           (apply
                                             (case-lambda
                                               ((g$f*$10175$kwCBQ)
                                                g$f*$10175$kwCBQ))
                                             g$ls/false$10174$kwCBQ)
                                           ((case-lambda
                                              ((g$t$10176$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$10177$kwCBQ)
                                                   (if g$ls/false$10177$kwCBQ
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$10178$kwCBQ)
                                                          (g$get-fields$10050$kwCBQ
                                                            g$rest$10178$kwCBQ)))
                                                       g$ls/false$10177$kwCBQ)
                                                     (g$syntax-violation$8907$kwCBQ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10176$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$10176$kwCBQ
                                                  '(_ . any)))))
                                            g$t$10173$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10173$kwCBQ
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$10171$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10171$kwCBQ
                              '()))))
                        g$clause*$10170$kwCBQ))))
                  (g$get-mutator-indices$10051$kwCBQ
                    (case-lambda
                      ((g$fields$10158$kwCBQ)
                       ((letrec ((g$f$10159$kwCBQ
                                   (case-lambda
                                     ((g$fields$10160$kwCBQ g$i$10161$kwCBQ)
                                      ((case-lambda
                                         ((g$t$10162$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$10163$kwCBQ)
                                              (if g$ls/false$10163$kwCBQ
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$10163$kwCBQ)
                                                ((case-lambda
                                                   ((g$t$10164$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$10165$kwCBQ)
                                                        (if g$ls/false$10165$kwCBQ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$10166$kwCBQ)
                                                               (cons
                                                                 g$i$10161$kwCBQ
                                                                 (g$f$10159$kwCBQ
                                                                   g$rest$10166$kwCBQ
                                                                   (+ g$i$10161$kwCBQ
                                                                      '1)))))
                                                            g$ls/false$10165$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$10167$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$10168$kwCBQ)
                                                                  (if g$ls/false$10168$kwCBQ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$10169$kwCBQ)
                                                                         (g$f$10159$kwCBQ
                                                                           g$rest$10169$kwCBQ
                                                                           (+ g$i$10161$kwCBQ
                                                                              '1))))
                                                                      g$ls/false$10168$kwCBQ)
                                                                    (g$syntax-violation$8907$kwCBQ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$10167$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$10167$kwCBQ
                                                                 '(_ . any)))))
                                                           g$t$10164$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$10164$kwCBQ
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$10162$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$10162$kwCBQ
                                             '()))))
                                       g$fields$10160$kwCBQ)))))
                          g$f$10159$kwCBQ)
                        g$fields$10158$kwCBQ
                        '0))))
                  (g$get-mutators$10052$kwCBQ
                    (case-lambda
                      ((g$foo$10137$kwCBQ g$fields$10138$kwCBQ)
                       (letrec* ((g$gen-name$10139$kwCBQ
                                   (case-lambda
                                     ((g$x$10157$kwCBQ)
                                      (g$datum->syntax$8909$kwCBQ
                                        g$foo$10137$kwCBQ
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8910$kwCBQ
                                                g$foo$10137$kwCBQ))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8910$kwCBQ
                                                g$x$10157$kwCBQ))
                                            '"-set!")))))))
                         ((letrec ((g$f$10140$kwCBQ
                                     (case-lambda
                                       ((g$fields$10141$kwCBQ)
                                        ((case-lambda
                                           ((g$t$10142$kwCBQ)
                                            ((case-lambda
                                               ((g$ls/false$10143$kwCBQ)
                                                (if g$ls/false$10143$kwCBQ
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$10143$kwCBQ)
                                                  ((case-lambda
                                                     ((g$t$10144$kwCBQ)
                                                      ((case-lambda
                                                         ((g$ls/false$10145$kwCBQ)
                                                          (if g$ls/false$10145$kwCBQ
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$10146$kwCBQ
                                                                   g$accessor$10147$kwCBQ
                                                                   g$mutator$10148$kwCBQ
                                                                   g$rest$10149$kwCBQ)
                                                                 (cons
                                                                   g$mutator$10148$kwCBQ
                                                                   (g$f$10140$kwCBQ
                                                                     g$rest$10149$kwCBQ))))
                                                              g$ls/false$10145$kwCBQ)
                                                            ((case-lambda
                                                               ((g$t$10150$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$ls/false$10151$kwCBQ)
                                                                    (if g$ls/false$10151$kwCBQ
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$10152$kwCBQ
                                                                             g$rest$10153$kwCBQ)
                                                                           (cons
                                                                             (g$gen-name$10139$kwCBQ
                                                                               g$name$10152$kwCBQ)
                                                                             (g$f$10140$kwCBQ
                                                                               g$rest$10153$kwCBQ))))
                                                                        g$ls/false$10151$kwCBQ)
                                                                      ((case-lambda
                                                                         ((g$t$10154$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10155$kwCBQ)
                                                                              (if g$ls/false$10155$kwCBQ
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$10156$kwCBQ)
                                                                                     (g$f$10140$kwCBQ
                                                                                       g$rest$10156$kwCBQ)))
                                                                                  g$ls/false$10155$kwCBQ)
                                                                                (g$syntax-violation$8907$kwCBQ
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10154$kwCBQ))))
                                                                           (g$syntax-dispatch$8795$kwCBQ
                                                                             g$t$10154$kwCBQ
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$10150$kwCBQ))))
                                                                 (g$syntax-dispatch$8795$kwCBQ
                                                                   g$t$10150$kwCBQ
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$10144$kwCBQ))))
                                                       (g$syntax-dispatch$8795$kwCBQ
                                                         g$t$10144$kwCBQ
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$10142$kwCBQ))))
                                             (g$syntax-dispatch$8795$kwCBQ
                                               g$t$10142$kwCBQ
                                               '()))))
                                         g$fields$10141$kwCBQ)))))
                            g$f$10140$kwCBQ)
                          g$fields$10138$kwCBQ)))))
                  (g$get-accessors$10053$kwCBQ
                    (case-lambda
                      ((g$foo$10103$kwCBQ g$fields$10104$kwCBQ)
                       (letrec* ((g$gen-name$10105$kwCBQ
                                   (case-lambda
                                     ((g$x$10136$kwCBQ)
                                      (g$datum->syntax$8909$kwCBQ
                                        g$foo$10103$kwCBQ
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8910$kwCBQ
                                                g$foo$10103$kwCBQ))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8910$kwCBQ
                                                g$x$10136$kwCBQ)))))))))
                         (g$map$5812$kwCBQ
                           (case-lambda
                             ((g$field$10106$kwCBQ)
                              ((case-lambda
                                 ((g$t$10107$kwCBQ)
                                  ((case-lambda
                                     ((g$ls/false$10108$kwCBQ)
                                      (if (if g$ls/false$10108$kwCBQ
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$10109$kwCBQ
                                                     g$accessor$10110$kwCBQ
                                                     g$mutator$10111$kwCBQ)
                                                   (g$id?$8516$kwCBQ
                                                     g$accessor$10110$kwCBQ)))
                                                g$ls/false$10108$kwCBQ))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$10112$kwCBQ
                                               g$accessor$10113$kwCBQ
                                               g$mutator$10114$kwCBQ)
                                             g$accessor$10113$kwCBQ))
                                          g$ls/false$10108$kwCBQ)
                                        ((case-lambda
                                           ((g$t$10115$kwCBQ)
                                            ((case-lambda
                                               ((g$ls/false$10116$kwCBQ)
                                                (if (if g$ls/false$10116$kwCBQ
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$10117$kwCBQ
                                                               g$accessor$10118$kwCBQ)
                                                             (g$id?$8516$kwCBQ
                                                               g$accessor$10118$kwCBQ)))
                                                          g$ls/false$10116$kwCBQ))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$10119$kwCBQ
                                                         g$accessor$10120$kwCBQ)
                                                       g$accessor$10120$kwCBQ))
                                                    g$ls/false$10116$kwCBQ)
                                                  ((case-lambda
                                                     ((g$t$10121$kwCBQ)
                                                      ((case-lambda
                                                         ((g$ls/false$10122$kwCBQ)
                                                          (if (if g$ls/false$10122$kwCBQ
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$10123$kwCBQ)
                                                                       (g$id?$8516$kwCBQ
                                                                         g$name$10123$kwCBQ)))
                                                                    g$ls/false$10122$kwCBQ))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$10124$kwCBQ)
                                                                 (g$gen-name$10105$kwCBQ
                                                                   g$name$10124$kwCBQ)))
                                                              g$ls/false$10122$kwCBQ)
                                                            ((case-lambda
                                                               ((g$t$10125$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$ls/false$10126$kwCBQ)
                                                                    (if (if g$ls/false$10126$kwCBQ
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$10127$kwCBQ)
                                                                                 (g$id?$8516$kwCBQ
                                                                                   g$name$10127$kwCBQ)))
                                                                              g$ls/false$10126$kwCBQ))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$10128$kwCBQ)
                                                                           (g$gen-name$10105$kwCBQ
                                                                             g$name$10128$kwCBQ)))
                                                                        g$ls/false$10126$kwCBQ)
                                                                      ((case-lambda
                                                                         ((g$t$10129$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10130$kwCBQ)
                                                                              (if (if g$ls/false$10130$kwCBQ
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$10131$kwCBQ)
                                                                                           (g$id?$8516$kwCBQ
                                                                                             g$name$10131$kwCBQ)))
                                                                                        g$ls/false$10130$kwCBQ))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$10132$kwCBQ)
                                                                                     (g$gen-name$10105$kwCBQ
                                                                                       g$name$10132$kwCBQ)))
                                                                                  g$ls/false$10130$kwCBQ)
                                                                                ((case-lambda
                                                                                   ((g$t$10133$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$10134$kwCBQ)
                                                                                        (if g$ls/false$10134$kwCBQ
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$10135$kwCBQ)
                                                                                               (g$syntax-violation$8907$kwCBQ
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$10106$kwCBQ)))
                                                                                            g$ls/false$10134$kwCBQ)
                                                                                          (g$syntax-violation$8907$kwCBQ
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$10133$kwCBQ))))
                                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                                       g$t$10133$kwCBQ
                                                                                       'any))))
                                                                                 g$t$10129$kwCBQ))))
                                                                           (g$syntax-dispatch$8795$kwCBQ
                                                                             g$t$10129$kwCBQ
                                                                             'any))))
                                                                       g$t$10125$kwCBQ))))
                                                                 (g$syntax-dispatch$8795$kwCBQ
                                                                   g$t$10125$kwCBQ
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$10121$kwCBQ))))
                                                       (g$syntax-dispatch$8795$kwCBQ
                                                         g$t$10121$kwCBQ
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$10115$kwCBQ))))
                                             (g$syntax-dispatch$8795$kwCBQ
                                               g$t$10115$kwCBQ
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$10107$kwCBQ))))
                                   (g$syntax-dispatch$8795$kwCBQ
                                     g$t$10107$kwCBQ
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$10106$kwCBQ)))
                           g$fields$10104$kwCBQ)))))
                  (g$enumerate$10054$kwCBQ
                    (case-lambda
                      ((g$ls$10099$kwCBQ)
                       ((letrec ((g$f$10100$kwCBQ
                                   (case-lambda
                                     ((g$ls$10101$kwCBQ g$i$10102$kwCBQ)
                                      (if (null? g$ls$10101$kwCBQ)
                                        '()
                                        (cons
                                          g$i$10102$kwCBQ
                                          (g$f$10100$kwCBQ
                                            (cdr g$ls$10101$kwCBQ)
                                            (+ g$i$10102$kwCBQ '1))))))))
                          g$f$10100$kwCBQ)
                        g$ls$10099$kwCBQ
                        '0))))
                  (g$do-define-record$10055$kwCBQ
                    (case-lambda
                      ((g$namespec$10079$kwCBQ g$clause*$10080$kwCBQ)
                       ((case-lambda
                          ((g$foo$10081$kwCBQ)
                           ((case-lambda
                              ((g$foo-rtd$10082$kwCBQ)
                               ((case-lambda
                                  ((g$foo-rcd$10083$kwCBQ)
                                   ((case-lambda
                                      ((g$protocol$10084$kwCBQ)
                                       ((case-lambda
                                          ((g$make-foo$10085$kwCBQ)
                                           ((case-lambda
                                              ((g$fields$10086$kwCBQ)
                                               ((case-lambda
                                                  ((g$idx*$10087$kwCBQ)
                                                   ((case-lambda
                                                      ((g$foo-x*$10088$kwCBQ)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$10089$kwCBQ)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$10090$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$foo?$10091$kwCBQ)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$10092$kwCBQ)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$10093$kwCBQ)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$10094$kwCBQ)
                                                                               (g$bless$8758$kwCBQ
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$10082$kwCBQ
                                                                                       g$foo-rtd-code$10092$kwCBQ)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$10084$kwCBQ
                                                                                         g$protocol-code$10094$kwCBQ)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$10083$kwCBQ
                                                                                           g$foo-rcd-code$10093$kwCBQ)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$10081$kwCBQ
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$10082$kwCBQ)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$10083$kwCBQ)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$10091$kwCBQ
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$10082$kwCBQ))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$10085$kwCBQ
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$10083$kwCBQ))
                                                                                               (append
                                                                                                 (g$map$5812$kwCBQ
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$10095$kwCBQ
                                                                                                        g$idx$10096$kwCBQ)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$10095$kwCBQ
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$10082$kwCBQ
                                                                                                          g$idx$10096$kwCBQ))))
                                                                                                   g$foo-x*$10088$kwCBQ
                                                                                                   g$idx*$10087$kwCBQ)
                                                                                                 (g$map$5812$kwCBQ
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$10097$kwCBQ
                                                                                                        g$idx$10098$kwCBQ)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$10097$kwCBQ
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$10082$kwCBQ
                                                                                                          g$idx$10098$kwCBQ))))
                                                                                                   g$set-foo-x!*$10089$kwCBQ
                                                                                                   g$set-foo-idx*$10090$kwCBQ))))))))))))
                                                                            (g$get-protocol-code$10049$kwCBQ
                                                                              g$clause*$10080$kwCBQ))))
                                                                        (g$foo-rcd-code$10048$kwCBQ
                                                                          g$clause*$10080$kwCBQ
                                                                          g$foo-rtd$10082$kwCBQ
                                                                          g$protocol$10084$kwCBQ
                                                                          (g$parent-rcd-code$10047$kwCBQ
                                                                            g$clause*$10080$kwCBQ)))))
                                                                    (g$foo-rtd-code$10045$kwCBQ
                                                                      g$foo$10081$kwCBQ
                                                                      g$clause*$10080$kwCBQ
                                                                      (g$parent-rtd-code$10046$kwCBQ
                                                                        g$clause*$10080$kwCBQ)))))
                                                                (g$get-record-predicate-name$10043$kwCBQ
                                                                  g$namespec$10079$kwCBQ))))
                                                            (g$get-mutator-indices$10051$kwCBQ
                                                              g$fields$10086$kwCBQ))))
                                                        (g$get-mutators$10052$kwCBQ
                                                          g$foo$10081$kwCBQ
                                                          g$fields$10086$kwCBQ))))
                                                    (g$get-accessors$10053$kwCBQ
                                                      g$foo$10081$kwCBQ
                                                      g$fields$10086$kwCBQ))))
                                                (g$enumerate$10054$kwCBQ
                                                  g$fields$10086$kwCBQ))))
                                            (g$get-fields$10050$kwCBQ
                                              g$clause*$10080$kwCBQ))))
                                        (g$get-record-constructor-name$10042$kwCBQ
                                          g$namespec$10079$kwCBQ))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$10041$kwCBQ
                          g$namespec$10079$kwCBQ)))))
                  (g$verify-clauses$10056$kwCBQ
                    (case-lambda
                      ((g$x$10061$kwCBQ g$cls*$10062$kwCBQ)
                       (letrec* ((g$valid-kwds$10063$kwCBQ
                                   (g$map$5812$kwCBQ
                                     g$bless$8758$kwCBQ
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$10064$kwCBQ
                                   (case-lambda
                                     ((g$x$10076$kwCBQ g$ls$10077$kwCBQ)
                                      (if (pair? g$ls$10077$kwCBQ)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$10078$kwCBQ)
                                              (if g$t$10078$kwCBQ
                                                g$t$10078$kwCBQ
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$10064$kwCBQ
                                                    g$x$10076$kwCBQ
                                                    (cdr g$ls$10077$kwCBQ))))))
                                           (g$free-id=?$8520$kwCBQ
                                             g$x$10076$kwCBQ
                                             (car g$ls$10077$kwCBQ))))
                                        '#f)))))
                         ((letrec ((g$f$10065$kwCBQ
                                     (case-lambda
                                       ((g$cls*$10066$kwCBQ g$seen*$10067$kwCBQ)
                                        (if (not (null? g$cls*$10066$kwCBQ))
                                          ((case-lambda
                                             ((g$t$10068$kwCBQ)
                                              ((case-lambda
                                                 ((g$ls/false$10069$kwCBQ)
                                                  (if g$ls/false$10069$kwCBQ
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$10070$kwCBQ
                                                           g$rest$10071$kwCBQ)
                                                         (if ((case-lambda
                                                                ((g$t$10072$kwCBQ)
                                                                 (if g$t$10072$kwCBQ
                                                                   g$t$10072$kwCBQ
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$10064$kwCBQ
                                                                            g$kwd$10070$kwCBQ
                                                                            g$valid-kwds$10063$kwCBQ))))))
                                                              (not (g$id?$8516$kwCBQ
                                                                     g$kwd$10070$kwCBQ)))
                                                           (g$syntax-violation$8907$kwCBQ
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$10070$kwCBQ)
                                                           (if (g$bound-id-member?$8523$kwCBQ
                                                                 g$kwd$10070$kwCBQ
                                                                 g$seen*$10067$kwCBQ)
                                                             (g$syntax-violation$8907$kwCBQ
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$10061$kwCBQ
                                                               g$kwd$10070$kwCBQ)
                                                             (g$f$10065$kwCBQ
                                                               (cdr g$cls*$10066$kwCBQ)
                                                               (cons
                                                                 g$kwd$10070$kwCBQ
                                                                 g$seen*$10067$kwCBQ))))))
                                                      g$ls/false$10069$kwCBQ)
                                                    ((case-lambda
                                                       ((g$t$10073$kwCBQ)
                                                        ((case-lambda
                                                           ((g$ls/false$10074$kwCBQ)
                                                            (if g$ls/false$10074$kwCBQ
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$10075$kwCBQ)
                                                                   (g$syntax-violation$8907$kwCBQ
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$10075$kwCBQ)))
                                                                g$ls/false$10074$kwCBQ)
                                                              (g$syntax-violation$8907$kwCBQ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$10073$kwCBQ))))
                                                         (g$syntax-dispatch$8795$kwCBQ
                                                           g$t$10073$kwCBQ
                                                           'any))))
                                                     g$t$10068$kwCBQ))))
                                               (g$syntax-dispatch$8795$kwCBQ
                                                 g$t$10068$kwCBQ
                                                 '(any . any)))))
                                           (car g$cls*$10066$kwCBQ))
                                          (void))))))
                            g$f$10065$kwCBQ)
                          g$cls*$10062$kwCBQ
                          '()))))))
          ((case-lambda
             ((g$t$10057$kwCBQ)
              ((case-lambda
                 ((g$ls/false$10058$kwCBQ)
                  (if g$ls/false$10058$kwCBQ
                    (apply
                      (case-lambda
                        ((g$namespec$10059$kwCBQ g$clause*$10060$kwCBQ)
                         (begin
                           (g$verify-clauses$10056$kwCBQ
                             g$x$10039$kwCBQ
                             g$clause*$10060$kwCBQ)
                           (g$do-define-record$10055$kwCBQ
                             g$namespec$10059$kwCBQ
                             g$clause*$10060$kwCBQ))))
                      g$ls/false$10058$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$10057$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$10057$kwCBQ
                 '(_ any . each-any)))))
           g$x$10039$kwCBQ)))))
   (g$define-condition-type-macro$8790$kwCBQ
     g$define-condition-type-macro$12308$kwCBQ
     (case-lambda
       ((g$x$10295$kwCBQ)
        (letrec* ((g$mkname$10296$kwCBQ
                    (case-lambda
                      ((g$name$10319$kwCBQ g$suffix$10320$kwCBQ)
                       (g$datum->syntax$8909$kwCBQ
                         g$name$10319$kwCBQ
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8910$kwCBQ g$name$10319$kwCBQ))
                             g$suffix$10320$kwCBQ)))))))
          ((case-lambda
             ((g$t$10297$kwCBQ)
              ((case-lambda
                 ((g$ls/false$10298$kwCBQ)
                  (if (if g$ls/false$10298$kwCBQ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$10299$kwCBQ
                                 g$name$10300$kwCBQ
                                 g$super$10301$kwCBQ
                                 g$constructor$10302$kwCBQ
                                 g$predicate$10303$kwCBQ
                                 g$field*$10304$kwCBQ
                                 g$accessor*$10305$kwCBQ)
                               (if (g$id?$8516$kwCBQ g$name$10300$kwCBQ)
                                 (if (g$id?$8516$kwCBQ g$super$10301$kwCBQ)
                                   (if (g$id?$8516$kwCBQ
                                         g$constructor$10302$kwCBQ)
                                     (if (g$id?$8516$kwCBQ
                                           g$predicate$10303$kwCBQ)
                                       (if (g$for-all$5810$kwCBQ
                                             g$id?$8516$kwCBQ
                                             g$field*$10304$kwCBQ)
                                         (begin
                                           '#f
                                           (g$for-all$5810$kwCBQ
                                             g$id?$8516$kwCBQ
                                             g$accessor*$10305$kwCBQ))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$10298$kwCBQ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$10306$kwCBQ
                           g$name$10307$kwCBQ
                           g$super$10308$kwCBQ
                           g$constructor$10309$kwCBQ
                           g$predicate$10310$kwCBQ
                           g$field*$10311$kwCBQ
                           g$accessor*$10312$kwCBQ)
                         ((case-lambda
                            ((g$aux-accessor*$10313$kwCBQ)
                             (g$bless$8758$kwCBQ
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$10307$kwCBQ
                                         g$constructor$10309$kwCBQ
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$10308$kwCBQ)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5812$kwCBQ
                                               (case-lambda
                                                 ((g$field$10314$kwCBQ
                                                    g$aux$10315$kwCBQ)
                                                  (list
                                                    'immutable
                                                    g$field$10314$kwCBQ
                                                    g$aux$10315$kwCBQ)))
                                               g$field*$10311$kwCBQ
                                               g$aux-accessor*$10313$kwCBQ))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$10310$kwCBQ
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$10307$kwCBQ)))
                                     (g$map$5812$kwCBQ
                                       (case-lambda
                                         ((g$accessor$10316$kwCBQ
                                            g$aux$10317$kwCBQ)
                                          (list
                                            'define
                                            g$accessor$10316$kwCBQ
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$10307$kwCBQ)
                                              g$aux$10317$kwCBQ))))
                                       g$accessor*$10312$kwCBQ
                                       g$aux-accessor*$10313$kwCBQ)))))))
                          (g$map$5812$kwCBQ
                            (case-lambda ((g$x$10318$kwCBQ) (gensym)))
                            g$accessor*$10312$kwCBQ))))
                      g$ls/false$10298$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$10297$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ
                 g$t$10297$kwCBQ
                 '(any any any any any . #(each (any any)))))))
           g$x$10295$kwCBQ)))))
   (g$incorrect-usage-macro$8791$kwCBQ
     g$incorrect-usage-macro$12309$kwCBQ
     (case-lambda
       ((g$e$10321$kwCBQ)
        (g$syntax-violation$8907$kwCBQ
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$10321$kwCBQ))))
   (g$parameterize-macro$8792$kwCBQ
     g$parameterize-macro$12310$kwCBQ
     (case-lambda
       ((g$e$10322$kwCBQ)
        ((case-lambda
           ((g$t$10323$kwCBQ)
            ((case-lambda
               ((g$ls/false$10324$kwCBQ)
                (if g$ls/false$10324$kwCBQ
                  (apply
                    (case-lambda
                      ((g$b$10325$kwCBQ g$b*$10326$kwCBQ)
                       (g$bless$8758$kwCBQ
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$10325$kwCBQ g$b*$10326$kwCBQ))))))
                    g$ls/false$10324$kwCBQ)
                  ((case-lambda
                     ((g$t$10327$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$10328$kwCBQ)
                          (if g$ls/false$10328$kwCBQ
                            (apply
                              (case-lambda
                                ((g$olhs*$10329$kwCBQ
                                   g$orhs*$10330$kwCBQ
                                   g$b$10331$kwCBQ
                                   g$b*$10332$kwCBQ)
                                 ((case-lambda
                                    ((g$lhs*$10333$kwCBQ g$rhs*$10334$kwCBQ)
                                     (g$bless$8758$kwCBQ
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$10333$kwCBQ
                                             g$rhs*$10334$kwCBQ)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5812$kwCBQ
                                                       (case-lambda
                                                         ((g$lhs$10335$kwCBQ
                                                            g$rhs$10336$kwCBQ)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$10335$kwCBQ)))
                                                            (list
                                                              g$lhs$10335$kwCBQ
                                                              g$rhs$10336$kwCBQ)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$10336$kwCBQ
                                                                '(t))))))
                                                       g$lhs*$10333$kwCBQ
                                                       g$rhs*$10334$kwCBQ)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$10331$kwCBQ
                                                         g$b*$10332$kwCBQ)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$10329$kwCBQ
                                           g$orhs*$10330$kwCBQ)))))
                                  (g$generate-temporaries$8897$kwCBQ
                                    g$olhs*$10329$kwCBQ)
                                  (g$generate-temporaries$8897$kwCBQ
                                    g$orhs*$10330$kwCBQ))))
                              g$ls/false$10328$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$10327$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$10327$kwCBQ
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$10323$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$10323$kwCBQ
               '(_ () any . each-any)))))
         g$e$10322$kwCBQ))))
   (g$foreign-call-transformer$8793$kwCBQ
     g$foreign-call-transformer$12311$kwCBQ
     (case-lambda
       ((g$e$10337$kwCBQ g$r$10338$kwCBQ g$mr$10339$kwCBQ)
        ((case-lambda
           ((g$t$10340$kwCBQ)
            ((case-lambda
               ((g$ls/false$10341$kwCBQ)
                (if g$ls/false$10341$kwCBQ
                  (apply
                    (case-lambda
                      ((g$name$10342$kwCBQ g$arg*$10343$kwCBQ)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8813$kwCBQ
                             g$name$10342$kwCBQ
                             g$r$10338$kwCBQ
                             g$mr$10339$kwCBQ)
                           (g$chi-expr*$8811$kwCBQ
                             g$arg*$10343$kwCBQ
                             g$r$10338$kwCBQ
                             g$mr$10339$kwCBQ)))))
                    g$ls/false$10341$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$10340$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$10340$kwCBQ
               '(_ any . each-any)))))
         g$e$10337$kwCBQ))))
   (g$convert-pattern$8794$kwCBQ
     g$convert-pattern$12312$kwCBQ
     (case-lambda
       ((g$pattern$10344$kwCBQ g$keys$10345$kwCBQ)
        (letrec* ((g$cvt*$10346$kwCBQ
                    (case-lambda
                      ((g$p*$10426$kwCBQ g$n$10427$kwCBQ g$ids$10428$kwCBQ)
                       (if (null? g$p*$10426$kwCBQ)
                         (values '() g$ids$10428$kwCBQ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$10346$kwCBQ
                                (cdr g$p*$10426$kwCBQ)
                                g$n$10427$kwCBQ
                                g$ids$10428$kwCBQ)))
                           (case-lambda
                             ((g$y$10431$kwCBQ g$ids$10432$kwCBQ)
                              ((case-lambda
                                 ((g$ids$10433$kwCBQ g$y$10434$kwCBQ)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$10347$kwCBQ
                                         (car g$p*$10426$kwCBQ)
                                         g$n$10427$kwCBQ
                                         g$ids$10433$kwCBQ)))
                                    (case-lambda
                                      ((g$x$10437$kwCBQ g$ids$10438$kwCBQ)
                                       ((case-lambda
                                          ((g$ids$10439$kwCBQ g$x$10440$kwCBQ)
                                           (values
                                             (cons
                                               g$x$10440$kwCBQ
                                               g$y$10434$kwCBQ)
                                             g$ids$10439$kwCBQ)))
                                        g$ids$10438$kwCBQ
                                        g$x$10437$kwCBQ))))))
                               g$ids$10432$kwCBQ
                               g$y$10431$kwCBQ))))))))
                  (g$cvt$10347$kwCBQ
                    (case-lambda
                      ((g$p$10348$kwCBQ g$n$10349$kwCBQ g$ids$10350$kwCBQ)
                       ((case-lambda
                          ((g$t$10351$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$10352$kwCBQ)
                               (if (if g$ls/false$10352$kwCBQ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$10353$kwCBQ)
                                            (g$id?$8516$kwCBQ
                                              g$id$10353$kwCBQ)))
                                         g$ls/false$10352$kwCBQ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$10354$kwCBQ)
                                      (if (g$bound-id-member?$8523$kwCBQ
                                            g$p$10348$kwCBQ
                                            g$keys$10345$kwCBQ)
                                        (values
                                          (vector 'free-id g$p$10348$kwCBQ)
                                          g$ids$10350$kwCBQ)
                                        (if (g$free-id=?$8520$kwCBQ
                                              g$p$10348$kwCBQ
                                              (g$scheme-stx$8738$kwCBQ '_))
                                          (values '_ g$ids$10350$kwCBQ)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$10348$kwCBQ
                                                g$n$10349$kwCBQ)
                                              g$ids$10350$kwCBQ))))))
                                   g$ls/false$10352$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10355$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$10356$kwCBQ)
                                         (if (if g$ls/false$10356$kwCBQ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$10357$kwCBQ
                                                        g$dots$10358$kwCBQ)
                                                      (g$ellipsis?$8796$kwCBQ
                                                        g$dots$10358$kwCBQ)))
                                                   g$ls/false$10356$kwCBQ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$10359$kwCBQ
                                                  g$dots$10360$kwCBQ)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$10347$kwCBQ
                                                       g$p$10359$kwCBQ
                                                       (+ g$n$10349$kwCBQ '1)
                                                       g$ids$10350$kwCBQ)))
                                                  (case-lambda
                                                    ((g$p$10363$kwCBQ
                                                       g$ids$10364$kwCBQ)
                                                     ((case-lambda
                                                        ((g$ids$10365$kwCBQ
                                                           g$p$10366$kwCBQ)
                                                         (values
                                                           (if (eq? g$p$10366$kwCBQ
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$10366$kwCBQ))
                                                           g$ids$10365$kwCBQ)))
                                                      g$ids$10364$kwCBQ
                                                      g$p$10363$kwCBQ))))))
                                             g$ls/false$10356$kwCBQ)
                                           ((case-lambda
                                              ((g$t$10367$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$10368$kwCBQ)
                                                   (if (if g$ls/false$10368$kwCBQ
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$10369$kwCBQ
                                                                  g$dots$10370$kwCBQ
                                                                  g$ys$10371$kwCBQ
                                                                  g$z$10372$kwCBQ)
                                                                (g$ellipsis?$8796$kwCBQ
                                                                  g$dots$10370$kwCBQ)))
                                                             g$ls/false$10368$kwCBQ))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10373$kwCBQ
                                                            g$dots$10374$kwCBQ
                                                            g$ys$10375$kwCBQ
                                                            g$z$10376$kwCBQ)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$10347$kwCBQ
                                                                 g$z$10376$kwCBQ
                                                                 g$n$10349$kwCBQ
                                                                 g$ids$10350$kwCBQ)))
                                                            (case-lambda
                                                              ((g$z$10379$kwCBQ
                                                                 g$ids$10380$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$ids$10381$kwCBQ
                                                                     g$z$10382$kwCBQ)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$10346$kwCBQ
                                                                          g$ys$10375$kwCBQ
                                                                          g$n$10349$kwCBQ
                                                                          g$ids$10381$kwCBQ)))
                                                                     (case-lambda
                                                                       ((g$ys$10385$kwCBQ
                                                                          g$ids$10386$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ids$10387$kwCBQ
                                                                              g$ys$10388$kwCBQ)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$10347$kwCBQ
                                                                                   g$x$10373$kwCBQ
                                                                                   (+ g$n$10349$kwCBQ
                                                                                      '1)
                                                                                   g$ids$10387$kwCBQ)))
                                                                              (case-lambda
                                                                                ((g$x$10391$kwCBQ
                                                                                   g$ids$10392$kwCBQ)
                                                                                 ((case-lambda
                                                                                    ((g$ids$10393$kwCBQ
                                                                                       g$x$10394$kwCBQ)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$10394$kwCBQ
                                                                                         (reverse
                                                                                           g$ys$10388$kwCBQ)
                                                                                         g$z$10382$kwCBQ)
                                                                                       g$ids$10393$kwCBQ)))
                                                                                  g$ids$10392$kwCBQ
                                                                                  g$x$10391$kwCBQ))))))
                                                                         g$ids$10386$kwCBQ
                                                                         g$ys$10385$kwCBQ))))))
                                                                g$ids$10380$kwCBQ
                                                                g$z$10379$kwCBQ))))))
                                                       g$ls/false$10368$kwCBQ)
                                                     ((case-lambda
                                                        ((g$t$10395$kwCBQ)
                                                         ((case-lambda
                                                            ((g$ls/false$10396$kwCBQ)
                                                             (if g$ls/false$10396$kwCBQ
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$10397$kwCBQ
                                                                      g$y$10398$kwCBQ)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$10347$kwCBQ
                                                                           g$y$10398$kwCBQ
                                                                           g$n$10349$kwCBQ
                                                                           g$ids$10350$kwCBQ)))
                                                                      (case-lambda
                                                                        ((g$y$10401$kwCBQ
                                                                           g$ids$10402$kwCBQ)
                                                                         ((case-lambda
                                                                            ((g$ids$10403$kwCBQ
                                                                               g$y$10404$kwCBQ)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$10347$kwCBQ
                                                                                    g$x$10397$kwCBQ
                                                                                    g$n$10349$kwCBQ
                                                                                    g$ids$10403$kwCBQ)))
                                                                               (case-lambda
                                                                                 ((g$x$10407$kwCBQ
                                                                                    g$ids$10408$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$ids$10409$kwCBQ
                                                                                        g$x$10410$kwCBQ)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$10410$kwCBQ
                                                                                          g$y$10404$kwCBQ)
                                                                                        g$ids$10409$kwCBQ)))
                                                                                   g$ids$10408$kwCBQ
                                                                                   g$x$10407$kwCBQ))))))
                                                                          g$ids$10402$kwCBQ
                                                                          g$y$10401$kwCBQ))))))
                                                                 g$ls/false$10396$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$t$10411$kwCBQ)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10412$kwCBQ)
                                                                       (if g$ls/false$10412$kwCBQ
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$10350$kwCBQ)))
                                                                           g$ls/false$10412$kwCBQ)
                                                                         ((case-lambda
                                                                            ((g$t$10413$kwCBQ)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10414$kwCBQ)
                                                                                 (if (if g$ls/false$10414$kwCBQ
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$10415$kwCBQ)
                                                                                              (not (g$stx?$8488$kwCBQ
                                                                                                     g$p$10415$kwCBQ))))
                                                                                           g$ls/false$10414$kwCBQ))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$10416$kwCBQ)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$10347$kwCBQ
                                                                                               g$p$10416$kwCBQ
                                                                                               g$n$10349$kwCBQ
                                                                                               g$ids$10350$kwCBQ)))
                                                                                          (case-lambda
                                                                                            ((g$p$10419$kwCBQ
                                                                                               g$ids$10420$kwCBQ)
                                                                                             ((case-lambda
                                                                                                ((g$ids$10421$kwCBQ
                                                                                                   g$p$10422$kwCBQ)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$10422$kwCBQ)
                                                                                                   g$ids$10421$kwCBQ)))
                                                                                              g$ids$10420$kwCBQ
                                                                                              g$p$10419$kwCBQ))))))
                                                                                     g$ls/false$10414$kwCBQ)
                                                                                   ((case-lambda
                                                                                      ((g$t$10423$kwCBQ)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10424$kwCBQ)
                                                                                           (if g$ls/false$10424$kwCBQ
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$10425$kwCBQ)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8527$kwCBQ
                                                                                                        g$datum$10425$kwCBQ))
                                                                                                    g$ids$10350$kwCBQ)))
                                                                                               g$ls/false$10424$kwCBQ)
                                                                                             (g$syntax-violation$8907$kwCBQ
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$10423$kwCBQ))))
                                                                                        (g$syntax-dispatch$8795$kwCBQ
                                                                                          g$t$10423$kwCBQ
                                                                                          'any))))
                                                                                    g$t$10413$kwCBQ))))
                                                                              (g$syntax-dispatch$8795$kwCBQ
                                                                                g$t$10413$kwCBQ
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$10411$kwCBQ))))
                                                                    (g$syntax-dispatch$8795$kwCBQ
                                                                      g$t$10411$kwCBQ
                                                                      '()))))
                                                                g$t$10395$kwCBQ))))
                                                          (g$syntax-dispatch$8795$kwCBQ
                                                            g$t$10395$kwCBQ
                                                            '(any . any)))))
                                                      g$t$10367$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$10367$kwCBQ
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$10355$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$10355$kwCBQ
                                        '(any any)))))
                                  g$t$10351$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$10351$kwCBQ
                              'any))))
                        g$p$10348$kwCBQ)))))
          (g$cvt$10347$kwCBQ g$pattern$10344$kwCBQ '0 '())))))
   (g$syntax-dispatch$8795$kwCBQ
     g$syntax-dispatch$12313$kwCBQ
     ((case-lambda
        (()
         (letrec* ((g$stx^$10441$kwCBQ
                     (case-lambda
                       ((g$e$10551$kwCBQ
                          g$m*$10552$kwCBQ
                          g$s*$10553$kwCBQ
                          g$ae*$10554$kwCBQ)
                        (if (if (null? g$m*$10552$kwCBQ)
                              (if (null? g$s*$10553$kwCBQ)
                                (begin '#f (null? g$ae*$10554$kwCBQ))
                                '#f)
                              '#f)
                          g$e$10551$kwCBQ
                          (g$mkstx$8504$kwCBQ
                            g$e$10551$kwCBQ
                            g$m*$10552$kwCBQ
                            g$s*$10553$kwCBQ
                            g$ae*$10554$kwCBQ)))))
                   (g$match-each$10442$kwCBQ
                     (case-lambda
                       ((g$e$10535$kwCBQ
                          g$p$10536$kwCBQ
                          g$m*$10537$kwCBQ
                          g$s*$10538$kwCBQ
                          g$ae*$10539$kwCBQ)
                        (if (pair? g$e$10535$kwCBQ)
                          ((case-lambda
                             ((g$first$10540$kwCBQ)
                              (if g$first$10540$kwCBQ
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10541$kwCBQ)
                                      (if g$rest$10541$kwCBQ
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10540$kwCBQ
                                            g$rest$10541$kwCBQ))
                                        '#f)))
                                   (g$match-each$10442$kwCBQ
                                     (cdr g$e$10535$kwCBQ)
                                     g$p$10536$kwCBQ
                                     g$m*$10537$kwCBQ
                                     g$s*$10538$kwCBQ
                                     g$ae*$10539$kwCBQ)))
                                '#f)))
                           (g$match$10448$kwCBQ
                             (car g$e$10535$kwCBQ)
                             g$p$10536$kwCBQ
                             g$m*$10537$kwCBQ
                             g$s*$10538$kwCBQ
                             g$ae*$10539$kwCBQ
                             '()))
                          (if (null? g$e$10535$kwCBQ)
                            '()
                            (if (g$stx?$8488$kwCBQ g$e$10535$kwCBQ)
                              (if (not (g$top-marked?$8454$kwCBQ
                                         g$m*$10537$kwCBQ))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8503$kwCBQ
                                         g$m*$10537$kwCBQ
                                         g$s*$10538$kwCBQ
                                         g$ae*$10539$kwCBQ
                                         g$e$10535$kwCBQ)))
                                    (case-lambda
                                      ((g$m*$10545$kwCBQ
                                         g$s*$10546$kwCBQ
                                         g$ae*$10547$kwCBQ)
                                       ((case-lambda
                                          ((g$ae*$10548$kwCBQ
                                             g$s*$10549$kwCBQ
                                             g$m*$10550$kwCBQ)
                                           (g$match-each$10442$kwCBQ
                                             (g$stx-expr$8490$kwCBQ
                                               g$e$10535$kwCBQ)
                                             g$p$10536$kwCBQ
                                             g$m*$10550$kwCBQ
                                             g$s*$10549$kwCBQ
                                             g$ae*$10548$kwCBQ)))
                                        g$ae*$10547$kwCBQ
                                        g$s*$10546$kwCBQ
                                        g$m*$10545$kwCBQ)))))
                                '#f)
                              (if (annotation? g$e$10535$kwCBQ)
                                (g$match-each$10442$kwCBQ
                                  (annotation-expression g$e$10535$kwCBQ)
                                  g$p$10536$kwCBQ
                                  g$m*$10537$kwCBQ
                                  g$s*$10538$kwCBQ
                                  g$ae*$10539$kwCBQ)
                                '#f)))))))
                   (g$match-each+$10443$kwCBQ
                     (case-lambda
                       ((g$e$10503$kwCBQ
                          g$x-pat$10504$kwCBQ
                          g$y-pat$10505$kwCBQ
                          g$z-pat$10506$kwCBQ
                          g$m*$10507$kwCBQ
                          g$s*$10508$kwCBQ
                          g$ae*$10509$kwCBQ
                          g$r$10510$kwCBQ)
                        ((letrec ((g$f$10511$kwCBQ
                                    (case-lambda
                                      ((g$e$10512$kwCBQ
                                         g$m*$10513$kwCBQ
                                         g$s*$10514$kwCBQ
                                         g$ae*$10515$kwCBQ)
                                       (if (pair? g$e$10512$kwCBQ)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$10511$kwCBQ
                                                (cdr g$e$10512$kwCBQ)
                                                g$m*$10513$kwCBQ
                                                g$s*$10514$kwCBQ
                                                g$ae*$10515$kwCBQ)))
                                           (case-lambda
                                             ((g$xr*$10519$kwCBQ
                                                g$y-pat$10520$kwCBQ
                                                g$r$10521$kwCBQ)
                                              ((case-lambda
                                                 ((g$r$10522$kwCBQ
                                                    g$y-pat$10523$kwCBQ
                                                    g$xr*$10524$kwCBQ)
                                                  (if g$r$10522$kwCBQ
                                                    (if (null?
                                                          g$y-pat$10523$kwCBQ)
                                                      ((case-lambda
                                                         ((g$xr$10525$kwCBQ)
                                                          (if g$xr$10525$kwCBQ
                                                            (values
                                                              (cons
                                                                g$xr$10525$kwCBQ
                                                                g$xr*$10524$kwCBQ)
                                                              g$y-pat$10523$kwCBQ
                                                              g$r$10522$kwCBQ)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$10448$kwCBQ
                                                         (car g$e$10512$kwCBQ)
                                                         g$x-pat$10504$kwCBQ
                                                         g$m*$10513$kwCBQ
                                                         g$s*$10514$kwCBQ
                                                         g$ae*$10515$kwCBQ
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10523$kwCBQ)
                                                        (g$match$10448$kwCBQ
                                                          (car g$e$10512$kwCBQ)
                                                          (car g$y-pat$10523$kwCBQ)
                                                          g$m*$10513$kwCBQ
                                                          g$s*$10514$kwCBQ
                                                          g$ae*$10515$kwCBQ
                                                          g$r$10522$kwCBQ)))
                                                    (values '#f '#f '#f))))
                                               g$r$10521$kwCBQ
                                               g$y-pat$10520$kwCBQ
                                               g$xr*$10519$kwCBQ))))
                                         (if (g$stx?$8488$kwCBQ g$e$10512$kwCBQ)
                                           (if (g$top-marked?$8454$kwCBQ
                                                 g$m*$10513$kwCBQ)
                                             (values
                                               '()
                                               g$y-pat$10505$kwCBQ
                                               (g$match$10448$kwCBQ
                                                 g$e$10512$kwCBQ
                                                 g$z-pat$10506$kwCBQ
                                                 g$m*$10513$kwCBQ
                                                 g$s*$10514$kwCBQ
                                                 g$ae*$10515$kwCBQ
                                                 g$r$10510$kwCBQ))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$8503$kwCBQ
                                                    g$m*$10513$kwCBQ
                                                    g$s*$10514$kwCBQ
                                                    g$ae*$10515$kwCBQ
                                                    g$e$10512$kwCBQ)))
                                               (case-lambda
                                                 ((g$m*$10529$kwCBQ
                                                    g$s*$10530$kwCBQ
                                                    g$ae*$10531$kwCBQ)
                                                  ((case-lambda
                                                     ((g$ae*$10532$kwCBQ
                                                        g$s*$10533$kwCBQ
                                                        g$m*$10534$kwCBQ)
                                                      (g$f$10511$kwCBQ
                                                        (g$stx-expr$8490$kwCBQ
                                                          g$e$10512$kwCBQ)
                                                        g$m*$10534$kwCBQ
                                                        g$s*$10533$kwCBQ
                                                        g$ae*$10532$kwCBQ)))
                                                   g$ae*$10531$kwCBQ
                                                   g$s*$10530$kwCBQ
                                                   g$m*$10529$kwCBQ)))))
                                           (if (annotation? g$e$10512$kwCBQ)
                                             (g$f$10511$kwCBQ
                                               (annotation-expression
                                                 g$e$10512$kwCBQ)
                                               g$m*$10513$kwCBQ
                                               g$s*$10514$kwCBQ
                                               g$ae*$10515$kwCBQ)
                                             (values
                                               '()
                                               g$y-pat$10505$kwCBQ
                                               (g$match$10448$kwCBQ
                                                 g$e$10512$kwCBQ
                                                 g$z-pat$10506$kwCBQ
                                                 g$m*$10513$kwCBQ
                                                 g$s*$10514$kwCBQ
                                                 g$ae*$10515$kwCBQ
                                                 g$r$10510$kwCBQ)))))))))
                           g$f$10511$kwCBQ)
                         g$e$10503$kwCBQ
                         g$m*$10507$kwCBQ
                         g$s*$10508$kwCBQ
                         g$ae*$10509$kwCBQ))))
                   (g$match-each-any$10444$kwCBQ
                     (case-lambda
                       ((g$e$10489$kwCBQ
                          g$m*$10490$kwCBQ
                          g$s*$10491$kwCBQ
                          g$ae*$10492$kwCBQ)
                        (if (pair? g$e$10489$kwCBQ)
                          ((case-lambda
                             ((g$l$10493$kwCBQ)
                              (if g$l$10493$kwCBQ
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$10441$kwCBQ
                                      (car g$e$10489$kwCBQ)
                                      g$m*$10490$kwCBQ
                                      g$s*$10491$kwCBQ
                                      g$ae*$10492$kwCBQ)
                                    g$l$10493$kwCBQ))
                                '#f)))
                           (g$match-each-any$10444$kwCBQ
                             (cdr g$e$10489$kwCBQ)
                             g$m*$10490$kwCBQ
                             g$s*$10491$kwCBQ
                             g$ae*$10492$kwCBQ))
                          (if (null? g$e$10489$kwCBQ)
                            '()
                            (if (g$stx?$8488$kwCBQ g$e$10489$kwCBQ)
                              (if (not (g$top-marked?$8454$kwCBQ
                                         g$m*$10490$kwCBQ))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8503$kwCBQ
                                         g$m*$10490$kwCBQ
                                         g$s*$10491$kwCBQ
                                         g$ae*$10492$kwCBQ
                                         g$e$10489$kwCBQ)))
                                    (case-lambda
                                      ((g$m*$10497$kwCBQ
                                         g$s*$10498$kwCBQ
                                         g$ae*$10499$kwCBQ)
                                       ((case-lambda
                                          ((g$ae*$10500$kwCBQ
                                             g$s*$10501$kwCBQ
                                             g$m*$10502$kwCBQ)
                                           (g$match-each-any$10444$kwCBQ
                                             (g$stx-expr$8490$kwCBQ
                                               g$e$10489$kwCBQ)
                                             g$m*$10502$kwCBQ
                                             g$s*$10501$kwCBQ
                                             g$ae*$10500$kwCBQ)))
                                        g$ae*$10499$kwCBQ
                                        g$s*$10498$kwCBQ
                                        g$m*$10497$kwCBQ)))))
                                '#f)
                              (if (annotation? g$e$10489$kwCBQ)
                                (g$match-each-any$10444$kwCBQ
                                  (annotation-expression g$e$10489$kwCBQ)
                                  g$m*$10490$kwCBQ
                                  g$s*$10491$kwCBQ
                                  g$ae*$10492$kwCBQ)
                                '#f)))))))
                   (g$match-empty$10445$kwCBQ
                     (case-lambda
                       ((g$p$10486$kwCBQ g$r$10487$kwCBQ)
                        (if (null? g$p$10486$kwCBQ)
                          g$r$10487$kwCBQ
                          (if (eq? g$p$10486$kwCBQ '_)
                            g$r$10487$kwCBQ
                            (if (eq? g$p$10486$kwCBQ 'any)
                              (cons '() g$r$10487$kwCBQ)
                              (if (pair? g$p$10486$kwCBQ)
                                (g$match-empty$10445$kwCBQ
                                  (car g$p$10486$kwCBQ)
                                  (g$match-empty$10445$kwCBQ
                                    (cdr g$p$10486$kwCBQ)
                                    g$r$10487$kwCBQ))
                                (if (eq? g$p$10486$kwCBQ 'each-any)
                                  (cons '() g$r$10487$kwCBQ)
                                  ((case-lambda
                                     ((g$t$10488$kwCBQ)
                                      (if (g$memv$5805$kwCBQ
                                            g$t$10488$kwCBQ
                                            '(each))
                                        (g$match-empty$10445$kwCBQ
                                          (vector-ref g$p$10486$kwCBQ '1)
                                          g$r$10487$kwCBQ)
                                        (if (g$memv$5805$kwCBQ
                                              g$t$10488$kwCBQ
                                              '(each+))
                                          (g$match-empty$10445$kwCBQ
                                            (vector-ref g$p$10486$kwCBQ '1)
                                            (g$match-empty$10445$kwCBQ
                                              (reverse
                                                (vector-ref g$p$10486$kwCBQ '2))
                                              (g$match-empty$10445$kwCBQ
                                                (vector-ref g$p$10486$kwCBQ '3)
                                                g$r$10487$kwCBQ)))
                                          (if (g$memv$5805$kwCBQ
                                                g$t$10488$kwCBQ
                                                '(free-id atom))
                                            g$r$10487$kwCBQ
                                            (if (g$memv$5805$kwCBQ
                                                  g$t$10488$kwCBQ
                                                  '(scheme-id atom))
                                              g$r$10487$kwCBQ
                                              (if (g$memv$5805$kwCBQ
                                                    g$t$10488$kwCBQ
                                                    '(vector))
                                                (g$match-empty$10445$kwCBQ
                                                  (vector-ref
                                                    g$p$10486$kwCBQ
                                                    '1)
                                                  g$r$10487$kwCBQ)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$10486$kwCBQ))))))))
                                   (vector-ref g$p$10486$kwCBQ '0))))))))))
                   (g$combine$10446$kwCBQ
                     (case-lambda
                       ((g$r*$10484$kwCBQ g$r$10485$kwCBQ)
                        (if (null? (car g$r*$10484$kwCBQ))
                          g$r$10485$kwCBQ
                          (cons
                            (g$map$5812$kwCBQ car g$r*$10484$kwCBQ)
                            (g$combine$10446$kwCBQ
                              (g$map$5812$kwCBQ cdr g$r*$10484$kwCBQ)
                              g$r$10485$kwCBQ))))))
                   (g$match*$10447$kwCBQ
                     (case-lambda
                       ((g$e$10466$kwCBQ
                          g$p$10467$kwCBQ
                          g$m*$10468$kwCBQ
                          g$s*$10469$kwCBQ
                          g$ae*$10470$kwCBQ
                          g$r$10471$kwCBQ)
                        (if (null? g$p$10467$kwCBQ)
                          (if (null? g$e$10466$kwCBQ)
                            (begin '#f g$r$10471$kwCBQ)
                            '#f)
                          (if (pair? g$p$10467$kwCBQ)
                            (if (pair? g$e$10466$kwCBQ)
                              (begin
                                '#f
                                (g$match$10448$kwCBQ
                                  (car g$e$10466$kwCBQ)
                                  (car g$p$10467$kwCBQ)
                                  g$m*$10468$kwCBQ
                                  g$s*$10469$kwCBQ
                                  g$ae*$10470$kwCBQ
                                  (g$match$10448$kwCBQ
                                    (cdr g$e$10466$kwCBQ)
                                    (cdr g$p$10467$kwCBQ)
                                    g$m*$10468$kwCBQ
                                    g$s*$10469$kwCBQ
                                    g$ae*$10470$kwCBQ
                                    g$r$10471$kwCBQ)))
                              '#f)
                            (if (eq? g$p$10467$kwCBQ 'each-any)
                              ((case-lambda
                                 ((g$l$10472$kwCBQ)
                                  (if g$l$10472$kwCBQ
                                    (begin
                                      '#f
                                      (cons g$l$10472$kwCBQ g$r$10471$kwCBQ))
                                    '#f)))
                               (g$match-each-any$10444$kwCBQ
                                 g$e$10466$kwCBQ
                                 g$m*$10468$kwCBQ
                                 g$s*$10469$kwCBQ
                                 g$ae*$10470$kwCBQ))
                              ((case-lambda
                                 ((g$t$10473$kwCBQ)
                                  (if (g$memv$5805$kwCBQ
                                        g$t$10473$kwCBQ
                                        '(each))
                                    (if (null? g$e$10466$kwCBQ)
                                      (g$match-empty$10445$kwCBQ
                                        (vector-ref g$p$10467$kwCBQ '1)
                                        g$r$10471$kwCBQ)
                                      ((case-lambda
                                         ((g$r*$10474$kwCBQ)
                                          (if g$r*$10474$kwCBQ
                                            (begin
                                              '#f
                                              (g$combine$10446$kwCBQ
                                                g$r*$10474$kwCBQ
                                                g$r$10471$kwCBQ))
                                            '#f)))
                                       (g$match-each$10442$kwCBQ
                                         g$e$10466$kwCBQ
                                         (vector-ref g$p$10467$kwCBQ '1)
                                         g$m*$10468$kwCBQ
                                         g$s*$10469$kwCBQ
                                         g$ae*$10470$kwCBQ)))
                                    (if (g$memv$5805$kwCBQ
                                          g$t$10473$kwCBQ
                                          '(free-id))
                                      (if (symbol? g$e$10466$kwCBQ)
                                        (if (g$top-marked?$8454$kwCBQ
                                              g$m*$10468$kwCBQ)
                                          (if (g$free-id=?$8520$kwCBQ
                                                (g$stx^$10441$kwCBQ
                                                  g$e$10466$kwCBQ
                                                  g$m*$10468$kwCBQ
                                                  g$s*$10469$kwCBQ
                                                  g$ae*$10470$kwCBQ)
                                                (vector-ref g$p$10467$kwCBQ '1))
                                            (begin '#f g$r$10471$kwCBQ)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5805$kwCBQ
                                            g$t$10473$kwCBQ
                                            '(scheme-id))
                                        (if (symbol? g$e$10466$kwCBQ)
                                          (if (g$top-marked?$8454$kwCBQ
                                                g$m*$10468$kwCBQ)
                                            (if (g$free-id=?$8520$kwCBQ
                                                  (g$stx^$10441$kwCBQ
                                                    g$e$10466$kwCBQ
                                                    g$m*$10468$kwCBQ
                                                    g$s*$10469$kwCBQ
                                                    g$ae*$10470$kwCBQ)
                                                  (g$scheme-stx$8738$kwCBQ
                                                    (vector-ref
                                                      g$p$10467$kwCBQ
                                                      '1)))
                                              (begin '#f g$r$10471$kwCBQ)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5805$kwCBQ
                                              g$t$10473$kwCBQ
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$10443$kwCBQ
                                                 g$e$10466$kwCBQ
                                                 (vector-ref g$p$10467$kwCBQ '1)
                                                 (vector-ref g$p$10467$kwCBQ '2)
                                                 (vector-ref g$p$10467$kwCBQ '3)
                                                 g$m*$10468$kwCBQ
                                                 g$s*$10469$kwCBQ
                                                 g$ae*$10470$kwCBQ
                                                 g$r$10471$kwCBQ)))
                                            (case-lambda
                                              ((g$xr*$10478$kwCBQ
                                                 g$y-pat$10479$kwCBQ
                                                 g$r$10480$kwCBQ)
                                               ((case-lambda
                                                  ((g$r$10481$kwCBQ
                                                     g$y-pat$10482$kwCBQ
                                                     g$xr*$10483$kwCBQ)
                                                   (if g$r$10481$kwCBQ
                                                     (if (null?
                                                           g$y-pat$10482$kwCBQ)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$10483$kwCBQ)
                                                           (g$match-empty$10445$kwCBQ
                                                             (vector-ref
                                                               g$p$10467$kwCBQ
                                                               '1)
                                                             g$r$10481$kwCBQ)
                                                           (g$combine$10446$kwCBQ
                                                             g$xr*$10483$kwCBQ
                                                             g$r$10481$kwCBQ)))
                                                       '#f)
                                                     '#f)))
                                                g$r$10480$kwCBQ
                                                g$y-pat$10479$kwCBQ
                                                g$xr*$10478$kwCBQ))))
                                          (if (g$memv$5805$kwCBQ
                                                g$t$10473$kwCBQ
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$10467$kwCBQ
                                                    '1)
                                                  (g$strip$8526$kwCBQ
                                                    g$e$10466$kwCBQ
                                                    g$m*$10468$kwCBQ))
                                              (begin '#f g$r$10471$kwCBQ)
                                              '#f)
                                            (if (g$memv$5805$kwCBQ
                                                  g$t$10473$kwCBQ
                                                  '(vector))
                                              (if (vector? g$e$10466$kwCBQ)
                                                (begin
                                                  '#f
                                                  (g$match$10448$kwCBQ
                                                    (vector->list
                                                      g$e$10466$kwCBQ)
                                                    (vector-ref
                                                      g$p$10467$kwCBQ
                                                      '1)
                                                    g$m*$10468$kwCBQ
                                                    g$s*$10469$kwCBQ
                                                    g$ae*$10470$kwCBQ
                                                    g$r$10471$kwCBQ))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$10467$kwCBQ)))))))))
                               (vector-ref g$p$10467$kwCBQ '0))))))))
                   (g$match$10448$kwCBQ
                     (case-lambda
                       ((g$e$10451$kwCBQ
                          g$p$10452$kwCBQ
                          g$m*$10453$kwCBQ
                          g$s*$10454$kwCBQ
                          g$ae*$10455$kwCBQ
                          g$r$10456$kwCBQ)
                        (if (not g$r$10456$kwCBQ)
                          '#f
                          (if (eq? g$p$10452$kwCBQ '_)
                            g$r$10456$kwCBQ
                            (if (eq? g$p$10452$kwCBQ 'any)
                              (cons
                                (g$stx^$10441$kwCBQ
                                  g$e$10451$kwCBQ
                                  g$m*$10453$kwCBQ
                                  g$s*$10454$kwCBQ
                                  g$ae*$10455$kwCBQ)
                                g$r$10456$kwCBQ)
                              (if (g$stx?$8488$kwCBQ g$e$10451$kwCBQ)
                                (if (not (g$top-marked?$8454$kwCBQ
                                           g$m*$10453$kwCBQ))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$8503$kwCBQ
                                           g$m*$10453$kwCBQ
                                           g$s*$10454$kwCBQ
                                           g$ae*$10455$kwCBQ
                                           g$e$10451$kwCBQ)))
                                      (case-lambda
                                        ((g$m*$10460$kwCBQ
                                           g$s*$10461$kwCBQ
                                           g$ae*$10462$kwCBQ)
                                         ((case-lambda
                                            ((g$ae*$10463$kwCBQ
                                               g$s*$10464$kwCBQ
                                               g$m*$10465$kwCBQ)
                                             (g$match$10448$kwCBQ
                                               (g$stx-expr$8490$kwCBQ
                                                 g$e$10451$kwCBQ)
                                               g$p$10452$kwCBQ
                                               g$m*$10465$kwCBQ
                                               g$s*$10464$kwCBQ
                                               g$ae*$10463$kwCBQ
                                               g$r$10456$kwCBQ)))
                                          g$ae*$10462$kwCBQ
                                          g$s*$10461$kwCBQ
                                          g$m*$10460$kwCBQ)))))
                                  '#f)
                                (if (annotation? g$e$10451$kwCBQ)
                                  (g$match$10448$kwCBQ
                                    (annotation-expression g$e$10451$kwCBQ)
                                    g$p$10452$kwCBQ
                                    g$m*$10453$kwCBQ
                                    g$s*$10454$kwCBQ
                                    g$ae*$10455$kwCBQ
                                    g$r$10456$kwCBQ)
                                  (g$match*$10447$kwCBQ
                                    g$e$10451$kwCBQ
                                    g$p$10452$kwCBQ
                                    g$m*$10453$kwCBQ
                                    g$s*$10454$kwCBQ
                                    g$ae*$10455$kwCBQ
                                    g$r$10456$kwCBQ))))))))))
           (case-lambda
             ((g$e$10449$kwCBQ g$p$10450$kwCBQ)
              (g$match$10448$kwCBQ
                g$e$10449$kwCBQ
                g$p$10450$kwCBQ
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8796$kwCBQ
     g$ellipsis?$12314$kwCBQ
     (case-lambda
       ((g$x$10555$kwCBQ)
        (if (g$id?$8516$kwCBQ g$x$10555$kwCBQ)
          (begin
            '#f
            (g$free-id=?$8520$kwCBQ
              g$x$10555$kwCBQ
              (g$scheme-stx$8738$kwCBQ '...)))
          '#f))))
   (g$underscore?$8797$kwCBQ
     g$underscore?$12315$kwCBQ
     (case-lambda
       ((g$x$10556$kwCBQ)
        (if (g$id?$8516$kwCBQ g$x$10556$kwCBQ)
          (begin
            '#f
            (g$free-id=?$8520$kwCBQ
              g$x$10556$kwCBQ
              (g$scheme-stx$8738$kwCBQ '_)))
          '#f))))
   (g$verify-literals$8798$kwCBQ
     g$verify-literals$12316$kwCBQ
     (case-lambda
       ((g$lits$10557$kwCBQ g$expr$10558$kwCBQ)
        (g$for-each$5813$kwCBQ
          (case-lambda
            ((g$x$10559$kwCBQ)
             (if ((case-lambda
                    ((g$t$10560$kwCBQ)
                     (if g$t$10560$kwCBQ
                       g$t$10560$kwCBQ
                       ((case-lambda
                          ((g$t$10561$kwCBQ)
                           (if g$t$10561$kwCBQ
                             g$t$10561$kwCBQ
                             (begin
                               '#f
                               (g$underscore?$8797$kwCBQ g$x$10559$kwCBQ)))))
                        (g$ellipsis?$8796$kwCBQ g$x$10559$kwCBQ)))))
                  (not (g$id?$8516$kwCBQ g$x$10559$kwCBQ)))
               (g$syntax-violation$8907$kwCBQ
                 '#f
                 '"invalid literal"
                 g$expr$10558$kwCBQ
                 g$x$10559$kwCBQ)
               (void))))
          g$lits$10557$kwCBQ))))
   (g$syntax-case-transformer$8799$kwCBQ
     g$syntax-case-transformer$12317$kwCBQ
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10562$kwCBQ
                     (case-lambda
                       ((g$pvars$10619$kwCBQ
                          g$expr$10620$kwCBQ
                          g$y$10621$kwCBQ
                          g$r$10622$kwCBQ
                          g$mr$10623$kwCBQ)
                        ((case-lambda
                           ((g$ids$10624$kwCBQ g$levels$10625$kwCBQ)
                            ((case-lambda
                               ((g$labels$10626$kwCBQ g$new-vars$10627$kwCBQ)
                                ((case-lambda
                                   ((g$body$10628$kwCBQ)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$8442$kwCBQ
                                        '#f
                                        g$new-vars$10627$kwCBQ
                                        g$body$10628$kwCBQ)
                                      g$y$10621$kwCBQ)))
                                 (g$chi-expr$8813$kwCBQ
                                   (g$add-subst$8506$kwCBQ
                                     (g$make-full-rib$8484$kwCBQ
                                       g$ids$10624$kwCBQ
                                       g$labels$10626$kwCBQ)
                                     g$expr$10620$kwCBQ)
                                   (append
                                     (g$map$5812$kwCBQ
                                       (case-lambda
                                         ((g$label$10629$kwCBQ
                                            g$var$10630$kwCBQ
                                            g$level$10631$kwCBQ)
                                          (cons
                                            g$label$10629$kwCBQ
                                            (g$make-binding$8532$kwCBQ
                                              'syntax
                                              (cons
                                                g$var$10630$kwCBQ
                                                g$level$10631$kwCBQ)))))
                                       g$labels$10626$kwCBQ
                                       g$new-vars$10627$kwCBQ
                                       (g$map$5812$kwCBQ
                                         cdr
                                         g$pvars$10619$kwCBQ))
                                     g$r$10622$kwCBQ)
                                   g$mr$10623$kwCBQ))))
                             (g$map$5812$kwCBQ
                               g$gen-label$8457$kwCBQ
                               g$ids$10624$kwCBQ)
                             (g$map$5812$kwCBQ
                               g$gen-lexical$8455$kwCBQ
                               g$ids$10624$kwCBQ))))
                         (g$map$5812$kwCBQ car g$pvars$10619$kwCBQ)
                         (g$map$5812$kwCBQ cdr g$pvars$10619$kwCBQ)))))
                   (g$invalid-ids-error$10563$kwCBQ
                     (case-lambda
                       ((g$id*$10613$kwCBQ g$e$10614$kwCBQ g$class$10615$kwCBQ)
                        ((letrec ((g$find$10616$kwCBQ
                                    (case-lambda
                                      ((g$id*$10617$kwCBQ g$ok*$10618$kwCBQ)
                                       (if (null? g$id*$10617$kwCBQ)
                                         (g$syntax-violation$8907$kwCBQ
                                           '#f
                                           '"invalid syntax"
                                           g$e$10614$kwCBQ)
                                         (if (g$id?$8516$kwCBQ
                                               (car g$id*$10617$kwCBQ))
                                           (if (g$bound-id-member?$8523$kwCBQ
                                                 (car g$id*$10617$kwCBQ)
                                                 g$ok*$10618$kwCBQ)
                                             (g$syntax-error$8904$kwCBQ
                                               (car g$id*$10617$kwCBQ)
                                               '"duplicate "
                                               g$class$10615$kwCBQ)
                                             (g$find$10616$kwCBQ
                                               (cdr g$id*$10617$kwCBQ)
                                               (cons
                                                 (car g$id*$10617$kwCBQ)
                                                 g$ok*$10618$kwCBQ)))
                                           (g$syntax-error$8904$kwCBQ
                                             (car g$id*$10617$kwCBQ)
                                             '"invalid "
                                             g$class$10615$kwCBQ)))))))
                           g$find$10616$kwCBQ)
                         g$id*$10613$kwCBQ
                         '()))))
                   (g$gen-clause$10564$kwCBQ
                     (case-lambda
                       ((g$x$10593$kwCBQ
                          g$keys$10594$kwCBQ
                          g$clauses$10595$kwCBQ
                          g$r$10596$kwCBQ
                          g$mr$10597$kwCBQ
                          g$pat$10598$kwCBQ
                          g$fender$10599$kwCBQ
                          g$expr$10600$kwCBQ)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8794$kwCBQ
                               g$pat$10598$kwCBQ
                               g$keys$10594$kwCBQ)))
                          (case-lambda
                            ((g$p$10603$kwCBQ g$pvars$10604$kwCBQ)
                             ((case-lambda
                                ((g$pvars$10605$kwCBQ g$p$10606$kwCBQ)
                                 (if (not (g$distinct-bound-ids?$8522$kwCBQ
                                            (g$map$5812$kwCBQ
                                              car
                                              g$pvars$10605$kwCBQ)))
                                   (g$invalid-ids-error$10563$kwCBQ
                                     (g$map$5812$kwCBQ car g$pvars$10605$kwCBQ)
                                     g$pat$10598$kwCBQ
                                     '"pattern variable")
                                   (if (not (g$for-all$5810$kwCBQ
                                              (case-lambda
                                                ((g$x$10607$kwCBQ)
                                                 (not (g$ellipsis?$8796$kwCBQ
                                                        (car g$x$10607$kwCBQ)))))
                                              g$pvars$10605$kwCBQ))
                                     (g$syntax-violation$8907$kwCBQ
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10598$kwCBQ)
                                     ((case-lambda
                                        ((g$y$10608$kwCBQ)
                                         ((case-lambda
                                            ((g$test$10609$kwCBQ)
                                             ((case-lambda
                                                ((g$conseq$10610$kwCBQ)
                                                 ((case-lambda
                                                    ((g$altern$10611$kwCBQ)
                                                     (list
                                                       (g$build-lambda$8442$kwCBQ
                                                         '#f
                                                         (list g$y$10608$kwCBQ)
                                                         (list
                                                           'if
                                                           g$test$10609$kwCBQ
                                                           g$conseq$10610$kwCBQ
                                                           g$altern$10611$kwCBQ))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10593$kwCBQ
                                                         (list
                                                           'quote
                                                           g$p$10606$kwCBQ)))))
                                                  (g$gen-syntax-case$10565$kwCBQ
                                                    g$x$10593$kwCBQ
                                                    g$keys$10594$kwCBQ
                                                    g$clauses$10595$kwCBQ
                                                    g$r$10596$kwCBQ
                                                    g$mr$10597$kwCBQ))))
                                              (g$build-dispatch-call$10562$kwCBQ
                                                g$pvars$10605$kwCBQ
                                                g$expr$10600$kwCBQ
                                                g$y$10608$kwCBQ
                                                g$r$10596$kwCBQ
                                                g$mr$10597$kwCBQ))))
                                          (if (eq? g$fender$10599$kwCBQ '#t)
                                            g$y$10608$kwCBQ
                                            ((case-lambda
                                               ((g$call$10612$kwCBQ)
                                                (list
                                                  'if
                                                  g$y$10608$kwCBQ
                                                  g$call$10612$kwCBQ
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10562$kwCBQ
                                               g$pvars$10605$kwCBQ
                                               g$fender$10599$kwCBQ
                                               g$y$10608$kwCBQ
                                               g$r$10596$kwCBQ
                                               g$mr$10597$kwCBQ))))))
                                      (g$gen-lexical$8455$kwCBQ 'tmp))))))
                              g$pvars$10604$kwCBQ
                              g$p$10603$kwCBQ)))))))
                   (g$gen-syntax-case$10565$kwCBQ
                     (case-lambda
                       ((g$x$10576$kwCBQ
                          g$keys$10577$kwCBQ
                          g$clauses$10578$kwCBQ
                          g$r$10579$kwCBQ
                          g$mr$10580$kwCBQ)
                        (if (null? g$clauses$10578$kwCBQ)
                          (list '(primitive syntax-error) g$x$10576$kwCBQ)
                          ((case-lambda
                             ((g$t$10581$kwCBQ)
                              ((case-lambda
                                 ((g$ls/false$10582$kwCBQ)
                                  (if g$ls/false$10582$kwCBQ
                                    (apply
                                      (case-lambda
                                        ((g$pat$10583$kwCBQ g$expr$10584$kwCBQ)
                                         (if (if (g$id?$8516$kwCBQ
                                                   g$pat$10583$kwCBQ)
                                               (if (not (g$bound-id-member?$8523$kwCBQ
                                                          g$pat$10583$kwCBQ
                                                          g$keys$10577$kwCBQ))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8796$kwCBQ
                                                          g$pat$10583$kwCBQ)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8520$kwCBQ
                                                 g$pat$10583$kwCBQ
                                                 (g$scheme-stx$8738$kwCBQ '_))
                                             (g$chi-expr$8813$kwCBQ
                                               g$expr$10584$kwCBQ
                                               g$r$10579$kwCBQ
                                               g$mr$10580$kwCBQ)
                                             ((case-lambda
                                                ((g$lab$10585$kwCBQ
                                                   g$lex$10586$kwCBQ)
                                                 ((case-lambda
                                                    ((g$body$10587$kwCBQ)
                                                     (list
                                                       (g$build-lambda$8442$kwCBQ
                                                         '#f
                                                         (list
                                                           g$lex$10586$kwCBQ)
                                                         g$body$10587$kwCBQ)
                                                       g$x$10576$kwCBQ)))
                                                  (g$chi-expr$8813$kwCBQ
                                                    (g$add-subst$8506$kwCBQ
                                                      (g$make-full-rib$8484$kwCBQ
                                                        (list g$pat$10583$kwCBQ)
                                                        (list
                                                          g$lab$10585$kwCBQ))
                                                      g$expr$10584$kwCBQ)
                                                    (cons
                                                      (cons
                                                        g$lab$10585$kwCBQ
                                                        (g$make-binding$8532$kwCBQ
                                                          'syntax
                                                          (cons
                                                            g$lex$10586$kwCBQ
                                                            '0)))
                                                      g$r$10579$kwCBQ)
                                                    g$mr$10580$kwCBQ))))
                                              (g$gen-label$8457$kwCBQ
                                                g$pat$10583$kwCBQ)
                                              (g$gen-lexical$8455$kwCBQ
                                                g$pat$10583$kwCBQ)))
                                           (g$gen-clause$10564$kwCBQ
                                             g$x$10576$kwCBQ
                                             g$keys$10577$kwCBQ
                                             (cdr g$clauses$10578$kwCBQ)
                                             g$r$10579$kwCBQ
                                             g$mr$10580$kwCBQ
                                             g$pat$10583$kwCBQ
                                             '#t
                                             g$expr$10584$kwCBQ))))
                                      g$ls/false$10582$kwCBQ)
                                    ((case-lambda
                                       ((g$t$10588$kwCBQ)
                                        ((case-lambda
                                           ((g$ls/false$10589$kwCBQ)
                                            (if g$ls/false$10589$kwCBQ
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10590$kwCBQ
                                                     g$fender$10591$kwCBQ
                                                     g$expr$10592$kwCBQ)
                                                   (g$gen-clause$10564$kwCBQ
                                                     g$x$10576$kwCBQ
                                                     g$keys$10577$kwCBQ
                                                     (cdr g$clauses$10578$kwCBQ)
                                                     g$r$10579$kwCBQ
                                                     g$mr$10580$kwCBQ
                                                     g$pat$10590$kwCBQ
                                                     g$fender$10591$kwCBQ
                                                     g$expr$10592$kwCBQ)))
                                                g$ls/false$10589$kwCBQ)
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"invalid syntax"
                                                g$t$10588$kwCBQ))))
                                         (g$syntax-dispatch$8795$kwCBQ
                                           g$t$10588$kwCBQ
                                           '(any any any)))))
                                     g$t$10581$kwCBQ))))
                               (g$syntax-dispatch$8795$kwCBQ
                                 g$t$10581$kwCBQ
                                 '(any any)))))
                           (car g$clauses$10578$kwCBQ)))))))
           (case-lambda
             ((g$e$10566$kwCBQ g$r$10567$kwCBQ g$mr$10568$kwCBQ)
              ((case-lambda
                 ((g$t$10569$kwCBQ)
                  ((case-lambda
                     ((g$ls/false$10570$kwCBQ)
                      (if g$ls/false$10570$kwCBQ
                        (apply
                          (case-lambda
                            ((g$expr$10571$kwCBQ
                               g$keys$10572$kwCBQ
                               g$clauses$10573$kwCBQ)
                             (begin
                               (g$verify-literals$8798$kwCBQ
                                 g$keys$10572$kwCBQ
                                 g$e$10566$kwCBQ)
                               ((case-lambda
                                  ((g$x$10574$kwCBQ)
                                   ((case-lambda
                                      ((g$body$10575$kwCBQ)
                                       (list
                                         (g$build-lambda$8442$kwCBQ
                                           '#f
                                           (list g$x$10574$kwCBQ)
                                           g$body$10575$kwCBQ)
                                         (g$chi-expr$8813$kwCBQ
                                           g$expr$10571$kwCBQ
                                           g$r$10567$kwCBQ
                                           g$mr$10568$kwCBQ))))
                                    (g$gen-syntax-case$10565$kwCBQ
                                      g$x$10574$kwCBQ
                                      g$keys$10572$kwCBQ
                                      g$clauses$10573$kwCBQ
                                      g$r$10567$kwCBQ
                                      g$mr$10568$kwCBQ))))
                                (g$gen-lexical$8455$kwCBQ 'tmp)))))
                          g$ls/false$10570$kwCBQ)
                        (g$syntax-violation$8907$kwCBQ
                          '#f
                          '"invalid syntax"
                          g$t$10569$kwCBQ))))
                   (g$syntax-dispatch$8795$kwCBQ
                     g$t$10569$kwCBQ
                     '(_ any each-any . each-any)))))
               g$e$10566$kwCBQ))))))))
   (g$ellipsis-map$8800$kwCBQ
     g$ellipsis-map$12318$kwCBQ
     (case-lambda
       ((g$proc$10632$kwCBQ g$ls$10633$kwCBQ . g$ls*$10634$kwCBQ)
        (letrec* ((g$who$10635$kwCBQ '...))
          (begin
            (if (not (list? g$ls$10633$kwCBQ))
              (assertion-violation
                g$who$10635$kwCBQ
                '"not a list"
                g$ls$10633$kwCBQ)
              (void))
            (if (not (null? g$ls*$10634$kwCBQ))
              ((case-lambda
                 ((g$n$10636$kwCBQ)
                  (g$for-each$5813$kwCBQ
                    (case-lambda
                      ((g$x$10637$kwCBQ)
                       (begin
                         (if (not (list? g$x$10637$kwCBQ))
                           (assertion-violation
                             g$who$10635$kwCBQ
                             '"not a list"
                             g$x$10637$kwCBQ)
                           (void))
                         (if (not (= (length g$x$10637$kwCBQ) g$n$10636$kwCBQ))
                           (assertion-violation
                             g$who$10635$kwCBQ
                             '"length mismatch"
                             g$ls$10633$kwCBQ
                             g$x$10637$kwCBQ)
                           (void)))))
                    g$ls*$10634$kwCBQ)))
               (length g$ls$10633$kwCBQ))
              (void))
            (apply
              g$map$5812$kwCBQ
              g$proc$10632$kwCBQ
              g$ls$10633$kwCBQ
              g$ls*$10634$kwCBQ))))))
   (g$syntax-transformer$8801$kwCBQ
     g$syntax-transformer$12319$kwCBQ
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10638$kwCBQ
                     (case-lambda
                       ((g$src$10698$kwCBQ
                          g$e$10699$kwCBQ
                          g$r$10700$kwCBQ
                          g$maps$10701$kwCBQ
                          g$ellipsis?$10702$kwCBQ
                          g$vec?$10703$kwCBQ)
                        ((case-lambda
                           ((g$t$10704$kwCBQ)
                            ((case-lambda
                               ((g$ls/false$10705$kwCBQ)
                                (if (if g$ls/false$10705$kwCBQ
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10706$kwCBQ)
                                             (g$ellipsis?$10702$kwCBQ
                                               g$dots$10706$kwCBQ)))
                                          g$ls/false$10705$kwCBQ))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10707$kwCBQ)
                                       (g$syntax-violation$8907$kwCBQ
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10698$kwCBQ)))
                                    g$ls/false$10705$kwCBQ)
                                  ((case-lambda
                                     ((g$t$10708$kwCBQ)
                                      ((case-lambda
                                         ((g$ls/false$10709$kwCBQ)
                                          (if (if g$ls/false$10709$kwCBQ
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10710$kwCBQ)
                                                       (g$id?$8516$kwCBQ
                                                         g$id$10710$kwCBQ)))
                                                    g$ls/false$10709$kwCBQ))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10711$kwCBQ)
                                                 ((case-lambda
                                                    ((g$label$10712$kwCBQ)
                                                     ((case-lambda
                                                        ((g$b$10713$kwCBQ)
                                                         (if (eq? (g$binding-type$8533$kwCBQ
                                                                    g$b$10713$kwCBQ)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$10716$kwCBQ)
                                                                    (g$gen-ref$10639$kwCBQ
                                                                      g$src$10698$kwCBQ
                                                                      (car g$var.lev$10716$kwCBQ)
                                                                      (cdr g$var.lev$10716$kwCBQ)
                                                                      g$maps$10701$kwCBQ)))
                                                                 (g$binding-value$8534$kwCBQ
                                                                   g$b$10713$kwCBQ))))
                                                             (case-lambda
                                                               ((g$var$10717$kwCBQ
                                                                  g$maps$10718$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$maps$10719$kwCBQ
                                                                      g$var$10720$kwCBQ)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$10720$kwCBQ)
                                                                      g$maps$10719$kwCBQ)))
                                                                 g$maps$10718$kwCBQ
                                                                 g$var$10717$kwCBQ))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$10699$kwCBQ)
                                                             g$maps$10701$kwCBQ))))
                                                      (g$label->binding$8531$kwCBQ
                                                        g$label$10712$kwCBQ
                                                        g$r$10700$kwCBQ))))
                                                  (g$id->label$8529$kwCBQ
                                                    g$e$10699$kwCBQ))))
                                              g$ls/false$10709$kwCBQ)
                                            ((case-lambda
                                               ((g$t$10721$kwCBQ)
                                                ((case-lambda
                                                   ((g$ls/false$10722$kwCBQ)
                                                    (if (if g$ls/false$10722$kwCBQ
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10723$kwCBQ
                                                                   g$e$10724$kwCBQ)
                                                                 (g$ellipsis?$10702$kwCBQ
                                                                   g$dots$10723$kwCBQ)))
                                                              g$ls/false$10722$kwCBQ))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10725$kwCBQ
                                                             g$e$10726$kwCBQ)
                                                           (if g$vec?$10703$kwCBQ
                                                             (g$syntax-violation$8907$kwCBQ
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10698$kwCBQ)
                                                             (g$gen-syntax$10638$kwCBQ
                                                               g$src$10698$kwCBQ
                                                               g$e$10726$kwCBQ
                                                               g$r$10700$kwCBQ
                                                               g$maps$10701$kwCBQ
                                                               (case-lambda
                                                                 ((g$x$10727$kwCBQ)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10722$kwCBQ)
                                                      ((case-lambda
                                                         ((g$t$10728$kwCBQ)
                                                          ((case-lambda
                                                             ((g$ls/false$10729$kwCBQ)
                                                              (if (if g$ls/false$10729$kwCBQ
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10730$kwCBQ
                                                                             g$dots$10731$kwCBQ
                                                                             g$y$10732$kwCBQ)
                                                                           (g$ellipsis?$10702$kwCBQ
                                                                             g$dots$10731$kwCBQ)))
                                                                        g$ls/false$10729$kwCBQ))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10733$kwCBQ
                                                                       g$dots$10734$kwCBQ
                                                                       g$y$10735$kwCBQ)
                                                                     ((letrec ((g$f$10736$kwCBQ
                                                                                 (case-lambda
                                                                                   ((g$y$10737$kwCBQ
                                                                                      g$k$10738$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$t$10739$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10740$kwCBQ)
                                                                                            (if g$ls/false$10740$kwCBQ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10738$kwCBQ
                                                                                                     g$maps$10701$kwCBQ)))
                                                                                                g$ls/false$10740$kwCBQ)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10741$kwCBQ)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10742$kwCBQ)
                                                                                                      (if (if g$ls/false$10742$kwCBQ
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10743$kwCBQ
                                                                                                                     g$y$10744$kwCBQ)
                                                                                                                   (g$ellipsis?$10702$kwCBQ
                                                                                                                     g$dots$10743$kwCBQ)))
                                                                                                                g$ls/false$10742$kwCBQ))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10745$kwCBQ
                                                                                                               g$y$10746$kwCBQ)
                                                                                                             (g$f$10736$kwCBQ
                                                                                                               g$y$10746$kwCBQ
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10747$kwCBQ)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10738$kwCBQ
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10747$kwCBQ))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10750$kwCBQ
                                                                                                                         g$maps$10751$kwCBQ)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10752$kwCBQ
                                                                                                                             g$x$10753$kwCBQ)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10752$kwCBQ))
                                                                                                                             (g$syntax-violation$8907$kwCBQ
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10698$kwCBQ)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10641$kwCBQ
                                                                                                                                 g$x$10753$kwCBQ
                                                                                                                                 (car g$maps$10752$kwCBQ))
                                                                                                                               (cdr g$maps$10752$kwCBQ)))))
                                                                                                                        g$maps$10751$kwCBQ
                                                                                                                        g$x$10750$kwCBQ)))))))))
                                                                                                          g$ls/false$10742$kwCBQ)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10754$kwCBQ)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10755$kwCBQ)
                                                                                                                (if g$ls/false$10755$kwCBQ
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10638$kwCBQ
                                                                                                                              g$src$10698$kwCBQ
                                                                                                                              g$y$10737$kwCBQ
                                                                                                                              g$r$10700$kwCBQ
                                                                                                                              g$maps$10701$kwCBQ
                                                                                                                              g$ellipsis?$10702$kwCBQ
                                                                                                                              g$vec?$10703$kwCBQ)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10758$kwCBQ
                                                                                                                              g$maps$10759$kwCBQ)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10760$kwCBQ
                                                                                                                                  g$y$10761$kwCBQ)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10738$kwCBQ
                                                                                                                                       g$maps$10760$kwCBQ)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10764$kwCBQ
                                                                                                                                       g$maps$10765$kwCBQ)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10766$kwCBQ
                                                                                                                                           g$x$10767$kwCBQ)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10640$kwCBQ
                                                                                                                                             g$x$10767$kwCBQ
                                                                                                                                             g$y$10761$kwCBQ)
                                                                                                                                           g$maps$10766$kwCBQ)))
                                                                                                                                      g$maps$10765$kwCBQ
                                                                                                                                      g$x$10764$kwCBQ))))))
                                                                                                                             g$maps$10759$kwCBQ
                                                                                                                             g$y$10758$kwCBQ))))))
                                                                                                                    g$ls/false$10755$kwCBQ)
                                                                                                                  (g$syntax-violation$8907$kwCBQ
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10754$kwCBQ))))
                                                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                                                               g$t$10754$kwCBQ
                                                                                                               '_))))
                                                                                                         g$t$10741$kwCBQ))))
                                                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                                                     g$t$10741$kwCBQ
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10739$kwCBQ))))
                                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                                           g$t$10739$kwCBQ
                                                                                           '()))))
                                                                                     g$y$10737$kwCBQ)))))
                                                                        g$f$10736$kwCBQ)
                                                                      g$y$10735$kwCBQ
                                                                      (case-lambda
                                                                        ((g$maps$10768$kwCBQ)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10638$kwCBQ
                                                                                g$src$10698$kwCBQ
                                                                                g$x$10733$kwCBQ
                                                                                g$r$10700$kwCBQ
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10768$kwCBQ)
                                                                                g$ellipsis?$10702$kwCBQ
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10771$kwCBQ
                                                                                g$maps$10772$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$maps$10773$kwCBQ
                                                                                    g$x$10774$kwCBQ)
                                                                                  (if (null?
                                                                                        (car g$maps$10773$kwCBQ))
                                                                                    (g$syntax-violation$8907$kwCBQ
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10698$kwCBQ)
                                                                                    (values
                                                                                      (g$gen-map$10642$kwCBQ
                                                                                        g$x$10774$kwCBQ
                                                                                        (car g$maps$10773$kwCBQ))
                                                                                      (cdr g$maps$10773$kwCBQ)))))
                                                                               g$maps$10772$kwCBQ
                                                                               g$x$10771$kwCBQ)))))))))
                                                                  g$ls/false$10729$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$t$10775$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10776$kwCBQ)
                                                                        (if g$ls/false$10776$kwCBQ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10777$kwCBQ
                                                                                 g$y$10778$kwCBQ)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10638$kwCBQ
                                                                                      g$src$10698$kwCBQ
                                                                                      g$x$10777$kwCBQ
                                                                                      g$r$10700$kwCBQ
                                                                                      g$maps$10701$kwCBQ
                                                                                      g$ellipsis?$10702$kwCBQ
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10781$kwCBQ
                                                                                      g$maps$10782$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10783$kwCBQ
                                                                                          g$xnew$10784$kwCBQ)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10638$kwCBQ
                                                                                               g$src$10698$kwCBQ
                                                                                               g$y$10778$kwCBQ
                                                                                               g$r$10700$kwCBQ
                                                                                               g$maps$10783$kwCBQ
                                                                                               g$ellipsis?$10702$kwCBQ
                                                                                               g$vec?$10703$kwCBQ)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10787$kwCBQ
                                                                                               g$maps$10788$kwCBQ)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10789$kwCBQ
                                                                                                   g$ynew$10790$kwCBQ)
                                                                                                 (values
                                                                                                   (g$gen-cons$10643$kwCBQ
                                                                                                     g$e$10699$kwCBQ
                                                                                                     g$x$10777$kwCBQ
                                                                                                     g$y$10778$kwCBQ
                                                                                                     g$xnew$10784$kwCBQ
                                                                                                     g$ynew$10790$kwCBQ)
                                                                                                   g$maps$10789$kwCBQ)))
                                                                                              g$maps$10788$kwCBQ
                                                                                              g$ynew$10787$kwCBQ))))))
                                                                                     g$maps$10782$kwCBQ
                                                                                     g$xnew$10781$kwCBQ))))))
                                                                            g$ls/false$10776$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$t$10791$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10792$kwCBQ)
                                                                                  (if g$ls/false$10792$kwCBQ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10793$kwCBQ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10638$kwCBQ
                                                                                                g$src$10698$kwCBQ
                                                                                                g$ls$10793$kwCBQ
                                                                                                g$r$10700$kwCBQ
                                                                                                g$maps$10701$kwCBQ
                                                                                                g$ellipsis?$10702$kwCBQ
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10796$kwCBQ
                                                                                                g$maps$10797$kwCBQ)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10798$kwCBQ
                                                                                                    g$lsnew$10799$kwCBQ)
                                                                                                  (values
                                                                                                    (g$gen-vector$10644$kwCBQ
                                                                                                      g$e$10699$kwCBQ
                                                                                                      g$ls$10793$kwCBQ
                                                                                                      g$lsnew$10799$kwCBQ)
                                                                                                    g$maps$10798$kwCBQ)))
                                                                                               g$maps$10797$kwCBQ
                                                                                               g$lsnew$10796$kwCBQ))))))
                                                                                      g$ls/false$10792$kwCBQ)
                                                                                    ((case-lambda
                                                                                       ((g$t$10800$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10801$kwCBQ)
                                                                                            (if g$ls/false$10801$kwCBQ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10699$kwCBQ)
                                                                                                     g$maps$10701$kwCBQ)))
                                                                                                g$ls/false$10801$kwCBQ)
                                                                                              (g$syntax-violation$8907$kwCBQ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10800$kwCBQ))))
                                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                                           g$t$10800$kwCBQ
                                                                                           '_))))
                                                                                     g$t$10791$kwCBQ))))
                                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                                 g$t$10791$kwCBQ
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10775$kwCBQ))))
                                                                     (g$syntax-dispatch$8795$kwCBQ
                                                                       g$t$10775$kwCBQ
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10728$kwCBQ))))
                                                           (g$syntax-dispatch$8795$kwCBQ
                                                             g$t$10728$kwCBQ
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10721$kwCBQ))))
                                                 (g$syntax-dispatch$8795$kwCBQ
                                                   g$t$10721$kwCBQ
                                                   '(any any)))))
                                             g$t$10708$kwCBQ))))
                                       (g$syntax-dispatch$8795$kwCBQ
                                         g$t$10708$kwCBQ
                                         'any))))
                                   g$t$10704$kwCBQ))))
                             (g$syntax-dispatch$8795$kwCBQ
                               g$t$10704$kwCBQ
                               'any))))
                         g$e$10699$kwCBQ))))
                   (g$gen-ref$10639$kwCBQ
                     (case-lambda
                       ((g$src$10685$kwCBQ
                          g$var$10686$kwCBQ
                          g$level$10687$kwCBQ
                          g$maps$10688$kwCBQ)
                        (if (= g$level$10687$kwCBQ '0)
                          (values g$var$10686$kwCBQ g$maps$10688$kwCBQ)
                          (if (null? g$maps$10688$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10685$kwCBQ)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10639$kwCBQ
                                   g$src$10685$kwCBQ
                                   g$var$10686$kwCBQ
                                   (- g$level$10687$kwCBQ '1)
                                   (cdr g$maps$10688$kwCBQ))))
                              (case-lambda
                                ((g$outer-var$10691$kwCBQ
                                   g$outer-maps$10692$kwCBQ)
                                 ((case-lambda
                                    ((g$outer-maps$10693$kwCBQ
                                       g$outer-var$10694$kwCBQ)
                                     ((case-lambda
                                        ((g$t$10695$kwCBQ)
                                         (if g$t$10695$kwCBQ
                                           ((case-lambda
                                              ((g$b$10696$kwCBQ)
                                               (values
                                                 (cdr g$b$10696$kwCBQ)
                                                 g$maps$10688$kwCBQ)))
                                            g$t$10695$kwCBQ)
                                           ((case-lambda
                                              ((g$inner-var$10697$kwCBQ)
                                               (values
                                                 g$inner-var$10697$kwCBQ
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10694$kwCBQ
                                                       g$inner-var$10697$kwCBQ)
                                                     (car g$maps$10688$kwCBQ))
                                                   g$outer-maps$10693$kwCBQ))))
                                            (g$gen-lexical$8455$kwCBQ 'tmp)))))
                                      (g$assq$5800$kwCBQ
                                        g$outer-var$10694$kwCBQ
                                        (car g$maps$10688$kwCBQ)))))
                                  g$outer-maps$10692$kwCBQ
                                  g$outer-var$10691$kwCBQ)))))))))
                   (g$gen-append$10640$kwCBQ
                     (case-lambda
                       ((g$x$10683$kwCBQ g$y$10684$kwCBQ)
                        (if (equal? g$y$10684$kwCBQ ''())
                          g$x$10683$kwCBQ
                          (list 'append g$x$10683$kwCBQ g$y$10684$kwCBQ)))))
                   (g$gen-mappend$10641$kwCBQ
                     (case-lambda
                       ((g$e$10681$kwCBQ g$map-env$10682$kwCBQ)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10642$kwCBQ
                            g$e$10681$kwCBQ
                            g$map-env$10682$kwCBQ)))))
                   (g$gen-map$10642$kwCBQ
                     (case-lambda
                       ((g$e$10672$kwCBQ g$map-env$10673$kwCBQ)
                        ((case-lambda
                           ((g$formals$10674$kwCBQ g$actuals$10675$kwCBQ)
                            (if (eq? (car g$e$10672$kwCBQ) 'ref)
                              (car g$actuals$10675$kwCBQ)
                              (if (g$for-all$5810$kwCBQ
                                    (case-lambda
                                      ((g$x$10676$kwCBQ)
                                       (if (eq? (car g$x$10676$kwCBQ) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5804$kwCBQ
                                             (g$cadr$6038$kwCBQ g$x$10676$kwCBQ)
                                             g$formals$10674$kwCBQ))
                                         '#f)))
                                    (cdr g$e$10672$kwCBQ))
                                ((case-lambda
                                   ((g$args$10677$kwCBQ)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10672$kwCBQ))
                                        g$args$10677$kwCBQ))))
                                 (g$map$5812$kwCBQ
                                   ((case-lambda
                                      ((g$r$10678$kwCBQ)
                                       (case-lambda
                                         ((g$x$10679$kwCBQ)
                                          (cdr (g$assq$5800$kwCBQ
                                                 (g$cadr$6038$kwCBQ
                                                   g$x$10679$kwCBQ)
                                                 g$r$10678$kwCBQ))))))
                                    (g$map$5812$kwCBQ
                                      cons
                                      g$formals$10674$kwCBQ
                                      g$actuals$10675$kwCBQ))
                                   (cdr g$e$10672$kwCBQ)))
                                (g$cons*$5814$kwCBQ
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10674$kwCBQ
                                    g$e$10672$kwCBQ)
                                  g$actuals$10675$kwCBQ)))))
                         (g$map$5812$kwCBQ cdr g$map-env$10673$kwCBQ)
                         (g$map$5812$kwCBQ
                           (case-lambda
                             ((g$x$10680$kwCBQ)
                              (list 'ref (car g$x$10680$kwCBQ))))
                           g$map-env$10673$kwCBQ)))))
                   (g$gen-cons$10643$kwCBQ
                     (case-lambda
                       ((g$e$10664$kwCBQ
                          g$x$10665$kwCBQ
                          g$y$10666$kwCBQ
                          g$xnew$10667$kwCBQ
                          g$ynew$10668$kwCBQ)
                        ((case-lambda
                           ((g$t$10669$kwCBQ)
                            (if (g$memv$5805$kwCBQ g$t$10669$kwCBQ '(quote))
                              (if (eq? (car g$xnew$10667$kwCBQ) 'quote)
                                ((case-lambda
                                   ((g$xnew$10670$kwCBQ g$ynew$10671$kwCBQ)
                                    (if (if (eq? g$xnew$10670$kwCBQ
                                                 g$x$10665$kwCBQ)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10671$kwCBQ
                                                 g$y$10666$kwCBQ))
                                          '#f)
                                      (list 'quote g$e$10664$kwCBQ)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10670$kwCBQ
                                          g$ynew$10671$kwCBQ)))))
                                 (g$cadr$6038$kwCBQ g$xnew$10667$kwCBQ)
                                 (g$cadr$6038$kwCBQ g$ynew$10668$kwCBQ))
                                (if (null?
                                      (g$cadr$6038$kwCBQ g$ynew$10668$kwCBQ))
                                  (list 'list g$xnew$10667$kwCBQ)
                                  (list
                                    'cons
                                    g$xnew$10667$kwCBQ
                                    g$ynew$10668$kwCBQ)))
                              (if (g$memv$5805$kwCBQ g$t$10669$kwCBQ '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10667$kwCBQ
                                    (cdr g$ynew$10668$kwCBQ)))
                                (list
                                  'cons
                                  g$xnew$10667$kwCBQ
                                  g$ynew$10668$kwCBQ)))))
                         (car g$ynew$10668$kwCBQ)))))
                   (g$gen-vector$10644$kwCBQ
                     (case-lambda
                       ((g$e$10661$kwCBQ g$ls$10662$kwCBQ g$lsnew$10663$kwCBQ)
                        (if (eq? (car g$lsnew$10663$kwCBQ) 'quote)
                          (if (eq? (g$cadr$6038$kwCBQ g$lsnew$10663$kwCBQ)
                                   g$ls$10662$kwCBQ)
                            (list 'quote g$e$10661$kwCBQ)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$6038$kwCBQ g$lsnew$10663$kwCBQ))))
                          (if (eq? (car g$lsnew$10663$kwCBQ) 'list)
                            (cons 'vector (cdr g$lsnew$10663$kwCBQ))
                            (list 'list->vector g$lsnew$10663$kwCBQ))))))
                   (g$regen$10645$kwCBQ
                     (case-lambda
                       ((g$x$10658$kwCBQ)
                        ((case-lambda
                           ((g$t$10659$kwCBQ)
                            (if (g$memv$5805$kwCBQ g$t$10659$kwCBQ '(ref))
                              (g$cadr$6038$kwCBQ g$x$10658$kwCBQ)
                              (if (g$memv$5805$kwCBQ
                                    g$t$10659$kwCBQ
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$6038$kwCBQ g$x$10658$kwCBQ))
                                (if (g$memv$5805$kwCBQ g$t$10659$kwCBQ '(quote))
                                  (list
                                    'quote
                                    (g$cadr$6038$kwCBQ g$x$10658$kwCBQ))
                                  (if (g$memv$5805$kwCBQ
                                        g$t$10659$kwCBQ
                                        '(lambda))
                                    (g$build-lambda$8442$kwCBQ
                                      '#f
                                      (g$cadr$6038$kwCBQ g$x$10658$kwCBQ)
                                      (g$regen$10645$kwCBQ
                                        (g$caddr$6044$kwCBQ g$x$10658$kwCBQ)))
                                    (if (g$memv$5805$kwCBQ
                                          g$t$10659$kwCBQ
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10660$kwCBQ)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10660$kwCBQ)))
                                       (g$map$5812$kwCBQ
                                         g$regen$10645$kwCBQ
                                         (cdr g$x$10658$kwCBQ)))
                                      (cons
                                        (list 'primitive (car g$x$10658$kwCBQ))
                                        (g$map$5812$kwCBQ
                                          g$regen$10645$kwCBQ
                                          (cdr g$x$10658$kwCBQ))))))))))
                         (car g$x$10658$kwCBQ))))))
           (case-lambda
             ((g$e$10646$kwCBQ g$r$10647$kwCBQ g$mr$10648$kwCBQ)
              ((case-lambda
                 ((g$t$10649$kwCBQ)
                  ((case-lambda
                     ((g$ls/false$10650$kwCBQ)
                      (if g$ls/false$10650$kwCBQ
                        (apply
                          (case-lambda
                            ((g$x$10651$kwCBQ)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10638$kwCBQ
                                    g$e$10646$kwCBQ
                                    g$x$10651$kwCBQ
                                    g$r$10647$kwCBQ
                                    '()
                                    g$ellipsis?$8796$kwCBQ
                                    '#f)))
                               (case-lambda
                                 ((g$e$10654$kwCBQ g$maps$10655$kwCBQ)
                                  ((case-lambda
                                     ((g$maps$10656$kwCBQ g$e$10657$kwCBQ)
                                      (g$regen$10645$kwCBQ g$e$10657$kwCBQ)))
                                   g$maps$10655$kwCBQ
                                   g$e$10654$kwCBQ))))))
                          g$ls/false$10650$kwCBQ)
                        (g$syntax-violation$8907$kwCBQ
                          '#f
                          '"invalid syntax"
                          g$t$10649$kwCBQ))))
                   (g$syntax-dispatch$8795$kwCBQ g$t$10649$kwCBQ '(_ any)))))
               g$e$10646$kwCBQ))))))))
   (g$core-macro-transformer$8802$kwCBQ
     g$core-macro-transformer$12320$kwCBQ
     (case-lambda
       ((g$name$10802$kwCBQ)
        ((case-lambda
           ((g$t$10803$kwCBQ)
            (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(quote))
              g$quote-transformer$8755$kwCBQ
              (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(lambda))
                g$lambda-transformer$8757$kwCBQ
                (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(case-lambda))
                  g$case-lambda-transformer$8756$kwCBQ
                  (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(letrec))
                    g$letrec-transformer$8745$kwCBQ
                    (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(letrec*))
                      g$letrec*-transformer$8746$kwCBQ
                      (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(if))
                        g$if-transformer$8753$kwCBQ
                        (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(foreign-call))
                          g$foreign-call-transformer$8793$kwCBQ
                          (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(syntax-case))
                            g$syntax-case-transformer$8799$kwCBQ
                            (if (g$memv$5805$kwCBQ g$t$10803$kwCBQ '(syntax))
                              g$syntax-transformer$8801$kwCBQ
                              (if (g$memv$5805$kwCBQ
                                    g$t$10803$kwCBQ
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8748$kwCBQ
                                (if (g$memv$5805$kwCBQ
                                      g$t$10803$kwCBQ
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8749$kwCBQ
                                  (if (g$memv$5805$kwCBQ
                                        g$t$10803$kwCBQ
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8750$kwCBQ
                                    (if (g$memv$5805$kwCBQ
                                          g$t$10803$kwCBQ
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8747$kwCBQ
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10802$kwCBQ))))))))))))))))
         g$name$10802$kwCBQ))))
   (g$file-options-macro$8803$kwCBQ
     g$file-options-macro$12321$kwCBQ
     (case-lambda
       ((g$x$10804$kwCBQ)
        (letrec* ((g$valid-option?$10805$kwCBQ
                    (case-lambda
                      ((g$x$10810$kwCBQ)
                       (if (g$id?$8516$kwCBQ g$x$10810$kwCBQ)
                         (begin
                           '#f
                           (g$memq$5804$kwCBQ
                             (g$id->sym$8517$kwCBQ g$x$10810$kwCBQ)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10806$kwCBQ)
              ((case-lambda
                 ((g$ls/false$10807$kwCBQ)
                  (if (if g$ls/false$10807$kwCBQ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10808$kwCBQ)
                               (if (g$for-all$5810$kwCBQ
                                     g$valid-option?$10805$kwCBQ
                                     g$opt*$10808$kwCBQ)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7780$kwCBQ
                                     (g$map$5812$kwCBQ
                                       g$id->sym$8517$kwCBQ
                                       g$opt*$10808$kwCBQ)))
                                 '#f)))
                            g$ls/false$10807$kwCBQ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10809$kwCBQ)
                         (g$bless$8758$kwCBQ
                           (list
                             'quote
                             (g$file-options-spec$7780$kwCBQ
                               (g$map$5812$kwCBQ
                                 g$id->sym$8517$kwCBQ
                                 g$opt*$10809$kwCBQ))))))
                      g$ls/false$10807$kwCBQ)
                    (g$syntax-violation$8907$kwCBQ
                      '#f
                      '"invalid syntax"
                      g$t$10806$kwCBQ))))
               (g$syntax-dispatch$8795$kwCBQ g$t$10806$kwCBQ '(_ . each-any)))))
           g$x$10804$kwCBQ)))))
   (g$symbol-macro$8804$kwCBQ
     g$symbol-macro$12322$kwCBQ
     (case-lambda
       ((g$x$10811$kwCBQ g$set$10812$kwCBQ)
        ((case-lambda
           ((g$t$10813$kwCBQ)
            ((case-lambda
               ((g$ls/false$10814$kwCBQ)
                (if (if g$ls/false$10814$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10815$kwCBQ)
                             (if (g$id?$8516$kwCBQ g$name$10815$kwCBQ)
                               (begin
                                 '#f
                                 (g$memq$5804$kwCBQ
                                   (g$id->sym$8517$kwCBQ g$name$10815$kwCBQ)
                                   g$set$10812$kwCBQ))
                               '#f)))
                          g$ls/false$10814$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10816$kwCBQ)
                       (g$bless$8758$kwCBQ (list 'quote g$name$10816$kwCBQ))))
                    g$ls/false$10814$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$10813$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$10813$kwCBQ '(_ any)))))
         g$x$10811$kwCBQ))))
   (g$macro-transformer$8805$kwCBQ
     g$macro-transformer$12323$kwCBQ
     (case-lambda
       ((g$x$10817$kwCBQ)
        (if (procedure? g$x$10817$kwCBQ)
          g$x$10817$kwCBQ
          (if (symbol? g$x$10817$kwCBQ)
            ((case-lambda
               ((g$t$10818$kwCBQ)
                (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(define-record-type))
                  g$define-record-type-macro$8789$kwCBQ
                  (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(define-struct))
                    g$define-struct-macro$8788$kwCBQ
                    (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(include))
                      g$include-macro$8783$kwCBQ
                      (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(cond))
                        g$cond-macro$8781$kwCBQ
                        (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(let))
                          g$let-macro$8761$kwCBQ
                          (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(do))
                            g$do-macro$8777$kwCBQ
                            (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(or))
                              g$or-macro$8779$kwCBQ
                              (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(and))
                                g$and-macro$8780$kwCBQ
                                (if (g$memv$5805$kwCBQ g$t$10818$kwCBQ '(let*))
                                  g$let*-macro$8778$kwCBQ
                                  (if (g$memv$5805$kwCBQ
                                        g$t$10818$kwCBQ
                                        '(let-values))
                                    g$let-values-macro$8762$kwCBQ
                                    (if (g$memv$5805$kwCBQ
                                          g$t$10818$kwCBQ
                                          '(let*-values))
                                      g$let*-values-macro$8763$kwCBQ
                                      (if (g$memv$5805$kwCBQ
                                            g$t$10818$kwCBQ
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8785$kwCBQ
                                        (if (g$memv$5805$kwCBQ
                                              g$t$10818$kwCBQ
                                              '(quasiquote))
                                          g$quasiquote-macro$8786$kwCBQ
                                          (if (g$memv$5805$kwCBQ
                                                g$t$10818$kwCBQ
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8787$kwCBQ
                                            (if (g$memv$5805$kwCBQ
                                                  g$t$10818$kwCBQ
                                                  '(with-syntax))
                                              g$with-syntax-macro$8759$kwCBQ
                                              (if (g$memv$5805$kwCBQ
                                                    g$t$10818$kwCBQ
                                                    '(when))
                                                g$when-macro$8751$kwCBQ
                                                (if (g$memv$5805$kwCBQ
                                                      g$t$10818$kwCBQ
                                                      '(unless))
                                                  g$unless-macro$8752$kwCBQ
                                                  (if (g$memv$5805$kwCBQ
                                                        g$t$10818$kwCBQ
                                                        '(case))
                                                    g$case-macro$8754$kwCBQ
                                                    (if (g$memv$5805$kwCBQ
                                                          g$t$10818$kwCBQ
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8776$kwCBQ
                                                      (if (g$memv$5805$kwCBQ
                                                            g$t$10818$kwCBQ
                                                            '(time))
                                                        g$time-macro$8772$kwCBQ
                                                        (if (g$memv$5805$kwCBQ
                                                              g$t$10818$kwCBQ
                                                              '(delay))
                                                          g$delay-macro$8773$kwCBQ
                                                          (if (g$memv$5805$kwCBQ
                                                                g$t$10818$kwCBQ
                                                                '(assert))
                                                            g$assert-macro$8774$kwCBQ
                                                            (if (g$memv$5805$kwCBQ
                                                                  g$t$10818$kwCBQ
                                                                  '(endianness))
                                                              g$endianness-macro$8775$kwCBQ
                                                              (if (g$memv$5805$kwCBQ
                                                                    g$t$10818$kwCBQ
                                                                    '(guard))
                                                                g$guard-macro$8770$kwCBQ
                                                                (if (g$memv$5805$kwCBQ
                                                                      g$t$10818$kwCBQ
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8771$kwCBQ
                                                                  (if (g$memv$5805$kwCBQ
                                                                        g$t$10818$kwCBQ
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8764$kwCBQ
                                                                    (if (g$memv$5805$kwCBQ
                                                                          g$t$10818$kwCBQ
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8765$kwCBQ
                                                                      (if (g$memv$5805$kwCBQ
                                                                            g$t$10818$kwCBQ
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8766$kwCBQ
                                                                        (if (g$memv$5805$kwCBQ
                                                                              g$t$10818$kwCBQ
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8768$kwCBQ
                                                                          (if (g$memv$5805$kwCBQ
                                                                                g$t$10818$kwCBQ
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8769$kwCBQ
                                                                            (if (g$memv$5805$kwCBQ
                                                                                  g$t$10818$kwCBQ
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8790$kwCBQ
                                                                              (if (g$memv$5805$kwCBQ
                                                                                    g$t$10818$kwCBQ
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8792$kwCBQ
                                                                                (if (g$memv$5805$kwCBQ
                                                                                      g$t$10818$kwCBQ
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8784$kwCBQ
                                                                                  (if (g$memv$5805$kwCBQ
                                                                                        g$t$10818$kwCBQ
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10819$kwCBQ)
                                                                                       (g$symbol-macro$8804$kwCBQ
                                                                                         g$x$10819$kwCBQ
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5805$kwCBQ
                                                                                          g$t$10818$kwCBQ
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10820$kwCBQ)
                                                                                         (g$symbol-macro$8804$kwCBQ
                                                                                           g$x$10820$kwCBQ
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5805$kwCBQ
                                                                                            g$t$10818$kwCBQ
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10821$kwCBQ)
                                                                                           (g$symbol-macro$8804$kwCBQ
                                                                                             g$x$10821$kwCBQ
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5805$kwCBQ
                                                                                              g$t$10818$kwCBQ
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8803$kwCBQ
                                                                                          (if (g$memv$5805$kwCBQ
                                                                                                g$t$10818$kwCBQ
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8791$kwCBQ
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10817$kwCBQ)))))))))))))))))))))))))))))))))))))))))
             g$x$10817$kwCBQ)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10817$kwCBQ))))))
   (g$local-macro-transformer$8806$kwCBQ
     g$local-macro-transformer$12324$kwCBQ
     (case-lambda ((g$x$10822$kwCBQ) (car g$x$10822$kwCBQ))))
   (g$do-macro-call$8807$kwCBQ
     g$do-macro-call$12325$kwCBQ
     (case-lambda
       ((g$transformer$10823$kwCBQ g$expr$10824$kwCBQ g$r$10825$kwCBQ)
        (letrec* ((g$return$10826$kwCBQ
                    (case-lambda
                      ((g$x$10834$kwCBQ)
                       (begin
                         ((letrec ((g$f$10835$kwCBQ
                                     (case-lambda
                                       ((g$x$10836$kwCBQ)
                                        (if (not (g$stx?$8488$kwCBQ
                                                   g$x$10836$kwCBQ))
                                          (if (pair? g$x$10836$kwCBQ)
                                            (begin
                                              (g$f$10835$kwCBQ
                                                (car g$x$10836$kwCBQ))
                                              (g$f$10835$kwCBQ
                                                (cdr g$x$10836$kwCBQ)))
                                            (if (vector? g$x$10836$kwCBQ)
                                              (g$vector-for-each$6090$kwCBQ
                                                g$f$10835$kwCBQ
                                                g$x$10836$kwCBQ)
                                              (if (symbol? g$x$10836$kwCBQ)
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$10824$kwCBQ
                                                  g$x$10836$kwCBQ)
                                                (void))))
                                          (void))))))
                            g$f$10835$kwCBQ)
                          g$x$10834$kwCBQ)
                         (g$add-mark$8505$kwCBQ
                           (g$gen-mark$8500$kwCBQ)
                           g$x$10834$kwCBQ
                           g$expr$10824$kwCBQ))))))
          ((case-lambda
             ((g$x$10827$kwCBQ)
              (if (procedure? g$x$10827$kwCBQ)
                (g$return$10826$kwCBQ
                  (g$x$10827$kwCBQ
                    (case-lambda
                      ((g$id$10828$kwCBQ)
                       (begin
                         (if (not (g$id?$8516$kwCBQ g$id$10828$kwCBQ))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$10828$kwCBQ)
                           (void))
                         ((case-lambda
                            ((g$label$10829$kwCBQ)
                             ((case-lambda
                                ((g$binding$10830$kwCBQ)
                                 ((case-lambda
                                    ((g$t$10831$kwCBQ)
                                     (if (g$memv$5805$kwCBQ
                                           g$t$10831$kwCBQ
                                           '(local-ctv))
                                       (g$cadr$6038$kwCBQ g$binding$10830$kwCBQ)
                                       (if (g$memv$5805$kwCBQ
                                             g$t$10831$kwCBQ
                                             '(global-ctv))
                                         ((case-lambda
                                            ((g$lib$10832$kwCBQ
                                               g$loc$10833$kwCBQ)
                                             (begin
                                               (g$visit-library$8327$kwCBQ
                                                 g$lib$10832$kwCBQ)
                                               (symbol-value
                                                 g$loc$10833$kwCBQ))))
                                          (g$cadr$6038$kwCBQ
                                            g$binding$10830$kwCBQ)
                                          (g$cddr$6040$kwCBQ
                                            g$binding$10830$kwCBQ))
                                         '#f))))
                                  (car g$binding$10830$kwCBQ))))
                              (g$label->binding$8531$kwCBQ
                                g$label$10829$kwCBQ
                                g$r$10825$kwCBQ))))
                          (g$id->label$8529$kwCBQ g$id$10828$kwCBQ)))))))
                (g$return$10826$kwCBQ g$x$10827$kwCBQ))))
           (g$transformer$10823$kwCBQ
             (g$add-mark$8505$kwCBQ
               g$anti-mark$8501$kwCBQ
               g$expr$10824$kwCBQ
               '#f)))))))
   (g$chi-macro$8808$kwCBQ
     g$chi-macro$12326$kwCBQ
     (case-lambda
       ((g$p$10837$kwCBQ g$e$10838$kwCBQ g$r$10839$kwCBQ)
        (g$do-macro-call$8807$kwCBQ
          (g$macro-transformer$8805$kwCBQ g$p$10837$kwCBQ)
          g$e$10838$kwCBQ
          g$r$10839$kwCBQ))))
   (g$chi-local-macro$8809$kwCBQ
     g$chi-local-macro$12327$kwCBQ
     (case-lambda
       ((g$p$10840$kwCBQ g$e$10841$kwCBQ g$r$10842$kwCBQ)
        (g$do-macro-call$8807$kwCBQ
          (g$local-macro-transformer$8806$kwCBQ g$p$10840$kwCBQ)
          g$e$10841$kwCBQ
          g$r$10842$kwCBQ))))
   (g$chi-global-macro$8810$kwCBQ
     g$chi-global-macro$12328$kwCBQ
     (case-lambda
       ((g$p$10843$kwCBQ g$e$10844$kwCBQ g$r$10845$kwCBQ)
        ((case-lambda
           ((g$lib$10846$kwCBQ g$loc$10847$kwCBQ)
            (begin
              (g$visit-library$8327$kwCBQ g$lib$10846$kwCBQ)
              ((case-lambda
                 ((g$x$10848$kwCBQ)
                  ((case-lambda
                     ((g$transformer$10849$kwCBQ)
                      (g$do-macro-call$8807$kwCBQ
                        g$transformer$10849$kwCBQ
                        g$e$10844$kwCBQ
                        g$r$10845$kwCBQ)))
                   (if (procedure? g$x$10848$kwCBQ)
                     g$x$10848$kwCBQ
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10848$kwCBQ)))))
               (symbol-value g$loc$10847$kwCBQ)))))
         (car g$p$10843$kwCBQ)
         (cdr g$p$10843$kwCBQ)))))
   (g$chi-expr*$8811$kwCBQ
     g$chi-expr*$12329$kwCBQ
     (case-lambda
       ((g$e*$10850$kwCBQ g$r$10851$kwCBQ g$mr$10852$kwCBQ)
        (if (null? g$e*$10850$kwCBQ)
          '()
          ((case-lambda
             ((g$e$10853$kwCBQ)
              (cons
                g$e$10853$kwCBQ
                (g$chi-expr*$8811$kwCBQ
                  (cdr g$e*$10850$kwCBQ)
                  g$r$10851$kwCBQ
                  g$mr$10852$kwCBQ))))
           (g$chi-expr$8813$kwCBQ
             (car g$e*$10850$kwCBQ)
             g$r$10851$kwCBQ
             g$mr$10852$kwCBQ))))))
   (g$chi-application$8812$kwCBQ
     g$chi-application$12330$kwCBQ
     (case-lambda
       ((g$e$10854$kwCBQ g$r$10855$kwCBQ g$mr$10856$kwCBQ)
        ((case-lambda
           ((g$t$10857$kwCBQ)
            ((case-lambda
               ((g$ls/false$10858$kwCBQ)
                (if g$ls/false$10858$kwCBQ
                  (apply
                    (case-lambda
                      ((g$rator$10859$kwCBQ g$rands$10860$kwCBQ)
                       ((case-lambda
                          ((g$rator$10861$kwCBQ)
                           (cons
                             g$rator$10861$kwCBQ
                             (g$chi-expr*$8811$kwCBQ
                               g$rands$10860$kwCBQ
                               g$r$10855$kwCBQ
                               g$mr$10856$kwCBQ))))
                        (g$chi-expr$8813$kwCBQ
                          g$rator$10859$kwCBQ
                          g$r$10855$kwCBQ
                          g$mr$10856$kwCBQ))))
                    g$ls/false$10858$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$10857$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$10857$kwCBQ '(any . each-any)))))
         g$e$10854$kwCBQ))))
   (g$chi-expr$8813$kwCBQ
     g$chi-expr$12331$kwCBQ
     (case-lambda
       ((g$e$10862$kwCBQ g$r$10863$kwCBQ g$mr$10864$kwCBQ)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8536$kwCBQ g$e$10862$kwCBQ g$r$10863$kwCBQ)))
          (case-lambda
            ((g$type$10868$kwCBQ g$value$10869$kwCBQ g$kwd$10870$kwCBQ)
             ((case-lambda
                ((g$kwd$10871$kwCBQ g$value$10872$kwCBQ g$type$10873$kwCBQ)
                 ((case-lambda
                    ((g$t$10874$kwCBQ)
                     (if (g$memv$5805$kwCBQ g$t$10874$kwCBQ '(core-macro))
                       ((case-lambda
                          ((g$transformer$10875$kwCBQ)
                           (g$transformer$10875$kwCBQ
                             g$e$10862$kwCBQ
                             g$r$10863$kwCBQ
                             g$mr$10864$kwCBQ)))
                        (g$core-macro-transformer$8802$kwCBQ
                          g$value$10872$kwCBQ))
                       (if (g$memv$5805$kwCBQ g$t$10874$kwCBQ '(global))
                         ((case-lambda
                            ((g$lib$10876$kwCBQ)
                             ((case-lambda
                                ((g$loc$10877$kwCBQ)
                                 (begin
                                   ((g$inv-collector$8847$kwCBQ)
                                    g$lib$10876$kwCBQ)
                                   g$loc$10877$kwCBQ)))
                              (cdr g$value$10872$kwCBQ))))
                          (car g$value$10872$kwCBQ))
                         (if (g$memv$5805$kwCBQ g$t$10874$kwCBQ '(core-prim))
                           ((case-lambda
                              ((g$name$10878$kwCBQ)
                               (list 'primitive g$name$10878$kwCBQ)))
                            g$value$10872$kwCBQ)
                           (if (g$memv$5805$kwCBQ g$t$10874$kwCBQ '(call))
                             (g$chi-application$8812$kwCBQ
                               g$e$10862$kwCBQ
                               g$r$10863$kwCBQ
                               g$mr$10864$kwCBQ)
                             (if (g$memv$5805$kwCBQ g$t$10874$kwCBQ '(lexical))
                               ((case-lambda
                                  ((g$lex$10879$kwCBQ) g$lex$10879$kwCBQ))
                                (g$lexical-var$8739$kwCBQ g$value$10872$kwCBQ))
                               (if (g$memv$5805$kwCBQ
                                     g$t$10874$kwCBQ
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8813$kwCBQ
                                   (g$chi-global-macro$8810$kwCBQ
                                     g$value$10872$kwCBQ
                                     g$e$10862$kwCBQ
                                     g$r$10863$kwCBQ)
                                   g$r$10863$kwCBQ
                                   g$mr$10864$kwCBQ)
                                 (if (g$memv$5805$kwCBQ
                                       g$t$10874$kwCBQ
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8813$kwCBQ
                                     (g$chi-local-macro$8809$kwCBQ
                                       g$value$10872$kwCBQ
                                       g$e$10862$kwCBQ
                                       g$r$10863$kwCBQ)
                                     g$r$10863$kwCBQ
                                     g$mr$10864$kwCBQ)
                                   (if (g$memv$5805$kwCBQ
                                         g$t$10874$kwCBQ
                                         '(macro macro!))
                                     (g$chi-expr$8813$kwCBQ
                                       (g$chi-macro$8808$kwCBQ
                                         g$value$10872$kwCBQ
                                         g$e$10862$kwCBQ
                                         g$r$10863$kwCBQ)
                                       g$r$10863$kwCBQ
                                       g$mr$10864$kwCBQ)
                                     (if (g$memv$5805$kwCBQ
                                           g$t$10874$kwCBQ
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10880$kwCBQ)
                                           (list 'quote g$datum$10880$kwCBQ)))
                                        g$value$10872$kwCBQ)
                                       (if (g$memv$5805$kwCBQ
                                             g$t$10874$kwCBQ
                                             '(set!))
                                         (g$chi-set!$8814$kwCBQ
                                           g$e$10862$kwCBQ
                                           g$r$10863$kwCBQ
                                           g$mr$10864$kwCBQ)
                                         (if (g$memv$5805$kwCBQ
                                               g$t$10874$kwCBQ
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10881$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$10882$kwCBQ)
                                                   (if g$ls/false$10882$kwCBQ
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10883$kwCBQ
                                                            g$x*$10884$kwCBQ)
                                                          (g$build-sequence$8445$kwCBQ
                                                            '#f
                                                            (g$chi-expr*$8811$kwCBQ
                                                              (cons
                                                                g$x$10883$kwCBQ
                                                                g$x*$10884$kwCBQ)
                                                              g$r$10863$kwCBQ
                                                              g$mr$10864$kwCBQ))))
                                                       g$ls/false$10882$kwCBQ)
                                                     (g$syntax-violation$8907$kwCBQ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10881$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$10881$kwCBQ
                                                  '(_ any . each-any)))))
                                            g$e$10862$kwCBQ)
                                           (if (g$memv$5805$kwCBQ
                                                 g$t$10874$kwCBQ
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10885$kwCBQ)
                                                 ((case-lambda
                                                    ((g$ls/false$10886$kwCBQ)
                                                     (if (if g$ls/false$10886$kwCBQ
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10887$kwCBQ
                                                                    g$xrhs*$10888$kwCBQ
                                                                    g$xbody$10889$kwCBQ
                                                                    g$xbody*$10890$kwCBQ)
                                                                  (if (not (g$valid-bound-ids?$8521$kwCBQ
                                                                             g$xlhs*$10887$kwCBQ))
                                                                    (g$syntax-violation$8907$kwCBQ
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10862$kwCBQ)
                                                                    (void))))
                                                               g$ls/false$10886$kwCBQ))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10891$kwCBQ
                                                              g$xrhs*$10892$kwCBQ
                                                              g$xbody$10893$kwCBQ
                                                              g$xbody*$10894$kwCBQ)
                                                            ((case-lambda
                                                               ((g$xlab*$10895$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$xrib$10896$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$xb*$10897$kwCBQ)
                                                                        (g$build-sequence$8445$kwCBQ
                                                                          '#f
                                                                          (g$chi-expr*$8811$kwCBQ
                                                                            (g$map$5812$kwCBQ
                                                                              (case-lambda
                                                                                ((g$x$10898$kwCBQ)
                                                                                 (g$add-subst$8506$kwCBQ
                                                                                   g$xrib$10896$kwCBQ
                                                                                   g$x$10898$kwCBQ)))
                                                                              (cons
                                                                                g$xbody$10893$kwCBQ
                                                                                g$xbody*$10894$kwCBQ))
                                                                            (append
                                                                              (g$map$5812$kwCBQ
                                                                                cons
                                                                                g$xlab*$10895$kwCBQ
                                                                                g$xb*$10897$kwCBQ)
                                                                              g$r$10863$kwCBQ)
                                                                            (append
                                                                              (g$map$5812$kwCBQ
                                                                                cons
                                                                                g$xlab*$10895$kwCBQ
                                                                                g$xb*$10897$kwCBQ)
                                                                              g$mr$10864$kwCBQ)))))
                                                                     (g$map$5812$kwCBQ
                                                                       (case-lambda
                                                                         ((g$x$10899$kwCBQ)
                                                                          (g$make-eval-transformer$8549$kwCBQ
                                                                            (g$expand-transformer$8840$kwCBQ
                                                                              (if (eq? g$type$10873$kwCBQ
                                                                                       'let-syntax)
                                                                                g$x$10899$kwCBQ
                                                                                (g$add-subst$8506$kwCBQ
                                                                                  g$xrib$10896$kwCBQ
                                                                                  g$x$10899$kwCBQ))
                                                                              g$mr$10864$kwCBQ))))
                                                                       g$xrhs*$10892$kwCBQ))))
                                                                 (g$make-full-rib$8484$kwCBQ
                                                                   g$xlhs*$10891$kwCBQ
                                                                   g$xlab*$10895$kwCBQ))))
                                                             (g$map$5812$kwCBQ
                                                               g$gen-label$8457$kwCBQ
                                                               g$xlhs*$10891$kwCBQ))))
                                                         g$ls/false$10886$kwCBQ)
                                                       (g$syntax-violation$8907$kwCBQ
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10885$kwCBQ))))
                                                  (g$syntax-dispatch$8795$kwCBQ
                                                    g$t$10885$kwCBQ
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10862$kwCBQ)
                                             (if (g$memv$5805$kwCBQ
                                                   g$t$10874$kwCBQ
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8907$kwCBQ
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10862$kwCBQ)
                                               (if (g$memv$5805$kwCBQ
                                                     g$t$10874$kwCBQ
                                                     '(syntax))
                                                 (g$syntax-violation$8907$kwCBQ
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10862$kwCBQ)
                                                 (if (g$memv$5805$kwCBQ
                                                       g$t$10874$kwCBQ
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8907$kwCBQ
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10900$kwCBQ)
                                                           (if (g$memv$5805$kwCBQ
                                                                 g$t$10900$kwCBQ
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5805$kwCBQ
                                                                   g$t$10900$kwCBQ
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5805$kwCBQ
                                                                     g$t$10900$kwCBQ
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5805$kwCBQ
                                                                       g$t$10900$kwCBQ
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5805$kwCBQ
                                                                         g$t$10900$kwCBQ
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5805$kwCBQ
                                                                           g$t$10900$kwCBQ
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10873$kwCBQ)
                                                       '" was found where an expression was expected")
                                                     g$e$10862$kwCBQ)
                                                   (if (g$memv$5805$kwCBQ
                                                         g$t$10874$kwCBQ
                                                         '(mutable))
                                                     (g$syntax-violation$8907$kwCBQ
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10862$kwCBQ)
                                                     (g$syntax-violation$8907$kwCBQ
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10862$kwCBQ)))))))))))))))))))
                  g$type$10873$kwCBQ)))
              g$kwd$10870$kwCBQ
              g$value$10869$kwCBQ
              g$type$10868$kwCBQ)))))))
   (g$chi-set!$8814$kwCBQ
     g$chi-set!$12332$kwCBQ
     (case-lambda
       ((g$e$10901$kwCBQ g$r$10902$kwCBQ g$mr$10903$kwCBQ)
        ((case-lambda
           ((g$t$10904$kwCBQ)
            ((case-lambda
               ((g$ls/false$10905$kwCBQ)
                (if (if g$ls/false$10905$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10906$kwCBQ g$v$10907$kwCBQ)
                             (g$id?$8516$kwCBQ g$x$10906$kwCBQ)))
                          g$ls/false$10905$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10908$kwCBQ g$v$10909$kwCBQ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8536$kwCBQ
                              g$x$10908$kwCBQ
                              g$r$10902$kwCBQ)))
                         (case-lambda
                           ((g$type$10913$kwCBQ
                              g$value$10914$kwCBQ
                              g$kwd$10915$kwCBQ)
                            ((case-lambda
                               ((g$kwd$10916$kwCBQ
                                  g$value$10917$kwCBQ
                                  g$type$10918$kwCBQ)
                                ((case-lambda
                                   ((g$t$10919$kwCBQ)
                                    (if (g$memv$5805$kwCBQ
                                          g$t$10919$kwCBQ
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8741$kwCBQ
                                          g$value$10917$kwCBQ
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8739$kwCBQ
                                            g$value$10917$kwCBQ)
                                          (g$chi-expr$8813$kwCBQ
                                            g$v$10909$kwCBQ
                                            g$r$10902$kwCBQ
                                            g$mr$10903$kwCBQ)))
                                      (if (g$memv$5805$kwCBQ
                                            g$t$10919$kwCBQ
                                            '(core-prim))
                                        (g$syntax-violation$8907$kwCBQ
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10901$kwCBQ)
                                        (if (g$memv$5805$kwCBQ
                                              g$t$10919$kwCBQ
                                              '(global))
                                          (g$syntax-violation$8907$kwCBQ
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10901$kwCBQ)
                                          (if (g$memv$5805$kwCBQ
                                                g$t$10919$kwCBQ
                                                '(global-macro!))
                                            (g$chi-expr$8813$kwCBQ
                                              (g$chi-global-macro$8810$kwCBQ
                                                g$value$10917$kwCBQ
                                                g$e$10901$kwCBQ
                                                g$r$10902$kwCBQ)
                                              g$r$10902$kwCBQ
                                              g$mr$10903$kwCBQ)
                                            (if (g$memv$5805$kwCBQ
                                                  g$t$10919$kwCBQ
                                                  '(local-macro!))
                                              (g$chi-expr$8813$kwCBQ
                                                (g$chi-local-macro$8809$kwCBQ
                                                  g$value$10917$kwCBQ
                                                  g$e$10901$kwCBQ
                                                  g$r$10902$kwCBQ)
                                                g$r$10902$kwCBQ
                                                g$mr$10903$kwCBQ)
                                              (if (g$memv$5805$kwCBQ
                                                    g$t$10919$kwCBQ
                                                    '(mutable))
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10901$kwCBQ)
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10901$kwCBQ)))))))))
                                 g$type$10918$kwCBQ)))
                             g$kwd$10915$kwCBQ
                             g$value$10914$kwCBQ
                             g$type$10913$kwCBQ))))))
                    g$ls/false$10905$kwCBQ)
                  (g$syntax-violation$8907$kwCBQ
                    '#f
                    '"invalid syntax"
                    g$t$10904$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$10904$kwCBQ '(_ any any)))))
         g$e$10901$kwCBQ))))
   (g$verify-formals$8815$kwCBQ
     g$verify-formals$12333$kwCBQ
     (case-lambda
       ((g$fmls$10920$kwCBQ g$stx$10921$kwCBQ)
        ((case-lambda
           ((g$t$10922$kwCBQ)
            ((case-lambda
               ((g$ls/false$10923$kwCBQ)
                (if g$ls/false$10923$kwCBQ
                  (apply
                    (case-lambda
                      ((g$x*$10924$kwCBQ)
                       (if (not (g$valid-bound-ids?$8521$kwCBQ
                                  g$x*$10924$kwCBQ))
                         (g$invalid-fmls-error$8760$kwCBQ
                           g$stx$10921$kwCBQ
                           g$fmls$10920$kwCBQ)
                         (void))))
                    g$ls/false$10923$kwCBQ)
                  ((case-lambda
                     ((g$t$10925$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$10926$kwCBQ)
                          (if g$ls/false$10926$kwCBQ
                            (apply
                              (case-lambda
                                ((g$x*$10927$kwCBQ g$x$10928$kwCBQ)
                                 (if (not (g$valid-bound-ids?$8521$kwCBQ
                                            (cons
                                              g$x$10928$kwCBQ
                                              g$x*$10927$kwCBQ)))
                                   (g$invalid-fmls-error$8760$kwCBQ
                                     g$stx$10921$kwCBQ
                                     g$fmls$10920$kwCBQ)
                                   (void))))
                              g$ls/false$10926$kwCBQ)
                            ((case-lambda
                               ((g$t$10929$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$10930$kwCBQ)
                                    (if g$ls/false$10930$kwCBQ
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10921$kwCBQ)))
                                        g$ls/false$10930$kwCBQ)
                                      (g$syntax-violation$8907$kwCBQ
                                        '#f
                                        '"invalid syntax"
                                        g$t$10929$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$10929$kwCBQ
                                   '_))))
                             g$t$10925$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$10925$kwCBQ
                         '#(each+ any () any)))))
                   g$t$10922$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$10922$kwCBQ 'each-any))))
         g$fmls$10920$kwCBQ))))
   (g$chi-lambda-clause$8816$kwCBQ
     g$chi-lambda-clause$12334$kwCBQ
     (case-lambda
       ((g$stx$10931$kwCBQ
          g$fmls$10932$kwCBQ
          g$body*$10933$kwCBQ
          g$r$10934$kwCBQ
          g$mr$10935$kwCBQ)
        ((case-lambda
           ((g$t$10936$kwCBQ)
            ((case-lambda
               ((g$ls/false$10937$kwCBQ)
                (if g$ls/false$10937$kwCBQ
                  (apply
                    (case-lambda
                      ((g$x*$10938$kwCBQ)
                       (begin
                         (g$verify-formals$8815$kwCBQ
                           g$fmls$10932$kwCBQ
                           g$stx$10931$kwCBQ)
                         ((case-lambda
                            ((g$lex*$10939$kwCBQ g$lab*$10940$kwCBQ)
                             (values
                               g$lex*$10939$kwCBQ
                               (g$chi-internal$8824$kwCBQ
                                 (g$add-subst$8506$kwCBQ
                                   (g$make-full-rib$8484$kwCBQ
                                     g$x*$10938$kwCBQ
                                     g$lab*$10940$kwCBQ)
                                   g$body*$10933$kwCBQ)
                                 (g$add-lexicals$8743$kwCBQ
                                   g$lab*$10940$kwCBQ
                                   g$lex*$10939$kwCBQ
                                   g$r$10934$kwCBQ)
                                 g$mr$10935$kwCBQ))))
                          (g$map$5812$kwCBQ
                            g$gen-lexical$8455$kwCBQ
                            g$x*$10938$kwCBQ)
                          (g$map$5812$kwCBQ
                            g$gen-label$8457$kwCBQ
                            g$x*$10938$kwCBQ)))))
                    g$ls/false$10937$kwCBQ)
                  ((case-lambda
                     ((g$t$10941$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$10942$kwCBQ)
                          (if g$ls/false$10942$kwCBQ
                            (apply
                              (case-lambda
                                ((g$x*$10943$kwCBQ g$x$10944$kwCBQ)
                                 (begin
                                   (g$verify-formals$8815$kwCBQ
                                     g$fmls$10932$kwCBQ
                                     g$stx$10931$kwCBQ)
                                   ((case-lambda
                                      ((g$lex*$10945$kwCBQ
                                         g$lab*$10946$kwCBQ
                                         g$lex$10947$kwCBQ
                                         g$lab$10948$kwCBQ)
                                       (values
                                         (append
                                           g$lex*$10945$kwCBQ
                                           g$lex$10947$kwCBQ)
                                         (g$chi-internal$8824$kwCBQ
                                           (g$add-subst$8506$kwCBQ
                                             (g$make-full-rib$8484$kwCBQ
                                               (cons
                                                 g$x$10944$kwCBQ
                                                 g$x*$10943$kwCBQ)
                                               (cons
                                                 g$lab$10948$kwCBQ
                                                 g$lab*$10946$kwCBQ))
                                             g$body*$10933$kwCBQ)
                                           (g$add-lexicals$8743$kwCBQ
                                             (cons
                                               g$lab$10948$kwCBQ
                                               g$lab*$10946$kwCBQ)
                                             (cons
                                               g$lex$10947$kwCBQ
                                               g$lex*$10945$kwCBQ)
                                             g$r$10934$kwCBQ)
                                           g$mr$10935$kwCBQ))))
                                    (g$map$5812$kwCBQ
                                      g$gen-lexical$8455$kwCBQ
                                      g$x*$10943$kwCBQ)
                                    (g$map$5812$kwCBQ
                                      g$gen-label$8457$kwCBQ
                                      g$x*$10943$kwCBQ)
                                    (g$gen-lexical$8455$kwCBQ g$x$10944$kwCBQ)
                                    (g$gen-label$8457$kwCBQ g$x$10944$kwCBQ)))))
                              g$ls/false$10942$kwCBQ)
                            ((case-lambda
                               ((g$t$10949$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$10950$kwCBQ)
                                    (if g$ls/false$10950$kwCBQ
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8907$kwCBQ
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10932$kwCBQ)))
                                        g$ls/false$10950$kwCBQ)
                                      (g$syntax-violation$8907$kwCBQ
                                        '#f
                                        '"invalid syntax"
                                        g$t$10949$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$10949$kwCBQ
                                   '_))))
                             g$t$10941$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$10941$kwCBQ
                         '#(each+ any () any)))))
                   g$t$10936$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$10936$kwCBQ 'each-any))))
         g$fmls$10932$kwCBQ))))
   (g$chi-lambda-clause*$8817$kwCBQ
     g$chi-lambda-clause*$12335$kwCBQ
     (case-lambda
       ((g$stx$10951$kwCBQ
          g$fmls*$10952$kwCBQ
          g$body**$10953$kwCBQ
          g$r$10954$kwCBQ
          g$mr$10955$kwCBQ)
        (if (null? g$fmls*$10952$kwCBQ)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8816$kwCBQ
                 g$stx$10951$kwCBQ
                 (car g$fmls*$10952$kwCBQ)
                 (car g$body**$10953$kwCBQ)
                 g$r$10954$kwCBQ
                 g$mr$10955$kwCBQ)))
            (case-lambda
              ((g$a$10958$kwCBQ g$b$10959$kwCBQ)
               ((case-lambda
                  ((g$b$10960$kwCBQ g$a$10961$kwCBQ)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8817$kwCBQ
                          g$stx$10951$kwCBQ
                          (cdr g$fmls*$10952$kwCBQ)
                          (cdr g$body**$10953$kwCBQ)
                          g$r$10954$kwCBQ
                          g$mr$10955$kwCBQ)))
                     (case-lambda
                       ((g$a*$10964$kwCBQ g$b*$10965$kwCBQ)
                        ((case-lambda
                           ((g$b*$10966$kwCBQ g$a*$10967$kwCBQ)
                            (values
                              (cons g$a$10961$kwCBQ g$a*$10967$kwCBQ)
                              (cons g$b$10960$kwCBQ g$b*$10966$kwCBQ))))
                         g$b*$10965$kwCBQ
                         g$a*$10964$kwCBQ))))))
                g$b$10959$kwCBQ
                g$a$10958$kwCBQ))))))))
   (g$chi-defun$8818$kwCBQ
     g$chi-defun$12336$kwCBQ
     (case-lambda
       ((g$x$10968$kwCBQ g$r$10969$kwCBQ g$mr$10970$kwCBQ)
        ((case-lambda
           ((g$fmls$10971$kwCBQ g$body*$10972$kwCBQ)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8816$kwCBQ
                   g$fmls$10971$kwCBQ
                   g$fmls$10971$kwCBQ
                   g$body*$10972$kwCBQ
                   g$r$10969$kwCBQ
                   g$mr$10970$kwCBQ)))
              (case-lambda
                ((g$fmls$10975$kwCBQ g$body$10976$kwCBQ)
                 ((case-lambda
                    ((g$body$10977$kwCBQ g$fmls$10978$kwCBQ)
                     (g$build-lambda$8442$kwCBQ
                       '#f
                       g$fmls$10978$kwCBQ
                       g$body$10977$kwCBQ)))
                  g$body$10976$kwCBQ
                  g$fmls$10975$kwCBQ))))))
         (car g$x$10968$kwCBQ)
         (cdr g$x$10968$kwCBQ)))))
   (g$chi-rhs$8819$kwCBQ
     g$chi-rhs$12337$kwCBQ
     (case-lambda
       ((g$rhs$10979$kwCBQ g$r$10980$kwCBQ g$mr$10981$kwCBQ)
        ((case-lambda
           ((g$t$10982$kwCBQ)
            (if (g$memv$5805$kwCBQ g$t$10982$kwCBQ '(defun))
              (g$chi-defun$8818$kwCBQ
                (cdr g$rhs$10979$kwCBQ)
                g$r$10980$kwCBQ
                g$mr$10981$kwCBQ)
              (if (g$memv$5805$kwCBQ g$t$10982$kwCBQ '(expr))
                ((case-lambda
                   ((g$expr$10983$kwCBQ)
                    (g$chi-expr$8813$kwCBQ
                      g$expr$10983$kwCBQ
                      g$r$10980$kwCBQ
                      g$mr$10981$kwCBQ)))
                 (cdr g$rhs$10979$kwCBQ))
                (if (g$memv$5805$kwCBQ g$t$10982$kwCBQ '(top-expr))
                  ((case-lambda
                     ((g$expr$10984$kwCBQ)
                      (g$build-sequence$8445$kwCBQ
                        '#f
                        (list
                          (g$chi-expr$8813$kwCBQ
                            g$expr$10984$kwCBQ
                            g$r$10980$kwCBQ
                            g$mr$10981$kwCBQ)
                          (g$build-void$8446$kwCBQ)))))
                   (cdr g$rhs$10979$kwCBQ))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10979$kwCBQ))))))
         (car g$rhs$10979$kwCBQ)))))
   (g$expand-interaction-rhs*/init*$8820$kwCBQ
     g$expand-interaction-rhs*/init*$12338$kwCBQ
     (case-lambda
       ((g$lhs*$10985$kwCBQ
          g$rhs*$10986$kwCBQ
          g$init*$10987$kwCBQ
          g$r$10988$kwCBQ
          g$mr$10989$kwCBQ)
        ((letrec ((g$f$10990$kwCBQ
                    (case-lambda
                      ((g$lhs*$10991$kwCBQ g$rhs*$10992$kwCBQ)
                       (if (null? g$lhs*$10991$kwCBQ)
                         (g$map$5812$kwCBQ
                           (case-lambda
                             ((g$x$10993$kwCBQ)
                              (g$chi-expr$8813$kwCBQ
                                g$x$10993$kwCBQ
                                g$r$10988$kwCBQ
                                g$mr$10989$kwCBQ)))
                           g$init*$10987$kwCBQ)
                         ((case-lambda
                            ((g$lhs$10994$kwCBQ g$rhs$10995$kwCBQ)
                             ((case-lambda
                                ((g$t$10996$kwCBQ)
                                 (if (g$memv$5805$kwCBQ
                                       g$t$10996$kwCBQ
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10997$kwCBQ)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10994$kwCBQ
                                           g$rhs$10997$kwCBQ)
                                         (g$f$10990$kwCBQ
                                           (cdr g$lhs*$10991$kwCBQ)
                                           (cdr g$rhs*$10992$kwCBQ)))))
                                    (g$chi-defun$8818$kwCBQ
                                      (cdr g$rhs$10995$kwCBQ)
                                      g$r$10988$kwCBQ
                                      g$mr$10989$kwCBQ))
                                   (if (g$memv$5805$kwCBQ
                                         g$t$10996$kwCBQ
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10998$kwCBQ)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10994$kwCBQ
                                             g$rhs$10998$kwCBQ)
                                           (g$f$10990$kwCBQ
                                             (cdr g$lhs*$10991$kwCBQ)
                                             (cdr g$rhs*$10992$kwCBQ)))))
                                      (g$chi-expr$8813$kwCBQ
                                        (cdr g$rhs$10995$kwCBQ)
                                        g$r$10988$kwCBQ
                                        g$mr$10989$kwCBQ))
                                     (if (g$memv$5805$kwCBQ
                                           g$t$10996$kwCBQ
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10999$kwCBQ)
                                           (cons
                                             g$e$10999$kwCBQ
                                             (g$f$10990$kwCBQ
                                               (cdr g$lhs*$10991$kwCBQ)
                                               (cdr g$rhs*$10992$kwCBQ)))))
                                        (g$chi-expr$8813$kwCBQ
                                          (cdr g$rhs$10995$kwCBQ)
                                          g$r$10988$kwCBQ
                                          g$mr$10989$kwCBQ))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10995$kwCBQ))))))
                              (car g$rhs$10995$kwCBQ))))
                          (car g$lhs*$10991$kwCBQ)
                          (car g$rhs*$10992$kwCBQ)))))))
           g$f$10990$kwCBQ)
         g$lhs*$10985$kwCBQ
         g$rhs*$10986$kwCBQ))))
   (g$chi-rhs*$8821$kwCBQ
     g$chi-rhs*$12339$kwCBQ
     (case-lambda
       ((g$rhs*$11000$kwCBQ g$r$11001$kwCBQ g$mr$11002$kwCBQ)
        ((letrec ((g$f$11003$kwCBQ
                    (case-lambda
                      ((g$ls$11004$kwCBQ)
                       (if (null? g$ls$11004$kwCBQ)
                         '()
                         ((case-lambda
                            ((g$a$11005$kwCBQ)
                             (cons
                               g$a$11005$kwCBQ
                               (g$f$11003$kwCBQ (cdr g$ls$11004$kwCBQ)))))
                          (g$chi-rhs$8819$kwCBQ
                            (car g$ls$11004$kwCBQ)
                            g$r$11001$kwCBQ
                            g$mr$11002$kwCBQ)))))))
           g$f$11003$kwCBQ)
         g$rhs*$11000$kwCBQ))))
   (g$find-bound=?$8822$kwCBQ
     g$find-bound=?$12340$kwCBQ
     (case-lambda
       ((g$x$11006$kwCBQ g$lhs*$11007$kwCBQ g$rhs*$11008$kwCBQ)
        (if (null? g$lhs*$11007$kwCBQ)
          '#f
          (if (g$bound-id=?$8519$kwCBQ g$x$11006$kwCBQ (car g$lhs*$11007$kwCBQ))
            (car g$rhs*$11008$kwCBQ)
            (g$find-bound=?$8822$kwCBQ
              g$x$11006$kwCBQ
              (cdr g$lhs*$11007$kwCBQ)
              (cdr g$rhs*$11008$kwCBQ)))))))
   (g$find-dups$8823$kwCBQ
     g$find-dups$12341$kwCBQ
     (case-lambda
       ((g$ls$11009$kwCBQ)
        ((letrec ((g$f$11010$kwCBQ
                    (case-lambda
                      ((g$ls$11011$kwCBQ g$dups$11012$kwCBQ)
                       (if (null? g$ls$11011$kwCBQ)
                         g$dups$11012$kwCBQ
                         ((case-lambda
                            ((g$t$11013$kwCBQ)
                             (if g$t$11013$kwCBQ
                               ((case-lambda
                                  ((g$x$11014$kwCBQ)
                                   (g$f$11010$kwCBQ
                                     (cdr g$ls$11011$kwCBQ)
                                     (cons
                                       (list
                                         (car g$ls$11011$kwCBQ)
                                         g$x$11014$kwCBQ)
                                       g$dups$11012$kwCBQ))))
                                g$t$11013$kwCBQ)
                               (g$f$11010$kwCBQ
                                 (cdr g$ls$11011$kwCBQ)
                                 g$dups$11012$kwCBQ))))
                          (g$find-bound=?$8822$kwCBQ
                            (car g$ls$11011$kwCBQ)
                            (cdr g$ls$11011$kwCBQ)
                            (cdr g$ls$11011$kwCBQ))))))))
           g$f$11010$kwCBQ)
         g$ls$11009$kwCBQ
         '()))))
   (g$chi-internal$8824$kwCBQ
     g$chi-internal$12342$kwCBQ
     (case-lambda
       ((g$e*$11015$kwCBQ g$r$11016$kwCBQ g$mr$11017$kwCBQ)
        ((case-lambda
           ((g$rib$11018$kwCBQ)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8839$kwCBQ
                   (g$map$5812$kwCBQ
                     (case-lambda
                       ((g$x$11027$kwCBQ)
                        (g$add-subst$8506$kwCBQ
                          g$rib$11018$kwCBQ
                          g$x$11027$kwCBQ)))
                     (g$syntax->list$8515$kwCBQ g$e*$11015$kwCBQ))
                   g$r$11016$kwCBQ
                   g$mr$11017$kwCBQ
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$11018$kwCBQ
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$11028$kwCBQ
                   g$r$11029$kwCBQ
                   g$mr$11030$kwCBQ
                   g$lex*$11031$kwCBQ
                   g$rhs*$11032$kwCBQ
                   g$mod**$11033$kwCBQ
                   g$kwd*$11034$kwCBQ
                   g$_exp*$11035$kwCBQ)
                 ((case-lambda
                    ((g$_exp*$11036$kwCBQ
                       g$kwd*$11037$kwCBQ
                       g$mod**$11038$kwCBQ
                       g$rhs*$11039$kwCBQ
                       g$lex*$11040$kwCBQ
                       g$mr$11041$kwCBQ
                       g$r$11042$kwCBQ
                       g$e*$11043$kwCBQ)
                     (begin
                       (if (null? g$e*$11043$kwCBQ)
                         (g$syntax-violation$8907$kwCBQ
                           '#f
                           '"no expression in body"
                           g$e*$11043$kwCBQ)
                         (void))
                       ((case-lambda
                          ((g$init*$11044$kwCBQ)
                           ((case-lambda
                              ((g$rhs*$11045$kwCBQ)
                               (g$build-letrec*$8448$kwCBQ
                                 '#f
                                 (reverse g$lex*$11040$kwCBQ)
                                 (reverse g$rhs*$11045$kwCBQ)
                                 (g$build-sequence$8445$kwCBQ
                                   '#f
                                   g$init*$11044$kwCBQ))))
                            (g$chi-rhs*$8821$kwCBQ
                              g$rhs*$11039$kwCBQ
                              g$r$11042$kwCBQ
                              g$mr$11041$kwCBQ))))
                        (g$chi-expr*$8811$kwCBQ
                          (append
                            (apply append (reverse g$mod**$11038$kwCBQ))
                            g$e*$11043$kwCBQ)
                          g$r$11042$kwCBQ
                          g$mr$11041$kwCBQ)))))
                  g$_exp*$11035$kwCBQ
                  g$kwd*$11034$kwCBQ
                  g$mod**$11033$kwCBQ
                  g$rhs*$11032$kwCBQ
                  g$lex*$11031$kwCBQ
                  g$mr$11030$kwCBQ
                  g$r$11029$kwCBQ
                  g$e*$11028$kwCBQ))))))
         (g$make-empty-rib$8476$kwCBQ)))))
   (g$parse-module$8825$kwCBQ
     g$parse-module$12343$kwCBQ
     (case-lambda
       ((g$e$11046$kwCBQ)
        ((case-lambda
           ((g$t$11047$kwCBQ)
            ((case-lambda
               ((g$ls/false$11048$kwCBQ)
                (if g$ls/false$11048$kwCBQ
                  (apply
                    (case-lambda
                      ((g$export*$11049$kwCBQ g$b*$11050$kwCBQ)
                       (begin
                         (if (not (g$for-all$5810$kwCBQ
                                    g$id?$8516$kwCBQ
                                    g$export*$11049$kwCBQ))
                           (g$syntax-violation$8907$kwCBQ
                             '#f
                             '"module exports must be identifiers"
                             g$e$11046$kwCBQ)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$11049$kwCBQ)
                           g$b*$11050$kwCBQ))))
                    g$ls/false$11048$kwCBQ)
                  ((case-lambda
                     ((g$t$11051$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$11052$kwCBQ)
                          (if g$ls/false$11052$kwCBQ
                            (apply
                              (case-lambda
                                ((g$name$11053$kwCBQ
                                   g$export*$11054$kwCBQ
                                   g$b*$11055$kwCBQ)
                                 (begin
                                   (if (not (g$id?$8516$kwCBQ
                                              g$name$11053$kwCBQ))
                                     (g$syntax-violation$8907$kwCBQ
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$11046$kwCBQ)
                                     (void))
                                   (if (not (g$for-all$5810$kwCBQ
                                              g$id?$8516$kwCBQ
                                              g$export*$11054$kwCBQ))
                                     (g$syntax-violation$8907$kwCBQ
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$11046$kwCBQ)
                                     (void))
                                   (values
                                     g$name$11053$kwCBQ
                                     (list->vector g$export*$11054$kwCBQ)
                                     g$b*$11055$kwCBQ))))
                              g$ls/false$11052$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$11051$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$11051$kwCBQ
                         '(_ any each-any . each-any)))))
                   g$t$11047$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$11047$kwCBQ
               '(_ each-any . each-any)))))
         g$e$11046$kwCBQ))))
   (g$9858$8826$kwCBQ
     g$9858$12344$kwCBQ
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9861$kwCBQ
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9860$8827$kwCBQ g$9860$12345$kwCBQ '#f)
   (g$9859$8828$kwCBQ
     g$9859$12346$kwCBQ
     (make-record-constructor-descriptor
       g$9858$8826$kwCBQ
       '#f
       g$9860$8827$kwCBQ))
   (g$module-interface?$8829$kwCBQ
     g$module-interface?$12347$kwCBQ
     (record-predicate g$9858$8826$kwCBQ))
   (g$make-module-interface$8830$kwCBQ
     g$make-module-interface$12348$kwCBQ
     (record-constructor g$9859$8828$kwCBQ))
   (g$module-interface-first-mark$8831$kwCBQ
     g$module-interface-first-mark$12349$kwCBQ
     (record-accessor g$9858$8826$kwCBQ '0))
   (g$module-interface-exp-id-vec$8832$kwCBQ
     g$module-interface-exp-id-vec$12350$kwCBQ
     (record-accessor g$9858$8826$kwCBQ '1))
   (g$module-interface-exp-lab-vec$8833$kwCBQ
     g$module-interface-exp-lab-vec$12351$kwCBQ
     (record-accessor g$9858$8826$kwCBQ '2))
   (g$set-module-interface-first-mark!$8834$kwCBQ
     g$set-module-interface-first-mark!$12352$kwCBQ
     (record-mutator g$9858$8826$kwCBQ '0))
   (g$set-module-interface-exp-id-vec!$8835$kwCBQ
     g$set-module-interface-exp-id-vec!$12353$kwCBQ
     (record-mutator g$9858$8826$kwCBQ '1))
   (g$set-module-interface-exp-lab-vec!$8836$kwCBQ
     g$set-module-interface-exp-lab-vec!$12354$kwCBQ
     (record-mutator g$9858$8826$kwCBQ '2))
   (g$module-interface-exp-id*$8837$kwCBQ
     g$module-interface-exp-id*$12355$kwCBQ
     (case-lambda
       ((g$iface$11056$kwCBQ g$id$11057$kwCBQ)
        (letrec* ((g$diff-marks$11058$kwCBQ
                    (case-lambda
                      ((g$ls$11062$kwCBQ g$x$11063$kwCBQ)
                       (begin
                         (if (null? g$ls$11062$kwCBQ)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$11064$kwCBQ)
                             (if (eq? g$a$11064$kwCBQ g$x$11063$kwCBQ)
                               '()
                               (cons
                                 g$a$11064$kwCBQ
                                 (g$diff-marks$11058$kwCBQ
                                   (cdr g$ls$11062$kwCBQ)
                                   g$x$11063$kwCBQ)))))
                          (car g$ls$11062$kwCBQ)))))))
          ((case-lambda
             ((g$diff$11059$kwCBQ g$id-vec$11060$kwCBQ)
              (if (null? g$diff$11059$kwCBQ)
                g$id-vec$11060$kwCBQ
                (g$vector-map$6089$kwCBQ
                  (case-lambda
                    ((g$x$11061$kwCBQ)
                     (g$make-stx$8489$kwCBQ
                       (g$stx-expr$8490$kwCBQ g$x$11061$kwCBQ)
                       (append
                         g$diff$11059$kwCBQ
                         (g$stx-mark*$8491$kwCBQ g$x$11061$kwCBQ))
                       '()
                       '())))
                  g$id-vec$11060$kwCBQ))))
           (g$diff-marks$11058$kwCBQ
             (g$stx-mark*$8491$kwCBQ g$id$11057$kwCBQ)
             (g$module-interface-first-mark$8831$kwCBQ g$iface$11056$kwCBQ))
           (g$module-interface-exp-id-vec$8832$kwCBQ g$iface$11056$kwCBQ))))))
   (g$chi-internal-module$8838$kwCBQ
     g$chi-internal-module$12356$kwCBQ
     (case-lambda
       ((g$e$11065$kwCBQ
          g$r$11066$kwCBQ
          g$mr$11067$kwCBQ
          g$lex*$11068$kwCBQ
          g$rhs*$11069$kwCBQ
          g$mod**$11070$kwCBQ
          g$kwd*$11071$kwCBQ)
        (call-with-values
          (case-lambda (() (g$parse-module$8825$kwCBQ g$e$11065$kwCBQ)))
          (case-lambda
            ((g$name$11075$kwCBQ g$exp-id*$11076$kwCBQ g$e*$11077$kwCBQ)
             ((case-lambda
                ((g$e*$11078$kwCBQ g$exp-id*$11079$kwCBQ g$name$11080$kwCBQ)
                 ((case-lambda
                    ((g$rib$11081$kwCBQ)
                     ((case-lambda
                        ((g$e*$11082$kwCBQ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8839$kwCBQ
                                g$e*$11082$kwCBQ
                                g$r$11066$kwCBQ
                                g$mr$11067$kwCBQ
                                g$lex*$11068$kwCBQ
                                g$rhs*$11069$kwCBQ
                                g$mod**$11070$kwCBQ
                                g$kwd*$11071$kwCBQ
                                '()
                                g$rib$11081$kwCBQ
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$11091$kwCBQ
                                g$r$11092$kwCBQ
                                g$mr$11093$kwCBQ
                                g$lex*$11094$kwCBQ
                                g$rhs*$11095$kwCBQ
                                g$mod**$11096$kwCBQ
                                g$kwd*$11097$kwCBQ
                                g$_exp*$11098$kwCBQ)
                              ((case-lambda
                                 ((g$_exp*$11099$kwCBQ
                                    g$kwd*$11100$kwCBQ
                                    g$mod**$11101$kwCBQ
                                    g$rhs*$11102$kwCBQ
                                    g$lex*$11103$kwCBQ
                                    g$mr$11104$kwCBQ
                                    g$r$11105$kwCBQ
                                    g$e*$11106$kwCBQ)
                                  ((case-lambda
                                     ((g$exp-lab*$11107$kwCBQ
                                        g$mod**$11108$kwCBQ)
                                      (if (not g$name$11080$kwCBQ)
                                        (values
                                          g$lex*$11103$kwCBQ
                                          g$rhs*$11102$kwCBQ
                                          g$exp-id*$11079$kwCBQ
                                          g$exp-lab*$11107$kwCBQ
                                          g$r$11105$kwCBQ
                                          g$mr$11104$kwCBQ
                                          g$mod**$11108$kwCBQ
                                          g$kwd*$11100$kwCBQ)
                                        ((case-lambda
                                           ((g$lab$11109$kwCBQ
                                              g$iface$11110$kwCBQ)
                                            (values
                                              g$lex*$11103$kwCBQ
                                              g$rhs*$11102$kwCBQ
                                              (vector g$name$11080$kwCBQ)
                                              (vector g$lab$11109$kwCBQ)
                                              (cons
                                                (cons
                                                  g$lab$11109$kwCBQ
                                                  (cons
                                                    '$module
                                                    g$iface$11110$kwCBQ))
                                                g$r$11105$kwCBQ)
                                              (cons
                                                (cons
                                                  g$lab$11109$kwCBQ
                                                  (cons
                                                    '$module
                                                    g$iface$11110$kwCBQ))
                                                g$mr$11104$kwCBQ)
                                              g$mod**$11108$kwCBQ
                                              g$kwd*$11100$kwCBQ)))
                                         (g$gen-label$8457$kwCBQ 'module)
                                         (g$make-module-interface$8830$kwCBQ
                                           (car (g$stx-mark*$8491$kwCBQ
                                                  g$name$11080$kwCBQ))
                                           (g$vector-map$6089$kwCBQ
                                             (case-lambda
                                               ((g$x$11111$kwCBQ)
                                                (g$make-stx$8489$kwCBQ
                                                  (g$stx-expr$8490$kwCBQ
                                                    g$x$11111$kwCBQ)
                                                  (g$stx-mark*$8491$kwCBQ
                                                    g$x$11111$kwCBQ)
                                                  '()
                                                  '())))
                                             g$exp-id*$11079$kwCBQ)
                                           g$exp-lab*$11107$kwCBQ)))))
                                   (g$vector-map$6089$kwCBQ
                                     (case-lambda
                                       ((g$x$11112$kwCBQ)
                                        ((case-lambda
                                           ((g$t$11113$kwCBQ)
                                            (if g$t$11113$kwCBQ
                                              g$t$11113$kwCBQ
                                              (begin
                                                '#f
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$11112$kwCBQ)))))
                                         (g$id->label$8529$kwCBQ
                                           (g$make-stx$8489$kwCBQ
                                             (g$id->sym$8517$kwCBQ
                                               g$x$11112$kwCBQ)
                                             (g$stx-mark*$8491$kwCBQ
                                               g$x$11112$kwCBQ)
                                             (list g$rib$11081$kwCBQ)
                                             '())))))
                                     g$exp-id*$11079$kwCBQ)
                                   (cons
                                     g$e*$11106$kwCBQ
                                     g$mod**$11101$kwCBQ))))
                               g$_exp*$11098$kwCBQ
                               g$kwd*$11097$kwCBQ
                               g$mod**$11096$kwCBQ
                               g$rhs*$11095$kwCBQ
                               g$lex*$11094$kwCBQ
                               g$mr$11093$kwCBQ
                               g$r$11092$kwCBQ
                               g$e*$11091$kwCBQ))))))
                      (g$map$5812$kwCBQ
                        (case-lambda
                          ((g$x$11114$kwCBQ)
                           (g$add-subst$8506$kwCBQ
                             g$rib$11081$kwCBQ
                             g$x$11114$kwCBQ)))
                        (g$syntax->list$8515$kwCBQ g$e*$11078$kwCBQ)))))
                  (g$make-empty-rib$8476$kwCBQ))))
              g$e*$11077$kwCBQ
              g$exp-id*$11076$kwCBQ
              g$name$11075$kwCBQ)))))))
   (g$chi-body*$8839$kwCBQ
     g$chi-body*$12357$kwCBQ
     (case-lambda
       ((g$e*$11115$kwCBQ
          g$r$11116$kwCBQ
          g$mr$11117$kwCBQ
          g$lex*$11118$kwCBQ
          g$rhs*$11119$kwCBQ
          g$mod**$11120$kwCBQ
          g$kwd*$11121$kwCBQ
          g$exp*$11122$kwCBQ
          g$rib$11123$kwCBQ
          g$mix?$11124$kwCBQ
          g$sd?$11125$kwCBQ)
        (if (null? g$e*$11115$kwCBQ)
          (values
            g$e*$11115$kwCBQ
            g$r$11116$kwCBQ
            g$mr$11117$kwCBQ
            g$lex*$11118$kwCBQ
            g$rhs*$11119$kwCBQ
            g$mod**$11120$kwCBQ
            g$kwd*$11121$kwCBQ
            g$exp*$11122$kwCBQ)
          ((case-lambda
             ((g$e$11126$kwCBQ)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8536$kwCBQ g$e$11126$kwCBQ g$r$11116$kwCBQ)))
                (case-lambda
                  ((g$type$11130$kwCBQ g$value$11131$kwCBQ g$kwd$11132$kwCBQ)
                   ((case-lambda
                      ((g$kwd$11133$kwCBQ
                         g$value$11134$kwCBQ
                         g$type$11135$kwCBQ)
                       ((case-lambda
                          ((g$kwd*$11136$kwCBQ)
                           ((case-lambda
                              ((g$t$11137$kwCBQ)
                               (if (g$memv$5805$kwCBQ g$t$11137$kwCBQ '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8735$kwCBQ
                                        g$e$11126$kwCBQ)))
                                   (case-lambda
                                     ((g$id$11140$kwCBQ g$rhs$11141$kwCBQ)
                                      ((case-lambda
                                         ((g$rhs$11142$kwCBQ g$id$11143$kwCBQ)
                                          (begin
                                            (if (g$bound-id-member?$8523$kwCBQ
                                                  g$id$11143$kwCBQ
                                                  g$kwd*$11136$kwCBQ)
                                              (g$syntax-violation$8907$kwCBQ
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$11126$kwCBQ)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$8459$kwCBQ
                                                   g$id$11143$kwCBQ
                                                   g$rib$11123$kwCBQ
                                                   g$sd?$11125$kwCBQ)))
                                              (case-lambda
                                                ((g$lab$11146$kwCBQ
                                                   g$lex$11147$kwCBQ)
                                                 ((case-lambda
                                                    ((g$lex$11148$kwCBQ
                                                       g$lab$11149$kwCBQ)
                                                     (begin
                                                       (g$extend-rib!$8479$kwCBQ
                                                         g$rib$11123$kwCBQ
                                                         g$id$11143$kwCBQ
                                                         g$lab$11149$kwCBQ
                                                         g$sd?$11125$kwCBQ)
                                                       (g$chi-body*$8839$kwCBQ
                                                         (cdr g$e*$11115$kwCBQ)
                                                         (g$add-lexical$8742$kwCBQ
                                                           g$lab$11149$kwCBQ
                                                           g$lex$11148$kwCBQ
                                                           g$r$11116$kwCBQ)
                                                         g$mr$11117$kwCBQ
                                                         (cons
                                                           g$lex$11148$kwCBQ
                                                           g$lex*$11118$kwCBQ)
                                                         (cons
                                                           g$rhs$11142$kwCBQ
                                                           g$rhs*$11119$kwCBQ)
                                                         g$mod**$11120$kwCBQ
                                                         g$kwd*$11136$kwCBQ
                                                         g$exp*$11122$kwCBQ
                                                         g$rib$11123$kwCBQ
                                                         g$mix?$11124$kwCBQ
                                                         g$sd?$11125$kwCBQ))))
                                                  g$lex$11147$kwCBQ
                                                  g$lab$11146$kwCBQ)))))))
                                       g$rhs$11141$kwCBQ
                                       g$id$11140$kwCBQ))))
                                 (if (g$memv$5805$kwCBQ
                                       g$t$11137$kwCBQ
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8736$kwCBQ
                                          g$e$11126$kwCBQ)))
                                     (case-lambda
                                       ((g$id$11152$kwCBQ g$rhs$11153$kwCBQ)
                                        ((case-lambda
                                           ((g$rhs$11154$kwCBQ g$id$11155$kwCBQ)
                                            (begin
                                              (if (g$bound-id-member?$8523$kwCBQ
                                                    g$id$11155$kwCBQ
                                                    g$kwd*$11136$kwCBQ)
                                                (g$syntax-violation$8907$kwCBQ
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$11126$kwCBQ)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$11156$kwCBQ)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$11157$kwCBQ)
                                                      (begin
                                                        (g$extend-rib!$8479$kwCBQ
                                                          g$rib$11123$kwCBQ
                                                          g$id$11155$kwCBQ
                                                          g$lab$11156$kwCBQ
                                                          g$sd?$11125$kwCBQ)
                                                        ((case-lambda
                                                           ((g$b$11158$kwCBQ)
                                                            (g$chi-body*$8839$kwCBQ
                                                              (cdr g$e*$11115$kwCBQ)
                                                              (cons
                                                                (cons
                                                                  g$lab$11156$kwCBQ
                                                                  g$b$11158$kwCBQ)
                                                                g$r$11116$kwCBQ)
                                                              (cons
                                                                (cons
                                                                  g$lab$11156$kwCBQ
                                                                  g$b$11158$kwCBQ)
                                                                g$mr$11117$kwCBQ)
                                                              g$lex*$11118$kwCBQ
                                                              g$rhs*$11119$kwCBQ
                                                              g$mod**$11120$kwCBQ
                                                              g$kwd*$11136$kwCBQ
                                                              g$exp*$11122$kwCBQ
                                                              g$rib$11123$kwCBQ
                                                              g$mix?$11124$kwCBQ
                                                              g$sd?$11125$kwCBQ)))
                                                         (g$make-eval-transformer$8549$kwCBQ
                                                           g$expanded-rhs$11157$kwCBQ)))))
                                                   (g$expand-transformer$8840$kwCBQ
                                                     g$rhs$11154$kwCBQ
                                                     g$mr$11117$kwCBQ))))
                                               (g$gen-define-label$8460$kwCBQ
                                                 g$id$11155$kwCBQ
                                                 g$rib$11123$kwCBQ
                                                 g$sd?$11125$kwCBQ)))))
                                         g$rhs$11153$kwCBQ
                                         g$id$11152$kwCBQ))))
                                   (if (g$memv$5805$kwCBQ
                                         g$t$11137$kwCBQ
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$11159$kwCBQ)
                                         ((case-lambda
                                            ((g$ls/false$11160$kwCBQ)
                                             (if (if g$ls/false$11160$kwCBQ
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$11161$kwCBQ
                                                            g$xrhs*$11162$kwCBQ
                                                            g$xbody*$11163$kwCBQ)
                                                          (if (not (g$valid-bound-ids?$8521$kwCBQ
                                                                     g$xlhs*$11161$kwCBQ))
                                                            (g$syntax-violation$8907$kwCBQ
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$11126$kwCBQ)
                                                            (void))))
                                                       g$ls/false$11160$kwCBQ))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$11164$kwCBQ
                                                      g$xrhs*$11165$kwCBQ
                                                      g$xbody*$11166$kwCBQ)
                                                    ((case-lambda
                                                       ((g$xlab*$11167$kwCBQ)
                                                        ((case-lambda
                                                           ((g$xrib$11168$kwCBQ)
                                                            ((case-lambda
                                                               ((g$xb*$11169$kwCBQ)
                                                                (g$chi-body*$8839$kwCBQ
                                                                  (append
                                                                    (g$map$5812$kwCBQ
                                                                      (case-lambda
                                                                        ((g$x$11170$kwCBQ)
                                                                         (g$add-subst$8506$kwCBQ
                                                                           g$xrib$11168$kwCBQ
                                                                           g$x$11170$kwCBQ)))
                                                                      g$xbody*$11166$kwCBQ)
                                                                    (cdr g$e*$11115$kwCBQ))
                                                                  (append
                                                                    (g$map$5812$kwCBQ
                                                                      cons
                                                                      g$xlab*$11167$kwCBQ
                                                                      g$xb*$11169$kwCBQ)
                                                                    g$r$11116$kwCBQ)
                                                                  (append
                                                                    (g$map$5812$kwCBQ
                                                                      cons
                                                                      g$xlab*$11167$kwCBQ
                                                                      g$xb*$11169$kwCBQ)
                                                                    g$mr$11117$kwCBQ)
                                                                  g$lex*$11118$kwCBQ
                                                                  g$rhs*$11119$kwCBQ
                                                                  g$mod**$11120$kwCBQ
                                                                  g$kwd*$11136$kwCBQ
                                                                  g$exp*$11122$kwCBQ
                                                                  g$rib$11123$kwCBQ
                                                                  g$mix?$11124$kwCBQ
                                                                  g$sd?$11125$kwCBQ)))
                                                             (g$map$5812$kwCBQ
                                                               (case-lambda
                                                                 ((g$x$11171$kwCBQ)
                                                                  (g$make-eval-transformer$8549$kwCBQ
                                                                    (g$expand-transformer$8840$kwCBQ
                                                                      (if (eq? g$type$11135$kwCBQ
                                                                               'let-syntax)
                                                                        g$x$11171$kwCBQ
                                                                        (g$add-subst$8506$kwCBQ
                                                                          g$xrib$11168$kwCBQ
                                                                          g$x$11171$kwCBQ))
                                                                      g$mr$11117$kwCBQ))))
                                                               g$xrhs*$11165$kwCBQ))))
                                                         (g$make-full-rib$8484$kwCBQ
                                                           g$xlhs*$11164$kwCBQ
                                                           g$xlab*$11167$kwCBQ))))
                                                     (g$map$5812$kwCBQ
                                                       g$gen-label$8457$kwCBQ
                                                       g$xlhs*$11164$kwCBQ))))
                                                 g$ls/false$11160$kwCBQ)
                                               (g$syntax-violation$8907$kwCBQ
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$11159$kwCBQ))))
                                          (g$syntax-dispatch$8795$kwCBQ
                                            g$t$11159$kwCBQ
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$11126$kwCBQ)
                                     (if (g$memv$5805$kwCBQ
                                           g$t$11137$kwCBQ
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$11172$kwCBQ)
                                           ((case-lambda
                                              ((g$ls/false$11173$kwCBQ)
                                               (if g$ls/false$11173$kwCBQ
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$11174$kwCBQ)
                                                      (g$chi-body*$8839$kwCBQ
                                                        (append
                                                          g$x*$11174$kwCBQ
                                                          (cdr g$e*$11115$kwCBQ))
                                                        g$r$11116$kwCBQ
                                                        g$mr$11117$kwCBQ
                                                        g$lex*$11118$kwCBQ
                                                        g$rhs*$11119$kwCBQ
                                                        g$mod**$11120$kwCBQ
                                                        g$kwd*$11136$kwCBQ
                                                        g$exp*$11122$kwCBQ
                                                        g$rib$11123$kwCBQ
                                                        g$mix?$11124$kwCBQ
                                                        g$sd?$11125$kwCBQ)))
                                                   g$ls/false$11173$kwCBQ)
                                                 (g$syntax-violation$8907$kwCBQ
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$11172$kwCBQ))))
                                            (g$syntax-dispatch$8795$kwCBQ
                                              g$t$11172$kwCBQ
                                              '(_ . each-any)))))
                                        g$e$11126$kwCBQ)
                                       (if (g$memv$5805$kwCBQ
                                             g$t$11137$kwCBQ
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8839$kwCBQ
                                           (cons
                                             (g$add-subst$8506$kwCBQ
                                               g$rib$11123$kwCBQ
                                               (g$chi-global-macro$8810$kwCBQ
                                                 g$value$11134$kwCBQ
                                                 g$e$11126$kwCBQ
                                                 g$r$11116$kwCBQ))
                                             (cdr g$e*$11115$kwCBQ))
                                           g$r$11116$kwCBQ
                                           g$mr$11117$kwCBQ
                                           g$lex*$11118$kwCBQ
                                           g$rhs*$11119$kwCBQ
                                           g$mod**$11120$kwCBQ
                                           g$kwd*$11136$kwCBQ
                                           g$exp*$11122$kwCBQ
                                           g$rib$11123$kwCBQ
                                           g$mix?$11124$kwCBQ
                                           g$sd?$11125$kwCBQ)
                                         (if (g$memv$5805$kwCBQ
                                               g$t$11137$kwCBQ
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8839$kwCBQ
                                             (cons
                                               (g$add-subst$8506$kwCBQ
                                                 g$rib$11123$kwCBQ
                                                 (g$chi-local-macro$8809$kwCBQ
                                                   g$value$11134$kwCBQ
                                                   g$e$11126$kwCBQ
                                                   g$r$11116$kwCBQ))
                                               (cdr g$e*$11115$kwCBQ))
                                             g$r$11116$kwCBQ
                                             g$mr$11117$kwCBQ
                                             g$lex*$11118$kwCBQ
                                             g$rhs*$11119$kwCBQ
                                             g$mod**$11120$kwCBQ
                                             g$kwd*$11136$kwCBQ
                                             g$exp*$11122$kwCBQ
                                             g$rib$11123$kwCBQ
                                             g$mix?$11124$kwCBQ
                                             g$sd?$11125$kwCBQ)
                                           (if (g$memv$5805$kwCBQ
                                                 g$t$11137$kwCBQ
                                                 '(macro macro!))
                                             (g$chi-body*$8839$kwCBQ
                                               (cons
                                                 (g$add-subst$8506$kwCBQ
                                                   g$rib$11123$kwCBQ
                                                   (g$chi-macro$8808$kwCBQ
                                                     g$value$11134$kwCBQ
                                                     g$e$11126$kwCBQ
                                                     g$r$11116$kwCBQ))
                                                 (cdr g$e*$11115$kwCBQ))
                                               g$r$11116$kwCBQ
                                               g$mr$11117$kwCBQ
                                               g$lex*$11118$kwCBQ
                                               g$rhs*$11119$kwCBQ
                                               g$mod**$11120$kwCBQ
                                               g$kwd*$11136$kwCBQ
                                               g$exp*$11122$kwCBQ
                                               g$rib$11123$kwCBQ
                                               g$mix?$11124$kwCBQ
                                               g$sd?$11125$kwCBQ)
                                             (if (g$memv$5805$kwCBQ
                                                   g$t$11137$kwCBQ
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8838$kwCBQ
                                                      g$e$11126$kwCBQ
                                                      g$r$11116$kwCBQ
                                                      g$mr$11117$kwCBQ
                                                      g$lex*$11118$kwCBQ
                                                      g$rhs*$11119$kwCBQ
                                                      g$mod**$11120$kwCBQ
                                                      g$kwd*$11136$kwCBQ)))
                                                 (case-lambda
                                                   ((g$lex*$11183$kwCBQ
                                                      g$rhs*$11184$kwCBQ
                                                      g$m-exp-id*$11185$kwCBQ
                                                      g$m-exp-lab*$11186$kwCBQ
                                                      g$r$11187$kwCBQ
                                                      g$mr$11188$kwCBQ
                                                      g$mod**$11189$kwCBQ
                                                      g$kwd*$11190$kwCBQ)
                                                    ((case-lambda
                                                       ((g$kwd*$11191$kwCBQ
                                                          g$mod**$11192$kwCBQ
                                                          g$mr$11193$kwCBQ
                                                          g$r$11194$kwCBQ
                                                          g$m-exp-lab*$11195$kwCBQ
                                                          g$m-exp-id*$11196$kwCBQ
                                                          g$rhs*$11197$kwCBQ
                                                          g$lex*$11198$kwCBQ)
                                                        (begin
                                                          (g$vector-for-each$6090$kwCBQ
                                                            (case-lambda
                                                              ((g$id$11199$kwCBQ
                                                                 g$lab$11200$kwCBQ)
                                                               (g$extend-rib!$8479$kwCBQ
                                                                 g$rib$11123$kwCBQ
                                                                 g$id$11199$kwCBQ
                                                                 g$lab$11200$kwCBQ
                                                                 g$sd?$11125$kwCBQ)))
                                                            g$m-exp-id*$11196$kwCBQ
                                                            g$m-exp-lab*$11195$kwCBQ)
                                                          (g$chi-body*$8839$kwCBQ
                                                            (cdr g$e*$11115$kwCBQ)
                                                            g$r$11194$kwCBQ
                                                            g$mr$11193$kwCBQ
                                                            g$lex*$11198$kwCBQ
                                                            g$rhs*$11197$kwCBQ
                                                            g$mod**$11192$kwCBQ
                                                            g$kwd*$11191$kwCBQ
                                                            g$exp*$11122$kwCBQ
                                                            g$rib$11123$kwCBQ
                                                            g$mix?$11124$kwCBQ
                                                            g$sd?$11125$kwCBQ))))
                                                     g$kwd*$11190$kwCBQ
                                                     g$mod**$11189$kwCBQ
                                                     g$mr$11188$kwCBQ
                                                     g$r$11187$kwCBQ
                                                     g$m-exp-lab*$11186$kwCBQ
                                                     g$m-exp-id*$11185$kwCBQ
                                                     g$rhs*$11184$kwCBQ
                                                     g$lex*$11183$kwCBQ))))
                                               (if (g$memv$5805$kwCBQ
                                                     g$t$11137$kwCBQ
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8891$kwCBQ
                                                     (g$stx->datum$8527$kwCBQ
                                                       g$e$11126$kwCBQ))
                                                   (g$chi-body*$8839$kwCBQ
                                                     (cdr g$e*$11115$kwCBQ)
                                                     g$r$11116$kwCBQ
                                                     g$mr$11117$kwCBQ
                                                     g$lex*$11118$kwCBQ
                                                     g$rhs*$11119$kwCBQ
                                                     g$mod**$11120$kwCBQ
                                                     g$kwd*$11136$kwCBQ
                                                     g$exp*$11122$kwCBQ
                                                     g$rib$11123$kwCBQ
                                                     g$mix?$11124$kwCBQ
                                                     g$sd?$11125$kwCBQ))
                                                 (if (g$memv$5805$kwCBQ
                                                       g$t$11137$kwCBQ
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$11201$kwCBQ)
                                                       ((case-lambda
                                                          ((g$ls/false$11202$kwCBQ)
                                                           (if g$ls/false$11202$kwCBQ
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$11203$kwCBQ)
                                                                  (g$chi-body*$8839$kwCBQ
                                                                    (cdr g$e*$11115$kwCBQ)
                                                                    g$r$11116$kwCBQ
                                                                    g$mr$11117$kwCBQ
                                                                    g$lex*$11118$kwCBQ
                                                                    g$rhs*$11119$kwCBQ
                                                                    g$mod**$11120$kwCBQ
                                                                    g$kwd*$11136$kwCBQ
                                                                    (append
                                                                      g$exp-decl*$11203$kwCBQ
                                                                      g$exp*$11122$kwCBQ)
                                                                    g$rib$11123$kwCBQ
                                                                    g$mix?$11124$kwCBQ
                                                                    g$sd?$11125$kwCBQ)))
                                                               g$ls/false$11202$kwCBQ)
                                                             (g$syntax-violation$8907$kwCBQ
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$11201$kwCBQ))))
                                                        (g$syntax-dispatch$8795$kwCBQ
                                                          g$t$11201$kwCBQ
                                                          '(_ . each-any)))))
                                                    g$e$11126$kwCBQ)
                                                   (if (g$memv$5805$kwCBQ
                                                         g$t$11137$kwCBQ
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$11204$kwCBQ
                                                                     (case-lambda
                                                                       ((g$e$11246$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$t$11247$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$11248$kwCBQ)
                                                                                (if (if g$ls/false$11248$kwCBQ
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$11249$kwCBQ)
                                                                                             (g$id?$8516$kwCBQ
                                                                                               g$id$11249$kwCBQ)))
                                                                                          g$ls/false$11248$kwCBQ))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$11250$kwCBQ)
                                                                                       '#t))
                                                                                    g$ls/false$11248$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$t$11251$kwCBQ)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$11252$kwCBQ)
                                                                                          (if g$ls/false$11252$kwCBQ
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$11253$kwCBQ)
                                                                                                 '#f))
                                                                                              g$ls/false$11252$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$t$11254$kwCBQ)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$11255$kwCBQ)
                                                                                                    (if g$ls/false$11255$kwCBQ
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8907$kwCBQ
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$11246$kwCBQ)))
                                                                                                        g$ls/false$11255$kwCBQ)
                                                                                                      (g$syntax-violation$8907$kwCBQ
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$11254$kwCBQ))))
                                                                                                 (g$syntax-dispatch$8795$kwCBQ
                                                                                                   g$t$11254$kwCBQ
                                                                                                   '_))))
                                                                                             g$t$11251$kwCBQ))))
                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                         g$t$11251$kwCBQ
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$11247$kwCBQ))))
                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                               g$t$11247$kwCBQ
                                                                               '(_ any)))))
                                                                         g$e$11246$kwCBQ))))
                                                                   (g$module-import$11205$kwCBQ
                                                                     (case-lambda
                                                                       ((g$e$11229$kwCBQ
                                                                          g$r$11230$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$t$11231$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$11232$kwCBQ)
                                                                                (if (if g$ls/false$11232$kwCBQ
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$11233$kwCBQ)
                                                                                             (g$id?$8516$kwCBQ
                                                                                               g$id$11233$kwCBQ)))
                                                                                          g$ls/false$11232$kwCBQ))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$11234$kwCBQ)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8536$kwCBQ
                                                                                              g$id$11234$kwCBQ
                                                                                              g$r$11230$kwCBQ)))
                                                                                         (case-lambda
                                                                                           ((g$type$11238$kwCBQ
                                                                                              g$value$11239$kwCBQ
                                                                                              g$kwd$11240$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$11241$kwCBQ
                                                                                                  g$value$11242$kwCBQ
                                                                                                  g$type$11243$kwCBQ)
                                                                                                ((case-lambda
                                                                                                   ((g$t$11244$kwCBQ)
                                                                                                    (if (g$memv$5805$kwCBQ
                                                                                                          g$t$11244$kwCBQ
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$11245$kwCBQ)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8837$kwCBQ
                                                                                                              g$iface$11245$kwCBQ
                                                                                                              g$id$11234$kwCBQ)
                                                                                                            (g$module-interface-exp-lab-vec$8833$kwCBQ
                                                                                                              g$iface$11245$kwCBQ))))
                                                                                                       g$value$11242$kwCBQ)
                                                                                                      (g$syntax-violation$8907$kwCBQ
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$11229$kwCBQ))))
                                                                                                 g$type$11243$kwCBQ)))
                                                                                             g$kwd$11240$kwCBQ
                                                                                             g$value$11239$kwCBQ
                                                                                             g$type$11238$kwCBQ))))))
                                                                                    g$ls/false$11232$kwCBQ)
                                                                                  (g$syntax-violation$8907$kwCBQ
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$11231$kwCBQ))))
                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                               g$t$11231$kwCBQ
                                                                               '(_ any)))))
                                                                         g$e$11229$kwCBQ))))
                                                                   (g$library-import$11206$kwCBQ
                                                                     (case-lambda
                                                                       ((g$e$11215$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$t$11216$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$11217$kwCBQ)
                                                                                (if g$ls/false$11217$kwCBQ
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$11218$kwCBQ
                                                                                         g$imp*$11219$kwCBQ)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8844$kwCBQ
                                                                                              (g$syntax->datum$8910$kwCBQ
                                                                                                g$imp*$11219$kwCBQ))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$11222$kwCBQ
                                                                                              g$subst-labels$11223$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$11224$kwCBQ
                                                                                                  g$subst-names$11225$kwCBQ)
                                                                                                (values
                                                                                                  (g$vector-map$6089$kwCBQ
                                                                                                    (case-lambda
                                                                                                      ((g$name$11226$kwCBQ)
                                                                                                       (g$datum->stx$8499$kwCBQ
                                                                                                         g$ctxt$11218$kwCBQ
                                                                                                         g$name$11226$kwCBQ)))
                                                                                                    g$subst-names$11225$kwCBQ)
                                                                                                  g$subst-labels$11224$kwCBQ)))
                                                                                             g$subst-labels$11223$kwCBQ
                                                                                             g$subst-names$11222$kwCBQ))))))
                                                                                    g$ls/false$11217$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$t$11227$kwCBQ)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$11228$kwCBQ)
                                                                                          (if g$ls/false$11228$kwCBQ
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8907$kwCBQ
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$11215$kwCBQ)))
                                                                                              g$ls/false$11228$kwCBQ)
                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$11227$kwCBQ))))
                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                         g$t$11227$kwCBQ
                                                                                         '_))))
                                                                                   g$t$11216$kwCBQ))))
                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                               g$t$11216$kwCBQ
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$11215$kwCBQ)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$11204$kwCBQ
                                                                        g$e$11126$kwCBQ)
                                                                    (g$module-import$11205$kwCBQ
                                                                      g$e$11126$kwCBQ
                                                                      g$r$11116$kwCBQ)
                                                                    (g$library-import$11206$kwCBQ
                                                                      g$e$11126$kwCBQ))))
                                                               (case-lambda
                                                                 ((g$id*$11209$kwCBQ
                                                                    g$lab*$11210$kwCBQ)
                                                                  ((case-lambda
                                                                     ((g$lab*$11211$kwCBQ
                                                                        g$id*$11212$kwCBQ)
                                                                      (g$vector-for-each$6090$kwCBQ
                                                                        (case-lambda
                                                                          ((g$id$11213$kwCBQ
                                                                             g$lab$11214$kwCBQ)
                                                                           (g$extend-rib!$8479$kwCBQ
                                                                             g$rib$11123$kwCBQ
                                                                             g$id$11213$kwCBQ
                                                                             g$lab$11214$kwCBQ
                                                                             g$sd?$11125$kwCBQ)))
                                                                        g$id*$11212$kwCBQ
                                                                        g$lab*$11211$kwCBQ)))
                                                                   g$lab*$11210$kwCBQ
                                                                   g$id*$11209$kwCBQ))))
                                                             (g$chi-body*$8839$kwCBQ
                                                               (cdr g$e*$11115$kwCBQ)
                                                               g$r$11116$kwCBQ
                                                               g$mr$11117$kwCBQ
                                                               g$lex*$11118$kwCBQ
                                                               g$rhs*$11119$kwCBQ
                                                               g$mod**$11120$kwCBQ
                                                               g$kwd*$11136$kwCBQ
                                                               g$exp*$11122$kwCBQ
                                                               g$rib$11123$kwCBQ
                                                               g$mix?$11124$kwCBQ
                                                               g$sd?$11125$kwCBQ))))))
                                                     (if g$mix?$11124$kwCBQ
                                                       (g$chi-body*$8839$kwCBQ
                                                         (cdr g$e*$11115$kwCBQ)
                                                         g$r$11116$kwCBQ
                                                         g$mr$11117$kwCBQ
                                                         (cons
                                                           (g$gen-lexical$8455$kwCBQ
                                                             'dummy)
                                                           g$lex*$11118$kwCBQ)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$11126$kwCBQ)
                                                           g$rhs*$11119$kwCBQ)
                                                         g$mod**$11120$kwCBQ
                                                         g$kwd*$11136$kwCBQ
                                                         g$exp*$11122$kwCBQ
                                                         g$rib$11123$kwCBQ
                                                         '#t
                                                         g$sd?$11125$kwCBQ)
                                                       (values
                                                         g$e*$11115$kwCBQ
                                                         g$r$11116$kwCBQ
                                                         g$mr$11117$kwCBQ
                                                         g$lex*$11118$kwCBQ
                                                         g$rhs*$11119$kwCBQ
                                                         g$mod**$11120$kwCBQ
                                                         g$kwd*$11136$kwCBQ
                                                         g$exp*$11122$kwCBQ)))))))))))))))
                            g$type$11135$kwCBQ)))
                        (if (g$id?$8516$kwCBQ g$kwd$11133$kwCBQ)
                          (cons g$kwd$11133$kwCBQ g$kwd*$11121$kwCBQ)
                          g$kwd*$11121$kwCBQ))))
                    g$kwd$11132$kwCBQ
                    g$value$11131$kwCBQ
                    g$type$11130$kwCBQ))))))
           (car g$e*$11115$kwCBQ))))))
   (g$expand-transformer$8840$kwCBQ
     g$expand-transformer$12358$kwCBQ
     (case-lambda
       ((g$expr$11256$kwCBQ g$r$11257$kwCBQ)
        ((case-lambda
           ((g$rtc$11258$kwCBQ)
            ((case-lambda
               ((g$expanded-rhs$11259$kwCBQ)
                (begin
                  (g$for-each$5813$kwCBQ
                    ((case-lambda
                       ((g$mark-visit$11260$kwCBQ)
                        (case-lambda
                          ((g$x$11261$kwCBQ)
                           (begin
                             (g$invoke-library$8326$kwCBQ g$x$11261$kwCBQ)
                             (g$mark-visit$11260$kwCBQ g$x$11261$kwCBQ))))))
                     (g$vis-collector$8848$kwCBQ))
                    (g$rtc$11258$kwCBQ))
                  g$expanded-rhs$11259$kwCBQ)))
             ((case-lambda
                ((g$inv-collector$11266$kwCBQ
                   g$vis-collector$11267$kwCBQ
                   g$inv-collector$11268$kwCBQ
                   g$vis-collector$11269$kwCBQ)
                 ((case-lambda
                    ((g$swap$11270$kwCBQ)
                     (dynamic-wind
                       g$swap$11270$kwCBQ
                       (case-lambda
                         (()
                          (g$chi-expr$8813$kwCBQ
                            g$expr$11256$kwCBQ
                            g$r$11257$kwCBQ
                            g$r$11257$kwCBQ)))
                       g$swap$11270$kwCBQ)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$11271$kwCBQ)
                           (begin
                             (g$inv-collector$11266$kwCBQ
                               g$inv-collector$11268$kwCBQ)
                             (set! g$inv-collector$11268$kwCBQ
                               g$t$11271$kwCBQ))))
                        (g$inv-collector$11266$kwCBQ))
                       ((case-lambda
                          ((g$t$11272$kwCBQ)
                           (begin
                             (g$vis-collector$11267$kwCBQ
                               g$vis-collector$11269$kwCBQ)
                             (set! g$vis-collector$11269$kwCBQ
                               g$t$11272$kwCBQ))))
                        (g$vis-collector$11267$kwCBQ))))))))
              g$inv-collector$8847$kwCBQ
              g$vis-collector$8848$kwCBQ
              g$rtc$11258$kwCBQ
              (case-lambda ((g$x$11273$kwCBQ) (values)))))))
         (g$make-collector$8846$kwCBQ)))))
   (g$parse-exports$8841$kwCBQ
     g$parse-exports$12359$kwCBQ
     (case-lambda
       ((g$exp*$11274$kwCBQ)
        ((letrec ((g$f$11275$kwCBQ
                    (case-lambda
                      ((g$exp*$11276$kwCBQ
                         g$int*$11277$kwCBQ
                         g$ext*$11278$kwCBQ)
                       (if (null? g$exp*$11276$kwCBQ)
                         (begin
                           (if (not (g$valid-bound-ids?$8521$kwCBQ
                                      g$ext*$11278$kwCBQ))
                             (g$syntax-violation$8907$kwCBQ
                               'export
                               '"invalid exports"
                               (g$find-dups$8823$kwCBQ g$ext*$11278$kwCBQ))
                             (void))
                           (values
                             (g$map$5812$kwCBQ
                               g$syntax->datum$8910$kwCBQ
                               g$ext*$11278$kwCBQ)
                             g$int*$11277$kwCBQ))
                         ((case-lambda
                            ((g$t$11279$kwCBQ)
                             ((case-lambda
                                ((g$ls/false$11280$kwCBQ)
                                 (if g$ls/false$11280$kwCBQ
                                   (apply
                                     (case-lambda
                                       ((g$rename$11281$kwCBQ
                                          g$i*$11282$kwCBQ
                                          g$e*$11283$kwCBQ)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8910$kwCBQ
                                                              g$rename$11281$kwCBQ)
                                                            'rename)
                                                     (if (g$for-all$5810$kwCBQ
                                                           g$id?$8516$kwCBQ
                                                           g$i*$11282$kwCBQ)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5810$kwCBQ
                                                           g$id?$8516$kwCBQ
                                                           g$e*$11283$kwCBQ))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8907$kwCBQ
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$11276$kwCBQ))
                                            (void))
                                          (g$f$11275$kwCBQ
                                            (cdr g$exp*$11276$kwCBQ)
                                            (append
                                              g$i*$11282$kwCBQ
                                              g$int*$11277$kwCBQ)
                                            (append
                                              g$e*$11283$kwCBQ
                                              g$ext*$11278$kwCBQ)))))
                                     g$ls/false$11280$kwCBQ)
                                   ((case-lambda
                                      ((g$t$11284$kwCBQ)
                                       ((case-lambda
                                          ((g$ls/false$11285$kwCBQ)
                                           (if g$ls/false$11285$kwCBQ
                                             (apply
                                               (case-lambda
                                                 ((g$ie$11286$kwCBQ)
                                                  (begin
                                                    (if (not (g$id?$8516$kwCBQ
                                                               g$ie$11286$kwCBQ))
                                                      (g$syntax-violation$8907$kwCBQ
                                                        'export
                                                        '"invalid export"
                                                        g$ie$11286$kwCBQ)
                                                      (void))
                                                    (g$f$11275$kwCBQ
                                                      (cdr g$exp*$11276$kwCBQ)
                                                      (cons
                                                        g$ie$11286$kwCBQ
                                                        g$int*$11277$kwCBQ)
                                                      (cons
                                                        g$ie$11286$kwCBQ
                                                        g$ext*$11278$kwCBQ)))))
                                               g$ls/false$11285$kwCBQ)
                                             (g$syntax-violation$8907$kwCBQ
                                               '#f
                                               '"invalid syntax"
                                               g$t$11284$kwCBQ))))
                                        (g$syntax-dispatch$8795$kwCBQ
                                          g$t$11284$kwCBQ
                                          'any))))
                                    g$t$11279$kwCBQ))))
                              (g$syntax-dispatch$8795$kwCBQ
                                g$t$11279$kwCBQ
                                '(any . #(each (any any)))))))
                          (car g$exp*$11276$kwCBQ)))))))
           g$f$11275$kwCBQ)
         g$exp*$11274$kwCBQ
         '()
         '()))))
   (g$parse-library-name$8842$kwCBQ
     g$parse-library-name$12360$kwCBQ
     (case-lambda
       ((g$spec$11287$kwCBQ)
        (letrec* ((g$parse$11288$kwCBQ
                    (case-lambda
                      ((g$x$11295$kwCBQ)
                       ((case-lambda
                          ((g$t$11296$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$11297$kwCBQ)
                               (if (if g$ls/false$11297$kwCBQ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$11298$kwCBQ)
                                            (g$for-all$5810$kwCBQ
                                              (case-lambda
                                                ((g$x$11299$kwCBQ)
                                                 ((case-lambda
                                                    ((g$x$11300$kwCBQ)
                                                     (if (integer?
                                                           g$x$11300$kwCBQ)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$11300$kwCBQ))
                                                       '#f)))
                                                  (g$syntax->datum$8910$kwCBQ
                                                    g$x$11299$kwCBQ))))
                                              g$v*$11298$kwCBQ)))
                                         g$ls/false$11297$kwCBQ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$11301$kwCBQ)
                                      (values
                                        '()
                                        (g$map$5812$kwCBQ
                                          g$syntax->datum$8910$kwCBQ
                                          g$v*$11301$kwCBQ))))
                                   g$ls/false$11297$kwCBQ)
                                 ((case-lambda
                                    ((g$t$11302$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$11303$kwCBQ)
                                         (if (if g$ls/false$11303$kwCBQ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$11304$kwCBQ
                                                        g$rest$11305$kwCBQ)
                                                      (symbol?
                                                        (g$syntax->datum$8910$kwCBQ
                                                          g$x$11304$kwCBQ))))
                                                   g$ls/false$11303$kwCBQ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$11306$kwCBQ
                                                  g$rest$11307$kwCBQ)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$11288$kwCBQ
                                                       g$rest$11307$kwCBQ)))
                                                  (case-lambda
                                                    ((g$x*$11310$kwCBQ
                                                       g$v*$11311$kwCBQ)
                                                     ((case-lambda
                                                        ((g$v*$11312$kwCBQ
                                                           g$x*$11313$kwCBQ)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8910$kwCBQ
                                                               g$x$11306$kwCBQ)
                                                             g$x*$11313$kwCBQ)
                                                           g$v*$11312$kwCBQ)))
                                                      g$v*$11311$kwCBQ
                                                      g$x*$11310$kwCBQ))))))
                                             g$ls/false$11303$kwCBQ)
                                           ((case-lambda
                                              ((g$t$11314$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$11315$kwCBQ)
                                                   (if g$ls/false$11315$kwCBQ
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$11315$kwCBQ)
                                                     ((case-lambda
                                                        ((g$t$11316$kwCBQ)
                                                         ((case-lambda
                                                            ((g$ls/false$11317$kwCBQ)
                                                             (if g$ls/false$11317$kwCBQ
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8907$kwCBQ
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$11287$kwCBQ)))
                                                                 g$ls/false$11317$kwCBQ)
                                                               (g$syntax-violation$8907$kwCBQ
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$11316$kwCBQ))))
                                                          (g$syntax-dispatch$8795$kwCBQ
                                                            g$t$11316$kwCBQ
                                                            '_))))
                                                      g$t$11314$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$11314$kwCBQ
                                                  '()))))
                                            g$t$11302$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$11302$kwCBQ
                                        '(any . any)))))
                                  g$t$11296$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$11296$kwCBQ
                              '(each-any)))))
                        g$x$11295$kwCBQ)))))
          (call-with-values
            (case-lambda (() (g$parse$11288$kwCBQ g$spec$11287$kwCBQ)))
            (case-lambda
              ((g$name*$11291$kwCBQ g$ver*$11292$kwCBQ)
               ((case-lambda
                  ((g$ver*$11293$kwCBQ g$name*$11294$kwCBQ)
                   (begin
                     (if (null? g$name*$11294$kwCBQ)
                       (g$syntax-violation$8907$kwCBQ
                         '#f
                         '"empty library name"
                         g$spec$11287$kwCBQ)
                       (void))
                     (values g$name*$11294$kwCBQ g$ver*$11293$kwCBQ))))
                g$ver*$11292$kwCBQ
                g$name*$11291$kwCBQ))))))))
   (g$parse-library$8843$kwCBQ
     g$parse-library$12361$kwCBQ
     (case-lambda
       ((g$e$11318$kwCBQ)
        ((case-lambda
           ((g$t$11319$kwCBQ)
            ((case-lambda
               ((g$ls/false$11320$kwCBQ)
                (if (if g$ls/false$11320$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$11321$kwCBQ
                               g$name*$11322$kwCBQ
                               g$export$11323$kwCBQ
                               g$exp*$11324$kwCBQ
                               g$import$11325$kwCBQ
                               g$imp*$11326$kwCBQ
                               g$b*$11327$kwCBQ)
                             (if (eq? (g$syntax->datum$8910$kwCBQ
                                        g$export$11323$kwCBQ)
                                      'export)
                               (if (eq? (g$syntax->datum$8910$kwCBQ
                                          g$import$11325$kwCBQ)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8910$kwCBQ
                                          g$library$11321$kwCBQ)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$11320$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$11328$kwCBQ
                         g$name*$11329$kwCBQ
                         g$export$11330$kwCBQ
                         g$exp*$11331$kwCBQ
                         g$import$11332$kwCBQ
                         g$imp*$11333$kwCBQ
                         g$b*$11334$kwCBQ)
                       (values
                         g$name*$11329$kwCBQ
                         g$exp*$11331$kwCBQ
                         g$imp*$11333$kwCBQ
                         g$b*$11334$kwCBQ)))
                    g$ls/false$11320$kwCBQ)
                  ((case-lambda
                     ((g$t$11335$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$11336$kwCBQ)
                          (if g$ls/false$11336$kwCBQ
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8907$kwCBQ
                                   '#f
                                   '"malformed library"
                                   g$e$11318$kwCBQ)))
                              g$ls/false$11336$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$11335$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ g$t$11335$kwCBQ '_))))
                   g$t$11319$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$11319$kwCBQ
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$11318$kwCBQ))))
   (g$parse-import-spec*$8844$kwCBQ
     g$parse-import-spec*$12362$kwCBQ
     (case-lambda
       ((g$imp*$11337$kwCBQ)
        (letrec* ((g$idsyn?$11338$kwCBQ
                    (case-lambda
                      ((g$x$11598$kwCBQ)
                       (symbol? (g$syntax->datum$8910$kwCBQ g$x$11598$kwCBQ)))))
                  (g$dup-error$11339$kwCBQ
                    (case-lambda
                      ((g$name$11597$kwCBQ)
                       (g$syntax-violation$8907$kwCBQ
                         'import
                         '"two imports with different bindings"
                         g$name$11597$kwCBQ))))
                  (g$merge-substs$11340$kwCBQ
                    (case-lambda
                      ((g$s$11588$kwCBQ g$subst$11589$kwCBQ)
                       (letrec* ((g$insert-to-subst$11590$kwCBQ
                                   (case-lambda
                                     ((g$a$11591$kwCBQ g$subst$11592$kwCBQ)
                                      ((case-lambda
                                         ((g$name$11593$kwCBQ
                                            g$label$11594$kwCBQ)
                                          ((case-lambda
                                             ((g$t$11595$kwCBQ)
                                              (if g$t$11595$kwCBQ
                                                ((case-lambda
                                                   ((g$x$11596$kwCBQ)
                                                    (if (eq? (cdr g$x$11596$kwCBQ)
                                                             g$label$11594$kwCBQ)
                                                      g$subst$11592$kwCBQ
                                                      (g$dup-error$11339$kwCBQ
                                                        g$name$11593$kwCBQ))))
                                                 g$t$11595$kwCBQ)
                                                (cons
                                                  g$a$11591$kwCBQ
                                                  g$subst$11592$kwCBQ))))
                                           (g$assq$5800$kwCBQ
                                             g$name$11593$kwCBQ
                                             g$subst$11592$kwCBQ))))
                                       (car g$a$11591$kwCBQ)
                                       (cdr g$a$11591$kwCBQ))))))
                         (if (null? g$s$11588$kwCBQ)
                           g$subst$11589$kwCBQ
                           (g$insert-to-subst$11590$kwCBQ
                             (car g$s$11588$kwCBQ)
                             (g$merge-substs$11340$kwCBQ
                               (cdr g$s$11588$kwCBQ)
                               g$subst$11589$kwCBQ)))))))
                  (g$exclude*$11341$kwCBQ
                    (case-lambda
                      ((g$sym*$11564$kwCBQ g$subst$11565$kwCBQ)
                       (letrec* ((g$exclude$11566$kwCBQ
                                   (case-lambda
                                     ((g$sym$11579$kwCBQ g$subst$11580$kwCBQ)
                                      (if (null? g$subst$11580$kwCBQ)
                                        (g$syntax-violation$8907$kwCBQ
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$11579$kwCBQ)
                                        (if (eq? g$sym$11579$kwCBQ
                                                 (g$caar$6037$kwCBQ
                                                   g$subst$11580$kwCBQ))
                                          (values
                                            (g$cdar$6039$kwCBQ
                                              g$subst$11580$kwCBQ)
                                            (cdr g$subst$11580$kwCBQ))
                                          ((case-lambda
                                             ((g$a$11581$kwCBQ)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$11566$kwCBQ
                                                     g$sym$11579$kwCBQ
                                                     (cdr g$subst$11580$kwCBQ))))
                                                (case-lambda
                                                  ((g$old$11584$kwCBQ
                                                     g$subst$11585$kwCBQ)
                                                   ((case-lambda
                                                      ((g$subst$11586$kwCBQ
                                                         g$old$11587$kwCBQ)
                                                       (values
                                                         g$old$11587$kwCBQ
                                                         (cons
                                                           g$a$11581$kwCBQ
                                                           g$subst$11586$kwCBQ))))
                                                    g$subst$11585$kwCBQ
                                                    g$old$11584$kwCBQ))))))
                                           (car g$subst$11580$kwCBQ))))))))
                         (if (null? g$sym*$11564$kwCBQ)
                           (values '() g$subst$11565$kwCBQ)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$11566$kwCBQ
                                  (car g$sym*$11564$kwCBQ)
                                  g$subst$11565$kwCBQ)))
                             (case-lambda
                               ((g$old$11569$kwCBQ g$subst$11570$kwCBQ)
                                ((case-lambda
                                   ((g$subst$11571$kwCBQ g$old$11572$kwCBQ)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$11341$kwCBQ
                                           (cdr g$sym*$11564$kwCBQ)
                                           g$subst$11571$kwCBQ)))
                                      (case-lambda
                                        ((g$old*$11575$kwCBQ
                                           g$subst$11576$kwCBQ)
                                         ((case-lambda
                                            ((g$subst$11577$kwCBQ
                                               g$old*$11578$kwCBQ)
                                             (values
                                               (cons
                                                 g$old$11572$kwCBQ
                                                 g$old*$11578$kwCBQ)
                                               g$subst$11577$kwCBQ)))
                                          g$subst$11576$kwCBQ
                                          g$old*$11575$kwCBQ))))))
                                 g$subst$11570$kwCBQ
                                 g$old$11569$kwCBQ)))))))))
                  (g$find*$11342$kwCBQ
                    (case-lambda
                      ((g$sym*$11560$kwCBQ g$subst$11561$kwCBQ)
                       (g$map$5812$kwCBQ
                         (case-lambda
                           ((g$x$11562$kwCBQ)
                            ((case-lambda
                               ((g$t$11563$kwCBQ)
                                (if g$t$11563$kwCBQ
                                  (cdr g$t$11563$kwCBQ)
                                  (g$syntax-violation$8907$kwCBQ
                                    'import
                                    '"cannot find identifier"
                                    g$x$11562$kwCBQ))))
                             (g$assq$5800$kwCBQ
                               g$x$11562$kwCBQ
                               g$subst$11561$kwCBQ))))
                         g$sym*$11560$kwCBQ))))
                  (g$rem*$11343$kwCBQ
                    (case-lambda
                      ((g$sym*$11556$kwCBQ g$subst$11557$kwCBQ)
                       ((letrec ((g$f$11558$kwCBQ
                                   (case-lambda
                                     ((g$subst$11559$kwCBQ)
                                      (if (null? g$subst$11559$kwCBQ)
                                        '()
                                        (if (g$memq$5804$kwCBQ
                                              (g$caar$6037$kwCBQ
                                                g$subst$11559$kwCBQ)
                                              g$sym*$11556$kwCBQ)
                                          (g$f$11558$kwCBQ
                                            (cdr g$subst$11559$kwCBQ))
                                          (cons
                                            (car g$subst$11559$kwCBQ)
                                            (g$f$11558$kwCBQ
                                              (cdr g$subst$11559$kwCBQ)))))))))
                          g$f$11558$kwCBQ)
                        g$subst$11557$kwCBQ))))
                  (g$remove-dups$11344$kwCBQ
                    (case-lambda
                      ((g$ls$11555$kwCBQ)
                       (if (null? g$ls$11555$kwCBQ)
                         '()
                         (if (g$memq$5804$kwCBQ
                               (car g$ls$11555$kwCBQ)
                               (cdr g$ls$11555$kwCBQ))
                           (g$remove-dups$11344$kwCBQ (cdr g$ls$11555$kwCBQ))
                           (cons
                             (car g$ls$11555$kwCBQ)
                             (g$remove-dups$11344$kwCBQ
                               (cdr g$ls$11555$kwCBQ))))))))
                  (g$parse-library-name$11345$kwCBQ
                    (case-lambda
                      ((g$spec$11439$kwCBQ)
                       (letrec* ((g$subversion?$11440$kwCBQ
                                   (case-lambda
                                     ((g$x$11553$kwCBQ)
                                      ((case-lambda
                                         ((g$x$11554$kwCBQ)
                                          (if (integer? g$x$11554$kwCBQ)
                                            (if (exact? g$x$11554$kwCBQ)
                                              (begin
                                                '#f
                                                (>= g$x$11554$kwCBQ '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$8910$kwCBQ
                                         g$x$11553$kwCBQ)))))
                                 (g$subversion-pred$11441$kwCBQ
                                   (case-lambda
                                     ((g$x*$11505$kwCBQ)
                                      ((case-lambda
                                         ((g$t$11506$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$11507$kwCBQ)
                                              (if (if g$ls/false$11507$kwCBQ
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$11508$kwCBQ)
                                                           (g$subversion?$11440$kwCBQ
                                                             g$n$11508$kwCBQ)))
                                                        g$ls/false$11507$kwCBQ))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$11509$kwCBQ)
                                                     (case-lambda
                                                       ((g$x$11510$kwCBQ)
                                                        (= g$x$11510$kwCBQ
                                                           (g$syntax->datum$8910$kwCBQ
                                                             g$n$11509$kwCBQ))))))
                                                  g$ls/false$11507$kwCBQ)
                                                ((case-lambda
                                                   ((g$t$11511$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$11512$kwCBQ)
                                                        (if (if g$ls/false$11512$kwCBQ
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$11513$kwCBQ
                                                                       g$sub*$11514$kwCBQ)
                                                                     (eq? (g$syntax->datum$8910$kwCBQ
                                                                            g$p?$11513$kwCBQ)
                                                                          'and)))
                                                                  g$ls/false$11512$kwCBQ))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$11515$kwCBQ
                                                                 g$sub*$11516$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$p*$11517$kwCBQ)
                                                                   (case-lambda
                                                                     ((g$x$11518$kwCBQ)
                                                                      (g$for-all$5810$kwCBQ
                                                                        (case-lambda
                                                                          ((g$p$11519$kwCBQ)
                                                                           (g$p$11519$kwCBQ
                                                                             g$x$11518$kwCBQ)))
                                                                        g$p*$11517$kwCBQ)))))
                                                                (g$map$5812$kwCBQ
                                                                  g$subversion-pred$11441$kwCBQ
                                                                  g$sub*$11516$kwCBQ))))
                                                            g$ls/false$11512$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$11520$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$11521$kwCBQ)
                                                                  (if (if g$ls/false$11521$kwCBQ
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$11522$kwCBQ
                                                                                 g$sub*$11523$kwCBQ)
                                                                               (eq? (g$syntax->datum$8910$kwCBQ
                                                                                      g$p?$11522$kwCBQ)
                                                                                    'or)))
                                                                            g$ls/false$11521$kwCBQ))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$11524$kwCBQ
                                                                           g$sub*$11525$kwCBQ)
                                                                         ((case-lambda
                                                                            ((g$p*$11526$kwCBQ)
                                                                             (case-lambda
                                                                               ((g$x$11527$kwCBQ)
                                                                                (g$exists$5811$kwCBQ
                                                                                  (case-lambda
                                                                                    ((g$p$11528$kwCBQ)
                                                                                     (g$p$11528$kwCBQ
                                                                                       g$x$11527$kwCBQ)))
                                                                                  g$p*$11526$kwCBQ)))))
                                                                          (g$map$5812$kwCBQ
                                                                            g$subversion-pred$11441$kwCBQ
                                                                            g$sub*$11525$kwCBQ))))
                                                                      g$ls/false$11521$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$t$11529$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11530$kwCBQ)
                                                                            (if (if g$ls/false$11530$kwCBQ
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$11531$kwCBQ
                                                                                           g$sub$11532$kwCBQ)
                                                                                         (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                g$p?$11531$kwCBQ)
                                                                                              'not)))
                                                                                      g$ls/false$11530$kwCBQ))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$11533$kwCBQ
                                                                                     g$sub$11534$kwCBQ)
                                                                                   ((case-lambda
                                                                                      ((g$p$11535$kwCBQ)
                                                                                       (case-lambda
                                                                                         ((g$x$11536$kwCBQ)
                                                                                          (not (g$p$11535$kwCBQ
                                                                                                 g$x$11536$kwCBQ))))))
                                                                                    (g$subversion-pred$11441$kwCBQ
                                                                                      g$sub$11534$kwCBQ))))
                                                                                g$ls/false$11530$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$t$11537$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11538$kwCBQ)
                                                                                      (if (if g$ls/false$11538$kwCBQ
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$11539$kwCBQ
                                                                                                     g$n$11540$kwCBQ)
                                                                                                   (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                              g$p?$11539$kwCBQ)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$11440$kwCBQ
                                                                                                         g$n$11540$kwCBQ))
                                                                                                     '#f)))
                                                                                                g$ls/false$11538$kwCBQ))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$11541$kwCBQ
                                                                                               g$n$11542$kwCBQ)
                                                                                             (case-lambda
                                                                                               ((g$x$11543$kwCBQ)
                                                                                                (<= g$x$11543$kwCBQ
                                                                                                    (g$syntax->datum$8910$kwCBQ
                                                                                                      g$n$11542$kwCBQ))))))
                                                                                          g$ls/false$11538$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$t$11544$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11545$kwCBQ)
                                                                                                (if (if g$ls/false$11545$kwCBQ
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$11546$kwCBQ
                                                                                                               g$n$11547$kwCBQ)
                                                                                                             (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                                        g$p?$11546$kwCBQ)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$11440$kwCBQ
                                                                                                                   g$n$11547$kwCBQ))
                                                                                                               '#f)))
                                                                                                          g$ls/false$11545$kwCBQ))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$11548$kwCBQ
                                                                                                         g$n$11549$kwCBQ)
                                                                                                       (case-lambda
                                                                                                         ((g$x$11550$kwCBQ)
                                                                                                          (>= g$x$11550$kwCBQ
                                                                                                              (g$syntax->datum$8910$kwCBQ
                                                                                                                g$n$11549$kwCBQ))))))
                                                                                                    g$ls/false$11545$kwCBQ)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$11551$kwCBQ)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$11552$kwCBQ)
                                                                                                          (if g$ls/false$11552$kwCBQ
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$8907$kwCBQ
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$11439$kwCBQ
                                                                                                                   g$x*$11505$kwCBQ)))
                                                                                                              g$ls/false$11552$kwCBQ)
                                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$11551$kwCBQ))))
                                                                                                       (g$syntax-dispatch$8795$kwCBQ
                                                                                                         g$t$11551$kwCBQ
                                                                                                         '_))))
                                                                                                   g$t$11544$kwCBQ))))
                                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                                               g$t$11544$kwCBQ
                                                                                               '(any any)))))
                                                                                         g$t$11537$kwCBQ))))
                                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                                     g$t$11537$kwCBQ
                                                                                     '(any any)))))
                                                                               g$t$11529$kwCBQ))))
                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                           g$t$11529$kwCBQ
                                                                           '(any any)))))
                                                                     g$t$11520$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$11520$kwCBQ
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11511$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$11511$kwCBQ
                                                       '(any . each-any)))))
                                                 g$t$11506$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$11506$kwCBQ
                                             'any))))
                                       g$x*$11505$kwCBQ))))
                                 (g$version-pred$11442$kwCBQ
                                   (case-lambda
                                     ((g$x*$11465$kwCBQ)
                                      ((case-lambda
                                         ((g$t$11466$kwCBQ)
                                          ((case-lambda
                                             ((g$ls/false$11467$kwCBQ)
                                              (if g$ls/false$11467$kwCBQ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$11468$kwCBQ)
                                                        '#t))))
                                                  g$ls/false$11467$kwCBQ)
                                                ((case-lambda
                                                   ((g$t$11469$kwCBQ)
                                                    ((case-lambda
                                                       ((g$ls/false$11470$kwCBQ)
                                                        (if (if g$ls/false$11470$kwCBQ
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$11471$kwCBQ
                                                                       g$ver*$11472$kwCBQ)
                                                                     (eq? (g$syntax->datum$8910$kwCBQ
                                                                            g$c$11471$kwCBQ)
                                                                          'and)))
                                                                  g$ls/false$11470$kwCBQ))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$11473$kwCBQ
                                                                 g$ver*$11474$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$p*$11475$kwCBQ)
                                                                   (case-lambda
                                                                     ((g$x$11476$kwCBQ)
                                                                      (g$for-all$5810$kwCBQ
                                                                        (case-lambda
                                                                          ((g$p$11477$kwCBQ)
                                                                           (g$p$11477$kwCBQ
                                                                             g$x$11476$kwCBQ)))
                                                                        g$p*$11475$kwCBQ)))))
                                                                (g$map$5812$kwCBQ
                                                                  g$version-pred$11442$kwCBQ
                                                                  g$ver*$11474$kwCBQ))))
                                                            g$ls/false$11470$kwCBQ)
                                                          ((case-lambda
                                                             ((g$t$11478$kwCBQ)
                                                              ((case-lambda
                                                                 ((g$ls/false$11479$kwCBQ)
                                                                  (if (if g$ls/false$11479$kwCBQ
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$11480$kwCBQ
                                                                                 g$ver*$11481$kwCBQ)
                                                                               (eq? (g$syntax->datum$8910$kwCBQ
                                                                                      g$c$11480$kwCBQ)
                                                                                    'or)))
                                                                            g$ls/false$11479$kwCBQ))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$11482$kwCBQ
                                                                           g$ver*$11483$kwCBQ)
                                                                         ((case-lambda
                                                                            ((g$p*$11484$kwCBQ)
                                                                             (case-lambda
                                                                               ((g$x$11485$kwCBQ)
                                                                                (g$exists$5811$kwCBQ
                                                                                  (case-lambda
                                                                                    ((g$p$11486$kwCBQ)
                                                                                     (g$p$11486$kwCBQ
                                                                                       g$x$11485$kwCBQ)))
                                                                                  g$p*$11484$kwCBQ)))))
                                                                          (g$map$5812$kwCBQ
                                                                            g$version-pred$11442$kwCBQ
                                                                            g$ver*$11483$kwCBQ))))
                                                                      g$ls/false$11479$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$t$11487$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11488$kwCBQ)
                                                                            (if (if g$ls/false$11488$kwCBQ
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$11489$kwCBQ
                                                                                           g$ver$11490$kwCBQ)
                                                                                         (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                g$c$11489$kwCBQ)
                                                                                              'not)))
                                                                                      g$ls/false$11488$kwCBQ))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$11491$kwCBQ
                                                                                     g$ver$11492$kwCBQ)
                                                                                   ((case-lambda
                                                                                      ((g$p$11493$kwCBQ)
                                                                                       (case-lambda
                                                                                         ((g$x$11494$kwCBQ)
                                                                                          (not (g$p$11493$kwCBQ
                                                                                                 g$x$11494$kwCBQ))))))
                                                                                    (g$version-pred$11442$kwCBQ
                                                                                      g$ver$11492$kwCBQ))))
                                                                                g$ls/false$11488$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$t$11495$kwCBQ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11496$kwCBQ)
                                                                                      (if g$ls/false$11496$kwCBQ
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$11497$kwCBQ)
                                                                                             ((case-lambda
                                                                                                ((g$p*$11498$kwCBQ)
                                                                                                 (case-lambda
                                                                                                   ((g$x$11499$kwCBQ)
                                                                                                    ((letrec ((g$f$11500$kwCBQ
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$11501$kwCBQ
                                                                                                                     g$x$11502$kwCBQ)
                                                                                                                   (if (null?
                                                                                                                         g$p*$11501$kwCBQ)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$11502$kwCBQ)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$11501$kwCBQ)
                                                                                                                            (car g$x$11502$kwCBQ))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$11500$kwCBQ
                                                                                                                             (cdr g$p*$11501$kwCBQ)
                                                                                                                             (cdr g$x$11502$kwCBQ)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$11500$kwCBQ)
                                                                                                     g$p*$11498$kwCBQ
                                                                                                     g$x$11499$kwCBQ)))))
                                                                                              (g$map$5812$kwCBQ
                                                                                                g$subversion-pred$11441$kwCBQ
                                                                                                g$sub*$11497$kwCBQ))))
                                                                                          g$ls/false$11496$kwCBQ)
                                                                                        ((case-lambda
                                                                                           ((g$t$11503$kwCBQ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11504$kwCBQ)
                                                                                                (if g$ls/false$11504$kwCBQ
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$8907$kwCBQ
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$11439$kwCBQ
                                                                                                         g$x*$11465$kwCBQ)))
                                                                                                    g$ls/false$11504$kwCBQ)
                                                                                                  (g$syntax-violation$8907$kwCBQ
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$11503$kwCBQ))))
                                                                                             (g$syntax-dispatch$8795$kwCBQ
                                                                                               g$t$11503$kwCBQ
                                                                                               '_))))
                                                                                         g$t$11495$kwCBQ))))
                                                                                   (g$syntax-dispatch$8795$kwCBQ
                                                                                     g$t$11495$kwCBQ
                                                                                     'each-any))))
                                                                               g$t$11487$kwCBQ))))
                                                                         (g$syntax-dispatch$8795$kwCBQ
                                                                           g$t$11487$kwCBQ
                                                                           '(any any)))))
                                                                     g$t$11478$kwCBQ))))
                                                               (g$syntax-dispatch$8795$kwCBQ
                                                                 g$t$11478$kwCBQ
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11469$kwCBQ))))
                                                     (g$syntax-dispatch$8795$kwCBQ
                                                       g$t$11469$kwCBQ
                                                       '(any . each-any)))))
                                                 g$t$11466$kwCBQ))))
                                           (g$syntax-dispatch$8795$kwCBQ
                                             g$t$11466$kwCBQ
                                             '()))))
                                       g$x*$11465$kwCBQ)))))
                         ((letrec ((g$f$11443$kwCBQ
                                     (case-lambda
                                       ((g$x$11444$kwCBQ)
                                        ((case-lambda
                                           ((g$t$11445$kwCBQ)
                                            ((case-lambda
                                               ((g$ls/false$11446$kwCBQ)
                                                (if g$ls/false$11446$kwCBQ
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$11447$kwCBQ)
                                                       (values
                                                         '()
                                                         (g$version-pred$11442$kwCBQ
                                                           g$version-spec*$11447$kwCBQ))))
                                                    g$ls/false$11446$kwCBQ)
                                                  ((case-lambda
                                                     ((g$t$11448$kwCBQ)
                                                      ((case-lambda
                                                         ((g$ls/false$11449$kwCBQ)
                                                          (if (if g$ls/false$11449$kwCBQ
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$11450$kwCBQ
                                                                         g$x*$11451$kwCBQ)
                                                                       (g$idsyn?$11338$kwCBQ
                                                                         g$x$11450$kwCBQ)))
                                                                    g$ls/false$11449$kwCBQ))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$11452$kwCBQ
                                                                   g$x*$11453$kwCBQ)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$11443$kwCBQ
                                                                        g$x*$11453$kwCBQ)))
                                                                   (case-lambda
                                                                     ((g$name$11456$kwCBQ
                                                                        g$pred$11457$kwCBQ)
                                                                      ((case-lambda
                                                                         ((g$pred$11458$kwCBQ
                                                                            g$name$11459$kwCBQ)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$8910$kwCBQ
                                                                                g$x$11452$kwCBQ)
                                                                              g$name$11459$kwCBQ)
                                                                            g$pred$11458$kwCBQ)))
                                                                       g$pred$11457$kwCBQ
                                                                       g$name$11456$kwCBQ))))))
                                                              g$ls/false$11449$kwCBQ)
                                                            ((case-lambda
                                                               ((g$t$11460$kwCBQ)
                                                                ((case-lambda
                                                                   ((g$ls/false$11461$kwCBQ)
                                                                    (if g$ls/false$11461$kwCBQ
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$11462$kwCBQ)
                                                                                '#t)))))
                                                                        g$ls/false$11461$kwCBQ)
                                                                      ((case-lambda
                                                                         ((g$t$11463$kwCBQ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11464$kwCBQ)
                                                                              (if g$ls/false$11464$kwCBQ
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$8907$kwCBQ
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$11439$kwCBQ)))
                                                                                  g$ls/false$11464$kwCBQ)
                                                                                (g$syntax-violation$8907$kwCBQ
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$11463$kwCBQ))))
                                                                           (g$syntax-dispatch$8795$kwCBQ
                                                                             g$t$11463$kwCBQ
                                                                             '_))))
                                                                       g$t$11460$kwCBQ))))
                                                                 (g$syntax-dispatch$8795$kwCBQ
                                                                   g$t$11460$kwCBQ
                                                                   '()))))
                                                             g$t$11448$kwCBQ))))
                                                       (g$syntax-dispatch$8795$kwCBQ
                                                         g$t$11448$kwCBQ
                                                         '(any . any)))))
                                                   g$t$11445$kwCBQ))))
                                             (g$syntax-dispatch$8795$kwCBQ
                                               g$t$11445$kwCBQ
                                               '(each-any)))))
                                         g$x$11444$kwCBQ)))))
                            g$f$11443$kwCBQ)
                          g$spec$11439$kwCBQ)))))
                  (g$import-library$11346$kwCBQ
                    (case-lambda
                      ((g$spec*$11431$kwCBQ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$11345$kwCBQ
                              g$spec*$11431$kwCBQ)))
                         (case-lambda
                           ((g$name$11434$kwCBQ g$pred$11435$kwCBQ)
                            ((case-lambda
                               ((g$pred$11436$kwCBQ g$name$11437$kwCBQ)
                                (begin
                                  (if (null? g$name$11437$kwCBQ)
                                    (g$syntax-violation$8907$kwCBQ
                                      'import
                                      '"empty library name"
                                      g$spec*$11431$kwCBQ)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$11438$kwCBQ)
                                      (begin
                                        (if (not g$lib$11438$kwCBQ)
                                          (g$syntax-violation$8907$kwCBQ
                                            'import
                                            '"cannot find library with required name"
                                            g$name$11437$kwCBQ)
                                          (void))
                                        (if (not (g$pred$11436$kwCBQ
                                                   (g$library-version$8279$kwCBQ
                                                     g$lib$11438$kwCBQ)))
                                          (g$syntax-violation$8907$kwCBQ
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$11431$kwCBQ
                                            g$lib$11438$kwCBQ)
                                          (void))
                                        ((g$imp-collector$8849$kwCBQ)
                                         g$lib$11438$kwCBQ)
                                        (g$library-subst$8283$kwCBQ
                                          g$lib$11438$kwCBQ))))
                                   (g$find-library-by-name$8319$kwCBQ
                                     g$name$11437$kwCBQ)))))
                             g$pred$11435$kwCBQ
                             g$name$11434$kwCBQ)))))))
                  (g$get-import$11347$kwCBQ
                    (case-lambda
                      ((g$spec$11360$kwCBQ)
                       ((case-lambda
                          ((g$t$11361$kwCBQ)
                           ((case-lambda
                              ((g$ls/false$11362$kwCBQ)
                               (if (if g$ls/false$11362$kwCBQ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$11363$kwCBQ g$x*$11364$kwCBQ)
                                            (not (g$memq$5804$kwCBQ
                                                   (g$syntax->datum$8910$kwCBQ
                                                     g$x$11363$kwCBQ)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$11362$kwCBQ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$11365$kwCBQ g$x*$11366$kwCBQ)
                                      (g$import-library$11346$kwCBQ
                                        (cons
                                          g$x$11365$kwCBQ
                                          g$x*$11366$kwCBQ))))
                                   g$ls/false$11362$kwCBQ)
                                 ((case-lambda
                                    ((g$t$11367$kwCBQ)
                                     ((case-lambda
                                        ((g$ls/false$11368$kwCBQ)
                                         (if (if g$ls/false$11368$kwCBQ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$11369$kwCBQ
                                                        g$isp$11370$kwCBQ
                                                        g$old*$11371$kwCBQ
                                                        g$new*$11372$kwCBQ)
                                                      (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                 g$rename$11369$kwCBQ)
                                                               'rename)
                                                        (if (g$for-all$5810$kwCBQ
                                                              g$idsyn?$11338$kwCBQ
                                                              g$old*$11371$kwCBQ)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5810$kwCBQ
                                                              g$idsyn?$11338$kwCBQ
                                                              g$new*$11372$kwCBQ))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$11368$kwCBQ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$11373$kwCBQ
                                                  g$isp$11374$kwCBQ
                                                  g$old*$11375$kwCBQ
                                                  g$new*$11376$kwCBQ)
                                                ((case-lambda
                                                   ((g$subst$11377$kwCBQ
                                                      g$old*$11378$kwCBQ
                                                      g$new*$11379$kwCBQ)
                                                    ((case-lambda
                                                       ((g$old-label*$11380$kwCBQ)
                                                        ((case-lambda
                                                           ((g$subst$11381$kwCBQ)
                                                            (g$merge-substs$11340$kwCBQ
                                                              (g$map$5812$kwCBQ
                                                                cons
                                                                g$new*$11379$kwCBQ
                                                                g$old-label*$11380$kwCBQ)
                                                              g$subst$11381$kwCBQ)))
                                                         (g$rem*$11343$kwCBQ
                                                           g$old*$11378$kwCBQ
                                                           g$subst$11377$kwCBQ))))
                                                     (g$find*$11342$kwCBQ
                                                       g$old*$11378$kwCBQ
                                                       g$subst$11377$kwCBQ))))
                                                 (g$get-import$11347$kwCBQ
                                                   g$isp$11374$kwCBQ)
                                                 (g$map$5812$kwCBQ
                                                   g$syntax->datum$8910$kwCBQ
                                                   g$old*$11375$kwCBQ)
                                                 (g$map$5812$kwCBQ
                                                   g$syntax->datum$8910$kwCBQ
                                                   g$new*$11376$kwCBQ))))
                                             g$ls/false$11368$kwCBQ)
                                           ((case-lambda
                                              ((g$t$11382$kwCBQ)
                                               ((case-lambda
                                                  ((g$ls/false$11383$kwCBQ)
                                                   (if (if g$ls/false$11383$kwCBQ
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$11384$kwCBQ
                                                                  g$isp$11385$kwCBQ
                                                                  g$sym*$11386$kwCBQ)
                                                                (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                           g$except$11384$kwCBQ)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5810$kwCBQ
                                                                      g$idsyn?$11338$kwCBQ
                                                                      g$sym*$11386$kwCBQ))
                                                                  '#f)))
                                                             g$ls/false$11383$kwCBQ))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$11387$kwCBQ
                                                            g$isp$11388$kwCBQ
                                                            g$sym*$11389$kwCBQ)
                                                          ((case-lambda
                                                             ((g$subst$11390$kwCBQ)
                                                              (g$rem*$11343$kwCBQ
                                                                (g$map$5812$kwCBQ
                                                                  g$syntax->datum$8910$kwCBQ
                                                                  g$sym*$11389$kwCBQ)
                                                                g$subst$11390$kwCBQ)))
                                                           (g$get-import$11347$kwCBQ
                                                             g$isp$11388$kwCBQ))))
                                                       g$ls/false$11383$kwCBQ)
                                                     ((case-lambda
                                                        ((g$t$11391$kwCBQ)
                                                         ((case-lambda
                                                            ((g$ls/false$11392$kwCBQ)
                                                             (if (if g$ls/false$11392$kwCBQ
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$11393$kwCBQ
                                                                            g$isp$11394$kwCBQ
                                                                            g$sym*$11395$kwCBQ)
                                                                          (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                                     g$only$11393$kwCBQ)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5810$kwCBQ
                                                                                g$idsyn?$11338$kwCBQ
                                                                                g$sym*$11395$kwCBQ))
                                                                            '#f)))
                                                                       g$ls/false$11392$kwCBQ))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$11396$kwCBQ
                                                                      g$isp$11397$kwCBQ
                                                                      g$sym*$11398$kwCBQ)
                                                                    ((case-lambda
                                                                       ((g$subst$11399$kwCBQ
                                                                          g$sym*$11400$kwCBQ)
                                                                        ((case-lambda
                                                                           ((g$sym*$11401$kwCBQ)
                                                                            ((case-lambda
                                                                               ((g$lab*$11402$kwCBQ)
                                                                                (g$map$5812$kwCBQ
                                                                                  cons
                                                                                  g$sym*$11401$kwCBQ
                                                                                  g$lab*$11402$kwCBQ)))
                                                                             (g$find*$11342$kwCBQ
                                                                               g$sym*$11401$kwCBQ
                                                                               g$subst$11399$kwCBQ))))
                                                                         (g$remove-dups$11344$kwCBQ
                                                                           g$sym*$11400$kwCBQ))))
                                                                     (g$get-import$11347$kwCBQ
                                                                       g$isp$11397$kwCBQ)
                                                                     (g$map$5812$kwCBQ
                                                                       g$syntax->datum$8910$kwCBQ
                                                                       g$sym*$11398$kwCBQ))))
                                                                 g$ls/false$11392$kwCBQ)
                                                               ((case-lambda
                                                                  ((g$t$11403$kwCBQ)
                                                                   ((case-lambda
                                                                      ((g$ls/false$11404$kwCBQ)
                                                                       (if (if g$ls/false$11404$kwCBQ
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$11405$kwCBQ
                                                                                      g$isp$11406$kwCBQ
                                                                                      g$p$11407$kwCBQ)
                                                                                    (if (eq? (g$syntax->datum$8910$kwCBQ
                                                                                               g$prefix$11405$kwCBQ)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$11338$kwCBQ
                                                                                          g$p$11407$kwCBQ))
                                                                                      '#f)))
                                                                                 g$ls/false$11404$kwCBQ))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$11408$kwCBQ
                                                                                g$isp$11409$kwCBQ
                                                                                g$p$11410$kwCBQ)
                                                                              ((case-lambda
                                                                                 ((g$subst$11411$kwCBQ
                                                                                    g$prefix$11412$kwCBQ)
                                                                                  (g$map$5812$kwCBQ
                                                                                    (case-lambda
                                                                                      ((g$x$11413$kwCBQ)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$11412$kwCBQ
                                                                                             (symbol->string
                                                                                               (car g$x$11413$kwCBQ))))
                                                                                         (cdr g$x$11413$kwCBQ))))
                                                                                    g$subst$11411$kwCBQ)))
                                                                               (g$get-import$11347$kwCBQ
                                                                                 g$isp$11409$kwCBQ)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$8910$kwCBQ
                                                                                   g$p$11410$kwCBQ)))))
                                                                           g$ls/false$11404$kwCBQ)
                                                                         ((case-lambda
                                                                            ((g$t$11414$kwCBQ)
                                                                             ((case-lambda
                                                                                ((g$ls/false$11415$kwCBQ)
                                                                                 (if (if g$ls/false$11415$kwCBQ
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$11416$kwCBQ
                                                                                                g$spec*$11417$kwCBQ)
                                                                                              (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                     g$library$11416$kwCBQ)
                                                                                                   'library)))
                                                                                           g$ls/false$11415$kwCBQ))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$11418$kwCBQ
                                                                                          g$spec*$11419$kwCBQ)
                                                                                        (g$import-library$11346$kwCBQ
                                                                                          g$spec*$11419$kwCBQ)))
                                                                                     g$ls/false$11415$kwCBQ)
                                                                                   ((case-lambda
                                                                                      ((g$t$11420$kwCBQ)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$11421$kwCBQ)
                                                                                           (if (if g$ls/false$11421$kwCBQ
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$11422$kwCBQ
                                                                                                          g$isp$11423$kwCBQ
                                                                                                          g$rest$11424$kwCBQ)
                                                                                                        (eq? (g$syntax->datum$8910$kwCBQ
                                                                                                               g$for$11422$kwCBQ)
                                                                                                             'for)))
                                                                                                     g$ls/false$11421$kwCBQ))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$11425$kwCBQ
                                                                                                    g$isp$11426$kwCBQ
                                                                                                    g$rest$11427$kwCBQ)
                                                                                                  (g$get-import$11347$kwCBQ
                                                                                                    g$isp$11426$kwCBQ)))
                                                                                               g$ls/false$11421$kwCBQ)
                                                                                             ((case-lambda
                                                                                                ((g$t$11428$kwCBQ)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$11429$kwCBQ)
                                                                                                     (if g$ls/false$11429$kwCBQ
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$11430$kwCBQ)
                                                                                                            (g$syntax-violation$8907$kwCBQ
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$11430$kwCBQ)))
                                                                                                         g$ls/false$11429$kwCBQ)
                                                                                                       (g$syntax-violation$8907$kwCBQ
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$11428$kwCBQ))))
                                                                                                  (g$syntax-dispatch$8795$kwCBQ
                                                                                                    g$t$11428$kwCBQ
                                                                                                    'any))))
                                                                                              g$t$11420$kwCBQ))))
                                                                                        (g$syntax-dispatch$8795$kwCBQ
                                                                                          g$t$11420$kwCBQ
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$11414$kwCBQ))))
                                                                              (g$syntax-dispatch$8795$kwCBQ
                                                                                g$t$11414$kwCBQ
                                                                                '(any each-any)))))
                                                                          g$t$11403$kwCBQ))))
                                                                    (g$syntax-dispatch$8795$kwCBQ
                                                                      g$t$11403$kwCBQ
                                                                      '(any any
                                                                            any)))))
                                                                g$t$11391$kwCBQ))))
                                                          (g$syntax-dispatch$8795$kwCBQ
                                                            g$t$11391$kwCBQ
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$11382$kwCBQ))))
                                                (g$syntax-dispatch$8795$kwCBQ
                                                  g$t$11382$kwCBQ
                                                  '(any any . each-any)))))
                                            g$t$11367$kwCBQ))))
                                      (g$syntax-dispatch$8795$kwCBQ
                                        g$t$11367$kwCBQ
                                        '(any any . #(each (any any)))))))
                                  g$t$11361$kwCBQ))))
                            (g$syntax-dispatch$8795$kwCBQ
                              g$t$11361$kwCBQ
                              '(any . each-any)))))
                        g$spec$11360$kwCBQ))))
                  (g$add-imports!$11348$kwCBQ
                    (case-lambda
                      ((g$imp$11352$kwCBQ g$h$11353$kwCBQ)
                       ((case-lambda
                          ((g$subst$11354$kwCBQ)
                           (g$for-each$5813$kwCBQ
                             (case-lambda
                               ((g$x$11355$kwCBQ)
                                ((case-lambda
                                   ((g$name$11356$kwCBQ g$label$11357$kwCBQ)
                                    ((case-lambda
                                       ((g$t$11358$kwCBQ)
                                        (if g$t$11358$kwCBQ
                                          ((case-lambda
                                             ((g$l$11359$kwCBQ)
                                              (if (not (eq? g$l$11359$kwCBQ
                                                            g$label$11357$kwCBQ))
                                                (g$dup-error$11339$kwCBQ
                                                  g$name$11356$kwCBQ)
                                                (void))))
                                           g$t$11358$kwCBQ)
                                          (g$hashtable-set!$6319$kwCBQ
                                            g$h$11353$kwCBQ
                                            g$name$11356$kwCBQ
                                            g$label$11357$kwCBQ))))
                                     (g$hashtable-ref$6318$kwCBQ
                                       g$h$11353$kwCBQ
                                       g$name$11356$kwCBQ
                                       '#f))))
                                 (car g$x$11355$kwCBQ)
                                 (cdr g$x$11355$kwCBQ))))
                             g$subst$11354$kwCBQ)))
                        (g$get-import$11347$kwCBQ g$imp$11352$kwCBQ))))))
          ((letrec ((g$f$11349$kwCBQ
                      (case-lambda
                        ((g$imp*$11350$kwCBQ g$h$11351$kwCBQ)
                         (if (null? g$imp*$11350$kwCBQ)
                           (hashtable-entries g$h$11351$kwCBQ)
                           (begin
                             (g$add-imports!$11348$kwCBQ
                               (car g$imp*$11350$kwCBQ)
                               g$h$11351$kwCBQ)
                             (g$f$11349$kwCBQ
                               (cdr g$imp*$11350$kwCBQ)
                               g$h$11351$kwCBQ)))))))
             g$f$11349$kwCBQ)
           g$imp*$11337$kwCBQ
           (g$make-eq-hashtable$6315$kwCBQ))))))
   (g$make-top-rib$8845$kwCBQ
     g$make-top-rib$12363$kwCBQ
     (case-lambda
       ((g$names$11599$kwCBQ g$labels$11600$kwCBQ)
        ((case-lambda
           ((g$rib$11601$kwCBQ)
            (begin
              (g$vector-for-each$6090$kwCBQ
                (case-lambda
                  ((g$name$11602$kwCBQ g$label$11603$kwCBQ)
                   (begin
                     (if (not (symbol? g$name$11602$kwCBQ))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11602$kwCBQ)
                       (void))
                     (g$extend-rib/nc!$8480$kwCBQ
                       g$rib$11601$kwCBQ
                       (g$make-stx$8489$kwCBQ
                         g$name$11602$kwCBQ
                         g$top-mark*$8453$kwCBQ
                         '()
                         '())
                       g$label$11603$kwCBQ))))
                g$names$11599$kwCBQ
                g$labels$11600$kwCBQ)
              g$rib$11601$kwCBQ)))
         (g$make-cache-rib$8477$kwCBQ)))))
   (g$make-collector$8846$kwCBQ
     g$make-collector$12364$kwCBQ
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11604$kwCBQ)
            (case-lambda
              (() g$ls$11604$kwCBQ)
              ((g$x$11605$kwCBQ)
               (set! g$ls$11604$kwCBQ
                 (g$set-cons$8450$kwCBQ g$x$11605$kwCBQ g$ls$11604$kwCBQ))))))
         '()))))
   (g$inv-collector$8847$kwCBQ
     g$inv-collector$12365$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         (g$args$11606$kwCBQ
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11607$kwCBQ)
          (begin
            (if (not (procedure? g$x$11607$kwCBQ))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11607$kwCBQ)
              (void))
            g$x$11607$kwCBQ)))))
   (g$vis-collector$8848$kwCBQ
     g$vis-collector$12366$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         (g$args$11608$kwCBQ
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11609$kwCBQ)
          (begin
            (if (not (procedure? g$x$11609$kwCBQ))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11609$kwCBQ)
              (void))
            g$x$11609$kwCBQ)))))
   (g$imp-collector$8849$kwCBQ
     g$imp-collector$12367$kwCBQ
     (g$make-parameter$7778$kwCBQ
       (case-lambda
         (g$args$11610$kwCBQ
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11611$kwCBQ)
          (begin
            (if (not (procedure? g$x$11611$kwCBQ))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11611$kwCBQ)
              (void))
            g$x$11611$kwCBQ)))))
   (g$chi-library-internal$8850$kwCBQ
     g$chi-library-internal$12368$kwCBQ
     (case-lambda
       ((g$e*$11612$kwCBQ g$rib$11613$kwCBQ g$mix?$11614$kwCBQ)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8839$kwCBQ
               g$e*$11612$kwCBQ
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11613$kwCBQ
               g$mix?$11614$kwCBQ
               '#t)))
          (case-lambda
            ((g$e*$11623$kwCBQ
               g$r$11624$kwCBQ
               g$mr$11625$kwCBQ
               g$lex*$11626$kwCBQ
               g$rhs*$11627$kwCBQ
               g$mod**$11628$kwCBQ
               g$_kwd*$11629$kwCBQ
               g$exp*$11630$kwCBQ)
             ((case-lambda
                ((g$exp*$11631$kwCBQ
                   g$_kwd*$11632$kwCBQ
                   g$mod**$11633$kwCBQ
                   g$rhs*$11634$kwCBQ
                   g$lex*$11635$kwCBQ
                   g$mr$11636$kwCBQ
                   g$r$11637$kwCBQ
                   g$e*$11638$kwCBQ)
                 (values
                   (append
                     (apply append (reverse g$mod**$11633$kwCBQ))
                     g$e*$11638$kwCBQ)
                   g$r$11637$kwCBQ
                   g$mr$11636$kwCBQ
                   (reverse g$lex*$11635$kwCBQ)
                   (reverse g$rhs*$11634$kwCBQ)
                   g$exp*$11631$kwCBQ)))
              g$exp*$11630$kwCBQ
              g$_kwd*$11629$kwCBQ
              g$mod**$11628$kwCBQ
              g$rhs*$11627$kwCBQ
              g$lex*$11626$kwCBQ
              g$mr$11625$kwCBQ
              g$r$11624$kwCBQ
              g$e*$11623$kwCBQ)))))))
   (g$chi-interaction-expr$8851$kwCBQ
     g$chi-interaction-expr$12369$kwCBQ
     (case-lambda
       ((g$e$11639$kwCBQ g$rib$11640$kwCBQ g$r$11641$kwCBQ)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8839$kwCBQ
               (list g$e$11639$kwCBQ)
               g$r$11641$kwCBQ
               g$r$11641$kwCBQ
               '()
               '()
               '()
               '()
               '()
               g$rib$11640$kwCBQ
               '#t
               '#f)))
          (case-lambda
            ((g$e*$11650$kwCBQ
               g$r$11651$kwCBQ
               g$mr$11652$kwCBQ
               g$lex*$11653$kwCBQ
               g$rhs*$11654$kwCBQ
               g$mod**$11655$kwCBQ
               g$_kwd*$11656$kwCBQ
               g$_exp*$11657$kwCBQ)
             ((case-lambda
                ((g$_exp*$11658$kwCBQ
                   g$_kwd*$11659$kwCBQ
                   g$mod**$11660$kwCBQ
                   g$rhs*$11661$kwCBQ
                   g$lex*$11662$kwCBQ
                   g$mr$11663$kwCBQ
                   g$r$11664$kwCBQ
                   g$e*$11665$kwCBQ)
                 ((case-lambda
                    ((g$e*$11666$kwCBQ)
                     ((case-lambda
                        ((g$e$11667$kwCBQ)
                         (values g$e$11667$kwCBQ g$r$11664$kwCBQ)))
                      (if (null? g$e*$11666$kwCBQ)
                        (g$build-void$8446$kwCBQ)
                        (if (null? (cdr g$e*$11666$kwCBQ))
                          (car g$e*$11666$kwCBQ)
                          (g$build-sequence$8445$kwCBQ
                            '#f
                            g$e*$11666$kwCBQ))))))
                  (g$expand-interaction-rhs*/init*$8820$kwCBQ
                    (reverse g$lex*$11662$kwCBQ)
                    (reverse g$rhs*$11661$kwCBQ)
                    (append
                      (apply append (reverse g$mod**$11660$kwCBQ))
                      g$e*$11665$kwCBQ)
                    g$r$11664$kwCBQ
                    g$mr$11663$kwCBQ))))
              g$_exp*$11657$kwCBQ
              g$_kwd*$11656$kwCBQ
              g$mod**$11655$kwCBQ
              g$rhs*$11654$kwCBQ
              g$lex*$11653$kwCBQ
              g$mr$11652$kwCBQ
              g$r$11651$kwCBQ
              g$e*$11650$kwCBQ)))))))
   (g$library-body-expander$8852$kwCBQ
     g$library-body-expander$12370$kwCBQ
     (case-lambda
       ((g$name$11668$kwCBQ
          g$main-exp*$11669$kwCBQ
          g$imp*$11670$kwCBQ
          g$b*$11671$kwCBQ
          g$mix?$11672$kwCBQ)
        (letrec* ((g$itc$11673$kwCBQ (g$make-collector$8846$kwCBQ)))
          ((case-lambda
             ((g$imp-collector$11678$kwCBQ
                g$top-level-context$11679$kwCBQ
                g$imp-collector$11680$kwCBQ
                g$top-level-context$11681$kwCBQ)
              ((case-lambda
                 ((g$swap$11682$kwCBQ)
                  (dynamic-wind
                    g$swap$11682$kwCBQ
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8844$kwCBQ
                              g$imp*$11670$kwCBQ)))
                         (case-lambda
                           ((g$subst-names$11685$kwCBQ
                              g$subst-labels$11686$kwCBQ)
                            ((case-lambda
                               ((g$subst-labels$11687$kwCBQ
                                  g$subst-names$11688$kwCBQ)
                                ((case-lambda
                                   ((g$rib$11689$kwCBQ)
                                    (letrec* ((g$wrap$11690$kwCBQ
                                                (case-lambda
                                                  ((g$x$11752$kwCBQ)
                                                   (g$make-stx$8489$kwCBQ
                                                     g$x$11752$kwCBQ
                                                     g$top-mark*$8453$kwCBQ
                                                     (list g$rib$11689$kwCBQ)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11691$kwCBQ
                                            g$main-exp*$11692$kwCBQ
                                            g$rtc$11693$kwCBQ
                                            g$vtc$11694$kwCBQ)
                                          ((case-lambda
                                             ((g$inv-collector$11699$kwCBQ
                                                g$vis-collector$11700$kwCBQ
                                                g$inv-collector$11701$kwCBQ
                                                g$vis-collector$11702$kwCBQ)
                                              ((case-lambda
                                                 ((g$swap$11703$kwCBQ)
                                                  (dynamic-wind
                                                    g$swap$11703$kwCBQ
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8850$kwCBQ
                                                              g$b*$11691$kwCBQ
                                                              g$rib$11689$kwCBQ
                                                              g$mix?$11672$kwCBQ)))
                                                         (case-lambda
                                                           ((g$init*$11710$kwCBQ
                                                              g$r$11711$kwCBQ
                                                              g$mr$11712$kwCBQ
                                                              g$lex*$11713$kwCBQ
                                                              g$rhs*$11714$kwCBQ
                                                              g$internal-exp*$11715$kwCBQ)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11716$kwCBQ
                                                                  g$rhs*$11717$kwCBQ
                                                                  g$lex*$11718$kwCBQ
                                                                  g$mr$11719$kwCBQ
                                                                  g$r$11720$kwCBQ
                                                                  g$init*$11721$kwCBQ)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8841$kwCBQ
                                                                       (append
                                                                         g$main-exp*$11692$kwCBQ
                                                                         g$internal-exp*$11716$kwCBQ))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11724$kwCBQ
                                                                       g$exp-id*$11725$kwCBQ)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11726$kwCBQ
                                                                           g$exp-name*$11727$kwCBQ)
                                                                         (begin
                                                                           (g$seal-rib!$8482$kwCBQ
                                                                             g$rib$11689$kwCBQ)
                                                                           ((case-lambda
                                                                              ((g$init*$11728$kwCBQ)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11729$kwCBQ)
                                                                                   (begin
                                                                                     (g$unseal-rib!$8483$kwCBQ
                                                                                       g$rib$11689$kwCBQ)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$11730$kwCBQ
                                                                                           g$export-subst$11731$kwCBQ)
                                                                                         (letrec* ((g$errstr$11732$kwCBQ
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8896$kwCBQ
                                                                                                  g$lex*$11718$kwCBQ
                                                                                                  g$loc*$11730$kwCBQ
                                                                                                  g$r$11720$kwCBQ)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$11736$kwCBQ
                                                                                                  g$global*$11737$kwCBQ
                                                                                                  g$macro*$11738$kwCBQ)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$11739$kwCBQ
                                                                                                      g$global*$11740$kwCBQ
                                                                                                      g$export-env$11741$kwCBQ)
                                                                                                    (begin
                                                                                                      (g$for-each$5813$kwCBQ
                                                                                                        (case-lambda
                                                                                                          ((g$s$11742$kwCBQ)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$11743$kwCBQ
                                                                                                                 g$label$11744$kwCBQ)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$11745$kwCBQ)
                                                                                                                   (if g$p$11745$kwCBQ
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$11746$kwCBQ)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$11747$kwCBQ)
                                                                                                                             (if (eq? g$type$11747$kwCBQ
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8907$kwCBQ
                                                                                                                                 'export
                                                                                                                                 g$errstr$11732$kwCBQ
                                                                                                                                 g$name$11743$kwCBQ)
                                                                                                                               (void))))
                                                                                                                          (car g$b$11746$kwCBQ))))
                                                                                                                      (cdr g$p$11745$kwCBQ))
                                                                                                                     (void))))
                                                                                                                (g$assq$5800$kwCBQ
                                                                                                                  g$label$11744$kwCBQ
                                                                                                                  g$export-env$11741$kwCBQ))))
                                                                                                            (car g$s$11742$kwCBQ)
                                                                                                            (cdr g$s$11742$kwCBQ))))
                                                                                                        g$export-subst$11731$kwCBQ)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$11748$kwCBQ
                                                                                                            g$invoke-definitions$11749$kwCBQ)
                                                                                                          (values
                                                                                                            (g$itc$11673$kwCBQ)
                                                                                                            (g$rtc$11693$kwCBQ)
                                                                                                            (g$vtc$11694$kwCBQ)
                                                                                                            (g$build-sequence$8445$kwCBQ
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$11749$kwCBQ
                                                                                                                (list
                                                                                                                  g$invoke-body$11748$kwCBQ)))
                                                                                                            g$macro*$11739$kwCBQ
                                                                                                            g$export-subst$11731$kwCBQ
                                                                                                            g$export-env$11741$kwCBQ)))
                                                                                                       (g$build-library-letrec*$8449$kwCBQ
                                                                                                         '#f
                                                                                                         g$name$11668$kwCBQ
                                                                                                         g$lex*$11718$kwCBQ
                                                                                                         g$loc*$11730$kwCBQ
                                                                                                         g$rhs*$11729$kwCBQ
                                                                                                         (if (null?
                                                                                                               g$init*$11728$kwCBQ)
                                                                                                           (g$build-void$8446$kwCBQ)
                                                                                                           (g$build-sequence$8445$kwCBQ
                                                                                                             '#f
                                                                                                             g$init*$11728$kwCBQ)))
                                                                                                       (g$map$5812$kwCBQ
                                                                                                         g$build-global-define$8441$kwCBQ
                                                                                                         (g$map$5812$kwCBQ
                                                                                                           cdr
                                                                                                           g$global*$11740$kwCBQ))))))
                                                                                                 g$macro*$11738$kwCBQ
                                                                                                 g$global*$11737$kwCBQ
                                                                                                 g$export-env$11736$kwCBQ)))))))
                                                                                      (g$map$5812$kwCBQ
                                                                                        g$gen-global$8456$kwCBQ
                                                                                        g$lex*$11718$kwCBQ)
                                                                                      (g$make-export-subst$8895$kwCBQ
                                                                                        g$exp-name*$11727$kwCBQ
                                                                                        g$exp-id*$11726$kwCBQ)))))
                                                                                (g$chi-rhs*$8821$kwCBQ
                                                                                  g$rhs*$11717$kwCBQ
                                                                                  g$r$11720$kwCBQ
                                                                                  g$mr$11719$kwCBQ))))
                                                                            (g$chi-expr*$8811$kwCBQ
                                                                              g$init*$11721$kwCBQ
                                                                              g$r$11720$kwCBQ
                                                                              g$mr$11719$kwCBQ)))))
                                                                      g$exp-id*$11725$kwCBQ
                                                                      g$exp-name*$11724$kwCBQ))))))
                                                             g$internal-exp*$11715$kwCBQ
                                                             g$rhs*$11714$kwCBQ
                                                             g$lex*$11713$kwCBQ
                                                             g$mr$11712$kwCBQ
                                                             g$r$11711$kwCBQ
                                                             g$init*$11710$kwCBQ))))))
                                                    g$swap$11703$kwCBQ)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11750$kwCBQ)
                                                        (begin
                                                          (g$inv-collector$11699$kwCBQ
                                                            g$inv-collector$11701$kwCBQ)
                                                          (set! g$inv-collector$11701$kwCBQ
                                                            g$t$11750$kwCBQ))))
                                                     (g$inv-collector$11699$kwCBQ))
                                                    ((case-lambda
                                                       ((g$t$11751$kwCBQ)
                                                        (begin
                                                          (g$vis-collector$11700$kwCBQ
                                                            g$vis-collector$11702$kwCBQ)
                                                          (set! g$vis-collector$11702$kwCBQ
                                                            g$t$11751$kwCBQ))))
                                                     (g$vis-collector$11700$kwCBQ))))))))
                                           g$inv-collector$8847$kwCBQ
                                           g$vis-collector$8848$kwCBQ
                                           g$rtc$11693$kwCBQ
                                           g$vtc$11694$kwCBQ)))
                                       (g$map$5812$kwCBQ
                                         g$wrap$11690$kwCBQ
                                         g$b*$11671$kwCBQ)
                                       (g$map$5812$kwCBQ
                                         g$wrap$11690$kwCBQ
                                         g$main-exp*$11669$kwCBQ)
                                       (g$make-collector$8846$kwCBQ)
                                       (g$make-collector$8846$kwCBQ)))))
                                 (g$make-top-rib$8845$kwCBQ
                                   g$subst-names$11688$kwCBQ
                                   g$subst-labels$11687$kwCBQ))))
                             g$subst-labels$11686$kwCBQ
                             g$subst-names$11685$kwCBQ))))))
                    g$swap$11682$kwCBQ)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11753$kwCBQ)
                        (begin
                          (g$imp-collector$11678$kwCBQ
                            g$imp-collector$11680$kwCBQ)
                          (set! g$imp-collector$11680$kwCBQ g$t$11753$kwCBQ))))
                     (g$imp-collector$11678$kwCBQ))
                    ((case-lambda
                       ((g$t$11754$kwCBQ)
                        (begin
                          (g$top-level-context$11679$kwCBQ
                            g$top-level-context$11681$kwCBQ)
                          (set! g$top-level-context$11681$kwCBQ
                            g$t$11754$kwCBQ))))
                     (g$top-level-context$11679$kwCBQ))))))))
           g$imp-collector$8849$kwCBQ
           g$top-level-context$8915$kwCBQ
           g$itc$11673$kwCBQ
           '#f)))))
   (g$core-library-expander$8853$kwCBQ
     g$core-library-expander$12371$kwCBQ
     (case-lambda
       ((g$e$11755$kwCBQ g$verify-name$11756$kwCBQ)
        (call-with-values
          (case-lambda (() (g$parse-library$8843$kwCBQ g$e$11755$kwCBQ)))
          (case-lambda
            ((g$name*$11761$kwCBQ
               g$exp*$11762$kwCBQ
               g$imp*$11763$kwCBQ
               g$b*$11764$kwCBQ)
             ((case-lambda
                ((g$b*$11765$kwCBQ
                   g$imp*$11766$kwCBQ
                   g$exp*$11767$kwCBQ
                   g$name*$11768$kwCBQ)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8842$kwCBQ g$name*$11768$kwCBQ)))
                   (case-lambda
                     ((g$name$11771$kwCBQ g$ver$11772$kwCBQ)
                      ((case-lambda
                         ((g$ver$11773$kwCBQ g$name$11774$kwCBQ)
                          (begin
                            (g$verify-name$11756$kwCBQ g$name$11774$kwCBQ)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8852$kwCBQ
                                   g$name$11774$kwCBQ
                                   g$exp*$11767$kwCBQ
                                   g$imp*$11766$kwCBQ
                                   g$b*$11765$kwCBQ
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11782$kwCBQ
                                   g$invoke-req*$11783$kwCBQ
                                   g$visit-req*$11784$kwCBQ
                                   g$invoke-code$11785$kwCBQ
                                   g$visit-code$11786$kwCBQ
                                   g$export-subst$11787$kwCBQ
                                   g$export-env$11788$kwCBQ)
                                 ((case-lambda
                                    ((g$export-env$11789$kwCBQ
                                       g$export-subst$11790$kwCBQ
                                       g$visit-code$11791$kwCBQ
                                       g$invoke-code$11792$kwCBQ
                                       g$visit-req*$11793$kwCBQ
                                       g$invoke-req*$11794$kwCBQ
                                       g$imp*$11795$kwCBQ)
                                     (values
                                       g$name$11774$kwCBQ
                                       g$ver$11773$kwCBQ
                                       g$imp*$11795$kwCBQ
                                       g$invoke-req*$11794$kwCBQ
                                       g$visit-req*$11793$kwCBQ
                                       g$invoke-code$11792$kwCBQ
                                       g$visit-code$11791$kwCBQ
                                       g$export-subst$11790$kwCBQ
                                       g$export-env$11789$kwCBQ)))
                                  g$export-env$11788$kwCBQ
                                  g$export-subst$11787$kwCBQ
                                  g$visit-code$11786$kwCBQ
                                  g$invoke-code$11785$kwCBQ
                                  g$visit-req*$11784$kwCBQ
                                  g$invoke-req*$11783$kwCBQ
                                  g$imp*$11782$kwCBQ)))))))
                       g$ver$11772$kwCBQ
                       g$name$11771$kwCBQ))))))
              g$b*$11764$kwCBQ
              g$imp*$11763$kwCBQ
              g$exp*$11762$kwCBQ
              g$name*$11761$kwCBQ)))))))
   (g$parse-top-level-program$8854$kwCBQ
     g$parse-top-level-program$12372$kwCBQ
     (case-lambda
       ((g$e*$11796$kwCBQ)
        ((case-lambda
           ((g$t$11797$kwCBQ)
            ((case-lambda
               ((g$ls/false$11798$kwCBQ)
                (if (if g$ls/false$11798$kwCBQ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11799$kwCBQ
                               g$imp*$11800$kwCBQ
                               g$b*$11801$kwCBQ)
                             (eq? (g$syntax->datum$8910$kwCBQ
                                    g$import$11799$kwCBQ)
                                  'import)))
                          g$ls/false$11798$kwCBQ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11802$kwCBQ
                         g$imp*$11803$kwCBQ
                         g$b*$11804$kwCBQ)
                       (values g$imp*$11803$kwCBQ g$b*$11804$kwCBQ)))
                    g$ls/false$11798$kwCBQ)
                  ((case-lambda
                     ((g$t$11805$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$11806$kwCBQ)
                          (if (if g$ls/false$11806$kwCBQ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11807$kwCBQ
                                         g$x$11808$kwCBQ
                                         g$y$11809$kwCBQ)
                                       (eq? (g$syntax->datum$8910$kwCBQ
                                              g$import$11807$kwCBQ)
                                            'import)))
                                    g$ls/false$11806$kwCBQ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11810$kwCBQ
                                   g$x$11811$kwCBQ
                                   g$y$11812$kwCBQ)
                                 (g$syntax-violation$8907$kwCBQ
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$8513$kwCBQ g$e*$11796$kwCBQ))))
                              g$ls/false$11806$kwCBQ)
                            ((case-lambda
                               ((g$t$11813$kwCBQ)
                                ((case-lambda
                                   ((g$ls/false$11814$kwCBQ)
                                    (if g$ls/false$11814$kwCBQ
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11814$kwCBQ)
                                      (g$syntax-violation$8907$kwCBQ
                                        '#f
                                        '"invalid syntax"
                                        g$t$11813$kwCBQ))))
                                 (g$syntax-dispatch$8795$kwCBQ
                                   g$t$11813$kwCBQ
                                   '_))))
                             g$t$11805$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ
                         g$t$11805$kwCBQ
                         '((any . any) . any)))))
                   g$t$11797$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ
               g$t$11797$kwCBQ
               '((any . each-any) . each-any)))))
         g$e*$11796$kwCBQ))))
   (g$top-level-expander$8855$kwCBQ
     g$top-level-expander$12373$kwCBQ
     (case-lambda
       ((g$e*$11815$kwCBQ)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8854$kwCBQ g$e*$11815$kwCBQ)))
          (case-lambda
            ((g$imp*$11818$kwCBQ g$b*$11819$kwCBQ)
             ((case-lambda
                ((g$b*$11820$kwCBQ g$imp*$11821$kwCBQ)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8852$kwCBQ
                        '()
                        '()
                        g$imp*$11821$kwCBQ
                        g$b*$11820$kwCBQ
                        '#t)))
                   (case-lambda
                     ((g$imp*$11829$kwCBQ
                        g$invoke-req*$11830$kwCBQ
                        g$visit-req*$11831$kwCBQ
                        g$invoke-code$11832$kwCBQ
                        g$visit-code$11833$kwCBQ
                        g$export-subst$11834$kwCBQ
                        g$export-env$11835$kwCBQ)
                      ((case-lambda
                         ((g$export-env$11836$kwCBQ
                            g$export-subst$11837$kwCBQ
                            g$visit-code$11838$kwCBQ
                            g$invoke-code$11839$kwCBQ
                            g$visit-req*$11840$kwCBQ
                            g$invoke-req*$11841$kwCBQ
                            g$imp*$11842$kwCBQ)
                          (values
                            g$invoke-req*$11841$kwCBQ
                            g$invoke-code$11839$kwCBQ)))
                       g$export-env$11835$kwCBQ
                       g$export-subst$11834$kwCBQ
                       g$visit-code$11833$kwCBQ
                       g$invoke-code$11832$kwCBQ
                       g$visit-req*$11831$kwCBQ
                       g$invoke-req*$11830$kwCBQ
                       g$imp*$11829$kwCBQ))))))
              g$b*$11819$kwCBQ
              g$imp*$11818$kwCBQ)))))))
   (g$9895$8856$kwCBQ
     g$9895$12374$kwCBQ
     (make-record-type-descriptor
       'env
       '#f
       'g$9898$kwCBQ
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9897$8857$kwCBQ g$9897$12375$kwCBQ '#f)
   (g$9896$8858$kwCBQ
     g$9896$12376$kwCBQ
     (make-record-constructor-descriptor
       g$9895$8856$kwCBQ
       '#f
       g$9897$8857$kwCBQ))
   (g$env?$8859$kwCBQ
     g$env?$12377$kwCBQ
     (record-predicate g$9895$8856$kwCBQ))
   (g$make-env$8860$kwCBQ
     g$make-env$12378$kwCBQ
     (record-constructor g$9896$8858$kwCBQ))
   (g$env-names$8861$kwCBQ
     g$env-names$12379$kwCBQ
     (record-accessor g$9895$8856$kwCBQ '0))
   (g$env-labels$8862$kwCBQ
     g$env-labels$12380$kwCBQ
     (record-accessor g$9895$8856$kwCBQ '1))
   (g$env-itc$8863$kwCBQ
     g$env-itc$12381$kwCBQ
     (record-accessor g$9895$8856$kwCBQ '2))
   (g$set-env-names!$8864$kwCBQ
     g$set-env-names!$12382$kwCBQ
     (record-mutator g$9895$8856$kwCBQ '0))
   (g$set-env-labels!$8865$kwCBQ
     g$set-env-labels!$12383$kwCBQ
     (record-mutator g$9895$8856$kwCBQ '1))
   (g$set-env-itc!$8866$kwCBQ
     g$set-env-itc!$12384$kwCBQ
     (record-mutator g$9895$8856$kwCBQ '2))
   (g$rp$8867$kwCBQ
     g$rp$12385$kwCBQ
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11843$kwCBQ g$p$11844$kwCBQ g$wr$11845$kwCBQ)
          (display '"#<environment>" g$p$11844$kwCBQ)))))
   (g$9914$8868$kwCBQ
     g$9914$12386$kwCBQ
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9917$kwCBQ
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9916$8869$kwCBQ g$9916$12387$kwCBQ '#f)
   (g$9915$8870$kwCBQ
     g$9915$12388$kwCBQ
     (make-record-constructor-descriptor
       g$9914$8868$kwCBQ
       '#f
       g$9916$8869$kwCBQ))
   (g$interaction-env?$8871$kwCBQ
     g$interaction-env?$12389$kwCBQ
     (record-predicate g$9914$8868$kwCBQ))
   (g$make-interaction-env$8872$kwCBQ
     g$make-interaction-env$12390$kwCBQ
     (record-constructor g$9915$8870$kwCBQ))
   (g$interaction-env-rib$8873$kwCBQ
     g$interaction-env-rib$12391$kwCBQ
     (record-accessor g$9914$8868$kwCBQ '0))
   (g$interaction-env-r$8874$kwCBQ
     g$interaction-env-r$12392$kwCBQ
     (record-accessor g$9914$8868$kwCBQ '1))
   (g$interaction-env-locs$8875$kwCBQ
     g$interaction-env-locs$12393$kwCBQ
     (record-accessor g$9914$8868$kwCBQ '2))
   (g$set-interaction-env-rib!$8876$kwCBQ
     g$set-interaction-env-rib!$12394$kwCBQ
     (record-mutator g$9914$8868$kwCBQ '0))
   (g$set-interaction-env-r!$8877$kwCBQ
     g$set-interaction-env-r!$12395$kwCBQ
     (record-mutator g$9914$8868$kwCBQ '1))
   (g$set-interaction-env-locs!$8878$kwCBQ
     g$set-interaction-env-locs!$12396$kwCBQ
     (record-mutator g$9914$8868$kwCBQ '2))
   (g$rp$8879$kwCBQ
     g$rp$12397$kwCBQ
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11846$kwCBQ g$p$11847$kwCBQ g$wr$11848$kwCBQ)
          (display '"#<environment>" g$p$11847$kwCBQ)))))
   (g$interaction-environment-symbols$8880$kwCBQ
     g$interaction-environment-symbols$12398$kwCBQ
     (case-lambda
       (()
        (g$environment-symbols$8884$kwCBQ
          (g$interaction-environment$8914$kwCBQ)))))
   (g$environment-bindings$8881$kwCBQ
     g$environment-bindings$12399$kwCBQ
     (case-lambda
       ((g$e$11849$kwCBQ)
        (vector->list
          (g$vector-map$6089$kwCBQ
            (case-lambda
              ((g$name$11850$kwCBQ g$label$11851$kwCBQ)
               (g$parse-binding$8882$kwCBQ
                 (cons
                   g$name$11850$kwCBQ
                   (g$imported-label->binding$8325$kwCBQ
                     g$label$11851$kwCBQ)))))
            (g$env-names$8861$kwCBQ g$e$11849$kwCBQ)
            (g$env-labels$8862$kwCBQ g$e$11849$kwCBQ))))))
   (g$parse-binding$8882$kwCBQ
     g$parse-binding$12400$kwCBQ
     (case-lambda
       ((g$b$11852$kwCBQ)
        (cons
          (car g$b$11852$kwCBQ)
          ((case-lambda
             ((g$t$11853$kwCBQ)
              (if (g$memv$5805$kwCBQ g$t$11853$kwCBQ '(core-prim global))
                'procedure
                (if (g$memv$5805$kwCBQ
                      g$t$11853$kwCBQ
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5805$kwCBQ g$t$11853$kwCBQ '($core-rtd))
                    'record
                    (if (eq? (car g$b$11852$kwCBQ)
                             (g$cadr$6038$kwCBQ g$b$11852$kwCBQ))
                      'syntax
                      'unknown))))))
           (g$cadr$6038$kwCBQ g$b$11852$kwCBQ))))))
   (g$environment?$8883$kwCBQ
     g$environment?$12401$kwCBQ
     (case-lambda
       ((g$x$11854$kwCBQ)
        ((case-lambda
           ((g$t$11855$kwCBQ)
            (if g$t$11855$kwCBQ
              g$t$11855$kwCBQ
              (begin '#f (g$interaction-env?$8871$kwCBQ g$x$11854$kwCBQ)))))
         (g$env?$8859$kwCBQ g$x$11854$kwCBQ)))))
   (g$environment-symbols$8884$kwCBQ
     g$environment-symbols$12402$kwCBQ
     (case-lambda
       ((g$x$11856$kwCBQ)
        (if (g$env?$8859$kwCBQ g$x$11856$kwCBQ)
          (vector->list (g$env-names$8861$kwCBQ g$x$11856$kwCBQ))
          (if (g$interaction-env?$8871$kwCBQ g$x$11856$kwCBQ)
            (g$map$5812$kwCBQ
              values
              (g$rib-sym*$8466$kwCBQ
                (g$interaction-env-rib$8873$kwCBQ g$x$11856$kwCBQ)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11856$kwCBQ))))))
   (g$environment$8885$kwCBQ
     g$environment$12403$kwCBQ
     (case-lambda
       (g$imp*$11857$kwCBQ
        ((case-lambda
           ((g$itc$11858$kwCBQ)
            ((case-lambda
               ((g$imp-collector$11861$kwCBQ g$imp-collector$11862$kwCBQ)
                ((case-lambda
                   ((g$swap$11863$kwCBQ)
                    (dynamic-wind
                      g$swap$11863$kwCBQ
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8844$kwCBQ
                                g$imp*$11857$kwCBQ)))
                           (case-lambda
                             ((g$subst-names$11866$kwCBQ
                                g$subst-labels$11867$kwCBQ)
                              ((case-lambda
                                 ((g$subst-labels$11868$kwCBQ
                                    g$subst-names$11869$kwCBQ)
                                  (g$make-env$8860$kwCBQ
                                    g$subst-names$11869$kwCBQ
                                    g$subst-labels$11868$kwCBQ
                                    g$itc$11858$kwCBQ)))
                               g$subst-labels$11867$kwCBQ
                               g$subst-names$11866$kwCBQ))))))
                      g$swap$11863$kwCBQ)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11870$kwCBQ)
                        (begin
                          (g$imp-collector$11861$kwCBQ
                            g$imp-collector$11862$kwCBQ)
                          (set! g$imp-collector$11862$kwCBQ g$t$11870$kwCBQ))))
                     (g$imp-collector$11861$kwCBQ)))))))
             g$imp-collector$8849$kwCBQ
             g$itc$11858$kwCBQ)))
         (g$make-collector$8846$kwCBQ)))))
   (g$null-environment$8886$kwCBQ
     g$null-environment$12404$kwCBQ
     (case-lambda
       ((g$n$11871$kwCBQ)
        (begin
          (if (not (eqv? g$n$11871$kwCBQ '5))
            (assertion-violation 'null-environment '"not 5" g$n$11871$kwCBQ)
            (void))
          (g$environment$8885$kwCBQ '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8887$kwCBQ
     g$scheme-report-environment$12405$kwCBQ
     (case-lambda
       ((g$n$11872$kwCBQ)
        (begin
          (if (not (eqv? g$n$11872$kwCBQ '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11872$kwCBQ)
            (void))
          (g$environment$8885$kwCBQ '(psyntax scheme-report-environment-5))))))
   (g$expand$8888$kwCBQ
     g$expand$12406$kwCBQ
     (case-lambda
       ((g$x$11873$kwCBQ g$env$11874$kwCBQ)
        (if (g$env?$8859$kwCBQ g$env$11874$kwCBQ)
          ((case-lambda
             ((g$rib$11875$kwCBQ)
              ((case-lambda
                 ((g$x$11876$kwCBQ
                    g$itc$11877$kwCBQ
                    g$rtc$11878$kwCBQ
                    g$vtc$11879$kwCBQ)
                  ((case-lambda
                     ((g$x$11880$kwCBQ)
                      (begin
                        (g$seal-rib!$8482$kwCBQ g$rib$11875$kwCBQ)
                        (values g$x$11880$kwCBQ (g$rtc$11878$kwCBQ)))))
                   ((case-lambda
                      ((g$top-level-context$11889$kwCBQ
                         g$inv-collector$11890$kwCBQ
                         g$vis-collector$11891$kwCBQ
                         g$imp-collector$11892$kwCBQ
                         g$top-level-context$11893$kwCBQ
                         g$inv-collector$11894$kwCBQ
                         g$vis-collector$11895$kwCBQ
                         g$imp-collector$11896$kwCBQ)
                       ((case-lambda
                          ((g$swap$11897$kwCBQ)
                           (dynamic-wind
                             g$swap$11897$kwCBQ
                             (case-lambda
                               (()
                                (g$chi-expr$8813$kwCBQ
                                  g$x$11876$kwCBQ
                                  '()
                                  '())))
                             g$swap$11897$kwCBQ)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11898$kwCBQ)
                                 (begin
                                   (g$top-level-context$11889$kwCBQ
                                     g$top-level-context$11893$kwCBQ)
                                   (set! g$top-level-context$11893$kwCBQ
                                     g$t$11898$kwCBQ))))
                              (g$top-level-context$11889$kwCBQ))
                             ((case-lambda
                                ((g$t$11899$kwCBQ)
                                 (begin
                                   (g$inv-collector$11890$kwCBQ
                                     g$inv-collector$11894$kwCBQ)
                                   (set! g$inv-collector$11894$kwCBQ
                                     g$t$11899$kwCBQ))))
                              (g$inv-collector$11890$kwCBQ))
                             ((case-lambda
                                ((g$t$11900$kwCBQ)
                                 (begin
                                   (g$vis-collector$11891$kwCBQ
                                     g$vis-collector$11895$kwCBQ)
                                   (set! g$vis-collector$11895$kwCBQ
                                     g$t$11900$kwCBQ))))
                              (g$vis-collector$11891$kwCBQ))
                             ((case-lambda
                                ((g$t$11901$kwCBQ)
                                 (begin
                                   (g$imp-collector$11892$kwCBQ
                                     g$imp-collector$11896$kwCBQ)
                                   (set! g$imp-collector$11896$kwCBQ
                                     g$t$11901$kwCBQ))))
                              (g$imp-collector$11892$kwCBQ))))))))
                    g$top-level-context$8915$kwCBQ
                    g$inv-collector$8847$kwCBQ
                    g$vis-collector$8848$kwCBQ
                    g$imp-collector$8849$kwCBQ
                    '#f
                    g$rtc$11878$kwCBQ
                    g$vtc$11879$kwCBQ
                    g$itc$11877$kwCBQ))))
               (g$make-stx$8489$kwCBQ
                 g$x$11873$kwCBQ
                 g$top-mark*$8453$kwCBQ
                 (list g$rib$11875$kwCBQ)
                 '())
               (g$env-itc$8863$kwCBQ g$env$11874$kwCBQ)
               (g$make-collector$8846$kwCBQ)
               (g$make-collector$8846$kwCBQ))))
           (g$make-top-rib$8845$kwCBQ
             (g$env-names$8861$kwCBQ g$env$11874$kwCBQ)
             (g$env-labels$8862$kwCBQ g$env$11874$kwCBQ)))
          (if (g$interaction-env?$8871$kwCBQ g$env$11874$kwCBQ)
            ((case-lambda
               ((g$rib$11902$kwCBQ g$r$11903$kwCBQ g$rtc$11904$kwCBQ)
                ((case-lambda
                   ((g$x$11905$kwCBQ)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11916$kwCBQ
                               g$inv-collector$11917$kwCBQ
                               g$vis-collector$11918$kwCBQ
                               g$imp-collector$11919$kwCBQ
                               g$top-level-context$11920$kwCBQ
                               g$inv-collector$11921$kwCBQ
                               g$vis-collector$11922$kwCBQ
                               g$imp-collector$11923$kwCBQ)
                             ((case-lambda
                                ((g$swap$11924$kwCBQ)
                                 (dynamic-wind
                                   g$swap$11924$kwCBQ
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8851$kwCBQ
                                        g$x$11905$kwCBQ
                                        g$rib$11902$kwCBQ
                                        g$r$11903$kwCBQ)))
                                   g$swap$11924$kwCBQ)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11925$kwCBQ)
                                       (begin
                                         (g$top-level-context$11916$kwCBQ
                                           g$top-level-context$11920$kwCBQ)
                                         (set! g$top-level-context$11920$kwCBQ
                                           g$t$11925$kwCBQ))))
                                    (g$top-level-context$11916$kwCBQ))
                                   ((case-lambda
                                      ((g$t$11926$kwCBQ)
                                       (begin
                                         (g$inv-collector$11917$kwCBQ
                                           g$inv-collector$11921$kwCBQ)
                                         (set! g$inv-collector$11921$kwCBQ
                                           g$t$11926$kwCBQ))))
                                    (g$inv-collector$11917$kwCBQ))
                                   ((case-lambda
                                      ((g$t$11927$kwCBQ)
                                       (begin
                                         (g$vis-collector$11918$kwCBQ
                                           g$vis-collector$11922$kwCBQ)
                                         (set! g$vis-collector$11922$kwCBQ
                                           g$t$11927$kwCBQ))))
                                    (g$vis-collector$11918$kwCBQ))
                                   ((case-lambda
                                      ((g$t$11928$kwCBQ)
                                       (begin
                                         (g$imp-collector$11919$kwCBQ
                                           g$imp-collector$11923$kwCBQ)
                                         (set! g$imp-collector$11923$kwCBQ
                                           g$t$11928$kwCBQ))))
                                    (g$imp-collector$11919$kwCBQ))))))))
                          g$top-level-context$8915$kwCBQ
                          g$inv-collector$8847$kwCBQ
                          g$vis-collector$8848$kwCBQ
                          g$imp-collector$8849$kwCBQ
                          g$env$11874$kwCBQ
                          g$rtc$11904$kwCBQ
                          (g$make-collector$8846$kwCBQ)
                          (g$make-collector$8846$kwCBQ))))
                      (case-lambda
                        ((g$e$11929$kwCBQ g$r^$11930$kwCBQ)
                         ((case-lambda
                            ((g$r^$11931$kwCBQ g$e$11932$kwCBQ)
                             (begin
                               (g$set-interaction-env-r!$8877$kwCBQ
                                 g$env$11874$kwCBQ
                                 g$r^$11931$kwCBQ)
                               (values g$e$11932$kwCBQ (g$rtc$11904$kwCBQ)))))
                          g$r^$11930$kwCBQ
                          g$e$11929$kwCBQ))))))
                 (g$make-stx$8489$kwCBQ
                   g$x$11873$kwCBQ
                   g$top-mark*$8453$kwCBQ
                   (list g$rib$11902$kwCBQ)
                   '()))))
             (g$interaction-env-rib$8873$kwCBQ g$env$11874$kwCBQ)
             (g$interaction-env-r$8874$kwCBQ g$env$11874$kwCBQ)
             (g$make-collector$8846$kwCBQ))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11874$kwCBQ))))))
   (g$eval$8889$kwCBQ
     g$eval$12407$kwCBQ
     (case-lambda
       ((g$x$11933$kwCBQ g$env$11934$kwCBQ)
        (begin
          (if (not (g$environment?$8883$kwCBQ g$env$11934$kwCBQ))
            (error 'eval '"not an environment" g$env$11934$kwCBQ)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8888$kwCBQ g$x$11933$kwCBQ g$env$11934$kwCBQ)))
            (case-lambda
              ((g$x$11937$kwCBQ g$invoke-req*$11938$kwCBQ)
               ((case-lambda
                  ((g$invoke-req*$11939$kwCBQ g$x$11940$kwCBQ)
                   (begin
                     (g$for-each$5813$kwCBQ
                       g$invoke-library$8326$kwCBQ
                       g$invoke-req*$11939$kwCBQ)
                     (eval-core
                       (g$expanded->core$8026$kwCBQ g$x$11940$kwCBQ)))))
                g$invoke-req*$11938$kwCBQ
                g$x$11937$kwCBQ))))))))
   (g$expand->core$8890$kwCBQ
     g$expand->core$12408$kwCBQ
     (case-lambda
       ((g$x$11941$kwCBQ g$env$11942$kwCBQ)
        (begin
          (if (not (g$environment?$8883$kwCBQ g$env$11942$kwCBQ))
            (error 'eval '"not an environment" g$env$11942$kwCBQ)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8888$kwCBQ g$x$11941$kwCBQ g$env$11942$kwCBQ)))
            (case-lambda
              ((g$x$11945$kwCBQ g$invoke-req*$11946$kwCBQ)
               ((case-lambda
                  ((g$invoke-req*$11947$kwCBQ g$x$11948$kwCBQ)
                   (begin
                     (g$for-each$5813$kwCBQ
                       g$invoke-library$8326$kwCBQ
                       g$invoke-req*$11947$kwCBQ)
                     (g$expanded->core$8026$kwCBQ g$x$11948$kwCBQ))))
                g$invoke-req*$11946$kwCBQ
                g$x$11945$kwCBQ))))))))
   (g$library-expander$8891$kwCBQ
     g$library-expander$12409$kwCBQ
     (case-lambda
       ((g$x$11949$kwCBQ g$filename$11950$kwCBQ g$verify-name$11951$kwCBQ)
        (letrec* ((g$build-visit-code$11952$kwCBQ
                    (case-lambda
                      ((g$macro*$11995$kwCBQ)
                       (if (null? g$macro*$11995$kwCBQ)
                         (g$build-void$8446$kwCBQ)
                         (g$build-sequence$8445$kwCBQ
                           '#f
                           (g$map$5812$kwCBQ
                             (case-lambda
                               ((g$x$11996$kwCBQ)
                                ((case-lambda
                                   ((g$loc$11997$kwCBQ g$src$11998$kwCBQ)
                                    (list
                                      'set!
                                      g$loc$11997$kwCBQ
                                      g$src$11998$kwCBQ)))
                                 (car g$x$11996$kwCBQ)
                                 (g$cddr$6040$kwCBQ g$x$11996$kwCBQ))))
                             g$macro*$11995$kwCBQ))))))
                  (g$visit!$11953$kwCBQ
                    (case-lambda
                      ((g$macro*$11991$kwCBQ)
                       (g$for-each$5813$kwCBQ
                         (case-lambda
                           ((g$x$11992$kwCBQ)
                            ((case-lambda
                               ((g$loc$11993$kwCBQ g$proc$11994$kwCBQ)
                                (set-symbol-value!
                                  g$loc$11993$kwCBQ
                                  g$proc$11994$kwCBQ)))
                             (car g$x$11992$kwCBQ)
                             (g$cadr$6038$kwCBQ g$x$11992$kwCBQ))))
                         g$macro*$11991$kwCBQ)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8853$kwCBQ
                 g$x$11949$kwCBQ
                 g$verify-name$11951$kwCBQ)))
            (case-lambda
              ((g$name$11963$kwCBQ
                 g$ver$11964$kwCBQ
                 g$imp*$11965$kwCBQ
                 g$inv*$11966$kwCBQ
                 g$vis*$11967$kwCBQ
                 g$invoke-code$11968$kwCBQ
                 g$macro*$11969$kwCBQ
                 g$export-subst$11970$kwCBQ
                 g$export-env$11971$kwCBQ)
               ((case-lambda
                  ((g$export-env$11972$kwCBQ
                     g$export-subst$11973$kwCBQ
                     g$macro*$11974$kwCBQ
                     g$invoke-code$11975$kwCBQ
                     g$vis*$11976$kwCBQ
                     g$inv*$11977$kwCBQ
                     g$imp*$11978$kwCBQ
                     g$ver$11979$kwCBQ
                     g$name$11980$kwCBQ)
                   ((case-lambda
                      ((g$id$11981$kwCBQ
                         g$name$11982$kwCBQ
                         g$ver$11983$kwCBQ
                         g$imp*$11984$kwCBQ
                         g$vis*$11985$kwCBQ
                         g$inv*$11986$kwCBQ
                         g$visit-proc$11987$kwCBQ
                         g$invoke-proc$11988$kwCBQ
                         g$visit-code$11989$kwCBQ
                         g$invoke-code$11990$kwCBQ)
                       (begin
                         (g$install-library$8324$kwCBQ
                           g$id$11981$kwCBQ
                           g$name$11982$kwCBQ
                           g$ver$11983$kwCBQ
                           g$imp*$11984$kwCBQ
                           g$vis*$11985$kwCBQ
                           g$inv*$11986$kwCBQ
                           g$export-subst$11973$kwCBQ
                           g$export-env$11972$kwCBQ
                           g$visit-proc$11987$kwCBQ
                           g$invoke-proc$11988$kwCBQ
                           g$visit-code$11989$kwCBQ
                           g$invoke-code$11990$kwCBQ
                           '#t
                           g$filename$11950$kwCBQ)
                         (values
                           g$id$11981$kwCBQ
                           g$name$11982$kwCBQ
                           g$ver$11983$kwCBQ
                           g$imp*$11984$kwCBQ
                           g$vis*$11985$kwCBQ
                           g$inv*$11986$kwCBQ
                           g$invoke-code$11990$kwCBQ
                           g$visit-code$11989$kwCBQ
                           g$export-subst$11973$kwCBQ
                           g$export-env$11972$kwCBQ))))
                    (gensym)
                    g$name$11980$kwCBQ
                    g$ver$11979$kwCBQ
                    (g$map$5812$kwCBQ
                      g$library-spec$8330$kwCBQ
                      g$imp*$11978$kwCBQ)
                    (g$map$5812$kwCBQ
                      g$library-spec$8330$kwCBQ
                      g$vis*$11976$kwCBQ)
                    (g$map$5812$kwCBQ
                      g$library-spec$8330$kwCBQ
                      g$inv*$11977$kwCBQ)
                    (case-lambda
                      (() (g$visit!$11953$kwCBQ g$macro*$11974$kwCBQ)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$8026$kwCBQ
                           g$invoke-code$11975$kwCBQ))))
                    (g$build-visit-code$11952$kwCBQ g$macro*$11974$kwCBQ)
                    g$invoke-code$11975$kwCBQ)))
                g$export-env$11971$kwCBQ
                g$export-subst$11970$kwCBQ
                g$macro*$11969$kwCBQ
                g$invoke-code$11968$kwCBQ
                g$vis*$11967$kwCBQ
                g$inv*$11966$kwCBQ
                g$imp*$11965$kwCBQ
                g$ver$11964$kwCBQ
                g$name$11963$kwCBQ))))))
       ((g$x$11999$kwCBQ g$filename$12000$kwCBQ)
        (g$library-expander$8891$kwCBQ
          g$x$11999$kwCBQ
          g$filename$12000$kwCBQ
          (case-lambda ((g$x$12001$kwCBQ) (values)))))
       ((g$x$12002$kwCBQ)
        (g$library-expander$8891$kwCBQ
          g$x$12002$kwCBQ
          '#f
          (case-lambda ((g$x$12003$kwCBQ) (values)))))))
   (g$boot-library-expand$8892$kwCBQ
     g$boot-library-expand$12410$kwCBQ
     (case-lambda
       ((g$x$12004$kwCBQ)
        (call-with-values
          (case-lambda (() (g$library-expander$8891$kwCBQ g$x$12004$kwCBQ)))
          (case-lambda
            ((g$id$12015$kwCBQ
               g$name$12016$kwCBQ
               g$ver$12017$kwCBQ
               g$imp*$12018$kwCBQ
               g$vis*$12019$kwCBQ
               g$inv*$12020$kwCBQ
               g$invoke-code$12021$kwCBQ
               g$visit-code$12022$kwCBQ
               g$export-subst$12023$kwCBQ
               g$export-env$12024$kwCBQ)
             ((case-lambda
                ((g$export-env$12025$kwCBQ
                   g$export-subst$12026$kwCBQ
                   g$visit-code$12027$kwCBQ
                   g$invoke-code$12028$kwCBQ
                   g$inv*$12029$kwCBQ
                   g$vis*$12030$kwCBQ
                   g$imp*$12031$kwCBQ
                   g$ver$12032$kwCBQ
                   g$name$12033$kwCBQ
                   g$id$12034$kwCBQ)
                 (values
                   g$name$12033$kwCBQ
                   g$invoke-code$12028$kwCBQ
                   g$export-subst$12026$kwCBQ
                   g$export-env$12025$kwCBQ)))
              g$export-env$12024$kwCBQ
              g$export-subst$12023$kwCBQ
              g$visit-code$12022$kwCBQ
              g$invoke-code$12021$kwCBQ
              g$inv*$12020$kwCBQ
              g$vis*$12019$kwCBQ
              g$imp*$12018$kwCBQ
              g$ver$12017$kwCBQ
              g$name$12016$kwCBQ
              g$id$12015$kwCBQ)))))))
   (g$rev-map-append$8893$kwCBQ
     g$rev-map-append$12411$kwCBQ
     (case-lambda
       ((g$f$12035$kwCBQ g$ls$12036$kwCBQ g$ac$12037$kwCBQ)
        (if (null? g$ls$12036$kwCBQ)
          g$ac$12037$kwCBQ
          (g$rev-map-append$8893$kwCBQ
            g$f$12035$kwCBQ
            (cdr g$ls$12036$kwCBQ)
            (cons
              (g$f$12035$kwCBQ (car g$ls$12036$kwCBQ))
              g$ac$12037$kwCBQ))))))
   (g$build-exports$8894$kwCBQ
     g$build-exports$12412$kwCBQ
     (case-lambda
       ((g$lex*+loc*$12038$kwCBQ g$init*$12039$kwCBQ)
        (g$build-sequence$8445$kwCBQ
          '#f
          (cons
            (g$build-void$8446$kwCBQ)
            (g$rev-map-append$8893$kwCBQ
              (case-lambda
                ((g$x$12040$kwCBQ)
                 (list 'set! (cdr g$x$12040$kwCBQ) (car g$x$12040$kwCBQ))))
              g$lex*+loc*$12038$kwCBQ
              g$init*$12039$kwCBQ))))))
   (g$make-export-subst$8895$kwCBQ
     g$make-export-subst$12413$kwCBQ
     (case-lambda
       ((g$name*$12041$kwCBQ g$id*$12042$kwCBQ)
        (g$map$5812$kwCBQ
          (case-lambda
            ((g$name$12043$kwCBQ g$id$12044$kwCBQ)
             ((case-lambda
                ((g$label$12045$kwCBQ)
                 (begin
                   (if (not g$label$12045$kwCBQ)
                     (g$syntax-violation$8907$kwCBQ
                       '#f
                       '"cannot export unbound identifier"
                       g$id$12044$kwCBQ)
                     (void))
                   (cons g$name$12043$kwCBQ g$label$12045$kwCBQ))))
              (g$id->label$8529$kwCBQ g$id$12044$kwCBQ))))
          g$name*$12041$kwCBQ
          g$id*$12042$kwCBQ))))
   (g$make-export-env/macros$8896$kwCBQ
     g$make-export-env/macros$12414$kwCBQ
     (case-lambda
       ((g$lex*$12046$kwCBQ g$loc*$12047$kwCBQ g$r$12048$kwCBQ)
        (letrec* ((g$lookup$12049$kwCBQ
                    (case-lambda
                      ((g$x$12065$kwCBQ)
                       ((letrec ((g$f$12066$kwCBQ
                                   (case-lambda
                                     ((g$x$12067$kwCBQ
                                        g$lex*$12068$kwCBQ
                                        g$loc*$12069$kwCBQ)
                                      (if (pair? g$lex*$12068$kwCBQ)
                                        (if (eq? g$x$12067$kwCBQ
                                                 (car g$lex*$12068$kwCBQ))
                                          (car g$loc*$12069$kwCBQ)
                                          (g$f$12066$kwCBQ
                                            g$x$12067$kwCBQ
                                            (cdr g$lex*$12068$kwCBQ)
                                            (cdr g$loc*$12069$kwCBQ)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$12066$kwCBQ)
                        g$x$12065$kwCBQ
                        g$lex*$12046$kwCBQ
                        g$loc*$12047$kwCBQ)))))
          ((letrec ((g$f$12050$kwCBQ
                      (case-lambda
                        ((g$r$12051$kwCBQ
                           g$env$12052$kwCBQ
                           g$global*$12053$kwCBQ
                           g$macro*$12054$kwCBQ)
                         (if (null? g$r$12051$kwCBQ)
                           (values
                             g$env$12052$kwCBQ
                             g$global*$12053$kwCBQ
                             g$macro*$12054$kwCBQ)
                           ((case-lambda
                              ((g$x$12055$kwCBQ)
                               ((case-lambda
                                  ((g$label$12056$kwCBQ g$b$12057$kwCBQ)
                                   ((case-lambda
                                      ((g$t$12058$kwCBQ)
                                       (if (g$memv$5805$kwCBQ
                                             g$t$12058$kwCBQ
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$12059$kwCBQ)
                                             ((case-lambda
                                                ((g$loc$12060$kwCBQ
                                                   g$type$12061$kwCBQ)
                                                 (g$f$12050$kwCBQ
                                                   (cdr g$r$12051$kwCBQ)
                                                   (cons
                                                     (g$cons*$5814$kwCBQ
                                                       g$label$12056$kwCBQ
                                                       g$type$12061$kwCBQ
                                                       g$loc$12060$kwCBQ)
                                                     g$env$12052$kwCBQ)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8739$kwCBQ
                                                         g$v$12059$kwCBQ)
                                                       g$loc$12060$kwCBQ)
                                                     g$global*$12053$kwCBQ)
                                                   g$macro*$12054$kwCBQ)))
                                              (g$lookup$12049$kwCBQ
                                                (g$lexical-var$8739$kwCBQ
                                                  g$v$12059$kwCBQ))
                                              (if (g$lexical-mutable?$8740$kwCBQ
                                                    g$v$12059$kwCBQ)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8534$kwCBQ
                                            g$b$12057$kwCBQ))
                                         (if (g$memv$5805$kwCBQ
                                               g$t$12058$kwCBQ
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$12062$kwCBQ)
                                               (g$f$12050$kwCBQ
                                                 (cdr g$r$12051$kwCBQ)
                                                 (cons
                                                   (g$cons*$5814$kwCBQ
                                                     g$label$12056$kwCBQ
                                                     'global-macro
                                                     g$loc$12062$kwCBQ)
                                                   g$env$12052$kwCBQ)
                                                 g$global*$12053$kwCBQ
                                                 (cons
                                                   (cons
                                                     g$loc$12062$kwCBQ
                                                     (g$binding-value$8534$kwCBQ
                                                       g$b$12057$kwCBQ))
                                                   g$macro*$12054$kwCBQ))))
                                            (gensym))
                                           (if (g$memv$5805$kwCBQ
                                                 g$t$12058$kwCBQ
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$12063$kwCBQ)
                                                 (g$f$12050$kwCBQ
                                                   (cdr g$r$12051$kwCBQ)
                                                   (cons
                                                     (g$cons*$5814$kwCBQ
                                                       g$label$12056$kwCBQ
                                                       'global-macro!
                                                       g$loc$12063$kwCBQ)
                                                     g$env$12052$kwCBQ)
                                                   g$global*$12053$kwCBQ
                                                   (cons
                                                     (cons
                                                       g$loc$12063$kwCBQ
                                                       (g$binding-value$8534$kwCBQ
                                                         g$b$12057$kwCBQ))
                                                     g$macro*$12054$kwCBQ))))
                                              (gensym))
                                             (if (g$memv$5805$kwCBQ
                                                   g$t$12058$kwCBQ
                                                   '(local-ctv))
                                               ((case-lambda
                                                  ((g$loc$12064$kwCBQ)
                                                   (g$f$12050$kwCBQ
                                                     (cdr g$r$12051$kwCBQ)
                                                     (cons
                                                       (g$cons*$5814$kwCBQ
                                                         g$label$12056$kwCBQ
                                                         'global-ctv
                                                         g$loc$12064$kwCBQ)
                                                       g$env$12052$kwCBQ)
                                                     g$global*$12053$kwCBQ
                                                     (cons
                                                       (cons
                                                         g$loc$12064$kwCBQ
                                                         (g$binding-value$8534$kwCBQ
                                                           g$b$12057$kwCBQ))
                                                       g$macro*$12054$kwCBQ))))
                                                (gensym))
                                               (if (g$memv$5805$kwCBQ
                                                     g$t$12058$kwCBQ
                                                     '($rtd $module))
                                                 (g$f$12050$kwCBQ
                                                   (cdr g$r$12051$kwCBQ)
                                                   (cons
                                                     g$x$12055$kwCBQ
                                                     g$env$12052$kwCBQ)
                                                   g$global*$12053$kwCBQ
                                                   g$macro*$12054$kwCBQ)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$8533$kwCBQ
                                                     g$b$12057$kwCBQ)
                                                   (g$binding-value$8534$kwCBQ
                                                     g$b$12057$kwCBQ)))))))))
                                    (g$binding-type$8533$kwCBQ
                                      g$b$12057$kwCBQ))))
                                (car g$x$12055$kwCBQ)
                                (cdr g$x$12055$kwCBQ))))
                            (car g$r$12051$kwCBQ)))))))
             g$f$12050$kwCBQ)
           g$r$12048$kwCBQ
           '()
           '()
           '())))))
   (g$generate-temporaries$8897$kwCBQ
     g$generate-temporaries$12415$kwCBQ
     (case-lambda
       ((g$ls$12070$kwCBQ)
        ((case-lambda
           ((g$t$12071$kwCBQ)
            ((case-lambda
               ((g$ls/false$12072$kwCBQ)
                (if g$ls/false$12072$kwCBQ
                  (apply
                    (case-lambda
                      ((g$ls$12073$kwCBQ)
                       (g$map$5812$kwCBQ
                         (case-lambda
                           ((g$x$12074$kwCBQ)
                            (g$make-stx$8489$kwCBQ
                              ((case-lambda
                                 ((g$x$12075$kwCBQ)
                                  (if ((case-lambda
                                         ((g$t$12076$kwCBQ)
                                          (if g$t$12076$kwCBQ
                                            g$t$12076$kwCBQ
                                            (begin
                                              '#f
                                              (string? g$x$12075$kwCBQ)))))
                                       (symbol? g$x$12075$kwCBQ))
                                    (gensym g$x$12075$kwCBQ)
                                    (gensym 't))))
                               (g$syntax->datum$8910$kwCBQ g$x$12074$kwCBQ))
                              g$top-mark*$8453$kwCBQ
                              '()
                              '())))
                         g$ls$12073$kwCBQ)))
                    g$ls/false$12072$kwCBQ)
                  ((case-lambda
                     ((g$t$12077$kwCBQ)
                      ((case-lambda
                         ((g$ls/false$12078$kwCBQ)
                          (if g$ls/false$12078$kwCBQ
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$12078$kwCBQ)
                            (g$syntax-violation$8907$kwCBQ
                              '#f
                              '"invalid syntax"
                              g$t$12077$kwCBQ))))
                       (g$syntax-dispatch$8795$kwCBQ g$t$12077$kwCBQ '_))))
                   g$t$12071$kwCBQ))))
             (g$syntax-dispatch$8795$kwCBQ g$t$12071$kwCBQ 'each-any))))
         g$ls$12070$kwCBQ))))
   (g$free-identifier=?$8898$kwCBQ
     g$free-identifier=?$12416$kwCBQ
     (case-lambda
       ((g$x$12079$kwCBQ g$y$12080$kwCBQ)
        (if (g$id?$8516$kwCBQ g$x$12079$kwCBQ)
          (if (g$id?$8516$kwCBQ g$y$12080$kwCBQ)
            (g$free-id=?$8520$kwCBQ g$x$12079$kwCBQ g$y$12080$kwCBQ)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$12080$kwCBQ))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$12079$kwCBQ)))))
   (g$bound-identifier=?$8899$kwCBQ
     g$bound-identifier=?$12417$kwCBQ
     (case-lambda
       ((g$x$12081$kwCBQ g$y$12082$kwCBQ)
        (if (g$id?$8516$kwCBQ g$x$12081$kwCBQ)
          (if (g$id?$8516$kwCBQ g$y$12082$kwCBQ)
            (g$bound-id=?$8519$kwCBQ g$x$12081$kwCBQ g$y$12082$kwCBQ)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$12082$kwCBQ))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$12081$kwCBQ)))))
   (g$make-source-condition$8900$kwCBQ
     g$make-source-condition$12418$kwCBQ
     (case-lambda
       ((g$x$12083$kwCBQ)
        (letrec* ((g$12864$12084$kwCBQ
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12867$kwCBQ
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12866$12085$kwCBQ '#f)
                  (g$12865$12086$kwCBQ
                    (make-record-constructor-descriptor
                      g$12864$12084$kwCBQ
                      &condition-rcd
                      g$12866$12085$kwCBQ))
                  (g$12863$12087$kwCBQ (record-predicate g$12864$12084$kwCBQ))
                  (g$make-source-condition$12088$kwCBQ
                    (record-constructor g$12865$12086$kwCBQ))
                  (g$12861$12089$kwCBQ (record-accessor g$12864$12084$kwCBQ '0))
                  (g$12862$12090$kwCBQ (record-accessor g$12864$12084$kwCBQ '1))
                  (g$source-condition?$12091$kwCBQ
                    (condition-predicate g$12864$12084$kwCBQ))
                  (g$source-filename$12092$kwCBQ
                    (condition-accessor
                      g$12864$12084$kwCBQ
                      g$12861$12089$kwCBQ))
                  (g$source-character$12093$kwCBQ
                    (condition-accessor
                      g$12864$12084$kwCBQ
                      g$12862$12090$kwCBQ)))
          (if (pair? g$x$12083$kwCBQ)
            (g$make-source-condition$12088$kwCBQ
              (car g$x$12083$kwCBQ)
              (cdr g$x$12083$kwCBQ))
            (condition))))))
   (g$extract-position-condition$8901$kwCBQ
     g$extract-position-condition$12419$kwCBQ
     (case-lambda
       ((g$x$12094$kwCBQ)
        (g$make-source-condition$8900$kwCBQ
          (g$expression-position$8902$kwCBQ g$x$12094$kwCBQ)))))
   (g$expression-position$8902$kwCBQ
     g$expression-position$12420$kwCBQ
     (case-lambda
       ((g$x$12095$kwCBQ)
        (if (g$stx?$8488$kwCBQ g$x$12095$kwCBQ)
          (begin
            '#f
            ((case-lambda
               ((g$x$12096$kwCBQ)
                (if (annotation? g$x$12096$kwCBQ)
                  (begin '#f (annotation-source g$x$12096$kwCBQ))
                  '#f)))
             (g$stx-expr$8490$kwCBQ g$x$12095$kwCBQ)))
          '#f))))
   (g$assertion-error$8903$kwCBQ
     g$assertion-error$12421$kwCBQ
     (case-lambda
       ((g$expr$12097$kwCBQ g$pos$12098$kwCBQ)
        (raise
          (condition
            (g$make-assertion-violation$6614$kwCBQ)
            (g$make-who-condition$6628$kwCBQ 'assert)
            (g$make-message-condition$6582$kwCBQ '"assertion failed")
            (g$make-irritants-condition$6620$kwCBQ (list g$expr$12097$kwCBQ))
            (g$make-source-condition$8900$kwCBQ g$pos$12098$kwCBQ))))))
   (g$syntax-error$8904$kwCBQ
     g$syntax-error$12422$kwCBQ
     (case-lambda
       ((g$x$12099$kwCBQ . g$args$12100$kwCBQ)
        (begin
          (if (not (g$for-all$5810$kwCBQ string? g$args$12100$kwCBQ))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$12100$kwCBQ)
            (void))
          (raise
            (condition
              (g$make-message-condition$6582$kwCBQ
                (if (null? g$args$12100$kwCBQ)
                  '"invalid syntax"
                  (apply string-append g$args$12100$kwCBQ)))
              (g$make-syntax-violation$6654$kwCBQ
                (g$syntax->datum$8910$kwCBQ g$x$12099$kwCBQ)
                '#f)
              (g$extract-position-condition$8901$kwCBQ g$x$12099$kwCBQ)
              (g$extract-trace$8905$kwCBQ g$x$12099$kwCBQ)))))))
   (g$extract-trace$8905$kwCBQ
     g$extract-trace$12423$kwCBQ
     (case-lambda
       ((g$x$12101$kwCBQ)
        (letrec* ((g$12891$12102$kwCBQ
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12894$kwCBQ
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12893$12103$kwCBQ '#f)
                  (g$12892$12104$kwCBQ
                    (make-record-constructor-descriptor
                      g$12891$12102$kwCBQ
                      &condition-rcd
                      g$12893$12103$kwCBQ))
                  (g$12890$12105$kwCBQ (record-predicate g$12891$12102$kwCBQ))
                  (g$make-trace$12106$kwCBQ
                    (record-constructor g$12892$12104$kwCBQ))
                  (g$12889$12107$kwCBQ (record-accessor g$12891$12102$kwCBQ '0))
                  (g$trace?$12108$kwCBQ
                    (condition-predicate g$12891$12102$kwCBQ))
                  (g$trace-form$12109$kwCBQ
                    (condition-accessor
                      g$12891$12102$kwCBQ
                      g$12889$12107$kwCBQ)))
          ((letrec ((g$f$12110$kwCBQ
                      (case-lambda
                        ((g$x$12111$kwCBQ)
                         (if (g$stx?$8488$kwCBQ g$x$12111$kwCBQ)
                           (apply
                             condition
                             (g$make-trace$12106$kwCBQ g$x$12111$kwCBQ)
                             (g$map$5812$kwCBQ
                               g$f$12110$kwCBQ
                               (g$stx-ae*$8493$kwCBQ g$x$12111$kwCBQ)))
                           (if (annotation? g$x$12111$kwCBQ)
                             (g$make-trace$12106$kwCBQ
                               (g$make-stx$8489$kwCBQ
                                 g$x$12111$kwCBQ
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$12110$kwCBQ)
           g$x$12101$kwCBQ)))))
   (g$syntax-violation*$8906$kwCBQ
     g$syntax-violation*$12424$kwCBQ
     (case-lambda
       ((g$who$12112$kwCBQ
          g$msg$12113$kwCBQ
          g$form$12114$kwCBQ
          g$condition-object$12115$kwCBQ)
        (begin
          (if (not (string? g$msg$12113$kwCBQ))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$12113$kwCBQ)
            (void))
          ((case-lambda
             ((g$who$12116$kwCBQ)
              (raise
                (condition
                  (if g$who$12116$kwCBQ
                    (g$make-who-condition$6628$kwCBQ g$who$12116$kwCBQ)
                    (condition))
                  (g$make-message-condition$6582$kwCBQ g$msg$12113$kwCBQ)
                  g$condition-object$12115$kwCBQ
                  (g$extract-position-condition$8901$kwCBQ g$form$12114$kwCBQ)
                  (g$extract-trace$8905$kwCBQ g$form$12114$kwCBQ)))))
           (if ((case-lambda
                  ((g$t$12117$kwCBQ)
                   (if g$t$12117$kwCBQ
                     g$t$12117$kwCBQ
                     (begin '#f (symbol? g$who$12112$kwCBQ)))))
                (string? g$who$12112$kwCBQ))
             g$who$12112$kwCBQ
             (if (not g$who$12112$kwCBQ)
               ((case-lambda
                  ((g$t$12118$kwCBQ)
                   ((case-lambda
                      ((g$ls/false$12119$kwCBQ)
                       (if (if g$ls/false$12119$kwCBQ
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$12120$kwCBQ)
                                    (g$id?$8516$kwCBQ g$id$12120$kwCBQ)))
                                 g$ls/false$12119$kwCBQ))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$12121$kwCBQ)
                              (g$syntax->datum$8910$kwCBQ g$id$12121$kwCBQ)))
                           g$ls/false$12119$kwCBQ)
                         ((case-lambda
                            ((g$t$12122$kwCBQ)
                             ((case-lambda
                                ((g$ls/false$12123$kwCBQ)
                                 (if (if g$ls/false$12123$kwCBQ
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$12124$kwCBQ
                                                g$rest$12125$kwCBQ)
                                              (g$id?$8516$kwCBQ
                                                g$id$12124$kwCBQ)))
                                           g$ls/false$12123$kwCBQ))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$12126$kwCBQ g$rest$12127$kwCBQ)
                                        (g$syntax->datum$8910$kwCBQ
                                          g$id$12126$kwCBQ)))
                                     g$ls/false$12123$kwCBQ)
                                   ((case-lambda
                                      ((g$t$12128$kwCBQ)
                                       ((case-lambda
                                          ((g$ls/false$12129$kwCBQ)
                                           (if g$ls/false$12129$kwCBQ
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$12129$kwCBQ)
                                             (g$syntax-violation$8907$kwCBQ
                                               '#f
                                               '"invalid syntax"
                                               g$t$12128$kwCBQ))))
                                        (g$syntax-dispatch$8795$kwCBQ
                                          g$t$12128$kwCBQ
                                          '_))))
                                    g$t$12122$kwCBQ))))
                              (g$syntax-dispatch$8795$kwCBQ
                                g$t$12122$kwCBQ
                                '(any . any)))))
                          g$t$12118$kwCBQ))))
                    (g$syntax-dispatch$8795$kwCBQ g$t$12118$kwCBQ 'any))))
                g$form$12114$kwCBQ)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$12112$kwCBQ))))))))
   (g$syntax-violation$8907$kwCBQ
     g$syntax-violation$12425$kwCBQ
     (case-lambda
       ((g$who$12130$kwCBQ g$msg$12131$kwCBQ g$form$12132$kwCBQ)
        (g$syntax-violation$8907$kwCBQ
          g$who$12130$kwCBQ
          g$msg$12131$kwCBQ
          g$form$12132$kwCBQ
          '#f))
       ((g$who$12133$kwCBQ
          g$msg$12134$kwCBQ
          g$form$12135$kwCBQ
          g$subform$12136$kwCBQ)
        (g$syntax-violation*$8906$kwCBQ
          g$who$12133$kwCBQ
          g$msg$12134$kwCBQ
          g$form$12135$kwCBQ
          (g$make-syntax-violation$6654$kwCBQ
            (g$syntax->datum$8910$kwCBQ g$form$12135$kwCBQ)
            (g$syntax->datum$8910$kwCBQ g$subform$12136$kwCBQ))))))
   (g$identifier?$8908$kwCBQ
     g$identifier?$12426$kwCBQ
     (case-lambda ((g$x$12137$kwCBQ) (g$id?$8516$kwCBQ g$x$12137$kwCBQ))))
   (g$datum->syntax$8909$kwCBQ
     g$datum->syntax$12427$kwCBQ
     (case-lambda
       ((g$id$12138$kwCBQ g$datum$12139$kwCBQ)
        (if (g$id?$8516$kwCBQ g$id$12138$kwCBQ)
          (g$datum->stx$8499$kwCBQ g$id$12138$kwCBQ g$datum$12139$kwCBQ)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$12138$kwCBQ)))))
   (g$syntax->datum$8910$kwCBQ
     g$syntax->datum$12428$kwCBQ
     (case-lambda
       ((g$x$12140$kwCBQ) (g$stx->datum$8527$kwCBQ g$x$12140$kwCBQ))))
   (g$compile-r6rs-top-level$8911$kwCBQ
     g$compile-r6rs-top-level$12429$kwCBQ
     (case-lambda
       ((g$x*$12141$kwCBQ)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8855$kwCBQ g$x*$12141$kwCBQ)))
          (case-lambda
            ((g$lib*$12144$kwCBQ g$invoke-code$12145$kwCBQ)
             ((case-lambda
                ((g$invoke-code$12146$kwCBQ g$lib*$12147$kwCBQ)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5813$kwCBQ
                        g$invoke-library$8326$kwCBQ
                        g$lib*$12147$kwCBQ)
                      (eval-core
                        (g$expanded->core$8026$kwCBQ
                          g$invoke-code$12146$kwCBQ)))))))
              g$invoke-code$12145$kwCBQ
              g$lib*$12144$kwCBQ)))))))
   (g$pre-compile-r6rs-top-level$8912$kwCBQ
     g$pre-compile-r6rs-top-level$12430$kwCBQ
     (case-lambda
       ((g$x*$12148$kwCBQ)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8855$kwCBQ g$x*$12148$kwCBQ)))
          (case-lambda
            ((g$lib*$12151$kwCBQ g$invoke-code$12152$kwCBQ)
             ((case-lambda
                ((g$invoke-code$12153$kwCBQ g$lib*$12154$kwCBQ)
                 (begin
                   (g$for-each$5813$kwCBQ
                     g$invoke-library$8326$kwCBQ
                     g$lib*$12154$kwCBQ)
                   (compile-core
                     (g$expanded->core$8026$kwCBQ g$invoke-code$12153$kwCBQ)))))
              g$invoke-code$12152$kwCBQ
              g$lib*$12151$kwCBQ)))))))
   (g$new-interaction-environment$8913$kwCBQ
     g$new-interaction-environment$12431$kwCBQ
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$12155$kwCBQ g$rib$12156$kwCBQ)
            (begin
              ((case-lambda
                 ((g$subst$12157$kwCBQ)
                  (begin
                    (g$set-rib-sym*!$8471$kwCBQ
                      g$rib$12156$kwCBQ
                      (g$map$5812$kwCBQ car g$subst$12157$kwCBQ))
                    (g$set-rib-mark**!$8472$kwCBQ
                      g$rib$12156$kwCBQ
                      (g$map$5812$kwCBQ
                        (case-lambda ((g$x$12158$kwCBQ) g$top-mark*$8453$kwCBQ))
                        g$subst$12157$kwCBQ))
                    (g$set-rib-label*!$8473$kwCBQ
                      g$rib$12156$kwCBQ
                      (g$map$5812$kwCBQ cdr g$subst$12157$kwCBQ)))))
               (g$library-subst$8283$kwCBQ g$lib$12155$kwCBQ))
              (g$make-interaction-env$8872$kwCBQ g$rib$12156$kwCBQ '() '()))))
         (g$find-library-by-name$8319$kwCBQ '(ironscheme))
         (g$make-empty-rib$8476$kwCBQ)))))
   (g$interaction-environment$8914$kwCBQ
     g$interaction-environment$12432$kwCBQ
     ((case-lambda
        ((g$e$12159$kwCBQ)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$12160$kwCBQ)
                (if g$t$12160$kwCBQ
                  g$t$12160$kwCBQ
                  (begin
                    '#f
                    (begin
                      (set! g$e$12159$kwCBQ
                        (g$new-interaction-environment$8913$kwCBQ))
                      g$e$12159$kwCBQ)))))
             g$e$12159$kwCBQ)))))
      '#f))
   (g$top-level-context$8915$kwCBQ
     g$top-level-context$12433$kwCBQ
     (g$make-parameter$7778$kwCBQ '#f)))
  (g$current-library-expander$8316$kwCBQ g$library-expander$8891$kwCBQ))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$8023$kwCBQ
      (case-lambda
        ((g$x$12488$kwCBQ)
         ((case-lambda
            ((g$t$12489$kwCBQ) (if g$t$12489$kwCBQ (cdr g$t$12489$kwCBQ) '#f)))
          (g$assq$5800$kwCBQ
            g$x$12488$kwCBQ
            '((ellipsis-map . g$ellipsis-map$12318$kwCBQ)
              (make-list . g$make-list$5795$kwCBQ)
              (last-pair . g$last-pair$5794$kwCBQ)
              (ironscheme-build . g$ironscheme-build$12481$kwCBQ)
              (syntax-error . g$syntax-error$12422$kwCBQ)
              (syntax-dispatch . g$syntax-dispatch$12313$kwCBQ)
              (compile-system-libraries
                .
                g$compile-system-libraries$12483$kwCBQ)
              (compile->closure . g$compile->closure$12485$kwCBQ)
              (compile . g$compile$12484$kwCBQ)
              (load . g$load$12480$kwCBQ)
              (interaction-environment . g$interaction-environment$12432$kwCBQ)
              (string-ci>? . g$string-ci>?$6804$kwCBQ)
              (string-ci>=? . g$string-ci>=?$6806$kwCBQ)
              (string-ci=? . g$string-ci=?$6802$kwCBQ)
              (string-ci<? . g$string-ci<?$6803$kwCBQ)
              (string-ci<=? . g$string-ci<=?$6805$kwCBQ)
              (char-ci>? . g$char-ci>?$6809$kwCBQ)
              (char-ci>=? . g$char-ci>=?$6811$kwCBQ)
              (char-ci=? . g$char-ci=?$6807$kwCBQ)
              (char-ci<? . g$char-ci<?$6808$kwCBQ)
              (char-ci<=? . g$char-ci<=?$6810$kwCBQ)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$12251$kwCBQ)
              (variable-transformer? . g$variable-transformer?$12250$kwCBQ)
              (make-variable-transformer
                .
                g$make-variable-transformer$12248$kwCBQ)
              (identifier? . g$identifier?$12426$kwCBQ)
              (generate-temporaries . g$generate-temporaries$12415$kwCBQ)
              (free-identifier=? . g$free-identifier=?$12416$kwCBQ)
              (syntax->datum . g$syntax->datum$12428$kwCBQ)
              (datum->syntax . g$datum->syntax$12427$kwCBQ)
              (bound-identifier=? . g$bound-identifier=?$12417$kwCBQ)
              (delete-file . g$delete-file$6334$kwCBQ)
              (file-exists? . g$file-exists?$6333$kwCBQ)
              (list-sort . g$list-sort$6729$kwCBQ)
              (make-eqv-hashtable . g$make-eqv-hashtable$6316$kwCBQ)
              (make-eq-hashtable . g$make-eq-hashtable$6315$kwCBQ)
              (hashtable-update! . g$hashtable-update!$6322$kwCBQ)
              (hashtable-size . g$hashtable-size$6317$kwCBQ)
              (hashtable-set! . g$hashtable-set!$6319$kwCBQ)
              (hashtable-ref . g$hashtable-ref$6318$kwCBQ)
              (hashtable-delete! . g$hashtable-delete!$6320$kwCBQ)
              (hashtable-contains? . g$hashtable-contains?$6321$kwCBQ)
              (hashtable-clear! . g$hashtable-clear!$6323$kwCBQ)
              (call-with-output-file . g$call-with-output-file$7165$kwCBQ)
              (call-with-input-file . g$call-with-input-file$7164$kwCBQ)
              (write-char . g$write-char$7161$kwCBQ)
              (with-output-to-file . g$with-output-to-file$7163$kwCBQ)
              (with-input-from-file . g$with-input-from-file$7162$kwCBQ)
              (read-char . g$read-char$7160$kwCBQ)
              (peek-char . g$peek-char$7159$kwCBQ)
              (newline . g$newline$7166$kwCBQ)
              (port? . g$port?$7114$kwCBQ)
              (open-string-output-port . g$open-string-output-port$7113$kwCBQ)
              (make-i/o-write-error . g$make-i/o-write-error$7029$kwCBQ)
              (make-i/o-read-error . g$make-i/o-read-error$7023$kwCBQ)
              (make-i/o-port-error . g$make-i/o-port-error$7075$kwCBQ)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$7035$kwCBQ)
              (make-i/o-filename-error . g$make-i/o-filename-error$7043$kwCBQ)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$7051$kwCBQ)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$7057$kwCBQ)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$7069$kwCBQ)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$7063$kwCBQ)
              (make-i/o-error . g$make-i/o-error$7017$kwCBQ)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$7089$kwCBQ)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$7083$kwCBQ)
              (i/o-write-error? . g$i/o-write-error?$7030$kwCBQ)
              (i/o-read-error? . g$i/o-read-error?$7024$kwCBQ)
              (i/o-port-error? . g$i/o-port-error?$7077$kwCBQ)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$7037$kwCBQ)
              (i/o-error-position . g$i/o-error-position$7038$kwCBQ)
              (i/o-filename-error? . g$i/o-filename-error?$7045$kwCBQ)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$7052$kwCBQ)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$7058$kwCBQ)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$7070$kwCBQ)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$7064$kwCBQ)
              (i/o-error? . g$i/o-error?$7018$kwCBQ)
              (i/o-error-port . g$i/o-error-port$7078$kwCBQ)
              (i/o-error-filename . g$i/o-error-filename$7046$kwCBQ)
              (i/o-encoding-error? . g$i/o-encoding-error?$7091$kwCBQ)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$7092$kwCBQ)
              (i/o-decoding-error? . g$i/o-decoding-error?$7084$kwCBQ)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$7115$kwCBQ)
              (call-with-port . g$call-with-port$7116$kwCBQ)
              (scheme-report-environment
                .
                g$scheme-report-environment$12405$kwCBQ)
              (quotient . g$quotient$6696$kwCBQ)
              (null-environment . g$null-environment$12404$kwCBQ)
              (remainder . g$remainder$6697$kwCBQ)
              (modulo . g$modulo$6698$kwCBQ)
              (inexact->exact . g$inexact->exact$6693$kwCBQ)
              (force . g$force$6700$kwCBQ)
              (exact->inexact . g$exact->inexact$6694$kwCBQ)
              (command-line . g$command-line$12477$kwCBQ)
              (remove . g$remove$5817$kwCBQ)
              (remv . g$remv$5818$kwCBQ)
              (remp . g$remp$5798$kwCBQ)
              (remq . g$remq$5819$kwCBQ)
              (partition . g$partition$5797$kwCBQ)
              (memv . g$memv$5805$kwCBQ)
              (memq . g$memq$5804$kwCBQ)
              (memp . g$memp$5807$kwCBQ)
              (member . g$member$5806$kwCBQ)
              (exists . g$exists$5811$kwCBQ)
              (for-all . g$for-all$5810$kwCBQ)
              (fold-right . g$fold-right$5816$kwCBQ)
              (fold-left . g$fold-left$5815$kwCBQ)
              (find . g$find$5796$kwCBQ)
              (filter . g$filter$5799$kwCBQ)
              (cons* . g$cons*$5814$kwCBQ)
              (assv . g$assv$5801$kwCBQ)
              (assq . g$assq$5800$kwCBQ)
              (assp . g$assp$5803$kwCBQ)
              (assoc . g$assoc$5802$kwCBQ)
              (eval . g$eval$12407$kwCBQ)
              (environment . g$environment$12403$kwCBQ)
              (make-enumeration . g$make-enumeration$7298$kwCBQ)
              (enum-set=? . g$enum-set=?$7305$kwCBQ)
              (enum-set-universe . g$enum-set-universe$7299$kwCBQ)
              (enum-set-union . g$enum-set-union$7306$kwCBQ)
              (enum-set-subset? . g$enum-set-subset?$7304$kwCBQ)
              (enum-set-projection . g$enum-set-projection$7310$kwCBQ)
              (enum-set-member? . g$enum-set-member?$7303$kwCBQ)
              (enum-set-intersection . g$enum-set-intersection$7307$kwCBQ)
              (enum-set-indexer . g$enum-set-indexer$7300$kwCBQ)
              (enum-set-difference . g$enum-set-difference$7308$kwCBQ)
              (enum-set-constructor . g$enum-set-constructor$7301$kwCBQ)
              (enum-set-complement . g$enum-set-complement$7309$kwCBQ)
              (enum-set->list . g$enum-set->list$7302$kwCBQ)
              (who-condition? . g$who-condition?$6630$kwCBQ)
              (warning? . g$warning?$6591$kwCBQ)
              (violation? . g$violation?$6609$kwCBQ)
              (undefined-violation? . g$undefined-violation?$6665$kwCBQ)
              (syntax-violation? . g$syntax-violation?$6657$kwCBQ)
              (syntax-violation-subform . g$syntax-violation-subform$6659$kwCBQ)
              (syntax-violation-form . g$syntax-violation-form$6658$kwCBQ)
              (syntax-violation . g$syntax-violation$12425$kwCBQ)
              (serious-condition? . g$serious-condition?$6597$kwCBQ)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6637$kwCBQ)
              (message-condition? . g$message-condition?$6584$kwCBQ)
              (make-who-condition . g$make-who-condition$6628$kwCBQ)
              (make-warning . g$make-warning$6590$kwCBQ)
              (make-violation . g$make-violation$6608$kwCBQ)
              (make-undefined-violation . g$make-undefined-violation$6664$kwCBQ)
              (make-syntax-violation . g$make-syntax-violation$6654$kwCBQ)
              (make-serious-condition . g$make-serious-condition$6596$kwCBQ)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6636$kwCBQ)
              (make-message-condition . g$make-message-condition$6582$kwCBQ)
              (make-lexical-violation . g$make-lexical-violation$6648$kwCBQ)
              (make-irritants-condition . g$make-irritants-condition$6620$kwCBQ)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6642$kwCBQ)
              (make-error . g$make-error$6602$kwCBQ)
              (make-assertion-violation . g$make-assertion-violation$6614$kwCBQ)
              (lexical-violation? . g$lexical-violation?$6649$kwCBQ)
              (irritants-condition? . g$irritants-condition?$6622$kwCBQ)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6643$kwCBQ)
              (error? . g$error?$6603$kwCBQ)
              (condition-who . g$condition-who$6631$kwCBQ)
              (condition-message . g$condition-message$6585$kwCBQ)
              (condition-irritants . g$condition-irritants$6623$kwCBQ)
              (assertion-violation? . g$assertion-violation?$6615$kwCBQ)
              (native-endianness . g$native-endianness$6447$kwCBQ)
              (bytevector-u64-set! . g$bytevector-u64-set!$6468$kwCBQ)
              (bytevector-u64-ref . g$bytevector-u64-ref$6464$kwCBQ)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6470$kwCBQ)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6466$kwCBQ)
              (bytevector-u32-set! . g$bytevector-u32-set!$6460$kwCBQ)
              (bytevector-u32-ref . g$bytevector-u32-ref$6456$kwCBQ)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6462$kwCBQ)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6458$kwCBQ)
              (bytevector-u16-set! . g$bytevector-u16-set!$6452$kwCBQ)
              (bytevector-u16-ref . g$bytevector-u16-ref$6448$kwCBQ)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6454$kwCBQ)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6450$kwCBQ)
              (bytevector-s64-set! . g$bytevector-s64-set!$6469$kwCBQ)
              (bytevector-s64-ref . g$bytevector-s64-ref$6465$kwCBQ)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6471$kwCBQ)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6467$kwCBQ)
              (bytevector-s32-set! . g$bytevector-s32-set!$6461$kwCBQ)
              (bytevector-s32-ref . g$bytevector-s32-ref$6457$kwCBQ)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6463$kwCBQ)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6459$kwCBQ)
              (bytevector-s16-set! . g$bytevector-s16-set!$6453$kwCBQ)
              (bytevector-s16-ref . g$bytevector-s16-ref$6449$kwCBQ)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6455$kwCBQ)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6451$kwCBQ)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6474$kwCBQ)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6472$kwCBQ)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6475$kwCBQ)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6473$kwCBQ)
              (no-nans-violation? . g$no-nans-violation?$6932$kwCBQ)
              (no-infinities-violation? . g$no-infinities-violation?$6926$kwCBQ)
              (make-no-nans-violation . g$make-no-nans-violation$6931$kwCBQ)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6925$kwCBQ)
              (fxrotate-bit-field . g$fxrotate-bit-field$6908$kwCBQ)
              (fxif . g$fxif$6902$kwCBQ)
              (fxcopy-bit-field . g$fxcopy-bit-field$6905$kwCBQ)
              (fxcopy-bit . g$fxcopy-bit$6903$kwCBQ)
              (fxbit-field . g$fxbit-field$6904$kwCBQ)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6907$kwCBQ)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6906$kwCBQ)
              (fx-/carry . g$fx-/carry$6900$kwCBQ)
              (fx+/carry . g$fx+/carry$6901$kwCBQ)
              (fx*/carry . g$fx*/carry$6899$kwCBQ)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6849$kwCBQ)
              (bitwise-if . g$bitwise-if$6843$kwCBQ)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6846$kwCBQ)
              (bitwise-copy-bit . g$bitwise-copy-bit$6844$kwCBQ)
              (bitwise-bit-field . g$bitwise-bit-field$6845$kwCBQ)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6848$kwCBQ)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6847$kwCBQ)
              (zero? . g$zero?$6067$kwCBQ)
              (vector-map . g$vector-map$6089$kwCBQ)
              (vector-for-each . g$vector-for-each$6090$kwCBQ)
              (symbol=? . g$symbol=?$6079$kwCBQ)
              (string>? . g$string>?$6076$kwCBQ)
              (string>=? . g$string>=?$6078$kwCBQ)
              (string=? . g$string=?$6074$kwCBQ)
              (string<? . g$string<?$6075$kwCBQ)
              (string<=? . g$string<=?$6077$kwCBQ)
              (string-for-each . g$string-for-each$6091$kwCBQ)
              (rationalize . g$rationalize$6086$kwCBQ)
              (positive? . g$positive?$6065$kwCBQ)
              (odd? . g$odd?$6069$kwCBQ)
              (negative? . g$negative?$6066$kwCBQ)
              (min . g$min$6071$kwCBQ)
              (max . g$max$6070$kwCBQ)
              (map . g$map$5812$kwCBQ)
              (list-tail . g$list-tail$5792$kwCBQ)
              (list-ref . g$list-ref$5793$kwCBQ)
              (lcm . g$lcm$6073$kwCBQ)
              (gcd . g$gcd$6072$kwCBQ)
              (for-each . g$for-each$5813$kwCBQ)
              (even? . g$even?$6068$kwCBQ)
              (char>? . g$char>?$6083$kwCBQ)
              (char>=? . g$char>=?$6085$kwCBQ)
              (char=? . g$char=?$6081$kwCBQ)
              (char<? . g$char<?$6082$kwCBQ)
              (char<=? . g$char<=?$6084$kwCBQ)
              (cddddr . g$cddddr$6064$kwCBQ)
              (cdddar . g$cdddar$6063$kwCBQ)
              (cddadr . g$cddadr$6062$kwCBQ)
              (cddaar . g$cddaar$6061$kwCBQ)
              (cdaddr . g$cdaddr$6060$kwCBQ)
              (cdadar . g$cdadar$6059$kwCBQ)
              (cdaadr . g$cdaadr$6058$kwCBQ)
              (cdaaar . g$cdaaar$6057$kwCBQ)
              (cadddr . g$cadddr$6056$kwCBQ)
              (caddar . g$caddar$6055$kwCBQ)
              (cadadr . g$cadadr$6054$kwCBQ)
              (cadaar . g$cadaar$6053$kwCBQ)
              (caaddr . g$caaddr$6052$kwCBQ)
              (caadar . g$caadar$6051$kwCBQ)
              (caaadr . g$caaadr$6050$kwCBQ)
              (caaaar . g$caaaar$6049$kwCBQ)
              (cdddr . g$cdddr$6048$kwCBQ)
              (cddar . g$cddar$6047$kwCBQ)
              (cdadr . g$cdadr$6046$kwCBQ)
              (cdaar . g$cdaar$6045$kwCBQ)
              (caddr . g$caddr$6044$kwCBQ)
              (cadar . g$cadar$6043$kwCBQ)
              (caadr . g$caadr$6042$kwCBQ)
              (caaar . g$caaar$6041$kwCBQ)
              (cddr . g$cddr$6040$kwCBQ)
              (cdar . g$cdar$6039$kwCBQ)
              (cadr . g$cadr$6038$kwCBQ)
              (caar . g$caar$6037$kwCBQ)
              (boolean=? . g$boolean=?$6080$kwCBQ)
              (enum-set? . g$enum?$7279$kwCBQ)
              (make-promise . g$make-promise$6699$kwCBQ)
              (load/args . g$load/args$12479$kwCBQ)
              (printf . g$printf$7334$kwCBQ)
              (fprintf . g$fprintf$7335$kwCBQ)
              (format . g$format$7336$kwCBQ)
              (trace-printer . g$trace-printer$12476$kwCBQ)
              (make-traced-macro . g$make-traced-macro$7340$kwCBQ)
              (assertion-error . g$assertion-error$12421$kwCBQ)
              (make-parameter . g$make-parameter$7778$kwCBQ)
              (environment-bindings . g$environment-bindings$12399$kwCBQ)
              (environment-symbols . g$environment-symbols$12402$kwCBQ)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$12398$kwCBQ)
              (library-path . g$library-path$8308$kwCBQ)
              (make-compile-time-value . g$make-compile-time-value$12249$kwCBQ)
              (expand->core . g$expand->core$12408$kwCBQ)
              (expand . g$expand$12406$kwCBQ)
              (expand-boot-cps . g$expand-boot-cps$7673$kwCBQ)
              (convert->cps . g$convert->cps$7670$kwCBQ)
              (installed-libraries . g$installed-libraries$8329$kwCBQ)
              (uninstall-library . g$uninstall-library$8320$kwCBQ)))))))
    (g$install-library$8324$kwCBQ
      'g$13585$kwCBQ
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13522$kwCBQ)
        (cosh . g$13521$kwCBQ)
        (sinh . g$13520$kwCBQ)
        (make-guid . g$13519$kwCBQ)
        (unspecified? . g$13518$kwCBQ)
        (make-list . g$6596$kwCBQ)
        (last-pair . g$6595$kwCBQ)
        (load-r5rs . g$13517$kwCBQ)
        (license . g$13516$kwCBQ)
        (stacktrace . g$13515$kwCBQ)
        (ironscheme-build . g$12962$kwCBQ)
        (set-symbol-value! . g$13502$kwCBQ)
        (symbol-value . g$13501$kwCBQ)
        (symbol-bound? . g$13500$kwCBQ)
        (ungensym . g$13499$kwCBQ)
        (gensym . g$13498$kwCBQ)
        (void . g$13497$kwCBQ)
        (compile-system-libraries . g$12964$kwCBQ)
        (compile->closure . g$12966$kwCBQ)
        (compile . g$12965$kwCBQ)
        (load . g$12961$kwCBQ)
        (interaction-environment . g$9967$kwCBQ)
        (string-upcase . g$13493$kwCBQ)
        (string-titlecase . g$13492$kwCBQ)
        (string-normalize-nfkd . g$13491$kwCBQ)
        (string-normalize-nfkc . g$13490$kwCBQ)
        (string-normalize-nfd . g$13489$kwCBQ)
        (string-normalize-nfc . g$13488$kwCBQ)
        (string-foldcase . g$13487$kwCBQ)
        (string-downcase . g$13486$kwCBQ)
        (string-ci>? . g$7764$kwCBQ)
        (string-ci>=? . g$7766$kwCBQ)
        (string-ci=? . g$7762$kwCBQ)
        (string-ci<? . g$7763$kwCBQ)
        (string-ci<=? . g$7765$kwCBQ)
        (char-whitespace? . g$13485$kwCBQ)
        (char-upper-case? . g$13484$kwCBQ)
        (char-title-case? . g$13483$kwCBQ)
        (char-numeric? . g$13482$kwCBQ)
        (char-lower-case? . g$13481$kwCBQ)
        (char-general-category . g$13480$kwCBQ)
        (char-upcase . g$13479$kwCBQ)
        (char-titlecase . g$13478$kwCBQ)
        (char-foldcase . g$13477$kwCBQ)
        (char-downcase . g$13476$kwCBQ)
        (char-ci>? . g$7803$kwCBQ)
        (char-ci>=? . g$7805$kwCBQ)
        (char-ci=? . g$7801$kwCBQ)
        (char-ci<? . g$7802$kwCBQ)
        (char-ci<=? . g$7804$kwCBQ)
        (char-alphabetic? . g$13475$kwCBQ)
        (make-variable-transformer . g$9561$kwCBQ)
        (identifier? . g$9961$kwCBQ)
        (generate-temporaries . g$9950$kwCBQ)
        (free-identifier=? . g$9951$kwCBQ)
        (syntax->datum . g$9963$kwCBQ)
        (datum->syntax . g$9962$kwCBQ)
        (bound-identifier=? . g$9952$kwCBQ)
        (record-type-descriptor? . g$13474$kwCBQ)
        (record-predicate . g$13473$kwCBQ)
        (record-mutator . g$13472$kwCBQ)
        (record-constructor . g$13471$kwCBQ)
        (record-accessor . g$13470$kwCBQ)
        (make-record-type-descriptor . g$13469$kwCBQ)
        (make-record-constructor-descriptor . g$13468$kwCBQ)
        (record? . g$13467$kwCBQ)
        (record-type-uid . g$13466$kwCBQ)
        (record-type-sealed? . g$13465$kwCBQ)
        (record-type-parent . g$13464$kwCBQ)
        (record-type-opaque? . g$13463$kwCBQ)
        (record-type-name . g$13462$kwCBQ)
        (record-type-generative? . g$13461$kwCBQ)
        (record-type-field-names . g$13460$kwCBQ)
        (record-rtd . g$13459$kwCBQ)
        (record-field-mutable? . g$13458$kwCBQ)
        (delete-file . g$7338$kwCBQ)
        (file-exists? . g$7337$kwCBQ)
        (vector-sort! . g$13457$kwCBQ)
        (vector-sort . g$13456$kwCBQ)
        (list-sort . g$7704$kwCBQ)
        (symbol-hash . g$13455$kwCBQ)
        (string-ci-hash . g$13454$kwCBQ)
        (string-hash . g$13453$kwCBQ)
        (equal-hash . g$13452$kwCBQ)
        (hashtable-equivalence-function . g$13451$kwCBQ)
        (make-hashtable . g$13450$kwCBQ)
        (hashtable-hash-function . g$13449$kwCBQ)
        (make-eqv-hashtable . g$7306$kwCBQ)
        (make-eq-hashtable . g$7305$kwCBQ)
        (hashtable? . g$13448$kwCBQ)
        (hashtable-update! . g$7312$kwCBQ)
        (hashtable-size . g$7307$kwCBQ)
        (hashtable-set! . g$7309$kwCBQ)
        (hashtable-ref . g$7308$kwCBQ)
        (hashtable-mutable? . g$13447$kwCBQ)
        (hashtable-keys . g$13446$kwCBQ)
        (hashtable-entries . g$13445$kwCBQ)
        (hashtable-delete! . g$7310$kwCBQ)
        (hashtable-copy . g$13444$kwCBQ)
        (hashtable-contains? . g$7311$kwCBQ)
        (hashtable-clear! . g$7313$kwCBQ)
        (call-with-output-file . g$8189$kwCBQ)
        (call-with-input-file . g$8188$kwCBQ)
        (write-char . g$8170$kwCBQ)
        (write . g$13443$kwCBQ)
        (with-output-to-file . g$8187$kwCBQ)
        (with-input-from-file . g$8186$kwCBQ)
        (read-char . g$8169$kwCBQ)
        (read . g$13442$kwCBQ)
        (peek-char . g$8168$kwCBQ)
        (open-output-file . g$13441$kwCBQ)
        (open-input-file . g$13440$kwCBQ)
        (newline . g$8190$kwCBQ)
        (display . g$13439$kwCBQ)
        (close-output-port . g$13438$kwCBQ)
        (close-input-port . g$13437$kwCBQ)
        (eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (utf-8-codec . g$13429$kwCBQ)
        (utf-16-codec . g$13428$kwCBQ)
        (transcoder-error-handling-mode . g$13427$kwCBQ)
        (transcoder-eol-style . g$13426$kwCBQ)
        (transcoder-codec . g$13425$kwCBQ)
        (transcoded-port . g$13424$kwCBQ)
        (textual-port? . g$13423$kwCBQ)
        (string->bytevector . g$13422$kwCBQ)
        (standard-output-port . g$13421$kwCBQ)
        (standard-input-port . g$13420$kwCBQ)
        (standard-error-port . g$13419$kwCBQ)
        (set-port-position! . g$13418$kwCBQ)
        (put-u8 . g$13417$kwCBQ)
        (put-string . g$13416$kwCBQ)
        (put-datum . g$13415$kwCBQ)
        (put-char . g$13414$kwCBQ)
        (put-bytevector . g$13413$kwCBQ)
        (port? . g$8155$kwCBQ)
        (port-transcoder . g$13412$kwCBQ)
        (port-position . g$13411$kwCBQ)
        (port-has-set-port-position!? . g$13410$kwCBQ)
        (port-has-port-position? . g$13409$kwCBQ)
        (port-eof? . g$13408$kwCBQ)
        (output-port-buffer-mode . g$13407$kwCBQ)
        (open-string-output-port . g$8154$kwCBQ)
        (open-string-input-port . g$13406$kwCBQ)
        (open-file-output-port . g$13405$kwCBQ)
        (open-file-input/output-port . g$13404$kwCBQ)
        (open-file-input-port . g$13403$kwCBQ)
        (open-bytevector-output-port . g$13402$kwCBQ)
        (open-bytevector-input-port . g$13401$kwCBQ)
        (native-transcoder . g$13400$kwCBQ)
        (native-eol-style . g$13399$kwCBQ)
        (make-transcoder . g$13398$kwCBQ)
        (latin-1-codec . g$13397$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (make-i/o-encoding-error . g$8146$kwCBQ)
        (make-i/o-decoding-error . g$8131$kwCBQ)
        (make-custom-textual-output-port . g$13396$kwCBQ)
        (make-custom-textual-input/output-port . g$13395$kwCBQ)
        (make-custom-textual-input-port . g$13394$kwCBQ)
        (make-custom-binary-output-port . g$13393$kwCBQ)
        (make-custom-binary-input/output-port . g$13392$kwCBQ)
        (make-custom-binary-input-port . g$13391$kwCBQ)
        (make-bytevector . g$13390$kwCBQ)
        (lookahead-u8 . g$13389$kwCBQ)
        (lookahead-char . g$13388$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (i/o-encoding-error? . g$8148$kwCBQ)
        (i/o-encoding-error-char . g$8149$kwCBQ)
        (i/o-decoding-error? . g$8132$kwCBQ)
        (get-u8 . g$13387$kwCBQ)
        (get-string-n! . g$13386$kwCBQ)
        (get-string-n . g$13385$kwCBQ)
        (get-string-all . g$13384$kwCBQ)
        (get-line . g$13383$kwCBQ)
        (get-datum . g$13382$kwCBQ)
        (get-char . g$13381$kwCBQ)
        (get-bytevector-some . g$13380$kwCBQ)
        (get-bytevector-n! . g$13379$kwCBQ)
        (get-bytevector-n . g$13378$kwCBQ)
        (get-bytevector-all . g$13377$kwCBQ)
        (flush-output-port . g$13376$kwCBQ)
        (close-port . g$13375$kwCBQ)
        (call-with-string-output-port . g$8156$kwCBQ)
        (call-with-port . g$8157$kwCBQ)
        (call-with-bytevector-output-port . g$13374$kwCBQ)
        (bytevector->string . g$13373$kwCBQ)
        (buffer-mode? . g$13372$kwCBQ)
        (binary-port? . g$13371$kwCBQ)
        (scheme-report-environment . g$9940$kwCBQ)
        (quotient . g$7683$kwCBQ)
        (null-environment . g$9939$kwCBQ)
        (remainder . g$7684$kwCBQ)
        (modulo . g$7685$kwCBQ)
        (inexact->exact . g$7680$kwCBQ)
        (force . g$7687$kwCBQ)
        (exact->inexact . g$7681$kwCBQ)
        (exit . g$13370$kwCBQ)
        (command-line . g$12958$kwCBQ)
        (string-fill! . g$13369$kwCBQ)
        (string-set! . g$13368$kwCBQ)
        (set-cdr! . g$13367$kwCBQ)
        (set-car! . g$13366$kwCBQ)
        (remove . g$6618$kwCBQ)
        (remv . g$6619$kwCBQ)
        (remp . g$6599$kwCBQ)
        (remq . g$6620$kwCBQ)
        (partition . g$6598$kwCBQ)
        (memv . g$6606$kwCBQ)
        (memq . g$6605$kwCBQ)
        (memp . g$6608$kwCBQ)
        (member . g$6607$kwCBQ)
        (exists . g$6612$kwCBQ)
        (for-all . g$6611$kwCBQ)
        (fold-right . g$6617$kwCBQ)
        (fold-left . g$6616$kwCBQ)
        (find . g$6597$kwCBQ)
        (filter . g$6600$kwCBQ)
        (cons* . g$6615$kwCBQ)
        (assv . g$6602$kwCBQ)
        (assq . g$6601$kwCBQ)
        (assp . g$6604$kwCBQ)
        (assoc . g$6603$kwCBQ)
        (with-exception-handler . g$13365$kwCBQ)
        (raise-continuable . g$13364$kwCBQ)
        (raise . g$13363$kwCBQ)
        (eval . g$9942$kwCBQ)
        (environment . g$9938$kwCBQ)
        (make-enumeration . g$8254$kwCBQ)
        (enum-set=? . g$8261$kwCBQ)
        (enum-set-universe . g$8255$kwCBQ)
        (enum-set-union . g$8262$kwCBQ)
        (enum-set-subset? . g$8260$kwCBQ)
        (enum-set-projection . g$8266$kwCBQ)
        (enum-set-member? . g$8259$kwCBQ)
        (enum-set-intersection . g$8263$kwCBQ)
        (enum-set-indexer . g$8256$kwCBQ)
        (enum-set-difference . g$8264$kwCBQ)
        (enum-set-constructor . g$8257$kwCBQ)
        (enum-set-complement . g$8265$kwCBQ)
        (enum-set->list . g$8258$kwCBQ)
        (who-condition? . g$7592$kwCBQ)
        (warning? . g$7503$kwCBQ)
        (violation? . g$7545$kwCBQ)
        (undefined-violation? . g$7669$kwCBQ)
        (syntax-violation? . g$7653$kwCBQ)
        (syntax-violation-subform . g$7655$kwCBQ)
        (syntax-violation-form . g$7654$kwCBQ)
        (syntax-violation . g$9960$kwCBQ)
        (simple-conditions . g$13362$kwCBQ)
        (serious-condition? . g$7517$kwCBQ)
        (non-continuable-violation? . g$7607$kwCBQ)
        (message-condition? . g$7488$kwCBQ)
        (make-who-condition . g$7590$kwCBQ)
        (make-warning . g$7502$kwCBQ)
        (make-violation . g$7544$kwCBQ)
        (make-undefined-violation . g$7668$kwCBQ)
        (make-syntax-violation . g$7650$kwCBQ)
        (make-serious-condition . g$7516$kwCBQ)
        (make-non-continuable-violation . g$7606$kwCBQ)
        (make-message-condition . g$7486$kwCBQ)
        (make-lexical-violation . g$7634$kwCBQ)
        (make-irritants-condition . g$7573$kwCBQ)
        (make-implementation-restriction-violation . g$7620$kwCBQ)
        (make-error . g$7530$kwCBQ)
        (make-assertion-violation . g$7558$kwCBQ)
        (lexical-violation? . g$7635$kwCBQ)
        (irritants-condition? . g$7575$kwCBQ)
        (implementation-restriction-violation? . g$7621$kwCBQ)
        (error? . g$7531$kwCBQ)
        (condition-who . g$7593$kwCBQ)
        (condition-predicate . g$13361$kwCBQ)
        (condition-message . g$7489$kwCBQ)
        (condition-irritants . g$7576$kwCBQ)
        (condition-accessor . g$13360$kwCBQ)
        (condition . g$13359$kwCBQ)
        (assertion-violation? . g$7559$kwCBQ)
        (condition? . g$13358$kwCBQ)
        (utf32->string . g$13357$kwCBQ)
        (utf16->string . g$13356$kwCBQ)
        (utf8->string . g$13355$kwCBQ)
        (uint-list->bytevector . g$13354$kwCBQ)
        (u8-list->bytevector . g$13353$kwCBQ)
        (string->utf8 . g$13352$kwCBQ)
        (string->utf32 . g$13351$kwCBQ)
        (string->utf16 . g$13350$kwCBQ)
        (sint-list->bytevector . g$13349$kwCBQ)
        (native-endianness . g$7344$kwCBQ)
        (bytevector? . g$13348$kwCBQ)
        (bytevector=? . g$13347$kwCBQ)
        (bytevector-uint-set! . g$13346$kwCBQ)
        (bytevector-uint-ref . g$13345$kwCBQ)
        (bytevector-u8-set! . g$13344$kwCBQ)
        (bytevector-u8-ref . g$13343$kwCBQ)
        (bytevector-u64-set! . g$7365$kwCBQ)
        (bytevector-u64-ref . g$7361$kwCBQ)
        (bytevector-u64-native-set! . g$7367$kwCBQ)
        (bytevector-u64-native-ref . g$7363$kwCBQ)
        (bytevector-u32-set! . g$7357$kwCBQ)
        (bytevector-u32-ref . g$7353$kwCBQ)
        (bytevector-u32-native-set! . g$7359$kwCBQ)
        (bytevector-u32-native-ref . g$7355$kwCBQ)
        (bytevector-u16-set! . g$7349$kwCBQ)
        (bytevector-u16-ref . g$7345$kwCBQ)
        (bytevector-u16-native-set! . g$7351$kwCBQ)
        (bytevector-u16-native-ref . g$7347$kwCBQ)
        (bytevector-sint-set! . g$13342$kwCBQ)
        (bytevector-sint-ref . g$13341$kwCBQ)
        (bytevector-s8-set! . g$13340$kwCBQ)
        (bytevector-s8-ref . g$13339$kwCBQ)
        (bytevector-s64-set! . g$7366$kwCBQ)
        (bytevector-s64-ref . g$7362$kwCBQ)
        (bytevector-s64-native-set! . g$7368$kwCBQ)
        (bytevector-s64-native-ref . g$7364$kwCBQ)
        (bytevector-s32-set! . g$7358$kwCBQ)
        (bytevector-s32-ref . g$7354$kwCBQ)
        (bytevector-s32-native-set! . g$7360$kwCBQ)
        (bytevector-s32-native-ref . g$7356$kwCBQ)
        (bytevector-s16-set! . g$7350$kwCBQ)
        (bytevector-s16-ref . g$7346$kwCBQ)
        (bytevector-s16-native-set! . g$7352$kwCBQ)
        (bytevector-s16-native-ref . g$7348$kwCBQ)
        (bytevector-length . g$13338$kwCBQ)
        (bytevector-ieee-single-set! . g$13337$kwCBQ)
        (bytevector-ieee-single-ref . g$13336$kwCBQ)
        (bytevector-ieee-single-native-set! . g$7371$kwCBQ)
        (bytevector-ieee-single-native-ref . g$7369$kwCBQ)
        (bytevector-ieee-double-set! . g$13335$kwCBQ)
        (bytevector-ieee-double-ref . g$13334$kwCBQ)
        (bytevector-ieee-double-native-set! . g$7372$kwCBQ)
        (bytevector-ieee-double-native-ref . g$7370$kwCBQ)
        (bytevector-fill! . g$13333$kwCBQ)
        (bytevector-copy! . g$13332$kwCBQ)
        (bytevector-copy . g$13331$kwCBQ)
        (bytevector->uint-list . g$13330$kwCBQ)
        (bytevector->u8-list . g$13329$kwCBQ)
        (bytevector->sint-list . g$13328$kwCBQ)
        (no-nans-violation? . g$7968$kwCBQ)
        (no-infinities-violation? . g$7954$kwCBQ)
        (make-no-nans-violation . g$7967$kwCBQ)
        (make-no-infinities-violation . g$7953$kwCBQ)
        (real->flonum . g$13327$kwCBQ)
        (flzero? . g$13326$kwCBQ)
        (fltruncate . g$13325$kwCBQ)
        (fltan . g$13324$kwCBQ)
        (flsqrt . g$13323$kwCBQ)
        (flsin . g$13322$kwCBQ)
        (flround . g$13321$kwCBQ)
        (flpositive? . g$13320$kwCBQ)
        (flonum? . g$13319$kwCBQ)
        (flodd? . g$13318$kwCBQ)
        (flnumerator . g$13317$kwCBQ)
        (flnegative? . g$13316$kwCBQ)
        (flnan? . g$13315$kwCBQ)
        (flmod0 . g$13314$kwCBQ)
        (flmod . g$13313$kwCBQ)
        (flmin . g$13312$kwCBQ)
        (flmax . g$13311$kwCBQ)
        (fllog . g$13310$kwCBQ)
        (flinteger? . g$13309$kwCBQ)
        (flinfinite? . g$13308$kwCBQ)
        (flfloor . g$13307$kwCBQ)
        (flfinite? . g$13306$kwCBQ)
        (flexpt . g$13305$kwCBQ)
        (flexp . g$13304$kwCBQ)
        (fleven? . g$13303$kwCBQ)
        (fldiv0-and-mod0 . g$13302$kwCBQ)
        (fldiv0 . g$13301$kwCBQ)
        (fldiv-and-mod . g$13300$kwCBQ)
        (fldiv . g$13299$kwCBQ)
        (fldenominator . g$13298$kwCBQ)
        (flcos . g$13297$kwCBQ)
        (flceiling . g$13296$kwCBQ)
        (flatan . g$13295$kwCBQ)
        (flasin . g$13294$kwCBQ)
        (flacos . g$13293$kwCBQ)
        (flabs . g$13292$kwCBQ)
        (fl>? . g$13291$kwCBQ)
        (fl>=? . g$13290$kwCBQ)
        (fl=? . g$13289$kwCBQ)
        (fl<? . g$13288$kwCBQ)
        (fl<=? . g$13287$kwCBQ)
        (fl/ . g$13286$kwCBQ)
        (fl- . g$13285$kwCBQ)
        (fl+ . g$13284$kwCBQ)
        (fl* . g$13283$kwCBQ)
        (fixnum->flonum . g$13282$kwCBQ)
        (fxzero? . g$13281$kwCBQ)
        (fxxor . g$13280$kwCBQ)
        (fxrotate-bit-field . g$7900$kwCBQ)
        (fxreverse-bit-field . g$13279$kwCBQ)
        (fxpositive? . g$13278$kwCBQ)
        (fxodd? . g$13277$kwCBQ)
        (fxnot . g$13276$kwCBQ)
        (fxnegative? . g$13275$kwCBQ)
        (fxmod0 . g$13274$kwCBQ)
        (fxmod . g$13273$kwCBQ)
        (fxmin . g$13272$kwCBQ)
        (fxmax . g$13271$kwCBQ)
        (fxlength . g$13270$kwCBQ)
        (fxior . g$13269$kwCBQ)
        (fxif . g$7894$kwCBQ)
        (fxfirst-bit-set . g$13268$kwCBQ)
        (fxeven? . g$13267$kwCBQ)
        (fxdiv0-and-mod0 . g$13266$kwCBQ)
        (fxdiv0 . g$13265$kwCBQ)
        (fxdiv-and-mod . g$13264$kwCBQ)
        (fxdiv . g$13263$kwCBQ)
        (fxcopy-bit-field . g$7897$kwCBQ)
        (fxcopy-bit . g$7895$kwCBQ)
        (fxbit-set? . g$13262$kwCBQ)
        (fxbit-field . g$7896$kwCBQ)
        (fxbit-count . g$13261$kwCBQ)
        (fxarithmetic-shift-right . g$7899$kwCBQ)
        (fxarithmetic-shift-left . g$7898$kwCBQ)
        (fxarithmetic-shift . g$13260$kwCBQ)
        (fxand . g$13259$kwCBQ)
        (fx>? . g$13258$kwCBQ)
        (fx>=? . g$13257$kwCBQ)
        (fx=? . g$13256$kwCBQ)
        (fx<? . g$13255$kwCBQ)
        (fx<=? . g$13254$kwCBQ)
        (fx-/carry . g$7892$kwCBQ)
        (fx- . g$13253$kwCBQ)
        (fx+/carry . g$7893$kwCBQ)
        (fx+ . g$13252$kwCBQ)
        (fx*/carry . g$7891$kwCBQ)
        (fx* . g$13251$kwCBQ)
        (greatest-fixnum . g$13250$kwCBQ)
        (least-fixnum . g$13249$kwCBQ)
        (fixnum-width . g$13248$kwCBQ)
        (fixnum? . g$13247$kwCBQ)
        (bitwise-rotate-bit-field . g$7865$kwCBQ)
        (bitwise-reverse-bit-field . g$13246$kwCBQ)
        (bitwise-length . g$13245$kwCBQ)
        (bitwise-if . g$7859$kwCBQ)
        (bitwise-first-bit-set . g$13244$kwCBQ)
        (bitwise-copy-bit-field . g$7862$kwCBQ)
        (bitwise-copy-bit . g$7860$kwCBQ)
        (bitwise-bit-set? . g$13243$kwCBQ)
        (bitwise-bit-field . g$7861$kwCBQ)
        (bitwise-bit-count . g$13242$kwCBQ)
        (bitwise-xor . g$13241$kwCBQ)
        (bitwise-ior . g$13240$kwCBQ)
        (bitwise-and . g$13239$kwCBQ)
        (bitwise-not . g$13238$kwCBQ)
        (bitwise-arithmetic-shift-right . g$7864$kwCBQ)
        (bitwise-arithmetic-shift-left . g$7863$kwCBQ)
        (bitwise-arithmetic-shift . g$13237$kwCBQ)
        (zero? . g$6761$kwCBQ)
        (vector? . g$13236$kwCBQ)
        (vector-set! . g$13235$kwCBQ)
        (vector-ref . g$13234$kwCBQ)
        (vector-map . g$6855$kwCBQ)
        (vector-length . g$13233$kwCBQ)
        (vector-for-each . g$6856$kwCBQ)
        (vector-fill! . g$13232$kwCBQ)
        (vector->list . g$13231$kwCBQ)
        (vector . g$13230$kwCBQ)
        (values . g$13229$kwCBQ)
        (truncate . g$13228$kwCBQ)
        (tan . g$13227$kwCBQ)
        (symbol? . g$13226$kwCBQ)
        (symbol=? . g$6809$kwCBQ)
        (symbol->string . g$13225$kwCBQ)
        (substring . g$13224$kwCBQ)
        (string? . g$13223$kwCBQ)
        (string>? . g$6806$kwCBQ)
        (string>=? . g$6808$kwCBQ)
        (string=? . g$6804$kwCBQ)
        (string<? . g$6805$kwCBQ)
        (string<=? . g$6807$kwCBQ)
        (string-ref . g$13222$kwCBQ)
        (string-length . g$13221$kwCBQ)
        (string-for-each . g$6857$kwCBQ)
        (string-copy . g$13220$kwCBQ)
        (string-append . g$13219$kwCBQ)
        (string->symbol . g$13218$kwCBQ)
        (string->number . g$13217$kwCBQ)
        (string->list . g$13216$kwCBQ)
        (string . g$13215$kwCBQ)
        (sqrt . g$13214$kwCBQ)
        (sin . g$13213$kwCBQ)
        (round . g$13212$kwCBQ)
        (reverse . g$13211$kwCBQ)
        (real? . g$13210$kwCBQ)
        (real-valued? . g$13209$kwCBQ)
        (real-part . g$13208$kwCBQ)
        (rationalize . g$6852$kwCBQ)
        (rational? . g$13207$kwCBQ)
        (rational-valued? . g$13206$kwCBQ)
        (procedure? . g$13205$kwCBQ)
        (positive? . g$6759$kwCBQ)
        (pair? . g$13204$kwCBQ)
        (odd? . g$6763$kwCBQ)
        (numerator . g$13203$kwCBQ)
        (number? . g$13202$kwCBQ)
        (number->string . g$13201$kwCBQ)
        (null? . g$13200$kwCBQ)
        (not . g$13199$kwCBQ)
        (negative? . g$6760$kwCBQ)
        (nan? . g$13198$kwCBQ)
        (min . g$6765$kwCBQ)
        (max . g$6764$kwCBQ)
        (map . g$6613$kwCBQ)
        (make-vector . g$13197$kwCBQ)
        (make-string . g$13196$kwCBQ)
        (make-rectangular . g$13195$kwCBQ)
        (make-polar . g$13194$kwCBQ)
        (magnitude . g$13193$kwCBQ)
        (log . g$13192$kwCBQ)
        (list? . g$13191$kwCBQ)
        (list-tail . g$6593$kwCBQ)
        (list-ref . g$6594$kwCBQ)
        (list->vector . g$13190$kwCBQ)
        (list->string . g$13189$kwCBQ)
        (list . g$13188$kwCBQ)
        (length . g$13187$kwCBQ)
        (lcm . g$6767$kwCBQ)
        (integer? . g$13186$kwCBQ)
        (integer-valued? . g$13185$kwCBQ)
        (integer->char . g$13184$kwCBQ)
        (infinite? . g$13183$kwCBQ)
        (inexact? . g$13182$kwCBQ)
        (inexact . g$13181$kwCBQ)
        (imag-part . g$13180$kwCBQ)
        (gcd . g$6766$kwCBQ)
        (for-each . g$6614$kwCBQ)
        (floor . g$13179$kwCBQ)
        (finite? . g$13178$kwCBQ)
        (expt . g$13177$kwCBQ)
        (exp . g$13176$kwCBQ)
        (exact? . g$13175$kwCBQ)
        (exact-integer-sqrt . g$13174$kwCBQ)
        (exact . g$13173$kwCBQ)
        (even? . g$6762$kwCBQ)
        (error . g$13172$kwCBQ)
        (eqv? . g$13171$kwCBQ)
        (equal? . g$13170$kwCBQ)
        (eq? . g$13169$kwCBQ)
        (dynamic-wind . g$13168$kwCBQ)
        (div0-and-mod0 . g$13167$kwCBQ)
        (mod0 . g$13166$kwCBQ)
        (div0 . g$13165$kwCBQ)
        (div-and-mod . g$13164$kwCBQ)
        (mod . g$13163$kwCBQ)
        (div . g$13162$kwCBQ)
        (denominator . g$13161$kwCBQ)
        (cos . g$13160$kwCBQ)
        (cons . g$13159$kwCBQ)
        (complex? . g$13158$kwCBQ)
        (char? . g$13157$kwCBQ)
        (char>? . g$6849$kwCBQ)
        (char>=? . g$6851$kwCBQ)
        (char=? . g$6847$kwCBQ)
        (char<? . g$6848$kwCBQ)
        (char<=? . g$6850$kwCBQ)
        (char->integer . g$13156$kwCBQ)
        (ceiling . g$13155$kwCBQ)
        (call-with-values . g$13154$kwCBQ)
        (call/cc . g$13153$kwCBQ)
        (call-with-current-continuation . g$13152$kwCBQ)
        (cddddr . g$6758$kwCBQ)
        (cdddar . g$6757$kwCBQ)
        (cddadr . g$6756$kwCBQ)
        (cddaar . g$6755$kwCBQ)
        (cdaddr . g$6754$kwCBQ)
        (cdadar . g$6753$kwCBQ)
        (cdaadr . g$6752$kwCBQ)
        (cdaaar . g$6751$kwCBQ)
        (cadddr . g$6750$kwCBQ)
        (caddar . g$6749$kwCBQ)
        (cadadr . g$6748$kwCBQ)
        (cadaar . g$6747$kwCBQ)
        (caaddr . g$6746$kwCBQ)
        (caadar . g$6745$kwCBQ)
        (caaadr . g$6744$kwCBQ)
        (caaaar . g$6743$kwCBQ)
        (cdddr . g$6742$kwCBQ)
        (cddar . g$6741$kwCBQ)
        (cdadr . g$6740$kwCBQ)
        (cdaar . g$6739$kwCBQ)
        (caddr . g$6738$kwCBQ)
        (cadar . g$6737$kwCBQ)
        (caadr . g$6736$kwCBQ)
        (caaar . g$6735$kwCBQ)
        (cddr . g$6734$kwCBQ)
        (cdar . g$6733$kwCBQ)
        (cadr . g$6732$kwCBQ)
        (caar . g$6731$kwCBQ)
        (cdr . g$13151$kwCBQ)
        (car . g$13150$kwCBQ)
        (boolean? . g$13149$kwCBQ)
        (boolean=? . g$6810$kwCBQ)
        (atan . g$13148$kwCBQ)
        (assertion-violation . g$13147$kwCBQ)
        (asin . g$13146$kwCBQ)
        (apply . g$13145$kwCBQ)
        (append . g$13144$kwCBQ)
        (angle . g$13143$kwCBQ)
        (acos . g$13142$kwCBQ)
        (abs . g$13141$kwCBQ)
        (/ . g$13140$kwCBQ)
        (* . g$13139$kwCBQ)
        (- . g$13138$kwCBQ)
        (+ . g$13137$kwCBQ)
        (>= . g$13136$kwCBQ)
        (> . g$13135$kwCBQ)
        (= . g$13134$kwCBQ)
        (<= . g$13133$kwCBQ)
        (< . g$13132$kwCBQ)
        (deserialize-port . g$13128$kwCBQ)
        (serialize-port . g$13127$kwCBQ)
        (enum-set? . g$8229$kwCBQ)
        (load/args . g$12960$kwCBQ)
        (printf . g$8340$kwCBQ)
        (fprintf . g$8341$kwCBQ)
        (format . g$8342$kwCBQ)
        (procedure-form . g$13126$kwCBQ)
        (procedure-environment . g$13125$kwCBQ)
        (procedure-name . g$13124$kwCBQ)
        (procedure-arity . g$13123$kwCBQ)
        (gc-collect . g$13122$kwCBQ)
        (clr-type? . g$13121$kwCBQ)
        (get-clr-type . g$13120$kwCBQ)
        (vector-append . g$13118$kwCBQ)
        (vector-filter . g$13117$kwCBQ)
        (vector-reverse! . g$13116$kwCBQ)
        (vector-contains? . g$13115$kwCBQ)
        (vector-index-of . g$13114$kwCBQ)
        (vector-copy . g$13113$kwCBQ)
        (vector-binary-search . g$13112$kwCBQ)
        (string-ci-compare . g$13111$kwCBQ)
        (string-compare . g$13110$kwCBQ)
        (string-format . g$13109$kwCBQ)
        (trace-printer . g$12957$kwCBQ)
        (time-it . g$13107$kwCBQ)
        (make-parameter . g$8647$kwCBQ)
        (open-tcp-input/output-port . g$13104$kwCBQ)
        (hashtable-for-each . g$13103$kwCBQ)
        (hashtable-map . g$13102$kwCBQ)
        (environment-bindings . g$9934$kwCBQ)
        (environment-symbols . g$9937$kwCBQ)
        (interaction-environment-symbols . g$9933$kwCBQ)
        (optimization-level . g$13101$kwCBQ)
        (library-path . g$9107$kwCBQ)
        (make-compile-time-value . g$9562$kwCBQ)
        (expand->core . g$9943$kwCBQ)
        (expand . g$9941$kwCBQ)
        (expand-boot-cps . g$8421$kwCBQ)
        (convert->cps . g$8418$kwCBQ)
        (installed-libraries . g$9128$kwCBQ)
        (uninstall-library . g$9119$kwCBQ)
        (&no-nans . g$13100$kwCBQ)
        (&no-infinities . g$13099$kwCBQ)
        (&i/o-encoding . g$13098$kwCBQ)
        (&i/o-decoding . g$13097$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ)
        (&non-continuable . g$13086$kwCBQ)
        (&undefined . g$13085$kwCBQ)
        (&syntax . g$13084$kwCBQ)
        (&lexical . g$13083$kwCBQ)
        (&implementation-restriction . g$13082$kwCBQ)
        (&who . g$13081$kwCBQ)
        (&irritants . g$13080$kwCBQ)
        (&assertion . g$13079$kwCBQ)
        (&violation . g$13078$kwCBQ)
        (&error . g$13077$kwCBQ)
        (&serious . g$13076$kwCBQ)
        (&warning . g$13075$kwCBQ)
        (&message . g$13074$kwCBQ)
        (&condition . g$13073$kwCBQ)
        (define-condition-type . g$13072$kwCBQ)
        (define-enumeration . g$13071$kwCBQ)
        (define-record-type . g$13070$kwCBQ)
        (parent-rtd . g$13069$kwCBQ)
        (nongenerative . g$13068$kwCBQ)
        (opaque . g$13067$kwCBQ)
        (sealed . g$13066$kwCBQ)
        (protocol . g$13065$kwCBQ)
        (parent . g$13064$kwCBQ)
        (immutable . g$13063$kwCBQ)
        (mutable . g$13062$kwCBQ)
        (fields . g$13061$kwCBQ)
        (error-handling-mode . g$13060$kwCBQ)
        (file-options . g$13059$kwCBQ)
        (buffer-mode . g$13058$kwCBQ)
        (eol-style . g$13057$kwCBQ)
        (guard . g$13056$kwCBQ)
        (trace-letrec-syntax . g$13055$kwCBQ)
        (trace-let-syntax . g$13054$kwCBQ)
        (trace-define-syntax . g$13053$kwCBQ)
        (trace-define . g$13052$kwCBQ)
        (trace-lambda . g$13051$kwCBQ)
        (unsyntax-splicing . g$13050$kwCBQ)
        (unsyntax . g$13049$kwCBQ)
        (unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (_ . g$13046$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (... . g$13043$kwCBQ)
        (assert . g$13042$kwCBQ)
        (endianness . g$13041$kwCBQ)
        (delay . g$13040$kwCBQ)
        (time . g$13039$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (do . g$13036$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (identifier-syntax . g$13032$kwCBQ)
        (with-syntax . g$13031$kwCBQ)
        (quasisyntax . g$13030$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (include-into . g$13027$kwCBQ)
        (include . g$13026$kwCBQ)
        (let-values . g$13024$kwCBQ)
        (let*-values . g$13023$kwCBQ)
        (record-constructor-descriptor . g$13022$kwCBQ)
        (record-type-descriptor . g$13021$kwCBQ)
        (fluid-let-syntax . g$13020$kwCBQ)
        (case . g$13019$kwCBQ)
        (parameterize . g$13018$kwCBQ)
        (unless . g$13017$kwCBQ)
        (when . g$13016$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec* . g$13014$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (case-lambda . g$13011$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (syntax . g$13009$kwCBQ)
        (syntax-case . g$13008$kwCBQ)
        (quote . g$13007$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (export . g$13002$kwCBQ)
        (import . g$13001$kwCBQ)
        (library . g$13000$kwCBQ)
        (begin . g$12999$kwCBQ)
        (module . g$12998$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13586$kwCBQ
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13105$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13587$kwCBQ
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13527$kwCBQ)
        (annotation-source . g$13526$kwCBQ)
        (annotation-expression . g$13525$kwCBQ)
        (annotation? . g$13524$kwCBQ)
        (read-annotated . g$13523$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13588$kwCBQ
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13496$kwCBQ)
        (serialize-library . g$13495$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13589$kwCBQ
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$9564$kwCBQ)
        (variable-transformer? . g$9563$kwCBQ)
        (eqv-hash . g$13130$kwCBQ)
        (reverse! . g$13129$kwCBQ)
        (make-promise . g$7686$kwCBQ)
        (format . g$8342$kwCBQ)
        (get-command-line . g$13119$kwCBQ)
        (make-traced-procedure . g$13108$kwCBQ)
        (make-traced-macro . g$8362$kwCBQ)
        (assertion-error . g$9956$kwCBQ)
        (library-locator . g$13106$kwCBQ)
        (get-library-paths . g$13105$kwCBQ)
        (library-path . g$9107$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13590$kwCBQ
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13131$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13591$kwCBQ
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$13514$kwCBQ)
        (clr-field-set!-internal . g$13513$kwCBQ)
        (clr-field-get-internal . g$13512$kwCBQ)
        (clr-cast-internal . g$13511$kwCBQ)
        (clr-call-internal . g$13510$kwCBQ)
        (clr-new-internal . g$13509$kwCBQ)
        (clr-new-array-internal . g$13508$kwCBQ)
        (clr-is-internal . g$13507$kwCBQ)
        (clr-reference-internal . g$13506$kwCBQ)
        (clr-using-internal . g$13505$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13592$kwCBQ
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (delay . g$13040$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (do . g$13036$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (case . g$13019$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (quote . g$13007$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (begin . g$12999$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13593$kwCBQ
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9967$kwCBQ)
        (char-ready? . g$13494$kwCBQ)
        (string-ci>? . g$7764$kwCBQ)
        (string-ci>=? . g$7766$kwCBQ)
        (string-ci=? . g$7762$kwCBQ)
        (string-ci<? . g$7763$kwCBQ)
        (string-ci<=? . g$7765$kwCBQ)
        (char-whitespace? . g$13485$kwCBQ)
        (char-upper-case? . g$13484$kwCBQ)
        (char-numeric? . g$13482$kwCBQ)
        (char-lower-case? . g$13481$kwCBQ)
        (char-upcase . g$13479$kwCBQ)
        (char-downcase . g$13476$kwCBQ)
        (char-ci>? . g$7803$kwCBQ)
        (char-ci>=? . g$7805$kwCBQ)
        (char-ci=? . g$7801$kwCBQ)
        (char-ci<? . g$7802$kwCBQ)
        (char-ci<=? . g$7804$kwCBQ)
        (char-alphabetic? . g$13475$kwCBQ)
        (call-with-output-file . g$8189$kwCBQ)
        (call-with-input-file . g$8188$kwCBQ)
        (write-char . g$8170$kwCBQ)
        (write . g$13443$kwCBQ)
        (with-output-to-file . g$8187$kwCBQ)
        (with-input-from-file . g$8186$kwCBQ)
        (read-char . g$8169$kwCBQ)
        (read . g$13442$kwCBQ)
        (peek-char . g$8168$kwCBQ)
        (open-output-file . g$13441$kwCBQ)
        (open-input-file . g$13440$kwCBQ)
        (newline . g$8190$kwCBQ)
        (display . g$13439$kwCBQ)
        (close-output-port . g$13438$kwCBQ)
        (close-input-port . g$13437$kwCBQ)
        (eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (scheme-report-environment . g$9940$kwCBQ)
        (quotient . g$7683$kwCBQ)
        (null-environment . g$9939$kwCBQ)
        (remainder . g$7684$kwCBQ)
        (modulo . g$7685$kwCBQ)
        (inexact->exact . g$7680$kwCBQ)
        (force . g$7687$kwCBQ)
        (exact->inexact . g$7681$kwCBQ)
        (string-fill! . g$13369$kwCBQ)
        (string-set! . g$13368$kwCBQ)
        (set-cdr! . g$13367$kwCBQ)
        (set-car! . g$13366$kwCBQ)
        (memv . g$6606$kwCBQ)
        (memq . g$6605$kwCBQ)
        (member . g$6607$kwCBQ)
        (assv . g$6602$kwCBQ)
        (assq . g$6601$kwCBQ)
        (assoc . g$6603$kwCBQ)
        (eval . g$9942$kwCBQ)
        (zero? . g$6761$kwCBQ)
        (vector? . g$13236$kwCBQ)
        (vector-set! . g$13235$kwCBQ)
        (vector-ref . g$13234$kwCBQ)
        (vector-length . g$13233$kwCBQ)
        (vector-fill! . g$13232$kwCBQ)
        (vector->list . g$13231$kwCBQ)
        (vector . g$13230$kwCBQ)
        (values . g$13229$kwCBQ)
        (truncate . g$13228$kwCBQ)
        (tan . g$13227$kwCBQ)
        (symbol? . g$13226$kwCBQ)
        (symbol->string . g$13225$kwCBQ)
        (substring . g$13224$kwCBQ)
        (string? . g$13223$kwCBQ)
        (string>? . g$6806$kwCBQ)
        (string>=? . g$6808$kwCBQ)
        (string=? . g$6804$kwCBQ)
        (string<? . g$6805$kwCBQ)
        (string<=? . g$6807$kwCBQ)
        (string-ref . g$13222$kwCBQ)
        (string-length . g$13221$kwCBQ)
        (string-copy . g$13220$kwCBQ)
        (string-append . g$13219$kwCBQ)
        (string->symbol . g$13218$kwCBQ)
        (string->number . g$13217$kwCBQ)
        (string->list . g$13216$kwCBQ)
        (string . g$13215$kwCBQ)
        (sqrt . g$13214$kwCBQ)
        (sin . g$13213$kwCBQ)
        (round . g$13212$kwCBQ)
        (reverse . g$13211$kwCBQ)
        (real? . g$13210$kwCBQ)
        (real-part . g$13208$kwCBQ)
        (rationalize . g$6852$kwCBQ)
        (rational? . g$13207$kwCBQ)
        (procedure? . g$13205$kwCBQ)
        (positive? . g$6759$kwCBQ)
        (pair? . g$13204$kwCBQ)
        (odd? . g$6763$kwCBQ)
        (numerator . g$13203$kwCBQ)
        (number? . g$13202$kwCBQ)
        (number->string . g$13201$kwCBQ)
        (null? . g$13200$kwCBQ)
        (not . g$13199$kwCBQ)
        (negative? . g$6760$kwCBQ)
        (min . g$6765$kwCBQ)
        (max . g$6764$kwCBQ)
        (map . g$6613$kwCBQ)
        (make-vector . g$13197$kwCBQ)
        (make-string . g$13196$kwCBQ)
        (make-rectangular . g$13195$kwCBQ)
        (make-polar . g$13194$kwCBQ)
        (magnitude . g$13193$kwCBQ)
        (log . g$13192$kwCBQ)
        (list? . g$13191$kwCBQ)
        (list-tail . g$6593$kwCBQ)
        (list-ref . g$6594$kwCBQ)
        (list->vector . g$13190$kwCBQ)
        (list->string . g$13189$kwCBQ)
        (list . g$13188$kwCBQ)
        (length . g$13187$kwCBQ)
        (lcm . g$6767$kwCBQ)
        (integer? . g$13186$kwCBQ)
        (integer->char . g$13184$kwCBQ)
        (inexact? . g$13182$kwCBQ)
        (imag-part . g$13180$kwCBQ)
        (gcd . g$6766$kwCBQ)
        (for-each . g$6614$kwCBQ)
        (floor . g$13179$kwCBQ)
        (expt . g$13177$kwCBQ)
        (exp . g$13176$kwCBQ)
        (exact? . g$13175$kwCBQ)
        (even? . g$6762$kwCBQ)
        (eqv? . g$13171$kwCBQ)
        (equal? . g$13170$kwCBQ)
        (eq? . g$13169$kwCBQ)
        (dynamic-wind . g$13168$kwCBQ)
        (denominator . g$13161$kwCBQ)
        (cos . g$13160$kwCBQ)
        (cons . g$13159$kwCBQ)
        (complex? . g$13158$kwCBQ)
        (char? . g$13157$kwCBQ)
        (char>? . g$6849$kwCBQ)
        (char>=? . g$6851$kwCBQ)
        (char=? . g$6847$kwCBQ)
        (char<? . g$6848$kwCBQ)
        (char<=? . g$6850$kwCBQ)
        (char->integer . g$13156$kwCBQ)
        (ceiling . g$13155$kwCBQ)
        (call-with-values . g$13154$kwCBQ)
        (call-with-current-continuation . g$13152$kwCBQ)
        (cddddr . g$6758$kwCBQ)
        (cdddar . g$6757$kwCBQ)
        (cddadr . g$6756$kwCBQ)
        (cddaar . g$6755$kwCBQ)
        (cdaddr . g$6754$kwCBQ)
        (cdadar . g$6753$kwCBQ)
        (cdaadr . g$6752$kwCBQ)
        (cdaaar . g$6751$kwCBQ)
        (cadddr . g$6750$kwCBQ)
        (caddar . g$6749$kwCBQ)
        (cadadr . g$6748$kwCBQ)
        (cadaar . g$6747$kwCBQ)
        (caaddr . g$6746$kwCBQ)
        (caadar . g$6745$kwCBQ)
        (caaadr . g$6744$kwCBQ)
        (caaaar . g$6743$kwCBQ)
        (cdddr . g$6742$kwCBQ)
        (cddar . g$6741$kwCBQ)
        (cdadr . g$6740$kwCBQ)
        (cdaar . g$6739$kwCBQ)
        (caddr . g$6738$kwCBQ)
        (cadar . g$6737$kwCBQ)
        (caadr . g$6736$kwCBQ)
        (caaar . g$6735$kwCBQ)
        (cddr . g$6734$kwCBQ)
        (cdar . g$6733$kwCBQ)
        (cadr . g$6732$kwCBQ)
        (caar . g$6731$kwCBQ)
        (cdr . g$13151$kwCBQ)
        (car . g$13150$kwCBQ)
        (boolean? . g$13149$kwCBQ)
        (atan . g$13148$kwCBQ)
        (asin . g$13146$kwCBQ)
        (apply . g$13145$kwCBQ)
        (append . g$13144$kwCBQ)
        (angle . g$13143$kwCBQ)
        (acos . g$13142$kwCBQ)
        (abs . g$13141$kwCBQ)
        (/ . g$13140$kwCBQ)
        (* . g$13139$kwCBQ)
        (- . g$13138$kwCBQ)
        (+ . g$13137$kwCBQ)
        (>= . g$13136$kwCBQ)
        (> . g$13135$kwCBQ)
        (= . g$13134$kwCBQ)
        (<= . g$13133$kwCBQ)
        (< . g$13132$kwCBQ)
        (unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (... . g$13043$kwCBQ)
        (delay . g$13040$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (do . g$13036$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (case . g$13019$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (quote . g$13007$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (begin . g$12999$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13594$kwCBQ
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13493$kwCBQ)
        (string-titlecase . g$13492$kwCBQ)
        (string-normalize-nfkd . g$13491$kwCBQ)
        (string-normalize-nfkc . g$13490$kwCBQ)
        (string-normalize-nfd . g$13489$kwCBQ)
        (string-normalize-nfc . g$13488$kwCBQ)
        (string-foldcase . g$13487$kwCBQ)
        (string-downcase . g$13486$kwCBQ)
        (string-ci>? . g$7764$kwCBQ)
        (string-ci>=? . g$7766$kwCBQ)
        (string-ci=? . g$7762$kwCBQ)
        (string-ci<? . g$7763$kwCBQ)
        (string-ci<=? . g$7765$kwCBQ)
        (char-whitespace? . g$13485$kwCBQ)
        (char-upper-case? . g$13484$kwCBQ)
        (char-title-case? . g$13483$kwCBQ)
        (char-numeric? . g$13482$kwCBQ)
        (char-lower-case? . g$13481$kwCBQ)
        (char-general-category . g$13480$kwCBQ)
        (char-upcase . g$13479$kwCBQ)
        (char-titlecase . g$13478$kwCBQ)
        (char-foldcase . g$13477$kwCBQ)
        (char-downcase . g$13476$kwCBQ)
        (char-ci>? . g$7803$kwCBQ)
        (char-ci>=? . g$7805$kwCBQ)
        (char-ci=? . g$7801$kwCBQ)
        (char-ci<? . g$7802$kwCBQ)
        (char-ci<=? . g$7804$kwCBQ)
        (char-alphabetic? . g$13475$kwCBQ)
        (make-variable-transformer . g$9561$kwCBQ)
        (identifier? . g$9961$kwCBQ)
        (generate-temporaries . g$9950$kwCBQ)
        (free-identifier=? . g$9951$kwCBQ)
        (syntax->datum . g$9963$kwCBQ)
        (datum->syntax . g$9962$kwCBQ)
        (bound-identifier=? . g$9952$kwCBQ)
        (record-type-descriptor? . g$13474$kwCBQ)
        (record-predicate . g$13473$kwCBQ)
        (record-mutator . g$13472$kwCBQ)
        (record-constructor . g$13471$kwCBQ)
        (record-accessor . g$13470$kwCBQ)
        (make-record-type-descriptor . g$13469$kwCBQ)
        (make-record-constructor-descriptor . g$13468$kwCBQ)
        (record? . g$13467$kwCBQ)
        (record-type-uid . g$13466$kwCBQ)
        (record-type-sealed? . g$13465$kwCBQ)
        (record-type-parent . g$13464$kwCBQ)
        (record-type-opaque? . g$13463$kwCBQ)
        (record-type-name . g$13462$kwCBQ)
        (record-type-generative? . g$13461$kwCBQ)
        (record-type-field-names . g$13460$kwCBQ)
        (record-rtd . g$13459$kwCBQ)
        (record-field-mutable? . g$13458$kwCBQ)
        (delete-file . g$7338$kwCBQ)
        (file-exists? . g$7337$kwCBQ)
        (vector-sort! . g$13457$kwCBQ)
        (vector-sort . g$13456$kwCBQ)
        (list-sort . g$7704$kwCBQ)
        (symbol-hash . g$13455$kwCBQ)
        (string-ci-hash . g$13454$kwCBQ)
        (string-hash . g$13453$kwCBQ)
        (equal-hash . g$13452$kwCBQ)
        (hashtable-equivalence-function . g$13451$kwCBQ)
        (make-hashtable . g$13450$kwCBQ)
        (hashtable-hash-function . g$13449$kwCBQ)
        (make-eqv-hashtable . g$7306$kwCBQ)
        (make-eq-hashtable . g$7305$kwCBQ)
        (hashtable? . g$13448$kwCBQ)
        (hashtable-update! . g$7312$kwCBQ)
        (hashtable-size . g$7307$kwCBQ)
        (hashtable-set! . g$7309$kwCBQ)
        (hashtable-ref . g$7308$kwCBQ)
        (hashtable-mutable? . g$13447$kwCBQ)
        (hashtable-keys . g$13446$kwCBQ)
        (hashtable-entries . g$13445$kwCBQ)
        (hashtable-delete! . g$7310$kwCBQ)
        (hashtable-copy . g$13444$kwCBQ)
        (hashtable-contains? . g$7311$kwCBQ)
        (hashtable-clear! . g$7313$kwCBQ)
        (call-with-output-file . g$8189$kwCBQ)
        (call-with-input-file . g$8188$kwCBQ)
        (write-char . g$8170$kwCBQ)
        (write . g$13443$kwCBQ)
        (with-output-to-file . g$8187$kwCBQ)
        (with-input-from-file . g$8186$kwCBQ)
        (read-char . g$8169$kwCBQ)
        (read . g$13442$kwCBQ)
        (peek-char . g$8168$kwCBQ)
        (open-output-file . g$13441$kwCBQ)
        (open-input-file . g$13440$kwCBQ)
        (newline . g$8190$kwCBQ)
        (display . g$13439$kwCBQ)
        (close-output-port . g$13438$kwCBQ)
        (close-input-port . g$13437$kwCBQ)
        (eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (utf-8-codec . g$13429$kwCBQ)
        (utf-16-codec . g$13428$kwCBQ)
        (transcoder-error-handling-mode . g$13427$kwCBQ)
        (transcoder-eol-style . g$13426$kwCBQ)
        (transcoder-codec . g$13425$kwCBQ)
        (transcoded-port . g$13424$kwCBQ)
        (textual-port? . g$13423$kwCBQ)
        (string->bytevector . g$13422$kwCBQ)
        (standard-output-port . g$13421$kwCBQ)
        (standard-input-port . g$13420$kwCBQ)
        (standard-error-port . g$13419$kwCBQ)
        (set-port-position! . g$13418$kwCBQ)
        (put-u8 . g$13417$kwCBQ)
        (put-string . g$13416$kwCBQ)
        (put-datum . g$13415$kwCBQ)
        (put-char . g$13414$kwCBQ)
        (put-bytevector . g$13413$kwCBQ)
        (port? . g$8155$kwCBQ)
        (port-transcoder . g$13412$kwCBQ)
        (port-position . g$13411$kwCBQ)
        (port-has-set-port-position!? . g$13410$kwCBQ)
        (port-has-port-position? . g$13409$kwCBQ)
        (port-eof? . g$13408$kwCBQ)
        (output-port-buffer-mode . g$13407$kwCBQ)
        (open-string-output-port . g$8154$kwCBQ)
        (open-string-input-port . g$13406$kwCBQ)
        (open-file-output-port . g$13405$kwCBQ)
        (open-file-input/output-port . g$13404$kwCBQ)
        (open-file-input-port . g$13403$kwCBQ)
        (open-bytevector-output-port . g$13402$kwCBQ)
        (open-bytevector-input-port . g$13401$kwCBQ)
        (native-transcoder . g$13400$kwCBQ)
        (native-eol-style . g$13399$kwCBQ)
        (make-transcoder . g$13398$kwCBQ)
        (latin-1-codec . g$13397$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (make-i/o-encoding-error . g$8146$kwCBQ)
        (make-i/o-decoding-error . g$8131$kwCBQ)
        (make-custom-textual-output-port . g$13396$kwCBQ)
        (make-custom-textual-input/output-port . g$13395$kwCBQ)
        (make-custom-textual-input-port . g$13394$kwCBQ)
        (make-custom-binary-output-port . g$13393$kwCBQ)
        (make-custom-binary-input/output-port . g$13392$kwCBQ)
        (make-custom-binary-input-port . g$13391$kwCBQ)
        (make-bytevector . g$13390$kwCBQ)
        (lookahead-u8 . g$13389$kwCBQ)
        (lookahead-char . g$13388$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (i/o-encoding-error? . g$8148$kwCBQ)
        (i/o-encoding-error-char . g$8149$kwCBQ)
        (i/o-decoding-error? . g$8132$kwCBQ)
        (get-u8 . g$13387$kwCBQ)
        (get-string-n! . g$13386$kwCBQ)
        (get-string-n . g$13385$kwCBQ)
        (get-string-all . g$13384$kwCBQ)
        (get-line . g$13383$kwCBQ)
        (get-datum . g$13382$kwCBQ)
        (get-char . g$13381$kwCBQ)
        (get-bytevector-some . g$13380$kwCBQ)
        (get-bytevector-n! . g$13379$kwCBQ)
        (get-bytevector-n . g$13378$kwCBQ)
        (get-bytevector-all . g$13377$kwCBQ)
        (flush-output-port . g$13376$kwCBQ)
        (close-port . g$13375$kwCBQ)
        (call-with-string-output-port . g$8156$kwCBQ)
        (call-with-port . g$8157$kwCBQ)
        (call-with-bytevector-output-port . g$13374$kwCBQ)
        (bytevector->string . g$13373$kwCBQ)
        (buffer-mode? . g$13372$kwCBQ)
        (binary-port? . g$13371$kwCBQ)
        (exit . g$13370$kwCBQ)
        (command-line . g$12958$kwCBQ)
        (remove . g$6618$kwCBQ)
        (remv . g$6619$kwCBQ)
        (remp . g$6599$kwCBQ)
        (remq . g$6620$kwCBQ)
        (partition . g$6598$kwCBQ)
        (memv . g$6606$kwCBQ)
        (memq . g$6605$kwCBQ)
        (memp . g$6608$kwCBQ)
        (member . g$6607$kwCBQ)
        (exists . g$6612$kwCBQ)
        (for-all . g$6611$kwCBQ)
        (fold-right . g$6617$kwCBQ)
        (fold-left . g$6616$kwCBQ)
        (find . g$6597$kwCBQ)
        (filter . g$6600$kwCBQ)
        (cons* . g$6615$kwCBQ)
        (assv . g$6602$kwCBQ)
        (assq . g$6601$kwCBQ)
        (assp . g$6604$kwCBQ)
        (assoc . g$6603$kwCBQ)
        (with-exception-handler . g$13365$kwCBQ)
        (raise-continuable . g$13364$kwCBQ)
        (raise . g$13363$kwCBQ)
        (make-enumeration . g$8254$kwCBQ)
        (enum-set=? . g$8261$kwCBQ)
        (enum-set-universe . g$8255$kwCBQ)
        (enum-set-union . g$8262$kwCBQ)
        (enum-set-subset? . g$8260$kwCBQ)
        (enum-set-projection . g$8266$kwCBQ)
        (enum-set-member? . g$8259$kwCBQ)
        (enum-set-intersection . g$8263$kwCBQ)
        (enum-set-indexer . g$8256$kwCBQ)
        (enum-set-difference . g$8264$kwCBQ)
        (enum-set-constructor . g$8257$kwCBQ)
        (enum-set-complement . g$8265$kwCBQ)
        (enum-set->list . g$8258$kwCBQ)
        (who-condition? . g$7592$kwCBQ)
        (warning? . g$7503$kwCBQ)
        (violation? . g$7545$kwCBQ)
        (undefined-violation? . g$7669$kwCBQ)
        (syntax-violation? . g$7653$kwCBQ)
        (syntax-violation-subform . g$7655$kwCBQ)
        (syntax-violation-form . g$7654$kwCBQ)
        (syntax-violation . g$9960$kwCBQ)
        (simple-conditions . g$13362$kwCBQ)
        (serious-condition? . g$7517$kwCBQ)
        (non-continuable-violation? . g$7607$kwCBQ)
        (message-condition? . g$7488$kwCBQ)
        (make-who-condition . g$7590$kwCBQ)
        (make-warning . g$7502$kwCBQ)
        (make-violation . g$7544$kwCBQ)
        (make-undefined-violation . g$7668$kwCBQ)
        (make-syntax-violation . g$7650$kwCBQ)
        (make-serious-condition . g$7516$kwCBQ)
        (make-non-continuable-violation . g$7606$kwCBQ)
        (make-message-condition . g$7486$kwCBQ)
        (make-lexical-violation . g$7634$kwCBQ)
        (make-irritants-condition . g$7573$kwCBQ)
        (make-implementation-restriction-violation . g$7620$kwCBQ)
        (make-error . g$7530$kwCBQ)
        (make-assertion-violation . g$7558$kwCBQ)
        (lexical-violation? . g$7635$kwCBQ)
        (irritants-condition? . g$7575$kwCBQ)
        (implementation-restriction-violation? . g$7621$kwCBQ)
        (error? . g$7531$kwCBQ)
        (condition-who . g$7593$kwCBQ)
        (condition-predicate . g$13361$kwCBQ)
        (condition-message . g$7489$kwCBQ)
        (condition-irritants . g$7576$kwCBQ)
        (condition-accessor . g$13360$kwCBQ)
        (condition . g$13359$kwCBQ)
        (assertion-violation? . g$7559$kwCBQ)
        (condition? . g$13358$kwCBQ)
        (utf32->string . g$13357$kwCBQ)
        (utf16->string . g$13356$kwCBQ)
        (utf8->string . g$13355$kwCBQ)
        (uint-list->bytevector . g$13354$kwCBQ)
        (u8-list->bytevector . g$13353$kwCBQ)
        (string->utf8 . g$13352$kwCBQ)
        (string->utf32 . g$13351$kwCBQ)
        (string->utf16 . g$13350$kwCBQ)
        (sint-list->bytevector . g$13349$kwCBQ)
        (native-endianness . g$7344$kwCBQ)
        (bytevector? . g$13348$kwCBQ)
        (bytevector=? . g$13347$kwCBQ)
        (bytevector-uint-set! . g$13346$kwCBQ)
        (bytevector-uint-ref . g$13345$kwCBQ)
        (bytevector-u8-set! . g$13344$kwCBQ)
        (bytevector-u8-ref . g$13343$kwCBQ)
        (bytevector-u64-set! . g$7365$kwCBQ)
        (bytevector-u64-ref . g$7361$kwCBQ)
        (bytevector-u64-native-set! . g$7367$kwCBQ)
        (bytevector-u64-native-ref . g$7363$kwCBQ)
        (bytevector-u32-set! . g$7357$kwCBQ)
        (bytevector-u32-ref . g$7353$kwCBQ)
        (bytevector-u32-native-set! . g$7359$kwCBQ)
        (bytevector-u32-native-ref . g$7355$kwCBQ)
        (bytevector-u16-set! . g$7349$kwCBQ)
        (bytevector-u16-ref . g$7345$kwCBQ)
        (bytevector-u16-native-set! . g$7351$kwCBQ)
        (bytevector-u16-native-ref . g$7347$kwCBQ)
        (bytevector-sint-set! . g$13342$kwCBQ)
        (bytevector-sint-ref . g$13341$kwCBQ)
        (bytevector-s8-set! . g$13340$kwCBQ)
        (bytevector-s8-ref . g$13339$kwCBQ)
        (bytevector-s64-set! . g$7366$kwCBQ)
        (bytevector-s64-ref . g$7362$kwCBQ)
        (bytevector-s64-native-set! . g$7368$kwCBQ)
        (bytevector-s64-native-ref . g$7364$kwCBQ)
        (bytevector-s32-set! . g$7358$kwCBQ)
        (bytevector-s32-ref . g$7354$kwCBQ)
        (bytevector-s32-native-set! . g$7360$kwCBQ)
        (bytevector-s32-native-ref . g$7356$kwCBQ)
        (bytevector-s16-set! . g$7350$kwCBQ)
        (bytevector-s16-ref . g$7346$kwCBQ)
        (bytevector-s16-native-set! . g$7352$kwCBQ)
        (bytevector-s16-native-ref . g$7348$kwCBQ)
        (bytevector-length . g$13338$kwCBQ)
        (bytevector-ieee-single-set! . g$13337$kwCBQ)
        (bytevector-ieee-single-ref . g$13336$kwCBQ)
        (bytevector-ieee-single-native-set! . g$7371$kwCBQ)
        (bytevector-ieee-single-native-ref . g$7369$kwCBQ)
        (bytevector-ieee-double-set! . g$13335$kwCBQ)
        (bytevector-ieee-double-ref . g$13334$kwCBQ)
        (bytevector-ieee-double-native-set! . g$7372$kwCBQ)
        (bytevector-ieee-double-native-ref . g$7370$kwCBQ)
        (bytevector-fill! . g$13333$kwCBQ)
        (bytevector-copy! . g$13332$kwCBQ)
        (bytevector-copy . g$13331$kwCBQ)
        (bytevector->uint-list . g$13330$kwCBQ)
        (bytevector->u8-list . g$13329$kwCBQ)
        (bytevector->sint-list . g$13328$kwCBQ)
        (no-nans-violation? . g$7968$kwCBQ)
        (no-infinities-violation? . g$7954$kwCBQ)
        (make-no-nans-violation . g$7967$kwCBQ)
        (make-no-infinities-violation . g$7953$kwCBQ)
        (real->flonum . g$13327$kwCBQ)
        (flzero? . g$13326$kwCBQ)
        (fltruncate . g$13325$kwCBQ)
        (fltan . g$13324$kwCBQ)
        (flsqrt . g$13323$kwCBQ)
        (flsin . g$13322$kwCBQ)
        (flround . g$13321$kwCBQ)
        (flpositive? . g$13320$kwCBQ)
        (flonum? . g$13319$kwCBQ)
        (flodd? . g$13318$kwCBQ)
        (flnumerator . g$13317$kwCBQ)
        (flnegative? . g$13316$kwCBQ)
        (flnan? . g$13315$kwCBQ)
        (flmod0 . g$13314$kwCBQ)
        (flmod . g$13313$kwCBQ)
        (flmin . g$13312$kwCBQ)
        (flmax . g$13311$kwCBQ)
        (fllog . g$13310$kwCBQ)
        (flinteger? . g$13309$kwCBQ)
        (flinfinite? . g$13308$kwCBQ)
        (flfloor . g$13307$kwCBQ)
        (flfinite? . g$13306$kwCBQ)
        (flexpt . g$13305$kwCBQ)
        (flexp . g$13304$kwCBQ)
        (fleven? . g$13303$kwCBQ)
        (fldiv0-and-mod0 . g$13302$kwCBQ)
        (fldiv0 . g$13301$kwCBQ)
        (fldiv-and-mod . g$13300$kwCBQ)
        (fldiv . g$13299$kwCBQ)
        (fldenominator . g$13298$kwCBQ)
        (flcos . g$13297$kwCBQ)
        (flceiling . g$13296$kwCBQ)
        (flatan . g$13295$kwCBQ)
        (flasin . g$13294$kwCBQ)
        (flacos . g$13293$kwCBQ)
        (flabs . g$13292$kwCBQ)
        (fl>? . g$13291$kwCBQ)
        (fl>=? . g$13290$kwCBQ)
        (fl=? . g$13289$kwCBQ)
        (fl<? . g$13288$kwCBQ)
        (fl<=? . g$13287$kwCBQ)
        (fl/ . g$13286$kwCBQ)
        (fl- . g$13285$kwCBQ)
        (fl+ . g$13284$kwCBQ)
        (fl* . g$13283$kwCBQ)
        (fixnum->flonum . g$13282$kwCBQ)
        (fxzero? . g$13281$kwCBQ)
        (fxxor . g$13280$kwCBQ)
        (fxrotate-bit-field . g$7900$kwCBQ)
        (fxreverse-bit-field . g$13279$kwCBQ)
        (fxpositive? . g$13278$kwCBQ)
        (fxodd? . g$13277$kwCBQ)
        (fxnot . g$13276$kwCBQ)
        (fxnegative? . g$13275$kwCBQ)
        (fxmod0 . g$13274$kwCBQ)
        (fxmod . g$13273$kwCBQ)
        (fxmin . g$13272$kwCBQ)
        (fxmax . g$13271$kwCBQ)
        (fxlength . g$13270$kwCBQ)
        (fxior . g$13269$kwCBQ)
        (fxif . g$7894$kwCBQ)
        (fxfirst-bit-set . g$13268$kwCBQ)
        (fxeven? . g$13267$kwCBQ)
        (fxdiv0-and-mod0 . g$13266$kwCBQ)
        (fxdiv0 . g$13265$kwCBQ)
        (fxdiv-and-mod . g$13264$kwCBQ)
        (fxdiv . g$13263$kwCBQ)
        (fxcopy-bit-field . g$7897$kwCBQ)
        (fxcopy-bit . g$7895$kwCBQ)
        (fxbit-set? . g$13262$kwCBQ)
        (fxbit-field . g$7896$kwCBQ)
        (fxbit-count . g$13261$kwCBQ)
        (fxarithmetic-shift-right . g$7899$kwCBQ)
        (fxarithmetic-shift-left . g$7898$kwCBQ)
        (fxarithmetic-shift . g$13260$kwCBQ)
        (fxand . g$13259$kwCBQ)
        (fx>? . g$13258$kwCBQ)
        (fx>=? . g$13257$kwCBQ)
        (fx=? . g$13256$kwCBQ)
        (fx<? . g$13255$kwCBQ)
        (fx<=? . g$13254$kwCBQ)
        (fx-/carry . g$7892$kwCBQ)
        (fx- . g$13253$kwCBQ)
        (fx+/carry . g$7893$kwCBQ)
        (fx+ . g$13252$kwCBQ)
        (fx*/carry . g$7891$kwCBQ)
        (fx* . g$13251$kwCBQ)
        (greatest-fixnum . g$13250$kwCBQ)
        (least-fixnum . g$13249$kwCBQ)
        (fixnum-width . g$13248$kwCBQ)
        (fixnum? . g$13247$kwCBQ)
        (bitwise-rotate-bit-field . g$7865$kwCBQ)
        (bitwise-reverse-bit-field . g$13246$kwCBQ)
        (bitwise-length . g$13245$kwCBQ)
        (bitwise-if . g$7859$kwCBQ)
        (bitwise-first-bit-set . g$13244$kwCBQ)
        (bitwise-copy-bit-field . g$7862$kwCBQ)
        (bitwise-copy-bit . g$7860$kwCBQ)
        (bitwise-bit-set? . g$13243$kwCBQ)
        (bitwise-bit-field . g$7861$kwCBQ)
        (bitwise-bit-count . g$13242$kwCBQ)
        (bitwise-xor . g$13241$kwCBQ)
        (bitwise-ior . g$13240$kwCBQ)
        (bitwise-and . g$13239$kwCBQ)
        (bitwise-not . g$13238$kwCBQ)
        (bitwise-arithmetic-shift-right . g$7864$kwCBQ)
        (bitwise-arithmetic-shift-left . g$7863$kwCBQ)
        (bitwise-arithmetic-shift . g$13237$kwCBQ)
        (zero? . g$6761$kwCBQ)
        (vector? . g$13236$kwCBQ)
        (vector-set! . g$13235$kwCBQ)
        (vector-ref . g$13234$kwCBQ)
        (vector-map . g$6855$kwCBQ)
        (vector-length . g$13233$kwCBQ)
        (vector-for-each . g$6856$kwCBQ)
        (vector-fill! . g$13232$kwCBQ)
        (vector->list . g$13231$kwCBQ)
        (vector . g$13230$kwCBQ)
        (values . g$13229$kwCBQ)
        (truncate . g$13228$kwCBQ)
        (tan . g$13227$kwCBQ)
        (symbol? . g$13226$kwCBQ)
        (symbol=? . g$6809$kwCBQ)
        (symbol->string . g$13225$kwCBQ)
        (substring . g$13224$kwCBQ)
        (string? . g$13223$kwCBQ)
        (string>? . g$6806$kwCBQ)
        (string>=? . g$6808$kwCBQ)
        (string=? . g$6804$kwCBQ)
        (string<? . g$6805$kwCBQ)
        (string<=? . g$6807$kwCBQ)
        (string-ref . g$13222$kwCBQ)
        (string-length . g$13221$kwCBQ)
        (string-for-each . g$6857$kwCBQ)
        (string-copy . g$13220$kwCBQ)
        (string-append . g$13219$kwCBQ)
        (string->symbol . g$13218$kwCBQ)
        (string->number . g$13217$kwCBQ)
        (string->list . g$13216$kwCBQ)
        (string . g$13215$kwCBQ)
        (sqrt . g$13214$kwCBQ)
        (sin . g$13213$kwCBQ)
        (round . g$13212$kwCBQ)
        (reverse . g$13211$kwCBQ)
        (real? . g$13210$kwCBQ)
        (real-valued? . g$13209$kwCBQ)
        (real-part . g$13208$kwCBQ)
        (rationalize . g$6852$kwCBQ)
        (rational? . g$13207$kwCBQ)
        (rational-valued? . g$13206$kwCBQ)
        (procedure? . g$13205$kwCBQ)
        (positive? . g$6759$kwCBQ)
        (pair? . g$13204$kwCBQ)
        (odd? . g$6763$kwCBQ)
        (numerator . g$13203$kwCBQ)
        (number? . g$13202$kwCBQ)
        (number->string . g$13201$kwCBQ)
        (null? . g$13200$kwCBQ)
        (not . g$13199$kwCBQ)
        (negative? . g$6760$kwCBQ)
        (nan? . g$13198$kwCBQ)
        (min . g$6765$kwCBQ)
        (max . g$6764$kwCBQ)
        (map . g$6613$kwCBQ)
        (make-vector . g$13197$kwCBQ)
        (make-string . g$13196$kwCBQ)
        (make-rectangular . g$13195$kwCBQ)
        (make-polar . g$13194$kwCBQ)
        (magnitude . g$13193$kwCBQ)
        (log . g$13192$kwCBQ)
        (list? . g$13191$kwCBQ)
        (list-tail . g$6593$kwCBQ)
        (list-ref . g$6594$kwCBQ)
        (list->vector . g$13190$kwCBQ)
        (list->string . g$13189$kwCBQ)
        (list . g$13188$kwCBQ)
        (length . g$13187$kwCBQ)
        (lcm . g$6767$kwCBQ)
        (integer? . g$13186$kwCBQ)
        (integer-valued? . g$13185$kwCBQ)
        (integer->char . g$13184$kwCBQ)
        (infinite? . g$13183$kwCBQ)
        (inexact? . g$13182$kwCBQ)
        (inexact . g$13181$kwCBQ)
        (imag-part . g$13180$kwCBQ)
        (gcd . g$6766$kwCBQ)
        (for-each . g$6614$kwCBQ)
        (floor . g$13179$kwCBQ)
        (finite? . g$13178$kwCBQ)
        (expt . g$13177$kwCBQ)
        (exp . g$13176$kwCBQ)
        (exact? . g$13175$kwCBQ)
        (exact-integer-sqrt . g$13174$kwCBQ)
        (exact . g$13173$kwCBQ)
        (even? . g$6762$kwCBQ)
        (error . g$13172$kwCBQ)
        (eqv? . g$13171$kwCBQ)
        (equal? . g$13170$kwCBQ)
        (eq? . g$13169$kwCBQ)
        (dynamic-wind . g$13168$kwCBQ)
        (div0-and-mod0 . g$13167$kwCBQ)
        (mod0 . g$13166$kwCBQ)
        (div0 . g$13165$kwCBQ)
        (div-and-mod . g$13164$kwCBQ)
        (mod . g$13163$kwCBQ)
        (div . g$13162$kwCBQ)
        (denominator . g$13161$kwCBQ)
        (cos . g$13160$kwCBQ)
        (cons . g$13159$kwCBQ)
        (complex? . g$13158$kwCBQ)
        (char? . g$13157$kwCBQ)
        (char>? . g$6849$kwCBQ)
        (char>=? . g$6851$kwCBQ)
        (char=? . g$6847$kwCBQ)
        (char<? . g$6848$kwCBQ)
        (char<=? . g$6850$kwCBQ)
        (char->integer . g$13156$kwCBQ)
        (ceiling . g$13155$kwCBQ)
        (call-with-values . g$13154$kwCBQ)
        (call/cc . g$13153$kwCBQ)
        (call-with-current-continuation . g$13152$kwCBQ)
        (cddddr . g$6758$kwCBQ)
        (cdddar . g$6757$kwCBQ)
        (cddadr . g$6756$kwCBQ)
        (cddaar . g$6755$kwCBQ)
        (cdaddr . g$6754$kwCBQ)
        (cdadar . g$6753$kwCBQ)
        (cdaadr . g$6752$kwCBQ)
        (cdaaar . g$6751$kwCBQ)
        (cadddr . g$6750$kwCBQ)
        (caddar . g$6749$kwCBQ)
        (cadadr . g$6748$kwCBQ)
        (cadaar . g$6747$kwCBQ)
        (caaddr . g$6746$kwCBQ)
        (caadar . g$6745$kwCBQ)
        (caaadr . g$6744$kwCBQ)
        (caaaar . g$6743$kwCBQ)
        (cdddr . g$6742$kwCBQ)
        (cddar . g$6741$kwCBQ)
        (cdadr . g$6740$kwCBQ)
        (cdaar . g$6739$kwCBQ)
        (caddr . g$6738$kwCBQ)
        (cadar . g$6737$kwCBQ)
        (caadr . g$6736$kwCBQ)
        (caaar . g$6735$kwCBQ)
        (cddr . g$6734$kwCBQ)
        (cdar . g$6733$kwCBQ)
        (cadr . g$6732$kwCBQ)
        (caar . g$6731$kwCBQ)
        (cdr . g$13151$kwCBQ)
        (car . g$13150$kwCBQ)
        (boolean? . g$13149$kwCBQ)
        (boolean=? . g$6810$kwCBQ)
        (atan . g$13148$kwCBQ)
        (assertion-violation . g$13147$kwCBQ)
        (asin . g$13146$kwCBQ)
        (apply . g$13145$kwCBQ)
        (append . g$13144$kwCBQ)
        (angle . g$13143$kwCBQ)
        (acos . g$13142$kwCBQ)
        (abs . g$13141$kwCBQ)
        (/ . g$13140$kwCBQ)
        (* . g$13139$kwCBQ)
        (- . g$13138$kwCBQ)
        (+ . g$13137$kwCBQ)
        (>= . g$13136$kwCBQ)
        (> . g$13135$kwCBQ)
        (= . g$13134$kwCBQ)
        (<= . g$13133$kwCBQ)
        (< . g$13132$kwCBQ)
        (&no-nans . g$13100$kwCBQ)
        (&no-infinities . g$13099$kwCBQ)
        (&i/o-encoding . g$13098$kwCBQ)
        (&i/o-decoding . g$13097$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ)
        (&non-continuable . g$13086$kwCBQ)
        (&undefined . g$13085$kwCBQ)
        (&syntax . g$13084$kwCBQ)
        (&lexical . g$13083$kwCBQ)
        (&implementation-restriction . g$13082$kwCBQ)
        (&who . g$13081$kwCBQ)
        (&irritants . g$13080$kwCBQ)
        (&assertion . g$13079$kwCBQ)
        (&violation . g$13078$kwCBQ)
        (&error . g$13077$kwCBQ)
        (&serious . g$13076$kwCBQ)
        (&warning . g$13075$kwCBQ)
        (&message . g$13074$kwCBQ)
        (&condition . g$13073$kwCBQ)
        (define-condition-type . g$13072$kwCBQ)
        (define-enumeration . g$13071$kwCBQ)
        (define-record-type . g$13070$kwCBQ)
        (parent-rtd . g$13069$kwCBQ)
        (nongenerative . g$13068$kwCBQ)
        (opaque . g$13067$kwCBQ)
        (sealed . g$13066$kwCBQ)
        (protocol . g$13065$kwCBQ)
        (parent . g$13064$kwCBQ)
        (immutable . g$13063$kwCBQ)
        (mutable . g$13062$kwCBQ)
        (fields . g$13061$kwCBQ)
        (error-handling-mode . g$13060$kwCBQ)
        (file-options . g$13059$kwCBQ)
        (buffer-mode . g$13058$kwCBQ)
        (eol-style . g$13057$kwCBQ)
        (guard . g$13056$kwCBQ)
        (unsyntax-splicing . g$13050$kwCBQ)
        (unsyntax . g$13049$kwCBQ)
        (unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (_ . g$13046$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (... . g$13043$kwCBQ)
        (assert . g$13042$kwCBQ)
        (endianness . g$13041$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (do . g$13036$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (identifier-syntax . g$13032$kwCBQ)
        (with-syntax . g$13031$kwCBQ)
        (quasisyntax . g$13030$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (let-values . g$13024$kwCBQ)
        (let*-values . g$13023$kwCBQ)
        (record-constructor-descriptor . g$13022$kwCBQ)
        (record-type-descriptor . g$13021$kwCBQ)
        (case . g$13019$kwCBQ)
        (unless . g$13017$kwCBQ)
        (when . g$13016$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec* . g$13014$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (case-lambda . g$13011$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (syntax . g$13009$kwCBQ)
        (syntax-case . g$13008$kwCBQ)
        (quote . g$13007$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (begin . g$12999$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13595$kwCBQ
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9967$kwCBQ)
        (scheme-report-environment . g$9940$kwCBQ)
        (quotient . g$7683$kwCBQ)
        (null-environment . g$9939$kwCBQ)
        (remainder . g$7684$kwCBQ)
        (modulo . g$7685$kwCBQ)
        (inexact->exact . g$7680$kwCBQ)
        (force . g$7687$kwCBQ)
        (exact->inexact . g$7681$kwCBQ)
        (delay . g$13040$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13596$kwCBQ
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13036$kwCBQ)
        (unless . g$13017$kwCBQ)
        (when . g$13016$kwCBQ)
        (case-lambda . g$13011$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13597$kwCBQ
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9942$kwCBQ) (environment . g$9938$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13598$kwCBQ
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13367$kwCBQ) (set-car! . g$13366$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13599$kwCBQ
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13369$kwCBQ) (string-set! . g$13368$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13600$kwCBQ
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13370$kwCBQ) (command-line . g$12958$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13601$kwCBQ
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9561$kwCBQ)
        (identifier? . g$9961$kwCBQ)
        (generate-temporaries . g$9950$kwCBQ)
        (free-identifier=? . g$9951$kwCBQ)
        (syntax->datum . g$9963$kwCBQ)
        (datum->syntax . g$9962$kwCBQ)
        (bound-identifier=? . g$9952$kwCBQ)
        (syntax-violation . g$9960$kwCBQ)
        (unsyntax-splicing . g$13050$kwCBQ)
        (unsyntax . g$13049$kwCBQ)
        (_ . g$13046$kwCBQ)
        (... . g$13043$kwCBQ)
        (with-syntax . g$13031$kwCBQ)
        (quasisyntax . g$13030$kwCBQ)
        (syntax . g$13009$kwCBQ)
        (syntax-case . g$13008$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13602$kwCBQ
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7338$kwCBQ)
        (file-exists? . g$7337$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13603$kwCBQ
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13457$kwCBQ)
        (vector-sort . g$13456$kwCBQ)
        (list-sort . g$7704$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13604$kwCBQ
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6761$kwCBQ)
        (vector? . g$13236$kwCBQ)
        (vector-set! . g$13235$kwCBQ)
        (vector-ref . g$13234$kwCBQ)
        (vector-map . g$6855$kwCBQ)
        (vector-length . g$13233$kwCBQ)
        (vector-for-each . g$6856$kwCBQ)
        (vector-fill! . g$13232$kwCBQ)
        (vector->list . g$13231$kwCBQ)
        (vector . g$13230$kwCBQ)
        (values . g$13229$kwCBQ)
        (truncate . g$13228$kwCBQ)
        (tan . g$13227$kwCBQ)
        (symbol? . g$13226$kwCBQ)
        (symbol=? . g$6809$kwCBQ)
        (symbol->string . g$13225$kwCBQ)
        (substring . g$13224$kwCBQ)
        (string? . g$13223$kwCBQ)
        (string>? . g$6806$kwCBQ)
        (string>=? . g$6808$kwCBQ)
        (string=? . g$6804$kwCBQ)
        (string<? . g$6805$kwCBQ)
        (string<=? . g$6807$kwCBQ)
        (string-ref . g$13222$kwCBQ)
        (string-length . g$13221$kwCBQ)
        (string-for-each . g$6857$kwCBQ)
        (string-copy . g$13220$kwCBQ)
        (string-append . g$13219$kwCBQ)
        (string->symbol . g$13218$kwCBQ)
        (string->number . g$13217$kwCBQ)
        (string->list . g$13216$kwCBQ)
        (string . g$13215$kwCBQ)
        (sqrt . g$13214$kwCBQ)
        (sin . g$13213$kwCBQ)
        (round . g$13212$kwCBQ)
        (reverse . g$13211$kwCBQ)
        (real? . g$13210$kwCBQ)
        (real-valued? . g$13209$kwCBQ)
        (real-part . g$13208$kwCBQ)
        (rationalize . g$6852$kwCBQ)
        (rational? . g$13207$kwCBQ)
        (rational-valued? . g$13206$kwCBQ)
        (procedure? . g$13205$kwCBQ)
        (positive? . g$6759$kwCBQ)
        (pair? . g$13204$kwCBQ)
        (odd? . g$6763$kwCBQ)
        (numerator . g$13203$kwCBQ)
        (number? . g$13202$kwCBQ)
        (number->string . g$13201$kwCBQ)
        (null? . g$13200$kwCBQ)
        (not . g$13199$kwCBQ)
        (negative? . g$6760$kwCBQ)
        (nan? . g$13198$kwCBQ)
        (min . g$6765$kwCBQ)
        (max . g$6764$kwCBQ)
        (map . g$6613$kwCBQ)
        (make-vector . g$13197$kwCBQ)
        (make-string . g$13196$kwCBQ)
        (make-rectangular . g$13195$kwCBQ)
        (make-polar . g$13194$kwCBQ)
        (magnitude . g$13193$kwCBQ)
        (log . g$13192$kwCBQ)
        (list? . g$13191$kwCBQ)
        (list-tail . g$6593$kwCBQ)
        (list-ref . g$6594$kwCBQ)
        (list->vector . g$13190$kwCBQ)
        (list->string . g$13189$kwCBQ)
        (list . g$13188$kwCBQ)
        (length . g$13187$kwCBQ)
        (lcm . g$6767$kwCBQ)
        (integer? . g$13186$kwCBQ)
        (integer-valued? . g$13185$kwCBQ)
        (integer->char . g$13184$kwCBQ)
        (infinite? . g$13183$kwCBQ)
        (inexact? . g$13182$kwCBQ)
        (inexact . g$13181$kwCBQ)
        (imag-part . g$13180$kwCBQ)
        (gcd . g$6766$kwCBQ)
        (for-each . g$6614$kwCBQ)
        (floor . g$13179$kwCBQ)
        (finite? . g$13178$kwCBQ)
        (expt . g$13177$kwCBQ)
        (exp . g$13176$kwCBQ)
        (exact? . g$13175$kwCBQ)
        (exact-integer-sqrt . g$13174$kwCBQ)
        (exact . g$13173$kwCBQ)
        (even? . g$6762$kwCBQ)
        (error . g$13172$kwCBQ)
        (eqv? . g$13171$kwCBQ)
        (equal? . g$13170$kwCBQ)
        (eq? . g$13169$kwCBQ)
        (dynamic-wind . g$13168$kwCBQ)
        (div0-and-mod0 . g$13167$kwCBQ)
        (mod0 . g$13166$kwCBQ)
        (div0 . g$13165$kwCBQ)
        (div-and-mod . g$13164$kwCBQ)
        (mod . g$13163$kwCBQ)
        (div . g$13162$kwCBQ)
        (denominator . g$13161$kwCBQ)
        (cos . g$13160$kwCBQ)
        (cons . g$13159$kwCBQ)
        (complex? . g$13158$kwCBQ)
        (char? . g$13157$kwCBQ)
        (char>? . g$6849$kwCBQ)
        (char>=? . g$6851$kwCBQ)
        (char=? . g$6847$kwCBQ)
        (char<? . g$6848$kwCBQ)
        (char<=? . g$6850$kwCBQ)
        (char->integer . g$13156$kwCBQ)
        (ceiling . g$13155$kwCBQ)
        (call-with-values . g$13154$kwCBQ)
        (call/cc . g$13153$kwCBQ)
        (call-with-current-continuation . g$13152$kwCBQ)
        (cddddr . g$6758$kwCBQ)
        (cdddar . g$6757$kwCBQ)
        (cddadr . g$6756$kwCBQ)
        (cddaar . g$6755$kwCBQ)
        (cdaddr . g$6754$kwCBQ)
        (cdadar . g$6753$kwCBQ)
        (cdaadr . g$6752$kwCBQ)
        (cdaaar . g$6751$kwCBQ)
        (cadddr . g$6750$kwCBQ)
        (caddar . g$6749$kwCBQ)
        (cadadr . g$6748$kwCBQ)
        (cadaar . g$6747$kwCBQ)
        (caaddr . g$6746$kwCBQ)
        (caadar . g$6745$kwCBQ)
        (caaadr . g$6744$kwCBQ)
        (caaaar . g$6743$kwCBQ)
        (cdddr . g$6742$kwCBQ)
        (cddar . g$6741$kwCBQ)
        (cdadr . g$6740$kwCBQ)
        (cdaar . g$6739$kwCBQ)
        (caddr . g$6738$kwCBQ)
        (cadar . g$6737$kwCBQ)
        (caadr . g$6736$kwCBQ)
        (caaar . g$6735$kwCBQ)
        (cddr . g$6734$kwCBQ)
        (cdar . g$6733$kwCBQ)
        (cadr . g$6732$kwCBQ)
        (caar . g$6731$kwCBQ)
        (cdr . g$13151$kwCBQ)
        (car . g$13150$kwCBQ)
        (boolean? . g$13149$kwCBQ)
        (boolean=? . g$6810$kwCBQ)
        (atan . g$13148$kwCBQ)
        (assertion-violation . g$13147$kwCBQ)
        (asin . g$13146$kwCBQ)
        (apply . g$13145$kwCBQ)
        (append . g$13144$kwCBQ)
        (angle . g$13143$kwCBQ)
        (acos . g$13142$kwCBQ)
        (abs . g$13141$kwCBQ)
        (/ . g$13140$kwCBQ)
        (* . g$13139$kwCBQ)
        (- . g$13138$kwCBQ)
        (+ . g$13137$kwCBQ)
        (>= . g$13136$kwCBQ)
        (> . g$13135$kwCBQ)
        (= . g$13134$kwCBQ)
        (<= . g$13133$kwCBQ)
        (< . g$13132$kwCBQ)
        (unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (_ . g$13046$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (... . g$13043$kwCBQ)
        (assert . g$13042$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (identifier-syntax . g$13032$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (let-values . g$13024$kwCBQ)
        (let*-values . g$13023$kwCBQ)
        (case . g$13019$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec* . g$13014$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (quote . g$13007$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (begin . g$12999$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13605$kwCBQ
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6618$kwCBQ)
        (remv . g$6619$kwCBQ)
        (remp . g$6599$kwCBQ)
        (remq . g$6620$kwCBQ)
        (partition . g$6598$kwCBQ)
        (memv . g$6606$kwCBQ)
        (memq . g$6605$kwCBQ)
        (memp . g$6608$kwCBQ)
        (member . g$6607$kwCBQ)
        (exists . g$6612$kwCBQ)
        (for-all . g$6611$kwCBQ)
        (fold-right . g$6617$kwCBQ)
        (fold-left . g$6616$kwCBQ)
        (find . g$6597$kwCBQ)
        (filter . g$6600$kwCBQ)
        (cons* . g$6615$kwCBQ)
        (assv . g$6602$kwCBQ)
        (assq . g$6601$kwCBQ)
        (assp . g$6604$kwCBQ)
        (assoc . g$6603$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13606$kwCBQ
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8189$kwCBQ)
        (call-with-input-file . g$8188$kwCBQ)
        (write-char . g$8170$kwCBQ)
        (write . g$13443$kwCBQ)
        (with-output-to-file . g$8187$kwCBQ)
        (with-input-from-file . g$8186$kwCBQ)
        (read-char . g$8169$kwCBQ)
        (read . g$13442$kwCBQ)
        (peek-char . g$8168$kwCBQ)
        (open-output-file . g$13441$kwCBQ)
        (open-input-file . g$13440$kwCBQ)
        (newline . g$8190$kwCBQ)
        (display . g$13439$kwCBQ)
        (close-output-port . g$13438$kwCBQ)
        (close-input-port . g$13437$kwCBQ)
        (eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13607$kwCBQ
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$13390$kwCBQ)
        (utf32->string . g$13357$kwCBQ)
        (utf16->string . g$13356$kwCBQ)
        (utf8->string . g$13355$kwCBQ)
        (uint-list->bytevector . g$13354$kwCBQ)
        (u8-list->bytevector . g$13353$kwCBQ)
        (string->utf8 . g$13352$kwCBQ)
        (string->utf32 . g$13351$kwCBQ)
        (string->utf16 . g$13350$kwCBQ)
        (sint-list->bytevector . g$13349$kwCBQ)
        (native-endianness . g$7344$kwCBQ)
        (bytevector? . g$13348$kwCBQ)
        (bytevector=? . g$13347$kwCBQ)
        (bytevector-uint-set! . g$13346$kwCBQ)
        (bytevector-uint-ref . g$13345$kwCBQ)
        (bytevector-u8-set! . g$13344$kwCBQ)
        (bytevector-u8-ref . g$13343$kwCBQ)
        (bytevector-u64-set! . g$7365$kwCBQ)
        (bytevector-u64-ref . g$7361$kwCBQ)
        (bytevector-u64-native-set! . g$7367$kwCBQ)
        (bytevector-u64-native-ref . g$7363$kwCBQ)
        (bytevector-u32-set! . g$7357$kwCBQ)
        (bytevector-u32-ref . g$7353$kwCBQ)
        (bytevector-u32-native-set! . g$7359$kwCBQ)
        (bytevector-u32-native-ref . g$7355$kwCBQ)
        (bytevector-u16-set! . g$7349$kwCBQ)
        (bytevector-u16-ref . g$7345$kwCBQ)
        (bytevector-u16-native-set! . g$7351$kwCBQ)
        (bytevector-u16-native-ref . g$7347$kwCBQ)
        (bytevector-sint-set! . g$13342$kwCBQ)
        (bytevector-sint-ref . g$13341$kwCBQ)
        (bytevector-s8-set! . g$13340$kwCBQ)
        (bytevector-s8-ref . g$13339$kwCBQ)
        (bytevector-s64-set! . g$7366$kwCBQ)
        (bytevector-s64-ref . g$7362$kwCBQ)
        (bytevector-s64-native-set! . g$7368$kwCBQ)
        (bytevector-s64-native-ref . g$7364$kwCBQ)
        (bytevector-s32-set! . g$7358$kwCBQ)
        (bytevector-s32-ref . g$7354$kwCBQ)
        (bytevector-s32-native-set! . g$7360$kwCBQ)
        (bytevector-s32-native-ref . g$7356$kwCBQ)
        (bytevector-s16-set! . g$7350$kwCBQ)
        (bytevector-s16-ref . g$7346$kwCBQ)
        (bytevector-s16-native-set! . g$7352$kwCBQ)
        (bytevector-s16-native-ref . g$7348$kwCBQ)
        (bytevector-length . g$13338$kwCBQ)
        (bytevector-ieee-single-set! . g$13337$kwCBQ)
        (bytevector-ieee-single-ref . g$13336$kwCBQ)
        (bytevector-ieee-single-native-set! . g$7371$kwCBQ)
        (bytevector-ieee-single-native-ref . g$7369$kwCBQ)
        (bytevector-ieee-double-set! . g$13335$kwCBQ)
        (bytevector-ieee-double-ref . g$13334$kwCBQ)
        (bytevector-ieee-double-native-set! . g$7372$kwCBQ)
        (bytevector-ieee-double-native-ref . g$7370$kwCBQ)
        (bytevector-fill! . g$13333$kwCBQ)
        (bytevector-copy! . g$13332$kwCBQ)
        (bytevector-copy . g$13331$kwCBQ)
        (bytevector->uint-list . g$13330$kwCBQ)
        (bytevector->u8-list . g$13329$kwCBQ)
        (bytevector->sint-list . g$13328$kwCBQ)
        (endianness . g$13041$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13608$kwCBQ
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13493$kwCBQ)
        (string-titlecase . g$13492$kwCBQ)
        (string-normalize-nfkd . g$13491$kwCBQ)
        (string-normalize-nfkc . g$13490$kwCBQ)
        (string-normalize-nfd . g$13489$kwCBQ)
        (string-normalize-nfc . g$13488$kwCBQ)
        (string-foldcase . g$13487$kwCBQ)
        (string-downcase . g$13486$kwCBQ)
        (string-ci>? . g$7764$kwCBQ)
        (string-ci>=? . g$7766$kwCBQ)
        (string-ci=? . g$7762$kwCBQ)
        (string-ci<? . g$7763$kwCBQ)
        (string-ci<=? . g$7765$kwCBQ)
        (char-whitespace? . g$13485$kwCBQ)
        (char-upper-case? . g$13484$kwCBQ)
        (char-title-case? . g$13483$kwCBQ)
        (char-numeric? . g$13482$kwCBQ)
        (char-lower-case? . g$13481$kwCBQ)
        (char-general-category . g$13480$kwCBQ)
        (char-upcase . g$13479$kwCBQ)
        (char-titlecase . g$13478$kwCBQ)
        (char-foldcase . g$13477$kwCBQ)
        (char-downcase . g$13476$kwCBQ)
        (char-ci>? . g$7803$kwCBQ)
        (char-ci>=? . g$7805$kwCBQ)
        (char-ci=? . g$7801$kwCBQ)
        (char-ci<? . g$7802$kwCBQ)
        (char-ci<=? . g$7804$kwCBQ)
        (char-alphabetic? . g$13475$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13609$kwCBQ
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13365$kwCBQ)
        (raise-continuable . g$13364$kwCBQ)
        (raise . g$13363$kwCBQ)
        (guard . g$13056$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13610$kwCBQ
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7865$kwCBQ)
        (bitwise-reverse-bit-field . g$13246$kwCBQ)
        (bitwise-length . g$13245$kwCBQ)
        (bitwise-if . g$7859$kwCBQ)
        (bitwise-first-bit-set . g$13244$kwCBQ)
        (bitwise-copy-bit-field . g$7862$kwCBQ)
        (bitwise-copy-bit . g$7860$kwCBQ)
        (bitwise-bit-set? . g$13243$kwCBQ)
        (bitwise-bit-field . g$7861$kwCBQ)
        (bitwise-bit-count . g$13242$kwCBQ)
        (bitwise-xor . g$13241$kwCBQ)
        (bitwise-ior . g$13240$kwCBQ)
        (bitwise-and . g$13239$kwCBQ)
        (bitwise-not . g$13238$kwCBQ)
        (bitwise-arithmetic-shift-right . g$7864$kwCBQ)
        (bitwise-arithmetic-shift-left . g$7863$kwCBQ)
        (bitwise-arithmetic-shift . g$13237$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13611$kwCBQ
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$13281$kwCBQ)
        (fxxor . g$13280$kwCBQ)
        (fxrotate-bit-field . g$7900$kwCBQ)
        (fxreverse-bit-field . g$13279$kwCBQ)
        (fxpositive? . g$13278$kwCBQ)
        (fxodd? . g$13277$kwCBQ)
        (fxnot . g$13276$kwCBQ)
        (fxnegative? . g$13275$kwCBQ)
        (fxmod0 . g$13274$kwCBQ)
        (fxmod . g$13273$kwCBQ)
        (fxmin . g$13272$kwCBQ)
        (fxmax . g$13271$kwCBQ)
        (fxlength . g$13270$kwCBQ)
        (fxior . g$13269$kwCBQ)
        (fxif . g$7894$kwCBQ)
        (fxfirst-bit-set . g$13268$kwCBQ)
        (fxeven? . g$13267$kwCBQ)
        (fxdiv0-and-mod0 . g$13266$kwCBQ)
        (fxdiv0 . g$13265$kwCBQ)
        (fxdiv-and-mod . g$13264$kwCBQ)
        (fxdiv . g$13263$kwCBQ)
        (fxcopy-bit-field . g$7897$kwCBQ)
        (fxcopy-bit . g$7895$kwCBQ)
        (fxbit-set? . g$13262$kwCBQ)
        (fxbit-field . g$7896$kwCBQ)
        (fxbit-count . g$13261$kwCBQ)
        (fxarithmetic-shift-right . g$7899$kwCBQ)
        (fxarithmetic-shift-left . g$7898$kwCBQ)
        (fxarithmetic-shift . g$13260$kwCBQ)
        (fxand . g$13259$kwCBQ)
        (fx>? . g$13258$kwCBQ)
        (fx>=? . g$13257$kwCBQ)
        (fx=? . g$13256$kwCBQ)
        (fx<? . g$13255$kwCBQ)
        (fx<=? . g$13254$kwCBQ)
        (fx-/carry . g$7892$kwCBQ)
        (fx- . g$13253$kwCBQ)
        (fx+/carry . g$7893$kwCBQ)
        (fx+ . g$13252$kwCBQ)
        (fx*/carry . g$7891$kwCBQ)
        (fx* . g$13251$kwCBQ)
        (greatest-fixnum . g$13250$kwCBQ)
        (least-fixnum . g$13249$kwCBQ)
        (fixnum-width . g$13248$kwCBQ)
        (fixnum? . g$13247$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13612$kwCBQ
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7968$kwCBQ)
        (no-infinities-violation? . g$7954$kwCBQ)
        (make-no-nans-violation . g$7967$kwCBQ)
        (make-no-infinities-violation . g$7953$kwCBQ)
        (real->flonum . g$13327$kwCBQ)
        (flzero? . g$13326$kwCBQ)
        (fltruncate . g$13325$kwCBQ)
        (fltan . g$13324$kwCBQ)
        (flsqrt . g$13323$kwCBQ)
        (flsin . g$13322$kwCBQ)
        (flround . g$13321$kwCBQ)
        (flpositive? . g$13320$kwCBQ)
        (flonum? . g$13319$kwCBQ)
        (flodd? . g$13318$kwCBQ)
        (flnumerator . g$13317$kwCBQ)
        (flnegative? . g$13316$kwCBQ)
        (flnan? . g$13315$kwCBQ)
        (flmod0 . g$13314$kwCBQ)
        (flmod . g$13313$kwCBQ)
        (flmin . g$13312$kwCBQ)
        (flmax . g$13311$kwCBQ)
        (fllog . g$13310$kwCBQ)
        (flinteger? . g$13309$kwCBQ)
        (flinfinite? . g$13308$kwCBQ)
        (flfloor . g$13307$kwCBQ)
        (flfinite? . g$13306$kwCBQ)
        (flexpt . g$13305$kwCBQ)
        (flexp . g$13304$kwCBQ)
        (fleven? . g$13303$kwCBQ)
        (fldiv0-and-mod0 . g$13302$kwCBQ)
        (fldiv0 . g$13301$kwCBQ)
        (fldiv-and-mod . g$13300$kwCBQ)
        (fldiv . g$13299$kwCBQ)
        (fldenominator . g$13298$kwCBQ)
        (flcos . g$13297$kwCBQ)
        (flceiling . g$13296$kwCBQ)
        (flatan . g$13295$kwCBQ)
        (flasin . g$13294$kwCBQ)
        (flacos . g$13293$kwCBQ)
        (flabs . g$13292$kwCBQ)
        (fl>? . g$13291$kwCBQ)
        (fl>=? . g$13290$kwCBQ)
        (fl=? . g$13289$kwCBQ)
        (fl<? . g$13288$kwCBQ)
        (fl<=? . g$13287$kwCBQ)
        (fl/ . g$13286$kwCBQ)
        (fl- . g$13285$kwCBQ)
        (fl+ . g$13284$kwCBQ)
        (fl* . g$13283$kwCBQ)
        (fixnum->flonum . g$13282$kwCBQ)
        (&no-nans . g$13100$kwCBQ)
        (&no-infinities . g$13099$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13613$kwCBQ
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13455$kwCBQ)
        (string-ci-hash . g$13454$kwCBQ)
        (string-hash . g$13453$kwCBQ)
        (equal-hash . g$13452$kwCBQ)
        (hashtable-equivalence-function . g$13451$kwCBQ)
        (make-hashtable . g$13450$kwCBQ)
        (hashtable-hash-function . g$13449$kwCBQ)
        (make-eqv-hashtable . g$7306$kwCBQ)
        (make-eq-hashtable . g$7305$kwCBQ)
        (hashtable? . g$13448$kwCBQ)
        (hashtable-update! . g$7312$kwCBQ)
        (hashtable-size . g$7307$kwCBQ)
        (hashtable-set! . g$7309$kwCBQ)
        (hashtable-ref . g$7308$kwCBQ)
        (hashtable-mutable? . g$13447$kwCBQ)
        (hashtable-keys . g$13446$kwCBQ)
        (hashtable-entries . g$13445$kwCBQ)
        (hashtable-delete! . g$7310$kwCBQ)
        (hashtable-copy . g$13444$kwCBQ)
        (hashtable-contains? . g$7311$kwCBQ)
        (hashtable-clear! . g$7313$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13614$kwCBQ
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (utf-8-codec . g$13429$kwCBQ)
        (utf-16-codec . g$13428$kwCBQ)
        (transcoder-error-handling-mode . g$13427$kwCBQ)
        (transcoder-eol-style . g$13426$kwCBQ)
        (transcoder-codec . g$13425$kwCBQ)
        (transcoded-port . g$13424$kwCBQ)
        (textual-port? . g$13423$kwCBQ)
        (string->bytevector . g$13422$kwCBQ)
        (standard-output-port . g$13421$kwCBQ)
        (standard-input-port . g$13420$kwCBQ)
        (standard-error-port . g$13419$kwCBQ)
        (set-port-position! . g$13418$kwCBQ)
        (put-u8 . g$13417$kwCBQ)
        (put-string . g$13416$kwCBQ)
        (put-datum . g$13415$kwCBQ)
        (put-char . g$13414$kwCBQ)
        (put-bytevector . g$13413$kwCBQ)
        (port? . g$8155$kwCBQ)
        (port-transcoder . g$13412$kwCBQ)
        (port-position . g$13411$kwCBQ)
        (port-has-set-port-position!? . g$13410$kwCBQ)
        (port-has-port-position? . g$13409$kwCBQ)
        (port-eof? . g$13408$kwCBQ)
        (output-port-buffer-mode . g$13407$kwCBQ)
        (open-string-output-port . g$8154$kwCBQ)
        (open-string-input-port . g$13406$kwCBQ)
        (open-file-output-port . g$13405$kwCBQ)
        (open-file-input/output-port . g$13404$kwCBQ)
        (open-file-input-port . g$13403$kwCBQ)
        (open-bytevector-output-port . g$13402$kwCBQ)
        (open-bytevector-input-port . g$13401$kwCBQ)
        (native-transcoder . g$13400$kwCBQ)
        (native-eol-style . g$13399$kwCBQ)
        (make-transcoder . g$13398$kwCBQ)
        (latin-1-codec . g$13397$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (make-i/o-encoding-error . g$8146$kwCBQ)
        (make-i/o-decoding-error . g$8131$kwCBQ)
        (make-custom-textual-output-port . g$13396$kwCBQ)
        (make-custom-textual-input/output-port . g$13395$kwCBQ)
        (make-custom-textual-input-port . g$13394$kwCBQ)
        (make-custom-binary-output-port . g$13393$kwCBQ)
        (make-custom-binary-input/output-port . g$13392$kwCBQ)
        (make-custom-binary-input-port . g$13391$kwCBQ)
        (lookahead-u8 . g$13389$kwCBQ)
        (lookahead-char . g$13388$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (i/o-encoding-error? . g$8148$kwCBQ)
        (i/o-encoding-error-char . g$8149$kwCBQ)
        (i/o-decoding-error? . g$8132$kwCBQ)
        (get-u8 . g$13387$kwCBQ)
        (get-string-n! . g$13386$kwCBQ)
        (get-string-n . g$13385$kwCBQ)
        (get-string-all . g$13384$kwCBQ)
        (get-line . g$13383$kwCBQ)
        (get-datum . g$13382$kwCBQ)
        (get-char . g$13381$kwCBQ)
        (get-bytevector-some . g$13380$kwCBQ)
        (get-bytevector-n! . g$13379$kwCBQ)
        (get-bytevector-n . g$13378$kwCBQ)
        (get-bytevector-all . g$13377$kwCBQ)
        (flush-output-port . g$13376$kwCBQ)
        (close-port . g$13375$kwCBQ)
        (call-with-string-output-port . g$8156$kwCBQ)
        (call-with-port . g$8157$kwCBQ)
        (call-with-bytevector-output-port . g$13374$kwCBQ)
        (bytevector->string . g$13373$kwCBQ)
        (buffer-mode? . g$13372$kwCBQ)
        (binary-port? . g$13371$kwCBQ)
        (&i/o-encoding . g$13098$kwCBQ)
        (&i/o-decoding . g$13097$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ)
        (error-handling-mode . g$13060$kwCBQ)
        (file-options . g$13059$kwCBQ)
        (buffer-mode . g$13058$kwCBQ)
        (eol-style . g$13057$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13615$kwCBQ
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8254$kwCBQ)
        (enum-set=? . g$8261$kwCBQ)
        (enum-set-universe . g$8255$kwCBQ)
        (enum-set-union . g$8262$kwCBQ)
        (enum-set-subset? . g$8260$kwCBQ)
        (enum-set-projection . g$8266$kwCBQ)
        (enum-set-member? . g$8259$kwCBQ)
        (enum-set-intersection . g$8263$kwCBQ)
        (enum-set-indexer . g$8256$kwCBQ)
        (enum-set-difference . g$8264$kwCBQ)
        (enum-set-constructor . g$8257$kwCBQ)
        (enum-set-complement . g$8265$kwCBQ)
        (enum-set->list . g$8258$kwCBQ)
        (define-enumeration . g$13071$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13616$kwCBQ
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7592$kwCBQ)
        (warning? . g$7503$kwCBQ)
        (violation? . g$7545$kwCBQ)
        (undefined-violation? . g$7669$kwCBQ)
        (syntax-violation? . g$7653$kwCBQ)
        (syntax-violation-subform . g$7655$kwCBQ)
        (syntax-violation-form . g$7654$kwCBQ)
        (syntax-violation . g$9960$kwCBQ)
        (simple-conditions . g$13362$kwCBQ)
        (serious-condition? . g$7517$kwCBQ)
        (non-continuable-violation? . g$7607$kwCBQ)
        (message-condition? . g$7488$kwCBQ)
        (make-who-condition . g$7590$kwCBQ)
        (make-warning . g$7502$kwCBQ)
        (make-violation . g$7544$kwCBQ)
        (make-undefined-violation . g$7668$kwCBQ)
        (make-syntax-violation . g$7650$kwCBQ)
        (make-serious-condition . g$7516$kwCBQ)
        (make-non-continuable-violation . g$7606$kwCBQ)
        (make-message-condition . g$7486$kwCBQ)
        (make-lexical-violation . g$7634$kwCBQ)
        (make-irritants-condition . g$7573$kwCBQ)
        (make-implementation-restriction-violation . g$7620$kwCBQ)
        (make-error . g$7530$kwCBQ)
        (make-assertion-violation . g$7558$kwCBQ)
        (lexical-violation? . g$7635$kwCBQ)
        (irritants-condition? . g$7575$kwCBQ)
        (implementation-restriction-violation? . g$7621$kwCBQ)
        (error? . g$7531$kwCBQ)
        (condition-who . g$7593$kwCBQ)
        (condition-predicate . g$13361$kwCBQ)
        (condition-message . g$7489$kwCBQ)
        (condition-irritants . g$7576$kwCBQ)
        (condition-accessor . g$13360$kwCBQ)
        (condition . g$13359$kwCBQ)
        (assertion-violation? . g$7559$kwCBQ)
        (condition? . g$13358$kwCBQ)
        (&non-continuable . g$13086$kwCBQ)
        (&undefined . g$13085$kwCBQ)
        (&syntax . g$13084$kwCBQ)
        (&lexical . g$13083$kwCBQ)
        (&implementation-restriction . g$13082$kwCBQ)
        (&who . g$13081$kwCBQ)
        (&irritants . g$13080$kwCBQ)
        (&assertion . g$13079$kwCBQ)
        (&violation . g$13078$kwCBQ)
        (&error . g$13077$kwCBQ)
        (&serious . g$13076$kwCBQ)
        (&warning . g$13075$kwCBQ)
        (&message . g$13074$kwCBQ)
        (&condition . g$13073$kwCBQ)
        (define-condition-type . g$13072$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13617$kwCBQ
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13467$kwCBQ)
        (record-type-uid . g$13466$kwCBQ)
        (record-type-sealed? . g$13465$kwCBQ)
        (record-type-parent . g$13464$kwCBQ)
        (record-type-opaque? . g$13463$kwCBQ)
        (record-type-name . g$13462$kwCBQ)
        (record-type-generative? . g$13461$kwCBQ)
        (record-type-field-names . g$13460$kwCBQ)
        (record-rtd . g$13459$kwCBQ)
        (record-field-mutable? . g$13458$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13618$kwCBQ
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13474$kwCBQ)
        (record-predicate . g$13473$kwCBQ)
        (record-mutator . g$13472$kwCBQ)
        (record-constructor . g$13471$kwCBQ)
        (record-accessor . g$13470$kwCBQ)
        (make-record-type-descriptor . g$13469$kwCBQ)
        (make-record-constructor-descriptor . g$13468$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13619$kwCBQ
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13070$kwCBQ)
        (parent-rtd . g$13069$kwCBQ)
        (nongenerative . g$13068$kwCBQ)
        (opaque . g$13067$kwCBQ)
        (sealed . g$13066$kwCBQ)
        (protocol . g$13065$kwCBQ)
        (parent . g$13064$kwCBQ)
        (immutable . g$13063$kwCBQ)
        (mutable . g$13062$kwCBQ)
        (fields . g$13061$kwCBQ)
        (record-constructor-descriptor . g$13022$kwCBQ)
        (record-type-descriptor . g$13021$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13620$kwCBQ
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9832$kwCBQ)
        (&no-nans-rcd . g$13584$kwCBQ)
        (&no-nans-rtd . g$13583$kwCBQ)
        (&no-infinities-rcd . g$13582$kwCBQ)
        (&no-infinities-rtd . g$13581$kwCBQ)
        (&i/o-encoding-rcd . g$13580$kwCBQ)
        (&i/o-encoding-rtd . g$13579$kwCBQ)
        (&i/o-decoding-rcd . g$13578$kwCBQ)
        (&i/o-decoding-rtd . g$13577$kwCBQ)
        (&i/o-port-rcd . g$13576$kwCBQ)
        (&i/o-port-rtd . g$13575$kwCBQ)
        (&i/o-file-does-not-exist-rcd . g$13574$kwCBQ)
        (&i/o-file-does-not-exist-rtd . g$13573$kwCBQ)
        (&i/o-file-already-exists-rcd . g$13572$kwCBQ)
        (&i/o-file-already-exists-rtd . g$13571$kwCBQ)
        (&i/o-file-is-read-only-rcd . g$13570$kwCBQ)
        (&i/o-file-is-read-only-rtd . g$13569$kwCBQ)
        (&i/o-file-protection-rcd . g$13568$kwCBQ)
        (&i/o-file-protection-rtd . g$13567$kwCBQ)
        (&i/o-filename-rcd . g$13566$kwCBQ)
        (&i/o-filename-rtd . g$13565$kwCBQ)
        (&i/o-invalid-position-rcd . g$13564$kwCBQ)
        (&i/o-invalid-position-rtd . g$13563$kwCBQ)
        (&i/o-write-rcd . g$13562$kwCBQ)
        (&i/o-write-rtd . g$13561$kwCBQ)
        (&i/o-read-rcd . g$13560$kwCBQ)
        (&i/o-read-rtd . g$13559$kwCBQ)
        (&i/o-rcd . g$13558$kwCBQ)
        (&i/o-rtd . g$13557$kwCBQ)
        (&undefined-rcd . g$13556$kwCBQ)
        (&undefined-rtd . g$13555$kwCBQ)
        (&syntax-rcd . g$13554$kwCBQ)
        (&syntax-rtd . g$13553$kwCBQ)
        (&lexical-rcd . g$13552$kwCBQ)
        (&lexical-rtd . g$13551$kwCBQ)
        (&implementation-restriction-rcd . g$13550$kwCBQ)
        (&implementation-restriction-rtd . g$13549$kwCBQ)
        (&non-continuable-rcd . g$13548$kwCBQ)
        (&non-continuable-rtd . g$13547$kwCBQ)
        (&who-rcd . g$13546$kwCBQ)
        (&who-rtd . g$13545$kwCBQ)
        (&irritants-rcd . g$13544$kwCBQ)
        (&irritants-rtd . g$13543$kwCBQ)
        (&assertion-rcd . g$13542$kwCBQ)
        (&assertion-rtd . g$13541$kwCBQ)
        (&violation-rcd . g$13540$kwCBQ)
        (&violation-rtd . g$13539$kwCBQ)
        (&error-rcd . g$13538$kwCBQ)
        (&error-rtd . g$13537$kwCBQ)
        (&serious-rcd . g$13536$kwCBQ)
        (&serious-rtd . g$13535$kwCBQ)
        (&warning-rcd . g$13534$kwCBQ)
        (&warning-rtd . g$13533$kwCBQ)
        (&message-rcd . g$13532$kwCBQ)
        (&message-rtd . g$13531$kwCBQ)
        (&condition-rcd . g$13530$kwCBQ)
        (&condition-rtd . g$13529$kwCBQ)
        (library-letrec* . g$13528$kwCBQ)
        (annotation-stripped . g$13527$kwCBQ)
        (annotation-source . g$13526$kwCBQ)
        (annotation-expression . g$13525$kwCBQ)
        (annotation? . g$13524$kwCBQ)
        (read-annotated . g$13523$kwCBQ)
        (tanh . g$13522$kwCBQ)
        (cosh . g$13521$kwCBQ)
        (sinh . g$13520$kwCBQ)
        (make-guid . g$13519$kwCBQ)
        (unspecified? . g$13518$kwCBQ)
        (make-list . g$6596$kwCBQ)
        (last-pair . g$6595$kwCBQ)
        (load-r5rs . g$13517$kwCBQ)
        (license . g$13516$kwCBQ)
        (stacktrace . g$13515$kwCBQ)
        (ironscheme-build . g$12962$kwCBQ)
        (define-clr-class-internal . g$13514$kwCBQ)
        (clr-field-set!-internal . g$13513$kwCBQ)
        (clr-field-get-internal . g$13512$kwCBQ)
        (clr-cast-internal . g$13511$kwCBQ)
        (clr-call-internal . g$13510$kwCBQ)
        (clr-new-internal . g$13509$kwCBQ)
        (clr-new-array-internal . g$13508$kwCBQ)
        (clr-is-internal . g$13507$kwCBQ)
        (clr-reference-internal . g$13506$kwCBQ)
        (clr-using-internal . g$13505$kwCBQ)
        (syntax-error . g$9957$kwCBQ)
        (syntax-dispatch . g$9827$kwCBQ)
        (compile-core . g$13504$kwCBQ)
        (eval-core . g$13503$kwCBQ)
        (set-symbol-value! . g$13502$kwCBQ)
        (symbol-value . g$13501$kwCBQ)
        (symbol-bound? . g$13500$kwCBQ)
        (ungensym . g$13499$kwCBQ)
        (gensym . g$13498$kwCBQ)
        (void . g$13497$kwCBQ)
        (load-serialized-library . g$13496$kwCBQ)
        (serialize-library . g$13495$kwCBQ)
        (compile-system-libraries . g$12964$kwCBQ)
        (compile->closure . g$12966$kwCBQ)
        (compile . g$12965$kwCBQ)
        (load . g$12961$kwCBQ)
        (interaction-environment . g$9967$kwCBQ)
        (char-ready? . g$13494$kwCBQ)
        (string-upcase . g$13493$kwCBQ)
        (string-titlecase . g$13492$kwCBQ)
        (string-normalize-nfkd . g$13491$kwCBQ)
        (string-normalize-nfkc . g$13490$kwCBQ)
        (string-normalize-nfd . g$13489$kwCBQ)
        (string-normalize-nfc . g$13488$kwCBQ)
        (string-foldcase . g$13487$kwCBQ)
        (string-downcase . g$13486$kwCBQ)
        (string-ci>? . g$7764$kwCBQ)
        (string-ci>=? . g$7766$kwCBQ)
        (string-ci=? . g$7762$kwCBQ)
        (string-ci<? . g$7763$kwCBQ)
        (string-ci<=? . g$7765$kwCBQ)
        (char-whitespace? . g$13485$kwCBQ)
        (char-upper-case? . g$13484$kwCBQ)
        (char-title-case? . g$13483$kwCBQ)
        (char-numeric? . g$13482$kwCBQ)
        (char-lower-case? . g$13481$kwCBQ)
        (char-general-category . g$13480$kwCBQ)
        (char-upcase . g$13479$kwCBQ)
        (char-titlecase . g$13478$kwCBQ)
        (char-foldcase . g$13477$kwCBQ)
        (char-downcase . g$13476$kwCBQ)
        (char-ci>? . g$7803$kwCBQ)
        (char-ci>=? . g$7805$kwCBQ)
        (char-ci=? . g$7801$kwCBQ)
        (char-ci<? . g$7802$kwCBQ)
        (char-ci<=? . g$7804$kwCBQ)
        (char-alphabetic? . g$13475$kwCBQ)
        (variable-transformer-procedure . g$9564$kwCBQ)
        (variable-transformer? . g$9563$kwCBQ)
        (make-variable-transformer . g$9561$kwCBQ)
        (identifier? . g$9961$kwCBQ)
        (generate-temporaries . g$9950$kwCBQ)
        (free-identifier=? . g$9951$kwCBQ)
        (syntax->datum . g$9963$kwCBQ)
        (datum->syntax . g$9962$kwCBQ)
        (bound-identifier=? . g$9952$kwCBQ)
        (record-type-descriptor? . g$13474$kwCBQ)
        (record-predicate . g$13473$kwCBQ)
        (record-mutator . g$13472$kwCBQ)
        (record-constructor . g$13471$kwCBQ)
        (record-accessor . g$13470$kwCBQ)
        (make-record-type-descriptor . g$13469$kwCBQ)
        (make-record-constructor-descriptor . g$13468$kwCBQ)
        (record? . g$13467$kwCBQ)
        (record-type-uid . g$13466$kwCBQ)
        (record-type-sealed? . g$13465$kwCBQ)
        (record-type-parent . g$13464$kwCBQ)
        (record-type-opaque? . g$13463$kwCBQ)
        (record-type-name . g$13462$kwCBQ)
        (record-type-generative? . g$13461$kwCBQ)
        (record-type-field-names . g$13460$kwCBQ)
        (record-rtd . g$13459$kwCBQ)
        (record-field-mutable? . g$13458$kwCBQ)
        (delete-file . g$7338$kwCBQ)
        (file-exists? . g$7337$kwCBQ)
        (vector-sort! . g$13457$kwCBQ)
        (vector-sort . g$13456$kwCBQ)
        (list-sort . g$7704$kwCBQ)
        (symbol-hash . g$13455$kwCBQ)
        (string-ci-hash . g$13454$kwCBQ)
        (string-hash . g$13453$kwCBQ)
        (equal-hash . g$13452$kwCBQ)
        (hashtable-equivalence-function . g$13451$kwCBQ)
        (make-hashtable . g$13450$kwCBQ)
        (hashtable-hash-function . g$13449$kwCBQ)
        (make-eqv-hashtable . g$7306$kwCBQ)
        (make-eq-hashtable . g$7305$kwCBQ)
        (hashtable? . g$13448$kwCBQ)
        (hashtable-update! . g$7312$kwCBQ)
        (hashtable-size . g$7307$kwCBQ)
        (hashtable-set! . g$7309$kwCBQ)
        (hashtable-ref . g$7308$kwCBQ)
        (hashtable-mutable? . g$13447$kwCBQ)
        (hashtable-keys . g$13446$kwCBQ)
        (hashtable-entries . g$13445$kwCBQ)
        (hashtable-delete! . g$7310$kwCBQ)
        (hashtable-copy . g$13444$kwCBQ)
        (hashtable-contains? . g$7311$kwCBQ)
        (hashtable-clear! . g$7313$kwCBQ)
        (call-with-output-file . g$8189$kwCBQ)
        (call-with-input-file . g$8188$kwCBQ)
        (write-char . g$8170$kwCBQ)
        (write . g$13443$kwCBQ)
        (with-output-to-file . g$8187$kwCBQ)
        (with-input-from-file . g$8186$kwCBQ)
        (read-char . g$8169$kwCBQ)
        (read . g$13442$kwCBQ)
        (peek-char . g$8168$kwCBQ)
        (open-output-file . g$13441$kwCBQ)
        (open-input-file . g$13440$kwCBQ)
        (newline . g$8190$kwCBQ)
        (display . g$13439$kwCBQ)
        (close-output-port . g$13438$kwCBQ)
        (close-input-port . g$13437$kwCBQ)
        (eof-object? . g$13436$kwCBQ)
        (eof-object . g$13435$kwCBQ)
        (current-error-port . g$13434$kwCBQ)
        (current-output-port . g$13433$kwCBQ)
        (current-input-port . g$13432$kwCBQ)
        (output-port? . g$13431$kwCBQ)
        (input-port? . g$13430$kwCBQ)
        (utf-8-codec . g$13429$kwCBQ)
        (utf-16-codec . g$13428$kwCBQ)
        (transcoder-error-handling-mode . g$13427$kwCBQ)
        (transcoder-eol-style . g$13426$kwCBQ)
        (transcoder-codec . g$13425$kwCBQ)
        (transcoded-port . g$13424$kwCBQ)
        (textual-port? . g$13423$kwCBQ)
        (string->bytevector . g$13422$kwCBQ)
        (standard-output-port . g$13421$kwCBQ)
        (standard-input-port . g$13420$kwCBQ)
        (standard-error-port . g$13419$kwCBQ)
        (set-port-position! . g$13418$kwCBQ)
        (put-u8 . g$13417$kwCBQ)
        (put-string . g$13416$kwCBQ)
        (put-datum . g$13415$kwCBQ)
        (put-char . g$13414$kwCBQ)
        (put-bytevector . g$13413$kwCBQ)
        (port? . g$8155$kwCBQ)
        (port-transcoder . g$13412$kwCBQ)
        (port-position . g$13411$kwCBQ)
        (port-has-set-port-position!? . g$13410$kwCBQ)
        (port-has-port-position? . g$13409$kwCBQ)
        (port-eof? . g$13408$kwCBQ)
        (output-port-buffer-mode . g$13407$kwCBQ)
        (open-string-output-port . g$8154$kwCBQ)
        (open-string-input-port . g$13406$kwCBQ)
        (open-file-output-port . g$13405$kwCBQ)
        (open-file-input/output-port . g$13404$kwCBQ)
        (open-file-input-port . g$13403$kwCBQ)
        (open-bytevector-output-port . g$13402$kwCBQ)
        (open-bytevector-input-port . g$13401$kwCBQ)
        (native-transcoder . g$13400$kwCBQ)
        (native-eol-style . g$13399$kwCBQ)
        (make-transcoder . g$13398$kwCBQ)
        (latin-1-codec . g$13397$kwCBQ)
        (make-i/o-write-error . g$8010$kwCBQ)
        (make-i/o-read-error . g$7996$kwCBQ)
        (make-i/o-port-error . g$8115$kwCBQ)
        (make-i/o-invalid-position-error . g$8025$kwCBQ)
        (make-i/o-filename-error . g$8042$kwCBQ)
        (make-i/o-file-protection-error . g$8058$kwCBQ)
        (make-i/o-file-is-read-only-error . g$8072$kwCBQ)
        (make-i/o-file-does-not-exist-error . g$8100$kwCBQ)
        (make-i/o-file-already-exists-error . g$8086$kwCBQ)
        (make-i/o-error . g$7982$kwCBQ)
        (make-i/o-encoding-error . g$8146$kwCBQ)
        (make-i/o-decoding-error . g$8131$kwCBQ)
        (make-custom-textual-output-port . g$13396$kwCBQ)
        (make-custom-textual-input/output-port . g$13395$kwCBQ)
        (make-custom-textual-input-port . g$13394$kwCBQ)
        (make-custom-binary-output-port . g$13393$kwCBQ)
        (make-custom-binary-input/output-port . g$13392$kwCBQ)
        (make-custom-binary-input-port . g$13391$kwCBQ)
        (make-bytevector . g$13390$kwCBQ)
        (lookahead-u8 . g$13389$kwCBQ)
        (lookahead-char . g$13388$kwCBQ)
        (i/o-write-error? . g$8011$kwCBQ)
        (i/o-read-error? . g$7997$kwCBQ)
        (i/o-port-error? . g$8117$kwCBQ)
        (i/o-invalid-position-error? . g$8027$kwCBQ)
        (i/o-error-position . g$8028$kwCBQ)
        (i/o-filename-error? . g$8044$kwCBQ)
        (i/o-file-protection-error? . g$8059$kwCBQ)
        (i/o-file-is-read-only-error? . g$8073$kwCBQ)
        (i/o-file-does-not-exist-error? . g$8101$kwCBQ)
        (i/o-file-already-exists-error? . g$8087$kwCBQ)
        (i/o-error? . g$7983$kwCBQ)
        (i/o-error-port . g$8118$kwCBQ)
        (i/o-error-filename . g$8045$kwCBQ)
        (i/o-encoding-error? . g$8148$kwCBQ)
        (i/o-encoding-error-char . g$8149$kwCBQ)
        (i/o-decoding-error? . g$8132$kwCBQ)
        (get-u8 . g$13387$kwCBQ)
        (get-string-n! . g$13386$kwCBQ)
        (get-string-n . g$13385$kwCBQ)
        (get-string-all . g$13384$kwCBQ)
        (get-line . g$13383$kwCBQ)
        (get-datum . g$13382$kwCBQ)
        (get-char . g$13381$kwCBQ)
        (get-bytevector-some . g$13380$kwCBQ)
        (get-bytevector-n! . g$13379$kwCBQ)
        (get-bytevector-n . g$13378$kwCBQ)
        (get-bytevector-all . g$13377$kwCBQ)
        (flush-output-port . g$13376$kwCBQ)
        (close-port . g$13375$kwCBQ)
        (call-with-string-output-port . g$8156$kwCBQ)
        (call-with-port . g$8157$kwCBQ)
        (call-with-bytevector-output-port . g$13374$kwCBQ)
        (bytevector->string . g$13373$kwCBQ)
        (buffer-mode? . g$13372$kwCBQ)
        (binary-port? . g$13371$kwCBQ)
        (scheme-report-environment . g$9940$kwCBQ)
        (quotient . g$7683$kwCBQ)
        (null-environment . g$9939$kwCBQ)
        (remainder . g$7684$kwCBQ)
        (modulo . g$7685$kwCBQ)
        (inexact->exact . g$7680$kwCBQ)
        (force . g$7687$kwCBQ)
        (exact->inexact . g$7681$kwCBQ)
        (exit . g$13370$kwCBQ)
        (command-line . g$12958$kwCBQ)
        (string-fill! . g$13369$kwCBQ)
        (string-set! . g$13368$kwCBQ)
        (set-cdr! . g$13367$kwCBQ)
        (set-car! . g$13366$kwCBQ)
        (remove . g$6618$kwCBQ)
        (remv . g$6619$kwCBQ)
        (remp . g$6599$kwCBQ)
        (remq . g$6620$kwCBQ)
        (partition . g$6598$kwCBQ)
        (memv . g$6606$kwCBQ)
        (memq . g$6605$kwCBQ)
        (memp . g$6608$kwCBQ)
        (member . g$6607$kwCBQ)
        (exists . g$6612$kwCBQ)
        (for-all . g$6611$kwCBQ)
        (fold-right . g$6617$kwCBQ)
        (fold-left . g$6616$kwCBQ)
        (find . g$6597$kwCBQ)
        (filter . g$6600$kwCBQ)
        (cons* . g$6615$kwCBQ)
        (assv . g$6602$kwCBQ)
        (assq . g$6601$kwCBQ)
        (assp . g$6604$kwCBQ)
        (assoc . g$6603$kwCBQ)
        (with-exception-handler . g$13365$kwCBQ)
        (raise-continuable . g$13364$kwCBQ)
        (raise . g$13363$kwCBQ)
        (eval . g$9942$kwCBQ)
        (environment . g$9938$kwCBQ)
        (make-enumeration . g$8254$kwCBQ)
        (enum-set=? . g$8261$kwCBQ)
        (enum-set-universe . g$8255$kwCBQ)
        (enum-set-union . g$8262$kwCBQ)
        (enum-set-subset? . g$8260$kwCBQ)
        (enum-set-projection . g$8266$kwCBQ)
        (enum-set-member? . g$8259$kwCBQ)
        (enum-set-intersection . g$8263$kwCBQ)
        (enum-set-indexer . g$8256$kwCBQ)
        (enum-set-difference . g$8264$kwCBQ)
        (enum-set-constructor . g$8257$kwCBQ)
        (enum-set-complement . g$8265$kwCBQ)
        (enum-set->list . g$8258$kwCBQ)
        (who-condition? . g$7592$kwCBQ)
        (warning? . g$7503$kwCBQ)
        (violation? . g$7545$kwCBQ)
        (undefined-violation? . g$7669$kwCBQ)
        (syntax-violation? . g$7653$kwCBQ)
        (syntax-violation-subform . g$7655$kwCBQ)
        (syntax-violation-form . g$7654$kwCBQ)
        (syntax-violation . g$9960$kwCBQ)
        (simple-conditions . g$13362$kwCBQ)
        (serious-condition? . g$7517$kwCBQ)
        (non-continuable-violation? . g$7607$kwCBQ)
        (message-condition? . g$7488$kwCBQ)
        (make-who-condition . g$7590$kwCBQ)
        (make-warning . g$7502$kwCBQ)
        (make-violation . g$7544$kwCBQ)
        (make-undefined-violation . g$7668$kwCBQ)
        (make-syntax-violation . g$7650$kwCBQ)
        (make-serious-condition . g$7516$kwCBQ)
        (make-non-continuable-violation . g$7606$kwCBQ)
        (make-message-condition . g$7486$kwCBQ)
        (make-lexical-violation . g$7634$kwCBQ)
        (make-irritants-condition . g$7573$kwCBQ)
        (make-implementation-restriction-violation . g$7620$kwCBQ)
        (make-error . g$7530$kwCBQ)
        (make-assertion-violation . g$7558$kwCBQ)
        (lexical-violation? . g$7635$kwCBQ)
        (irritants-condition? . g$7575$kwCBQ)
        (implementation-restriction-violation? . g$7621$kwCBQ)
        (error? . g$7531$kwCBQ)
        (condition-who . g$7593$kwCBQ)
        (condition-predicate . g$13361$kwCBQ)
        (condition-message . g$7489$kwCBQ)
        (condition-irritants . g$7576$kwCBQ)
        (condition-accessor . g$13360$kwCBQ)
        (condition . g$13359$kwCBQ)
        (assertion-violation? . g$7559$kwCBQ)
        (condition? . g$13358$kwCBQ)
        (utf32->string . g$13357$kwCBQ)
        (utf16->string . g$13356$kwCBQ)
        (utf8->string . g$13355$kwCBQ)
        (uint-list->bytevector . g$13354$kwCBQ)
        (u8-list->bytevector . g$13353$kwCBQ)
        (string->utf8 . g$13352$kwCBQ)
        (string->utf32 . g$13351$kwCBQ)
        (string->utf16 . g$13350$kwCBQ)
        (sint-list->bytevector . g$13349$kwCBQ)
        (native-endianness . g$7344$kwCBQ)
        (bytevector? . g$13348$kwCBQ)
        (bytevector=? . g$13347$kwCBQ)
        (bytevector-uint-set! . g$13346$kwCBQ)
        (bytevector-uint-ref . g$13345$kwCBQ)
        (bytevector-u8-set! . g$13344$kwCBQ)
        (bytevector-u8-ref . g$13343$kwCBQ)
        (bytevector-u64-set! . g$7365$kwCBQ)
        (bytevector-u64-ref . g$7361$kwCBQ)
        (bytevector-u64-native-set! . g$7367$kwCBQ)
        (bytevector-u64-native-ref . g$7363$kwCBQ)
        (bytevector-u32-set! . g$7357$kwCBQ)
        (bytevector-u32-ref . g$7353$kwCBQ)
        (bytevector-u32-native-set! . g$7359$kwCBQ)
        (bytevector-u32-native-ref . g$7355$kwCBQ)
        (bytevector-u16-set! . g$7349$kwCBQ)
        (bytevector-u16-ref . g$7345$kwCBQ)
        (bytevector-u16-native-set! . g$7351$kwCBQ)
        (bytevector-u16-native-ref . g$7347$kwCBQ)
        (bytevector-sint-set! . g$13342$kwCBQ)
        (bytevector-sint-ref . g$13341$kwCBQ)
        (bytevector-s8-set! . g$13340$kwCBQ)
        (bytevector-s8-ref . g$13339$kwCBQ)
        (bytevector-s64-set! . g$7366$kwCBQ)
        (bytevector-s64-ref . g$7362$kwCBQ)
        (bytevector-s64-native-set! . g$7368$kwCBQ)
        (bytevector-s64-native-ref . g$7364$kwCBQ)
        (bytevector-s32-set! . g$7358$kwCBQ)
        (bytevector-s32-ref . g$7354$kwCBQ)
        (bytevector-s32-native-set! . g$7360$kwCBQ)
        (bytevector-s32-native-ref . g$7356$kwCBQ)
        (bytevector-s16-set! . g$7350$kwCBQ)
        (bytevector-s16-ref . g$7346$kwCBQ)
        (bytevector-s16-native-set! . g$7352$kwCBQ)
        (bytevector-s16-native-ref . g$7348$kwCBQ)
        (bytevector-length . g$13338$kwCBQ)
        (bytevector-ieee-single-set! . g$13337$kwCBQ)
        (bytevector-ieee-single-ref . g$13336$kwCBQ)
        (bytevector-ieee-single-native-set! . g$7371$kwCBQ)
        (bytevector-ieee-single-native-ref . g$7369$kwCBQ)
        (bytevector-ieee-double-set! . g$13335$kwCBQ)
        (bytevector-ieee-double-ref . g$13334$kwCBQ)
        (bytevector-ieee-double-native-set! . g$7372$kwCBQ)
        (bytevector-ieee-double-native-ref . g$7370$kwCBQ)
        (bytevector-fill! . g$13333$kwCBQ)
        (bytevector-copy! . g$13332$kwCBQ)
        (bytevector-copy . g$13331$kwCBQ)
        (bytevector->uint-list . g$13330$kwCBQ)
        (bytevector->u8-list . g$13329$kwCBQ)
        (bytevector->sint-list . g$13328$kwCBQ)
        (no-nans-violation? . g$7968$kwCBQ)
        (no-infinities-violation? . g$7954$kwCBQ)
        (make-no-nans-violation . g$7967$kwCBQ)
        (make-no-infinities-violation . g$7953$kwCBQ)
        (real->flonum . g$13327$kwCBQ)
        (flzero? . g$13326$kwCBQ)
        (fltruncate . g$13325$kwCBQ)
        (fltan . g$13324$kwCBQ)
        (flsqrt . g$13323$kwCBQ)
        (flsin . g$13322$kwCBQ)
        (flround . g$13321$kwCBQ)
        (flpositive? . g$13320$kwCBQ)
        (flonum? . g$13319$kwCBQ)
        (flodd? . g$13318$kwCBQ)
        (flnumerator . g$13317$kwCBQ)
        (flnegative? . g$13316$kwCBQ)
        (flnan? . g$13315$kwCBQ)
        (flmod0 . g$13314$kwCBQ)
        (flmod . g$13313$kwCBQ)
        (flmin . g$13312$kwCBQ)
        (flmax . g$13311$kwCBQ)
        (fllog . g$13310$kwCBQ)
        (flinteger? . g$13309$kwCBQ)
        (flinfinite? . g$13308$kwCBQ)
        (flfloor . g$13307$kwCBQ)
        (flfinite? . g$13306$kwCBQ)
        (flexpt . g$13305$kwCBQ)
        (flexp . g$13304$kwCBQ)
        (fleven? . g$13303$kwCBQ)
        (fldiv0-and-mod0 . g$13302$kwCBQ)
        (fldiv0 . g$13301$kwCBQ)
        (fldiv-and-mod . g$13300$kwCBQ)
        (fldiv . g$13299$kwCBQ)
        (fldenominator . g$13298$kwCBQ)
        (flcos . g$13297$kwCBQ)
        (flceiling . g$13296$kwCBQ)
        (flatan . g$13295$kwCBQ)
        (flasin . g$13294$kwCBQ)
        (flacos . g$13293$kwCBQ)
        (flabs . g$13292$kwCBQ)
        (fl>? . g$13291$kwCBQ)
        (fl>=? . g$13290$kwCBQ)
        (fl=? . g$13289$kwCBQ)
        (fl<? . g$13288$kwCBQ)
        (fl<=? . g$13287$kwCBQ)
        (fl/ . g$13286$kwCBQ)
        (fl- . g$13285$kwCBQ)
        (fl+ . g$13284$kwCBQ)
        (fl* . g$13283$kwCBQ)
        (fixnum->flonum . g$13282$kwCBQ)
        (fxzero? . g$13281$kwCBQ)
        (fxxor . g$13280$kwCBQ)
        (fxrotate-bit-field . g$7900$kwCBQ)
        (fxreverse-bit-field . g$13279$kwCBQ)
        (fxpositive? . g$13278$kwCBQ)
        (fxodd? . g$13277$kwCBQ)
        (fxnot . g$13276$kwCBQ)
        (fxnegative? . g$13275$kwCBQ)
        (fxmod0 . g$13274$kwCBQ)
        (fxmod . g$13273$kwCBQ)
        (fxmin . g$13272$kwCBQ)
        (fxmax . g$13271$kwCBQ)
        (fxlength . g$13270$kwCBQ)
        (fxior . g$13269$kwCBQ)
        (fxif . g$7894$kwCBQ)
        (fxfirst-bit-set . g$13268$kwCBQ)
        (fxeven? . g$13267$kwCBQ)
        (fxdiv0-and-mod0 . g$13266$kwCBQ)
        (fxdiv0 . g$13265$kwCBQ)
        (fxdiv-and-mod . g$13264$kwCBQ)
        (fxdiv . g$13263$kwCBQ)
        (fxcopy-bit-field . g$7897$kwCBQ)
        (fxcopy-bit . g$7895$kwCBQ)
        (fxbit-set? . g$13262$kwCBQ)
        (fxbit-field . g$7896$kwCBQ)
        (fxbit-count . g$13261$kwCBQ)
        (fxarithmetic-shift-right . g$7899$kwCBQ)
        (fxarithmetic-shift-left . g$7898$kwCBQ)
        (fxarithmetic-shift . g$13260$kwCBQ)
        (fxand . g$13259$kwCBQ)
        (fx>? . g$13258$kwCBQ)
        (fx>=? . g$13257$kwCBQ)
        (fx=? . g$13256$kwCBQ)
        (fx<? . g$13255$kwCBQ)
        (fx<=? . g$13254$kwCBQ)
        (fx-/carry . g$7892$kwCBQ)
        (fx- . g$13253$kwCBQ)
        (fx+/carry . g$7893$kwCBQ)
        (fx+ . g$13252$kwCBQ)
        (fx*/carry . g$7891$kwCBQ)
        (fx* . g$13251$kwCBQ)
        (greatest-fixnum . g$13250$kwCBQ)
        (least-fixnum . g$13249$kwCBQ)
        (fixnum-width . g$13248$kwCBQ)
        (fixnum? . g$13247$kwCBQ)
        (bitwise-rotate-bit-field . g$7865$kwCBQ)
        (bitwise-reverse-bit-field . g$13246$kwCBQ)
        (bitwise-length . g$13245$kwCBQ)
        (bitwise-if . g$7859$kwCBQ)
        (bitwise-first-bit-set . g$13244$kwCBQ)
        (bitwise-copy-bit-field . g$7862$kwCBQ)
        (bitwise-copy-bit . g$7860$kwCBQ)
        (bitwise-bit-set? . g$13243$kwCBQ)
        (bitwise-bit-field . g$7861$kwCBQ)
        (bitwise-bit-count . g$13242$kwCBQ)
        (bitwise-xor . g$13241$kwCBQ)
        (bitwise-ior . g$13240$kwCBQ)
        (bitwise-and . g$13239$kwCBQ)
        (bitwise-not . g$13238$kwCBQ)
        (bitwise-arithmetic-shift-right . g$7864$kwCBQ)
        (bitwise-arithmetic-shift-left . g$7863$kwCBQ)
        (bitwise-arithmetic-shift . g$13237$kwCBQ)
        (zero? . g$6761$kwCBQ)
        (vector? . g$13236$kwCBQ)
        (vector-set! . g$13235$kwCBQ)
        (vector-ref . g$13234$kwCBQ)
        (vector-map . g$6855$kwCBQ)
        (vector-length . g$13233$kwCBQ)
        (vector-for-each . g$6856$kwCBQ)
        (vector-fill! . g$13232$kwCBQ)
        (vector->list . g$13231$kwCBQ)
        (vector . g$13230$kwCBQ)
        (values . g$13229$kwCBQ)
        (truncate . g$13228$kwCBQ)
        (tan . g$13227$kwCBQ)
        (symbol? . g$13226$kwCBQ)
        (symbol=? . g$6809$kwCBQ)
        (symbol->string . g$13225$kwCBQ)
        (substring . g$13224$kwCBQ)
        (string? . g$13223$kwCBQ)
        (string>? . g$6806$kwCBQ)
        (string>=? . g$6808$kwCBQ)
        (string=? . g$6804$kwCBQ)
        (string<? . g$6805$kwCBQ)
        (string<=? . g$6807$kwCBQ)
        (string-ref . g$13222$kwCBQ)
        (string-length . g$13221$kwCBQ)
        (string-for-each . g$6857$kwCBQ)
        (string-copy . g$13220$kwCBQ)
        (string-append . g$13219$kwCBQ)
        (string->symbol . g$13218$kwCBQ)
        (string->number . g$13217$kwCBQ)
        (string->list . g$13216$kwCBQ)
        (string . g$13215$kwCBQ)
        (sqrt . g$13214$kwCBQ)
        (sin . g$13213$kwCBQ)
        (round . g$13212$kwCBQ)
        (reverse . g$13211$kwCBQ)
        (real? . g$13210$kwCBQ)
        (real-valued? . g$13209$kwCBQ)
        (real-part . g$13208$kwCBQ)
        (rationalize . g$6852$kwCBQ)
        (rational? . g$13207$kwCBQ)
        (rational-valued? . g$13206$kwCBQ)
        (procedure? . g$13205$kwCBQ)
        (positive? . g$6759$kwCBQ)
        (pair? . g$13204$kwCBQ)
        (odd? . g$6763$kwCBQ)
        (numerator . g$13203$kwCBQ)
        (number? . g$13202$kwCBQ)
        (number->string . g$13201$kwCBQ)
        (null? . g$13200$kwCBQ)
        (not . g$13199$kwCBQ)
        (negative? . g$6760$kwCBQ)
        (nan? . g$13198$kwCBQ)
        (min . g$6765$kwCBQ)
        (max . g$6764$kwCBQ)
        (map . g$6613$kwCBQ)
        (make-vector . g$13197$kwCBQ)
        (make-string . g$13196$kwCBQ)
        (make-rectangular . g$13195$kwCBQ)
        (make-polar . g$13194$kwCBQ)
        (magnitude . g$13193$kwCBQ)
        (log . g$13192$kwCBQ)
        (list? . g$13191$kwCBQ)
        (list-tail . g$6593$kwCBQ)
        (list-ref . g$6594$kwCBQ)
        (list->vector . g$13190$kwCBQ)
        (list->string . g$13189$kwCBQ)
        (list . g$13188$kwCBQ)
        (length . g$13187$kwCBQ)
        (lcm . g$6767$kwCBQ)
        (integer? . g$13186$kwCBQ)
        (integer-valued? . g$13185$kwCBQ)
        (integer->char . g$13184$kwCBQ)
        (infinite? . g$13183$kwCBQ)
        (inexact? . g$13182$kwCBQ)
        (inexact . g$13181$kwCBQ)
        (imag-part . g$13180$kwCBQ)
        (gcd . g$6766$kwCBQ)
        (for-each . g$6614$kwCBQ)
        (floor . g$13179$kwCBQ)
        (finite? . g$13178$kwCBQ)
        (expt . g$13177$kwCBQ)
        (exp . g$13176$kwCBQ)
        (exact? . g$13175$kwCBQ)
        (exact-integer-sqrt . g$13174$kwCBQ)
        (exact . g$13173$kwCBQ)
        (even? . g$6762$kwCBQ)
        (error . g$13172$kwCBQ)
        (eqv? . g$13171$kwCBQ)
        (equal? . g$13170$kwCBQ)
        (eq? . g$13169$kwCBQ)
        (dynamic-wind . g$13168$kwCBQ)
        (div0-and-mod0 . g$13167$kwCBQ)
        (mod0 . g$13166$kwCBQ)
        (div0 . g$13165$kwCBQ)
        (div-and-mod . g$13164$kwCBQ)
        (mod . g$13163$kwCBQ)
        (div . g$13162$kwCBQ)
        (denominator . g$13161$kwCBQ)
        (cos . g$13160$kwCBQ)
        (cons . g$13159$kwCBQ)
        (complex? . g$13158$kwCBQ)
        (char? . g$13157$kwCBQ)
        (char>? . g$6849$kwCBQ)
        (char>=? . g$6851$kwCBQ)
        (char=? . g$6847$kwCBQ)
        (char<? . g$6848$kwCBQ)
        (char<=? . g$6850$kwCBQ)
        (char->integer . g$13156$kwCBQ)
        (ceiling . g$13155$kwCBQ)
        (call-with-values . g$13154$kwCBQ)
        (call/cc . g$13153$kwCBQ)
        (call-with-current-continuation . g$13152$kwCBQ)
        (cddddr . g$6758$kwCBQ)
        (cdddar . g$6757$kwCBQ)
        (cddadr . g$6756$kwCBQ)
        (cddaar . g$6755$kwCBQ)
        (cdaddr . g$6754$kwCBQ)
        (cdadar . g$6753$kwCBQ)
        (cdaadr . g$6752$kwCBQ)
        (cdaaar . g$6751$kwCBQ)
        (cadddr . g$6750$kwCBQ)
        (caddar . g$6749$kwCBQ)
        (cadadr . g$6748$kwCBQ)
        (cadaar . g$6747$kwCBQ)
        (caaddr . g$6746$kwCBQ)
        (caadar . g$6745$kwCBQ)
        (caaadr . g$6744$kwCBQ)
        (caaaar . g$6743$kwCBQ)
        (cdddr . g$6742$kwCBQ)
        (cddar . g$6741$kwCBQ)
        (cdadr . g$6740$kwCBQ)
        (cdaar . g$6739$kwCBQ)
        (caddr . g$6738$kwCBQ)
        (cadar . g$6737$kwCBQ)
        (caadr . g$6736$kwCBQ)
        (caaar . g$6735$kwCBQ)
        (cddr . g$6734$kwCBQ)
        (cdar . g$6733$kwCBQ)
        (cadr . g$6732$kwCBQ)
        (caar . g$6731$kwCBQ)
        (cdr . g$13151$kwCBQ)
        (car . g$13150$kwCBQ)
        (boolean? . g$13149$kwCBQ)
        (boolean=? . g$6810$kwCBQ)
        (atan . g$13148$kwCBQ)
        (assertion-violation . g$13147$kwCBQ)
        (asin . g$13146$kwCBQ)
        (apply . g$13145$kwCBQ)
        (append . g$13144$kwCBQ)
        (angle . g$13143$kwCBQ)
        (acos . g$13142$kwCBQ)
        (abs . g$13141$kwCBQ)
        (/ . g$13140$kwCBQ)
        (* . g$13139$kwCBQ)
        (- . g$13138$kwCBQ)
        (+ . g$13137$kwCBQ)
        (>= . g$13136$kwCBQ)
        (> . g$13135$kwCBQ)
        (= . g$13134$kwCBQ)
        (<= . g$13133$kwCBQ)
        (< . g$13132$kwCBQ)
        (make-record-printer . g$13131$kwCBQ)
        (eqv-hash . g$13130$kwCBQ)
        (reverse! . g$13129$kwCBQ)
        (deserialize-port . g$13128$kwCBQ)
        (serialize-port . g$13127$kwCBQ)
        (enum-set? . g$8229$kwCBQ)
        (make-promise . g$7686$kwCBQ)
        (load/args . g$12960$kwCBQ)
        (printf . g$8340$kwCBQ)
        (fprintf . g$8341$kwCBQ)
        (format . g$8342$kwCBQ)
        (procedure-form . g$13126$kwCBQ)
        (procedure-environment . g$13125$kwCBQ)
        (procedure-name . g$13124$kwCBQ)
        (procedure-arity . g$13123$kwCBQ)
        (gc-collect . g$13122$kwCBQ)
        (clr-type? . g$13121$kwCBQ)
        (get-clr-type . g$13120$kwCBQ)
        (get-command-line . g$13119$kwCBQ)
        (vector-append . g$13118$kwCBQ)
        (vector-filter . g$13117$kwCBQ)
        (vector-reverse! . g$13116$kwCBQ)
        (vector-contains? . g$13115$kwCBQ)
        (vector-index-of . g$13114$kwCBQ)
        (vector-copy . g$13113$kwCBQ)
        (vector-binary-search . g$13112$kwCBQ)
        (string-ci-compare . g$13111$kwCBQ)
        (string-compare . g$13110$kwCBQ)
        (string-format . g$13109$kwCBQ)
        (trace-printer . g$12957$kwCBQ)
        (make-traced-procedure . g$13108$kwCBQ)
        (make-traced-macro . g$8362$kwCBQ)
        (assertion-error . g$9956$kwCBQ)
        (time-it . g$13107$kwCBQ)
        (make-parameter . g$8647$kwCBQ)
        (library-locator . g$13106$kwCBQ)
        (get-library-paths . g$13105$kwCBQ)
        (open-tcp-input/output-port . g$13104$kwCBQ)
        (hashtable-for-each . g$13103$kwCBQ)
        (hashtable-map . g$13102$kwCBQ)
        (environment-bindings . g$9934$kwCBQ)
        (environment-symbols . g$9937$kwCBQ)
        (interaction-environment-symbols . g$9933$kwCBQ)
        (optimization-level . g$13101$kwCBQ)
        (library-path . g$9107$kwCBQ)
        (make-compile-time-value . g$9562$kwCBQ)
        (expand->core . g$9943$kwCBQ)
        (expand . g$9941$kwCBQ)
        (expand-boot-cps . g$8421$kwCBQ)
        (convert->cps . g$8418$kwCBQ)
        (installed-libraries . g$9128$kwCBQ)
        (uninstall-library . g$9119$kwCBQ)
        (&no-nans . g$13100$kwCBQ)
        (&no-infinities . g$13099$kwCBQ)
        (&i/o-encoding . g$13098$kwCBQ)
        (&i/o-decoding . g$13097$kwCBQ)
        (&i/o-port . g$13096$kwCBQ)
        (&i/o-file-does-not-exist . g$13095$kwCBQ)
        (&i/o-file-already-exists . g$13094$kwCBQ)
        (&i/o-file-is-read-only . g$13093$kwCBQ)
        (&i/o-file-protection . g$13092$kwCBQ)
        (&i/o-filename . g$13091$kwCBQ)
        (&i/o-invalid-position . g$13090$kwCBQ)
        (&i/o-write . g$13089$kwCBQ)
        (&i/o-read . g$13088$kwCBQ)
        (&i/o . g$13087$kwCBQ)
        (&non-continuable . g$13086$kwCBQ)
        (&undefined . g$13085$kwCBQ)
        (&syntax . g$13084$kwCBQ)
        (&lexical . g$13083$kwCBQ)
        (&implementation-restriction . g$13082$kwCBQ)
        (&who . g$13081$kwCBQ)
        (&irritants . g$13080$kwCBQ)
        (&assertion . g$13079$kwCBQ)
        (&violation . g$13078$kwCBQ)
        (&error . g$13077$kwCBQ)
        (&serious . g$13076$kwCBQ)
        (&warning . g$13075$kwCBQ)
        (&message . g$13074$kwCBQ)
        (&condition . g$13073$kwCBQ)
        (define-condition-type . g$13072$kwCBQ)
        (define-enumeration . g$13071$kwCBQ)
        (define-record-type . g$13070$kwCBQ)
        (parent-rtd . g$13069$kwCBQ)
        (nongenerative . g$13068$kwCBQ)
        (opaque . g$13067$kwCBQ)
        (sealed . g$13066$kwCBQ)
        (protocol . g$13065$kwCBQ)
        (parent . g$13064$kwCBQ)
        (immutable . g$13063$kwCBQ)
        (mutable . g$13062$kwCBQ)
        (fields . g$13061$kwCBQ)
        (error-handling-mode . g$13060$kwCBQ)
        (file-options . g$13059$kwCBQ)
        (buffer-mode . g$13058$kwCBQ)
        (eol-style . g$13057$kwCBQ)
        (guard . g$13056$kwCBQ)
        (trace-letrec-syntax . g$13055$kwCBQ)
        (trace-let-syntax . g$13054$kwCBQ)
        (trace-define-syntax . g$13053$kwCBQ)
        (trace-define . g$13052$kwCBQ)
        (trace-lambda . g$13051$kwCBQ)
        (unsyntax-splicing . g$13050$kwCBQ)
        (unsyntax . g$13049$kwCBQ)
        (unquote-splicing . g$13048$kwCBQ)
        (unquote . g$13047$kwCBQ)
        (_ . g$13046$kwCBQ)
        (else . g$13045$kwCBQ)
        (=> . g$13044$kwCBQ)
        (... . g$13043$kwCBQ)
        (assert . g$13042$kwCBQ)
        (endianness . g$13041$kwCBQ)
        (delay . g$13040$kwCBQ)
        (time . g$13039$kwCBQ)
        (or . g$13038$kwCBQ)
        (and . g$13037$kwCBQ)
        (do . g$13036$kwCBQ)
        (cond . g$13035$kwCBQ)
        (let* . g$13034$kwCBQ)
        (let . g$13033$kwCBQ)
        (identifier-syntax . g$13032$kwCBQ)
        (with-syntax . g$13031$kwCBQ)
        (quasisyntax . g$13030$kwCBQ)
        (quasiquote . g$13029$kwCBQ)
        (syntax-rules . g$13028$kwCBQ)
        (include-into . g$13027$kwCBQ)
        (include . g$13026$kwCBQ)
        (define-struct . g$13025$kwCBQ)
        (let-values . g$13024$kwCBQ)
        (let*-values . g$13023$kwCBQ)
        (record-constructor-descriptor . g$13022$kwCBQ)
        (record-type-descriptor . g$13021$kwCBQ)
        (fluid-let-syntax . g$13020$kwCBQ)
        (case . g$13019$kwCBQ)
        (parameterize . g$13018$kwCBQ)
        (unless . g$13017$kwCBQ)
        (when . g$13016$kwCBQ)
        (if . g$13015$kwCBQ)
        (letrec* . g$13014$kwCBQ)
        (letrec . g$13013$kwCBQ)
        (type-descriptor . g$13012$kwCBQ)
        (case-lambda . g$13011$kwCBQ)
        (lambda . g$13010$kwCBQ)
        (syntax . g$13009$kwCBQ)
        (syntax-case . g$13008$kwCBQ)
        (quote . g$13007$kwCBQ)
        (foreign-call . g$13006$kwCBQ)
        (letrec-syntax . g$13005$kwCBQ)
        (let-syntax . g$13004$kwCBQ)
        (set! . g$13003$kwCBQ)
        (export . g$13002$kwCBQ)
        (import . g$13001$kwCBQ)
        (library . g$13000$kwCBQ)
        (begin . g$12999$kwCBQ)
        (module . g$12998$kwCBQ)
        (define-syntax . g$12997$kwCBQ)
        (define . g$12996$kwCBQ))
      '((g$9832$kwCBQ core-prim . ellipsis-map)
        (g$13584$kwCBQ core-prim . &no-nans-rcd)
        (g$13583$kwCBQ core-prim . &no-nans-rtd)
        (g$13582$kwCBQ core-prim . &no-infinities-rcd)
        (g$13581$kwCBQ core-prim . &no-infinities-rtd)
        (g$13580$kwCBQ core-prim . &i/o-encoding-rcd)
        (g$13579$kwCBQ core-prim . &i/o-encoding-rtd)
        (g$13578$kwCBQ core-prim . &i/o-decoding-rcd)
        (g$13577$kwCBQ core-prim . &i/o-decoding-rtd)
        (g$13576$kwCBQ core-prim . &i/o-port-rcd)
        (g$13575$kwCBQ core-prim . &i/o-port-rtd)
        (g$13574$kwCBQ core-prim . &i/o-file-does-not-exist-rcd)
        (g$13573$kwCBQ core-prim . &i/o-file-does-not-exist-rtd)
        (g$13572$kwCBQ core-prim . &i/o-file-already-exists-rcd)
        (g$13571$kwCBQ core-prim . &i/o-file-already-exists-rtd)
        (g$13570$kwCBQ core-prim . &i/o-file-is-read-only-rcd)
        (g$13569$kwCBQ core-prim . &i/o-file-is-read-only-rtd)
        (g$13568$kwCBQ core-prim . &i/o-file-protection-rcd)
        (g$13567$kwCBQ core-prim . &i/o-file-protection-rtd)
        (g$13566$kwCBQ core-prim . &i/o-filename-rcd)
        (g$13565$kwCBQ core-prim . &i/o-filename-rtd)
        (g$13564$kwCBQ core-prim . &i/o-invalid-position-rcd)
        (g$13563$kwCBQ core-prim . &i/o-invalid-position-rtd)
        (g$13562$kwCBQ core-prim . &i/o-write-rcd)
        (g$13561$kwCBQ core-prim . &i/o-write-rtd)
        (g$13560$kwCBQ core-prim . &i/o-read-rcd)
        (g$13559$kwCBQ core-prim . &i/o-read-rtd)
        (g$13558$kwCBQ core-prim . &i/o-rcd)
        (g$13557$kwCBQ core-prim . &i/o-rtd)
        (g$13556$kwCBQ core-prim . &undefined-rcd)
        (g$13555$kwCBQ core-prim . &undefined-rtd)
        (g$13554$kwCBQ core-prim . &syntax-rcd)
        (g$13553$kwCBQ core-prim . &syntax-rtd)
        (g$13552$kwCBQ core-prim . &lexical-rcd)
        (g$13551$kwCBQ core-prim . &lexical-rtd)
        (g$13550$kwCBQ core-prim . &implementation-restriction-rcd)
        (g$13549$kwCBQ core-prim . &implementation-restriction-rtd)
        (g$13548$kwCBQ core-prim . &non-continuable-rcd)
        (g$13547$kwCBQ core-prim . &non-continuable-rtd)
        (g$13546$kwCBQ core-prim . &who-rcd)
        (g$13545$kwCBQ core-prim . &who-rtd)
        (g$13544$kwCBQ core-prim . &irritants-rcd)
        (g$13543$kwCBQ core-prim . &irritants-rtd)
        (g$13542$kwCBQ core-prim . &assertion-rcd)
        (g$13541$kwCBQ core-prim . &assertion-rtd)
        (g$13540$kwCBQ core-prim . &violation-rcd)
        (g$13539$kwCBQ core-prim . &violation-rtd)
        (g$13538$kwCBQ core-prim . &error-rcd)
        (g$13537$kwCBQ core-prim . &error-rtd)
        (g$13536$kwCBQ core-prim . &serious-rcd)
        (g$13535$kwCBQ core-prim . &serious-rtd)
        (g$13534$kwCBQ core-prim . &warning-rcd)
        (g$13533$kwCBQ core-prim . &warning-rtd)
        (g$13532$kwCBQ core-prim . &message-rcd)
        (g$13531$kwCBQ core-prim . &message-rtd)
        (g$13530$kwCBQ core-prim . &condition-rcd)
        (g$13529$kwCBQ core-prim . &condition-rtd)
        (g$13528$kwCBQ core-prim . library-letrec*)
        (g$13527$kwCBQ core-prim . annotation-stripped)
        (g$13526$kwCBQ core-prim . annotation-source)
        (g$13525$kwCBQ core-prim . annotation-expression)
        (g$13524$kwCBQ core-prim . annotation?)
        (g$13523$kwCBQ core-prim . read-annotated)
        (g$13522$kwCBQ core-prim . tanh)
        (g$13521$kwCBQ core-prim . cosh)
        (g$13520$kwCBQ core-prim . sinh)
        (g$13519$kwCBQ core-prim . make-guid)
        (g$13518$kwCBQ core-prim . unspecified?)
        (g$6596$kwCBQ core-prim . make-list)
        (g$6595$kwCBQ core-prim . last-pair)
        (g$13517$kwCBQ core-prim . load-r5rs)
        (g$13516$kwCBQ core-prim . license)
        (g$13515$kwCBQ core-prim . stacktrace)
        (g$12962$kwCBQ core-prim . ironscheme-build)
        (g$13514$kwCBQ core-prim . define-clr-class-internal)
        (g$13513$kwCBQ core-prim . clr-field-set!-internal)
        (g$13512$kwCBQ core-prim . clr-field-get-internal)
        (g$13511$kwCBQ core-prim . clr-cast-internal)
        (g$13510$kwCBQ core-prim . clr-call-internal)
        (g$13509$kwCBQ core-prim . clr-new-internal)
        (g$13508$kwCBQ core-prim . clr-new-array-internal)
        (g$13507$kwCBQ core-prim . clr-is-internal)
        (g$13506$kwCBQ core-prim . clr-reference-internal)
        (g$13505$kwCBQ core-prim . clr-using-internal)
        (g$9957$kwCBQ core-prim . syntax-error)
        (g$9827$kwCBQ core-prim . syntax-dispatch)
        (g$13504$kwCBQ core-prim . compile-core)
        (g$13503$kwCBQ core-prim . eval-core)
        (g$13502$kwCBQ core-prim . set-symbol-value!)
        (g$13501$kwCBQ core-prim . symbol-value)
        (g$13500$kwCBQ core-prim . symbol-bound?)
        (g$13499$kwCBQ core-prim . ungensym)
        (g$13498$kwCBQ core-prim . gensym)
        (g$13497$kwCBQ core-prim . void)
        (g$13496$kwCBQ core-prim . load-serialized-library)
        (g$13495$kwCBQ core-prim . serialize-library)
        (g$12964$kwCBQ core-prim . compile-system-libraries)
        (g$12966$kwCBQ core-prim . compile->closure)
        (g$12965$kwCBQ core-prim . compile)
        (g$12961$kwCBQ core-prim . load)
        (g$9967$kwCBQ core-prim . interaction-environment)
        (g$13494$kwCBQ core-prim . char-ready?)
        (g$13493$kwCBQ core-prim . string-upcase)
        (g$13492$kwCBQ core-prim . string-titlecase)
        (g$13491$kwCBQ core-prim . string-normalize-nfkd)
        (g$13490$kwCBQ core-prim . string-normalize-nfkc)
        (g$13489$kwCBQ core-prim . string-normalize-nfd)
        (g$13488$kwCBQ core-prim . string-normalize-nfc)
        (g$13487$kwCBQ core-prim . string-foldcase)
        (g$13486$kwCBQ core-prim . string-downcase)
        (g$7764$kwCBQ core-prim . string-ci>?)
        (g$7766$kwCBQ core-prim . string-ci>=?)
        (g$7762$kwCBQ core-prim . string-ci=?)
        (g$7763$kwCBQ core-prim . string-ci<?)
        (g$7765$kwCBQ core-prim . string-ci<=?)
        (g$13485$kwCBQ core-prim . char-whitespace?)
        (g$13484$kwCBQ core-prim . char-upper-case?)
        (g$13483$kwCBQ core-prim . char-title-case?)
        (g$13482$kwCBQ core-prim . char-numeric?)
        (g$13481$kwCBQ core-prim . char-lower-case?)
        (g$13480$kwCBQ core-prim . char-general-category)
        (g$13479$kwCBQ core-prim . char-upcase)
        (g$13478$kwCBQ core-prim . char-titlecase)
        (g$13477$kwCBQ core-prim . char-foldcase)
        (g$13476$kwCBQ core-prim . char-downcase)
        (g$7803$kwCBQ core-prim . char-ci>?)
        (g$7805$kwCBQ core-prim . char-ci>=?)
        (g$7801$kwCBQ core-prim . char-ci=?)
        (g$7802$kwCBQ core-prim . char-ci<?)
        (g$7804$kwCBQ core-prim . char-ci<=?)
        (g$13475$kwCBQ core-prim . char-alphabetic?)
        (g$9564$kwCBQ core-prim . variable-transformer-procedure)
        (g$9563$kwCBQ core-prim . variable-transformer?)
        (g$9561$kwCBQ core-prim . make-variable-transformer)
        (g$9961$kwCBQ core-prim . identifier?)
        (g$9950$kwCBQ core-prim . generate-temporaries)
        (g$9951$kwCBQ core-prim . free-identifier=?)
        (g$9963$kwCBQ core-prim . syntax->datum)
        (g$9962$kwCBQ core-prim . datum->syntax)
        (g$9952$kwCBQ core-prim . bound-identifier=?)
        (g$13474$kwCBQ core-prim . record-type-descriptor?)
        (g$13473$kwCBQ core-prim . record-predicate)
        (g$13472$kwCBQ core-prim . record-mutator)
        (g$13471$kwCBQ core-prim . record-constructor)
        (g$13470$kwCBQ core-prim . record-accessor)
        (g$13469$kwCBQ core-prim . make-record-type-descriptor)
        (g$13468$kwCBQ core-prim . make-record-constructor-descriptor)
        (g$13467$kwCBQ core-prim . record?)
        (g$13466$kwCBQ core-prim . record-type-uid)
        (g$13465$kwCBQ core-prim . record-type-sealed?)
        (g$13464$kwCBQ core-prim . record-type-parent)
        (g$13463$kwCBQ core-prim . record-type-opaque?)
        (g$13462$kwCBQ core-prim . record-type-name)
        (g$13461$kwCBQ core-prim . record-type-generative?)
        (g$13460$kwCBQ core-prim . record-type-field-names)
        (g$13459$kwCBQ core-prim . record-rtd)
        (g$13458$kwCBQ core-prim . record-field-mutable?)
        (g$7338$kwCBQ core-prim . delete-file)
        (g$7337$kwCBQ core-prim . file-exists?)
        (g$13457$kwCBQ core-prim . vector-sort!)
        (g$13456$kwCBQ core-prim . vector-sort)
        (g$7704$kwCBQ core-prim . list-sort)
        (g$13455$kwCBQ core-prim . symbol-hash)
        (g$13454$kwCBQ core-prim . string-ci-hash)
        (g$13453$kwCBQ core-prim . string-hash)
        (g$13452$kwCBQ core-prim . equal-hash)
        (g$13451$kwCBQ core-prim . hashtable-equivalence-function)
        (g$13450$kwCBQ core-prim . make-hashtable)
        (g$13449$kwCBQ core-prim . hashtable-hash-function)
        (g$7306$kwCBQ core-prim . make-eqv-hashtable)
        (g$7305$kwCBQ core-prim . make-eq-hashtable)
        (g$13448$kwCBQ core-prim . hashtable?)
        (g$7312$kwCBQ core-prim . hashtable-update!)
        (g$7307$kwCBQ core-prim . hashtable-size)
        (g$7309$kwCBQ core-prim . hashtable-set!)
        (g$7308$kwCBQ core-prim . hashtable-ref)
        (g$13447$kwCBQ core-prim . hashtable-mutable?)
        (g$13446$kwCBQ core-prim . hashtable-keys)
        (g$13445$kwCBQ core-prim . hashtable-entries)
        (g$7310$kwCBQ core-prim . hashtable-delete!)
        (g$13444$kwCBQ core-prim . hashtable-copy)
        (g$7311$kwCBQ core-prim . hashtable-contains?)
        (g$7313$kwCBQ core-prim . hashtable-clear!)
        (g$8189$kwCBQ core-prim . call-with-output-file)
        (g$8188$kwCBQ core-prim . call-with-input-file)
        (g$8170$kwCBQ core-prim . write-char)
        (g$13443$kwCBQ core-prim . write)
        (g$8187$kwCBQ core-prim . with-output-to-file)
        (g$8186$kwCBQ core-prim . with-input-from-file)
        (g$8169$kwCBQ core-prim . read-char)
        (g$13442$kwCBQ core-prim . read)
        (g$8168$kwCBQ core-prim . peek-char)
        (g$13441$kwCBQ core-prim . open-output-file)
        (g$13440$kwCBQ core-prim . open-input-file)
        (g$8190$kwCBQ core-prim . newline)
        (g$13439$kwCBQ core-prim . display)
        (g$13438$kwCBQ core-prim . close-output-port)
        (g$13437$kwCBQ core-prim . close-input-port)
        (g$13436$kwCBQ core-prim . eof-object?)
        (g$13435$kwCBQ core-prim . eof-object)
        (g$13434$kwCBQ core-prim . current-error-port)
        (g$13433$kwCBQ core-prim . current-output-port)
        (g$13432$kwCBQ core-prim . current-input-port)
        (g$13431$kwCBQ core-prim . output-port?)
        (g$13430$kwCBQ core-prim . input-port?)
        (g$13429$kwCBQ core-prim . utf-8-codec)
        (g$13428$kwCBQ core-prim . utf-16-codec)
        (g$13427$kwCBQ core-prim . transcoder-error-handling-mode)
        (g$13426$kwCBQ core-prim . transcoder-eol-style)
        (g$13425$kwCBQ core-prim . transcoder-codec)
        (g$13424$kwCBQ core-prim . transcoded-port)
        (g$13423$kwCBQ core-prim . textual-port?)
        (g$13422$kwCBQ core-prim . string->bytevector)
        (g$13421$kwCBQ core-prim . standard-output-port)
        (g$13420$kwCBQ core-prim . standard-input-port)
        (g$13419$kwCBQ core-prim . standard-error-port)
        (g$13418$kwCBQ core-prim . set-port-position!)
        (g$13417$kwCBQ core-prim . put-u8)
        (g$13416$kwCBQ core-prim . put-string)
        (g$13415$kwCBQ core-prim . put-datum)
        (g$13414$kwCBQ core-prim . put-char)
        (g$13413$kwCBQ core-prim . put-bytevector)
        (g$8155$kwCBQ core-prim . port?)
        (g$13412$kwCBQ core-prim . port-transcoder)
        (g$13411$kwCBQ core-prim . port-position)
        (g$13410$kwCBQ core-prim . port-has-set-port-position!?)
        (g$13409$kwCBQ core-prim . port-has-port-position?)
        (g$13408$kwCBQ core-prim . port-eof?)
        (g$13407$kwCBQ core-prim . output-port-buffer-mode)
        (g$8154$kwCBQ core-prim . open-string-output-port)
        (g$13406$kwCBQ core-prim . open-string-input-port)
        (g$13405$kwCBQ core-prim . open-file-output-port)
        (g$13404$kwCBQ core-prim . open-file-input/output-port)
        (g$13403$kwCBQ core-prim . open-file-input-port)
        (g$13402$kwCBQ core-prim . open-bytevector-output-port)
        (g$13401$kwCBQ core-prim . open-bytevector-input-port)
        (g$13400$kwCBQ core-prim . native-transcoder)
        (g$13399$kwCBQ core-prim . native-eol-style)
        (g$13398$kwCBQ core-prim . make-transcoder)
        (g$13397$kwCBQ core-prim . latin-1-codec)
        (g$8010$kwCBQ core-prim . make-i/o-write-error)
        (g$7996$kwCBQ core-prim . make-i/o-read-error)
        (g$8115$kwCBQ core-prim . make-i/o-port-error)
        (g$8025$kwCBQ core-prim . make-i/o-invalid-position-error)
        (g$8042$kwCBQ core-prim . make-i/o-filename-error)
        (g$8058$kwCBQ core-prim . make-i/o-file-protection-error)
        (g$8072$kwCBQ core-prim . make-i/o-file-is-read-only-error)
        (g$8100$kwCBQ core-prim . make-i/o-file-does-not-exist-error)
        (g$8086$kwCBQ core-prim . make-i/o-file-already-exists-error)
        (g$7982$kwCBQ core-prim . make-i/o-error)
        (g$8146$kwCBQ core-prim . make-i/o-encoding-error)
        (g$8131$kwCBQ core-prim . make-i/o-decoding-error)
        (g$13396$kwCBQ core-prim . make-custom-textual-output-port)
        (g$13395$kwCBQ core-prim . make-custom-textual-input/output-port)
        (g$13394$kwCBQ core-prim . make-custom-textual-input-port)
        (g$13393$kwCBQ core-prim . make-custom-binary-output-port)
        (g$13392$kwCBQ core-prim . make-custom-binary-input/output-port)
        (g$13391$kwCBQ core-prim . make-custom-binary-input-port)
        (g$13390$kwCBQ core-prim . make-bytevector)
        (g$13389$kwCBQ core-prim . lookahead-u8)
        (g$13388$kwCBQ core-prim . lookahead-char)
        (g$8011$kwCBQ core-prim . i/o-write-error?)
        (g$7997$kwCBQ core-prim . i/o-read-error?)
        (g$8117$kwCBQ core-prim . i/o-port-error?)
        (g$8027$kwCBQ core-prim . i/o-invalid-position-error?)
        (g$8028$kwCBQ core-prim . i/o-error-position)
        (g$8044$kwCBQ core-prim . i/o-filename-error?)
        (g$8059$kwCBQ core-prim . i/o-file-protection-error?)
        (g$8073$kwCBQ core-prim . i/o-file-is-read-only-error?)
        (g$8101$kwCBQ core-prim . i/o-file-does-not-exist-error?)
        (g$8087$kwCBQ core-prim . i/o-file-already-exists-error?)
        (g$7983$kwCBQ core-prim . i/o-error?)
        (g$8118$kwCBQ core-prim . i/o-error-port)
        (g$8045$kwCBQ core-prim . i/o-error-filename)
        (g$8148$kwCBQ core-prim . i/o-encoding-error?)
        (g$8149$kwCBQ core-prim . i/o-encoding-error-char)
        (g$8132$kwCBQ core-prim . i/o-decoding-error?)
        (g$13387$kwCBQ core-prim . get-u8)
        (g$13386$kwCBQ core-prim . get-string-n!)
        (g$13385$kwCBQ core-prim . get-string-n)
        (g$13384$kwCBQ core-prim . get-string-all)
        (g$13383$kwCBQ core-prim . get-line)
        (g$13382$kwCBQ core-prim . get-datum)
        (g$13381$kwCBQ core-prim . get-char)
        (g$13380$kwCBQ core-prim . get-bytevector-some)
        (g$13379$kwCBQ core-prim . get-bytevector-n!)
        (g$13378$kwCBQ core-prim . get-bytevector-n)
        (g$13377$kwCBQ core-prim . get-bytevector-all)
        (g$13376$kwCBQ core-prim . flush-output-port)
        (g$13375$kwCBQ core-prim . close-port)
        (g$8156$kwCBQ core-prim . call-with-string-output-port)
        (g$8157$kwCBQ core-prim . call-with-port)
        (g$13374$kwCBQ core-prim . call-with-bytevector-output-port)
        (g$13373$kwCBQ core-prim . bytevector->string)
        (g$13372$kwCBQ core-prim . buffer-mode?)
        (g$13371$kwCBQ core-prim . binary-port?)
        (g$9940$kwCBQ core-prim . scheme-report-environment)
        (g$7683$kwCBQ core-prim . quotient)
        (g$9939$kwCBQ core-prim . null-environment)
        (g$7684$kwCBQ core-prim . remainder)
        (g$7685$kwCBQ core-prim . modulo)
        (g$7680$kwCBQ core-prim . inexact->exact)
        (g$7687$kwCBQ core-prim . force)
        (g$7681$kwCBQ core-prim . exact->inexact)
        (g$13370$kwCBQ core-prim . exit)
        (g$12958$kwCBQ core-prim . command-line)
        (g$13369$kwCBQ core-prim . string-fill!)
        (g$13368$kwCBQ core-prim . string-set!)
        (g$13367$kwCBQ core-prim . set-cdr!)
        (g$13366$kwCBQ core-prim . set-car!)
        (g$6618$kwCBQ core-prim . remove)
        (g$6619$kwCBQ core-prim . remv)
        (g$6599$kwCBQ core-prim . remp)
        (g$6620$kwCBQ core-prim . remq)
        (g$6598$kwCBQ core-prim . partition)
        (g$6606$kwCBQ core-prim . memv)
        (g$6605$kwCBQ core-prim . memq)
        (g$6608$kwCBQ core-prim . memp)
        (g$6607$kwCBQ core-prim . member)
        (g$6612$kwCBQ core-prim . exists)
        (g$6611$kwCBQ core-prim . for-all)
        (g$6617$kwCBQ core-prim . fold-right)
        (g$6616$kwCBQ core-prim . fold-left)
        (g$6597$kwCBQ core-prim . find)
        (g$6600$kwCBQ core-prim . filter)
        (g$6615$kwCBQ core-prim . cons*)
        (g$6602$kwCBQ core-prim . assv)
        (g$6601$kwCBQ core-prim . assq)
        (g$6604$kwCBQ core-prim . assp)
        (g$6603$kwCBQ core-prim . assoc)
        (g$13365$kwCBQ core-prim . with-exception-handler)
        (g$13364$kwCBQ core-prim . raise-continuable)
        (g$13363$kwCBQ core-prim . raise)
        (g$9942$kwCBQ core-prim . eval)
        (g$9938$kwCBQ core-prim . environment)
        (g$8254$kwCBQ core-prim . make-enumeration)
        (g$8261$kwCBQ core-prim . enum-set=?)
        (g$8255$kwCBQ core-prim . enum-set-universe)
        (g$8262$kwCBQ core-prim . enum-set-union)
        (g$8260$kwCBQ core-prim . enum-set-subset?)
        (g$8266$kwCBQ core-prim . enum-set-projection)
        (g$8259$kwCBQ core-prim . enum-set-member?)
        (g$8263$kwCBQ core-prim . enum-set-intersection)
        (g$8256$kwCBQ core-prim . enum-set-indexer)
        (g$8264$kwCBQ core-prim . enum-set-difference)
        (g$8257$kwCBQ core-prim . enum-set-constructor)
        (g$8265$kwCBQ core-prim . enum-set-complement)
        (g$8258$kwCBQ core-prim . enum-set->list)
        (g$7592$kwCBQ core-prim . who-condition?)
        (g$7503$kwCBQ core-prim . warning?)
        (g$7545$kwCBQ core-prim . violation?)
        (g$7669$kwCBQ core-prim . undefined-violation?)
        (g$7653$kwCBQ core-prim . syntax-violation?)
        (g$7655$kwCBQ core-prim . syntax-violation-subform)
        (g$7654$kwCBQ core-prim . syntax-violation-form)
        (g$9960$kwCBQ core-prim . syntax-violation)
        (g$13362$kwCBQ core-prim . simple-conditions)
        (g$7517$kwCBQ core-prim . serious-condition?)
        (g$7607$kwCBQ core-prim . non-continuable-violation?)
        (g$7488$kwCBQ core-prim . message-condition?)
        (g$7590$kwCBQ core-prim . make-who-condition)
        (g$7502$kwCBQ core-prim . make-warning)
        (g$7544$kwCBQ core-prim . make-violation)
        (g$7668$kwCBQ core-prim . make-undefined-violation)
        (g$7650$kwCBQ core-prim . make-syntax-violation)
        (g$7516$kwCBQ core-prim . make-serious-condition)
        (g$7606$kwCBQ core-prim . make-non-continuable-violation)
        (g$7486$kwCBQ core-prim . make-message-condition)
        (g$7634$kwCBQ core-prim . make-lexical-violation)
        (g$7573$kwCBQ core-prim . make-irritants-condition)
        (g$7620$kwCBQ core-prim . make-implementation-restriction-violation)
        (g$7530$kwCBQ core-prim . make-error)
        (g$7558$kwCBQ core-prim . make-assertion-violation)
        (g$7635$kwCBQ core-prim . lexical-violation?)
        (g$7575$kwCBQ core-prim . irritants-condition?)
        (g$7621$kwCBQ core-prim . implementation-restriction-violation?)
        (g$7531$kwCBQ core-prim . error?)
        (g$7593$kwCBQ core-prim . condition-who)
        (g$13361$kwCBQ core-prim . condition-predicate)
        (g$7489$kwCBQ core-prim . condition-message)
        (g$7576$kwCBQ core-prim . condition-irritants)
        (g$13360$kwCBQ core-prim . condition-accessor)
        (g$13359$kwCBQ core-prim . condition)
        (g$7559$kwCBQ core-prim . assertion-violation?)
        (g$13358$kwCBQ core-prim . condition?)
        (g$13357$kwCBQ core-prim . utf32->string)
        (g$13356$kwCBQ core-prim . utf16->string)
        (g$13355$kwCBQ core-prim . utf8->string)
        (g$13354$kwCBQ core-prim . uint-list->bytevector)
        (g$13353$kwCBQ core-prim . u8-list->bytevector)
        (g$13352$kwCBQ core-prim . string->utf8)
        (g$13351$kwCBQ core-prim . string->utf32)
        (g$13350$kwCBQ core-prim . string->utf16)
        (g$13349$kwCBQ core-prim . sint-list->bytevector)
        (g$7344$kwCBQ core-prim . native-endianness)
        (g$13348$kwCBQ core-prim . bytevector?)
        (g$13347$kwCBQ core-prim . bytevector=?)
        (g$13346$kwCBQ core-prim . bytevector-uint-set!)
        (g$13345$kwCBQ core-prim . bytevector-uint-ref)
        (g$13344$kwCBQ core-prim . bytevector-u8-set!)
        (g$13343$kwCBQ core-prim . bytevector-u8-ref)
        (g$7365$kwCBQ core-prim . bytevector-u64-set!)
        (g$7361$kwCBQ core-prim . bytevector-u64-ref)
        (g$7367$kwCBQ core-prim . bytevector-u64-native-set!)
        (g$7363$kwCBQ core-prim . bytevector-u64-native-ref)
        (g$7357$kwCBQ core-prim . bytevector-u32-set!)
        (g$7353$kwCBQ core-prim . bytevector-u32-ref)
        (g$7359$kwCBQ core-prim . bytevector-u32-native-set!)
        (g$7355$kwCBQ core-prim . bytevector-u32-native-ref)
        (g$7349$kwCBQ core-prim . bytevector-u16-set!)
        (g$7345$kwCBQ core-prim . bytevector-u16-ref)
        (g$7351$kwCBQ core-prim . bytevector-u16-native-set!)
        (g$7347$kwCBQ core-prim . bytevector-u16-native-ref)
        (g$13342$kwCBQ core-prim . bytevector-sint-set!)
        (g$13341$kwCBQ core-prim . bytevector-sint-ref)
        (g$13340$kwCBQ core-prim . bytevector-s8-set!)
        (g$13339$kwCBQ core-prim . bytevector-s8-ref)
        (g$7366$kwCBQ core-prim . bytevector-s64-set!)
        (g$7362$kwCBQ core-prim . bytevector-s64-ref)
        (g$7368$kwCBQ core-prim . bytevector-s64-native-set!)
        (g$7364$kwCBQ core-prim . bytevector-s64-native-ref)
        (g$7358$kwCBQ core-prim . bytevector-s32-set!)
        (g$7354$kwCBQ core-prim . bytevector-s32-ref)
        (g$7360$kwCBQ core-prim . bytevector-s32-native-set!)
        (g$7356$kwCBQ core-prim . bytevector-s32-native-ref)
        (g$7350$kwCBQ core-prim . bytevector-s16-set!)
        (g$7346$kwCBQ core-prim . bytevector-s16-ref)
        (g$7352$kwCBQ core-prim . bytevector-s16-native-set!)
        (g$7348$kwCBQ core-prim . bytevector-s16-native-ref)
        (g$13338$kwCBQ core-prim . bytevector-length)
        (g$13337$kwCBQ core-prim . bytevector-ieee-single-set!)
        (g$13336$kwCBQ core-prim . bytevector-ieee-single-ref)
        (g$7371$kwCBQ core-prim . bytevector-ieee-single-native-set!)
        (g$7369$kwCBQ core-prim . bytevector-ieee-single-native-ref)
        (g$13335$kwCBQ core-prim . bytevector-ieee-double-set!)
        (g$13334$kwCBQ core-prim . bytevector-ieee-double-ref)
        (g$7372$kwCBQ core-prim . bytevector-ieee-double-native-set!)
        (g$7370$kwCBQ core-prim . bytevector-ieee-double-native-ref)
        (g$13333$kwCBQ core-prim . bytevector-fill!)
        (g$13332$kwCBQ core-prim . bytevector-copy!)
        (g$13331$kwCBQ core-prim . bytevector-copy)
        (g$13330$kwCBQ core-prim . bytevector->uint-list)
        (g$13329$kwCBQ core-prim . bytevector->u8-list)
        (g$13328$kwCBQ core-prim . bytevector->sint-list)
        (g$7968$kwCBQ core-prim . no-nans-violation?)
        (g$7954$kwCBQ core-prim . no-infinities-violation?)
        (g$7967$kwCBQ core-prim . make-no-nans-violation)
        (g$7953$kwCBQ core-prim . make-no-infinities-violation)
        (g$13327$kwCBQ core-prim . real->flonum)
        (g$13326$kwCBQ core-prim . flzero?)
        (g$13325$kwCBQ core-prim . fltruncate)
        (g$13324$kwCBQ core-prim . fltan)
        (g$13323$kwCBQ core-prim . flsqrt)
        (g$13322$kwCBQ core-prim . flsin)
        (g$13321$kwCBQ core-prim . flround)
        (g$13320$kwCBQ core-prim . flpositive?)
        (g$13319$kwCBQ core-prim . flonum?)
        (g$13318$kwCBQ core-prim . flodd?)
        (g$13317$kwCBQ core-prim . flnumerator)
        (g$13316$kwCBQ core-prim . flnegative?)
        (g$13315$kwCBQ core-prim . flnan?)
        (g$13314$kwCBQ core-prim . flmod0)
        (g$13313$kwCBQ core-prim . flmod)
        (g$13312$kwCBQ core-prim . flmin)
        (g$13311$kwCBQ core-prim . flmax)
        (g$13310$kwCBQ core-prim . fllog)
        (g$13309$kwCBQ core-prim . flinteger?)
        (g$13308$kwCBQ core-prim . flinfinite?)
        (g$13307$kwCBQ core-prim . flfloor)
        (g$13306$kwCBQ core-prim . flfinite?)
        (g$13305$kwCBQ core-prim . flexpt)
        (g$13304$kwCBQ core-prim . flexp)
        (g$13303$kwCBQ core-prim . fleven?)
        (g$13302$kwCBQ core-prim . fldiv0-and-mod0)
        (g$13301$kwCBQ core-prim . fldiv0)
        (g$13300$kwCBQ core-prim . fldiv-and-mod)
        (g$13299$kwCBQ core-prim . fldiv)
        (g$13298$kwCBQ core-prim . fldenominator)
        (g$13297$kwCBQ core-prim . flcos)
        (g$13296$kwCBQ core-prim . flceiling)
        (g$13295$kwCBQ core-prim . flatan)
        (g$13294$kwCBQ core-prim . flasin)
        (g$13293$kwCBQ core-prim . flacos)
        (g$13292$kwCBQ core-prim . flabs)
        (g$13291$kwCBQ core-prim . fl>?)
        (g$13290$kwCBQ core-prim . fl>=?)
        (g$13289$kwCBQ core-prim . fl=?)
        (g$13288$kwCBQ core-prim . fl<?)
        (g$13287$kwCBQ core-prim . fl<=?)
        (g$13286$kwCBQ core-prim . fl/)
        (g$13285$kwCBQ core-prim . fl-)
        (g$13284$kwCBQ core-prim . fl+)
        (g$13283$kwCBQ core-prim . fl*)
        (g$13282$kwCBQ core-prim . fixnum->flonum)
        (g$13281$kwCBQ core-prim . fxzero?)
        (g$13280$kwCBQ core-prim . fxxor)
        (g$7900$kwCBQ core-prim . fxrotate-bit-field)
        (g$13279$kwCBQ core-prim . fxreverse-bit-field)
        (g$13278$kwCBQ core-prim . fxpositive?)
        (g$13277$kwCBQ core-prim . fxodd?)
        (g$13276$kwCBQ core-prim . fxnot)
        (g$13275$kwCBQ core-prim . fxnegative?)
        (g$13274$kwCBQ core-prim . fxmod0)
        (g$13273$kwCBQ core-prim . fxmod)
        (g$13272$kwCBQ core-prim . fxmin)
        (g$13271$kwCBQ core-prim . fxmax)
        (g$13270$kwCBQ core-prim . fxlength)
        (g$13269$kwCBQ core-prim . fxior)
        (g$7894$kwCBQ core-prim . fxif)
        (g$13268$kwCBQ core-prim . fxfirst-bit-set)
        (g$13267$kwCBQ core-prim . fxeven?)
        (g$13266$kwCBQ core-prim . fxdiv0-and-mod0)
        (g$13265$kwCBQ core-prim . fxdiv0)
        (g$13264$kwCBQ core-prim . fxdiv-and-mod)
        (g$13263$kwCBQ core-prim . fxdiv)
        (g$7897$kwCBQ core-prim . fxcopy-bit-field)
        (g$7895$kwCBQ core-prim . fxcopy-bit)
        (g$13262$kwCBQ core-prim . fxbit-set?)
        (g$7896$kwCBQ core-prim . fxbit-field)
        (g$13261$kwCBQ core-prim . fxbit-count)
        (g$7899$kwCBQ core-prim . fxarithmetic-shift-right)
        (g$7898$kwCBQ core-prim . fxarithmetic-shift-left)
        (g$13260$kwCBQ core-prim . fxarithmetic-shift)
        (g$13259$kwCBQ core-prim . fxand)
        (g$13258$kwCBQ core-prim . fx>?)
        (g$13257$kwCBQ core-prim . fx>=?)
        (g$13256$kwCBQ core-prim . fx=?)
        (g$13255$kwCBQ core-prim . fx<?)
        (g$13254$kwCBQ core-prim . fx<=?)
        (g$7892$kwCBQ core-prim . fx-/carry)
        (g$13253$kwCBQ core-prim . fx-)
        (g$7893$kwCBQ core-prim . fx+/carry)
        (g$13252$kwCBQ core-prim . fx+)
        (g$7891$kwCBQ core-prim . fx*/carry)
        (g$13251$kwCBQ core-prim . fx*)
        (g$13250$kwCBQ core-prim . greatest-fixnum)
        (g$13249$kwCBQ core-prim . least-fixnum)
        (g$13248$kwCBQ core-prim . fixnum-width)
        (g$13247$kwCBQ core-prim . fixnum?)
        (g$7865$kwCBQ core-prim . bitwise-rotate-bit-field)
        (g$13246$kwCBQ core-prim . bitwise-reverse-bit-field)
        (g$13245$kwCBQ core-prim . bitwise-length)
        (g$7859$kwCBQ core-prim . bitwise-if)
        (g$13244$kwCBQ core-prim . bitwise-first-bit-set)
        (g$7862$kwCBQ core-prim . bitwise-copy-bit-field)
        (g$7860$kwCBQ core-prim . bitwise-copy-bit)
        (g$13243$kwCBQ core-prim . bitwise-bit-set?)
        (g$7861$kwCBQ core-prim . bitwise-bit-field)
        (g$13242$kwCBQ core-prim . bitwise-bit-count)
        (g$13241$kwCBQ core-prim . bitwise-xor)
        (g$13240$kwCBQ core-prim . bitwise-ior)
        (g$13239$kwCBQ core-prim . bitwise-and)
        (g$13238$kwCBQ core-prim . bitwise-not)
        (g$7864$kwCBQ core-prim . bitwise-arithmetic-shift-right)
        (g$7863$kwCBQ core-prim . bitwise-arithmetic-shift-left)
        (g$13237$kwCBQ core-prim . bitwise-arithmetic-shift)
        (g$6761$kwCBQ core-prim . zero?)
        (g$13236$kwCBQ core-prim . vector?)
        (g$13235$kwCBQ core-prim . vector-set!)
        (g$13234$kwCBQ core-prim . vector-ref)
        (g$6855$kwCBQ core-prim . vector-map)
        (g$13233$kwCBQ core-prim . vector-length)
        (g$6856$kwCBQ core-prim . vector-for-each)
        (g$13232$kwCBQ core-prim . vector-fill!)
        (g$13231$kwCBQ core-prim . vector->list)
        (g$13230$kwCBQ core-prim . vector)
        (g$13229$kwCBQ core-prim . values)
        (g$13228$kwCBQ core-prim . truncate)
        (g$13227$kwCBQ core-prim . tan)
        (g$13226$kwCBQ core-prim . symbol?)
        (g$6809$kwCBQ core-prim . symbol=?)
        (g$13225$kwCBQ core-prim . symbol->string)
        (g$13224$kwCBQ core-prim . substring)
        (g$13223$kwCBQ core-prim . string?)
        (g$6806$kwCBQ core-prim . string>?)
        (g$6808$kwCBQ core-prim . string>=?)
        (g$6804$kwCBQ core-prim . string=?)
        (g$6805$kwCBQ core-prim . string<?)
        (g$6807$kwCBQ core-prim . string<=?)
        (g$13222$kwCBQ core-prim . string-ref)
        (g$13221$kwCBQ core-prim . string-length)
        (g$6857$kwCBQ core-prim . string-for-each)
        (g$13220$kwCBQ core-prim . string-copy)
        (g$13219$kwCBQ core-prim . string-append)
        (g$13218$kwCBQ core-prim . string->symbol)
        (g$13217$kwCBQ core-prim . string->number)
        (g$13216$kwCBQ core-prim . string->list)
        (g$13215$kwCBQ core-prim . string)
        (g$13214$kwCBQ core-prim . sqrt)
        (g$13213$kwCBQ core-prim . sin)
        (g$13212$kwCBQ core-prim . round)
        (g$13211$kwCBQ core-prim . reverse)
        (g$13210$kwCBQ core-prim . real?)
        (g$13209$kwCBQ core-prim . real-valued?)
        (g$13208$kwCBQ core-prim . real-part)
        (g$6852$kwCBQ core-prim . rationalize)
        (g$13207$kwCBQ core-prim . rational?)
        (g$13206$kwCBQ core-prim . rational-valued?)
        (g$13205$kwCBQ core-prim . procedure?)
        (g$6759$kwCBQ core-prim . positive?)
        (g$13204$kwCBQ core-prim . pair?)
        (g$6763$kwCBQ core-prim . odd?)
        (g$13203$kwCBQ core-prim . numerator)
        (g$13202$kwCBQ core-prim . number?)
        (g$13201$kwCBQ core-prim . number->string)
        (g$13200$kwCBQ core-prim . null?)
        (g$13199$kwCBQ core-prim . not)
        (g$6760$kwCBQ core-prim . negative?)
        (g$13198$kwCBQ core-prim . nan?)
        (g$6765$kwCBQ core-prim . min)
        (g$6764$kwCBQ core-prim . max)
        (g$6613$kwCBQ core-prim . map)
        (g$13197$kwCBQ core-prim . make-vector)
        (g$13196$kwCBQ core-prim . make-string)
        (g$13195$kwCBQ core-prim . make-rectangular)
        (g$13194$kwCBQ core-prim . make-polar)
        (g$13193$kwCBQ core-prim . magnitude)
        (g$13192$kwCBQ core-prim . log)
        (g$13191$kwCBQ core-prim . list?)
        (g$6593$kwCBQ core-prim . list-tail)
        (g$6594$kwCBQ core-prim . list-ref)
        (g$13190$kwCBQ core-prim . list->vector)
        (g$13189$kwCBQ core-prim . list->string)
        (g$13188$kwCBQ core-prim . list)
        (g$13187$kwCBQ core-prim . length)
        (g$6767$kwCBQ core-prim . lcm)
        (g$13186$kwCBQ core-prim . integer?)
        (g$13185$kwCBQ core-prim . integer-valued?)
        (g$13184$kwCBQ core-prim . integer->char)
        (g$13183$kwCBQ core-prim . infinite?)
        (g$13182$kwCBQ core-prim . inexact?)
        (g$13181$kwCBQ core-prim . inexact)
        (g$13180$kwCBQ core-prim . imag-part)
        (g$6766$kwCBQ core-prim . gcd)
        (g$6614$kwCBQ core-prim . for-each)
        (g$13179$kwCBQ core-prim . floor)
        (g$13178$kwCBQ core-prim . finite?)
        (g$13177$kwCBQ core-prim . expt)
        (g$13176$kwCBQ core-prim . exp)
        (g$13175$kwCBQ core-prim . exact?)
        (g$13174$kwCBQ core-prim . exact-integer-sqrt)
        (g$13173$kwCBQ core-prim . exact)
        (g$6762$kwCBQ core-prim . even?)
        (g$13172$kwCBQ core-prim . error)
        (g$13171$kwCBQ core-prim . eqv?)
        (g$13170$kwCBQ core-prim . equal?)
        (g$13169$kwCBQ core-prim . eq?)
        (g$13168$kwCBQ core-prim . dynamic-wind)
        (g$13167$kwCBQ core-prim . div0-and-mod0)
        (g$13166$kwCBQ core-prim . mod0)
        (g$13165$kwCBQ core-prim . div0)
        (g$13164$kwCBQ core-prim . div-and-mod)
        (g$13163$kwCBQ core-prim . mod)
        (g$13162$kwCBQ core-prim . div)
        (g$13161$kwCBQ core-prim . denominator)
        (g$13160$kwCBQ core-prim . cos)
        (g$13159$kwCBQ core-prim . cons)
        (g$13158$kwCBQ core-prim . complex?)
        (g$13157$kwCBQ core-prim . char?)
        (g$6849$kwCBQ core-prim . char>?)
        (g$6851$kwCBQ core-prim . char>=?)
        (g$6847$kwCBQ core-prim . char=?)
        (g$6848$kwCBQ core-prim . char<?)
        (g$6850$kwCBQ core-prim . char<=?)
        (g$13156$kwCBQ core-prim . char->integer)
        (g$13155$kwCBQ core-prim . ceiling)
        (g$13154$kwCBQ core-prim . call-with-values)
        (g$13153$kwCBQ core-prim . call/cc)
        (g$13152$kwCBQ core-prim . call-with-current-continuation)
        (g$6758$kwCBQ core-prim . cddddr)
        (g$6757$kwCBQ core-prim . cdddar)
        (g$6756$kwCBQ core-prim . cddadr)
        (g$6755$kwCBQ core-prim . cddaar)
        (g$6754$kwCBQ core-prim . cdaddr)
        (g$6753$kwCBQ core-prim . cdadar)
        (g$6752$kwCBQ core-prim . cdaadr)
        (g$6751$kwCBQ core-prim . cdaaar)
        (g$6750$kwCBQ core-prim . cadddr)
        (g$6749$kwCBQ core-prim . caddar)
        (g$6748$kwCBQ core-prim . cadadr)
        (g$6747$kwCBQ core-prim . cadaar)
        (g$6746$kwCBQ core-prim . caaddr)
        (g$6745$kwCBQ core-prim . caadar)
        (g$6744$kwCBQ core-prim . caaadr)
        (g$6743$kwCBQ core-prim . caaaar)
        (g$6742$kwCBQ core-prim . cdddr)
        (g$6741$kwCBQ core-prim . cddar)
        (g$6740$kwCBQ core-prim . cdadr)
        (g$6739$kwCBQ core-prim . cdaar)
        (g$6738$kwCBQ core-prim . caddr)
        (g$6737$kwCBQ core-prim . cadar)
        (g$6736$kwCBQ core-prim . caadr)
        (g$6735$kwCBQ core-prim . caaar)
        (g$6734$kwCBQ core-prim . cddr)
        (g$6733$kwCBQ core-prim . cdar)
        (g$6732$kwCBQ core-prim . cadr)
        (g$6731$kwCBQ core-prim . caar)
        (g$13151$kwCBQ core-prim . cdr)
        (g$13150$kwCBQ core-prim . car)
        (g$13149$kwCBQ core-prim . boolean?)
        (g$6810$kwCBQ core-prim . boolean=?)
        (g$13148$kwCBQ core-prim . atan)
        (g$13147$kwCBQ core-prim . assertion-violation)
        (g$13146$kwCBQ core-prim . asin)
        (g$13145$kwCBQ core-prim . apply)
        (g$13144$kwCBQ core-prim . append)
        (g$13143$kwCBQ core-prim . angle)
        (g$13142$kwCBQ core-prim . acos)
        (g$13141$kwCBQ core-prim . abs)
        (g$13140$kwCBQ core-prim . /)
        (g$13139$kwCBQ core-prim . *)
        (g$13138$kwCBQ core-prim . -)
        (g$13137$kwCBQ core-prim . +)
        (g$13136$kwCBQ core-prim . >=)
        (g$13135$kwCBQ core-prim . >)
        (g$13134$kwCBQ core-prim . =)
        (g$13133$kwCBQ core-prim . <=)
        (g$13132$kwCBQ core-prim . <)
        (g$13131$kwCBQ core-prim . make-record-printer)
        (g$13130$kwCBQ core-prim . eqv-hash)
        (g$13129$kwCBQ core-prim . reverse!)
        (g$13128$kwCBQ core-prim . deserialize-port)
        (g$13127$kwCBQ core-prim . serialize-port)
        (g$8229$kwCBQ core-prim . enum-set?)
        (g$7686$kwCBQ core-prim . make-promise)
        (g$12960$kwCBQ core-prim . load/args)
        (g$8340$kwCBQ core-prim . printf)
        (g$8341$kwCBQ core-prim . fprintf)
        (g$8342$kwCBQ core-prim . format)
        (g$13126$kwCBQ core-prim . procedure-form)
        (g$13125$kwCBQ core-prim . procedure-environment)
        (g$13124$kwCBQ core-prim . procedure-name)
        (g$13123$kwCBQ core-prim . procedure-arity)
        (g$13122$kwCBQ core-prim . gc-collect)
        (g$13121$kwCBQ core-prim . clr-type?)
        (g$13120$kwCBQ core-prim . get-clr-type)
        (g$13119$kwCBQ core-prim . get-command-line)
        (g$13118$kwCBQ core-prim . vector-append)
        (g$13117$kwCBQ core-prim . vector-filter)
        (g$13116$kwCBQ core-prim . vector-reverse!)
        (g$13115$kwCBQ core-prim . vector-contains?)
        (g$13114$kwCBQ core-prim . vector-index-of)
        (g$13113$kwCBQ core-prim . vector-copy)
        (g$13112$kwCBQ core-prim . vector-binary-search)
        (g$13111$kwCBQ core-prim . string-ci-compare)
        (g$13110$kwCBQ core-prim . string-compare)
        (g$13109$kwCBQ core-prim . string-format)
        (g$12957$kwCBQ core-prim . trace-printer)
        (g$13108$kwCBQ core-prim . make-traced-procedure)
        (g$8362$kwCBQ core-prim . make-traced-macro)
        (g$9956$kwCBQ core-prim . assertion-error)
        (g$13107$kwCBQ core-prim . time-it)
        (g$8647$kwCBQ core-prim . make-parameter)
        (g$13106$kwCBQ core-prim . library-locator)
        (g$13105$kwCBQ core-prim . get-library-paths)
        (g$13104$kwCBQ core-prim . open-tcp-input/output-port)
        (g$13103$kwCBQ core-prim . hashtable-for-each)
        (g$13102$kwCBQ core-prim . hashtable-map)
        (g$9934$kwCBQ core-prim . environment-bindings)
        (g$9937$kwCBQ core-prim . environment-symbols)
        (g$9933$kwCBQ core-prim . interaction-environment-symbols)
        (g$13101$kwCBQ core-prim . optimization-level)
        (g$9107$kwCBQ core-prim . library-path)
        (g$9562$kwCBQ core-prim . make-compile-time-value)
        (g$9943$kwCBQ core-prim . expand->core)
        (g$9941$kwCBQ core-prim . expand)
        (g$8421$kwCBQ core-prim . expand-boot-cps)
        (g$8418$kwCBQ core-prim . convert->cps)
        (g$9128$kwCBQ core-prim . installed-libraries)
        (g$9119$kwCBQ core-prim . uninstall-library)
        (g$13100$kwCBQ $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13099$kwCBQ $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13098$kwCBQ $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13097$kwCBQ $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13096$kwCBQ $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13095$kwCBQ
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13094$kwCBQ
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13093$kwCBQ
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13092$kwCBQ
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13091$kwCBQ $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13090$kwCBQ
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13089$kwCBQ $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13088$kwCBQ $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13087$kwCBQ $core-rtd &i/o-rtd &i/o-rcd)
        (g$13086$kwCBQ $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$13085$kwCBQ $core-rtd &undefined-rtd &undefined-rcd)
        (g$13084$kwCBQ $core-rtd &syntax-rtd &syntax-rcd)
        (g$13083$kwCBQ $core-rtd &lexical-rtd &lexical-rcd)
        (g$13082$kwCBQ
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13081$kwCBQ $core-rtd &who-rtd &who-rcd)
        (g$13080$kwCBQ $core-rtd &irritants-rtd &irritants-rcd)
        (g$13079$kwCBQ $core-rtd &assertion-rtd &assertion-rcd)
        (g$13078$kwCBQ $core-rtd &violation-rtd &violation-rcd)
        (g$13077$kwCBQ $core-rtd &error-rtd &error-rcd)
        (g$13076$kwCBQ $core-rtd &serious-rtd &serious-rcd)
        (g$13075$kwCBQ $core-rtd &warning-rtd &warning-rcd)
        (g$13074$kwCBQ $core-rtd &message-rtd &message-rcd)
        (g$13073$kwCBQ $core-rtd &condition-rtd &condition-rcd)
        (g$13072$kwCBQ macro . define-condition-type)
        (g$13071$kwCBQ macro . define-enumeration)
        (g$13070$kwCBQ macro . define-record-type)
        (g$13069$kwCBQ macro . parent-rtd)
        (g$13068$kwCBQ macro . nongenerative)
        (g$13067$kwCBQ macro . opaque)
        (g$13066$kwCBQ macro . sealed)
        (g$13065$kwCBQ macro . protocol)
        (g$13064$kwCBQ macro . parent)
        (g$13063$kwCBQ macro . immutable)
        (g$13062$kwCBQ macro . mutable)
        (g$13061$kwCBQ macro . fields)
        (g$13060$kwCBQ macro . error-handling-mode)
        (g$13059$kwCBQ macro . file-options)
        (g$13058$kwCBQ macro . buffer-mode)
        (g$13057$kwCBQ macro . eol-style)
        (g$13056$kwCBQ macro . guard)
        (g$13055$kwCBQ macro . trace-letrec-syntax)
        (g$13054$kwCBQ macro . trace-let-syntax)
        (g$13053$kwCBQ macro . trace-define-syntax)
        (g$13052$kwCBQ macro . trace-define)
        (g$13051$kwCBQ macro . trace-lambda)
        (g$13050$kwCBQ macro . unsyntax-splicing)
        (g$13049$kwCBQ macro . unsyntax)
        (g$13048$kwCBQ macro . unquote-splicing)
        (g$13047$kwCBQ macro . unquote)
        (g$13046$kwCBQ macro . _)
        (g$13045$kwCBQ macro . else)
        (g$13044$kwCBQ macro . =>)
        (g$13043$kwCBQ macro . ...)
        (g$13042$kwCBQ macro . assert)
        (g$13041$kwCBQ macro . endianness)
        (g$13040$kwCBQ macro . delay)
        (g$13039$kwCBQ macro . time)
        (g$13038$kwCBQ macro . or)
        (g$13037$kwCBQ macro . and)
        (g$13036$kwCBQ macro . do)
        (g$13035$kwCBQ macro . cond)
        (g$13034$kwCBQ macro . let*)
        (g$13033$kwCBQ macro . let)
        (g$13032$kwCBQ macro . identifier-syntax)
        (g$13031$kwCBQ macro . with-syntax)
        (g$13030$kwCBQ macro . quasisyntax)
        (g$13029$kwCBQ macro . quasiquote)
        (g$13028$kwCBQ macro . syntax-rules)
        (g$13027$kwCBQ macro . include-into)
        (g$13026$kwCBQ macro . include)
        (g$13025$kwCBQ macro . define-struct)
        (g$13024$kwCBQ macro . let-values)
        (g$13023$kwCBQ macro . let*-values)
        (g$13022$kwCBQ core-macro . record-constructor-descriptor)
        (g$13021$kwCBQ core-macro . record-type-descriptor)
        (g$13020$kwCBQ core-macro . fluid-let-syntax)
        (g$13019$kwCBQ macro . case)
        (g$13018$kwCBQ macro . parameterize)
        (g$13017$kwCBQ macro . unless)
        (g$13016$kwCBQ macro . when)
        (g$13015$kwCBQ core-macro . if)
        (g$13014$kwCBQ core-macro . letrec*)
        (g$13013$kwCBQ core-macro . letrec)
        (g$13012$kwCBQ core-macro . type-descriptor)
        (g$13011$kwCBQ core-macro . case-lambda)
        (g$13010$kwCBQ core-macro . lambda)
        (g$13009$kwCBQ core-macro . syntax)
        (g$13008$kwCBQ core-macro . syntax-case)
        (g$13007$kwCBQ core-macro . quote)
        (g$13006$kwCBQ core-macro . foreign-call)
        (g$13005$kwCBQ letrec-syntax)
        (g$13004$kwCBQ let-syntax)
        (g$13003$kwCBQ set!)
        (g$13002$kwCBQ export)
        (g$13001$kwCBQ import)
        (g$13000$kwCBQ library)
        (g$12999$kwCBQ begin)
        (g$12998$kwCBQ module)
        (g$12997$kwCBQ define-syntax)
        (g$12996$kwCBQ define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8324$kwCBQ
      'g$13621$kwCBQ
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13504$kwCBQ)
        (eval-core . g$13503$kwCBQ)
        (set-symbol-value! . g$13502$kwCBQ)
        (symbol-value . g$13501$kwCBQ)
        (gensym . g$13498$kwCBQ)
        (void . g$13497$kwCBQ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$12434$kwCBQ
     g$trace-printer$12476$kwCBQ
     (g$make-parameter$7778$kwCBQ write))
   (g$command-line$12435$kwCBQ
     g$command-line$12477$kwCBQ
     (g$make-parameter$7778$kwCBQ (get-command-line)))
   (g$local-library-path$12436$kwCBQ
     g$local-library-path$12478$kwCBQ
     (case-lambda
       ((g$filename$12447$kwCBQ)
        (cons
          (g$get-directory-name$6335$kwCBQ g$filename$12447$kwCBQ)
          (g$library-path$8308$kwCBQ)))))
   (g$load/args$12437$kwCBQ
     g$load/args$12479$kwCBQ
     (case-lambda
       ((g$filename$12448$kwCBQ . g$args$12449$kwCBQ)
        (begin
          (apply
            g$load-r6rs-top-level$12444$kwCBQ
            g$filename$12448$kwCBQ
            'load
            g$args$12449$kwCBQ)
          (void)))))
   (g$load$12438$kwCBQ
     g$load$12480$kwCBQ
     (case-lambda
       ((g$filename$12450$kwCBQ)
        (begin
          (apply
            g$load-r6rs-top-level$12444$kwCBQ
            g$filename$12450$kwCBQ
            'load
            (cdr (g$command-line$12435$kwCBQ)))
          (void)))))
   (g$ironscheme-build$12439$kwCBQ
     g$ironscheme-build$12481$kwCBQ
     (case-lambda (() (g$load$12438$kwCBQ '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$12440$kwCBQ
     g$eval-top-level$12482$kwCBQ
     (case-lambda
       ((g$x$12451$kwCBQ)
        (call/cc
          (case-lambda
            ((g$k$12452$kwCBQ)
             (with-exception-handler
               (case-lambda
                 ((g$e$12453$kwCBQ)
                  (begin
                    (display '"Unhandled exception:
")
                    (display g$e$12453$kwCBQ)
                    (g$newline$7166$kwCBQ)
                    (g$k$12452$kwCBQ))))
               (case-lambda
                 (()
                  (g$eval$12407$kwCBQ
                    g$x$12451$kwCBQ
                    (g$interaction-environment$12432$kwCBQ)))))))))))
   (g$compile-system-libraries$12441$kwCBQ
     g$compile-system-libraries$12483$kwCBQ
     (case-lambda
       (()
        (g$eval-top-level$12440$kwCBQ
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$12442$kwCBQ
     g$compile$12484$kwCBQ
     (case-lambda
       ((g$filename$12454$kwCBQ)
        (g$load-r6rs-top-level$12444$kwCBQ g$filename$12454$kwCBQ 'compile))))
   (g$compile->closure$12443$kwCBQ
     g$compile->closure$12485$kwCBQ
     (case-lambda
       ((g$filename$12455$kwCBQ)
        (g$load-r6rs-top-level$12444$kwCBQ g$filename$12455$kwCBQ 'closure))))
   (g$load-r6rs-top-level$12444$kwCBQ
     g$load-r6rs-top-level$12486$kwCBQ
     (case-lambda
       ((g$filename$12456$kwCBQ g$how$12457$kwCBQ . g$args$12458$kwCBQ)
        ((case-lambda
           ((g$library-path$12461$kwCBQ g$library-path$12462$kwCBQ)
            ((case-lambda
               ((g$swap$12463$kwCBQ)
                (dynamic-wind
                  g$swap$12463$kwCBQ
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$12464$kwCBQ)
                         ((case-lambda
                            ((g$t$12465$kwCBQ)
                             (if (g$memv$5805$kwCBQ g$t$12465$kwCBQ '(closure))
                               (g$pre-compile-r6rs-top-level$12430$kwCBQ
                                 g$x*$12464$kwCBQ)
                               (if (g$memv$5805$kwCBQ g$t$12465$kwCBQ '(load))
                                 ((case-lambda
                                    ((g$command-line$12468$kwCBQ
                                       g$command-line$12469$kwCBQ)
                                     ((case-lambda
                                        ((g$swap$12470$kwCBQ)
                                         (dynamic-wind
                                           g$swap$12470$kwCBQ
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$12429$kwCBQ
                                                 g$x*$12464$kwCBQ))))
                                           g$swap$12470$kwCBQ)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$12471$kwCBQ)
                                             (begin
                                               (g$command-line$12468$kwCBQ
                                                 g$command-line$12469$kwCBQ)
                                               (set! g$command-line$12469$kwCBQ
                                                 g$t$12471$kwCBQ))))
                                          (g$command-line$12468$kwCBQ)))))))
                                  g$command-line$12435$kwCBQ
                                  (cons
                                    g$filename$12456$kwCBQ
                                    (g$map$5812$kwCBQ
                                      (case-lambda
                                        ((g$x$12472$kwCBQ)
                                         (g$format$7336$kwCBQ
                                           '"~a"
                                           g$x$12472$kwCBQ)))
                                      g$args$12458$kwCBQ)))
                                 (if (g$memv$5805$kwCBQ
                                       g$t$12465$kwCBQ
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$12429$kwCBQ
                                       g$x*$12464$kwCBQ)
                                     (g$serialize-all$8312$kwCBQ
                                       serialize-library
                                       g$compile-core-expr$8027$kwCBQ))
                                   (if '#f '#f (void)))))))
                          g$how$12457$kwCBQ)))
                      (g$with-input-from-file$7162$kwCBQ
                        g$filename$12456$kwCBQ
                        (case-lambda
                          (()
                           ((letrec ((g$f$12473$kwCBQ
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$12474$kwCBQ)
                                              (if (eof-object? g$x$12474$kwCBQ)
                                                '()
                                                (cons
                                                  g$x$12474$kwCBQ
                                                  (g$f$12473$kwCBQ)))))
                                           (read-annotated))))))
                              g$f$12473$kwCBQ))))))))
                  g$swap$12463$kwCBQ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$12475$kwCBQ)
                    (begin
                      (g$library-path$12461$kwCBQ g$library-path$12462$kwCBQ)
                      (set! g$library-path$12462$kwCBQ g$t$12475$kwCBQ))))
                 (g$library-path$12461$kwCBQ)))))))
         g$library-path$8308$kwCBQ
         (g$local-library-path$12436$kwCBQ g$filename$12456$kwCBQ)))))
   (g$fo$12445$kwCBQ
     g$fo$12487$kwCBQ
     (g$make-enumeration$7298$kwCBQ '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$8313$kwCBQ
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$12446$kwCBQ)
         (if (g$serious-condition?$6597$kwCBQ g$ex$12446$kwCBQ)
           (raise g$ex$12446$kwCBQ)
           (begin (display g$ex$12446$kwCBQ) (g$newline$7166$kwCBQ))))))
    (set-symbol-value! 'load g$load$12438$kwCBQ)
    (set-symbol-value! 'compile g$compile$12442$kwCBQ)
    (set-symbol-value! 'compile->closure g$compile->closure$12443$kwCBQ)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$12440$kwCBQ)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$12398$kwCBQ)
    (set-symbol-value! 'expanded2core g$expanded->core$8026$kwCBQ)
    (set-symbol-value! 'trace-printer g$trace-printer$12434$kwCBQ)
    (set-symbol-value! 'convert->cps g$convert->cps$7670$kwCBQ)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$7779$kwCBQ
      (g$enum-set-constructor$7301$kwCBQ g$fo$12445$kwCBQ))
    (g$library-path$8308$kwCBQ (get-library-paths))))

