;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5329$XW@M@
     g$caar$5401$XW@M@
     (case-lambda ((g$x$5360$XW@M@) (car (car g$x$5360$XW@M@)))))
   (g$cadr$5330$XW@M@
     g$cadr$5402$XW@M@
     (case-lambda ((g$x$5361$XW@M@) (car (cdr g$x$5361$XW@M@)))))
   (g$cdar$5331$XW@M@
     g$cdar$5403$XW@M@
     (case-lambda ((g$x$5362$XW@M@) (cdr (car g$x$5362$XW@M@)))))
   (g$cddr$5332$XW@M@
     g$cddr$5404$XW@M@
     (case-lambda ((g$x$5363$XW@M@) (cdr (cdr g$x$5363$XW@M@)))))
   (g$caaar$5333$XW@M@
     g$caaar$5405$XW@M@
     (case-lambda
       ((g$x$5364$XW@M@) (g$caar$5329$XW@M@ (car g$x$5364$XW@M@)))))
   (g$caadr$5334$XW@M@
     g$caadr$5406$XW@M@
     (case-lambda
       ((g$x$5365$XW@M@) (g$caar$5329$XW@M@ (cdr g$x$5365$XW@M@)))))
   (g$cadar$5335$XW@M@
     g$cadar$5407$XW@M@
     (case-lambda
       ((g$x$5366$XW@M@) (g$cadr$5330$XW@M@ (car g$x$5366$XW@M@)))))
   (g$caddr$5336$XW@M@
     g$caddr$5408$XW@M@
     (case-lambda
       ((g$x$5367$XW@M@) (g$cadr$5330$XW@M@ (cdr g$x$5367$XW@M@)))))
   (g$cdaar$5337$XW@M@
     g$cdaar$5409$XW@M@
     (case-lambda
       ((g$x$5368$XW@M@) (g$cdar$5331$XW@M@ (car g$x$5368$XW@M@)))))
   (g$cdadr$5338$XW@M@
     g$cdadr$5410$XW@M@
     (case-lambda
       ((g$x$5369$XW@M@) (g$cdar$5331$XW@M@ (cdr g$x$5369$XW@M@)))))
   (g$cddar$5339$XW@M@
     g$cddar$5411$XW@M@
     (case-lambda
       ((g$x$5370$XW@M@) (g$cddr$5332$XW@M@ (car g$x$5370$XW@M@)))))
   (g$cdddr$5340$XW@M@
     g$cdddr$5412$XW@M@
     (case-lambda
       ((g$x$5371$XW@M@) (g$cddr$5332$XW@M@ (cdr g$x$5371$XW@M@)))))
   (g$caaaar$5341$XW@M@
     g$caaaar$5413$XW@M@
     (case-lambda
       ((g$x$5372$XW@M@) (g$caaar$5333$XW@M@ (car g$x$5372$XW@M@)))))
   (g$caaadr$5342$XW@M@
     g$caaadr$5414$XW@M@
     (case-lambda
       ((g$x$5373$XW@M@) (g$caaar$5333$XW@M@ (cdr g$x$5373$XW@M@)))))
   (g$caadar$5343$XW@M@
     g$caadar$5415$XW@M@
     (case-lambda
       ((g$x$5374$XW@M@) (g$caadr$5334$XW@M@ (car g$x$5374$XW@M@)))))
   (g$caaddr$5344$XW@M@
     g$caaddr$5416$XW@M@
     (case-lambda
       ((g$x$5375$XW@M@) (g$caadr$5334$XW@M@ (cdr g$x$5375$XW@M@)))))
   (g$cadaar$5345$XW@M@
     g$cadaar$5417$XW@M@
     (case-lambda
       ((g$x$5376$XW@M@) (g$cadar$5335$XW@M@ (car g$x$5376$XW@M@)))))
   (g$cadadr$5346$XW@M@
     g$cadadr$5418$XW@M@
     (case-lambda
       ((g$x$5377$XW@M@) (g$cadar$5335$XW@M@ (cdr g$x$5377$XW@M@)))))
   (g$caddar$5347$XW@M@
     g$caddar$5419$XW@M@
     (case-lambda
       ((g$x$5378$XW@M@) (g$caddr$5336$XW@M@ (car g$x$5378$XW@M@)))))
   (g$cadddr$5348$XW@M@
     g$cadddr$5420$XW@M@
     (case-lambda
       ((g$x$5379$XW@M@) (g$caddr$5336$XW@M@ (cdr g$x$5379$XW@M@)))))
   (g$cdaaar$5349$XW@M@
     g$cdaaar$5421$XW@M@
     (case-lambda
       ((g$x$5380$XW@M@) (g$cdaar$5337$XW@M@ (car g$x$5380$XW@M@)))))
   (g$cdaadr$5350$XW@M@
     g$cdaadr$5422$XW@M@
     (case-lambda
       ((g$x$5381$XW@M@) (g$cdaar$5337$XW@M@ (cdr g$x$5381$XW@M@)))))
   (g$cdadar$5351$XW@M@
     g$cdadar$5423$XW@M@
     (case-lambda
       ((g$x$5382$XW@M@) (g$cdadr$5338$XW@M@ (car g$x$5382$XW@M@)))))
   (g$cdaddr$5352$XW@M@
     g$cdaddr$5424$XW@M@
     (case-lambda
       ((g$x$5383$XW@M@) (g$cdadr$5338$XW@M@ (cdr g$x$5383$XW@M@)))))
   (g$cddaar$5353$XW@M@
     g$cddaar$5425$XW@M@
     (case-lambda
       ((g$x$5384$XW@M@) (g$cddar$5339$XW@M@ (car g$x$5384$XW@M@)))))
   (g$cddadr$5354$XW@M@
     g$cddadr$5426$XW@M@
     (case-lambda
       ((g$x$5385$XW@M@) (g$cddar$5339$XW@M@ (cdr g$x$5385$XW@M@)))))
   (g$cdddar$5355$XW@M@
     g$cdddar$5427$XW@M@
     (case-lambda
       ((g$x$5386$XW@M@) (g$cdddr$5340$XW@M@ (car g$x$5386$XW@M@)))))
   (g$cddddr$5356$XW@M@
     g$cddddr$5428$XW@M@
     (case-lambda
       ((g$x$5387$XW@M@) (g$cdddr$5340$XW@M@ (cdr g$x$5387$XW@M@)))))
   (g$rationalize$5357$XW@M@
     g$rationalize$5429$XW@M@
     (case-lambda
       ((g$x$5388$XW@M@ g$e$5389$XW@M@)
        (apply / (g$find-ratio$5358$XW@M@ g$x$5388$XW@M@ g$e$5389$XW@M@)))))
   (g$find-ratio$5358$XW@M@
     g$find-ratio$5430$XW@M@
     (case-lambda
       ((g$x$5390$XW@M@ g$e$5391$XW@M@)
        (g$find-ratio-between$5359$XW@M@
          (- g$x$5390$XW@M@ g$e$5391$XW@M@)
          (+ g$x$5390$XW@M@ g$e$5391$XW@M@)))))
   (g$find-ratio-between$5359$XW@M@
     g$find-ratio-between$5431$XW@M@
     (case-lambda
       ((g$x$5392$XW@M@ g$y$5393$XW@M@)
        (letrec* ((g$sr$5394$XW@M@
                    (case-lambda
                      ((g$x$5396$XW@M@ g$y$5397$XW@M@)
                       ((case-lambda
                          ((g$fx$5398$XW@M@ g$fy$5399$XW@M@)
                           (if (>= g$fx$5398$XW@M@ g$x$5396$XW@M@)
                             (list g$fx$5398$XW@M@ '1)
                             (if (= g$fx$5398$XW@M@ g$fy$5399$XW@M@)
                               ((case-lambda
                                  ((g$rat$5400$XW@M@)
                                   (list
                                     (+ (g$cadr$5330$XW@M@ g$rat$5400$XW@M@)
                                        (* g$fx$5398$XW@M@
                                           (car g$rat$5400$XW@M@)))
                                     (car g$rat$5400$XW@M@))))
                                (g$sr$5394$XW@M@
                                  (/ (- g$y$5397$XW@M@ g$fy$5399$XW@M@))
                                  (/ (- g$x$5396$XW@M@ g$fx$5398$XW@M@))))
                               (list (+ '1 g$fx$5398$XW@M@) '1)))))
                        (exact (floor g$x$5396$XW@M@))
                        (exact (floor g$y$5397$XW@M@)))))))
          (if (< g$y$5393$XW@M@ g$x$5392$XW@M@)
            (g$find-ratio-between$5359$XW@M@ g$y$5393$XW@M@ g$x$5392$XW@M@)
            (if (>= g$x$5392$XW@M@ g$y$5393$XW@M@)
              (list g$x$5392$XW@M@ '1)
              (if (positive? g$x$5392$XW@M@)
                (g$sr$5394$XW@M@ g$x$5392$XW@M@ g$y$5393$XW@M@)
                (if (negative? g$y$5393$XW@M@)
                  ((case-lambda
                     ((g$rat$5395$XW@M@)
                      (list
                        (- (car g$rat$5395$XW@M@))
                        (g$cadr$5330$XW@M@ g$rat$5395$XW@M@))))
                   (g$sr$5394$XW@M@ (- g$y$5393$XW@M@) (- g$x$5392$XW@M@)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5627$XW@M@ g$using$5662$XW@M@ (clr-using-internal 'system))
   (g$using$5629$XW@M@
     g$using$5663$XW@M@
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5630$XW@M@
     g$make-eq-hashtable$5664$XW@M@
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5641$XW@M@)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5641$XW@M@)))))
   (g$make-eqv-hashtable$5631$XW@M@
     g$make-eqv-hashtable$5665$XW@M@
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5642$XW@M@) (make-hashtable eqv-hash eqv? g$k$5642$XW@M@))))
   (g$hashtable-size$5632$XW@M@
     g$hashtable-size$5666$XW@M@
     (case-lambda
       ((g$ht$5643$XW@M@)
        (clr-call-internal 'hashtable 'get_count g$ht$5643$XW@M@))))
   (g$hashtable-ref$5633$XW@M@
     g$hashtable-ref$5667$XW@M@
     (case-lambda
       ((g$ht$5644$XW@M@ g$key$5645$XW@M@ g$default$5646$XW@M@)
        (letrec* ((g$r$5647$XW@M@
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5644$XW@M@
                      g$key$5645$XW@M@)))
          (if (not (null? g$r$5647$XW@M@))
            g$r$5647$XW@M@
            g$default$5646$XW@M@)))))
   (g$hashtable-set!$5634$XW@M@
     g$hashtable-set!$5668$XW@M@
     (case-lambda
       ((g$ht$5648$XW@M@ g$key$5649$XW@M@ g$obj$5650$XW@M@)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5648$XW@M@
          g$key$5649$XW@M@
          g$obj$5650$XW@M@))))
   (g$hashtable-delete!$5635$XW@M@
     g$hashtable-delete!$5669$XW@M@
     (case-lambda
       ((g$ht$5651$XW@M@ g$key$5652$XW@M@)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5651$XW@M@
          g$key$5652$XW@M@))))
   (g$hashtable-contains?$5636$XW@M@
     g$hashtable-contains?$5670$XW@M@
     (case-lambda
       ((g$ht$5653$XW@M@ g$key$5654$XW@M@)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5653$XW@M@
          g$key$5654$XW@M@))))
   (g$hashtable-update!$5637$XW@M@
     g$hashtable-update!$5671$XW@M@
     (case-lambda
       ((g$ht$5655$XW@M@
          g$key$5656$XW@M@
          g$proc$5657$XW@M@
          g$default$5658$XW@M@)
        (g$hashtable-set!$5634$XW@M@
          g$ht$5655$XW@M@
          g$key$5656$XW@M@
          (g$proc$5657$XW@M@
            (g$hashtable-ref$5633$XW@M@
              g$ht$5655$XW@M@
              g$key$5656$XW@M@
              g$default$5658$XW@M@))))))
   (g$hashtable-clear!$5638$XW@M@
     g$hashtable-clear!$5672$XW@M@
     (case-lambda
       ((g$ht$5659$XW@M@)
        (clr-call-internal 'hashtable 'clear g$ht$5659$XW@M@))
       ((g$ht$5660$XW@M@ g$k$5661$XW@M@)
        (clr-call-internal 'hashtable 'clear g$ht$5660$XW@M@))))
   (g$clear-usings$5640$XW@M@
     g$clear-usings$5673$XW@M@
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5675$XW@M@ g$using$5741$XW@M@ (clr-using-internal 'system.io))
   (g$file-exists?$5676$XW@M@
     g$file-exists?$5742$XW@M@
     (case-lambda
       ((g$fn$5704$XW@M@)
        (clr-call-internal 'file 'exists '() g$fn$5704$XW@M@))))
   (g$delete-file$5677$XW@M@
     g$delete-file$5743$XW@M@
     (case-lambda
       ((g$fn$5705$XW@M@)
        (clr-call-internal 'file 'delete '() g$fn$5705$XW@M@))))
   (g$file-copy$5678$XW@M@
     g$file-copy$5744$XW@M@
     (case-lambda
       ((g$from$5706$XW@M@ g$to$5707$XW@M@)
        (g$file-copy$5678$XW@M@ g$from$5706$XW@M@ g$to$5707$XW@M@ '#f))
       ((g$from$5708$XW@M@ g$to$5709$XW@M@ g$overwrite?$5710$XW@M@)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5708$XW@M@
          g$to$5709$XW@M@
          g$overwrite?$5710$XW@M@))))
   (g$file-move$5679$XW@M@
     g$file-move$5745$XW@M@
     (case-lambda
       ((g$from$5711$XW@M@ g$to$5712$XW@M@)
        (clr-call-internal 'file 'move '() g$from$5711$XW@M@ g$to$5712$XW@M@))))
   (g$file-create-time$5680$XW@M@
     g$file-create-time$5746$XW@M@
     (case-lambda
       ((g$fn$5713$XW@M@)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5713$XW@M@))))
   (g$file-access-time$5681$XW@M@
     g$file-access-time$5747$XW@M@
     (case-lambda
       ((g$fn$5714$XW@M@)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5714$XW@M@))))
   (g$file-modified-time$5682$XW@M@
     g$file-modified-time$5748$XW@M@
     (case-lambda
       ((g$fn$5715$XW@M@)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5715$XW@M@))))
   (g$directory-exists?$5683$XW@M@
     g$directory-exists?$5749$XW@M@
     (case-lambda
       ((g$fn$5716$XW@M@)
        (clr-call-internal 'directory 'exists '() g$fn$5716$XW@M@))))
   (g$delete-directory$5684$XW@M@
     g$delete-directory$5750$XW@M@
     (case-lambda
       ((g$dir$5717$XW@M@)
        (g$delete-directory$5684$XW@M@ g$dir$5717$XW@M@ '#f))
       ((g$dir$5718$XW@M@ g$recursive?$5719$XW@M@)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5718$XW@M@
          g$recursive?$5719$XW@M@))))
   (g$directory-move$5685$XW@M@
     g$directory-move$5751$XW@M@
     (case-lambda
       ((g$from$5720$XW@M@ g$to$5721$XW@M@)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5720$XW@M@
          g$to$5721$XW@M@))))
   (g$create-directory$5686$XW@M@
     g$create-directory$5752$XW@M@
     (case-lambda
       ((g$name$5722$XW@M@)
        (clr-call-internal 'directory 'createdirectory '() g$name$5722$XW@M@))))
   (g$get-files$5687$XW@M@
     g$get-files$5753$XW@M@
     (case-lambda
       ((g$dir$5723$XW@M@) (g$get-files$5687$XW@M@ g$dir$5723$XW@M@ '"*"))
       ((g$dir$5724$XW@M@ g$pattern$5725$XW@M@)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5724$XW@M@
          g$pattern$5725$XW@M@))))
   (g$get-directories$5688$XW@M@
     g$get-directories$5754$XW@M@
     (case-lambda
       ((g$dir$5726$XW@M@)
        (g$get-directories$5688$XW@M@ g$dir$5726$XW@M@ '"*"))
       ((g$dir$5727$XW@M@ g$pattern$5728$XW@M@)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5727$XW@M@
          g$pattern$5728$XW@M@))))
   (g$change-extension$5689$XW@M@
     g$change-extension$5755$XW@M@
     (case-lambda
       ((g$path$5729$XW@M@ g$extension$5730$XW@M@)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5729$XW@M@
          g$extension$5730$XW@M@))))
   (g$path-combine$5690$XW@M@
     g$path-combine$5756$XW@M@
     (case-lambda
       ((g$path1$5731$XW@M@ g$path2$5732$XW@M@)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5731$XW@M@
          g$path2$5732$XW@M@))))
   (g$get-directory-name$5691$XW@M@
     g$get-directory-name$5757$XW@M@
     (case-lambda
       ((g$path$5733$XW@M@)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5733$XW@M@))))
   (g$get-extension$5692$XW@M@
     g$get-extension$5758$XW@M@
     (case-lambda
       ((g$path$5734$XW@M@)
        (clr-call-internal 'path 'getextension '() g$path$5734$XW@M@))))
   (g$get-filename$5693$XW@M@
     g$get-filename$5759$XW@M@
     (case-lambda
       ((g$path$5735$XW@M@)
        (clr-call-internal 'path 'getfilename '() g$path$5735$XW@M@))))
   (g$get-filename-without-extension$5694$XW@M@
     g$get-filename-without-extension$5760$XW@M@
     (case-lambda
       ((g$path$5736$XW@M@)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5736$XW@M@))))
   (g$get-full-path$5695$XW@M@
     g$get-full-path$5761$XW@M@
     (case-lambda
       ((g$path$5737$XW@M@)
        (clr-call-internal 'path 'getfullpath '() g$path$5737$XW@M@))))
   (g$get-path-root$5696$XW@M@
     g$get-path-root$5762$XW@M@
     (case-lambda
       ((g$path$5738$XW@M@)
        (clr-call-internal 'path 'getpathroot '() g$path$5738$XW@M@))))
   (g$get-random-filename$5697$XW@M@
     g$get-random-filename$5763$XW@M@
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5698$XW@M@
     g$get-temp-filename$5764$XW@M@
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5699$XW@M@
     g$get-temp-path$5765$XW@M@
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5700$XW@M@
     g$path-rooted?$5766$XW@M@
     (case-lambda
       ((g$path$5739$XW@M@)
        (clr-call-internal 'path 'ispathrooted '() g$path$5739$XW@M@))))
   (g$path-has-extension?$5701$XW@M@
     g$path-has-extension?$5767$XW@M@
     (case-lambda
       ((g$path$5740$XW@M@)
        (clr-call-internal 'path 'hasextension '() g$path$5740$XW@M@))))
   (g$clear-usings$5703$XW@M@
     g$clear-usings$5768$XW@M@
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5769$XW@M@
     g$find$5860$XW@M@
     (case-lambda
       ((g$proc$5788$XW@M@ g$l$5789$XW@M@)
        (if (null? g$l$5789$XW@M@)
          '#f
          ((case-lambda
             ((g$e$5790$XW@M@)
              (if (g$proc$5788$XW@M@ g$e$5790$XW@M@)
                g$e$5790$XW@M@
                (g$find$5769$XW@M@ g$proc$5788$XW@M@ (cdr g$l$5789$XW@M@)))))
           (car g$l$5789$XW@M@))))))
   (g$partition$5770$XW@M@
     g$partition$5861$XW@M@
     (case-lambda
       ((g$proc$5791$XW@M@ g$l$5792$XW@M@)
        ((letrec ((g$f$5793$XW@M@
                    (case-lambda
                      ((g$l$5794$XW@M@ g$a$5795$XW@M@ g$b$5796$XW@M@)
                       (if (null? g$l$5794$XW@M@)
                         (values
                           (reverse! g$a$5795$XW@M@)
                           (reverse! g$b$5796$XW@M@))
                         ((case-lambda
                            ((g$e$5797$XW@M@)
                             (if (g$proc$5791$XW@M@ g$e$5797$XW@M@)
                               (g$f$5793$XW@M@
                                 (cdr g$l$5794$XW@M@)
                                 (cons g$e$5797$XW@M@ g$a$5795$XW@M@)
                                 g$b$5796$XW@M@)
                               (g$f$5793$XW@M@
                                 (cdr g$l$5794$XW@M@)
                                 g$a$5795$XW@M@
                                 (cons g$e$5797$XW@M@ g$b$5796$XW@M@)))))
                          (car g$l$5794$XW@M@)))))))
           g$f$5793$XW@M@)
         g$l$5792$XW@M@
         '()
         '()))))
   (g$remp$5771$XW@M@
     g$remp$5862$XW@M@
     (case-lambda
       ((g$proc$5798$XW@M@ g$l$5799$XW@M@)
        ((letrec ((g$f$5800$XW@M@
                    (case-lambda
                      ((g$l$5801$XW@M@ g$a$5802$XW@M@)
                       (if (null? g$l$5801$XW@M@)
                         (reverse! g$a$5802$XW@M@)
                         ((case-lambda
                            ((g$e$5803$XW@M@)
                             (if (g$proc$5798$XW@M@ g$e$5803$XW@M@)
                               (g$f$5800$XW@M@
                                 (cdr g$l$5801$XW@M@)
                                 g$a$5802$XW@M@)
                               (g$f$5800$XW@M@
                                 (cdr g$l$5801$XW@M@)
                                 (cons g$e$5803$XW@M@ g$a$5802$XW@M@)))))
                          (car g$l$5801$XW@M@)))))))
           g$f$5800$XW@M@)
         g$l$5799$XW@M@
         '()))))
   (g$filter$5772$XW@M@
     g$filter$5863$XW@M@
     (case-lambda
       ((g$proc$5804$XW@M@ g$l$5805$XW@M@)
        ((letrec ((g$f$5806$XW@M@
                    (case-lambda
                      ((g$l$5807$XW@M@ g$a$5808$XW@M@)
                       (if (null? g$l$5807$XW@M@)
                         (reverse! g$a$5808$XW@M@)
                         ((case-lambda
                            ((g$e$5809$XW@M@)
                             (if (g$proc$5804$XW@M@ g$e$5809$XW@M@)
                               (g$f$5806$XW@M@
                                 (cdr g$l$5807$XW@M@)
                                 (cons g$e$5809$XW@M@ g$a$5808$XW@M@))
                               (g$f$5806$XW@M@
                                 (cdr g$l$5807$XW@M@)
                                 g$a$5808$XW@M@))))
                          (car g$l$5807$XW@M@)))))))
           g$f$5806$XW@M@)
         g$l$5805$XW@M@
         '()))))
   (g$assv$5773$XW@M@
     g$assv$5864$XW@M@
     (case-lambda
       ((g$obj$5810$XW@M@ g$lst$5811$XW@M@)
        (if (null? g$lst$5811$XW@M@)
          '#f
          ((case-lambda
             ((g$c$5812$XW@M@)
              (if (eqv? g$obj$5810$XW@M@ (car g$c$5812$XW@M@))
                g$c$5812$XW@M@
                (g$assv$5773$XW@M@ g$obj$5810$XW@M@ (cdr g$lst$5811$XW@M@)))))
           (car g$lst$5811$XW@M@))))))
   (g$assoc$5774$XW@M@
     g$assoc$5865$XW@M@
     (case-lambda
       ((g$obj$5813$XW@M@ g$lst$5814$XW@M@)
        (if (null? g$lst$5814$XW@M@)
          '#f
          ((case-lambda
             ((g$c$5815$XW@M@)
              (if (equal? g$obj$5813$XW@M@ (car g$c$5815$XW@M@))
                g$c$5815$XW@M@
                (g$assoc$5774$XW@M@ g$obj$5813$XW@M@ (cdr g$lst$5814$XW@M@)))))
           (car g$lst$5814$XW@M@))))))
   (g$assp$5775$XW@M@
     g$assp$5866$XW@M@
     (case-lambda
       ((g$p?$5816$XW@M@ g$lst$5817$XW@M@)
        (if (null? g$lst$5817$XW@M@)
          '#f
          ((case-lambda
             ((g$c$5818$XW@M@)
              (if (g$p?$5816$XW@M@ (car g$c$5818$XW@M@))
                g$c$5818$XW@M@
                (g$assp$5775$XW@M@ g$p?$5816$XW@M@ (cdr g$lst$5817$XW@M@)))))
           (car g$lst$5817$XW@M@))))))
   (g$member$5776$XW@M@
     g$member$5867$XW@M@
     (case-lambda
       ((g$obj$5819$XW@M@ g$lst$5820$XW@M@)
        (if (null? g$lst$5820$XW@M@)
          '#f
          (if (equal? g$obj$5819$XW@M@ (car g$lst$5820$XW@M@))
            g$lst$5820$XW@M@
            (g$member$5776$XW@M@ g$obj$5819$XW@M@ (cdr g$lst$5820$XW@M@)))))))
   (g$memp$5777$XW@M@
     g$memp$5868$XW@M@
     (case-lambda
       ((g$p?$5821$XW@M@ g$lst$5822$XW@M@)
        (if (null? g$lst$5822$XW@M@)
          '#f
          (if (g$p?$5821$XW@M@ (car g$lst$5822$XW@M@))
            g$lst$5822$XW@M@
            (g$memp$5777$XW@M@ g$p?$5821$XW@M@ (cdr g$lst$5822$XW@M@)))))))
   (g$all-empty?$5778$XW@M@
     g$all-empty?$5869$XW@M@
     (case-lambda
       ((g$ls$5823$XW@M@)
        ((case-lambda
           ((g$t$5824$XW@M@)
            (if g$t$5824$XW@M@
              g$t$5824$XW@M@
              (begin
                '#f
                (if (null? (car g$ls$5823$XW@M@))
                  (begin '#f (g$all-empty?$5778$XW@M@ (cdr g$ls$5823$XW@M@)))
                  '#f)))))
         (null? g$ls$5823$XW@M@)))))
   (g$split$5779$XW@M@
     g$split$5870$XW@M@
     (case-lambda
       ((g$ls$5825$XW@M@)
        (if (null? g$ls$5825$XW@M@)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5779$XW@M@ (cdr g$ls$5825$XW@M@))))
            (case-lambda
              ((g$cars$5826$XW@M@ g$cdrs$5827$XW@M@)
               ((case-lambda
                  ((g$a$5828$XW@M@)
                   (values
                     (cons (car g$a$5828$XW@M@) g$cars$5826$XW@M@)
                     (cons (cdr g$a$5828$XW@M@) g$cdrs$5827$XW@M@))))
                (car g$ls$5825$XW@M@)))))))))
   (g$for-all$5780$XW@M@
     g$for-all$5871$XW@M@
     (case-lambda
       ((g$f$5829$XW@M@ . g$args$5830$XW@M@)
        (if (g$all-empty?$5778$XW@M@ g$args$5830$XW@M@)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5779$XW@M@ g$args$5830$XW@M@)))
            (case-lambda
              ((g$cars$5831$XW@M@ g$cdrs$5832$XW@M@)
               (if (apply g$f$5829$XW@M@ g$cars$5831$XW@M@)
                 (begin
                   '#f
                   (apply
                     g$for-all$5780$XW@M@
                     g$f$5829$XW@M@
                     g$cdrs$5832$XW@M@))
                 '#f))))))))
   (g$exists$5781$XW@M@
     g$exists$5872$XW@M@
     (case-lambda
       ((g$f$5833$XW@M@ . g$args$5834$XW@M@)
        (if (g$all-empty?$5778$XW@M@ g$args$5834$XW@M@)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5779$XW@M@ g$args$5834$XW@M@)))
            (case-lambda
              ((g$cars$5835$XW@M@ g$cdrs$5836$XW@M@)
               ((case-lambda
                  ((g$t$5837$XW@M@)
                   (if g$t$5837$XW@M@
                     g$t$5837$XW@M@
                     (begin
                       '#f
                       (apply
                         g$exists$5781$XW@M@
                         g$f$5833$XW@M@
                         g$cdrs$5836$XW@M@)))))
                (apply g$f$5833$XW@M@ g$cars$5835$XW@M@)))))))))
   (g$cons*$5782$XW@M@
     g$cons*$5873$XW@M@
     (case-lambda
       ((g$a$5838$XW@M@ . g$rest$5839$XW@M@)
        ((letrec ((g$f$5840$XW@M@
                    (case-lambda
                      ((g$a$5841$XW@M@ g$rest$5842$XW@M@)
                       (if (null? g$rest$5842$XW@M@)
                         g$a$5841$XW@M@
                         (cons
                           g$a$5841$XW@M@
                           (g$f$5840$XW@M@
                             (car g$rest$5842$XW@M@)
                             (cdr g$rest$5842$XW@M@))))))))
           g$f$5840$XW@M@)
         g$a$5838$XW@M@
         g$rest$5839$XW@M@))))
   (g$fold-left$5783$XW@M@
     g$fold-left$5874$XW@M@
     (case-lambda
       ((g$combine$5843$XW@M@
          g$nil$5844$XW@M@
          g$list1$5845$XW@M@
          .
          g$lists$5846$XW@M@)
        (if (null? g$list1$5845$XW@M@)
          g$nil$5844$XW@M@
          (apply
            g$fold-left$5783$XW@M@
            (g$cons*$5782$XW@M@
              g$combine$5843$XW@M@
              (apply
                g$combine$5843$XW@M@
                (g$cons*$5782$XW@M@
                  g$nil$5844$XW@M@
                  (car g$list1$5845$XW@M@)
                  (map car g$lists$5846$XW@M@)))
              (cdr g$list1$5845$XW@M@)
              (map cdr g$lists$5846$XW@M@)))))))
   (g$fold-right$5784$XW@M@
     g$fold-right$5875$XW@M@
     (case-lambda
       ((g$combine$5847$XW@M@
          g$nil$5848$XW@M@
          g$list1$5849$XW@M@
          .
          g$lists$5850$XW@M@)
        (if (null? g$list1$5849$XW@M@)
          g$nil$5848$XW@M@
          (apply
            g$combine$5847$XW@M@
            (append
              (list (car g$list1$5849$XW@M@))
              (map car g$lists$5850$XW@M@)
              (list
                (apply
                  g$fold-right$5784$XW@M@
                  (g$cons*$5782$XW@M@
                    g$combine$5847$XW@M@
                    g$nil$5848$XW@M@
                    (cdr g$list1$5849$XW@M@)
                    (map cdr g$lists$5850$XW@M@))))))))))
   (g$remove$5785$XW@M@
     g$remove$5876$XW@M@
     (case-lambda
       ((g$obj$5851$XW@M@ g$list$5852$XW@M@)
        (g$remp$5771$XW@M@
          (case-lambda
            ((g$x$5853$XW@M@) (equal? g$obj$5851$XW@M@ g$x$5853$XW@M@)))
          g$list$5852$XW@M@))))
   (g$remv$5786$XW@M@
     g$remv$5877$XW@M@
     (case-lambda
       ((g$obj$5854$XW@M@ g$list$5855$XW@M@)
        (g$remp$5771$XW@M@
          (case-lambda
            ((g$x$5856$XW@M@) (eqv? g$obj$5854$XW@M@ g$x$5856$XW@M@)))
          g$list$5855$XW@M@))))
   (g$remq$5787$XW@M@
     g$remq$5878$XW@M@
     (case-lambda
       ((g$obj$5857$XW@M@ g$list$5858$XW@M@)
        (g$remp$5771$XW@M@
          (case-lambda ((g$x$5859$XW@M@) (eq? g$obj$5857$XW@M@ g$x$5859$XW@M@)))
          g$list$5858$XW@M@)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5879$XW@M@
     g$native-endianness$5990$XW@M@
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5880$XW@M@
     g$bytevector-u16-ref$5991$XW@M@
     (case-lambda
       ((g$bytevector$5908$XW@M@ g$k$5909$XW@M@ g$endianness$5910$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5908$XW@M@
          g$k$5909$XW@M@
          g$endianness$5910$XW@M@
          '2))))
   (g$bytevector-s16-ref$5881$XW@M@
     g$bytevector-s16-ref$5992$XW@M@
     (case-lambda
       ((g$bytevector$5911$XW@M@ g$k$5912$XW@M@ g$endianness$5913$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5911$XW@M@
          g$k$5912$XW@M@
          g$endianness$5913$XW@M@
          '2))))
   (g$bytevector-u16-native-ref$5882$XW@M@
     g$bytevector-u16-native-ref$5993$XW@M@
     (case-lambda
       ((g$bytevector$5914$XW@M@ g$k$5915$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5914$XW@M@
          g$k$5915$XW@M@
          (g$native-endianness$5879$XW@M@)
          '2))))
   (g$bytevector-s16-native-ref$5883$XW@M@
     g$bytevector-s16-native-ref$5994$XW@M@
     (case-lambda
       ((g$bytevector$5916$XW@M@ g$k$5917$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5916$XW@M@
          g$k$5917$XW@M@
          (g$native-endianness$5879$XW@M@)
          '2))))
   (g$bytevector-u16-set!$5884$XW@M@
     g$bytevector-u16-set!$5995$XW@M@
     (case-lambda
       ((g$bytevector$5918$XW@M@
          g$k$5919$XW@M@
          g$n$5920$XW@M@
          g$endianness$5921$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5918$XW@M@
          g$k$5919$XW@M@
          g$endianness$5921$XW@M@
          '2))))
   (g$bytevector-s16-set!$5885$XW@M@
     g$bytevector-s16-set!$5996$XW@M@
     (case-lambda
       ((g$bytevector$5922$XW@M@
          g$k$5923$XW@M@
          g$n$5924$XW@M@
          g$endianness$5925$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5922$XW@M@
          g$k$5923$XW@M@
          g$endianness$5925$XW@M@
          '2))))
   (g$bytevector-u16-native-set!$5886$XW@M@
     g$bytevector-u16-native-set!$5997$XW@M@
     (case-lambda
       ((g$bytevector$5926$XW@M@ g$k$5927$XW@M@ g$n$5928$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5926$XW@M@
          g$k$5927$XW@M@
          (g$native-endianness$5879$XW@M@)
          '2))))
   (g$bytevector-s16-native-set!$5887$XW@M@
     g$bytevector-s16-native-set!$5998$XW@M@
     (case-lambda
       ((g$bytevector$5929$XW@M@ g$k$5930$XW@M@ g$n$5931$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5929$XW@M@
          g$k$5930$XW@M@
          (g$native-endianness$5879$XW@M@)
          '2))))
   (g$bytevector-u32-ref$5888$XW@M@
     g$bytevector-u32-ref$5999$XW@M@
     (case-lambda
       ((g$bytevector$5932$XW@M@ g$k$5933$XW@M@ g$endianness$5934$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5932$XW@M@
          g$k$5933$XW@M@
          g$endianness$5934$XW@M@
          '4))))
   (g$bytevector-s32-ref$5889$XW@M@
     g$bytevector-s32-ref$6000$XW@M@
     (case-lambda
       ((g$bytevector$5935$XW@M@ g$k$5936$XW@M@ g$endianness$5937$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5935$XW@M@
          g$k$5936$XW@M@
          g$endianness$5937$XW@M@
          '4))))
   (g$bytevector-u32-native-ref$5890$XW@M@
     g$bytevector-u32-native-ref$6001$XW@M@
     (case-lambda
       ((g$bytevector$5938$XW@M@ g$k$5939$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5938$XW@M@
          g$k$5939$XW@M@
          (g$native-endianness$5879$XW@M@)
          '4))))
   (g$bytevector-s32-native-ref$5891$XW@M@
     g$bytevector-s32-native-ref$6002$XW@M@
     (case-lambda
       ((g$bytevector$5940$XW@M@ g$k$5941$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5940$XW@M@
          g$k$5941$XW@M@
          (g$native-endianness$5879$XW@M@)
          '4))))
   (g$bytevector-u32-set!$5892$XW@M@
     g$bytevector-u32-set!$6003$XW@M@
     (case-lambda
       ((g$bytevector$5942$XW@M@
          g$k$5943$XW@M@
          g$n$5944$XW@M@
          g$endianness$5945$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5942$XW@M@
          g$k$5943$XW@M@
          g$endianness$5945$XW@M@
          '4))))
   (g$bytevector-s32-set!$5893$XW@M@
     g$bytevector-s32-set!$6004$XW@M@
     (case-lambda
       ((g$bytevector$5946$XW@M@
          g$k$5947$XW@M@
          g$n$5948$XW@M@
          g$endianness$5949$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5946$XW@M@
          g$k$5947$XW@M@
          g$endianness$5949$XW@M@
          '4))))
   (g$bytevector-u32-native-set!$5894$XW@M@
     g$bytevector-u32-native-set!$6005$XW@M@
     (case-lambda
       ((g$bytevector$5950$XW@M@ g$k$5951$XW@M@ g$n$5952$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5950$XW@M@
          g$k$5951$XW@M@
          (g$native-endianness$5879$XW@M@)
          '4))))
   (g$bytevector-s32-native-set!$5895$XW@M@
     g$bytevector-s32-native-set!$6006$XW@M@
     (case-lambda
       ((g$bytevector$5953$XW@M@ g$k$5954$XW@M@ g$n$5955$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5953$XW@M@
          g$k$5954$XW@M@
          (g$native-endianness$5879$XW@M@)
          '4))))
   (g$bytevector-u64-ref$5896$XW@M@
     g$bytevector-u64-ref$6007$XW@M@
     (case-lambda
       ((g$bytevector$5956$XW@M@ g$k$5957$XW@M@ g$endianness$5958$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5956$XW@M@
          g$k$5957$XW@M@
          g$endianness$5958$XW@M@
          '8))))
   (g$bytevector-s64-ref$5897$XW@M@
     g$bytevector-s64-ref$6008$XW@M@
     (case-lambda
       ((g$bytevector$5959$XW@M@ g$k$5960$XW@M@ g$endianness$5961$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5959$XW@M@
          g$k$5960$XW@M@
          g$endianness$5961$XW@M@
          '8))))
   (g$bytevector-u64-native-ref$5898$XW@M@
     g$bytevector-u64-native-ref$6009$XW@M@
     (case-lambda
       ((g$bytevector$5962$XW@M@ g$k$5963$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5962$XW@M@
          g$k$5963$XW@M@
          (g$native-endianness$5879$XW@M@)
          '8))))
   (g$bytevector-s64-native-ref$5899$XW@M@
     g$bytevector-s64-native-ref$6010$XW@M@
     (case-lambda
       ((g$bytevector$5964$XW@M@ g$k$5965$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5964$XW@M@
          g$k$5965$XW@M@
          (g$native-endianness$5879$XW@M@)
          '8))))
   (g$bytevector-u64-set!$5900$XW@M@
     g$bytevector-u64-set!$6011$XW@M@
     (case-lambda
       ((g$bytevector$5966$XW@M@
          g$k$5967$XW@M@
          g$n$5968$XW@M@
          g$endianness$5969$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5966$XW@M@
          g$k$5967$XW@M@
          g$endianness$5969$XW@M@
          '8))))
   (g$bytevector-s64-set!$5901$XW@M@
     g$bytevector-s64-set!$6012$XW@M@
     (case-lambda
       ((g$bytevector$5970$XW@M@
          g$k$5971$XW@M@
          g$n$5972$XW@M@
          g$endianness$5973$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5970$XW@M@
          g$k$5971$XW@M@
          g$endianness$5973$XW@M@
          '8))))
   (g$bytevector-u64-native-set!$5902$XW@M@
     g$bytevector-u64-native-set!$6013$XW@M@
     (case-lambda
       ((g$bytevector$5974$XW@M@ g$k$5975$XW@M@ g$n$5976$XW@M@)
        (bytevector-uint-ref
          g$bytevector$5974$XW@M@
          g$k$5975$XW@M@
          (g$native-endianness$5879$XW@M@)
          '8))))
   (g$bytevector-s64-native-set!$5903$XW@M@
     g$bytevector-s64-native-set!$6014$XW@M@
     (case-lambda
       ((g$bytevector$5977$XW@M@ g$k$5978$XW@M@ g$n$5979$XW@M@)
        (bytevector-sint-ref
          g$bytevector$5977$XW@M@
          g$k$5978$XW@M@
          (g$native-endianness$5879$XW@M@)
          '8))))
   (g$bytevector-ieee-single-native-ref$5904$XW@M@
     g$bytevector-ieee-single-native-ref$6015$XW@M@
     (case-lambda
       ((g$bytevector$5980$XW@M@ g$k$5981$XW@M@)
        (bytevector-ieee-single-ref
          g$bytevector$5980$XW@M@
          g$k$5981$XW@M@
          (g$native-endianness$5879$XW@M@)))))
   (g$bytevector-ieee-double-native-ref$5905$XW@M@
     g$bytevector-ieee-double-native-ref$6016$XW@M@
     (case-lambda
       ((g$bytevector$5982$XW@M@ g$k$5983$XW@M@)
        (bytevector-ieee-double-ref
          g$bytevector$5982$XW@M@
          g$k$5983$XW@M@
          (g$native-endianness$5879$XW@M@)))))
   (g$bytevector-ieee-single-native-set!$5906$XW@M@
     g$bytevector-ieee-single-native-set!$6017$XW@M@
     (case-lambda
       ((g$bytevector$5984$XW@M@ g$k$5985$XW@M@ g$x$5986$XW@M@)
        (bytevector-ieee-single-set!
          g$bytevector$5984$XW@M@
          g$k$5985$XW@M@
          g$x$5986$XW@M@
          (g$native-endianness$5879$XW@M@)))))
   (g$bytevector-ieee-double-native-set!$5907$XW@M@
     g$bytevector-ieee-double-native-set!$6018$XW@M@
     (case-lambda
       ((g$bytevector$5987$XW@M@ g$k$5988$XW@M@ g$x$5989$XW@M@)
        (bytevector-ieee-double-set!
          g$bytevector$5987$XW@M@
          g$k$5988$XW@M@
          g$x$5989$XW@M@
          (g$native-endianness$5879$XW@M@))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6890$6019$XW@M@
     g$6890$6114$XW@M@
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6893$XW@M@
       '#f
       '#f
       '#()))
   (g$6892$6020$XW@M@ g$6892$6115$XW@M@ '#f)
   (g$6891$6021$XW@M@
     g$6891$6116$XW@M@
     (make-record-constructor-descriptor
       g$6890$6019$XW@M@
       '#f
       g$6892$6020$XW@M@))
   (g$&condition?$6022$XW@M@
     g$&condition?$6117$XW@M@
     (record-predicate g$6890$6019$XW@M@))
   (g$make-&condition$6023$XW@M@
     g$make-&condition$6118$XW@M@
     (record-constructor g$6891$6021$XW@M@))
   (g$&condition-rtd$6024$XW@M@
     g$&condition-rtd$6119$XW@M@
     g$6890$6019$XW@M@)
   (g$&condition-rcd$6025$XW@M@
     g$&condition-rcd$6120$XW@M@
     g$6891$6021$XW@M@)
   (g$6906$6026$XW@M@
     g$6906$6121$XW@M@
     (make-record-type-descriptor
       '&message
       g$6890$6019$XW@M@
       'g$6909$XW@M@
       '#f
       '#f
       '#((immutable message))))
   (g$6908$6027$XW@M@ g$6908$6122$XW@M@ '#f)
   (g$6907$6028$XW@M@
     g$6907$6123$XW@M@
     (make-record-constructor-descriptor
       g$6906$6026$XW@M@
       g$6891$6021$XW@M@
       g$6908$6027$XW@M@))
   (g$6905$6029$XW@M@
     g$6905$6124$XW@M@
     (record-predicate g$6906$6026$XW@M@))
   (g$make-message-condition$6030$XW@M@
     g$make-message-condition$6125$XW@M@
     (record-constructor g$6907$6028$XW@M@))
   (g$6904$6031$XW@M@
     g$6904$6126$XW@M@
     (record-accessor g$6906$6026$XW@M@ '0))
   (g$message-condition?$6032$XW@M@
     g$message-condition?$6127$XW@M@
     (condition-predicate g$6906$6026$XW@M@))
   (g$condition-message$6033$XW@M@
     g$condition-message$6128$XW@M@
     (condition-accessor g$6906$6026$XW@M@ g$6904$6031$XW@M@))
   (g$6922$6034$XW@M@
     g$6922$6129$XW@M@
     (make-record-type-descriptor
       '&warning
       g$6890$6019$XW@M@
       'g$6925$XW@M@
       '#f
       '#f
       '#()))
   (g$6924$6035$XW@M@ g$6924$6130$XW@M@ '#f)
   (g$6923$6036$XW@M@
     g$6923$6131$XW@M@
     (make-record-constructor-descriptor
       g$6922$6034$XW@M@
       g$6891$6021$XW@M@
       g$6924$6035$XW@M@))
   (g$6921$6037$XW@M@
     g$6921$6132$XW@M@
     (record-predicate g$6922$6034$XW@M@))
   (g$make-warning$6038$XW@M@
     g$make-warning$6133$XW@M@
     (record-constructor g$6923$6036$XW@M@))
   (g$warning?$6039$XW@M@
     g$warning?$6134$XW@M@
     (condition-predicate g$6922$6034$XW@M@))
   (g$6936$6040$XW@M@
     g$6936$6135$XW@M@
     (make-record-type-descriptor
       '&serious
       g$6890$6019$XW@M@
       'g$6939$XW@M@
       '#f
       '#f
       '#()))
   (g$6938$6041$XW@M@ g$6938$6136$XW@M@ '#f)
   (g$6937$6042$XW@M@
     g$6937$6137$XW@M@
     (make-record-constructor-descriptor
       g$6936$6040$XW@M@
       g$6891$6021$XW@M@
       g$6938$6041$XW@M@))
   (g$6935$6043$XW@M@
     g$6935$6138$XW@M@
     (record-predicate g$6936$6040$XW@M@))
   (g$make-serious-condition$6044$XW@M@
     g$make-serious-condition$6139$XW@M@
     (record-constructor g$6937$6042$XW@M@))
   (g$serious-condition?$6045$XW@M@
     g$serious-condition?$6140$XW@M@
     (condition-predicate g$6936$6040$XW@M@))
   (g$6950$6046$XW@M@
     g$6950$6141$XW@M@
     (make-record-type-descriptor
       '&error
       g$6936$6040$XW@M@
       'g$6953$XW@M@
       '#f
       '#f
       '#()))
   (g$6952$6047$XW@M@ g$6952$6142$XW@M@ '#f)
   (g$6951$6048$XW@M@
     g$6951$6143$XW@M@
     (make-record-constructor-descriptor
       g$6950$6046$XW@M@
       g$6937$6042$XW@M@
       g$6952$6047$XW@M@))
   (g$6949$6049$XW@M@
     g$6949$6144$XW@M@
     (record-predicate g$6950$6046$XW@M@))
   (g$make-error$6050$XW@M@
     g$make-error$6145$XW@M@
     (record-constructor g$6951$6048$XW@M@))
   (g$error?$6051$XW@M@
     g$error?$6146$XW@M@
     (condition-predicate g$6950$6046$XW@M@))
   (g$6964$6052$XW@M@
     g$6964$6147$XW@M@
     (make-record-type-descriptor
       '&violation
       g$6936$6040$XW@M@
       'g$6967$XW@M@
       '#f
       '#f
       '#()))
   (g$6966$6053$XW@M@ g$6966$6148$XW@M@ '#f)
   (g$6965$6054$XW@M@
     g$6965$6149$XW@M@
     (make-record-constructor-descriptor
       g$6964$6052$XW@M@
       g$6937$6042$XW@M@
       g$6966$6053$XW@M@))
   (g$6963$6055$XW@M@
     g$6963$6150$XW@M@
     (record-predicate g$6964$6052$XW@M@))
   (g$make-violation$6056$XW@M@
     g$make-violation$6151$XW@M@
     (record-constructor g$6965$6054$XW@M@))
   (g$violation?$6057$XW@M@
     g$violation?$6152$XW@M@
     (condition-predicate g$6964$6052$XW@M@))
   (g$6978$6058$XW@M@
     g$6978$6153$XW@M@
     (make-record-type-descriptor
       '&assertion
       g$6964$6052$XW@M@
       'g$6981$XW@M@
       '#f
       '#f
       '#()))
   (g$6980$6059$XW@M@ g$6980$6154$XW@M@ '#f)
   (g$6979$6060$XW@M@
     g$6979$6155$XW@M@
     (make-record-constructor-descriptor
       g$6978$6058$XW@M@
       g$6965$6054$XW@M@
       g$6980$6059$XW@M@))
   (g$6977$6061$XW@M@
     g$6977$6156$XW@M@
     (record-predicate g$6978$6058$XW@M@))
   (g$make-assertion-violation$6062$XW@M@
     g$make-assertion-violation$6157$XW@M@
     (record-constructor g$6979$6060$XW@M@))
   (g$assertion-violation?$6063$XW@M@
     g$assertion-violation?$6158$XW@M@
     (condition-predicate g$6978$6058$XW@M@))
   (g$6993$6064$XW@M@
     g$6993$6159$XW@M@
     (make-record-type-descriptor
       '&irritants
       g$6890$6019$XW@M@
       'g$6996$XW@M@
       '#f
       '#f
       '#((immutable irritants))))
   (g$6995$6065$XW@M@ g$6995$6160$XW@M@ '#f)
   (g$6994$6066$XW@M@
     g$6994$6161$XW@M@
     (make-record-constructor-descriptor
       g$6993$6064$XW@M@
       g$6891$6021$XW@M@
       g$6995$6065$XW@M@))
   (g$6992$6067$XW@M@
     g$6992$6162$XW@M@
     (record-predicate g$6993$6064$XW@M@))
   (g$make-irritants-condition$6068$XW@M@
     g$make-irritants-condition$6163$XW@M@
     (record-constructor g$6994$6066$XW@M@))
   (g$6991$6069$XW@M@
     g$6991$6164$XW@M@
     (record-accessor g$6993$6064$XW@M@ '0))
   (g$irritants-condition?$6070$XW@M@
     g$irritants-condition?$6165$XW@M@
     (condition-predicate g$6993$6064$XW@M@))
   (g$condition-irritants$6071$XW@M@
     g$condition-irritants$6166$XW@M@
     (condition-accessor g$6993$6064$XW@M@ g$6991$6069$XW@M@))
   (g$7010$6072$XW@M@
     g$7010$6167$XW@M@
     (make-record-type-descriptor
       '&who
       g$6890$6019$XW@M@
       'g$7013$XW@M@
       '#f
       '#f
       '#((immutable who))))
   (g$7012$6073$XW@M@ g$7012$6168$XW@M@ '#f)
   (g$7011$6074$XW@M@
     g$7011$6169$XW@M@
     (make-record-constructor-descriptor
       g$7010$6072$XW@M@
       g$6891$6021$XW@M@
       g$7012$6073$XW@M@))
   (g$7009$6075$XW@M@
     g$7009$6170$XW@M@
     (record-predicate g$7010$6072$XW@M@))
   (g$make-who-condition$6076$XW@M@
     g$make-who-condition$6171$XW@M@
     (record-constructor g$7011$6074$XW@M@))
   (g$7008$6077$XW@M@
     g$7008$6172$XW@M@
     (record-accessor g$7010$6072$XW@M@ '0))
   (g$who-condition?$6078$XW@M@
     g$who-condition?$6173$XW@M@
     (condition-predicate g$7010$6072$XW@M@))
   (g$condition-who$6079$XW@M@
     g$condition-who$6174$XW@M@
     (condition-accessor g$7010$6072$XW@M@ g$7008$6077$XW@M@))
   (g$7026$6080$XW@M@
     g$7026$6175$XW@M@
     (make-record-type-descriptor
       '&non-continuable
       g$6964$6052$XW@M@
       'g$7029$XW@M@
       '#f
       '#f
       '#()))
   (g$7028$6081$XW@M@ g$7028$6176$XW@M@ '#f)
   (g$7027$6082$XW@M@
     g$7027$6177$XW@M@
     (make-record-constructor-descriptor
       g$7026$6080$XW@M@
       g$6965$6054$XW@M@
       g$7028$6081$XW@M@))
   (g$7025$6083$XW@M@
     g$7025$6178$XW@M@
     (record-predicate g$7026$6080$XW@M@))
   (g$make-non-continuable-violation$6084$XW@M@
     g$make-non-continuable-violation$6179$XW@M@
     (record-constructor g$7027$6082$XW@M@))
   (g$non-continuable-violation?$6085$XW@M@
     g$non-continuable-violation?$6180$XW@M@
     (condition-predicate g$7026$6080$XW@M@))
   (g$7040$6086$XW@M@
     g$7040$6181$XW@M@
     (make-record-type-descriptor
       '&implementation-restriction
       g$6964$6052$XW@M@
       'g$7043$XW@M@
       '#f
       '#f
       '#()))
   (g$7042$6087$XW@M@ g$7042$6182$XW@M@ '#f)
   (g$7041$6088$XW@M@
     g$7041$6183$XW@M@
     (make-record-constructor-descriptor
       g$7040$6086$XW@M@
       g$6965$6054$XW@M@
       g$7042$6087$XW@M@))
   (g$7039$6089$XW@M@
     g$7039$6184$XW@M@
     (record-predicate g$7040$6086$XW@M@))
   (g$make-implementation-restriction-violation$6090$XW@M@
     g$make-implementation-restriction-violation$6185$XW@M@
     (record-constructor g$7041$6088$XW@M@))
   (g$implementation-restriction-violation?$6091$XW@M@
     g$implementation-restriction-violation?$6186$XW@M@
     (condition-predicate g$7040$6086$XW@M@))
   (g$7054$6092$XW@M@
     g$7054$6187$XW@M@
     (make-record-type-descriptor
       '&lexical
       g$6964$6052$XW@M@
       'g$7057$XW@M@
       '#f
       '#f
       '#()))
   (g$7056$6093$XW@M@ g$7056$6188$XW@M@ '#f)
   (g$7055$6094$XW@M@
     g$7055$6189$XW@M@
     (make-record-constructor-descriptor
       g$7054$6092$XW@M@
       g$6965$6054$XW@M@
       g$7056$6093$XW@M@))
   (g$7053$6095$XW@M@
     g$7053$6190$XW@M@
     (record-predicate g$7054$6092$XW@M@))
   (g$make-lexical-violation$6096$XW@M@
     g$make-lexical-violation$6191$XW@M@
     (record-constructor g$7055$6094$XW@M@))
   (g$lexical-violation?$6097$XW@M@
     g$lexical-violation?$6192$XW@M@
     (condition-predicate g$7054$6092$XW@M@))
   (g$7070$6098$XW@M@
     g$7070$6193$XW@M@
     (make-record-type-descriptor
       '&syntax
       g$6964$6052$XW@M@
       'g$7073$XW@M@
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7072$6099$XW@M@ g$7072$6194$XW@M@ '#f)
   (g$7071$6100$XW@M@
     g$7071$6195$XW@M@
     (make-record-constructor-descriptor
       g$7070$6098$XW@M@
       g$6965$6054$XW@M@
       g$7072$6099$XW@M@))
   (g$7069$6101$XW@M@
     g$7069$6196$XW@M@
     (record-predicate g$7070$6098$XW@M@))
   (g$make-syntax-violation$6102$XW@M@
     g$make-syntax-violation$6197$XW@M@
     (record-constructor g$7071$6100$XW@M@))
   (g$7067$6103$XW@M@
     g$7067$6198$XW@M@
     (record-accessor g$7070$6098$XW@M@ '0))
   (g$7068$6104$XW@M@
     g$7068$6199$XW@M@
     (record-accessor g$7070$6098$XW@M@ '1))
   (g$syntax-violation?$6105$XW@M@
     g$syntax-violation?$6200$XW@M@
     (condition-predicate g$7070$6098$XW@M@))
   (g$syntax-violation-form$6106$XW@M@
     g$syntax-violation-form$6201$XW@M@
     (condition-accessor g$7070$6098$XW@M@ g$7067$6103$XW@M@))
   (g$syntax-violation-subform$6107$XW@M@
     g$syntax-violation-subform$6202$XW@M@
     (condition-accessor g$7070$6098$XW@M@ g$7068$6104$XW@M@))
   (g$7088$6108$XW@M@
     g$7088$6203$XW@M@
     (make-record-type-descriptor
       '&undefined
       g$6964$6052$XW@M@
       'g$7091$XW@M@
       '#f
       '#f
       '#()))
   (g$7090$6109$XW@M@ g$7090$6204$XW@M@ '#f)
   (g$7089$6110$XW@M@
     g$7089$6205$XW@M@
     (make-record-constructor-descriptor
       g$7088$6108$XW@M@
       g$6965$6054$XW@M@
       g$7090$6109$XW@M@))
   (g$7087$6111$XW@M@
     g$7087$6206$XW@M@
     (record-predicate g$7088$6108$XW@M@))
   (g$make-undefined-violation$6112$XW@M@
     g$make-undefined-violation$6207$XW@M@
     (record-constructor g$7089$6110$XW@M@))
   (g$undefined-violation?$6113$XW@M@
     g$undefined-violation?$6208$XW@M@
     (condition-predicate g$7088$6108$XW@M@)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6209$XW@M@
     g$append!$6215$XW@M@
     (case-lambda
       ((g$a$6210$XW@M@ . g$b$6211$XW@M@)
        (if (null? g$a$6210$XW@M@)
          g$b$6211$XW@M@
          (if (null? g$b$6211$XW@M@)
            g$a$6210$XW@M@
            (begin
              ((letrec ((g$f$6212$XW@M@
                          (case-lambda
                            ((g$a$6213$XW@M@)
                             ((case-lambda
                                ((g$n$6214$XW@M@)
                                 (if (null? g$n$6214$XW@M@)
                                   (set-cdr! g$a$6213$XW@M@ g$b$6211$XW@M@)
                                   (g$f$6212$XW@M@ g$n$6214$XW@M@))))
                              (cdr g$a$6213$XW@M@))))))
                 g$f$6212$XW@M@)
               g$a$6210$XW@M@)
              g$a$6210$XW@M@)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6216$XW@M@
     g$sign$6227$XW@M@
     (case-lambda
       ((g$n$6220$XW@M@)
        (if (> g$n$6220$XW@M@ '0) '1 (if (< g$n$6220$XW@M@ '0) '-1 '0)))))
   (g$quotient$6217$XW@M@
     g$quotient$6228$XW@M@
     (case-lambda
       ((g$n1$6221$XW@M@ g$n2$6222$XW@M@)
        (* (g$sign$6216$XW@M@ g$n1$6221$XW@M@)
           (g$sign$6216$XW@M@ g$n2$6222$XW@M@)
           (div (abs g$n1$6221$XW@M@) (abs g$n2$6222$XW@M@))))))
   (g$remainder$6218$XW@M@
     g$remainder$6229$XW@M@
     (case-lambda
       ((g$n1$6223$XW@M@ g$n2$6224$XW@M@)
        (* (g$sign$6216$XW@M@ g$n1$6223$XW@M@)
           (mod (abs g$n1$6223$XW@M@) (abs g$n2$6224$XW@M@))))))
   (g$modulo$6219$XW@M@
     g$modulo$6230$XW@M@
     (case-lambda
       ((g$n1$6225$XW@M@ g$n2$6226$XW@M@)
        (* (g$sign$6216$XW@M@ g$n2$6226$XW@M@)
           (mod (* (g$sign$6216$XW@M@ g$n2$6226$XW@M@) g$n1$6225$XW@M@)
                (abs g$n2$6226$XW@M@)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6231$XW@M@
     g$split$6257$XW@M@
     (case-lambda
       ((g$ls$6234$XW@M@)
        ((letrec ((g$loop$6235$XW@M@
                    (case-lambda
                      ((g$rest$6236$XW@M@ g$left$6237$XW@M@ g$right$6238$XW@M@)
                       (if (null? g$rest$6236$XW@M@)
                         (cons g$left$6237$XW@M@ g$right$6238$XW@M@)
                         (if (null? (cdr g$rest$6236$XW@M@))
                           (cons
                             (cons (car g$rest$6236$XW@M@) g$left$6237$XW@M@)
                             g$right$6238$XW@M@)
                           (g$loop$6235$XW@M@
                             (g$cddr$5404$XW@M@ g$rest$6236$XW@M@)
                             (cons (car g$rest$6236$XW@M@) g$left$6237$XW@M@)
                             (cons
                               (g$cadr$5402$XW@M@ g$rest$6236$XW@M@)
                               g$right$6238$XW@M@))))))))
           g$loop$6235$XW@M@)
         g$ls$6234$XW@M@
         '()
         '()))))
   (g$reverse-it$6232$XW@M@
     g$reverse-it$6258$XW@M@
     (case-lambda
       ((g$head$6239$XW@M@ g$tail$6240$XW@M@)
        (if (null? g$head$6239$XW@M@)
          g$tail$6240$XW@M@
          ((case-lambda
             ((g$hd$6241$XW@M@ g$tl$6242$XW@M@)
              (g$reverse-it$6232$XW@M@
                g$tl$6242$XW@M@
                (cons g$hd$6241$XW@M@ g$tail$6240$XW@M@))))
           (car g$head$6239$XW@M@)
           (cdr g$head$6239$XW@M@))))))
   (g$list-sort$6233$XW@M@
     g$list-sort$6259$XW@M@
     (case-lambda
       ((g$precedes?$6243$XW@M@ g$ls$6244$XW@M@)
        ((case-lambda
           ((g$merge$6245$XW@M@)
            ((case-lambda
               (()
                (if (null? g$ls$6244$XW@M@)
                  '()
                  ((letrec ((g$helper$6246$XW@M@
                              (case-lambda
                                ((g$piece$6247$XW@M@)
                                 (if (null? (cdr g$piece$6247$XW@M@))
                                   g$piece$6247$XW@M@
                                   ((case-lambda
                                      ((g$parts$6248$XW@M@)
                                       (g$merge$6245$XW@M@
                                         (g$helper$6246$XW@M@
                                           (car g$parts$6248$XW@M@))
                                         (g$helper$6246$XW@M@
                                           (cdr g$parts$6248$XW@M@)))))
                                    (g$split$6231$XW@M@
                                      g$piece$6247$XW@M@)))))))
                     g$helper$6246$XW@M@)
                   g$ls$6244$XW@M@)))))))
         (case-lambda
           ((g$list-1$6249$XW@M@ g$list-2$6250$XW@M@)
            ((letrec ((g$loop$6251$XW@M@
                        (case-lambda
                          ((g$source-1$6252$XW@M@
                             g$source-2$6253$XW@M@
                             g$so-far$6254$XW@M@)
                           (if (null? g$source-1$6252$XW@M@)
                             (g$reverse-it$6232$XW@M@
                               g$so-far$6254$XW@M@
                               g$source-2$6253$XW@M@)
                             (if (null? g$source-2$6253$XW@M@)
                               (g$reverse-it$6232$XW@M@
                                 g$so-far$6254$XW@M@
                                 g$source-1$6252$XW@M@)
                               ((case-lambda
                                  ((g$car-1$6255$XW@M@ g$car-2$6256$XW@M@)
                                   (if (g$precedes?$6243$XW@M@
                                         g$car-2$6256$XW@M@
                                         g$car-1$6255$XW@M@)
                                     (g$loop$6251$XW@M@
                                       g$source-1$6252$XW@M@
                                       (cdr g$source-2$6253$XW@M@)
                                       (cons
                                         g$car-2$6256$XW@M@
                                         g$so-far$6254$XW@M@))
                                     (g$loop$6251$XW@M@
                                       g$source-2$6253$XW@M@
                                       (cdr g$source-1$6252$XW@M@)
                                       (cons
                                         g$car-1$6255$XW@M@
                                         g$so-far$6254$XW@M@)))))
                                (car g$source-1$6252$XW@M@)
                                (car g$source-2$6253$XW@M@))))))))
               g$loop$6251$XW@M@)
             g$list-1$6249$XW@M@
             g$list-2$6250$XW@M@
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6297$XW@M@
     g$bitwise-if$6348$XW@M@
     (case-lambda
       ((g$ei1$6305$XW@M@ g$ei2$6306$XW@M@ g$ei3$6307$XW@M@)
        (bitwise-ior
          (bitwise-and g$ei1$6305$XW@M@ g$ei2$6306$XW@M@)
          (bitwise-and (bitwise-not g$ei1$6305$XW@M@) g$ei3$6307$XW@M@)))))
   (g$bitwise-copy-bit$6298$XW@M@
     g$bitwise-copy-bit$6349$XW@M@
     (case-lambda
       ((g$ei1$6308$XW@M@ g$ei2$6309$XW@M@ g$ei3$6310$XW@M@)
        ((case-lambda
           ((g$mask$6311$XW@M@)
            ((case-lambda
               (()
                (g$bitwise-if$6297$XW@M@
                  g$mask$6311$XW@M@
                  (g$bitwise-arithmetic-shift-left$6301$XW@M@
                    g$ei3$6310$XW@M@
                    g$ei2$6309$XW@M@)
                  g$ei1$6308$XW@M@))))))
         (g$bitwise-arithmetic-shift-left$6301$XW@M@ '1 g$ei2$6309$XW@M@)))))
   (g$bitwise-bit-field$6299$XW@M@
     g$bitwise-bit-field$6350$XW@M@
     (case-lambda
       ((g$ei1$6312$XW@M@ g$ei2$6313$XW@M@ g$ei3$6314$XW@M@)
        ((case-lambda
           ((g$mask$6315$XW@M@)
            (g$bitwise-arithmetic-shift-right$6302$XW@M@
              (bitwise-and g$ei1$6312$XW@M@ g$mask$6315$XW@M@)
              g$ei2$6313$XW@M@)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6301$XW@M@
             '-1
             g$ei3$6314$XW@M@))))))
   (g$bitwise-copy-bit-field$6300$XW@M@
     g$bitwise-copy-bit-field$6351$XW@M@
     (case-lambda
       ((g$ei1$6316$XW@M@ g$ei2$6317$XW@M@ g$ei3$6318$XW@M@ g$ei4$6319$XW@M@)
        ((case-lambda
           ((g$to$6320$XW@M@)
            ((case-lambda
               ((g$start$6321$XW@M@)
                ((case-lambda
                   ((g$end$6322$XW@M@)
                    ((case-lambda
                       ((g$from$6323$XW@M@)
                        ((case-lambda
                           ((g$mask1$6324$XW@M@)
                            ((case-lambda
                               ((g$mask2$6325$XW@M@)
                                ((case-lambda
                                   ((g$mask$6326$XW@M@)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6297$XW@M@
                                          g$mask$6326$XW@M@
                                          (g$bitwise-arithmetic-shift-left$6301$XW@M@
                                            g$from$6323$XW@M@
                                            g$start$6321$XW@M@)
                                          g$to$6320$XW@M@))))))
                                 (bitwise-and
                                   g$mask1$6324$XW@M@
                                   g$mask2$6325$XW@M@))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6301$XW@M@
                                 '-1
                                 g$end$6322$XW@M@)))))
                         (g$bitwise-arithmetic-shift-left$6301$XW@M@
                           '-1
                           g$start$6321$XW@M@))))
                     g$ei4$6319$XW@M@)))
                 g$ei3$6318$XW@M@)))
             g$ei2$6317$XW@M@)))
         g$ei1$6316$XW@M@))))
   (g$bitwise-arithmetic-shift-left$6301$XW@M@
     g$bitwise-arithmetic-shift-left$6352$XW@M@
     (case-lambda
       ((g$ei1$6327$XW@M@ g$ei2$6328$XW@M@)
        (bitwise-arithmetic-shift g$ei1$6327$XW@M@ g$ei2$6328$XW@M@))))
   (g$bitwise-arithmetic-shift-right$6302$XW@M@
     g$bitwise-arithmetic-shift-right$6353$XW@M@
     (case-lambda
       ((g$ei1$6329$XW@M@ g$ei2$6330$XW@M@)
        (bitwise-arithmetic-shift g$ei1$6329$XW@M@ (- g$ei2$6330$XW@M@)))))
   (g$bitwise-rotate-bit-field$6303$XW@M@
     g$bitwise-rotate-bit-field$6354$XW@M@
     (case-lambda
       ((g$ei1$6331$XW@M@ g$ei2$6332$XW@M@ g$ei3$6333$XW@M@ g$ei4$6334$XW@M@)
        ((case-lambda
           ((g$n$6335$XW@M@)
            ((case-lambda
               ((g$start$6336$XW@M@)
                ((case-lambda
                   ((g$end$6337$XW@M@)
                    ((case-lambda
                       ((g$count$6338$XW@M@)
                        ((case-lambda
                           ((g$width$6339$XW@M@)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6339$XW@M@)
                                  ((case-lambda
                                     ((g$count$6340$XW@M@)
                                      ((case-lambda
                                         ((g$field0$6341$XW@M@)
                                          ((case-lambda
                                             ((g$field1$6342$XW@M@)
                                              ((case-lambda
                                                 ((g$field2$6343$XW@M@)
                                                  ((case-lambda
                                                     ((g$field$6344$XW@M@)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6300$XW@M@
                                                            g$n$6335$XW@M@
                                                            g$start$6336$XW@M@
                                                            g$end$6337$XW@M@
                                                            g$field$6344$XW@M@))))))
                                                   (bitwise-ior
                                                     g$field1$6342$XW@M@
                                                     g$field2$6343$XW@M@))))
                                               (g$bitwise-arithmetic-shift-right$6302$XW@M@
                                                 g$field0$6341$XW@M@
                                                 (- g$width$6339$XW@M@
                                                    g$count$6340$XW@M@)))))
                                           (g$bitwise-arithmetic-shift-left$6301$XW@M@
                                             g$field0$6341$XW@M@
                                             g$count$6340$XW@M@))))
                                       (g$bitwise-bit-field$6299$XW@M@
                                         g$n$6335$XW@M@
                                         g$start$6336$XW@M@
                                         g$end$6337$XW@M@))))
                                   (mod g$count$6338$XW@M@ g$width$6339$XW@M@))
                                  g$n$6335$XW@M@))))))
                         (- g$end$6337$XW@M@ g$start$6336$XW@M@))))
                     g$ei4$6334$XW@M@)))
                 g$ei3$6333$XW@M@)))
             g$ei2$6332$XW@M@)))
         g$ei1$6331$XW@M@))))
   (g$bitwise-reverse-bit-field$6304$XW@M@
     g$bitwise-reverse-bit-field$6355$XW@M@
     (case-lambda
       ((g$ei1$6345$XW@M@ g$ei2$6346$XW@M@ g$ei3$6347$XW@M@) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6356$XW@M@
     g$fxif$6403$XW@M@
     (case-lambda
       ((g$fx1$6363$XW@M@ g$fx2$6364$XW@M@ g$fx3$6365$XW@M@)
        (fxior
          (fxand g$fx1$6363$XW@M@ g$fx2$6364$XW@M@)
          (fxand (fxnot g$fx1$6363$XW@M@) g$fx3$6365$XW@M@)))))
   (g$fxcopy-bit$6357$XW@M@
     g$fxcopy-bit$6404$XW@M@
     (case-lambda
       ((g$fx1$6366$XW@M@ g$fx2$6367$XW@M@ g$fx3$6368$XW@M@)
        ((case-lambda
           ((g$mask$6369$XW@M@)
            ((case-lambda
               (()
                (g$fxif$6356$XW@M@
                  g$mask$6369$XW@M@
                  (g$fxarithmetic-shift-left$6360$XW@M@
                    g$fx3$6368$XW@M@
                    g$fx2$6367$XW@M@)
                  g$fx1$6366$XW@M@))))))
         (g$fxarithmetic-shift-left$6360$XW@M@ '1 g$fx2$6367$XW@M@)))))
   (g$fxbit-field$6358$XW@M@
     g$fxbit-field$6405$XW@M@
     (case-lambda
       ((g$fx1$6370$XW@M@ g$fx2$6371$XW@M@ g$fx3$6372$XW@M@)
        ((case-lambda
           ((g$mask$6373$XW@M@)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6361$XW@M@
                  (fxand g$fx1$6370$XW@M@ g$mask$6373$XW@M@)
                  g$fx2$6371$XW@M@))))))
         (fxnot (g$fxarithmetic-shift-left$6360$XW@M@ '-1 g$fx3$6372$XW@M@))))))
   (g$fxcopy-bit-field$6359$XW@M@
     g$fxcopy-bit-field$6406$XW@M@
     (case-lambda
       ((g$fx1$6374$XW@M@ g$fx2$6375$XW@M@ g$fx3$6376$XW@M@ g$fx4$6377$XW@M@)
        ((case-lambda
           ((g$to$6378$XW@M@)
            ((case-lambda
               ((g$start$6379$XW@M@)
                ((case-lambda
                   ((g$end$6380$XW@M@)
                    ((case-lambda
                       ((g$from$6381$XW@M@)
                        ((case-lambda
                           ((g$mask1$6382$XW@M@)
                            ((case-lambda
                               ((g$mask2$6383$XW@M@)
                                ((case-lambda
                                   ((g$mask$6384$XW@M@)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6356$XW@M@
                                          g$mask$6384$XW@M@
                                          (g$fxarithmetic-shift-left$6360$XW@M@
                                            g$from$6381$XW@M@
                                            g$start$6379$XW@M@)
                                          g$to$6378$XW@M@))))))
                                 (fxand
                                   g$mask1$6382$XW@M@
                                   g$mask2$6383$XW@M@))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6360$XW@M@
                                 '-1
                                 g$end$6380$XW@M@)))))
                         (g$fxarithmetic-shift-left$6360$XW@M@
                           '-1
                           g$start$6379$XW@M@))))
                     g$fx4$6377$XW@M@)))
                 g$fx3$6376$XW@M@)))
             g$fx2$6375$XW@M@)))
         g$fx1$6374$XW@M@))))
   (g$fxarithmetic-shift-left$6360$XW@M@
     g$fxarithmetic-shift-left$6407$XW@M@
     (case-lambda
       ((g$fx1$6385$XW@M@ g$fx2$6386$XW@M@)
        (fxarithmetic-shift g$fx1$6385$XW@M@ g$fx2$6386$XW@M@))))
   (g$fxarithmetic-shift-right$6361$XW@M@
     g$fxarithmetic-shift-right$6408$XW@M@
     (case-lambda
       ((g$fx1$6387$XW@M@ g$fx2$6388$XW@M@)
        (fxarithmetic-shift g$fx1$6387$XW@M@ (- g$fx2$6388$XW@M@)))))
   (g$fxrotate-bit-field$6362$XW@M@
     g$fxrotate-bit-field$6409$XW@M@
     (case-lambda
       ((g$fx1$6389$XW@M@ g$fx2$6390$XW@M@ g$fx3$6391$XW@M@ g$fx4$6392$XW@M@)
        ((case-lambda
           ((g$n$6393$XW@M@)
            ((case-lambda
               ((g$start$6394$XW@M@)
                ((case-lambda
                   ((g$end$6395$XW@M@)
                    ((case-lambda
                       ((g$count$6396$XW@M@)
                        ((case-lambda
                           ((g$width$6397$XW@M@)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6397$XW@M@)
                                  ((case-lambda
                                     ((g$count$6398$XW@M@)
                                      ((case-lambda
                                         ((g$field0$6399$XW@M@)
                                          ((case-lambda
                                             ((g$field1$6400$XW@M@)
                                              ((case-lambda
                                                 ((g$field2$6401$XW@M@)
                                                  ((case-lambda
                                                     ((g$field$6402$XW@M@)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6359$XW@M@
                                                            g$n$6393$XW@M@
                                                            g$start$6394$XW@M@
                                                            g$end$6395$XW@M@
                                                            g$field$6402$XW@M@))))))
                                                   (fxior
                                                     g$field1$6400$XW@M@
                                                     g$field2$6401$XW@M@))))
                                               (g$fxarithmetic-shift-right$6361$XW@M@
                                                 g$field0$6399$XW@M@
                                                 (- g$width$6397$XW@M@
                                                    g$count$6398$XW@M@)))))
                                           (g$fxarithmetic-shift-left$6360$XW@M@
                                             g$field0$6399$XW@M@
                                             g$count$6398$XW@M@))))
                                       (g$fxbit-field$6358$XW@M@
                                         g$n$6393$XW@M@
                                         g$start$6394$XW@M@
                                         g$end$6395$XW@M@))))
                                   (mod g$count$6396$XW@M@ g$width$6397$XW@M@))
                                  g$n$6393$XW@M@))))))
                         (- g$end$6395$XW@M@ g$start$6394$XW@M@))))
                     g$fx4$6392$XW@M@)))
                 g$fx3$6391$XW@M@)))
             g$fx2$6390$XW@M@)))
         g$fx1$6389$XW@M@)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7305$6410$XW@M@
     g$7305$6422$XW@M@
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7308$XW@M@
       '#f
       '#f
       '#()))
   (g$7307$6411$XW@M@ g$7307$6423$XW@M@ '#f)
   (g$7306$6412$XW@M@
     g$7306$6424$XW@M@
     (make-record-constructor-descriptor
       g$7305$6410$XW@M@
       &implementation-restriction-rcd
       g$7307$6411$XW@M@))
   (g$7304$6413$XW@M@
     g$7304$6425$XW@M@
     (record-predicate g$7305$6410$XW@M@))
   (g$make-no-infinities-violation$6414$XW@M@
     g$make-no-infinities-violation$6426$XW@M@
     (record-constructor g$7306$6412$XW@M@))
   (g$no-infinities-violation?$6415$XW@M@
     g$no-infinities-violation?$6427$XW@M@
     (condition-predicate g$7305$6410$XW@M@))
   (g$7319$6416$XW@M@
     g$7319$6428$XW@M@
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7322$XW@M@
       '#f
       '#f
       '#()))
   (g$7321$6417$XW@M@ g$7321$6429$XW@M@ '#f)
   (g$7320$6418$XW@M@
     g$7320$6430$XW@M@
     (make-record-constructor-descriptor
       g$7319$6416$XW@M@
       &implementation-restriction-rcd
       g$7321$6417$XW@M@))
   (g$7318$6419$XW@M@
     g$7318$6431$XW@M@
     (record-predicate g$7319$6416$XW@M@))
   (g$make-no-nans-violation$6420$XW@M@
     g$make-no-nans-violation$6432$XW@M@
     (record-constructor g$7320$6418$XW@M@))
   (g$no-nans-violation?$6421$XW@M@
     g$no-nans-violation?$6433$XW@M@
     (condition-predicate g$7319$6416$XW@M@)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7334$6434$XW@M@
     g$7334$6514$XW@M@
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7337$XW@M@
       '#f
       '#f
       '#()))
   (g$7336$6435$XW@M@ g$7336$6515$XW@M@ '#f)
   (g$7335$6436$XW@M@
     g$7335$6516$XW@M@
     (make-record-constructor-descriptor
       g$7334$6434$XW@M@
       &error-rcd
       g$7336$6435$XW@M@))
   (g$7333$6437$XW@M@
     g$7333$6517$XW@M@
     (record-predicate g$7334$6434$XW@M@))
   (g$make-i/o-error$6438$XW@M@
     g$make-i/o-error$6518$XW@M@
     (record-constructor g$7335$6436$XW@M@))
   (g$i/o-error?$6439$XW@M@
     g$i/o-error?$6519$XW@M@
     (condition-predicate g$7334$6434$XW@M@))
   (g$7348$6440$XW@M@
     g$7348$6520$XW@M@
     (make-record-type-descriptor
       '&i/o-read
       g$7334$6434$XW@M@
       'g$7351$XW@M@
       '#f
       '#f
       '#()))
   (g$7350$6441$XW@M@ g$7350$6521$XW@M@ '#f)
   (g$7349$6442$XW@M@
     g$7349$6522$XW@M@
     (make-record-constructor-descriptor
       g$7348$6440$XW@M@
       g$7335$6436$XW@M@
       g$7350$6441$XW@M@))
   (g$7347$6443$XW@M@
     g$7347$6523$XW@M@
     (record-predicate g$7348$6440$XW@M@))
   (g$make-i/o-read-error$6444$XW@M@
     g$make-i/o-read-error$6524$XW@M@
     (record-constructor g$7349$6442$XW@M@))
   (g$i/o-read-error?$6445$XW@M@
     g$i/o-read-error?$6525$XW@M@
     (condition-predicate g$7348$6440$XW@M@))
   (g$7362$6446$XW@M@
     g$7362$6526$XW@M@
     (make-record-type-descriptor
       '&i/o-write
       g$7334$6434$XW@M@
       'g$7365$XW@M@
       '#f
       '#f
       '#()))
   (g$7364$6447$XW@M@ g$7364$6527$XW@M@ '#f)
   (g$7363$6448$XW@M@
     g$7363$6528$XW@M@
     (make-record-constructor-descriptor
       g$7362$6446$XW@M@
       g$7335$6436$XW@M@
       g$7364$6447$XW@M@))
   (g$7361$6449$XW@M@
     g$7361$6529$XW@M@
     (record-predicate g$7362$6446$XW@M@))
   (g$make-i/o-write-error$6450$XW@M@
     g$make-i/o-write-error$6530$XW@M@
     (record-constructor g$7363$6448$XW@M@))
   (g$i/o-write-error?$6451$XW@M@
     g$i/o-write-error?$6531$XW@M@
     (condition-predicate g$7362$6446$XW@M@))
   (g$7377$6452$XW@M@
     g$7377$6532$XW@M@
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7334$6434$XW@M@
       'g$7380$XW@M@
       '#f
       '#f
       '#((immutable position))))
   (g$7379$6453$XW@M@ g$7379$6533$XW@M@ '#f)
   (g$7378$6454$XW@M@
     g$7378$6534$XW@M@
     (make-record-constructor-descriptor
       g$7377$6452$XW@M@
       g$7335$6436$XW@M@
       g$7379$6453$XW@M@))
   (g$7376$6455$XW@M@
     g$7376$6535$XW@M@
     (record-predicate g$7377$6452$XW@M@))
   (g$make-i/o-invalid-position-error$6456$XW@M@
     g$make-i/o-invalid-position-error$6536$XW@M@
     (record-constructor g$7378$6454$XW@M@))
   (g$7375$6457$XW@M@
     g$7375$6537$XW@M@
     (record-accessor g$7377$6452$XW@M@ '0))
   (g$i/o-invalid-position-error?$6458$XW@M@
     g$i/o-invalid-position-error?$6538$XW@M@
     (condition-predicate g$7377$6452$XW@M@))
   (g$i/o-error-position$6459$XW@M@
     g$i/o-error-position$6539$XW@M@
     (condition-accessor g$7377$6452$XW@M@ g$7375$6457$XW@M@))
   (g$7394$6460$XW@M@
     g$7394$6540$XW@M@
     (make-record-type-descriptor
       '&i/o-filename
       g$7334$6434$XW@M@
       'g$7397$XW@M@
       '#f
       '#f
       '#((immutable filename))))
   (g$7396$6461$XW@M@ g$7396$6541$XW@M@ '#f)
   (g$7395$6462$XW@M@
     g$7395$6542$XW@M@
     (make-record-constructor-descriptor
       g$7394$6460$XW@M@
       g$7335$6436$XW@M@
       g$7396$6461$XW@M@))
   (g$7393$6463$XW@M@
     g$7393$6543$XW@M@
     (record-predicate g$7394$6460$XW@M@))
   (g$make-i/o-filename-error$6464$XW@M@
     g$make-i/o-filename-error$6544$XW@M@
     (record-constructor g$7395$6462$XW@M@))
   (g$7392$6465$XW@M@
     g$7392$6545$XW@M@
     (record-accessor g$7394$6460$XW@M@ '0))
   (g$i/o-filename-error?$6466$XW@M@
     g$i/o-filename-error?$6546$XW@M@
     (condition-predicate g$7394$6460$XW@M@))
   (g$i/o-error-filename$6467$XW@M@
     g$i/o-error-filename$6547$XW@M@
     (condition-accessor g$7394$6460$XW@M@ g$7392$6465$XW@M@))
   (g$7410$6468$XW@M@
     g$7410$6548$XW@M@
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7394$6460$XW@M@
       'g$7413$XW@M@
       '#f
       '#f
       '#()))
   (g$7412$6469$XW@M@ g$7412$6549$XW@M@ '#f)
   (g$7411$6470$XW@M@
     g$7411$6550$XW@M@
     (make-record-constructor-descriptor
       g$7410$6468$XW@M@
       g$7395$6462$XW@M@
       g$7412$6469$XW@M@))
   (g$7409$6471$XW@M@
     g$7409$6551$XW@M@
     (record-predicate g$7410$6468$XW@M@))
   (g$make-i/o-file-protection-error$6472$XW@M@
     g$make-i/o-file-protection-error$6552$XW@M@
     (record-constructor g$7411$6470$XW@M@))
   (g$i/o-file-protection-error?$6473$XW@M@
     g$i/o-file-protection-error?$6553$XW@M@
     (condition-predicate g$7410$6468$XW@M@))
   (g$7424$6474$XW@M@
     g$7424$6554$XW@M@
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7410$6468$XW@M@
       'g$7427$XW@M@
       '#f
       '#f
       '#()))
   (g$7426$6475$XW@M@ g$7426$6555$XW@M@ '#f)
   (g$7425$6476$XW@M@
     g$7425$6556$XW@M@
     (make-record-constructor-descriptor
       g$7424$6474$XW@M@
       g$7411$6470$XW@M@
       g$7426$6475$XW@M@))
   (g$7423$6477$XW@M@
     g$7423$6557$XW@M@
     (record-predicate g$7424$6474$XW@M@))
   (g$make-i/o-file-is-read-only-error$6478$XW@M@
     g$make-i/o-file-is-read-only-error$6558$XW@M@
     (record-constructor g$7425$6476$XW@M@))
   (g$i/o-file-is-read-only-error?$6479$XW@M@
     g$i/o-file-is-read-only-error?$6559$XW@M@
     (condition-predicate g$7424$6474$XW@M@))
   (g$7438$6480$XW@M@
     g$7438$6560$XW@M@
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7394$6460$XW@M@
       'g$7441$XW@M@
       '#f
       '#f
       '#()))
   (g$7440$6481$XW@M@ g$7440$6561$XW@M@ '#f)
   (g$7439$6482$XW@M@
     g$7439$6562$XW@M@
     (make-record-constructor-descriptor
       g$7438$6480$XW@M@
       g$7395$6462$XW@M@
       g$7440$6481$XW@M@))
   (g$7437$6483$XW@M@
     g$7437$6563$XW@M@
     (record-predicate g$7438$6480$XW@M@))
   (g$make-i/o-file-already-exists-error$6484$XW@M@
     g$make-i/o-file-already-exists-error$6564$XW@M@
     (record-constructor g$7439$6482$XW@M@))
   (g$i/o-file-already-exists-error?$6485$XW@M@
     g$i/o-file-already-exists-error?$6565$XW@M@
     (condition-predicate g$7438$6480$XW@M@))
   (g$7452$6486$XW@M@
     g$7452$6566$XW@M@
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7394$6460$XW@M@
       'g$7455$XW@M@
       '#f
       '#f
       '#()))
   (g$7454$6487$XW@M@ g$7454$6567$XW@M@ '#f)
   (g$7453$6488$XW@M@
     g$7453$6568$XW@M@
     (make-record-constructor-descriptor
       g$7452$6486$XW@M@
       g$7395$6462$XW@M@
       g$7454$6487$XW@M@))
   (g$7451$6489$XW@M@
     g$7451$6569$XW@M@
     (record-predicate g$7452$6486$XW@M@))
   (g$make-i/o-file-does-not-exist-error$6490$XW@M@
     g$make-i/o-file-does-not-exist-error$6570$XW@M@
     (record-constructor g$7453$6488$XW@M@))
   (g$i/o-file-does-not-exist-error?$6491$XW@M@
     g$i/o-file-does-not-exist-error?$6571$XW@M@
     (condition-predicate g$7452$6486$XW@M@))
   (g$7467$6492$XW@M@
     g$7467$6572$XW@M@
     (make-record-type-descriptor
       '&i/o-port
       g$7334$6434$XW@M@
       'g$7470$XW@M@
       '#f
       '#f
       '#((immutable port))))
   (g$7469$6493$XW@M@ g$7469$6573$XW@M@ '#f)
   (g$7468$6494$XW@M@
     g$7468$6574$XW@M@
     (make-record-constructor-descriptor
       g$7467$6492$XW@M@
       g$7335$6436$XW@M@
       g$7469$6493$XW@M@))
   (g$7466$6495$XW@M@
     g$7466$6575$XW@M@
     (record-predicate g$7467$6492$XW@M@))
   (g$make-i/o-port-error$6496$XW@M@
     g$make-i/o-port-error$6576$XW@M@
     (record-constructor g$7468$6494$XW@M@))
   (g$7465$6497$XW@M@
     g$7465$6577$XW@M@
     (record-accessor g$7467$6492$XW@M@ '0))
   (g$i/o-port-error?$6498$XW@M@
     g$i/o-port-error?$6578$XW@M@
     (condition-predicate g$7467$6492$XW@M@))
   (g$i/o-error-port$6499$XW@M@
     g$i/o-error-port$6579$XW@M@
     (condition-accessor g$7467$6492$XW@M@ g$7465$6497$XW@M@))
   (g$7483$6500$XW@M@
     g$7483$6580$XW@M@
     (make-record-type-descriptor
       '&i/o-decoding
       g$7467$6492$XW@M@
       'g$7486$XW@M@
       '#f
       '#f
       '#()))
   (g$7485$6501$XW@M@ g$7485$6581$XW@M@ '#f)
   (g$7484$6502$XW@M@
     g$7484$6582$XW@M@
     (make-record-constructor-descriptor
       g$7483$6500$XW@M@
       g$7468$6494$XW@M@
       g$7485$6501$XW@M@))
   (g$7482$6503$XW@M@
     g$7482$6583$XW@M@
     (record-predicate g$7483$6500$XW@M@))
   (g$make-i/o-decoding-error$6504$XW@M@
     g$make-i/o-decoding-error$6584$XW@M@
     (record-constructor g$7484$6502$XW@M@))
   (g$i/o-decoding-error?$6505$XW@M@
     g$i/o-decoding-error?$6585$XW@M@
     (condition-predicate g$7483$6500$XW@M@))
   (g$7498$6506$XW@M@
     g$7498$6586$XW@M@
     (make-record-type-descriptor
       '&i/o-encoding
       g$7467$6492$XW@M@
       'g$7501$XW@M@
       '#f
       '#f
       '#((immutable char))))
   (g$7500$6507$XW@M@ g$7500$6587$XW@M@ '#f)
   (g$7499$6508$XW@M@
     g$7499$6588$XW@M@
     (make-record-constructor-descriptor
       g$7498$6506$XW@M@
       g$7468$6494$XW@M@
       g$7500$6507$XW@M@))
   (g$7497$6509$XW@M@
     g$7497$6589$XW@M@
     (record-predicate g$7498$6506$XW@M@))
   (g$make-i/o-encoding-error$6510$XW@M@
     g$make-i/o-encoding-error$6590$XW@M@
     (record-constructor g$7499$6508$XW@M@))
   (g$7496$6511$XW@M@
     g$7496$6591$XW@M@
     (record-accessor g$7498$6506$XW@M@ '0))
   (g$i/o-encoding-error?$6512$XW@M@
     g$i/o-encoding-error?$6592$XW@M@
     (condition-predicate g$7498$6506$XW@M@))
   (g$i/o-encoding-error-char$6513$XW@M@
     g$i/o-encoding-error-char$6593$XW@M@
     (condition-accessor g$7498$6506$XW@M@ g$7496$6511$XW@M@)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6594$XW@M@
     g$get-output-string$6602$XW@M@
     (case-lambda
       ((g$port$6598$XW@M@)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6598$XW@M@))))
   (g$open-output-string$6595$XW@M@
     g$open-output-string$6603$XW@M@
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6596$XW@M@
     g$open-string-output-port$6604$XW@M@
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6599$XW@M@)
            (values
              g$p$6599$XW@M@
              (case-lambda
                (() (g$get-output-string$6594$XW@M@ g$p$6599$XW@M@))))))
         (g$open-output-string$6595$XW@M@)))))
   (g$port?$6597$XW@M@
     g$port?$6605$XW@M@
     (case-lambda
       ((g$obj$6600$XW@M@)
        ((case-lambda
           ((g$t$6601$XW@M@)
            (if g$t$6601$XW@M@
              g$t$6601$XW@M@
              (begin '#f (binary-port? g$obj$6600$XW@M@)))))
         (textual-port? g$obj$6600$XW@M@))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7527$6606$XW@M@
     g$7527$6711$XW@M@
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7529$6607$XW@M@ g$7529$6712$XW@M@ '#f)
   (g$7528$6608$XW@M@
     g$7528$6713$XW@M@
     (make-record-constructor-descriptor
       g$7527$6606$XW@M@
       '#f
       g$7529$6607$XW@M@))
   (g$enum?$6609$XW@M@
     g$enum?$6714$XW@M@
     (record-predicate g$7527$6606$XW@M@))
   (g$make-enum$6610$XW@M@
     g$make-enum$6715$XW@M@
     (record-constructor g$7528$6608$XW@M@))
   (g$enum-value$6611$XW@M@
     g$enum-value$6716$XW@M@
     (record-accessor g$7527$6606$XW@M@ '0))
   (g$enum-info$6612$XW@M@
     g$enum-info$6717$XW@M@
     (record-accessor g$7527$6606$XW@M@ '1))
   (g$7540$6613$XW@M@
     g$7540$6718$XW@M@
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable symbols) (immutable mapping) (immutable value))))
   (g$7542$6614$XW@M@ g$7542$6719$XW@M@ '#f)
   (g$7541$6615$XW@M@
     g$7541$6720$XW@M@
     (make-record-constructor-descriptor
       g$7540$6613$XW@M@
       '#f
       g$7542$6614$XW@M@))
   (g$enum-universe?$6616$XW@M@
     g$enum-universe?$6721$XW@M@
     (record-predicate g$7540$6613$XW@M@))
   (g$make-enum-universe$6617$XW@M@
     g$make-enum-universe$6722$XW@M@
     (record-constructor g$7541$6615$XW@M@))
   (g$enum-universe-symbols$6618$XW@M@
     g$enum-universe-symbols$6723$XW@M@
     (record-accessor g$7540$6613$XW@M@ '0))
   (g$enum-universe-mapping$6619$XW@M@
     g$enum-universe-mapping$6724$XW@M@
     (record-accessor g$7540$6613$XW@M@ '1))
   (g$enum-universe-value$6620$XW@M@
     g$enum-universe-value$6725$XW@M@
     (record-accessor g$7540$6613$XW@M@ '2))
   (g$enum-type=?$6621$XW@M@
     g$enum-type=?$6726$XW@M@
     (case-lambda
       ((g$enumset1$6641$XW@M@ g$enumset2$6642$XW@M@)
        (eq? (g$enum-info$6612$XW@M@ g$enumset1$6641$XW@M@)
             (g$enum-info$6612$XW@M@ g$enumset2$6642$XW@M@)))))
   (g$get-symbols$6622$XW@M@
     g$get-symbols$6727$XW@M@
     (case-lambda
       ((g$enumset$6643$XW@M@)
        (g$enum-universe-symbols$6618$XW@M@
          (g$enum-info$6612$XW@M@ g$enumset$6643$XW@M@)))))
   (g$get-value$6623$XW@M@
     g$get-value$6728$XW@M@
     (case-lambda
       ((g$enumset$6644$XW@M@ g$s$6645$XW@M@)
        (g$hashtable-ref$5667$XW@M@
          (g$enum-universe-mapping$6619$XW@M@
            (g$enum-info$6612$XW@M@ g$enumset$6644$XW@M@))
          g$s$6645$XW@M@
          '#f))))
   (g$assert-enum$6624$XW@M@
     g$assert-enum$6729$XW@M@
     (case-lambda
       ((g$who$6646$XW@M@ g$enumset$6647$XW@M@)
        (if (g$enum?$6609$XW@M@ g$enumset$6647$XW@M@)
          (void)
          (assertion-violation
            g$who$6646$XW@M@
            '"not an enumeration"
            g$enumset$6647$XW@M@)))))
   (g$distinct$6625$XW@M@
     g$distinct$6730$XW@M@
     (case-lambda
       ((g$symbols$6648$XW@M@)
        ((case-lambda
           ((g$ht$6649$XW@M@)
            ((letrec ((g$f$6650$XW@M@
                        (case-lambda
                          ((g$s$6651$XW@M@ g$a$6652$XW@M@)
                           (if (null? g$s$6651$XW@M@)
                             (reverse! g$a$6652$XW@M@)
                             (if (g$hashtable-contains?$5670$XW@M@
                                   g$ht$6649$XW@M@
                                   (car g$s$6651$XW@M@))
                               (g$f$6650$XW@M@
                                 (cdr g$s$6651$XW@M@)
                                 g$a$6652$XW@M@)
                               (begin
                                 (g$hashtable-set!$5668$XW@M@
                                   g$ht$6649$XW@M@
                                   (car g$s$6651$XW@M@)
                                   '#t)
                                 (g$f$6650$XW@M@
                                   (cdr g$s$6651$XW@M@)
                                   (cons
                                     (car g$s$6651$XW@M@)
                                     g$a$6652$XW@M@)))))))))
               g$f$6650$XW@M@)
             g$symbols$6648$XW@M@
             '())))
         (g$make-eq-hashtable$5664$XW@M@)))))
   (g$make-enumeration$6626$XW@M@
     g$make-enumeration$6731$XW@M@
     (case-lambda
       ((g$symbols$6653$XW@M@)
        (begin
          (if (g$for-all$5871$XW@M@ symbol? g$symbols$6653$XW@M@)
            (void)
            (assertion-violation
              'make-enumeration
              '"not a list of symbols"
              g$symbols$6653$XW@M@))
          ((case-lambda
             ((g$s$6654$XW@M@ g$mask$6655$XW@M@ g$intmap$6656$XW@M@)
              (begin
                (for-each
                  (case-lambda
                    ((g$e$6657$XW@M@)
                     (begin
                       (g$hashtable-set!$5668$XW@M@
                         g$intmap$6656$XW@M@
                         g$e$6657$XW@M@
                         g$mask$6655$XW@M@)
                       (set! g$mask$6655$XW@M@
                         (g$bitwise-arithmetic-shift-left$6352$XW@M@
                           g$mask$6655$XW@M@
                           '1)))))
                  g$s$6654$XW@M@)
                (g$make-enum$6610$XW@M@
                  (- g$mask$6655$XW@M@ '1)
                  (g$make-enum-universe$6617$XW@M@
                    g$s$6654$XW@M@
                    g$intmap$6656$XW@M@
                    (- g$mask$6655$XW@M@ '1))))))
           (g$distinct$6625$XW@M@ g$symbols$6653$XW@M@)
           '1
           (g$make-eq-hashtable$5664$XW@M@))))))
   (g$enum-set-universe$6627$XW@M@
     g$enum-set-universe$6732$XW@M@
     (case-lambda
       ((g$enumset$6658$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-universe g$enumset$6658$XW@M@)
          ((case-lambda
             ((g$ei$6659$XW@M@)
              (g$make-enum$6610$XW@M@
                (g$enum-universe-value$6620$XW@M@ g$ei$6659$XW@M@)
                g$ei$6659$XW@M@)))
           (g$enum-info$6612$XW@M@ g$enumset$6658$XW@M@))))))
   (g$enum-set-indexer$6628$XW@M@
     g$enum-set-indexer$6733$XW@M@
     (case-lambda
       ((g$enumset$6660$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-indexer g$enumset$6660$XW@M@)
          (case-lambda
            ((g$symbol$6661$XW@M@)
             (begin
               (if (symbol? g$symbol$6661$XW@M@)
                 (void)
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6661$XW@M@))
               ((case-lambda
                  ((g$v$6662$XW@M@)
                   (if g$v$6662$XW@M@
                     (- (bitwise-length g$v$6662$XW@M@) '1)
                     '#f)))
                (g$get-value$6623$XW@M@
                  g$enumset$6660$XW@M@
                  g$symbol$6661$XW@M@)))))))))
   (g$enum-set-constructor$6629$XW@M@
     g$enum-set-constructor$6734$XW@M@
     (case-lambda
       ((g$enumset$6663$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-constructor g$enumset$6663$XW@M@)
          (case-lambda
            ((g$symbols$6664$XW@M@)
             (begin
               (if (g$for-all$5871$XW@M@ symbol? g$symbols$6664$XW@M@)
                 (void)
                 (assertion-violation
                   'enum-set-constructor
                   '"not a list of symbols"
                   g$symbols$6664$XW@M@))
               ((letrec ((g$f$6665$XW@M@
                           (case-lambda
                             ((g$v$6666$XW@M@ g$s$6667$XW@M@)
                              (if (null? g$s$6667$XW@M@)
                                (g$make-enum$6610$XW@M@
                                  g$v$6666$XW@M@
                                  (g$enum-info$6612$XW@M@ g$enumset$6663$XW@M@))
                                ((case-lambda
                                   ((g$v*$6668$XW@M@)
                                    (if g$v*$6668$XW@M@
                                      (g$f$6665$XW@M@
                                        (bitwise-ior
                                          g$v$6666$XW@M@
                                          g$v*$6668$XW@M@)
                                        (cdr g$s$6667$XW@M@))
                                      (assertion-violation
                                        'enum-set-constructor
                                        '"not a member of enum-set"
                                        (car g$s$6667$XW@M@)))))
                                 (g$get-value$6623$XW@M@
                                   g$enumset$6663$XW@M@
                                   (car g$s$6667$XW@M@))))))))
                  g$f$6665$XW@M@)
                '0
                g$symbols$6664$XW@M@))))))))
   (g$enum-set->list$6630$XW@M@
     g$enum-set->list$6735$XW@M@
     (case-lambda
       ((g$enumset$6669$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set->list g$enumset$6669$XW@M@)
          ((case-lambda
             ((g$value$6670$XW@M@)
              ((letrec ((g$f$6671$XW@M@
                          (case-lambda
                            ((g$s$6672$XW@M@ g$l$6673$XW@M@)
                             (if (null? g$s$6672$XW@M@)
                               (reverse! g$l$6673$XW@M@)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6623$XW@M@
                                         g$enumset$6669$XW@M@
                                         (car g$s$6672$XW@M@))
                                       g$value$6670$XW@M@))
                                 (g$f$6671$XW@M@
                                   (cdr g$s$6672$XW@M@)
                                   g$l$6673$XW@M@)
                                 (g$f$6671$XW@M@
                                   (cdr g$s$6672$XW@M@)
                                   (cons
                                     (car g$s$6672$XW@M@)
                                     g$l$6673$XW@M@))))))))
                 g$f$6671$XW@M@)
               (g$get-symbols$6622$XW@M@ g$enumset$6669$XW@M@)
               '())))
           (g$enum-value$6611$XW@M@ g$enumset$6669$XW@M@))))))
   (g$enum-set-member?$6631$XW@M@
     g$enum-set-member?$6736$XW@M@
     (case-lambda
       ((g$symbol$6674$XW@M@ g$enumset$6675$XW@M@)
        (begin
          (if (symbol? g$symbol$6674$XW@M@)
            (void)
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6674$XW@M@))
          (g$assert-enum$6624$XW@M@ 'enum-set-member? g$enumset$6675$XW@M@)
          ((case-lambda
             ((g$v$6676$XW@M@)
              (if g$v$6676$XW@M@
                (not (zero?
                       (bitwise-and
                         g$v$6676$XW@M@
                         (g$enum-value$6611$XW@M@ g$enumset$6675$XW@M@))))
                '#f)))
           (g$get-value$6623$XW@M@
             g$enumset$6675$XW@M@
             g$symbol$6674$XW@M@))))))
   (g$enum-set-subset?$6632$XW@M@
     g$enum-set-subset?$6737$XW@M@
     (case-lambda
       ((g$enumset1$6677$XW@M@ g$enumset2$6678$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-subset? g$enumset1$6677$XW@M@)
          (g$assert-enum$6624$XW@M@ 'enum-set-subset? g$enumset2$6678$XW@M@)
          ((case-lambda
             ((g$v1$6679$XW@M@ g$v2$6680$XW@M@)
              (if (g$enum-type=?$6621$XW@M@
                    g$enumset1$6677$XW@M@
                    g$enumset2$6678$XW@M@)
                (= (bitwise-and g$v1$6679$XW@M@ g$v2$6680$XW@M@)
                   g$v1$6679$XW@M@)
                ((letrec ((g$f$6681$XW@M@
                            (case-lambda
                              ((g$s$6682$XW@M@)
                               (if (null? g$s$6682$XW@M@)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6683$XW@M@ g$v2*$6684$XW@M@)
                                     (if g$v2*$6684$XW@M@
                                       ((case-lambda
                                          ((g$has1$6685$XW@M@ g$has2$6686$XW@M@)
                                           (if (if g$has1$6685$XW@M@
                                                 (begin
                                                   '#f
                                                   (not g$has2$6686$XW@M@))
                                                 '#f)
                                             '#f
                                             (g$f$6681$XW@M@
                                               (cdr g$s$6682$XW@M@)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6679$XW@M@
                                                 g$v1*$6683$XW@M@)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6680$XW@M@
                                                 g$v2*$6684$XW@M@))))
                                       '#f)))
                                  (g$get-value$6623$XW@M@
                                    g$enumset1$6677$XW@M@
                                    (car g$s$6682$XW@M@))
                                  (g$get-value$6623$XW@M@
                                    g$enumset2$6678$XW@M@
                                    (car g$s$6682$XW@M@))))))))
                   g$f$6681$XW@M@)
                 (g$get-symbols$6622$XW@M@ g$enumset1$6677$XW@M@)))))
           (g$enum-value$6611$XW@M@ g$enumset1$6677$XW@M@)
           (g$enum-value$6611$XW@M@ g$enumset2$6678$XW@M@))))))
   (g$enum-set=?$6633$XW@M@
     g$enum-set=?$6738$XW@M@
     (case-lambda
       ((g$enumset1$6687$XW@M@ g$enumset2$6688$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set=? g$enumset1$6687$XW@M@)
          (g$assert-enum$6624$XW@M@ 'enum-set=? g$enumset2$6688$XW@M@)
          (if (g$enum-set-subset?$6632$XW@M@
                g$enumset1$6687$XW@M@
                g$enumset2$6688$XW@M@)
            (begin
              '#f
              (g$enum-set-subset?$6632$XW@M@
                g$enumset2$6688$XW@M@
                g$enumset1$6687$XW@M@))
            '#f)))))
   (g$enum-set-union$6634$XW@M@
     g$enum-set-union$6739$XW@M@
     (case-lambda
       ((g$enumset1$6689$XW@M@ g$enumset2$6690$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-union g$enumset1$6689$XW@M@)
          (g$assert-enum$6624$XW@M@ 'enum-set-union g$enumset2$6690$XW@M@)
          (if (g$enum-type=?$6621$XW@M@
                g$enumset1$6689$XW@M@
                g$enumset2$6690$XW@M@)
            ((case-lambda
               ((g$v1$6691$XW@M@ g$v2$6692$XW@M@)
                (g$make-enum$6610$XW@M@
                  (bitwise-ior g$v1$6691$XW@M@ g$v2$6692$XW@M@)
                  (g$enum-info$6612$XW@M@ g$enumset1$6689$XW@M@))))
             (g$enum-value$6611$XW@M@ g$enumset1$6689$XW@M@)
             (g$enum-value$6611$XW@M@ g$enumset2$6690$XW@M@))
            '#f)))))
   (g$enum-set-intersection$6635$XW@M@
     g$enum-set-intersection$6740$XW@M@
     (case-lambda
       ((g$enumset1$6693$XW@M@ g$enumset2$6694$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@
            'enum-set-intersection
            g$enumset1$6693$XW@M@)
          (g$assert-enum$6624$XW@M@
            'enum-set-intersection
            g$enumset2$6694$XW@M@)
          (if (g$enum-type=?$6621$XW@M@
                g$enumset1$6693$XW@M@
                g$enumset2$6694$XW@M@)
            ((case-lambda
               ((g$v1$6695$XW@M@ g$v2$6696$XW@M@)
                (g$make-enum$6610$XW@M@
                  (bitwise-and g$v1$6695$XW@M@ g$v2$6696$XW@M@)
                  (g$enum-info$6612$XW@M@ g$enumset1$6693$XW@M@))))
             (g$enum-value$6611$XW@M@ g$enumset1$6693$XW@M@)
             (g$enum-value$6611$XW@M@ g$enumset2$6694$XW@M@))
            '#f)))))
   (g$enum-set-difference$6636$XW@M@
     g$enum-set-difference$6741$XW@M@
     (case-lambda
       ((g$enumset1$6697$XW@M@ g$enumset2$6698$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-difference g$enumset1$6697$XW@M@)
          (g$assert-enum$6624$XW@M@ 'enum-set-difference g$enumset2$6698$XW@M@)
          (if (g$enum-type=?$6621$XW@M@
                g$enumset1$6697$XW@M@
                g$enumset2$6698$XW@M@)
            ((case-lambda
               ((g$v1$6699$XW@M@ g$v2$6700$XW@M@)
                (g$make-enum$6610$XW@M@
                  (bitwise-xor
                    g$v1$6699$XW@M@
                    (bitwise-and g$v1$6699$XW@M@ g$v2$6700$XW@M@))
                  (g$enum-info$6612$XW@M@ g$enumset1$6697$XW@M@))))
             (g$enum-value$6611$XW@M@ g$enumset1$6697$XW@M@)
             (g$enum-value$6611$XW@M@ g$enumset2$6698$XW@M@))
            '#f)))))
   (g$enum-set-complement$6637$XW@M@
     g$enum-set-complement$6742$XW@M@
     (case-lambda
       ((g$enumset$6701$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-complement g$enumset$6701$XW@M@)
          ((case-lambda
             ((g$v$6702$XW@M@ g$u$6703$XW@M@)
              (g$make-enum$6610$XW@M@
                (bitwise-and (bitwise-not g$v$6702$XW@M@) g$u$6703$XW@M@)
                (g$enum-info$6612$XW@M@ g$enumset$6701$XW@M@))))
           (g$enum-value$6611$XW@M@ g$enumset$6701$XW@M@)
           (g$enum-value$6611$XW@M@
             (g$enum-set-universe$6627$XW@M@ g$enumset$6701$XW@M@)))))))
   (g$enum-set-projection$6638$XW@M@
     g$enum-set-projection$6743$XW@M@
     (case-lambda
       ((g$enumset1$6704$XW@M@ g$enumset2$6705$XW@M@)
        (begin
          (g$assert-enum$6624$XW@M@ 'enum-set-projection g$enumset1$6704$XW@M@)
          (g$assert-enum$6624$XW@M@ 'enum-set-projection g$enumset2$6705$XW@M@)
          ((case-lambda
             ((g$v1$6706$XW@M@)
              ((letrec ((g$f$6707$XW@M@
                          (case-lambda
                            ((g$s$6708$XW@M@ g$v$6709$XW@M@)
                             (if (null? g$s$6708$XW@M@)
                               (g$make-enum$6610$XW@M@
                                 g$v$6709$XW@M@
                                 (g$enum-info$6612$XW@M@ g$enumset2$6705$XW@M@))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6706$XW@M@
                                       (g$get-value$6623$XW@M@
                                         g$enumset1$6704$XW@M@
                                         (car g$s$6708$XW@M@))))
                                 (g$f$6707$XW@M@
                                   (cdr g$s$6708$XW@M@)
                                   g$v$6709$XW@M@)
                                 ((case-lambda
                                    ((g$v2$6710$XW@M@)
                                     (if g$v2$6710$XW@M@
                                       (g$f$6707$XW@M@
                                         (cdr g$s$6708$XW@M@)
                                         (bitwise-ior
                                           g$v$6709$XW@M@
                                           g$v2$6710$XW@M@))
                                       (g$f$6707$XW@M@
                                         (cdr g$s$6708$XW@M@)
                                         g$v$6709$XW@M@))))
                                  (g$get-value$6623$XW@M@
                                    g$enumset2$6705$XW@M@
                                    (car g$s$6708$XW@M@)))))))))
                 g$f$6707$XW@M@)
               (g$get-symbols$6622$XW@M@ g$enumset1$6704$XW@M@)
               '0)))
           (g$enum-value$6611$XW@M@ g$enumset1$6704$XW@M@)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6639$XW@M@ g$p$6640$XW@M@)
       (g$fprintf$6768$XW@M@
         g$p$6640$XW@M@
         '"#[enum-set ~a]"
         (g$enum-set->list$6630$XW@M@ g$x$6639$XW@M@))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6744$XW@M@
     g$dofmt$6766$XW@M@
     (case-lambda
       ((g$p$6748$XW@M@ g$cntl$6749$XW@M@ g$args$6750$XW@M@)
        ((case-lambda
           ((g$nmax$6751$XW@M@)
            ((letrec ((g$loop$6752$XW@M@
                        (case-lambda
                          ((g$n$6753$XW@M@ g$a$6754$XW@M@)
                           (if (fx<=? g$n$6753$XW@M@ g$nmax$6751$XW@M@)
                             ((case-lambda
                                ((g$c$6755$XW@M@)
                                 (if (if (char=? g$c$6755$XW@M@ '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6753$XW@M@
                                           g$nmax$6751$XW@M@))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6756$XW@M@)
                                       (if (eqv? g$t$6756$XW@M@ '#\a)
                                         (begin
                                           (display
                                             (car g$a$6754$XW@M@)
                                             g$p$6748$XW@M@)
                                           (g$loop$6752$XW@M@
                                             (fx+ g$n$6753$XW@M@ '2)
                                             (cdr g$a$6754$XW@M@)))
                                         (if (eqv? g$t$6756$XW@M@ '#\s)
                                           (begin
                                             (write
                                               (car g$a$6754$XW@M@)
                                               g$p$6748$XW@M@)
                                             (g$loop$6752$XW@M@
                                               (fx+ g$n$6753$XW@M@ '2)
                                               (cdr g$a$6754$XW@M@)))
                                           (if (eqv? g$t$6756$XW@M@ '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6754$XW@M@)
                                                   '2)
                                                 g$p$6748$XW@M@)
                                               (g$loop$6752$XW@M@
                                                 (fx+ g$n$6753$XW@M@ '2)
                                                 (cdr g$a$6754$XW@M@)))
                                             (if (eqv? g$t$6756$XW@M@ '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6754$XW@M@)
                                                     '8)
                                                   g$p$6748$XW@M@)
                                                 (g$loop$6752$XW@M@
                                                   (fx+ g$n$6753$XW@M@ '2)
                                                   (cdr g$a$6754$XW@M@)))
                                               (if (eqv? g$t$6756$XW@M@ '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6754$XW@M@)
                                                       '16)
                                                     g$p$6748$XW@M@)
                                                   (g$loop$6752$XW@M@
                                                     (fx+ g$n$6753$XW@M@ '2)
                                                     (cdr g$a$6754$XW@M@)))
                                                 (if (eqv? g$t$6756$XW@M@ '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6754$XW@M@)
                                                         '10)
                                                       g$p$6748$XW@M@)
                                                     (g$loop$6752$XW@M@
                                                       (fx+ g$n$6753$XW@M@ '2)
                                                       (cdr g$a$6754$XW@M@)))
                                                   (if (eqv?
                                                         g$t$6756$XW@M@
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6748$XW@M@)
                                                       (g$loop$6752$XW@M@
                                                         (fx+ g$n$6753$XW@M@ '2)
                                                         g$a$6754$XW@M@))
                                                     (begin
                                                       (write-char
                                                         g$c$6755$XW@M@
                                                         g$p$6748$XW@M@)
                                                       (g$loop$6752$XW@M@
                                                         (fx+ g$n$6753$XW@M@ '1)
                                                         g$a$6754$XW@M@)))))))))))
                                    (string-ref
                                      g$cntl$6749$XW@M@
                                      (fx+ g$n$6753$XW@M@ '1)))
                                   (begin
                                     (write-char g$c$6755$XW@M@ g$p$6748$XW@M@)
                                     (g$loop$6752$XW@M@
                                       (fx+ g$n$6753$XW@M@ '1)
                                       g$a$6754$XW@M@)))))
                              (string-ref g$cntl$6749$XW@M@ g$n$6753$XW@M@))
                             (void))))))
               g$loop$6752$XW@M@)
             '0
             g$args$6750$XW@M@)))
         (fx- (string-length g$cntl$6749$XW@M@) '1)))))
   (g$printf$6745$XW@M@
     g$printf$6767$XW@M@
     (case-lambda
       ((g$control$6757$XW@M@ . g$args$6758$XW@M@)
        (g$dofmt$6744$XW@M@
          (current-output-port)
          g$control$6757$XW@M@
          g$args$6758$XW@M@))))
   (g$fprintf$6746$XW@M@
     g$fprintf$6768$XW@M@
     (case-lambda
       ((g$p$6759$XW@M@ g$control$6760$XW@M@ . g$args$6761$XW@M@)
        (g$dofmt$6744$XW@M@
          g$p$6759$XW@M@
          g$control$6760$XW@M@
          g$args$6761$XW@M@))))
   (g$format$6747$XW@M@
     g$format$6769$XW@M@
     (case-lambda
       ((g$control$6762$XW@M@ . g$args$6763$XW@M@)
        (call-with-values
          g$open-string-output-port$6604$XW@M@
          (case-lambda
            ((g$p$6764$XW@M@ g$c$6765$XW@M@)
             (begin
               (g$dofmt$6744$XW@M@
                 g$p$6764$XW@M@
                 g$control$6762$XW@M@
                 g$args$6763$XW@M@)
               (g$c$6765$XW@M@)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6770$XW@M@
     g$make-traced-macro$6773$XW@M@
     (case-lambda
       ((g$name$6771$XW@M@ g$x$6772$XW@M@)
        (if (procedure? g$x$6772$XW@M@)
          (make-traced-procedure
            g$name$6771$XW@M@
            g$x$6772$XW@M@
            g$syntax->datum$11424$XW@M@)
          (if (g$variable-transformer?$11252$XW@M@ g$x$6772$XW@M@)
            (g$make-variable-transformer$11251$XW@M@
              (make-traced-procedure
                g$name$6771$XW@M@
                (g$variable-transformer-procedure$11253$XW@M@ g$x$6772$XW@M@)
                g$syntax->datum$11424$XW@M@))
            g$x$6772$XW@M@))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6774$XW@M@
     g$read-library-source-file$6853$XW@M@
     (case-lambda
       ((g$file-name$6845$XW@M@)
        (with-input-from-file g$file-name$6845$XW@M@ read-annotated))))
   (g$make-parameter$6775$XW@M@
     g$make-parameter$6854$XW@M@
     (case-lambda
       ((g$x$6846$XW@M@)
        (g$make-parameter$6775$XW@M@
          g$x$6846$XW@M@
          (case-lambda ((g$x$6847$XW@M@) g$x$6847$XW@M@))))
       ((g$x$6848$XW@M@ g$fender$6849$XW@M@)
        (begin
          (if (procedure? g$fender$6849$XW@M@)
            (void)
            (assertion-violation '#f '"assertion failed" '(procedure? fender)))
          ((case-lambda
             ((g$x$6850$XW@M@)
              (case-lambda
                (() g$x$6850$XW@M@)
                ((g$v$6851$XW@M@)
                 (set! g$x$6850$XW@M@ (g$fender$6849$XW@M@ g$v$6851$XW@M@))))))
           (g$fender$6849$XW@M@ g$x$6848$XW@M@))))))
   (g$file-options-constructor$6843$XW@M@
     g$file-options-constructor$6855$XW@M@
     (g$make-parameter$6775$XW@M@ '#f))
   (g$file-options-spec$6844$XW@M@
     g$file-options-spec$6856$XW@M@
     (case-lambda
       ((g$x$6852$XW@M@)
        ((g$file-options-constructor$6843$XW@M@) g$x$6852$XW@M@)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7053$XW@M@
     g$current-primitive-locations$7098$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda ((g$x$7059$XW@M@) '#f))
       (case-lambda
         ((g$p$7060$XW@M@)
          (begin
            (if (procedure? g$p$7060$XW@M@)
              (void)
              (assertion-violation '#f '"assertion failed" '(procedure? p)))
            g$p$7060$XW@M@)))))
   (g$mutable?$7054$XW@M@
     g$mutable?$7099$XW@M@
     (case-lambda
       ((g$x$7061$XW@M@)
        (letrec* ((g$simple?$7062$XW@M@
                    (case-lambda
                      ((g$x$7063$XW@M@)
                       ((case-lambda
                          ((g$t$7064$XW@M@)
                           (if g$t$7064$XW@M@
                             g$t$7064$XW@M@
                             ((case-lambda
                                ((g$t$7065$XW@M@)
                                 (if g$t$7065$XW@M@
                                   g$t$7065$XW@M@
                                   ((case-lambda
                                      ((g$t$7066$XW@M@)
                                       (if g$t$7066$XW@M@
                                         g$t$7066$XW@M@
                                         ((case-lambda
                                            ((g$t$7067$XW@M@)
                                             (if g$t$7067$XW@M@
                                               g$t$7067$XW@M@
                                               ((case-lambda
                                                  ((g$t$7068$XW@M@)
                                                   (if g$t$7068$XW@M@
                                                     g$t$7068$XW@M@
                                                     ((case-lambda
                                                        ((g$t$7069$XW@M@)
                                                         (if g$t$7069$XW@M@
                                                           g$t$7069$XW@M@
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7063$XW@M@)))))
                                                      (bytevector?
                                                        g$x$7063$XW@M@)))))
                                                (string? g$x$7063$XW@M@)))))
                                          (boolean? g$x$7063$XW@M@)))))
                                    (symbol? g$x$7063$XW@M@)))))
                              (char? g$x$7063$XW@M@)))))
                        (null? g$x$7063$XW@M@))))))
          (not (g$simple?$7062$XW@M@ g$x$7061$XW@M@))))))
   (g$rewriter$7055$XW@M@
     g$rewriter$7100$XW@M@
     (case-lambda
       ((g$quote-hack?$7070$XW@M@)
        (letrec* ((g$f$7071$XW@M@
                    (case-lambda
                      ((g$x$7072$XW@M@)
                       (if (pair? g$x$7072$XW@M@)
                         ((case-lambda
                            ((g$t$7073$XW@M@)
                             (if (eqv? g$t$7073$XW@M@ 'quote)
                               (if (if g$quote-hack?$7070$XW@M@
                                     (begin
                                       '#f
                                       (g$mutable?$7054$XW@M@
                                         (g$cadr$5402$XW@M@ g$x$7072$XW@M@)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7093$XW@M@)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7093$XW@M@
                                         (g$cadr$5402$XW@M@ g$x$7072$XW@M@))
                                       g$g$7093$XW@M@)))
                                  (gensym))
                                 g$x$7072$XW@M@)
                               (if (eqv? g$t$7073$XW@M@ 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7092$XW@M@)
                                           (cons
                                             (car g$x$7092$XW@M@)
                                             (map g$f$7071$XW@M@
                                                  (cdr g$x$7092$XW@M@)))))
                                        (cdr g$x$7072$XW@M@)))
                                 (if (eqv? g$t$7073$XW@M@ 'lambda)
                                   (g$cons*$5873$XW@M@
                                     'lambda
                                     (g$cadr$5402$XW@M@ g$x$7072$XW@M@)
                                     (map g$f$7071$XW@M@
                                          (g$cddr$5404$XW@M@ g$x$7072$XW@M@)))
                                   (if (eqv? g$t$7073$XW@M@ 'letrec)
                                     ((case-lambda
                                        ((g$bindings$7088$XW@M@
                                           g$body*$7089$XW@M@)
                                         ((case-lambda
                                            ((g$lhs*$7090$XW@M@
                                               g$rhs*$7091$XW@M@)
                                             (g$cons*$5873$XW@M@
                                               'letrec
                                               (map list
                                                    g$lhs*$7090$XW@M@
                                                    (map g$f$7071$XW@M@
                                                         g$rhs*$7091$XW@M@))
                                               (map g$f$7071$XW@M@
                                                    g$body*$7089$XW@M@))))
                                          (map car g$bindings$7088$XW@M@)
                                          (map g$cadr$5402$XW@M@
                                               g$bindings$7088$XW@M@))))
                                      (g$cadr$5402$XW@M@ g$x$7072$XW@M@)
                                      (g$cddr$5404$XW@M@ g$x$7072$XW@M@))
                                     (if (eqv? g$t$7073$XW@M@ 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$7084$XW@M@
                                             g$body*$7085$XW@M@)
                                           ((case-lambda
                                              ((g$lhs*$7086$XW@M@
                                                 g$rhs*$7087$XW@M@)
                                               (g$cons*$5873$XW@M@
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7086$XW@M@
                                                      (map g$f$7071$XW@M@
                                                           g$rhs*$7087$XW@M@))
                                                 (map g$f$7071$XW@M@
                                                      g$body*$7085$XW@M@))))
                                            (map car g$bindings$7084$XW@M@)
                                            (map g$cadr$5402$XW@M@
                                                 g$bindings$7084$XW@M@))))
                                        (g$cadr$5402$XW@M@ g$x$7072$XW@M@)
                                        (g$cddr$5404$XW@M@ g$x$7072$XW@M@))
                                       (if (eqv?
                                             g$t$7073$XW@M@
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$7077$XW@M@ g$x$7078$XW@M@)
                                             ((case-lambda
                                                ((g$bindings$7079$XW@M@
                                                   g$body*$7080$XW@M@)
                                                 ((case-lambda
                                                    ((g$lhs*$7081$XW@M@
                                                       g$lhs**$7082$XW@M@
                                                       g$rhs*$7083$XW@M@)
                                                     (g$cons*$5873$XW@M@
                                                       'library-letrec*
                                                       g$name$7077$XW@M@
                                                       (map list
                                                            g$lhs*$7081$XW@M@
                                                            g$lhs**$7082$XW@M@
                                                            (map g$f$7071$XW@M@
                                                                 g$rhs*$7083$XW@M@))
                                                       (map g$f$7071$XW@M@
                                                            g$body*$7080$XW@M@))))
                                                  (map car
                                                       g$bindings$7079$XW@M@)
                                                  (map g$cadr$5402$XW@M@
                                                       g$bindings$7079$XW@M@)
                                                  (map g$caddr$5408$XW@M@
                                                       g$bindings$7079$XW@M@))))
                                              (g$cadr$5402$XW@M@ g$x$7078$XW@M@)
                                              (g$cddr$5404$XW@M@
                                                g$x$7078$XW@M@))))
                                          (g$cadr$5402$XW@M@ g$x$7072$XW@M@)
                                          (cdr g$x$7072$XW@M@))
                                         (if (eqv? g$t$7073$XW@M@ 'begin)
                                           (cons
                                             'begin
                                             (map g$f$7071$XW@M@
                                                  (cdr g$x$7072$XW@M@)))
                                           (if (eqv? g$t$7073$XW@M@ 'set!)
                                             (list
                                               'set!
                                               (g$cadr$5402$XW@M@
                                                 g$x$7072$XW@M@)
                                               (g$f$7071$XW@M@
                                                 (g$caddr$5408$XW@M@
                                                   g$x$7072$XW@M@)))
                                             (if (eqv?
                                                   g$t$7073$XW@M@
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$7074$XW@M@)
                                                   ((case-lambda
                                                      ((g$t$7075$XW@M@)
                                                       (if g$t$7075$XW@M@
                                                         ((case-lambda
                                                            ((g$loc$7076$XW@M@)
                                                             g$loc$7076$XW@M@))
                                                          g$t$7075$XW@M@)
                                                         g$op$7074$XW@M@)))
                                                    ((g$current-primitive-locations$7053$XW@M@)
                                                     g$op$7074$XW@M@))))
                                                (g$cadr$5402$XW@M@
                                                  g$x$7072$XW@M@))
                                               (if (eqv? g$t$7073$XW@M@ 'define)
                                                 g$x$7072$XW@M@
                                                 (if (list? g$x$7072$XW@M@)
                                                   (map g$f$7071$XW@M@
                                                        g$x$7072$XW@M@)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7072$XW@M@
                                                     (list?
                                                       g$x$7072$XW@M@)))))))))))))))
                          (car g$x$7072$XW@M@))
                         g$x$7072$XW@M@)))))
          g$f$7071$XW@M@))))
   (g$expanded->core$7056$XW@M@
     g$expanded->core$7101$XW@M@
     (case-lambda
       ((g$x$7094$XW@M@) ((g$rewriter$7055$XW@M@ '#t) g$x$7094$XW@M@))))
   (g$compile-core-expr$7057$XW@M@
     g$compile-core-expr$7102$XW@M@
     (case-lambda
       ((g$x$7095$XW@M@) ((g$rewriter$7055$XW@M@ '#f) g$x$7095$XW@M@))))
   (g$compile-core-expr-to-port$7058$XW@M@
     g$compile-core-expr-to-port$7103$XW@M@
     (case-lambda
       ((g$x$7096$XW@M@ g$p$7097$XW@M@)
        (g$pretty-print$7052$XW@M@
          ((g$rewriter$7055$XW@M@ '#f) g$x$7096$XW@M@)
          g$p$7097$XW@M@)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7142$XW@M@
     g$make-collection$7346$XW@M@
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7203$XW@M@)
            (letrec* ((g$set-cons$7204$XW@M@
                        (case-lambda
                          ((g$x$7206$XW@M@ g$ls$7207$XW@M@)
                           (if (memq g$x$7206$XW@M@ g$ls$7207$XW@M@)
                             g$ls$7207$XW@M@
                             (cons g$x$7206$XW@M@ g$ls$7207$XW@M@))))))
              (case-lambda
                (() g$set$7203$XW@M@)
                ((g$x$7205$XW@M@)
                 (set! g$set$7203$XW@M@
                   (g$set-cons$7204$XW@M@ g$x$7205$XW@M@ g$set$7203$XW@M@)))))))
         '()))))
   (g$current-library-collection$7143$XW@M@
     g$current-library-collection$7347$XW@M@
     (g$make-parameter$6854$XW@M@
       (g$make-collection$7142$XW@M@)
       (case-lambda
         ((g$x$7208$XW@M@)
          (begin
            (if (procedure? g$x$7208$XW@M@)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7208$XW@M@))
            g$x$7208$XW@M@)))))
   (g$8055$7144$XW@M@
     g$8055$7348$XW@M@
     (make-record-type-descriptor
       'library
       '#f
       'g$8058$XW@M@
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8057$7145$XW@M@ g$8057$7349$XW@M@ '#f)
   (g$8056$7146$XW@M@
     g$8056$7350$XW@M@
     (make-record-constructor-descriptor
       g$8055$7144$XW@M@
       '#f
       g$8057$7145$XW@M@))
   (g$library?$7147$XW@M@
     g$library?$7351$XW@M@
     (record-predicate g$8055$7144$XW@M@))
   (g$make-library$7148$XW@M@
     g$make-library$7352$XW@M@
     (record-constructor g$8056$7146$XW@M@))
   (g$library-id$7149$XW@M@
     g$library-id$7353$XW@M@
     (record-accessor g$8055$7144$XW@M@ '0))
   (g$library-name$7150$XW@M@
     g$library-name$7354$XW@M@
     (record-accessor g$8055$7144$XW@M@ '1))
   (g$library-version$7151$XW@M@
     g$library-version$7355$XW@M@
     (record-accessor g$8055$7144$XW@M@ '2))
   (g$library-imp*$7152$XW@M@
     g$library-imp*$7356$XW@M@
     (record-accessor g$8055$7144$XW@M@ '3))
   (g$library-vis*$7153$XW@M@
     g$library-vis*$7357$XW@M@
     (record-accessor g$8055$7144$XW@M@ '4))
   (g$library-inv*$7154$XW@M@
     g$library-inv*$7358$XW@M@
     (record-accessor g$8055$7144$XW@M@ '5))
   (g$library-subst$7155$XW@M@
     g$library-subst$7359$XW@M@
     (record-accessor g$8055$7144$XW@M@ '6))
   (g$library-env$7156$XW@M@
     g$library-env$7360$XW@M@
     (record-accessor g$8055$7144$XW@M@ '7))
   (g$library-visit-state$7157$XW@M@
     g$library-visit-state$7361$XW@M@
     (record-accessor g$8055$7144$XW@M@ '8))
   (g$library-invoke-state$7158$XW@M@
     g$library-invoke-state$7362$XW@M@
     (record-accessor g$8055$7144$XW@M@ '9))
   (g$library-visit-code$7159$XW@M@
     g$library-visit-code$7363$XW@M@
     (record-accessor g$8055$7144$XW@M@ '10))
   (g$library-invoke-code$7160$XW@M@
     g$library-invoke-code$7364$XW@M@
     (record-accessor g$8055$7144$XW@M@ '11))
   (g$library-visible?$7161$XW@M@
     g$library-visible?$7365$XW@M@
     (record-accessor g$8055$7144$XW@M@ '12))
   (g$library-source-file-name$7162$XW@M@
     g$library-source-file-name$7366$XW@M@
     (record-accessor g$8055$7144$XW@M@ '13))
   (g$set-library-id!$7163$XW@M@
     g$set-library-id!$7367$XW@M@
     (record-mutator g$8055$7144$XW@M@ '0))
   (g$set-library-name!$7164$XW@M@
     g$set-library-name!$7368$XW@M@
     (record-mutator g$8055$7144$XW@M@ '1))
   (g$set-library-version!$7165$XW@M@
     g$set-library-version!$7369$XW@M@
     (record-mutator g$8055$7144$XW@M@ '2))
   (g$set-library-imp*!$7166$XW@M@
     g$set-library-imp*!$7370$XW@M@
     (record-mutator g$8055$7144$XW@M@ '3))
   (g$set-library-vis*!$7167$XW@M@
     g$set-library-vis*!$7371$XW@M@
     (record-mutator g$8055$7144$XW@M@ '4))
   (g$set-library-inv*!$7168$XW@M@
     g$set-library-inv*!$7372$XW@M@
     (record-mutator g$8055$7144$XW@M@ '5))
   (g$set-library-subst!$7169$XW@M@
     g$set-library-subst!$7373$XW@M@
     (record-mutator g$8055$7144$XW@M@ '6))
   (g$set-library-env!$7170$XW@M@
     g$set-library-env!$7374$XW@M@
     (record-mutator g$8055$7144$XW@M@ '7))
   (g$set-library-visit-state!$7171$XW@M@
     g$set-library-visit-state!$7375$XW@M@
     (record-mutator g$8055$7144$XW@M@ '8))
   (g$set-library-invoke-state!$7172$XW@M@
     g$set-library-invoke-state!$7376$XW@M@
     (record-mutator g$8055$7144$XW@M@ '9))
   (g$set-library-visit-code!$7173$XW@M@
     g$set-library-visit-code!$7377$XW@M@
     (record-mutator g$8055$7144$XW@M@ '10))
   (g$set-library-invoke-code!$7174$XW@M@
     g$set-library-invoke-code!$7378$XW@M@
     (record-mutator g$8055$7144$XW@M@ '11))
   (g$set-library-visible?!$7175$XW@M@
     g$set-library-visible?!$7379$XW@M@
     (record-mutator g$8055$7144$XW@M@ '12))
   (g$set-library-source-file-name!$7176$XW@M@
     g$set-library-source-file-name!$7380$XW@M@
     (record-mutator g$8055$7144$XW@M@ '13))
   (g$rp$7177$XW@M@
     g$rp$7381$XW@M@
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7209$XW@M@ g$p$7210$XW@M@)
          (begin
            (if (g$library?$7147$XW@M@ g$x$7209$XW@M@)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6769$XW@M@
                '"#<library ~s>"
                (if (null? (g$library-version$7151$XW@M@ g$x$7209$XW@M@))
                  (g$library-name$7150$XW@M@ g$x$7209$XW@M@)
                  (append
                    (g$library-name$7150$XW@M@ g$x$7209$XW@M@)
                    (list (g$library-version$7151$XW@M@ g$x$7209$XW@M@)))))
              g$p$7210$XW@M@))))))
   (g$find-dependencies$7178$XW@M@
     g$find-dependencies$7382$XW@M@
     (case-lambda
       ((g$ls$7211$XW@M@)
        (if (null? g$ls$7211$XW@M@)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7179$XW@M@
     g$find-library-by$7383$XW@M@
     (case-lambda
       ((g$pred$7212$XW@M@)
        ((letrec ((g$f$7213$XW@M@
                    (case-lambda
                      ((g$ls$7214$XW@M@)
                       (if (null? g$ls$7214$XW@M@)
                         '#f
                         (if (g$pred$7212$XW@M@ (car g$ls$7214$XW@M@))
                           (car g$ls$7214$XW@M@)
                           (g$f$7213$XW@M@ (cdr g$ls$7214$XW@M@))))))))
           g$f$7213$XW@M@)
         ((g$current-library-collection$7143$XW@M@))))))
   (g$library-path$7180$XW@M@
     g$library-path$7384$XW@M@
     (g$make-parameter$6854$XW@M@
       '(".")
       (case-lambda
         ((g$x$7215$XW@M@)
          (if (if (list? g$x$7215$XW@M@)
                (begin '#f (g$for-all$5871$XW@M@ string? g$x$7215$XW@M@))
                '#f)
            (map (case-lambda ((g$x$7216$XW@M@) g$x$7216$XW@M@)) g$x$7215$XW@M@)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7215$XW@M@))))))
   (g$library-extensions$7181$XW@M@
     g$library-extensions$7385$XW@M@
     (g$make-parameter$6854$XW@M@
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7217$XW@M@)
          (if (if (list? g$x$7217$XW@M@)
                (begin '#f (g$for-all$5871$XW@M@ string? g$x$7217$XW@M@))
                '#f)
            (map (case-lambda ((g$x$7218$XW@M@) g$x$7218$XW@M@)) g$x$7217$XW@M@)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7217$XW@M@))))))
   (g$library-name->file-name$7182$XW@M@
     g$library-name->file-name$7386$XW@M@
     (case-lambda
       ((g$x$7219$XW@M@)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6604$XW@M@)))
          (case-lambda
            ((g$p$7222$XW@M@ g$extract$7223$XW@M@)
             ((case-lambda
                ((g$extract$7224$XW@M@ g$p$7225$XW@M@)
                 (letrec* ((g$display-hex$7226$XW@M@
                             (case-lambda
                               ((g$n$7234$XW@M@)
                                (if (<= '0 g$n$7234$XW@M@ '9)
                                  (display g$n$7234$XW@M@ g$p$7225$XW@M@)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7234$XW@M@ '10)))
                                    g$p$7225$XW@M@))))))
                   (begin
                     ((letrec ((g$f$7227$XW@M@
                                 (case-lambda
                                   ((g$ls$7228$XW@M@)
                                    (if (null? g$ls$7228$XW@M@)
                                      (void)
                                      (begin
                                        (display '"/" g$p$7225$XW@M@)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7229$XW@M@)
                                             (if ((case-lambda
                                                    ((g$t$7230$XW@M@)
                                                     (if g$t$7230$XW@M@
                                                       g$t$7230$XW@M@
                                                       ((case-lambda
                                                          ((g$t$7231$XW@M@)
                                                           (if g$t$7231$XW@M@
                                                             g$t$7231$XW@M@
                                                             ((case-lambda
                                                                ((g$t$7232$XW@M@)
                                                                 (if g$t$7232$XW@M@
                                                                   g$t$7232$XW@M@
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7229$XW@M@
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$7229$XW@M@
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$7229$XW@M@
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$7229$XW@M@
                                                    '#\z))
                                               (display
                                                 g$c$7229$XW@M@
                                                 g$p$7225$XW@M@)
                                               (begin
                                                 (display '"%" g$p$7225$XW@M@)
                                                 ((case-lambda
                                                    ((g$n$7233$XW@M@)
                                                     (begin
                                                       (g$display-hex$7226$XW@M@
                                                         (g$quotient$6228$XW@M@
                                                           g$n$7233$XW@M@
                                                           '16))
                                                       (g$display-hex$7226$XW@M@
                                                         (g$remainder$6229$XW@M@
                                                           g$n$7233$XW@M@
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7229$XW@M@))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7228$XW@M@))))
                                        (g$f$7227$XW@M@
                                          (cdr g$ls$7228$XW@M@))))))))
                        g$f$7227$XW@M@)
                      g$x$7219$XW@M@)
                     (g$extract$7224$XW@M@)))))
              g$extract$7223$XW@M@
              g$p$7222$XW@M@)))))))
   (g$file-locator$7183$XW@M@
     g$file-locator$7387$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         ((g$x$7235$XW@M@)
          ((case-lambda
             ((g$str$7236$XW@M@)
              ((letrec ((g$f$7237$XW@M@
                          (case-lambda
                            ((g$ls$7238$XW@M@
                               g$exts$7239$XW@M@
                               g$failed-list$7240$XW@M@)
                             (if (null? g$ls$7238$XW@M@)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8160$7241$XW@M@
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8163$XW@M@
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8162$7242$XW@M@ '#f)
                                             (g$8161$7243$XW@M@
                                               (make-record-constructor-descriptor
                                                 g$8160$7241$XW@M@
                                                 &condition-rcd
                                                 g$8162$7242$XW@M@))
                                             (g$8159$7244$XW@M@
                                               (record-predicate
                                                 g$8160$7241$XW@M@))
                                             (g$make-library-resolution-condition$7245$XW@M@
                                               (record-constructor
                                                 g$8161$7243$XW@M@))
                                             (g$8157$7246$XW@M@
                                               (record-accessor
                                                 g$8160$7241$XW@M@
                                                 '0))
                                             (g$8158$7247$XW@M@
                                               (record-accessor
                                                 g$8160$7241$XW@M@
                                                 '1))
                                             (g$library-resolution-condition?$7248$XW@M@
                                               (condition-predicate
                                                 g$8160$7241$XW@M@))
                                             (g$condition-library$7249$XW@M@
                                               (condition-accessor
                                                 g$8160$7241$XW@M@
                                                 g$8157$7246$XW@M@))
                                             (g$condition-files$7250$XW@M@
                                               (condition-accessor
                                                 g$8160$7241$XW@M@
                                                 g$8158$7247$XW@M@)))
                                     (raise
                                       (condition
                                         (g$make-error$6145$XW@M@)
                                         (g$make-who-condition$6171$XW@M@
                                           'expander)
                                         (g$make-message-condition$6125$XW@M@
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7245$XW@M@
                                           g$x$7235$XW@M@
                                           (reverse
                                             g$failed-list$7240$XW@M@))))))))
                               (if (null? g$exts$7239$XW@M@)
                                 (g$f$7237$XW@M@
                                   (cdr g$ls$7238$XW@M@)
                                   (g$library-extensions$7181$XW@M@)
                                   g$failed-list$7240$XW@M@)
                                 ((case-lambda
                                    ((g$name$7251$XW@M@)
                                     (if (g$file-exists?$5742$XW@M@
                                           g$name$7251$XW@M@)
                                       g$name$7251$XW@M@
                                       (g$f$7237$XW@M@
                                         g$ls$7238$XW@M@
                                         (cdr g$exts$7239$XW@M@)
                                         (cons
                                           g$name$7251$XW@M@
                                           g$failed-list$7240$XW@M@)))))
                                  (string-append
                                    (car g$ls$7238$XW@M@)
                                    g$str$7236$XW@M@
                                    (car g$exts$7239$XW@M@)))))))))
                 g$f$7237$XW@M@)
               (g$library-path$7180$XW@M@)
               (g$library-extensions$7181$XW@M@)
               '())))
           (g$library-name->file-name$7182$XW@M@ g$x$7235$XW@M@))))
       (case-lambda
         ((g$f$7252$XW@M@)
          (if (procedure? g$f$7252$XW@M@)
            g$f$7252$XW@M@
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7252$XW@M@))))))
   (g$serialize-all$7184$XW@M@
     g$serialize-all$7388$XW@M@
     (case-lambda
       ((g$serialize$7253$XW@M@ g$compile$7254$XW@M@)
        (letrec* ((g$library-desc$7255$XW@M@
                    (case-lambda
                      ((g$x$7257$XW@M@)
                       (list
                         (g$library-id$7149$XW@M@ g$x$7257$XW@M@)
                         (g$library-name$7150$XW@M@ g$x$7257$XW@M@))))))
          (for-each
            (case-lambda
              ((g$x$7256$XW@M@)
               (if (g$library-source-file-name$7162$XW@M@ g$x$7256$XW@M@)
                 (g$serialize$7253$XW@M@
                   (g$library-source-file-name$7162$XW@M@ g$x$7256$XW@M@)
                   (list
                     (g$library-id$7149$XW@M@ g$x$7256$XW@M@)
                     (g$library-name$7150$XW@M@ g$x$7256$XW@M@)
                     (g$library-version$7151$XW@M@ g$x$7256$XW@M@)
                     (map g$library-desc$7255$XW@M@
                          (g$library-imp*$7152$XW@M@ g$x$7256$XW@M@))
                     (map g$library-desc$7255$XW@M@
                          (g$library-vis*$7153$XW@M@ g$x$7256$XW@M@))
                     (map g$library-desc$7255$XW@M@
                          (g$library-inv*$7154$XW@M@ g$x$7256$XW@M@))
                     (g$library-subst$7155$XW@M@ g$x$7256$XW@M@)
                     (g$library-env$7156$XW@M@ g$x$7256$XW@M@)
                     (g$compile$7254$XW@M@
                       (g$library-visit-code$7159$XW@M@ g$x$7256$XW@M@))
                     (g$compile$7254$XW@M@
                       (g$library-invoke-code$7160$XW@M@ g$x$7256$XW@M@))
                     (g$library-visible?$7161$XW@M@ g$x$7256$XW@M@)))
                 (void))))
            ((g$current-library-collection$7143$XW@M@)))))))
   (g$current-precompiled-library-loader$7185$XW@M@
     g$current-precompiled-library-loader$7389$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda ((g$filename$7258$XW@M@ g$sk$7259$XW@M@) '#f))))
   (g$try-load-from-file$7186$XW@M@
     g$try-load-from-file$7390$XW@M@
     (case-lambda
       ((g$filename$7260$XW@M@)
        ((g$current-precompiled-library-loader$7185$XW@M@)
         g$filename$7260$XW@M@
         (case-lambda
           ((g$id$7261$XW@M@
              g$name$7262$XW@M@
              g$ver$7263$XW@M@
              g$imp*$7264$XW@M@
              g$vis*$7265$XW@M@
              g$inv*$7266$XW@M@
              g$exp-subst$7267$XW@M@
              g$exp-env$7268$XW@M@
              g$visit-proc$7269$XW@M@
              g$invoke-proc$7270$XW@M@
              g$visible?$7271$XW@M@)
            ((letrec ((g$f$7272$XW@M@
                        (case-lambda
                          ((g$deps$7273$XW@M@)
                           (if (null? g$deps$7273$XW@M@)
                             (begin
                               (g$install-library$7196$XW@M@
                                 g$id$7261$XW@M@
                                 g$name$7262$XW@M@
                                 g$ver$7263$XW@M@
                                 g$imp*$7264$XW@M@
                                 g$vis*$7265$XW@M@
                                 g$inv*$7266$XW@M@
                                 g$exp-subst$7267$XW@M@
                                 g$exp-env$7268$XW@M@
                                 g$visit-proc$7269$XW@M@
                                 g$invoke-proc$7270$XW@M@
                                 '#f
                                 '#f
                                 g$visible?$7271$XW@M@
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7274$XW@M@)
                                 ((case-lambda
                                    ((g$label$7275$XW@M@ g$dname$7276$XW@M@)
                                     ((case-lambda
                                        ((g$l$7277$XW@M@)
                                         (if (if (g$library?$7147$XW@M@
                                                   g$l$7277$XW@M@)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7275$XW@M@
                                                      (g$library-id$7149$XW@M@
                                                        g$l$7277$XW@M@)))
                                               '#f)
                                           (g$f$7272$XW@M@
                                             (cdr g$deps$7273$XW@M@))
                                           (begin
                                             (g$fprintf$6768$XW@M@
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$7262$XW@M@
                                               g$dname$7276$XW@M@
                                               g$filename$7260$XW@M@)
                                             '#f))))
                                      (g$find-library-by-name$7191$XW@M@
                                        g$dname$7276$XW@M@))))
                                  (car g$d$7274$XW@M@)
                                  (g$cadr$5402$XW@M@ g$d$7274$XW@M@))))
                              (car g$deps$7273$XW@M@)))))))
               g$f$7272$XW@M@)
             (append g$imp*$7264$XW@M@ g$vis*$7265$XW@M@ g$inv*$7266$XW@M@)))
           (g$others$7278$XW@M@ '#f))))))
   (g$library-loader$7187$XW@M@
     g$library-loader$7391$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         ((g$x$7279$XW@M@)
          ((case-lambda
             ((g$file-name$7280$XW@M@)
              (if (not g$file-name$7280$XW@M@)
                (assertion-violation '#f '"cannot file library" g$x$7279$XW@M@)
                ((case-lambda
                   ((g$t$7281$XW@M@)
                    (if g$t$7281$XW@M@
                      g$t$7281$XW@M@
                      (begin
                        '#f
                        ((g$current-library-expander$7188$XW@M@)
                         (g$read-library-source-file$6853$XW@M@
                           g$file-name$7280$XW@M@)
                         g$file-name$7280$XW@M@
                         (case-lambda
                           ((g$name$7282$XW@M@)
                            (if (equal? g$name$7282$XW@M@ g$x$7279$XW@M@)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6604$XW@M@)))
                                  (case-lambda
                                    ((g$p$7285$XW@M@ g$e$7286$XW@M@)
                                     ((case-lambda
                                        ((g$e$7287$XW@M@ g$p$7288$XW@M@)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7288$XW@M@)
                                           (write g$x$7279$XW@M@ g$p$7288$XW@M@)
                                           (display '" in file " g$p$7288$XW@M@)
                                           (display
                                             g$file-name$7280$XW@M@
                                             g$p$7288$XW@M@)
                                           (display '", found " g$p$7288$XW@M@)
                                           (write
                                             g$name$7282$XW@M@
                                             g$p$7288$XW@M@)
                                           (display '" instead" g$p$7288$XW@M@)
                                           (g$e$7287$XW@M@))))
                                      g$e$7286$XW@M@
                                      g$p$7285$XW@M@)))))))))))))
                 (g$try-load-from-file$7186$XW@M@ g$file-name$7280$XW@M@)))))
           ((g$file-locator$7183$XW@M@) g$x$7279$XW@M@))))
       (case-lambda
         ((g$f$7289$XW@M@)
          (if (procedure? g$f$7289$XW@M@)
            g$f$7289$XW@M@
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7289$XW@M@))))))
   (g$current-library-expander$7188$XW@M@
     g$current-library-expander$7392$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         ((g$x$7290$XW@M@)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7291$XW@M@)
          (if (procedure? g$f$7291$XW@M@)
            g$f$7291$XW@M@
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7291$XW@M@))))))
   (g$external-pending-libraries$7189$XW@M@
     g$external-pending-libraries$7393$XW@M@
     (g$make-parameter$6854$XW@M@ '()))
   (g$find-external-library$7190$XW@M@
     g$find-external-library$7394$XW@M@
     (case-lambda
       ((g$name$7292$XW@M@)
        (begin
          (if (g$member$5867$XW@M@
                g$name$7292$XW@M@
                (g$external-pending-libraries$7189$XW@M@))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7292$XW@M@)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7295$XW@M@
                g$external-pending-libraries$7296$XW@M@)
              ((case-lambda
                 ((g$swap$7297$XW@M@)
                  (dynamic-wind
                    g$swap$7297$XW@M@
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7187$XW@M@) g$name$7292$XW@M@)
                         ((case-lambda
                            ((g$t$7298$XW@M@)
                             (if g$t$7298$XW@M@
                               g$t$7298$XW@M@
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7292$XW@M@)))))
                          (g$find-library-by$7179$XW@M@
                            (case-lambda
                              ((g$x$7299$XW@M@)
                               (equal?
                                 (g$library-name$7150$XW@M@ g$x$7299$XW@M@)
                                 g$name$7292$XW@M@))))))))
                    g$swap$7297$XW@M@)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7300$XW@M@)
                      (begin
                        (g$external-pending-libraries$7295$XW@M@
                          g$external-pending-libraries$7296$XW@M@)
                        (set! g$external-pending-libraries$7296$XW@M@
                          g$t$7300$XW@M@))))
                   (g$external-pending-libraries$7295$XW@M@)))))))
           g$external-pending-libraries$7189$XW@M@
           (cons
             g$name$7292$XW@M@
             (g$external-pending-libraries$7189$XW@M@)))))))
   (g$find-library-by-name$7191$XW@M@
     g$find-library-by-name$7395$XW@M@
     (case-lambda
       ((g$name$7301$XW@M@)
        ((case-lambda
           ((g$t$7302$XW@M@)
            (if g$t$7302$XW@M@
              g$t$7302$XW@M@
              (begin
                '#f
                (g$find-external-library$7190$XW@M@ g$name$7301$XW@M@)))))
         (g$find-library-by$7179$XW@M@
           (case-lambda
             ((g$x$7303$XW@M@)
              (equal?
                (g$library-name$7150$XW@M@ g$x$7303$XW@M@)
                g$name$7301$XW@M@))))))))
   (g$library-exists?$7192$XW@M@
     g$library-exists?$7396$XW@M@
     (case-lambda
       ((g$name$7304$XW@M@)
        (if (g$find-library-by$7179$XW@M@
              (case-lambda
                ((g$x$7305$XW@M@)
                 (equal?
                   (g$library-name$7150$XW@M@ g$x$7305$XW@M@)
                   g$name$7304$XW@M@))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7193$XW@M@
     g$find-library-by-spec/die$7397$XW@M@
     (case-lambda
       ((g$spec$7306$XW@M@)
        ((case-lambda
           ((g$id$7307$XW@M@)
            ((case-lambda
               ((g$t$7308$XW@M@)
                (if g$t$7308$XW@M@
                  g$t$7308$XW@M@
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7306$XW@M@)))))
             (g$find-library-by$7179$XW@M@
               (case-lambda
                 ((g$x$7309$XW@M@)
                  (eq? g$id$7307$XW@M@
                       (g$library-id$7149$XW@M@ g$x$7309$XW@M@))))))))
         (car g$spec$7306$XW@M@)))))
   (g$label->binding-table$7194$XW@M@
     g$label->binding-table$7398$XW@M@
     (g$make-eq-hashtable$5664$XW@M@))
   (g$install-library-record$7195$XW@M@
     g$install-library-record$7399$XW@M@
     (case-lambda
       ((g$lib$7310$XW@M@)
        (begin
          ((case-lambda
             ((g$exp-env$7311$XW@M@)
              (for-each
                (case-lambda
                  ((g$x$7312$XW@M@)
                   ((case-lambda
                      ((g$label$7313$XW@M@ g$binding$7314$XW@M@)
                       ((case-lambda
                          ((g$binding$7315$XW@M@)
                           (g$hashtable-set!$5668$XW@M@
                             g$label->binding-table$7194$XW@M@
                             g$label$7313$XW@M@
                             g$binding$7315$XW@M@)))
                        ((case-lambda
                           ((g$t$7316$XW@M@)
                            (if (eqv? g$t$7316$XW@M@ 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$7310$XW@M@
                                  (cdr g$binding$7314$XW@M@)))
                              (if (eqv? g$t$7316$XW@M@ 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7310$XW@M@
                                    (cdr g$binding$7314$XW@M@)))
                                (if (eqv? g$t$7316$XW@M@ 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7310$XW@M@
                                      (cdr g$binding$7314$XW@M@)))
                                  g$binding$7314$XW@M@)))))
                         (car g$binding$7314$XW@M@)))))
                    (car g$x$7312$XW@M@)
                    (cdr g$x$7312$XW@M@))))
                g$exp-env$7311$XW@M@)))
           (g$library-env$7156$XW@M@ g$lib$7310$XW@M@))
          ((g$current-library-collection$7143$XW@M@) g$lib$7310$XW@M@)))))
   (g$install-library$7196$XW@M@
     g$install-library$7400$XW@M@
     (case-lambda
       ((g$id$7317$XW@M@
          g$name$7318$XW@M@
          g$ver$7319$XW@M@
          g$imp*$7320$XW@M@
          g$vis*$7321$XW@M@
          g$inv*$7322$XW@M@
          g$exp-subst$7323$XW@M@
          g$exp-env$7324$XW@M@
          g$visit-proc$7325$XW@M@
          g$invoke-proc$7326$XW@M@
          g$visit-code$7327$XW@M@
          g$invoke-code$7328$XW@M@
          g$visible?$7329$XW@M@
          g$source-file-name$7330$XW@M@)
        ((case-lambda
           ((g$imp-lib*$7331$XW@M@ g$vis-lib*$7332$XW@M@ g$inv-lib*$7333$XW@M@)
            (begin
              (if (if (symbol? g$id$7317$XW@M@)
                    (if (list? g$name$7318$XW@M@)
                      (begin '#f (list? g$ver$7319$XW@M@))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7317$XW@M@
                  g$name$7318$XW@M@
                  g$ver$7319$XW@M@))
              (if (g$library-exists?$7192$XW@M@ g$name$7318$XW@M@)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7318$XW@M@)
                (void))
              ((case-lambda
                 ((g$lib$7334$XW@M@)
                  (g$install-library-record$7195$XW@M@ g$lib$7334$XW@M@)))
               (g$make-library$7148$XW@M@
                 g$id$7317$XW@M@
                 g$name$7318$XW@M@
                 g$ver$7319$XW@M@
                 g$imp-lib*$7331$XW@M@
                 g$vis-lib*$7332$XW@M@
                 g$inv-lib*$7333$XW@M@
                 g$exp-subst$7323$XW@M@
                 g$exp-env$7324$XW@M@
                 g$visit-proc$7325$XW@M@
                 g$invoke-proc$7326$XW@M@
                 g$visit-code$7327$XW@M@
                 g$invoke-code$7328$XW@M@
                 g$visible?$7329$XW@M@
                 g$source-file-name$7330$XW@M@)))))
         (map g$find-library-by-spec/die$7193$XW@M@ g$imp*$7320$XW@M@)
         (map g$find-library-by-spec/die$7193$XW@M@ g$vis*$7321$XW@M@)
         (map g$find-library-by-spec/die$7193$XW@M@ g$inv*$7322$XW@M@)))))
   (g$imported-label->binding$7197$XW@M@
     g$imported-label->binding$7401$XW@M@
     (case-lambda
       ((g$lab$7335$XW@M@)
        (g$hashtable-ref$5667$XW@M@
          g$label->binding-table$7194$XW@M@
          g$lab$7335$XW@M@
          '#f))))
   (g$invoke-library$7198$XW@M@
     g$invoke-library$7402$XW@M@
     (case-lambda
       ((g$lib$7336$XW@M@)
        ((case-lambda
           ((g$invoke$7337$XW@M@)
            (if (procedure? g$invoke$7337$XW@M@)
              (begin
                (g$set-library-invoke-state!$7172$XW@M@
                  g$lib$7336$XW@M@
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7336$XW@M@))))
                (for-each
                  g$invoke-library$7198$XW@M@
                  (g$library-inv*$7154$XW@M@ g$lib$7336$XW@M@))
                (g$set-library-invoke-state!$7172$XW@M@
                  g$lib$7336$XW@M@
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7336$XW@M@))))
                (g$invoke$7337$XW@M@)
                (g$set-library-invoke-state!$7172$XW@M@ g$lib$7336$XW@M@ '#t))
              (void))))
         (g$library-invoke-state$7158$XW@M@ g$lib$7336$XW@M@)))))
   (g$visit-library$7199$XW@M@
     g$visit-library$7403$XW@M@
     (case-lambda
       ((g$lib$7338$XW@M@)
        ((case-lambda
           ((g$visit$7339$XW@M@)
            (if (procedure? g$visit$7339$XW@M@)
              (begin
                (g$set-library-visit-state!$7171$XW@M@
                  g$lib$7338$XW@M@
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7338$XW@M@))))
                (for-each
                  g$invoke-library$7198$XW@M@
                  (g$library-vis*$7153$XW@M@ g$lib$7338$XW@M@))
                (g$set-library-visit-state!$7171$XW@M@
                  g$lib$7338$XW@M@
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7338$XW@M@))))
                (g$visit$7339$XW@M@)
                (g$set-library-visit-state!$7171$XW@M@ g$lib$7338$XW@M@ '#t))
              (void))))
         (g$library-visit-state$7157$XW@M@ g$lib$7338$XW@M@)))))
   (g$invoke-library-by-spec$7200$XW@M@
     g$invoke-library-by-spec$7404$XW@M@
     (case-lambda
       ((g$spec$7340$XW@M@)
        (g$invoke-library$7198$XW@M@
          (g$find-library-by-spec/die$7193$XW@M@ g$spec$7340$XW@M@)))))
   (g$installed-libraries$7201$XW@M@
     g$installed-libraries$7405$XW@M@
     (case-lambda
       ((g$all?$7341$XW@M@)
        ((letrec ((g$f$7342$XW@M@
                    (case-lambda
                      ((g$ls$7343$XW@M@)
                       (if (null? g$ls$7343$XW@M@)
                         '()
                         (if ((case-lambda
                                ((g$t$7344$XW@M@)
                                 (if g$t$7344$XW@M@
                                   g$t$7344$XW@M@
                                   (begin
                                     '#f
                                     (g$library-visible?$7161$XW@M@
                                       (car g$ls$7343$XW@M@))))))
                              g$all?$7341$XW@M@)
                           (cons
                             (car g$ls$7343$XW@M@)
                             (g$f$7342$XW@M@ (cdr g$ls$7343$XW@M@)))
                           (g$f$7342$XW@M@ (cdr g$ls$7343$XW@M@))))))))
           g$f$7342$XW@M@)
         ((g$current-library-collection$7143$XW@M@))))
       (() (g$installed-libraries$7201$XW@M@ '#f))))
   (g$library-spec$7202$XW@M@
     g$library-spec$7406$XW@M@
     (case-lambda
       ((g$x$7345$XW@M@)
        (begin
          (if (g$library?$7147$XW@M@ g$x$7345$XW@M@)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$7345$XW@M@))
          (list
            (g$library-id$7149$XW@M@ g$x$7345$XW@M@)
            (g$library-name$7150$XW@M@ g$x$7345$XW@M@)
            (g$library-version$7151$XW@M@ g$x$7345$XW@M@)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7407$XW@M@
     g$build-global-define$7517$XW@M@
     (case-lambda ((g$x$7488$XW@M@) (g$build-void$7484$XW@M@))))
   (g$build-lambda$7456$XW@M@
     g$build-lambda$7518$XW@M@
     (case-lambda
       ((g$ae$7489$XW@M@ g$vars$7490$XW@M@ g$exp$7491$XW@M@)
        (list 'case-lambda (list g$vars$7490$XW@M@ g$exp$7491$XW@M@)))))
   (g$build-case-lambda$7457$XW@M@
     g$build-case-lambda$7519$XW@M@
     (case-lambda
       ((g$ae$7492$XW@M@ g$vars*$7493$XW@M@ g$exp*$7494$XW@M@)
        (cons 'case-lambda (map list g$vars*$7493$XW@M@ g$exp*$7494$XW@M@)))))
   (g$build-let$7458$XW@M@
     g$build-let$7520$XW@M@
     (case-lambda
       ((g$ae$7495$XW@M@ g$lhs*$7496$XW@M@ g$rhs*$7497$XW@M@ g$body$7498$XW@M@)
        (cons
          (g$build-lambda$7456$XW@M@
            g$ae$7495$XW@M@
            g$lhs*$7496$XW@M@
            g$body$7498$XW@M@)
          g$rhs*$7497$XW@M@))))
   (g$build-sequence$7483$XW@M@
     g$build-sequence$7521$XW@M@
     (case-lambda
       ((g$ae$7499$XW@M@ g$exps$7500$XW@M@)
        ((letrec ((g$loop$7501$XW@M@
                    (case-lambda
                      ((g$exps$7502$XW@M@)
                       (if (null? (cdr g$exps$7502$XW@M@))
                         (car g$exps$7502$XW@M@)
                         (if (equal?
                               (car g$exps$7502$XW@M@)
                               (g$build-void$7484$XW@M@))
                           (g$loop$7501$XW@M@ (cdr g$exps$7502$XW@M@))
                           (cons 'begin g$exps$7502$XW@M@)))))))
           g$loop$7501$XW@M@)
         g$exps$7500$XW@M@))))
   (g$build-void$7484$XW@M@
     g$build-void$7522$XW@M@
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7485$XW@M@
     g$build-letrec$7523$XW@M@
     (case-lambda
       ((g$ae$7503$XW@M@
          g$vars$7504$XW@M@
          g$val-exps$7505$XW@M@
          g$body-exp$7506$XW@M@)
        (if (null? g$vars$7504$XW@M@)
          g$body-exp$7506$XW@M@
          (list
            'letrec
            (map list g$vars$7504$XW@M@ g$val-exps$7505$XW@M@)
            g$body-exp$7506$XW@M@)))))
   (g$build-letrec*$7486$XW@M@
     g$build-letrec*$7524$XW@M@
     (case-lambda
       ((g$ae$7507$XW@M@
          g$vars$7508$XW@M@
          g$val-exps$7509$XW@M@
          g$body-exp$7510$XW@M@)
        (if (null? g$vars$7508$XW@M@)
          g$body-exp$7510$XW@M@
          (list
            'letrec*
            (map list g$vars$7508$XW@M@ g$val-exps$7509$XW@M@)
            g$body-exp$7510$XW@M@)))))
   (g$build-library-letrec*$7487$XW@M@
     g$build-library-letrec*$7525$XW@M@
     (case-lambda
       ((g$ae$7511$XW@M@
          g$name$7512$XW@M@
          g$vars$7513$XW@M@
          g$locs$7514$XW@M@
          g$val-exps$7515$XW@M@
          g$body-exp$7516$XW@M@)
        (list
          'library-letrec*
          g$name$7512$XW@M@
          (map list g$vars$7513$XW@M@ g$locs$7514$XW@M@ g$val-exps$7515$XW@M@)
          g$body-exp$7516$XW@M@)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7526$XW@M@
     g$set-cons$11169$XW@M@
     (case-lambda
       ((g$x$7979$XW@M@ g$ls$7980$XW@M@)
        (if (memq g$x$7979$XW@M@ g$ls$7980$XW@M@)
          g$ls$7980$XW@M@
          (cons g$x$7979$XW@M@ g$ls$7980$XW@M@)))))
   (g$set-union$7527$XW@M@
     g$set-union$11170$XW@M@
     (case-lambda
       ((g$ls1$7981$XW@M@ g$ls2$7982$XW@M@)
        (if (null? g$ls1$7981$XW@M@)
          g$ls2$7982$XW@M@
          (if (memq (car g$ls1$7981$XW@M@) g$ls2$7982$XW@M@)
            (g$set-union$7527$XW@M@ (cdr g$ls1$7981$XW@M@) g$ls2$7982$XW@M@)
            (cons
              (car g$ls1$7981$XW@M@)
              (g$set-union$7527$XW@M@
                (cdr g$ls1$7981$XW@M@)
                g$ls2$7982$XW@M@)))))))
   (g$top-mark*$7529$XW@M@ g$top-mark*$11171$XW@M@ '(top))
   (g$top-marked?$7530$XW@M@
     g$top-marked?$11172$XW@M@
     (case-lambda ((g$m*$7983$XW@M@) (memq 'top g$m*$7983$XW@M@))))
   (g$gen-lexical$7531$XW@M@
     g$gen-lexical$11173$XW@M@
     (case-lambda
       ((g$sym$7984$XW@M@)
        (if (symbol? g$sym$7984$XW@M@)
          (gensym g$sym$7984$XW@M@)
          (if (g$stx?$7559$XW@M@ g$sym$7984$XW@M@)
            (g$gen-lexical$7531$XW@M@ (g$id->sym$7588$XW@M@ g$sym$7984$XW@M@))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7984$XW@M@))))))
   (g$gen-global$7532$XW@M@
     g$gen-global$11174$XW@M@
     (case-lambda
       ((g$x$7985$XW@M@) (g$gen-lexical$7531$XW@M@ g$x$7985$XW@M@))))
   (g$gen-label$7533$XW@M@
     g$gen-label$11175$XW@M@
     (case-lambda ((g$_$7986$XW@M@) (gensym))))
   (g$gen-top-level-label$7534$XW@M@
     g$gen-top-level-label$11176$XW@M@
     (case-lambda
       ((g$id$7987$XW@M@ g$rib$7988$XW@M@)
        (letrec* ((g$find$7989$XW@M@
                    (case-lambda
                      ((g$sym$7995$XW@M@
                         g$mark*$7996$XW@M@
                         g$sym*$7997$XW@M@
                         g$mark**$7998$XW@M@
                         g$label*$7999$XW@M@)
                       (if (pair? g$sym*$7997$XW@M@)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7995$XW@M@
                                        (car g$sym*$7997$XW@M@))
                                 (begin
                                   '#f
                                   (g$same-marks?$7589$XW@M@
                                     g$mark*$7996$XW@M@
                                     (car g$mark**$7998$XW@M@)))
                                 '#f)
                             (car g$label*$7999$XW@M@)
                             (g$find$7989$XW@M@
                               g$sym$7995$XW@M@
                               g$mark*$7996$XW@M@
                               (cdr g$sym*$7997$XW@M@)
                               (cdr g$mark**$7998$XW@M@)
                               (cdr g$label*$7999$XW@M@))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7990$XW@M@ g$mark*$7991$XW@M@)
              ((case-lambda
                 ((g$sym*$7992$XW@M@)
                  ((case-lambda
                     ((g$t$7993$XW@M@)
                      (if g$t$7993$XW@M@
                        ((case-lambda
                           ((g$label$7994$XW@M@)
                            (if (g$imported-label->binding$7401$XW@M@
                                  g$label$7994$XW@M@)
                              (gensym)
                              g$label$7994$XW@M@)))
                         g$t$7993$XW@M@)
                        (gensym))))
                   (if (memq
                         g$sym$7990$XW@M@
                         (g$rib-sym*$7542$XW@M@ g$rib$7988$XW@M@))
                     (begin
                       '#f
                       (g$find$7989$XW@M@
                         g$sym$7990$XW@M@
                         g$mark*$7991$XW@M@
                         g$sym*$7992$XW@M@
                         (g$rib-mark**$7543$XW@M@ g$rib$7988$XW@M@)
                         (g$rib-label*$7544$XW@M@ g$rib$7988$XW@M@)))
                     '#f))))
               (g$rib-sym*$7542$XW@M@ g$rib$7988$XW@M@))))
           (g$id->sym$7588$XW@M@ g$id$7987$XW@M@)
           (g$stx-mark*$7562$XW@M@ g$id$7987$XW@M@))))))
   (g$gen-define-label+loc$7535$XW@M@
     g$gen-define-label+loc$11177$XW@M@
     (case-lambda
       ((g$id$8000$XW@M@ g$rib$8001$XW@M@)
        ((case-lambda
           ((g$t$8002$XW@M@)
            (if g$t$8002$XW@M@
              ((case-lambda
                 ((g$env$8003$XW@M@)
                  ((case-lambda
                     ((g$label$8004$XW@M@ g$locs$8005$XW@M@)
                      (values
                        g$label$8004$XW@M@
                        ((case-lambda
                           ((g$t$8006$XW@M@)
                            (if g$t$8006$XW@M@
                              (cdr g$t$8006$XW@M@)
                              ((case-lambda
                                 ((g$loc$8007$XW@M@)
                                  (begin
                                    (g$set-interaction-env-locs!$7948$XW@M@
                                      g$env$8003$XW@M@
                                      (cons
                                        (cons
                                          g$label$8004$XW@M@
                                          g$loc$8007$XW@M@)
                                        g$locs$8005$XW@M@))
                                    g$loc$8007$XW@M@)))
                               (g$gen-lexical$7531$XW@M@ g$id$8000$XW@M@)))))
                         (assq g$label$8004$XW@M@ g$locs$8005$XW@M@)))))
                   (g$gen-top-level-label$7534$XW@M@
                     g$id$8000$XW@M@
                     g$rib$8001$XW@M@)
                   (g$interaction-env-locs$7945$XW@M@ g$env$8003$XW@M@))))
               g$t$8002$XW@M@)
              (values (gensym) (g$gen-lexical$7531$XW@M@ g$id$8000$XW@M@)))))
         (g$top-level-context$7978$XW@M@)))))
   (g$gen-define-label$7536$XW@M@
     g$gen-define-label$11178$XW@M@
     (case-lambda
       ((g$id$8008$XW@M@ g$rib$8009$XW@M@)
        (if (g$top-level-context$7978$XW@M@)
          (g$gen-top-level-label$7534$XW@M@ g$id$8008$XW@M@ g$rib$8009$XW@M@)
          (gensym)))))
   (g$8457$7537$XW@M@
     g$8457$11179$XW@M@
     (make-record-type-descriptor
       'rib
       '#f
       'g$8460$XW@M@
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8459$7538$XW@M@ g$8459$11180$XW@M@ '#f)
   (g$8458$7539$XW@M@
     g$8458$11181$XW@M@
     (make-record-constructor-descriptor
       g$8457$7537$XW@M@
       '#f
       g$8459$7538$XW@M@))
   (g$rib?$7540$XW@M@
     g$rib?$11182$XW@M@
     (record-predicate g$8457$7537$XW@M@))
   (g$make-rib$7541$XW@M@
     g$make-rib$11183$XW@M@
     (record-constructor g$8458$7539$XW@M@))
   (g$rib-sym*$7542$XW@M@
     g$rib-sym*$11184$XW@M@
     (record-accessor g$8457$7537$XW@M@ '0))
   (g$rib-mark**$7543$XW@M@
     g$rib-mark**$11185$XW@M@
     (record-accessor g$8457$7537$XW@M@ '1))
   (g$rib-label*$7544$XW@M@
     g$rib-label*$11186$XW@M@
     (record-accessor g$8457$7537$XW@M@ '2))
   (g$rib-sealed/freq$7545$XW@M@
     g$rib-sealed/freq$11187$XW@M@
     (record-accessor g$8457$7537$XW@M@ '3))
   (g$set-rib-sym*!$7546$XW@M@
     g$set-rib-sym*!$11188$XW@M@
     (record-mutator g$8457$7537$XW@M@ '0))
   (g$set-rib-mark**!$7547$XW@M@
     g$set-rib-mark**!$11189$XW@M@
     (record-mutator g$8457$7537$XW@M@ '1))
   (g$set-rib-label*!$7548$XW@M@
     g$set-rib-label*!$11190$XW@M@
     (record-mutator g$8457$7537$XW@M@ '2))
   (g$set-rib-sealed/freq!$7549$XW@M@
     g$set-rib-sealed/freq!$11191$XW@M@
     (record-mutator g$8457$7537$XW@M@ '3))
   (g$make-empty-rib$7550$XW@M@
     g$make-empty-rib$11192$XW@M@
     (case-lambda (() (g$make-rib$7541$XW@M@ '() '() '() '#f))))
   (g$extend-rib!$7551$XW@M@
     g$extend-rib!$11193$XW@M@
     (case-lambda
       ((g$rib$8010$XW@M@ g$id$8011$XW@M@ g$label$8012$XW@M@)
        (letrec* ((g$find$8013$XW@M@
                    (case-lambda
                      ((g$sym$8019$XW@M@
                         g$mark*$8020$XW@M@
                         g$sym*$8021$XW@M@
                         g$mark**$8022$XW@M@
                         g$label*$8023$XW@M@)
                       (if (pair? g$sym*$8021$XW@M@)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8019$XW@M@
                                        (car g$sym*$8021$XW@M@))
                                 (begin
                                   '#f
                                   (g$same-marks?$7589$XW@M@
                                     g$mark*$8020$XW@M@
                                     (car g$mark**$8022$XW@M@)))
                                 '#f)
                             g$label*$8023$XW@M@
                             (g$find$8013$XW@M@
                               g$sym$8019$XW@M@
                               g$mark*$8020$XW@M@
                               (cdr g$sym*$8021$XW@M@)
                               (cdr g$mark**$8022$XW@M@)
                               (cdr g$label*$8023$XW@M@))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7545$XW@M@ g$rib$8010$XW@M@)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8010$XW@M@)
              (void))
            ((case-lambda
               ((g$sym$8014$XW@M@ g$mark*$8015$XW@M@)
                ((case-lambda
                   ((g$sym*$8016$XW@M@)
                    ((case-lambda
                       ((g$t$8017$XW@M@)
                        (if g$t$8017$XW@M@
                          ((case-lambda
                             ((g$p$8018$XW@M@)
                              (if (eq? g$label$8012$XW@M@ (car g$p$8018$XW@M@))
                                (void)
                                (if (g$top-level-context$7978$XW@M@)
                                  (set-car! g$p$8018$XW@M@ g$label$8012$XW@M@)
                                  (g$syntax-violation$7971$XW@M@
                                    '#f
                                    '"cannot redefine"
                                    g$id$8011$XW@M@)))))
                           g$t$8017$XW@M@)
                          (begin
                            (g$set-rib-sym*!$7546$XW@M@
                              g$rib$8010$XW@M@
                              (cons g$sym$8014$XW@M@ g$sym*$8016$XW@M@))
                            (g$set-rib-mark**!$7547$XW@M@
                              g$rib$8010$XW@M@
                              (cons
                                g$mark*$8015$XW@M@
                                (g$rib-mark**$7543$XW@M@ g$rib$8010$XW@M@)))
                            (g$set-rib-label*!$7548$XW@M@
                              g$rib$8010$XW@M@
                              (cons
                                g$label$8012$XW@M@
                                (g$rib-label*$7544$XW@M@ g$rib$8010$XW@M@)))))))
                     (if (memq
                           g$sym$8014$XW@M@
                           (g$rib-sym*$7542$XW@M@ g$rib$8010$XW@M@))
                       (begin
                         '#f
                         (g$find$8013$XW@M@
                           g$sym$8014$XW@M@
                           g$mark*$8015$XW@M@
                           g$sym*$8016$XW@M@
                           (g$rib-mark**$7543$XW@M@ g$rib$8010$XW@M@)
                           (g$rib-label*$7544$XW@M@ g$rib$8010$XW@M@)))
                       '#f))))
                 (g$rib-sym*$7542$XW@M@ g$rib$8010$XW@M@))))
             (g$id->sym$7588$XW@M@ g$id$8011$XW@M@)
             (g$stx-mark*$7562$XW@M@ g$id$8011$XW@M@)))))))
   (g$make-rib-map$7552$XW@M@
     g$make-rib-map$11194$XW@M@
     (case-lambda
       ((g$sym*$8024$XW@M@)
        ((case-lambda
           ((g$ht$8025$XW@M@)
            ((letrec ((g$f$8026$XW@M@
                        (case-lambda
                          ((g$i$8027$XW@M@ g$sym*$8028$XW@M@)
                           (if (null? g$sym*$8028$XW@M@)
                             g$ht$8025$XW@M@
                             (begin
                               (g$hashtable-update!$5671$XW@M@
                                 g$ht$8025$XW@M@
                                 (car g$sym*$8028$XW@M@)
                                 (case-lambda
                                   ((g$x$8029$XW@M@)
                                    (cons g$i$8027$XW@M@ g$x$8029$XW@M@)))
                                 '())
                               (g$f$8026$XW@M@
                                 (+ g$i$8027$XW@M@ '1)
                                 (cdr g$sym*$8028$XW@M@))))))))
               g$f$8026$XW@M@)
             '0
             g$sym*$8024$XW@M@)))
         (g$make-eq-hashtable$5664$XW@M@)))))
   (g$seal-rib!$7553$XW@M@
     g$seal-rib!$11195$XW@M@
     (case-lambda
       ((g$rib$8030$XW@M@)
        ((case-lambda
           ((g$sym*$8031$XW@M@)
            (if (null? g$sym*$8031$XW@M@)
              (void)
              (begin
                (g$set-rib-sym*!$7546$XW@M@
                  g$rib$8030$XW@M@
                  (list->vector g$sym*$8031$XW@M@))
                (g$set-rib-mark**!$7547$XW@M@
                  g$rib$8030$XW@M@
                  (list->vector (g$rib-mark**$7543$XW@M@ g$rib$8030$XW@M@)))
                (g$set-rib-label*!$7548$XW@M@
                  g$rib$8030$XW@M@
                  (list->vector (g$rib-label*$7544$XW@M@ g$rib$8030$XW@M@)))
                (g$set-rib-sealed/freq!$7549$XW@M@
                  g$rib$8030$XW@M@
                  (g$make-rib-map$7552$XW@M@ g$sym*$8031$XW@M@))))))
         (g$rib-sym*$7542$XW@M@ g$rib$8030$XW@M@)))))
   (g$unseal-rib!$7554$XW@M@
     g$unseal-rib!$11196$XW@M@
     (case-lambda
       ((g$rib$8032$XW@M@)
        (if (g$rib-sealed/freq$7545$XW@M@ g$rib$8032$XW@M@)
          (begin
            (g$set-rib-sealed/freq!$7549$XW@M@ g$rib$8032$XW@M@ '#f)
            (g$set-rib-sym*!$7546$XW@M@
              g$rib$8032$XW@M@
              (vector->list (g$rib-sym*$7542$XW@M@ g$rib$8032$XW@M@)))
            (g$set-rib-mark**!$7547$XW@M@
              g$rib$8032$XW@M@
              (vector->list (g$rib-mark**$7543$XW@M@ g$rib$8032$XW@M@)))
            (g$set-rib-label*!$7548$XW@M@
              g$rib$8032$XW@M@
              (vector->list (g$rib-label*$7544$XW@M@ g$rib$8032$XW@M@))))
          (void)))))
   (g$make-full-rib$7555$XW@M@
     g$make-full-rib$11197$XW@M@
     (case-lambda
       ((g$id*$8033$XW@M@ g$label*$8034$XW@M@)
        ((case-lambda
           ((g$r$8035$XW@M@)
            (begin (g$seal-rib!$7553$XW@M@ g$r$8035$XW@M@) g$r$8035$XW@M@)))
         (g$make-rib$7541$XW@M@
           (map g$id->sym$7588$XW@M@ g$id*$8033$XW@M@)
           (map g$stx-mark*$7562$XW@M@ g$id*$8033$XW@M@)
           g$label*$8034$XW@M@
           '#f)))))
   (g$8483$7556$XW@M@
     g$8483$11198$XW@M@
     (make-record-type-descriptor
       'stx
       '#f
       'g$8486$XW@M@
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8485$7557$XW@M@ g$8485$11199$XW@M@ '#f)
   (g$8484$7558$XW@M@
     g$8484$11200$XW@M@
     (make-record-constructor-descriptor
       g$8483$7556$XW@M@
       '#f
       g$8485$7557$XW@M@))
   (g$stx?$7559$XW@M@
     g$stx?$11201$XW@M@
     (record-predicate g$8483$7556$XW@M@))
   (g$make-stx$7560$XW@M@
     g$make-stx$11202$XW@M@
     (record-constructor g$8484$7558$XW@M@))
   (g$stx-expr$7561$XW@M@
     g$stx-expr$11203$XW@M@
     (record-accessor g$8483$7556$XW@M@ '0))
   (g$stx-mark*$7562$XW@M@
     g$stx-mark*$11204$XW@M@
     (record-accessor g$8483$7556$XW@M@ '1))
   (g$stx-subst*$7563$XW@M@
     g$stx-subst*$11205$XW@M@
     (record-accessor g$8483$7556$XW@M@ '2))
   (g$stx-ae*$7564$XW@M@
     g$stx-ae*$11206$XW@M@
     (record-accessor g$8483$7556$XW@M@ '3))
   (g$set-stx-expr!$7565$XW@M@
     g$set-stx-expr!$11207$XW@M@
     (record-mutator g$8483$7556$XW@M@ '0))
   (g$set-stx-mark*!$7566$XW@M@
     g$set-stx-mark*!$11208$XW@M@
     (record-mutator g$8483$7556$XW@M@ '1))
   (g$set-stx-subst*!$7567$XW@M@
     g$set-stx-subst*!$11209$XW@M@
     (record-mutator g$8483$7556$XW@M@ '2))
   (g$set-stx-ae*!$7568$XW@M@
     g$set-stx-ae*!$11210$XW@M@
     (record-mutator g$8483$7556$XW@M@ '3))
   (g$rp$7569$XW@M@
     g$rp$11211$XW@M@
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8036$XW@M@ g$p$8037$XW@M@)
          (begin
            (display '"#<syntax " g$p$8037$XW@M@)
            (write (g$stx->datum$7598$XW@M@ g$x$8036$XW@M@) g$p$8037$XW@M@)
            ((case-lambda
               ((g$expr$8038$XW@M@)
                (if (annotation? g$expr$8038$XW@M@)
                  ((case-lambda
                     ((g$src$8039$XW@M@)
                      (if (pair? g$src$8039$XW@M@)
                        (begin
                          (display '" [" g$p$8037$XW@M@)
                          (display (cdr g$src$8039$XW@M@) g$p$8037$XW@M@)
                          (display '" of " g$p$8037$XW@M@)
                          (display (car g$src$8039$XW@M@) g$p$8037$XW@M@)
                          (display '"]" g$p$8037$XW@M@))
                        (void))))
                   (annotation-source g$expr$8038$XW@M@))
                  (void))))
             (g$stx-expr$7561$XW@M@ g$x$8036$XW@M@))
            (display '">" g$p$8037$XW@M@))))))
   (g$datum->stx$7570$XW@M@
     g$datum->stx$11212$XW@M@
     (case-lambda
       ((g$id$8040$XW@M@ g$datum$8041$XW@M@)
        (g$make-stx$7560$XW@M@
          g$datum$8041$XW@M@
          (g$stx-mark*$7562$XW@M@ g$id$8040$XW@M@)
          (g$stx-subst*$7563$XW@M@ g$id$8040$XW@M@)
          (g$stx-ae*$7564$XW@M@ g$id$8040$XW@M@)))))
   (g$gen-mark$7571$XW@M@
     g$gen-mark$11213$XW@M@
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7572$XW@M@ g$anti-mark$11214$XW@M@ '#f)
   (g$anti-mark?$7573$XW@M@ g$anti-mark?$11215$XW@M@ not)
   (g$join-wraps$7574$XW@M@
     g$join-wraps$11216$XW@M@
     (case-lambda
       ((g$m1*$8042$XW@M@ g$s1*$8043$XW@M@ g$ae1*$8044$XW@M@ g$e$8045$XW@M@)
        (letrec* ((g$cancel$8046$XW@M@
                    (case-lambda
                      ((g$ls1$8050$XW@M@ g$ls2$8051$XW@M@)
                       ((letrec ((g$f$8052$XW@M@
                                   (case-lambda
                                     ((g$x$8053$XW@M@ g$ls1$8054$XW@M@)
                                      (if (null? g$ls1$8054$XW@M@)
                                        (cdr g$ls2$8051$XW@M@)
                                        (cons
                                          g$x$8053$XW@M@
                                          (g$f$8052$XW@M@
                                            (car g$ls1$8054$XW@M@)
                                            (cdr g$ls1$8054$XW@M@))))))))
                          g$f$8052$XW@M@)
                        (car g$ls1$8050$XW@M@)
                        (cdr g$ls1$8050$XW@M@))))))
          ((case-lambda
             ((g$m2*$8047$XW@M@ g$s2*$8048$XW@M@ g$ae2*$8049$XW@M@)
              (if (if (not (null? g$m1*$8042$XW@M@))
                    (if (not (null? g$m2*$8047$XW@M@))
                      (begin
                        '#f
                        (g$anti-mark?$7573$XW@M@ (car g$m2*$8047$XW@M@)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8046$XW@M@ g$m1*$8042$XW@M@ g$m2*$8047$XW@M@)
                  (g$cancel$8046$XW@M@ g$s1*$8043$XW@M@ g$s2*$8048$XW@M@)
                  (g$cancel$8046$XW@M@ g$ae1*$8044$XW@M@ g$ae2*$8049$XW@M@))
                (values
                  (append g$m1*$8042$XW@M@ g$m2*$8047$XW@M@)
                  (append g$s1*$8043$XW@M@ g$s2*$8048$XW@M@)
                  (append g$ae1*$8044$XW@M@ g$ae2*$8049$XW@M@)))))
           (g$stx-mark*$7562$XW@M@ g$e$8045$XW@M@)
           (g$stx-subst*$7563$XW@M@ g$e$8045$XW@M@)
           (g$stx-ae*$7564$XW@M@ g$e$8045$XW@M@))))))
   (g$mkstx$7575$XW@M@
     g$mkstx$11217$XW@M@
     (case-lambda
       ((g$e$8055$XW@M@ g$m*$8056$XW@M@ g$s*$8057$XW@M@ g$ae*$8058$XW@M@)
        (if (g$stx?$7559$XW@M@ g$e$8055$XW@M@)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7574$XW@M@
                 g$m*$8056$XW@M@
                 g$s*$8057$XW@M@
                 g$ae*$8058$XW@M@
                 g$e$8055$XW@M@)))
            (case-lambda
              ((g$m*$8062$XW@M@ g$s*$8063$XW@M@ g$ae*$8064$XW@M@)
               ((case-lambda
                  ((g$ae*$8065$XW@M@ g$s*$8066$XW@M@ g$m*$8067$XW@M@)
                   (g$make-stx$7560$XW@M@
                     (g$stx-expr$7561$XW@M@ g$e$8055$XW@M@)
                     g$m*$8067$XW@M@
                     g$s*$8066$XW@M@
                     g$ae*$8065$XW@M@)))
                g$ae*$8064$XW@M@
                g$s*$8063$XW@M@
                g$m*$8062$XW@M@))))
          (g$make-stx$7560$XW@M@
            g$e$8055$XW@M@
            g$m*$8056$XW@M@
            g$s*$8057$XW@M@
            g$ae*$8058$XW@M@)))))
   (g$add-mark$7576$XW@M@
     g$add-mark$11218$XW@M@
     (case-lambda
       ((g$m$8068$XW@M@ g$e$8069$XW@M@ g$ae$8070$XW@M@)
        (g$mkstx$7575$XW@M@
          g$e$8069$XW@M@
          (list g$m$8068$XW@M@)
          '(shift)
          (list g$ae$8070$XW@M@)))))
   (g$add-subst$7577$XW@M@
     g$add-subst$11219$XW@M@
     (case-lambda
       ((g$subst$8071$XW@M@ g$e$8072$XW@M@)
        (g$mkstx$7575$XW@M@ g$e$8072$XW@M@ '() (list g$subst$8071$XW@M@) '()))))
   (g$syntax-kind?$7578$XW@M@
     g$syntax-kind?$11220$XW@M@
     (case-lambda
       ((g$x$8073$XW@M@ g$p?$8074$XW@M@)
        (if (g$stx?$7559$XW@M@ g$x$8073$XW@M@)
          (g$syntax-kind?$7578$XW@M@
            (g$stx-expr$7561$XW@M@ g$x$8073$XW@M@)
            g$p?$8074$XW@M@)
          (if (annotation? g$x$8073$XW@M@)
            (g$syntax-kind?$7578$XW@M@
              (annotation-expression g$x$8073$XW@M@)
              g$p?$8074$XW@M@)
            (g$p?$8074$XW@M@ g$x$8073$XW@M@))))))
   (g$syntax-vector->list$7579$XW@M@
     g$syntax-vector->list$11221$XW@M@
     (case-lambda
       ((g$x$8075$XW@M@)
        (if (g$stx?$7559$XW@M@ g$x$8075$XW@M@)
          ((case-lambda
             ((g$ls$8076$XW@M@ g$m*$8077$XW@M@ g$s*$8078$XW@M@ g$ae*$8079$XW@M@)
              (map (case-lambda
                     ((g$x$8080$XW@M@)
                      (g$mkstx$7575$XW@M@
                        g$x$8080$XW@M@
                        g$m*$8077$XW@M@
                        g$s*$8078$XW@M@
                        g$ae*$8079$XW@M@)))
                   g$ls$8076$XW@M@)))
           (g$syntax-vector->list$7579$XW@M@
             (g$stx-expr$7561$XW@M@ g$x$8075$XW@M@))
           (g$stx-mark*$7562$XW@M@ g$x$8075$XW@M@)
           (g$stx-subst*$7563$XW@M@ g$x$8075$XW@M@)
           (g$stx-ae*$7564$XW@M@ g$x$8075$XW@M@))
          (if (annotation? g$x$8075$XW@M@)
            (g$syntax-vector->list$7579$XW@M@
              (annotation-expression g$x$8075$XW@M@))
            (if (vector? g$x$8075$XW@M@)
              (vector->list g$x$8075$XW@M@)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8075$XW@M@)))))))
   (g$syntax-pair?$7580$XW@M@
     g$syntax-pair?$11222$XW@M@
     (case-lambda
       ((g$x$8081$XW@M@) (g$syntax-kind?$7578$XW@M@ g$x$8081$XW@M@ pair?))))
   (g$syntax-vector?$7581$XW@M@
     g$syntax-vector?$11223$XW@M@
     (case-lambda
       ((g$x$8082$XW@M@) (g$syntax-kind?$7578$XW@M@ g$x$8082$XW@M@ vector?))))
   (g$syntax-null?$7582$XW@M@
     g$syntax-null?$11224$XW@M@
     (case-lambda
       ((g$x$8083$XW@M@) (g$syntax-kind?$7578$XW@M@ g$x$8083$XW@M@ null?))))
   (g$syntax-list?$7583$XW@M@
     g$syntax-list?$11225$XW@M@
     (case-lambda
       ((g$x$8084$XW@M@)
        ((case-lambda
           ((g$t$8085$XW@M@)
            (if g$t$8085$XW@M@
              g$t$8085$XW@M@
              (begin
                '#f
                (if (g$syntax-pair?$7580$XW@M@ g$x$8084$XW@M@)
                  (begin
                    '#f
                    (g$syntax-list?$7583$XW@M@
                      (g$syntax-cdr$7585$XW@M@ g$x$8084$XW@M@)))
                  '#f)))))
         (g$syntax-null?$7582$XW@M@ g$x$8084$XW@M@)))))
   (g$syntax-car$7584$XW@M@
     g$syntax-car$11226$XW@M@
     (case-lambda
       ((g$x$8086$XW@M@)
        (if (g$stx?$7559$XW@M@ g$x$8086$XW@M@)
          (g$mkstx$7575$XW@M@
            (g$syntax-car$7584$XW@M@ (g$stx-expr$7561$XW@M@ g$x$8086$XW@M@))
            (g$stx-mark*$7562$XW@M@ g$x$8086$XW@M@)
            (g$stx-subst*$7563$XW@M@ g$x$8086$XW@M@)
            (g$stx-ae*$7564$XW@M@ g$x$8086$XW@M@))
          (if (annotation? g$x$8086$XW@M@)
            (g$syntax-car$7584$XW@M@ (annotation-expression g$x$8086$XW@M@))
            (if (pair? g$x$8086$XW@M@)
              (car g$x$8086$XW@M@)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8086$XW@M@)))))))
   (g$syntax-cdr$7585$XW@M@
     g$syntax-cdr$11227$XW@M@
     (case-lambda
       ((g$x$8087$XW@M@)
        (if (g$stx?$7559$XW@M@ g$x$8087$XW@M@)
          (g$mkstx$7575$XW@M@
            (g$syntax-cdr$7585$XW@M@ (g$stx-expr$7561$XW@M@ g$x$8087$XW@M@))
            (g$stx-mark*$7562$XW@M@ g$x$8087$XW@M@)
            (g$stx-subst*$7563$XW@M@ g$x$8087$XW@M@)
            (g$stx-ae*$7564$XW@M@ g$x$8087$XW@M@))
          (if (annotation? g$x$8087$XW@M@)
            (g$syntax-cdr$7585$XW@M@ (annotation-expression g$x$8087$XW@M@))
            (if (pair? g$x$8087$XW@M@)
              (cdr g$x$8087$XW@M@)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8087$XW@M@)))))))
   (g$syntax->list$7586$XW@M@
     g$syntax->list$11228$XW@M@
     (case-lambda
       ((g$x$8088$XW@M@)
        (if (g$syntax-pair?$7580$XW@M@ g$x$8088$XW@M@)
          (cons
            (g$syntax-car$7584$XW@M@ g$x$8088$XW@M@)
            (g$syntax->list$7586$XW@M@
              (g$syntax-cdr$7585$XW@M@ g$x$8088$XW@M@)))
          (if (g$syntax-null?$7582$XW@M@ g$x$8088$XW@M@)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8088$XW@M@))))))
   (g$id?$7587$XW@M@
     g$id?$11229$XW@M@
     (case-lambda
       ((g$x$8089$XW@M@)
        (if (g$stx?$7559$XW@M@ g$x$8089$XW@M@)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8090$XW@M@)
                (symbol?
                  (if (annotation? g$expr$8090$XW@M@)
                    (annotation-stripped g$expr$8090$XW@M@)
                    g$expr$8090$XW@M@))))
             (g$stx-expr$7561$XW@M@ g$x$8089$XW@M@)))
          '#f))))
   (g$id->sym$7588$XW@M@
     g$id->sym$11230$XW@M@
     (case-lambda
       ((g$x$8091$XW@M@)
        (begin
          (if (g$stx?$7559$XW@M@ g$x$8091$XW@M@)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8091$XW@M@))
          ((case-lambda
             ((g$expr$8092$XW@M@)
              ((case-lambda
                 ((g$sym$8093$XW@M@)
                  (if (symbol? g$sym$8093$XW@M@)
                    g$sym$8093$XW@M@
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8091$XW@M@))))
               (if (annotation? g$expr$8092$XW@M@)
                 (annotation-stripped g$expr$8092$XW@M@)
                 g$expr$8092$XW@M@))))
           (g$stx-expr$7561$XW@M@ g$x$8091$XW@M@))))))
   (g$same-marks?$7589$XW@M@
     g$same-marks?$11231$XW@M@
     (case-lambda
       ((g$x$8094$XW@M@ g$y$8095$XW@M@)
        ((case-lambda
           ((g$t$8096$XW@M@)
            (if g$t$8096$XW@M@
              g$t$8096$XW@M@
              (begin
                '#f
                (if (pair? g$x$8094$XW@M@)
                  (if (pair? g$y$8095$XW@M@)
                    (if (eq? (car g$x$8094$XW@M@) (car g$y$8095$XW@M@))
                      (begin
                        '#f
                        (g$same-marks?$7589$XW@M@
                          (cdr g$x$8094$XW@M@)
                          (cdr g$y$8095$XW@M@)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8094$XW@M@) (begin '#f (null? g$y$8095$XW@M@)) '#f)))))
   (g$bound-id=?$7590$XW@M@
     g$bound-id=?$11232$XW@M@
     (case-lambda
       ((g$x$8097$XW@M@ g$y$8098$XW@M@)
        (if (eq? (g$id->sym$7588$XW@M@ g$x$8097$XW@M@)
                 (g$id->sym$7588$XW@M@ g$y$8098$XW@M@))
          (begin
            '#f
            (g$same-marks?$7589$XW@M@
              (g$stx-mark*$7562$XW@M@ g$x$8097$XW@M@)
              (g$stx-mark*$7562$XW@M@ g$y$8098$XW@M@)))
          '#f))))
   (g$free-id=?$7591$XW@M@
     g$free-id=?$11233$XW@M@
     (case-lambda
       ((g$i$8099$XW@M@ g$j$8100$XW@M@)
        ((case-lambda
           ((g$t0$8101$XW@M@ g$t1$8102$XW@M@)
            (if ((case-lambda
                   ((g$t$8103$XW@M@)
                    (if g$t$8103$XW@M@
                      g$t$8103$XW@M@
                      (begin '#f g$t1$8102$XW@M@))))
                 g$t0$8101$XW@M@)
              (eq? g$t0$8101$XW@M@ g$t1$8102$XW@M@)
              (eq? (g$id->sym$7588$XW@M@ g$i$8099$XW@M@)
                   (g$id->sym$7588$XW@M@ g$j$8100$XW@M@)))))
         (g$id->real-label$7601$XW@M@ g$i$8099$XW@M@)
         (g$id->real-label$7601$XW@M@ g$j$8100$XW@M@)))))
   (g$valid-bound-ids?$7592$XW@M@
     g$valid-bound-ids?$11234$XW@M@
     (case-lambda
       ((g$id*$8104$XW@M@)
        (if (g$for-all$5871$XW@M@ g$id?$7587$XW@M@ g$id*$8104$XW@M@)
          (begin '#f (g$distinct-bound-ids?$7593$XW@M@ g$id*$8104$XW@M@))
          '#f))))
   (g$distinct-bound-ids?$7593$XW@M@
     g$distinct-bound-ids?$11235$XW@M@
     (case-lambda
       ((g$id*$8105$XW@M@)
        ((case-lambda
           ((g$t$8106$XW@M@)
            (if g$t$8106$XW@M@
              g$t$8106$XW@M@
              (begin
                '#f
                (if (not (g$bound-id-member?$7594$XW@M@
                           (car g$id*$8105$XW@M@)
                           (cdr g$id*$8105$XW@M@)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7593$XW@M@ (cdr g$id*$8105$XW@M@)))
                  '#f)))))
         (null? g$id*$8105$XW@M@)))))
   (g$bound-id-member?$7594$XW@M@
     g$bound-id-member?$11236$XW@M@
     (case-lambda
       ((g$id$8107$XW@M@ g$id*$8108$XW@M@)
        (if (pair? g$id*$8108$XW@M@)
          (begin
            '#f
            ((case-lambda
               ((g$t$8109$XW@M@)
                (if g$t$8109$XW@M@
                  g$t$8109$XW@M@
                  (begin
                    '#f
                    (g$bound-id-member?$7594$XW@M@
                      g$id$8107$XW@M@
                      (cdr g$id*$8108$XW@M@))))))
             (g$bound-id=?$7590$XW@M@ g$id$8107$XW@M@ (car g$id*$8108$XW@M@))))
          '#f))))
   (g$self-evaluating?$7595$XW@M@
     g$self-evaluating?$11237$XW@M@
     (case-lambda
       ((g$x$8110$XW@M@)
        ((case-lambda
           ((g$t$8111$XW@M@)
            (if g$t$8111$XW@M@
              g$t$8111$XW@M@
              ((case-lambda
                 ((g$t$8112$XW@M@)
                  (if g$t$8112$XW@M@
                    g$t$8112$XW@M@
                    ((case-lambda
                       ((g$t$8113$XW@M@)
                        (if g$t$8113$XW@M@
                          g$t$8113$XW@M@
                          ((case-lambda
                             ((g$t$8114$XW@M@)
                              (if g$t$8114$XW@M@
                                g$t$8114$XW@M@
                                (begin '#f (bytevector? g$x$8110$XW@M@)))))
                           (boolean? g$x$8110$XW@M@)))))
                     (char? g$x$8110$XW@M@)))))
               (string? g$x$8110$XW@M@)))))
         (number? g$x$8110$XW@M@)))))
   (g$strip-annotations$7596$XW@M@
     g$strip-annotations$11238$XW@M@
     (case-lambda
       ((g$x$8115$XW@M@)
        (if (pair? g$x$8115$XW@M@)
          (cons
            (g$strip-annotations$7596$XW@M@ (car g$x$8115$XW@M@))
            (g$strip-annotations$7596$XW@M@ (cdr g$x$8115$XW@M@)))
          (if (vector? g$x$8115$XW@M@)
            (vector-map g$strip-annotations$7596$XW@M@ g$x$8115$XW@M@)
            (if (annotation? g$x$8115$XW@M@)
              (annotation-stripped g$x$8115$XW@M@)
              g$x$8115$XW@M@))))))
   (g$strip$7597$XW@M@
     g$strip$11239$XW@M@
     (case-lambda
       ((g$x$8116$XW@M@ g$m*$8117$XW@M@)
        (if (g$top-marked?$7530$XW@M@ g$m*$8117$XW@M@)
          (if ((case-lambda
                 ((g$t$8118$XW@M@)
                  (if g$t$8118$XW@M@
                    g$t$8118$XW@M@
                    ((case-lambda
                       ((g$t$8119$XW@M@)
                        (if g$t$8119$XW@M@
                          g$t$8119$XW@M@
                          (begin
                            '#f
                            (if (vector? g$x$8116$XW@M@)
                              (if (> (vector-length g$x$8116$XW@M@) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8116$XW@M@ '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8116$XW@M@)
                       (begin '#f (annotation? (car g$x$8116$XW@M@)))
                       '#f)))))
               (annotation? g$x$8116$XW@M@))
            (g$strip-annotations$7596$XW@M@ g$x$8116$XW@M@)
            g$x$8116$XW@M@)
          ((letrec ((g$f$8120$XW@M@
                      (case-lambda
                        ((g$x$8121$XW@M@)
                         (if (g$stx?$7559$XW@M@ g$x$8121$XW@M@)
                           (g$strip$7597$XW@M@
                             (g$stx-expr$7561$XW@M@ g$x$8121$XW@M@)
                             (g$stx-mark*$7562$XW@M@ g$x$8121$XW@M@))
                           (if (annotation? g$x$8121$XW@M@)
                             (annotation-stripped g$x$8121$XW@M@)
                             (if (pair? g$x$8121$XW@M@)
                               ((case-lambda
                                  ((g$a$8122$XW@M@ g$d$8123$XW@M@)
                                   (if (if (eq? g$a$8122$XW@M@
                                                (car g$x$8121$XW@M@))
                                         (begin
                                           '#f
                                           (eq? g$d$8123$XW@M@
                                                (cdr g$x$8121$XW@M@)))
                                         '#f)
                                     g$x$8121$XW@M@
                                     (cons g$a$8122$XW@M@ g$d$8123$XW@M@))))
                                (g$f$8120$XW@M@ (car g$x$8121$XW@M@))
                                (g$f$8120$XW@M@ (cdr g$x$8121$XW@M@)))
                               (if (vector? g$x$8121$XW@M@)
                                 ((case-lambda
                                    ((g$old$8124$XW@M@)
                                     ((case-lambda
                                        ((g$new$8125$XW@M@)
                                         (if (g$for-all$5871$XW@M@
                                               eq?
                                               g$old$8124$XW@M@
                                               g$new$8125$XW@M@)
                                           g$x$8121$XW@M@
                                           (list->vector g$new$8125$XW@M@))))
                                      (map g$f$8120$XW@M@ g$old$8124$XW@M@))))
                                  (vector->list g$x$8121$XW@M@))
                                 g$x$8121$XW@M@))))))))
             g$f$8120$XW@M@)
           g$x$8116$XW@M@)))))
   (g$stx->datum$7598$XW@M@
     g$stx->datum$11240$XW@M@
     (case-lambda
       ((g$x$8126$XW@M@) (g$strip$7597$XW@M@ g$x$8126$XW@M@ '()))))
   (g$same-marks*?$7599$XW@M@
     g$same-marks*?$11241$XW@M@
     (case-lambda
       ((g$mark*$8127$XW@M@ g$mark**$8128$XW@M@ g$si$8129$XW@M@)
        (if (null? g$si$8129$XW@M@)
          '#f
          (if (g$same-marks?$7589$XW@M@
                g$mark*$8127$XW@M@
                (vector-ref g$mark**$8128$XW@M@ (car g$si$8129$XW@M@)))
            (car g$si$8129$XW@M@)
            (g$same-marks*?$7599$XW@M@
              g$mark*$8127$XW@M@
              g$mark**$8128$XW@M@
              (cdr g$si$8129$XW@M@)))))))
   (g$id->label$7600$XW@M@
     g$id->label$11242$XW@M@
     (case-lambda
       ((g$id$8130$XW@M@)
        ((case-lambda
           ((g$t$8131$XW@M@)
            (if g$t$8131$XW@M@
              g$t$8131$XW@M@
              (begin
                '#f
                ((case-lambda
                   ((g$t$8132$XW@M@)
                    (if g$t$8132$XW@M@
                      ((case-lambda
                         ((g$env$8133$XW@M@)
                          ((case-lambda
                             ((g$rib$8134$XW@M@)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7535$XW@M@
                                     g$id$8130$XW@M@
                                     g$rib$8134$XW@M@)))
                                (case-lambda
                                  ((g$lab$8137$XW@M@ g$loc_$8138$XW@M@)
                                   ((case-lambda
                                      ((g$loc_$8139$XW@M@ g$lab$8140$XW@M@)
                                       (begin
                                         (g$extend-rib!$7551$XW@M@
                                           g$rib$8134$XW@M@
                                           g$id$8130$XW@M@
                                           g$lab$8140$XW@M@)
                                         g$lab$8140$XW@M@)))
                                    g$loc_$8138$XW@M@
                                    g$lab$8137$XW@M@))))))
                           (g$interaction-env-rib$7943$XW@M@
                             g$env$8133$XW@M@))))
                       g$t$8132$XW@M@)
                      '#f)))
                 (g$top-level-context$7978$XW@M@))))))
         (g$id->real-label$7601$XW@M@ g$id$8130$XW@M@)))))
   (g$id->real-label$7601$XW@M@
     g$id->real-label$11243$XW@M@
     (case-lambda
       ((g$id$8141$XW@M@)
        ((case-lambda
           ((g$sym$8142$XW@M@)
            ((letrec ((g$search$8143$XW@M@
                        (case-lambda
                          ((g$subst*$8144$XW@M@ g$mark*$8145$XW@M@)
                           (if (null? g$subst*$8144$XW@M@)
                             '#f
                             (if (eq? (car g$subst*$8144$XW@M@) 'shift)
                               (g$search$8143$XW@M@
                                 (cdr g$subst*$8144$XW@M@)
                                 (cdr g$mark*$8145$XW@M@))
                               ((case-lambda
                                  ((g$rib$8146$XW@M@)
                                   ((case-lambda
                                      ((g$t$8147$XW@M@)
                                       (if g$t$8147$XW@M@
                                         ((case-lambda
                                            ((g$ht$8148$XW@M@)
                                             ((case-lambda
                                                ((g$si$8149$XW@M@)
                                                 ((case-lambda
                                                    ((g$i$8150$XW@M@)
                                                     (if g$i$8150$XW@M@
                                                       (vector-ref
                                                         (g$rib-label*$7544$XW@M@
                                                           g$rib$8146$XW@M@)
                                                         g$i$8150$XW@M@)
                                                       (g$search$8143$XW@M@
                                                         (cdr g$subst*$8144$XW@M@)
                                                         g$mark*$8145$XW@M@))))
                                                  (if g$si$8149$XW@M@
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7599$XW@M@
                                                        g$mark*$8145$XW@M@
                                                        (g$rib-mark**$7543$XW@M@
                                                          g$rib$8146$XW@M@)
                                                        (reverse
                                                          g$si$8149$XW@M@)))
                                                    '#f))))
                                              (g$hashtable-ref$5667$XW@M@
                                                g$ht$8148$XW@M@
                                                g$sym$8142$XW@M@
                                                '#f))))
                                          g$t$8147$XW@M@)
                                         ((letrec ((g$f$8151$XW@M@
                                                     (case-lambda
                                                       ((g$sym*$8152$XW@M@
                                                          g$mark**$8153$XW@M@
                                                          g$label*$8154$XW@M@)
                                                        (if (null?
                                                              g$sym*$8152$XW@M@)
                                                          (g$search$8143$XW@M@
                                                            (cdr g$subst*$8144$XW@M@)
                                                            g$mark*$8145$XW@M@)
                                                          (if (if (eq? (car g$sym*$8152$XW@M@)
                                                                       g$sym$8142$XW@M@)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7589$XW@M@
                                                                    (car g$mark**$8153$XW@M@)
                                                                    g$mark*$8145$XW@M@))
                                                                '#f)
                                                            (car g$label*$8154$XW@M@)
                                                            (g$f$8151$XW@M@
                                                              (cdr g$sym*$8152$XW@M@)
                                                              (cdr g$mark**$8153$XW@M@)
                                                              (cdr g$label*$8154$XW@M@))))))))
                                            g$f$8151$XW@M@)
                                          (g$rib-sym*$7542$XW@M@
                                            g$rib$8146$XW@M@)
                                          (g$rib-mark**$7543$XW@M@
                                            g$rib$8146$XW@M@)
                                          (g$rib-label*$7544$XW@M@
                                            g$rib$8146$XW@M@)))))
                                    (g$rib-sealed/freq$7545$XW@M@
                                      g$rib$8146$XW@M@))))
                                (car g$subst*$8144$XW@M@))))))))
               g$search$8143$XW@M@)
             (g$stx-subst*$7563$XW@M@ g$id$8141$XW@M@)
             (g$stx-mark*$7562$XW@M@ g$id$8141$XW@M@))))
         (g$id->sym$7588$XW@M@ g$id$8141$XW@M@)))))
   (g$label->binding$7602$XW@M@
     g$label->binding$11244$XW@M@
     (case-lambda
       ((g$x$8155$XW@M@ g$r$8156$XW@M@)
        ((case-lambda
           ((g$t$8157$XW@M@)
            (if g$t$8157$XW@M@
              ((case-lambda
                 ((g$b$8158$XW@M@)
                  (if (if (pair? g$b$8158$XW@M@)
                        (begin '#f (eq? (car g$b$8158$XW@M@) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7828$XW@M@ (cdr g$b$8158$XW@M@)))
                    (if (if (pair? g$b$8158$XW@M@)
                          (begin '#f (eq? (car g$b$8158$XW@M@) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8159$XW@M@ g$loc$8160$XW@M@)
                          (cons '$rtd (symbol-value g$loc$8160$XW@M@))))
                       (g$cadr$5402$XW@M@ g$b$8158$XW@M@)
                       (g$cddr$5404$XW@M@ g$b$8158$XW@M@))
                      g$b$8158$XW@M@))))
               g$t$8157$XW@M@)
              ((case-lambda
                 ((g$t$8161$XW@M@)
                  (if g$t$8161$XW@M@
                    (cdr g$t$8161$XW@M@)
                    ((case-lambda
                       ((g$t$8162$XW@M@)
                        (if g$t$8162$XW@M@
                          ((case-lambda
                             ((g$env$8163$XW@M@)
                              ((case-lambda
                                 ((g$t$8164$XW@M@)
                                  (if g$t$8164$XW@M@
                                    ((case-lambda
                                       ((g$p$8165$XW@M@)
                                        (g$cons*$5873$XW@M@
                                          'lexical
                                          (cdr g$p$8165$XW@M@)
                                          '#f)))
                                     g$t$8164$XW@M@)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$8155$XW@M@
                                 (g$interaction-env-locs$7945$XW@M@
                                   g$env$8163$XW@M@)))))
                           g$t$8162$XW@M@)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7978$XW@M@)))))
               (assq g$x$8155$XW@M@ g$r$8156$XW@M@)))))
         (g$imported-label->binding$7401$XW@M@ g$x$8155$XW@M@)))))
   (g$make-binding$7603$XW@M@ g$make-binding$11245$XW@M@ cons)
   (g$binding-type$7604$XW@M@ g$binding-type$11246$XW@M@ car)
   (g$binding-value$7605$XW@M@ g$binding-value$11247$XW@M@ cdr)
   (g$raise-unbound-error$7606$XW@M@
     g$raise-unbound-error$11248$XW@M@
     (case-lambda
       ((g$id$8166$XW@M@)
        (g$syntax-violation*$7970$XW@M@
          '#f
          '"unbound identifier"
          g$id$8166$XW@M@
          (g$make-undefined-violation$6207$XW@M@)))))
   (g$syntax-type$7607$XW@M@
     g$syntax-type$11249$XW@M@
     (case-lambda
       ((g$e$8167$XW@M@ g$r$8168$XW@M@)
        (if (g$id?$7587$XW@M@ g$e$8167$XW@M@)
          ((case-lambda
             ((g$id$8169$XW@M@)
              ((case-lambda
                 ((g$label$8170$XW@M@)
                  ((case-lambda
                     ((g$b$8171$XW@M@)
                      ((case-lambda
                         ((g$type$8172$XW@M@)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$8170$XW@M@
                                  (void)
                                  (g$raise-unbound-error$7606$XW@M@
                                    g$id$8169$XW@M@))
                                ((case-lambda
                                   ((g$t$8173$XW@M@)
                                    (if (memv
                                          g$t$8173$XW@M@
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8172$XW@M@
                                        (g$binding-value$7605$XW@M@
                                          g$b$8171$XW@M@)
                                        g$id$8169$XW@M@)
                                      (values 'other '#f '#f))))
                                 g$type$8172$XW@M@)))))))
                       (g$binding-type$7604$XW@M@ g$b$8171$XW@M@))))
                   (g$label->binding$7602$XW@M@
                     g$label$8170$XW@M@
                     g$r$8168$XW@M@))))
               (g$id->label$7600$XW@M@ g$id$8169$XW@M@))))
           g$e$8167$XW@M@)
          (if (g$syntax-pair?$7580$XW@M@ g$e$8167$XW@M@)
            ((case-lambda
               ((g$id$8174$XW@M@)
                (if (g$id?$7587$XW@M@ g$id$8174$XW@M@)
                  ((case-lambda
                     ((g$label$8175$XW@M@)
                      ((case-lambda
                         ((g$b$8176$XW@M@)
                          ((case-lambda
                             ((g$type$8177$XW@M@)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$8175$XW@M@
                                      (void)
                                      (g$raise-unbound-error$7606$XW@M@
                                        g$id$8174$XW@M@))
                                    ((case-lambda
                                       ((g$t$8178$XW@M@)
                                        (if (memv
                                              g$t$8178$XW@M@
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$8177$XW@M@
                                            (g$binding-value$7605$XW@M@
                                              g$b$8176$XW@M@)
                                            g$id$8174$XW@M@)
                                          (values 'call '#f '#f))))
                                     g$type$8177$XW@M@)))))))
                           (g$binding-type$7604$XW@M@ g$b$8176$XW@M@))))
                       (g$label->binding$7602$XW@M@
                         g$label$8175$XW@M@
                         g$r$8168$XW@M@))))
                   (g$id->label$7600$XW@M@ g$id$8174$XW@M@))
                  (values 'call '#f '#f))))
             (g$syntax-car$7584$XW@M@ g$e$8167$XW@M@))
            ((case-lambda
               ((g$d$8179$XW@M@)
                (if (g$self-evaluating?$7595$XW@M@ g$d$8179$XW@M@)
                  (values 'constant g$d$8179$XW@M@ '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7598$XW@M@ g$e$8167$XW@M@)))))))
   (g$sanitize-binding$7615$XW@M@
     g$sanitize-binding$11250$XW@M@
     (case-lambda
       ((g$x$8180$XW@M@ g$src$8181$XW@M@)
        (if (procedure? g$x$8180$XW@M@)
          (g$cons*$5873$XW@M@ 'local-macro g$x$8180$XW@M@ g$src$8181$XW@M@)
          (if (if (pair? g$x$8180$XW@M@)
                (if (eq? (car g$x$8180$XW@M@) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8180$XW@M@)))
                  '#f)
                '#f)
            (g$cons*$5873$XW@M@
              'local-macro!
              (cdr g$x$8180$XW@M@)
              g$src$8181$XW@M@)
            (if (if (pair? g$x$8180$XW@M@)
                  (begin '#f (eq? (car g$x$8180$XW@M@) '$rtd))
                  '#f)
              g$x$8180$XW@M@
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8180$XW@M@)))))))
   (g$make-variable-transformer$7616$XW@M@
     g$make-variable-transformer$11251$XW@M@
     (case-lambda
       ((g$x$8182$XW@M@)
        (if (procedure? g$x$8182$XW@M@)
          (cons 'macro! g$x$8182$XW@M@)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8182$XW@M@)))))
   (g$variable-transformer?$7617$XW@M@
     g$variable-transformer?$11252$XW@M@
     (case-lambda
       ((g$x$8183$XW@M@)
        (if (pair? g$x$8183$XW@M@)
          (if (eq? (car g$x$8183$XW@M@) 'macro!)
            (begin '#f (procedure? (cdr g$x$8183$XW@M@)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7618$XW@M@
     g$variable-transformer-procedure$11253$XW@M@
     (case-lambda
       ((g$x$8184$XW@M@)
        (if (g$variable-transformer?$7617$XW@M@ g$x$8184$XW@M@)
          (cdr g$x$8184$XW@M@)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8184$XW@M@)))))
   (g$make-eval-transformer$7619$XW@M@
     g$make-eval-transformer$11254$XW@M@
     (case-lambda
       ((g$x$8185$XW@M@)
        (g$sanitize-binding$7615$XW@M@
          (eval-core (g$expanded->core$7101$XW@M@ g$x$8185$XW@M@))
          g$x$8185$XW@M@))))
   (g$parse-define$7805$XW@M@
     g$parse-define$11255$XW@M@
     (case-lambda
       ((g$x$8186$XW@M@)
        ((case-lambda
           ((g$t$8187$XW@M@)
            ((case-lambda
               ((g$ls/false$8188$XW@M@)
                (if (if g$ls/false$8188$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8189$XW@M@
                               g$fmls$8190$XW@M@
                               g$b$8191$XW@M@
                               g$b*$8192$XW@M@)
                             (g$id?$7587$XW@M@ g$id$8189$XW@M@)))
                          g$ls/false$8188$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8193$XW@M@
                         g$fmls$8194$XW@M@
                         g$b$8195$XW@M@
                         g$b*$8196$XW@M@)
                       (begin
                         (g$verify-formals$7885$XW@M@
                           g$fmls$8194$XW@M@
                           g$x$8186$XW@M@)
                         (values
                           g$id$8193$XW@M@
                           (cons
                             'defun
                             (cons
                               g$fmls$8194$XW@M@
                               (cons g$b$8195$XW@M@ g$b*$8196$XW@M@)))))))
                    g$ls/false$8188$XW@M@)
                  ((case-lambda
                     ((g$t$8197$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8198$XW@M@)
                          (if (if g$ls/false$8198$XW@M@
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8199$XW@M@ g$val$8200$XW@M@)
                                       (g$id?$7587$XW@M@ g$id$8199$XW@M@)))
                                    g$ls/false$8198$XW@M@))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8201$XW@M@ g$val$8202$XW@M@)
                                 (values
                                   g$id$8201$XW@M@
                                   (cons 'expr g$val$8202$XW@M@))))
                              g$ls/false$8198$XW@M@)
                            ((case-lambda
                               ((g$t$8203$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$8204$XW@M@)
                                    (if (if g$ls/false$8204$XW@M@
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8205$XW@M@)
                                                 (g$id?$7587$XW@M@
                                                   g$id$8205$XW@M@)))
                                              g$ls/false$8204$XW@M@))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8206$XW@M@)
                                           (values
                                             g$id$8206$XW@M@
                                             (cons
                                               'expr
                                               (g$bless$7828$XW@M@ '(void))))))
                                        g$ls/false$8204$XW@M@)
                                      (g$syntax-violation$7971$XW@M@
                                        '#f
                                        '"invalid syntax"
                                        g$t$8203$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$8203$XW@M@
                                   '(_ any)))))
                             g$t$8197$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8197$XW@M@
                         '(_ any any)))))
                   g$t$8187$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8187$XW@M@
               '(_ (any . any) any . each-any)))))
         g$x$8186$XW@M@))))
   (g$parse-define-syntax$7806$XW@M@
     g$parse-define-syntax$11256$XW@M@
     (case-lambda
       ((g$x$8207$XW@M@)
        ((case-lambda
           ((g$t$8208$XW@M@)
            ((case-lambda
               ((g$ls/false$8209$XW@M@)
                (if (if g$ls/false$8209$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8210$XW@M@ g$val$8211$XW@M@)
                             (g$id?$7587$XW@M@ g$id$8210$XW@M@)))
                          g$ls/false$8209$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8212$XW@M@ g$val$8213$XW@M@)
                       (values g$id$8212$XW@M@ g$val$8213$XW@M@)))
                    g$ls/false$8209$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8208$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8208$XW@M@ '(_ any any)))))
         g$x$8207$XW@M@))))
   (g$scheme-stx-hashtable$7807$XW@M@
     g$scheme-stx-hashtable$11257$XW@M@
     (g$make-eq-hashtable$5664$XW@M@))
   (g$scheme-stx$7808$XW@M@
     g$scheme-stx$11258$XW@M@
     (case-lambda
       ((g$sym$8214$XW@M@)
        ((case-lambda
           ((g$t$8215$XW@M@)
            (if g$t$8215$XW@M@
              g$t$8215$XW@M@
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8216$XW@M@)
                    ((case-lambda
                       ((g$stx$8217$XW@M@)
                        ((case-lambda
                           ((g$stx$8218$XW@M@)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5668$XW@M@
                                    g$scheme-stx-hashtable$7807$XW@M@
                                    g$sym$8214$XW@M@
                                    g$stx$8218$XW@M@)
                                  g$stx$8218$XW@M@))))))
                         ((case-lambda
                            ((g$t$8219$XW@M@)
                             (if g$t$8219$XW@M@
                               ((case-lambda
                                  ((g$x$8220$XW@M@)
                                   ((case-lambda
                                      ((g$name$8221$XW@M@ g$label$8222$XW@M@)
                                       (g$add-subst$7577$XW@M@
                                         (g$make-rib$7541$XW@M@
                                           (list g$name$8221$XW@M@)
                                           (list g$top-mark*$7529$XW@M@)
                                           (list g$label$8222$XW@M@)
                                           '#f)
                                         g$stx$8217$XW@M@)))
                                    (car g$x$8220$XW@M@)
                                    (cdr g$x$8220$XW@M@))))
                                g$t$8219$XW@M@)
                               g$stx$8217$XW@M@)))
                          (assq g$sym$8214$XW@M@ g$subst$8216$XW@M@)))))
                     (g$make-stx$7560$XW@M@
                       g$sym$8214$XW@M@
                       g$top-mark*$7529$XW@M@
                       '()
                       '()))))
                 (g$library-subst$7359$XW@M@
                   (g$find-library-by-name$7395$XW@M@
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5667$XW@M@
           g$scheme-stx-hashtable$7807$XW@M@
           g$sym$8214$XW@M@
           '#f)))))
   (g$lexical-var$7809$XW@M@ g$lexical-var$11259$XW@M@ car)
   (g$lexical-mutable?$7810$XW@M@ g$lexical-mutable?$11260$XW@M@ cdr)
   (g$set-lexical-mutable!$7811$XW@M@
     g$set-lexical-mutable!$11261$XW@M@
     set-cdr!)
   (g$add-lexical$7812$XW@M@
     g$add-lexical$11262$XW@M@
     (case-lambda
       ((g$lab$8223$XW@M@ g$lex$8224$XW@M@ g$r$8225$XW@M@)
        (cons
          (g$cons*$5873$XW@M@ g$lab$8223$XW@M@ 'lexical g$lex$8224$XW@M@ '#f)
          g$r$8225$XW@M@))))
   (g$add-lexicals$7813$XW@M@
     g$add-lexicals$11263$XW@M@
     (case-lambda
       ((g$lab*$8226$XW@M@ g$lex*$8227$XW@M@ g$r$8228$XW@M@)
        (if (null? g$lab*$8226$XW@M@)
          g$r$8228$XW@M@
          (g$add-lexicals$7813$XW@M@
            (cdr g$lab*$8226$XW@M@)
            (cdr g$lex*$8227$XW@M@)
            (g$add-lexical$7812$XW@M@
              (car g$lab*$8226$XW@M@)
              (car g$lex*$8227$XW@M@)
              g$r$8228$XW@M@))))))
   (g$letrec-helper$7814$XW@M@
     g$letrec-helper$11264$XW@M@
     (case-lambda
       ((g$e$8229$XW@M@ g$r$8230$XW@M@ g$mr$8231$XW@M@ g$build$8232$XW@M@)
        ((case-lambda
           ((g$t$8233$XW@M@)
            ((case-lambda
               ((g$ls/false$8234$XW@M@)
                (if g$ls/false$8234$XW@M@
                  (apply
                    (case-lambda
                      ((g$lhs*$8235$XW@M@
                         g$rhs*$8236$XW@M@
                         g$b$8237$XW@M@
                         g$b*$8238$XW@M@)
                       (if (not (g$valid-bound-ids?$7592$XW@M@
                                  g$lhs*$8235$XW@M@))
                         (g$invalid-fmls-error$7830$XW@M@
                           g$e$8229$XW@M@
                           g$lhs*$8235$XW@M@)
                         ((case-lambda
                            ((g$lex*$8239$XW@M@ g$lab*$8240$XW@M@)
                             ((case-lambda
                                ((g$rib$8241$XW@M@ g$r$8242$XW@M@)
                                 ((case-lambda
                                    ((g$body$8243$XW@M@ g$rhs*$8244$XW@M@)
                                     (g$build$8232$XW@M@
                                       '#f
                                       g$lex*$8239$XW@M@
                                       g$rhs*$8244$XW@M@
                                       g$body$8243$XW@M@)))
                                  (g$chi-internal$7894$XW@M@
                                    (g$add-subst$7577$XW@M@
                                      g$rib$8241$XW@M@
                                      (cons g$b$8237$XW@M@ g$b*$8238$XW@M@))
                                    g$r$8242$XW@M@
                                    g$mr$8231$XW@M@)
                                  (g$chi-expr*$7881$XW@M@
                                    (map (case-lambda
                                           ((g$x$8245$XW@M@)
                                            (g$add-subst$7577$XW@M@
                                              g$rib$8241$XW@M@
                                              g$x$8245$XW@M@)))
                                         g$rhs*$8236$XW@M@)
                                    g$r$8242$XW@M@
                                    g$mr$8231$XW@M@))))
                              (g$make-full-rib$7555$XW@M@
                                g$lhs*$8235$XW@M@
                                g$lab*$8240$XW@M@)
                              (g$add-lexicals$7813$XW@M@
                                g$lab*$8240$XW@M@
                                g$lex*$8239$XW@M@
                                g$r$8230$XW@M@))))
                          (map g$gen-lexical$7531$XW@M@ g$lhs*$8235$XW@M@)
                          (map g$gen-label$7533$XW@M@ g$lhs*$8235$XW@M@)))))
                    g$ls/false$8234$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8233$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8233$XW@M@
               '(_ #(each (any any)) any . each-any)))))
         g$e$8229$XW@M@))))
   (g$letrec-transformer$7815$XW@M@
     g$letrec-transformer$11265$XW@M@
     (case-lambda
       ((g$e$8246$XW@M@ g$r$8247$XW@M@ g$mr$8248$XW@M@)
        (g$letrec-helper$7814$XW@M@
          g$e$8246$XW@M@
          g$r$8247$XW@M@
          g$mr$8248$XW@M@
          g$build-letrec$7523$XW@M@))))
   (g$letrec*-transformer$7816$XW@M@
     g$letrec*-transformer$11266$XW@M@
     (case-lambda
       ((g$e$8249$XW@M@ g$r$8250$XW@M@ g$mr$8251$XW@M@)
        (g$letrec-helper$7814$XW@M@
          g$e$8249$XW@M@
          g$r$8250$XW@M@
          g$mr$8251$XW@M@
          g$build-letrec*$7524$XW@M@))))
   (g$fluid-let-syntax-transformer$7817$XW@M@
     g$fluid-let-syntax-transformer$11267$XW@M@
     (case-lambda
       ((g$e$8252$XW@M@ g$r$8253$XW@M@ g$mr$8254$XW@M@)
        (letrec* ((g$lookup$8255$XW@M@
                    (case-lambda
                      ((g$x$8265$XW@M@)
                       ((case-lambda
                          ((g$t$8266$XW@M@)
                           (if g$t$8266$XW@M@
                             g$t$8266$XW@M@
                             (begin
                               '#f
                               (g$syntax-violation$7971$XW@M@
                                 '#f
                                 '"unbound identifier"
                                 g$e$8252$XW@M@
                                 g$x$8265$XW@M@)))))
                        (g$id->label$7600$XW@M@ g$x$8265$XW@M@))))))
          ((case-lambda
             ((g$t$8256$XW@M@)
              ((case-lambda
                 ((g$ls/false$8257$XW@M@)
                  (if g$ls/false$8257$XW@M@
                    (apply
                      (case-lambda
                        ((g$lhs*$8258$XW@M@
                           g$rhs*$8259$XW@M@
                           g$b$8260$XW@M@
                           g$b*$8261$XW@M@)
                         (if (not (g$valid-bound-ids?$7592$XW@M@
                                    g$lhs*$8258$XW@M@))
                           (g$invalid-fmls-error$7830$XW@M@
                             g$e$8252$XW@M@
                             g$lhs*$8258$XW@M@)
                           ((case-lambda
                              ((g$lab*$8262$XW@M@ g$rhs*$8263$XW@M@)
                               (g$chi-internal$7894$XW@M@
                                 (cons g$b$8260$XW@M@ g$b*$8261$XW@M@)
                                 (append
                                   (map cons
                                        g$lab*$8262$XW@M@
                                        g$rhs*$8263$XW@M@)
                                   g$r$8253$XW@M@)
                                 (append
                                   (map cons
                                        g$lab*$8262$XW@M@
                                        g$rhs*$8263$XW@M@)
                                   g$mr$8254$XW@M@))))
                            (map g$lookup$8255$XW@M@ g$lhs*$8258$XW@M@)
                            (map (case-lambda
                                   ((g$x$8264$XW@M@)
                                    (g$make-eval-transformer$7619$XW@M@
                                      (g$expand-transformer$7910$XW@M@
                                        g$x$8264$XW@M@
                                        g$mr$8254$XW@M@))))
                                 g$rhs*$8259$XW@M@)))))
                      g$ls/false$8257$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$8256$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8256$XW@M@
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8252$XW@M@)))))
   (g$type-descriptor-transformer$7818$XW@M@
     g$type-descriptor-transformer$11268$XW@M@
     (case-lambda
       ((g$e$8267$XW@M@ g$r$8268$XW@M@ g$mr$8269$XW@M@)
        ((case-lambda
           ((g$t$8270$XW@M@)
            ((case-lambda
               ((g$ls/false$8271$XW@M@)
                (if (if g$ls/false$8271$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8272$XW@M@)
                             (g$id?$7587$XW@M@ g$id$8272$XW@M@)))
                          g$ls/false$8271$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8273$XW@M@)
                       ((case-lambda
                          ((g$lab$8274$XW@M@)
                           ((case-lambda
                              ((g$b$8275$XW@M@)
                               ((case-lambda
                                  ((g$type$8276$XW@M@)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8274$XW@M@
                                           (void)
                                           (g$raise-unbound-error$7606$XW@M@
                                             g$id$8273$XW@M@))
                                         (if (if (eq? g$type$8276$XW@M@ '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$7605$XW@M@
                                                          g$b$8275$XW@M@))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"not a record type"
                                             g$e$8267$XW@M@))
                                         (list
                                           'quote
                                           (g$binding-value$7605$XW@M@
                                             g$b$8275$XW@M@))))))))
                                (g$binding-type$7604$XW@M@ g$b$8275$XW@M@))))
                            (g$label->binding$7602$XW@M@
                              g$lab$8274$XW@M@
                              g$r$8268$XW@M@))))
                        (g$id->label$7600$XW@M@ g$id$8273$XW@M@))))
                    g$ls/false$8271$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8270$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8270$XW@M@ '(_ any)))))
         g$e$8267$XW@M@))))
   (g$record-type-descriptor-transformer$7819$XW@M@
     g$record-type-descriptor-transformer$11269$XW@M@
     (case-lambda
       ((g$e$8277$XW@M@ g$r$8278$XW@M@ g$mr$8279$XW@M@)
        ((case-lambda
           ((g$t$8280$XW@M@)
            ((case-lambda
               ((g$ls/false$8281$XW@M@)
                (if (if g$ls/false$8281$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8282$XW@M@)
                             (g$id?$7587$XW@M@ g$id$8282$XW@M@)))
                          g$ls/false$8281$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8283$XW@M@)
                       ((case-lambda
                          ((g$lab$8284$XW@M@)
                           ((case-lambda
                              ((g$b$8285$XW@M@)
                               ((case-lambda
                                  ((g$type$8286$XW@M@)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8284$XW@M@
                                           (void)
                                           (g$raise-unbound-error$7606$XW@M@
                                             g$id$8283$XW@M@))
                                         (if (if (eq? g$type$8286$XW@M@ '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7605$XW@M@
                                                     g$b$8285$XW@M@)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"not a record type"
                                             g$e$8277$XW@M@))
                                         (g$chi-expr$7883$XW@M@
                                           (car (g$binding-value$7605$XW@M@
                                                  g$b$8285$XW@M@))
                                           g$r$8278$XW@M@
                                           g$mr$8279$XW@M@)))))))
                                (g$binding-type$7604$XW@M@ g$b$8285$XW@M@))))
                            (g$label->binding$7602$XW@M@
                              g$lab$8284$XW@M@
                              g$r$8278$XW@M@))))
                        (g$id->label$7600$XW@M@ g$id$8283$XW@M@))))
                    g$ls/false$8281$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8280$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8280$XW@M@ '(_ any)))))
         g$e$8277$XW@M@))))
   (g$record-constructor-descriptor-transformer$7820$XW@M@
     g$record-constructor-descriptor-transformer$11270$XW@M@
     (case-lambda
       ((g$e$8287$XW@M@ g$r$8288$XW@M@ g$mr$8289$XW@M@)
        ((case-lambda
           ((g$t$8290$XW@M@)
            ((case-lambda
               ((g$ls/false$8291$XW@M@)
                (if (if g$ls/false$8291$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8292$XW@M@)
                             (g$id?$7587$XW@M@ g$id$8292$XW@M@)))
                          g$ls/false$8291$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8293$XW@M@)
                       ((case-lambda
                          ((g$lab$8294$XW@M@)
                           ((case-lambda
                              ((g$b$8295$XW@M@)
                               ((case-lambda
                                  ((g$type$8296$XW@M@)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$8294$XW@M@
                                           (void)
                                           (g$raise-unbound-error$7606$XW@M@
                                             g$id$8293$XW@M@))
                                         (if (if (eq? g$type$8296$XW@M@ '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7605$XW@M@
                                                     g$b$8295$XW@M@)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid type"
                                             g$e$8287$XW@M@))
                                         (g$chi-expr$7883$XW@M@
                                           (g$cadr$5402$XW@M@
                                             (g$binding-value$7605$XW@M@
                                               g$b$8295$XW@M@))
                                           g$r$8288$XW@M@
                                           g$mr$8289$XW@M@)))))))
                                (g$binding-type$7604$XW@M@ g$b$8295$XW@M@))))
                            (g$label->binding$7602$XW@M@
                              g$lab$8294$XW@M@
                              g$r$8288$XW@M@))))
                        (g$id->label$7600$XW@M@ g$id$8293$XW@M@))))
                    g$ls/false$8291$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8290$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8290$XW@M@ '(_ any)))))
         g$e$8287$XW@M@))))
   (g$when-transformer$7821$XW@M@
     g$when-transformer$11271$XW@M@
     (case-lambda
       ((g$e$8297$XW@M@ g$r$8298$XW@M@ g$mr$8299$XW@M@)
        ((case-lambda
           ((g$t$8300$XW@M@)
            ((case-lambda
               ((g$ls/false$8301$XW@M@)
                (if g$ls/false$8301$XW@M@
                  (apply
                    (case-lambda
                      ((g$test$8302$XW@M@ g$e$8303$XW@M@ g$e*$8304$XW@M@)
                       (list
                         'if
                         (g$chi-expr$7883$XW@M@
                           g$test$8302$XW@M@
                           g$r$8298$XW@M@
                           g$mr$8299$XW@M@)
                         (g$build-sequence$7521$XW@M@
                           '#f
                           (g$chi-expr*$7881$XW@M@
                             (cons g$e$8303$XW@M@ g$e*$8304$XW@M@)
                             g$r$8298$XW@M@
                             g$mr$8299$XW@M@))
                         (g$build-void$7522$XW@M@))))
                    g$ls/false$8301$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8300$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8300$XW@M@
               '(_ any any . each-any)))))
         g$e$8297$XW@M@))))
   (g$unless-transformer$7822$XW@M@
     g$unless-transformer$11272$XW@M@
     (case-lambda
       ((g$e$8305$XW@M@ g$r$8306$XW@M@ g$mr$8307$XW@M@)
        ((case-lambda
           ((g$t$8308$XW@M@)
            ((case-lambda
               ((g$ls/false$8309$XW@M@)
                (if g$ls/false$8309$XW@M@
                  (apply
                    (case-lambda
                      ((g$test$8310$XW@M@ g$e$8311$XW@M@ g$e*$8312$XW@M@)
                       (list
                         'if
                         (g$chi-expr$7883$XW@M@
                           g$test$8310$XW@M@
                           g$r$8306$XW@M@
                           g$mr$8307$XW@M@)
                         (g$build-void$7522$XW@M@)
                         (g$build-sequence$7521$XW@M@
                           '#f
                           (g$chi-expr*$7881$XW@M@
                             (cons g$e$8311$XW@M@ g$e*$8312$XW@M@)
                             g$r$8306$XW@M@
                             g$mr$8307$XW@M@)))))
                    g$ls/false$8309$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8308$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8308$XW@M@
               '(_ any any . each-any)))))
         g$e$8305$XW@M@))))
   (g$if-transformer$7823$XW@M@
     g$if-transformer$11273$XW@M@
     (case-lambda
       ((g$e$8313$XW@M@ g$r$8314$XW@M@ g$mr$8315$XW@M@)
        ((case-lambda
           ((g$t$8316$XW@M@)
            ((case-lambda
               ((g$ls/false$8317$XW@M@)
                (if g$ls/false$8317$XW@M@
                  (apply
                    (case-lambda
                      ((g$e0$8318$XW@M@ g$e1$8319$XW@M@ g$e2$8320$XW@M@)
                       (list
                         'if
                         (g$chi-expr$7883$XW@M@
                           g$e0$8318$XW@M@
                           g$r$8314$XW@M@
                           g$mr$8315$XW@M@)
                         (g$chi-expr$7883$XW@M@
                           g$e1$8319$XW@M@
                           g$r$8314$XW@M@
                           g$mr$8315$XW@M@)
                         (g$chi-expr$7883$XW@M@
                           g$e2$8320$XW@M@
                           g$r$8314$XW@M@
                           g$mr$8315$XW@M@))))
                    g$ls/false$8317$XW@M@)
                  ((case-lambda
                     ((g$t$8321$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8322$XW@M@)
                          (if g$ls/false$8322$XW@M@
                            (apply
                              (case-lambda
                                ((g$e0$8323$XW@M@ g$e1$8324$XW@M@)
                                 (list
                                   'if
                                   (g$chi-expr$7883$XW@M@
                                     g$e0$8323$XW@M@
                                     g$r$8314$XW@M@
                                     g$mr$8315$XW@M@)
                                   (g$chi-expr$7883$XW@M@
                                     g$e1$8324$XW@M@
                                     g$r$8314$XW@M@
                                     g$mr$8315$XW@M@)
                                   (g$build-void$7522$XW@M@))))
                              g$ls/false$8322$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8321$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8321$XW@M@
                         '(_ any any)))))
                   g$t$8316$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8316$XW@M@ '(_ any any any)))))
         g$e$8313$XW@M@))))
   (g$case-transformer$7824$XW@M@
     g$case-transformer$11274$XW@M@
     (case-lambda
       ((g$e$8325$XW@M@ g$r$8326$XW@M@ g$mr$8327$XW@M@)
        (letrec* ((g$build-one$8328$XW@M@
                    (case-lambda
                      ((g$t$8357$XW@M@ g$cls$8358$XW@M@ g$rest$8359$XW@M@)
                       ((case-lambda
                          ((g$t$8360$XW@M@)
                           ((case-lambda
                              ((g$ls/false$8361$XW@M@)
                               (if g$ls/false$8361$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$d*$8362$XW@M@
                                        g$e$8363$XW@M@
                                        g$e*$8364$XW@M@)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$8365$XW@M@)
                                            (if (= '1
                                                   (length g$data$8365$XW@M@))
                                              (list
                                                '(primitive eqv?)
                                                g$t$8357$XW@M@
                                                (list
                                                  'quote
                                                  (car g$data$8365$XW@M@)))
                                              (list
                                                '(primitive memv)
                                                g$t$8357$XW@M@
                                                (list
                                                  'quote
                                                  g$data$8365$XW@M@)))))
                                         (g$stx->datum$7598$XW@M@
                                           g$d*$8362$XW@M@))
                                        (g$build-sequence$7521$XW@M@
                                          '#f
                                          (g$chi-expr*$7881$XW@M@
                                            (cons
                                              g$e$8363$XW@M@
                                              g$e*$8364$XW@M@)
                                            g$r$8326$XW@M@
                                            g$mr$8327$XW@M@))
                                        g$rest$8359$XW@M@)))
                                   g$ls/false$8361$XW@M@)
                                 ((case-lambda
                                    ((g$t$8366$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$8367$XW@M@)
                                         (if g$ls/false$8367$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$else$8368$XW@M@)
                                                (g$syntax-violation$7971$XW@M@
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$8325$XW@M@)))
                                             g$ls/false$8367$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$8366$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$8366$XW@M@
                                        'any))))
                                  g$t$8360$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$8360$XW@M@
                              '(each-any any . each-any)))))
                        g$cls$8358$XW@M@))))
                  (g$build-last$8329$XW@M@
                    (case-lambda
                      ((g$t$8342$XW@M@ g$cls$8343$XW@M@)
                       ((case-lambda
                          ((g$t$8344$XW@M@)
                           ((case-lambda
                              ((g$ls/false$8345$XW@M@)
                               (if g$ls/false$8345$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$d*$8346$XW@M@
                                        g$e$8347$XW@M@
                                        g$e*$8348$XW@M@)
                                      (g$build-one$8328$XW@M@
                                        g$t$8342$XW@M@
                                        g$cls$8343$XW@M@
                                        (g$build-void$7522$XW@M@))))
                                   g$ls/false$8345$XW@M@)
                                 ((case-lambda
                                    ((g$t$8349$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$8350$XW@M@)
                                         (if g$ls/false$8350$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$8351$XW@M@
                                                  g$x$8352$XW@M@
                                                  g$x*$8353$XW@M@)
                                                (if (if (g$id?$7587$XW@M@
                                                          g$else-kwd$8351$XW@M@)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$7591$XW@M@
                                                          g$else-kwd$8351$XW@M@
                                                          (g$scheme-stx$7808$XW@M@
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$7521$XW@M@
                                                    '#f
                                                    (g$chi-expr*$7881$XW@M@
                                                      (cons
                                                        g$x$8352$XW@M@
                                                        g$x*$8353$XW@M@)
                                                      g$r$8326$XW@M@
                                                      g$mr$8327$XW@M@))
                                                  (g$syntax-violation$7971$XW@M@
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$8325$XW@M@))))
                                             g$ls/false$8350$XW@M@)
                                           ((case-lambda
                                              ((g$t$8354$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$8355$XW@M@)
                                                   (if g$ls/false$8355$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$8356$XW@M@)
                                                          (g$syntax-violation$7971$XW@M@
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$8325$XW@M@)))
                                                       g$ls/false$8355$XW@M@)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8354$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$8354$XW@M@
                                                  'any))))
                                            g$t$8349$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$8349$XW@M@
                                        '(any any . each-any)))))
                                  g$t$8344$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$8344$XW@M@
                              '(each-any any . each-any)))))
                        g$cls$8343$XW@M@)))))
          ((case-lambda
             ((g$t$8330$XW@M@)
              ((case-lambda
                 ((g$ls/false$8331$XW@M@)
                  (if g$ls/false$8331$XW@M@
                    (apply
                      (case-lambda
                        ((g$expr$8332$XW@M@)
                         (g$build-sequence$7521$XW@M@
                           '#f
                           (list
                             (g$chi-expr$7883$XW@M@
                               g$expr$8332$XW@M@
                               g$r$8326$XW@M@
                               g$mr$8327$XW@M@)
                             (g$build-void$7522$XW@M@)))))
                      g$ls/false$8331$XW@M@)
                    ((case-lambda
                       ((g$t$8333$XW@M@)
                        ((case-lambda
                           ((g$ls/false$8334$XW@M@)
                            (if g$ls/false$8334$XW@M@
                              (apply
                                (case-lambda
                                  ((g$expr$8335$XW@M@
                                     g$cls$8336$XW@M@
                                     g$cls*$8337$XW@M@)
                                   ((case-lambda
                                      ((g$t$8338$XW@M@)
                                       (g$build-let$7520$XW@M@
                                         '#f
                                         (list g$t$8338$XW@M@)
                                         (list
                                           (g$chi-expr$7883$XW@M@
                                             g$expr$8335$XW@M@
                                             g$r$8326$XW@M@
                                             g$mr$8327$XW@M@))
                                         ((letrec ((g$f$8339$XW@M@
                                                     (case-lambda
                                                       ((g$cls$8340$XW@M@
                                                          g$cls*$8341$XW@M@)
                                                        (if (null?
                                                              g$cls*$8341$XW@M@)
                                                          (g$build-last$8329$XW@M@
                                                            g$t$8338$XW@M@
                                                            g$cls$8340$XW@M@)
                                                          (g$build-one$8328$XW@M@
                                                            g$t$8338$XW@M@
                                                            g$cls$8340$XW@M@
                                                            (g$f$8339$XW@M@
                                                              (car g$cls*$8341$XW@M@)
                                                              (cdr g$cls*$8341$XW@M@))))))))
                                            g$f$8339$XW@M@)
                                          g$cls$8336$XW@M@
                                          g$cls*$8337$XW@M@))))
                                    (g$gen-lexical$7531$XW@M@ 't))))
                                g$ls/false$8334$XW@M@)
                              (g$syntax-violation$7971$XW@M@
                                '#f
                                '"invalid syntax"
                                g$t$8333$XW@M@))))
                         (g$syntax-dispatch$7865$XW@M@
                           g$t$8333$XW@M@
                           '(_ any any . each-any)))))
                     g$t$8330$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@ g$t$8330$XW@M@ '(_ any)))))
           g$e$8325$XW@M@)))))
   (g$quote-transformer$7825$XW@M@
     g$quote-transformer$11275$XW@M@
     (case-lambda
       ((g$e$8369$XW@M@ g$r$8370$XW@M@ g$mr$8371$XW@M@)
        ((case-lambda
           ((g$t$8372$XW@M@)
            ((case-lambda
               ((g$ls/false$8373$XW@M@)
                (if g$ls/false$8373$XW@M@
                  (apply
                    (case-lambda
                      ((g$datum$8374$XW@M@)
                       (list
                         'quote
                         (g$stx->datum$7598$XW@M@ g$datum$8374$XW@M@))))
                    g$ls/false$8373$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8372$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8372$XW@M@ '(_ any)))))
         g$e$8369$XW@M@))))
   (g$case-lambda-transformer$7826$XW@M@
     g$case-lambda-transformer$11276$XW@M@
     (case-lambda
       ((g$e$8375$XW@M@ g$r$8376$XW@M@ g$mr$8377$XW@M@)
        ((case-lambda
           ((g$t$8378$XW@M@)
            ((case-lambda
               ((g$ls/false$8379$XW@M@)
                (if g$ls/false$8379$XW@M@
                  (apply
                    (case-lambda
                      ((g$fmls*$8380$XW@M@ g$b*$8381$XW@M@ g$b**$8382$XW@M@)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7887$XW@M@
                              g$e$8375$XW@M@
                              g$fmls*$8380$XW@M@
                              (map cons g$b*$8381$XW@M@ g$b**$8382$XW@M@)
                              g$r$8376$XW@M@
                              g$mr$8377$XW@M@)))
                         (case-lambda
                           ((g$fmls*$8385$XW@M@ g$body*$8386$XW@M@)
                            ((case-lambda
                               ((g$body*$8387$XW@M@ g$fmls*$8388$XW@M@)
                                (g$build-case-lambda$7519$XW@M@
                                  '#f
                                  g$fmls*$8388$XW@M@
                                  g$body*$8387$XW@M@)))
                             g$body*$8386$XW@M@
                             g$fmls*$8385$XW@M@))))))
                    g$ls/false$8379$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8378$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8378$XW@M@
               '(_ . #(each (any any . each-any)))))))
         g$e$8375$XW@M@))))
   (g$lambda-transformer$7827$XW@M@
     g$lambda-transformer$11277$XW@M@
     (case-lambda
       ((g$e$8389$XW@M@ g$r$8390$XW@M@ g$mr$8391$XW@M@)
        ((case-lambda
           ((g$t$8392$XW@M@)
            ((case-lambda
               ((g$ls/false$8393$XW@M@)
                (if g$ls/false$8393$XW@M@
                  (apply
                    (case-lambda
                      ((g$fmls$8394$XW@M@ g$b$8395$XW@M@ g$b*$8396$XW@M@)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7886$XW@M@
                              g$e$8389$XW@M@
                              g$fmls$8394$XW@M@
                              (cons g$b$8395$XW@M@ g$b*$8396$XW@M@)
                              g$r$8390$XW@M@
                              g$mr$8391$XW@M@)))
                         (case-lambda
                           ((g$fmls$8399$XW@M@ g$body$8400$XW@M@)
                            ((case-lambda
                               ((g$body$8401$XW@M@ g$fmls$8402$XW@M@)
                                (g$build-lambda$7518$XW@M@
                                  '#f
                                  g$fmls$8402$XW@M@
                                  g$body$8401$XW@M@)))
                             g$body$8400$XW@M@
                             g$fmls$8399$XW@M@))))))
                    g$ls/false$8393$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8392$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8392$XW@M@
               '(_ any any . each-any)))))
         g$e$8389$XW@M@))))
   (g$bless$7828$XW@M@
     g$bless$11278$XW@M@
     (case-lambda
       ((g$x$8403$XW@M@)
        (g$mkstx$7575$XW@M@
          ((letrec ((g$f$8404$XW@M@
                      (case-lambda
                        ((g$x$8405$XW@M@)
                         (if (g$stx?$7559$XW@M@ g$x$8405$XW@M@)
                           g$x$8405$XW@M@
                           (if (pair? g$x$8405$XW@M@)
                             (cons
                               (g$f$8404$XW@M@ (car g$x$8405$XW@M@))
                               (g$f$8404$XW@M@ (cdr g$x$8405$XW@M@)))
                             (if (symbol? g$x$8405$XW@M@)
                               (g$scheme-stx$7808$XW@M@ g$x$8405$XW@M@)
                               (if (vector? g$x$8405$XW@M@)
                                 (vector-map g$f$8404$XW@M@ g$x$8405$XW@M@)
                                 g$x$8405$XW@M@))))))))
             g$f$8404$XW@M@)
           g$x$8403$XW@M@)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7829$XW@M@
     g$with-syntax-macro$11279$XW@M@
     (case-lambda
       ((g$e$8406$XW@M@)
        ((case-lambda
           ((g$t$8407$XW@M@)
            ((case-lambda
               ((g$ls/false$8408$XW@M@)
                (if g$ls/false$8408$XW@M@
                  (apply
                    (case-lambda
                      ((g$pat*$8409$XW@M@
                         g$expr*$8410$XW@M@
                         g$b$8411$XW@M@
                         g$b*$8412$XW@M@)
                       ((case-lambda
                          ((g$idn*$8413$XW@M@)
                           (begin
                             (g$verify-formals$7885$XW@M@
                               (map car g$idn*$8413$XW@M@)
                               g$e$8406$XW@M@)
                             ((case-lambda
                                ((g$t*$8414$XW@M@)
                                 (g$bless$7828$XW@M@
                                   (list
                                     'let
                                     (map list
                                          g$t*$8414$XW@M@
                                          g$expr*$8410$XW@M@)
                                     ((letrec ((g$f$8415$XW@M@
                                                 (case-lambda
                                                   ((g$pat*$8416$XW@M@
                                                      g$t*$8417$XW@M@)
                                                    (if (null?
                                                          g$pat*$8416$XW@M@)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8411$XW@M@
                                                            g$b*$8412$XW@M@)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8417$XW@M@)
                                                        '()
                                                        (list
                                                          (car g$pat*$8416$XW@M@)
                                                          (g$f$8415$XW@M@
                                                            (cdr g$pat*$8416$XW@M@)
                                                            (cdr g$t*$8417$XW@M@)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8416$XW@M@))
                                                            (car g$t*$8417$XW@M@)))))))))
                                        g$f$8415$XW@M@)
                                      g$pat*$8409$XW@M@
                                      g$t*$8414$XW@M@)))))
                              (g$generate-temporaries$7964$XW@M@
                                g$expr*$8410$XW@M@)))))
                        ((letrec ((g$f$8418$XW@M@
                                    (case-lambda
                                      ((g$pat*$8419$XW@M@)
                                       (if (null? g$pat*$8419$XW@M@)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7864$XW@M@
                                                (car g$pat*$8419$XW@M@)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8422$XW@M@
                                                g$idn*$8423$XW@M@)
                                              ((case-lambda
                                                 ((g$idn*$8424$XW@M@
                                                    g$pat$8425$XW@M@)
                                                  (append
                                                    g$idn*$8424$XW@M@
                                                    (g$f$8418$XW@M@
                                                      (cdr g$pat*$8419$XW@M@)))))
                                               g$idn*$8423$XW@M@
                                               g$pat$8422$XW@M@)))))))))
                           g$f$8418$XW@M@)
                         g$pat*$8409$XW@M@))))
                    g$ls/false$8408$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8407$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8407$XW@M@
               '(_ #(each (any any)) any . each-any)))))
         g$e$8406$XW@M@))))
   (g$invalid-fmls-error$7830$XW@M@
     g$invalid-fmls-error$11280$XW@M@
     (case-lambda
       ((g$stx$8426$XW@M@ g$fmls$8427$XW@M@)
        ((case-lambda
           ((g$t$8428$XW@M@)
            ((case-lambda
               ((g$ls/false$8429$XW@M@)
                (if g$ls/false$8429$XW@M@
                  (apply
                    (case-lambda
                      ((g$id*$8430$XW@M@ g$last$8431$XW@M@)
                       ((letrec ((g$f$8432$XW@M@
                                   (case-lambda
                                     ((g$id*$8433$XW@M@)
                                      (if (null? g$id*$8433$XW@M@)
                                        (values)
                                        (if (not (g$id?$7587$XW@M@
                                                   (car g$id*$8433$XW@M@)))
                                          (g$syntax-violation$7971$XW@M@
                                            '#f
                                            '"not an identifier"
                                            g$stx$8426$XW@M@
                                            (car g$id*$8433$XW@M@))
                                          (begin
                                            (g$f$8432$XW@M@
                                              (cdr g$id*$8433$XW@M@))
                                            (if (g$bound-id-member?$7594$XW@M@
                                                  (car g$id*$8433$XW@M@)
                                                  (cdr g$id*$8433$XW@M@))
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8426$XW@M@
                                                (car g$id*$8433$XW@M@))
                                              (void)))))))))
                          g$f$8432$XW@M@)
                        (if (g$id?$7587$XW@M@ g$last$8431$XW@M@)
                          (cons g$last$8431$XW@M@ g$id*$8430$XW@M@)
                          (if (g$syntax-null?$7582$XW@M@ g$last$8431$XW@M@)
                            g$id*$8430$XW@M@
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"not an identifier"
                              g$stx$8426$XW@M@
                              g$last$8431$XW@M@))))))
                    g$ls/false$8429$XW@M@)
                  ((case-lambda
                     ((g$t$8434$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8435$XW@M@)
                          (if g$ls/false$8435$XW@M@
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7971$XW@M@
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8426$XW@M@
                                   g$fmls$8427$XW@M@)))
                              g$ls/false$8435$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8434$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@ g$t$8434$XW@M@ '_))))
                   g$t$8428$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8428$XW@M@
               '#(each+ any () any)))))
         g$fmls$8427$XW@M@))))
   (g$let-macro$7831$XW@M@
     g$let-macro$11281$XW@M@
     (case-lambda
       ((g$stx$8436$XW@M@)
        ((case-lambda
           ((g$t$8437$XW@M@)
            ((case-lambda
               ((g$ls/false$8438$XW@M@)
                (if g$ls/false$8438$XW@M@
                  (apply
                    (case-lambda
                      ((g$lhs*$8439$XW@M@
                         g$rhs*$8440$XW@M@
                         g$b$8441$XW@M@
                         g$b*$8442$XW@M@)
                       (if (g$valid-bound-ids?$7592$XW@M@ g$lhs*$8439$XW@M@)
                         (g$bless$7828$XW@M@
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8439$XW@M@
                                 (cons g$b$8441$XW@M@ g$b*$8442$XW@M@)))
                             g$rhs*$8440$XW@M@))
                         (g$invalid-fmls-error$7830$XW@M@
                           g$stx$8436$XW@M@
                           g$lhs*$8439$XW@M@))))
                    g$ls/false$8438$XW@M@)
                  ((case-lambda
                     ((g$t$8443$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8444$XW@M@)
                          (if (if g$ls/false$8444$XW@M@
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8445$XW@M@
                                         g$lhs*$8446$XW@M@
                                         g$rhs*$8447$XW@M@
                                         g$b$8448$XW@M@
                                         g$b*$8449$XW@M@)
                                       (g$id?$7587$XW@M@ g$f$8445$XW@M@)))
                                    g$ls/false$8444$XW@M@))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8450$XW@M@
                                   g$lhs*$8451$XW@M@
                                   g$rhs*$8452$XW@M@
                                   g$b$8453$XW@M@
                                   g$b*$8454$XW@M@)
                                 (if (g$valid-bound-ids?$7592$XW@M@
                                       g$lhs*$8451$XW@M@)
                                   (g$bless$7828$XW@M@
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8450$XW@M@
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8451$XW@M@
                                                 (cons
                                                   g$b$8453$XW@M@
                                                   g$b*$8454$XW@M@)))))
                                         g$f$8450$XW@M@)
                                       g$rhs*$8452$XW@M@))
                                   (g$invalid-fmls-error$7830$XW@M@
                                     g$stx$8436$XW@M@
                                     g$lhs*$8451$XW@M@))))
                              g$ls/false$8444$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8443$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8443$XW@M@
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8437$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8437$XW@M@
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8436$XW@M@))))
   (g$let-values-macro$7832$XW@M@
     g$let-values-macro$11282$XW@M@
     (case-lambda
       ((g$stx$8455$XW@M@)
        (letrec* ((g$rename$8456$XW@M@
                    (case-lambda
                      ((g$x$8507$XW@M@ g$old*$8508$XW@M@ g$new*$8509$XW@M@)
                       (begin
                         (if (g$id?$7587$XW@M@ g$x$8507$XW@M@)
                           (void)
                           (g$syntax-violation$7971$XW@M@
                             '#f
                             '"not an indentifier"
                             g$stx$8455$XW@M@
                             g$x$8507$XW@M@))
                         (if (g$bound-id-member?$7594$XW@M@
                               g$x$8507$XW@M@
                               g$old*$8508$XW@M@)
                           (g$syntax-violation$7971$XW@M@
                             '#f
                             '"duplicate binding"
                             g$stx$8455$XW@M@
                             g$x$8507$XW@M@)
                           (void))
                         ((case-lambda
                            ((g$y$8510$XW@M@)
                             (values
                               g$y$8510$XW@M@
                               (cons g$x$8507$XW@M@ g$old*$8508$XW@M@)
                               (cons g$y$8510$XW@M@ g$new*$8509$XW@M@))))
                          (gensym
                            (g$syntax->datum$7974$XW@M@ g$x$8507$XW@M@)))))))
                  (g$rename*$8457$XW@M@
                    (case-lambda
                      ((g$x*$8498$XW@M@ g$old*$8499$XW@M@ g$new*$8500$XW@M@)
                       (if (null? g$x*$8498$XW@M@)
                         (values '() g$old*$8499$XW@M@ g$new*$8500$XW@M@)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8456$XW@M@
                                (car g$x*$8498$XW@M@)
                                g$old*$8499$XW@M@
                                g$new*$8500$XW@M@)))
                           (case-lambda
                             ((g$x$8501$XW@M@
                                g$old*$8502$XW@M@
                                g$new*$8503$XW@M@)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8457$XW@M@
                                     (cdr g$x*$8498$XW@M@)
                                     g$old*$8502$XW@M@
                                     g$new*$8503$XW@M@)))
                                (case-lambda
                                  ((g$x*$8504$XW@M@
                                     g$old*$8505$XW@M@
                                     g$new*$8506$XW@M@)
                                   (values
                                     (cons g$x$8501$XW@M@ g$x*$8504$XW@M@)
                                     g$old*$8505$XW@M@
                                     g$new*$8506$XW@M@))))))))))))
          ((case-lambda
             ((g$t$8458$XW@M@)
              ((case-lambda
                 ((g$ls/false$8459$XW@M@)
                  (if g$ls/false$8459$XW@M@
                    (apply
                      (case-lambda
                        ((g$b$8460$XW@M@ g$b*$8461$XW@M@)
                         (g$cons*$5873$XW@M@
                           (g$bless$7828$XW@M@ 'let)
                           '()
                           g$b$8460$XW@M@
                           g$b*$8461$XW@M@)))
                      g$ls/false$8459$XW@M@)
                    ((case-lambda
                       ((g$t$8462$XW@M@)
                        ((case-lambda
                           ((g$ls/false$8463$XW@M@)
                            (if g$ls/false$8463$XW@M@
                              (apply
                                (case-lambda
                                  ((g$lhs*$8464$XW@M@
                                     g$rhs*$8465$XW@M@
                                     g$b$8466$XW@M@
                                     g$b*$8467$XW@M@)
                                   (g$bless$7828$XW@M@
                                     ((letrec ((g$f$8468$XW@M@
                                                 (case-lambda
                                                   ((g$lhs*$8469$XW@M@
                                                      g$rhs*$8470$XW@M@
                                                      g$old*$8471$XW@M@
                                                      g$new*$8472$XW@M@)
                                                    (if (null?
                                                          g$lhs*$8469$XW@M@)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8471$XW@M@
                                                               g$new*$8472$XW@M@)
                                                          (cons
                                                            g$b$8466$XW@M@
                                                            g$b*$8467$XW@M@)))
                                                      ((case-lambda
                                                         ((g$t$8473$XW@M@)
                                                          ((case-lambda
                                                             ((g$ls/false$8474$XW@M@)
                                                              (if g$ls/false$8474$XW@M@
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8475$XW@M@)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8457$XW@M@
                                                                            g$x*$8475$XW@M@
                                                                            g$old*$8471$XW@M@
                                                                            g$new*$8472$XW@M@)))
                                                                       (case-lambda
                                                                         ((g$y*$8479$XW@M@
                                                                            g$old*$8480$XW@M@
                                                                            g$new*$8481$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$new*$8482$XW@M@
                                                                                g$old*$8483$XW@M@
                                                                                g$y*$8484$XW@M@)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8470$XW@M@))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8484$XW@M@
                                                                                  (g$f$8468$XW@M@
                                                                                    (cdr g$lhs*$8469$XW@M@)
                                                                                    (cdr g$rhs*$8470$XW@M@)
                                                                                    g$old*$8483$XW@M@
                                                                                    g$new*$8482$XW@M@)))))
                                                                           g$new*$8481$XW@M@
                                                                           g$old*$8480$XW@M@
                                                                           g$y*$8479$XW@M@))))))
                                                                  g$ls/false$8474$XW@M@)
                                                                ((case-lambda
                                                                   ((g$t$8485$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8486$XW@M@)
                                                                        (if g$ls/false$8486$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8487$XW@M@
                                                                                 g$x$8488$XW@M@)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8456$XW@M@
                                                                                      g$x$8488$XW@M@
                                                                                      g$old*$8471$XW@M@
                                                                                      g$new*$8472$XW@M@)))
                                                                                 (case-lambda
                                                                                   ((g$y$8489$XW@M@
                                                                                      g$old*$8490$XW@M@
                                                                                      g$new*$8491$XW@M@)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8457$XW@M@
                                                                                           g$x*$8487$XW@M@
                                                                                           g$old*$8490$XW@M@
                                                                                           g$new*$8491$XW@M@)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8492$XW@M@
                                                                                           g$old*$8493$XW@M@
                                                                                           g$new*$8494$XW@M@)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8470$XW@M@))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8492$XW@M@
                                                                                               g$y$8489$XW@M@)
                                                                                             (g$f$8468$XW@M@
                                                                                               (cdr g$lhs*$8469$XW@M@)
                                                                                               (cdr g$rhs*$8470$XW@M@)
                                                                                               g$old*$8493$XW@M@
                                                                                               g$new*$8494$XW@M@)))))))))))
                                                                            g$ls/false$8486$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$8495$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8496$XW@M@)
                                                                                  (if g$ls/false$8496$XW@M@
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8497$XW@M@)
                                                                                         (g$syntax-violation$7971$XW@M@
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8455$XW@M@
                                                                                           g$others$8497$XW@M@)))
                                                                                      g$ls/false$8496$XW@M@)
                                                                                    (g$syntax-violation$7971$XW@M@
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8495$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$8495$XW@M@
                                                                                 'any))))
                                                                           g$t$8485$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$8485$XW@M@
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8473$XW@M@))))
                                                           (g$syntax-dispatch$7865$XW@M@
                                                             g$t$8473$XW@M@
                                                             'each-any))))
                                                       (car g$lhs*$8469$XW@M@)))))))
                                        g$f$8468$XW@M@)
                                      g$lhs*$8464$XW@M@
                                      g$rhs*$8465$XW@M@
                                      '()
                                      '()))))
                                g$ls/false$8463$XW@M@)
                              (g$syntax-violation$7971$XW@M@
                                '#f
                                '"invalid syntax"
                                g$t$8462$XW@M@))))
                         (g$syntax-dispatch$7865$XW@M@
                           g$t$8462$XW@M@
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8458$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8458$XW@M@
                 '(_ () any . each-any)))))
           g$stx$8455$XW@M@)))))
   (g$let*-values-macro$7833$XW@M@
     g$let*-values-macro$11283$XW@M@
     (case-lambda
       ((g$stx$8511$XW@M@)
        (letrec* ((g$check$8512$XW@M@
                    (case-lambda
                      ((g$x*$8536$XW@M@)
                       (if (null? g$x*$8536$XW@M@)
                         (void)
                         ((case-lambda
                            ((g$x$8537$XW@M@)
                             (begin
                               (if (g$id?$7587$XW@M@ g$x$8537$XW@M@)
                                 (void)
                                 (g$syntax-violation$7971$XW@M@
                                   '#f
                                   '"not an identifier"
                                   g$stx$8511$XW@M@
                                   g$x$8537$XW@M@))
                               (g$check$8512$XW@M@ (cdr g$x*$8536$XW@M@))
                               (if (g$bound-id-member?$7594$XW@M@
                                     g$x$8537$XW@M@
                                     (cdr g$x*$8536$XW@M@))
                                 (g$syntax-violation$7971$XW@M@
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8511$XW@M@
                                   g$x$8537$XW@M@)
                                 (void)))))
                          (car g$x*$8536$XW@M@)))))))
          ((case-lambda
             ((g$t$8513$XW@M@)
              ((case-lambda
                 ((g$ls/false$8514$XW@M@)
                  (if g$ls/false$8514$XW@M@
                    (apply
                      (case-lambda
                        ((g$b$8515$XW@M@ g$b*$8516$XW@M@)
                         (g$cons*$5873$XW@M@
                           (g$bless$7828$XW@M@ 'let)
                           '()
                           g$b$8515$XW@M@
                           g$b*$8516$XW@M@)))
                      g$ls/false$8514$XW@M@)
                    ((case-lambda
                       ((g$t$8517$XW@M@)
                        ((case-lambda
                           ((g$ls/false$8518$XW@M@)
                            (if g$ls/false$8518$XW@M@
                              (apply
                                (case-lambda
                                  ((g$lhs*$8519$XW@M@
                                     g$rhs*$8520$XW@M@
                                     g$b$8521$XW@M@
                                     g$b*$8522$XW@M@)
                                   (g$bless$7828$XW@M@
                                     ((letrec ((g$f$8523$XW@M@
                                                 (case-lambda
                                                   ((g$lhs*$8524$XW@M@
                                                      g$rhs*$8525$XW@M@)
                                                    (if (null?
                                                          g$lhs*$8524$XW@M@)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8521$XW@M@
                                                          g$b*$8522$XW@M@))
                                                      ((case-lambda
                                                         ((g$t$8526$XW@M@)
                                                          ((case-lambda
                                                             ((g$ls/false$8527$XW@M@)
                                                              (if g$ls/false$8527$XW@M@
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8528$XW@M@)
                                                                     (begin
                                                                       (g$check$8512$XW@M@
                                                                         g$x*$8528$XW@M@)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8525$XW@M@))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8528$XW@M@
                                                                           (g$f$8523$XW@M@
                                                                             (cdr g$lhs*$8524$XW@M@)
                                                                             (cdr g$rhs*$8525$XW@M@)))))))
                                                                  g$ls/false$8527$XW@M@)
                                                                ((case-lambda
                                                                   ((g$t$8529$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8530$XW@M@)
                                                                        (if g$ls/false$8530$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8531$XW@M@
                                                                                 g$x$8532$XW@M@)
                                                                               (begin
                                                                                 (g$check$8512$XW@M@
                                                                                   (cons
                                                                                     g$x$8532$XW@M@
                                                                                     g$x*$8531$XW@M@))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8525$XW@M@))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8531$XW@M@
                                                                                       g$x$8532$XW@M@)
                                                                                     (g$f$8523$XW@M@
                                                                                       (cdr g$lhs*$8524$XW@M@)
                                                                                       (cdr g$rhs*$8525$XW@M@)))))))
                                                                            g$ls/false$8530$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$8533$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8534$XW@M@)
                                                                                  (if g$ls/false$8534$XW@M@
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8535$XW@M@)
                                                                                         (g$syntax-violation$7971$XW@M@
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8511$XW@M@
                                                                                           g$others$8535$XW@M@)))
                                                                                      g$ls/false$8534$XW@M@)
                                                                                    (g$syntax-violation$7971$XW@M@
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8533$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$8533$XW@M@
                                                                                 'any))))
                                                                           g$t$8529$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$8529$XW@M@
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8526$XW@M@))))
                                                           (g$syntax-dispatch$7865$XW@M@
                                                             g$t$8526$XW@M@
                                                             'each-any))))
                                                       (car g$lhs*$8524$XW@M@)))))))
                                        g$f$8523$XW@M@)
                                      g$lhs*$8519$XW@M@
                                      g$rhs*$8520$XW@M@))))
                                g$ls/false$8518$XW@M@)
                              (g$syntax-violation$7971$XW@M@
                                '#f
                                '"invalid syntax"
                                g$t$8517$XW@M@))))
                         (g$syntax-dispatch$7865$XW@M@
                           g$t$8517$XW@M@
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8513$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8513$XW@M@
                 '(_ () any . each-any)))))
           g$stx$8511$XW@M@)))))
   (g$trace-lambda-macro$7834$XW@M@
     g$trace-lambda-macro$11284$XW@M@
     (case-lambda
       ((g$stx$8538$XW@M@)
        ((case-lambda
           ((g$t$8539$XW@M@)
            ((case-lambda
               ((g$ls/false$8540$XW@M@)
                (if g$ls/false$8540$XW@M@
                  (apply
                    (case-lambda
                      ((g$who$8541$XW@M@
                         g$fmls$8542$XW@M@
                         g$b$8543$XW@M@
                         g$b*$8544$XW@M@)
                       (if (g$valid-bound-ids?$7592$XW@M@ g$fmls$8542$XW@M@)
                         (g$bless$7828$XW@M@
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8541$XW@M@)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8542$XW@M@
                                 (cons g$b$8543$XW@M@ g$b*$8544$XW@M@)))))
                         (g$invalid-fmls-error$7830$XW@M@
                           g$stx$8538$XW@M@
                           g$fmls$8542$XW@M@))))
                    g$ls/false$8540$XW@M@)
                  ((case-lambda
                     ((g$t$8545$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8546$XW@M@)
                          (if g$ls/false$8546$XW@M@
                            (apply
                              (case-lambda
                                ((g$who$8547$XW@M@
                                   g$fmls$8548$XW@M@
                                   g$last$8549$XW@M@
                                   g$b$8550$XW@M@
                                   g$b*$8551$XW@M@)
                                 (if (g$valid-bound-ids?$7592$XW@M@
                                       (cons
                                         g$last$8549$XW@M@
                                         g$fmls$8548$XW@M@))
                                   (g$bless$7828$XW@M@
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8547$XW@M@)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8548$XW@M@
                                             g$last$8549$XW@M@)
                                           (cons
                                             g$b$8550$XW@M@
                                             g$b*$8551$XW@M@)))))
                                   (g$invalid-fmls-error$7830$XW@M@
                                     g$stx$8538$XW@M@
                                     (append
                                       g$fmls$8548$XW@M@
                                       g$last$8549$XW@M@)))))
                              g$ls/false$8546$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8545$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8545$XW@M@
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8539$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8539$XW@M@
               '(_ any each-any any . each-any)))))
         g$stx$8538$XW@M@))))
   (g$trace-define-macro$7835$XW@M@
     g$trace-define-macro$11285$XW@M@
     (case-lambda
       ((g$stx$8552$XW@M@)
        ((case-lambda
           ((g$t$8553$XW@M@)
            ((case-lambda
               ((g$ls/false$8554$XW@M@)
                (if g$ls/false$8554$XW@M@
                  (apply
                    (case-lambda
                      ((g$who$8555$XW@M@
                         g$fmls$8556$XW@M@
                         g$b$8557$XW@M@
                         g$b*$8558$XW@M@)
                       (if (g$valid-bound-ids?$7592$XW@M@ g$fmls$8556$XW@M@)
                         (g$bless$7828$XW@M@
                           (list
                             'define
                             g$who$8555$XW@M@
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8555$XW@M@)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8556$XW@M@
                                   (cons g$b$8557$XW@M@ g$b*$8558$XW@M@))))))
                         (g$invalid-fmls-error$7830$XW@M@
                           g$stx$8552$XW@M@
                           g$fmls$8556$XW@M@))))
                    g$ls/false$8554$XW@M@)
                  ((case-lambda
                     ((g$t$8559$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8560$XW@M@)
                          (if g$ls/false$8560$XW@M@
                            (apply
                              (case-lambda
                                ((g$who$8561$XW@M@
                                   g$fmls$8562$XW@M@
                                   g$last$8563$XW@M@
                                   g$b$8564$XW@M@
                                   g$b*$8565$XW@M@)
                                 (if (g$valid-bound-ids?$7592$XW@M@
                                       (cons
                                         g$last$8563$XW@M@
                                         g$fmls$8562$XW@M@))
                                   (g$bless$7828$XW@M@
                                     (list
                                       'define
                                       g$who$8561$XW@M@
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8561$XW@M@)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8562$XW@M@
                                               g$last$8563$XW@M@)
                                             (cons
                                               g$b$8564$XW@M@
                                               g$b*$8565$XW@M@))))))
                                   (g$invalid-fmls-error$7830$XW@M@
                                     g$stx$8552$XW@M@
                                     (append
                                       g$fmls$8562$XW@M@
                                       g$last$8563$XW@M@)))))
                              g$ls/false$8560$XW@M@)
                            ((case-lambda
                               ((g$t$8566$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$8567$XW@M@)
                                    (if g$ls/false$8567$XW@M@
                                      (apply
                                        (case-lambda
                                          ((g$who$8568$XW@M@ g$expr$8569$XW@M@)
                                           (if (g$id?$7587$XW@M@
                                                 g$who$8568$XW@M@)
                                             (g$bless$7828$XW@M@
                                               (list
                                                 'define
                                                 g$who$8568$XW@M@
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8569$XW@M@))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8568$XW@M@)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7971$XW@M@
                                               '#f
                                               '"invalid name"
                                               g$stx$8552$XW@M@))))
                                        g$ls/false$8567$XW@M@)
                                      (g$syntax-violation$7971$XW@M@
                                        '#f
                                        '"invalid syntax"
                                        g$t$8566$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$8566$XW@M@
                                   '(_ any any)))))
                             g$t$8559$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8559$XW@M@
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8553$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8553$XW@M@
               '(_ (any . each-any) any . each-any)))))
         g$stx$8552$XW@M@))))
   (g$trace-define-syntax-macro$7836$XW@M@
     g$trace-define-syntax-macro$11286$XW@M@
     (case-lambda
       ((g$stx$8570$XW@M@)
        ((case-lambda
           ((g$t$8571$XW@M@)
            ((case-lambda
               ((g$ls/false$8572$XW@M@)
                (if g$ls/false$8572$XW@M@
                  (apply
                    (case-lambda
                      ((g$who$8573$XW@M@ g$expr$8574$XW@M@)
                       (if (g$id?$7587$XW@M@ g$who$8573$XW@M@)
                         (g$bless$7828$XW@M@
                           (list
                             'define-syntax
                             g$who$8573$XW@M@
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8573$XW@M@)
                               g$expr$8574$XW@M@)))
                         (g$syntax-violation$7971$XW@M@
                           '#f
                           '"invalid name"
                           g$stx$8570$XW@M@))))
                    g$ls/false$8572$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8571$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8571$XW@M@ '(_ any any)))))
         g$stx$8570$XW@M@))))
   (g$trace-let/rec-syntax$7837$XW@M@
     g$trace-let/rec-syntax$11287$XW@M@
     (case-lambda
       ((g$who$8575$XW@M@)
        (case-lambda
          ((g$stx$8576$XW@M@)
           ((case-lambda
              ((g$t$8577$XW@M@)
               ((case-lambda
                  ((g$ls/false$8578$XW@M@)
                   (if g$ls/false$8578$XW@M@
                     (apply
                       (case-lambda
                         ((g$lhs*$8579$XW@M@
                            g$rhs*$8580$XW@M@
                            g$b$8581$XW@M@
                            g$b*$8582$XW@M@)
                          (if (g$valid-bound-ids?$7592$XW@M@ g$lhs*$8579$XW@M@)
                            ((case-lambda
                               ((g$rhs*$8583$XW@M@)
                                (g$bless$7828$XW@M@
                                  (cons
                                    g$who$8575$XW@M@
                                    (cons
                                      (map list
                                           g$lhs*$8579$XW@M@
                                           g$rhs*$8583$XW@M@)
                                      (cons g$b$8581$XW@M@ g$b*$8582$XW@M@))))))
                             (map (case-lambda
                                    ((g$lhs$8584$XW@M@ g$rhs$8585$XW@M@)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8584$XW@M@)
                                       g$rhs$8585$XW@M@)))
                                  g$lhs*$8579$XW@M@
                                  g$rhs*$8580$XW@M@))
                            (g$invalid-fmls-error$7830$XW@M@
                              g$stx$8576$XW@M@
                              g$lhs*$8579$XW@M@))))
                       g$ls/false$8578$XW@M@)
                     (g$syntax-violation$7971$XW@M@
                       '#f
                       '"invalid syntax"
                       g$t$8577$XW@M@))))
                (g$syntax-dispatch$7865$XW@M@
                  g$t$8577$XW@M@
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8576$XW@M@))))))
   (g$trace-let-syntax-macro$7838$XW@M@
     g$trace-let-syntax-macro$11288$XW@M@
     (g$trace-let/rec-syntax$7837$XW@M@ 'let-syntax))
   (g$trace-letrec-syntax-macro$7839$XW@M@
     g$trace-letrec-syntax-macro$11289$XW@M@
     (g$trace-let/rec-syntax$7837$XW@M@ 'letrec-syntax))
   (g$guard-macro$7840$XW@M@
     g$guard-macro$11290$XW@M@
     (case-lambda
       ((g$x$8586$XW@M@)
        (letrec* ((g$gen-clauses$8587$XW@M@
                    (case-lambda
                      ((g$con$8599$XW@M@
                         g$outerk$8600$XW@M@
                         g$clause*$8601$XW@M@)
                       (letrec* ((g$f$8602$XW@M@
                                   (case-lambda
                                     ((g$x$8630$XW@M@ g$k$8631$XW@M@)
                                      ((case-lambda
                                         ((g$t$8632$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$8633$XW@M@)
                                              (if g$ls/false$8633$XW@M@
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8634$XW@M@
                                                       g$p$8635$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$8636$XW@M@)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8636$XW@M@
                                                               g$e$8634$XW@M@))
                                                           (list
                                                             'if
                                                             g$t$8636$XW@M@
                                                             (list
                                                               g$p$8635$XW@M@
                                                               g$t$8636$XW@M@)
                                                             g$k$8631$XW@M@))))
                                                      (gensym))))
                                                  g$ls/false$8633$XW@M@)
                                                ((case-lambda
                                                   ((g$t$8637$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$8638$XW@M@)
                                                        (if g$ls/false$8638$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8639$XW@M@)
                                                               ((case-lambda
                                                                  ((g$t$8640$XW@M@)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8640$XW@M@
                                                                         g$e$8639$XW@M@))
                                                                     (list
                                                                       'if
                                                                       g$t$8640$XW@M@
                                                                       g$t$8640$XW@M@
                                                                       g$k$8631$XW@M@))))
                                                                (gensym))))
                                                            g$ls/false$8638$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$8641$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$8642$XW@M@)
                                                                  (if g$ls/false$8642$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8643$XW@M@
                                                                           g$v$8644$XW@M@
                                                                           g$v*$8645$XW@M@)
                                                                         (list
                                                                           'if
                                                                           g$e$8643$XW@M@
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8644$XW@M@
                                                                               g$v*$8645$XW@M@))
                                                                           g$k$8631$XW@M@)))
                                                                      g$ls/false$8642$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$8646$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8647$XW@M@)
                                                                            (if g$ls/false$8647$XW@M@
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7971$XW@M@
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8630$XW@M@)))
                                                                                g$ls/false$8647$XW@M@)
                                                                              (g$syntax-violation$7971$XW@M@
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8646$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$8646$XW@M@
                                                                           '_))))
                                                                     g$t$8641$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$8641$XW@M@
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8637$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$8637$XW@M@
                                                       '(any)))))
                                                 g$t$8632$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$8632$XW@M@
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8630$XW@M@))))
                                 (g$f*$8603$XW@M@
                                   (case-lambda
                                     ((g$x*$8610$XW@M@)
                                      ((case-lambda
                                         ((g$t$8611$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$8612$XW@M@)
                                              (if g$ls/false$8612$XW@M@
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8599$XW@M@)
                                                       '#t)))
                                                  g$ls/false$8612$XW@M@)
                                                ((case-lambda
                                                   ((g$t$8613$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$8614$XW@M@)
                                                        (if g$ls/false$8614$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8615$XW@M@
                                                                 g$e*$8616$XW@M@)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8615$XW@M@
                                                                     g$e*$8616$XW@M@))
                                                                 '#f)))
                                                            g$ls/false$8614$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$8617$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$8618$XW@M@)
                                                                  (if g$ls/false$8618$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8619$XW@M@
                                                                           g$cls*$8620$XW@M@)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8603$XW@M@
                                                                                g$cls*$8620$XW@M@)))
                                                                           (case-lambda
                                                                             ((g$e$8623$XW@M@
                                                                                g$g$8624$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$g$8625$XW@M@
                                                                                    g$e$8626$XW@M@)
                                                                                  (values
                                                                                    (g$f$8602$XW@M@
                                                                                      g$cls$8619$XW@M@
                                                                                      g$e$8626$XW@M@)
                                                                                    g$g$8625$XW@M@)))
                                                                               g$g$8624$XW@M@
                                                                               g$e$8623$XW@M@))))))
                                                                      g$ls/false$8618$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$8627$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8628$XW@M@)
                                                                            (if g$ls/false$8628$XW@M@
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8629$XW@M@)
                                                                                   (g$syntax-violation$7971$XW@M@
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8629$XW@M@)))
                                                                                g$ls/false$8628$XW@M@)
                                                                              (g$syntax-violation$7971$XW@M@
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8627$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$8627$XW@M@
                                                                           'any))))
                                                                     g$t$8617$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$8617$XW@M@
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8613$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$8613$XW@M@
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8611$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$8611$XW@M@
                                             '()))))
                                       g$x*$8610$XW@M@)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8603$XW@M@ g$clause*$8601$XW@M@)))
                           (case-lambda
                             ((g$code$8606$XW@M@ g$raisek$8607$XW@M@)
                              ((case-lambda
                                 ((g$raisek$8608$XW@M@ g$code$8609$XW@M@)
                                  (if g$raisek$8608$XW@M@
                                    (list g$outerk$8600$XW@M@ g$code$8609$XW@M@)
                                    g$code$8609$XW@M@)))
                               g$raisek$8607$XW@M@
                               g$code$8606$XW@M@)))))))))
          ((case-lambda
             ((g$t$8588$XW@M@)
              ((case-lambda
                 ((g$ls/false$8589$XW@M@)
                  (if (if g$ls/false$8589$XW@M@
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8590$XW@M@
                                 g$clause*$8591$XW@M@
                                 g$b$8592$XW@M@
                                 g$b*$8593$XW@M@)
                               (g$id?$7587$XW@M@ g$con$8590$XW@M@)))
                            g$ls/false$8589$XW@M@))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8594$XW@M@
                           g$clause*$8595$XW@M@
                           g$b$8596$XW@M@
                           g$b*$8597$XW@M@)
                         ((case-lambda
                            ((g$outerk$8598$XW@M@)
                             (g$bless$7828$XW@M@
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8598$XW@M@)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8594$XW@M@)
                                           (g$gen-clauses$8587$XW@M@
                                             g$con$8594$XW@M@
                                             g$outerk$8598$XW@M@
                                             g$clause*$8595$XW@M@))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8596$XW@M@
                                                 g$b*$8597$XW@M@))))))))))))
                          (gensym))))
                      g$ls/false$8589$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$8588$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8588$XW@M@
                 '(_ (any . each-any) any . each-any)))))
           g$x$8586$XW@M@)))))
   (g$define-enumeration-macro$7841$XW@M@
     g$define-enumeration-macro$11291$XW@M@
     (case-lambda
       ((g$stx$8648$XW@M@)
        (letrec* ((g$set?$8649$XW@M@
                    (case-lambda
                      ((g$x$8662$XW@M@)
                       ((case-lambda
                          ((g$t$8663$XW@M@)
                           (if g$t$8663$XW@M@
                             g$t$8663$XW@M@
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8662$XW@M@)
                                          (cdr g$x$8662$XW@M@)))
                                 (begin
                                   '#f
                                   (g$set?$8649$XW@M@ (cdr g$x$8662$XW@M@)))
                                 '#f)))))
                        (null? g$x$8662$XW@M@)))))
                  (g$remove-dups$8650$XW@M@
                    (case-lambda
                      ((g$ls$8661$XW@M@)
                       (if (null? g$ls$8661$XW@M@)
                         '()
                         (cons
                           (car g$ls$8661$XW@M@)
                           (g$remove-dups$8650$XW@M@
                             (g$remq$5878$XW@M@
                               (car g$ls$8661$XW@M@)
                               (cdr g$ls$8661$XW@M@)))))))))
          ((case-lambda
             ((g$t$8651$XW@M@)
              ((case-lambda
                 ((g$ls/false$8652$XW@M@)
                  (if (if g$ls/false$8652$XW@M@
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8653$XW@M@
                                 g$id*$8654$XW@M@
                                 g$maker$8655$XW@M@)
                               (if (g$id?$7587$XW@M@ g$name$8653$XW@M@)
                                 (if (g$id?$7587$XW@M@ g$maker$8655$XW@M@)
                                   (begin
                                     '#f
                                     (g$for-all$5871$XW@M@
                                       g$id?$7587$XW@M@
                                       g$id*$8654$XW@M@))
                                   '#f)
                                 '#f)))
                            g$ls/false$8652$XW@M@))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8656$XW@M@ g$id*$8657$XW@M@ g$maker$8658$XW@M@)
                         ((case-lambda
                            ((g$name*$8659$XW@M@ g$mk$8660$XW@M@)
                             (g$bless$7828$XW@M@
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8660$XW@M@
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8659$XW@M@))))
                                 (list
                                   'define-syntax
                                   g$name$8656$XW@M@
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8659$XW@M@))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8656$XW@M@)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8658$XW@M@
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8658$XW@M@)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8659$XW@M@))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8658$XW@M@)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8660$XW@M@
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8650$XW@M@
                            (g$syntax->datum$7974$XW@M@ g$id*$8657$XW@M@))
                          (gensym))))
                      g$ls/false$8652$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$8651$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8651$XW@M@
                 '(_ any each-any any)))))
           g$stx$8648$XW@M@)))))
   (g$time-macro$7842$XW@M@
     g$time-macro$11292$XW@M@
     (case-lambda
       ((g$stx$8664$XW@M@)
        ((case-lambda
           ((g$t$8665$XW@M@)
            ((case-lambda
               ((g$ls/false$8666$XW@M@)
                (if g$ls/false$8666$XW@M@
                  (apply
                    (case-lambda
                      ((g$expr$8667$XW@M@)
                       ((case-lambda
                          ((g$str$8668$XW@M@)
                           (g$bless$7828$XW@M@
                             (list
                               'time-it
                               g$str$8668$XW@M@
                               (list 'lambda '() g$expr$8667$XW@M@)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6604$XW@M@)))
                          (case-lambda
                            ((g$p$8671$XW@M@ g$e$8672$XW@M@)
                             ((case-lambda
                                ((g$e$8673$XW@M@ g$p$8674$XW@M@)
                                 (begin
                                   (write
                                     (g$syntax->datum$7974$XW@M@
                                       g$expr$8667$XW@M@)
                                     g$p$8674$XW@M@)
                                   (g$e$8673$XW@M@))))
                              g$e$8672$XW@M@
                              g$p$8671$XW@M@)))))))
                    g$ls/false$8666$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8665$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8665$XW@M@ '(_ any)))))
         g$stx$8664$XW@M@))))
   (g$delay-macro$7843$XW@M@
     g$delay-macro$11293$XW@M@
     (case-lambda
       ((g$stx$8675$XW@M@)
        ((case-lambda
           ((g$t$8676$XW@M@)
            ((case-lambda
               ((g$ls/false$8677$XW@M@)
                (if g$ls/false$8677$XW@M@
                  (apply
                    (case-lambda
                      ((g$expr$8678$XW@M@)
                       (g$bless$7828$XW@M@
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8678$XW@M@)))))
                    g$ls/false$8677$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8676$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8676$XW@M@ '(_ any)))))
         g$stx$8675$XW@M@))))
   (g$assert-macro$7844$XW@M@
     g$assert-macro$11294$XW@M@
     (case-lambda
       ((g$stx$8679$XW@M@)
        ((case-lambda
           ((g$t$8680$XW@M@)
            ((case-lambda
               ((g$ls/false$8681$XW@M@)
                (if g$ls/false$8681$XW@M@
                  (apply
                    (case-lambda
                      ((g$expr$8682$XW@M@)
                       (g$bless$7828$XW@M@
                         (list
                           'unless
                           g$expr$8682$XW@M@
                           (list
                             'assertion-violation
                             '#f
                             '"assertion failed"
                             (list 'quote g$expr$8682$XW@M@))))))
                    g$ls/false$8681$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8680$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8680$XW@M@ '(_ any)))))
         g$stx$8679$XW@M@))))
   (g$endianness-macro$7845$XW@M@
     g$endianness-macro$11295$XW@M@
     (case-lambda
       ((g$stx$8683$XW@M@)
        ((case-lambda
           ((g$t$8684$XW@M@)
            ((case-lambda
               ((g$ls/false$8685$XW@M@)
                (if g$ls/false$8685$XW@M@
                  (apply
                    (case-lambda
                      ((g$e$8686$XW@M@)
                       ((case-lambda
                          ((g$t$8687$XW@M@)
                           (if (eqv? g$t$8687$XW@M@ 'little)
                             (g$bless$7828$XW@M@ ''little)
                             (if (eqv? g$t$8687$XW@M@ 'big)
                               (g$bless$7828$XW@M@ ''big)
                               (g$syntax-violation$7971$XW@M@
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8683$XW@M@)))))
                        (g$syntax->datum$7974$XW@M@ g$e$8686$XW@M@))))
                    g$ls/false$8685$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8684$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8684$XW@M@ '(_ any)))))
         g$stx$8683$XW@M@))))
   (g$identifier-syntax-macro$7846$XW@M@
     g$identifier-syntax-macro$11296$XW@M@
     (case-lambda
       ((g$stx$8688$XW@M@)
        ((case-lambda
           ((g$t$8689$XW@M@)
            ((case-lambda
               ((g$ls/false$8690$XW@M@)
                (if g$ls/false$8690$XW@M@
                  (apply
                    (case-lambda
                      ((g$expr$8691$XW@M@)
                       (g$bless$7828$XW@M@
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8691$XW@M@))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8691$XW@M@)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8690$XW@M@)
                  ((case-lambda
                     ((g$t$8692$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8693$XW@M@)
                          (if (if g$ls/false$8693$XW@M@
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8694$XW@M@
                                         g$expr1$8695$XW@M@
                                         g$id2$8696$XW@M@
                                         g$expr2$8697$XW@M@
                                         g$expr3$8698$XW@M@)
                                       (if (g$id?$7587$XW@M@ g$id1$8694$XW@M@)
                                         (if (g$id?$7587$XW@M@ g$id2$8696$XW@M@)
                                           (begin
                                             '#f
                                             (g$id?$7587$XW@M@
                                               g$expr2$8697$XW@M@))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8693$XW@M@))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8699$XW@M@
                                   g$expr1$8700$XW@M@
                                   g$id2$8701$XW@M@
                                   g$expr2$8702$XW@M@
                                   g$expr3$8703$XW@M@)
                                 (g$bless$7828$XW@M@
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8700$XW@M@))
                                         (list
                                           (list 'set! 'id g$expr2$8702$XW@M@)
                                           (list 'syntax g$expr3$8703$XW@M@))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8700$XW@M@
                                               '(e* ...))))))))))
                              g$ls/false$8693$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8692$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8692$XW@M@
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8689$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8689$XW@M@ '(_ any)))))
         g$stx$8688$XW@M@))))
   (g$do-macro$7847$XW@M@
     g$do-macro$11297$XW@M@
     (case-lambda
       ((g$stx$8704$XW@M@)
        (letrec* ((g$bind$8705$XW@M@
                    (case-lambda
                      ((g$x$8717$XW@M@)
                       ((case-lambda
                          ((g$t$8718$XW@M@)
                           ((case-lambda
                              ((g$ls/false$8719$XW@M@)
                               (if g$ls/false$8719$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$x$8720$XW@M@ g$init$8721$XW@M@)
                                      (list
                                        g$x$8720$XW@M@
                                        g$init$8721$XW@M@
                                        g$x$8720$XW@M@)))
                                   g$ls/false$8719$XW@M@)
                                 ((case-lambda
                                    ((g$t$8722$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$8723$XW@M@)
                                         (if g$ls/false$8723$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$x$8724$XW@M@
                                                  g$init$8725$XW@M@
                                                  g$step$8726$XW@M@)
                                                (list
                                                  g$x$8724$XW@M@
                                                  g$init$8725$XW@M@
                                                  g$step$8726$XW@M@)))
                                             g$ls/false$8723$XW@M@)
                                           ((case-lambda
                                              ((g$t$8727$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$8728$XW@M@)
                                                   (if g$ls/false$8728$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7971$XW@M@
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8704$XW@M@)))
                                                       g$ls/false$8728$XW@M@)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8727$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$8727$XW@M@
                                                  '_))))
                                            g$t$8722$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$8722$XW@M@
                                        '(any any any)))))
                                  g$t$8718$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$8718$XW@M@
                              '(any any)))))
                        g$x$8717$XW@M@)))))
          ((case-lambda
             ((g$t$8706$XW@M@)
              ((case-lambda
                 ((g$ls/false$8707$XW@M@)
                  (if g$ls/false$8707$XW@M@
                    (apply
                      (case-lambda
                        ((g$binding*$8708$XW@M@
                           g$test$8709$XW@M@
                           g$expr*$8710$XW@M@
                           g$command*$8711$XW@M@)
                         ((case-lambda
                            ((g$t$8712$XW@M@)
                             ((case-lambda
                                ((g$ls/false$8713$XW@M@)
                                 (if g$ls/false$8713$XW@M@
                                   (apply
                                     (case-lambda
                                       ((g$x*$8714$XW@M@
                                          g$init*$8715$XW@M@
                                          g$step*$8716$XW@M@)
                                        (if (g$valid-bound-ids?$7592$XW@M@
                                              g$x*$8714$XW@M@)
                                          (g$bless$7828$XW@M@
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8714$XW@M@
                                                    (list
                                                      'if
                                                      g$test$8709$XW@M@
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8710$XW@M@))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8711$XW@M@
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8716$XW@M@))))))))
                                              (cons 'loop g$init*$8715$XW@M@)))
                                          (g$syntax-violation$7971$XW@M@
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8704$XW@M@))))
                                     g$ls/false$8713$XW@M@)
                                   (g$syntax-violation$7971$XW@M@
                                     '#f
                                     '"invalid syntax"
                                     g$t$8712$XW@M@))))
                              (g$syntax-dispatch$7865$XW@M@
                                g$t$8712$XW@M@
                                '#(each (any any any))))))
                          (map g$bind$8705$XW@M@ g$binding*$8708$XW@M@))))
                      g$ls/false$8707$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$8706$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$8706$XW@M@
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8704$XW@M@)))))
   (g$let*-macro$7848$XW@M@
     g$let*-macro$11298$XW@M@
     (case-lambda
       ((g$stx$8729$XW@M@)
        ((case-lambda
           ((g$t$8730$XW@M@)
            ((case-lambda
               ((g$ls/false$8731$XW@M@)
                (if (if g$ls/false$8731$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8732$XW@M@
                               g$rhs*$8733$XW@M@
                               g$b$8734$XW@M@
                               g$b*$8735$XW@M@)
                             (g$for-all$5871$XW@M@
                               g$id?$7587$XW@M@
                               g$lhs*$8732$XW@M@)))
                          g$ls/false$8731$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8736$XW@M@
                         g$rhs*$8737$XW@M@
                         g$b$8738$XW@M@
                         g$b*$8739$XW@M@)
                       (g$bless$7828$XW@M@
                         ((letrec ((g$f$8740$XW@M@
                                     (case-lambda
                                       ((g$x*$8741$XW@M@)
                                        (if (null? g$x*$8741$XW@M@)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8738$XW@M@
                                                g$b*$8739$XW@M@)))
                                          (list
                                            'let
                                            (list (car g$x*$8741$XW@M@))
                                            (g$f$8740$XW@M@
                                              (cdr g$x*$8741$XW@M@))))))))
                            g$f$8740$XW@M@)
                          (map list g$lhs*$8736$XW@M@ g$rhs*$8737$XW@M@)))))
                    g$ls/false$8731$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8730$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8730$XW@M@
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8729$XW@M@))))
   (g$or-macro$7849$XW@M@
     g$or-macro$11299$XW@M@
     (case-lambda
       ((g$stx$8742$XW@M@)
        ((case-lambda
           ((g$t$8743$XW@M@)
            ((case-lambda
               ((g$ls/false$8744$XW@M@)
                (if g$ls/false$8744$XW@M@
                  (apply (case-lambda (() '#f)) g$ls/false$8744$XW@M@)
                  ((case-lambda
                     ((g$t$8745$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8746$XW@M@)
                          (if g$ls/false$8746$XW@M@
                            (apply
                              (case-lambda
                                ((g$e$8747$XW@M@ g$e*$8748$XW@M@)
                                 (g$bless$7828$XW@M@
                                   ((letrec ((g$f$8749$XW@M@
                                               (case-lambda
                                                 ((g$e$8750$XW@M@
                                                    g$e*$8751$XW@M@)
                                                  (if (null? g$e*$8751$XW@M@)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8750$XW@M@)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8750$XW@M@))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8749$XW@M@
                                                          (car g$e*$8751$XW@M@)
                                                          (cdr g$e*$8751$XW@M@)))))))))
                                      g$f$8749$XW@M@)
                                    g$e$8747$XW@M@
                                    g$e*$8748$XW@M@))))
                              g$ls/false$8746$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8745$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8745$XW@M@
                         '(_ any . each-any)))))
                   g$t$8743$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8743$XW@M@ '(_)))))
         g$stx$8742$XW@M@))))
   (g$and-macro$7850$XW@M@
     g$and-macro$11300$XW@M@
     (case-lambda
       ((g$stx$8752$XW@M@)
        ((case-lambda
           ((g$t$8753$XW@M@)
            ((case-lambda
               ((g$ls/false$8754$XW@M@)
                (if g$ls/false$8754$XW@M@
                  (apply (case-lambda (() '#t)) g$ls/false$8754$XW@M@)
                  ((case-lambda
                     ((g$t$8755$XW@M@)
                      ((case-lambda
                         ((g$ls/false$8756$XW@M@)
                          (if g$ls/false$8756$XW@M@
                            (apply
                              (case-lambda
                                ((g$e$8757$XW@M@ g$e*$8758$XW@M@)
                                 (g$bless$7828$XW@M@
                                   ((letrec ((g$f$8759$XW@M@
                                               (case-lambda
                                                 ((g$e$8760$XW@M@
                                                    g$e*$8761$XW@M@)
                                                  (if (null? g$e*$8761$XW@M@)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8760$XW@M@)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8760$XW@M@
                                                        (cons
                                                          (g$f$8759$XW@M@
                                                            (car g$e*$8761$XW@M@)
                                                            (cdr g$e*$8761$XW@M@))
                                                          '(#f)))))))))
                                      g$f$8759$XW@M@)
                                    g$e$8757$XW@M@
                                    g$e*$8758$XW@M@))))
                              g$ls/false$8756$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$8755$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$8755$XW@M@
                         '(_ any . each-any)))))
                   g$t$8753$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8753$XW@M@ '(_)))))
         g$stx$8752$XW@M@))))
   (g$cond-macro$7851$XW@M@
     g$cond-macro$11301$XW@M@
     (case-lambda
       ((g$stx$8762$XW@M@)
        ((case-lambda
           ((g$t$8763$XW@M@)
            ((case-lambda
               ((g$ls/false$8764$XW@M@)
                (if g$ls/false$8764$XW@M@
                  (apply
                    (case-lambda
                      ((g$cls$8765$XW@M@ g$cls*$8766$XW@M@)
                       (g$bless$7828$XW@M@
                         ((letrec ((g$f$8767$XW@M@
                                     (case-lambda
                                       ((g$cls$8768$XW@M@ g$cls*$8769$XW@M@)
                                        (if (null? g$cls*$8769$XW@M@)
                                          ((case-lambda
                                             ((g$t$8770$XW@M@)
                                              ((case-lambda
                                                 ((g$ls/false$8771$XW@M@)
                                                  (if g$ls/false$8771$XW@M@
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8772$XW@M@
                                                           g$e*$8773$XW@M@)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8772$XW@M@
                                                             g$e*$8773$XW@M@))))
                                                      g$ls/false$8771$XW@M@)
                                                    ((case-lambda
                                                       ((g$t$8774$XW@M@)
                                                        ((case-lambda
                                                           ((g$ls/false$8775$XW@M@)
                                                            (if g$ls/false$8775$XW@M@
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8776$XW@M@
                                                                     g$p$8777$XW@M@)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8776$XW@M@))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8777$XW@M@
                                                                         '(t))))))
                                                                g$ls/false$8775$XW@M@)
                                                              ((case-lambda
                                                                 ((g$t$8778$XW@M@)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8779$XW@M@)
                                                                      (if g$ls/false$8779$XW@M@
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8780$XW@M@)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8780$XW@M@
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8779$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$t$8781$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8782$XW@M@)
                                                                                (if g$ls/false$8782$XW@M@
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8783$XW@M@
                                                                                         g$e*$8784$XW@M@)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8783$XW@M@
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8784$XW@M@))))
                                                                                    g$ls/false$8782$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$t$8785$XW@M@)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8786$XW@M@)
                                                                                          (if g$ls/false$8786$XW@M@
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7971$XW@M@
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8762$XW@M@)))
                                                                                              g$ls/false$8786$XW@M@)
                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8785$XW@M@))))
                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                         g$t$8785$XW@M@
                                                                                         '_))))
                                                                                   g$t$8781$XW@M@))))
                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                               g$t$8781$XW@M@
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8778$XW@M@))))
                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                     g$t$8778$XW@M@
                                                                     '(any)))))
                                                               g$t$8774$XW@M@))))
                                                         (g$syntax-dispatch$7865$XW@M@
                                                           g$t$8774$XW@M@
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8770$XW@M@))))
                                               (g$syntax-dispatch$7865$XW@M@
                                                 g$t$8770$XW@M@
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8768$XW@M@)
                                          ((case-lambda
                                             ((g$t$8787$XW@M@)
                                              ((case-lambda
                                                 ((g$ls/false$8788$XW@M@)
                                                  (if g$ls/false$8788$XW@M@
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8789$XW@M@
                                                           g$e*$8790$XW@M@)
                                                         (g$syntax-violation$7971$XW@M@
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8762$XW@M@)))
                                                      g$ls/false$8788$XW@M@)
                                                    ((case-lambda
                                                       ((g$t$8791$XW@M@)
                                                        ((case-lambda
                                                           ((g$ls/false$8792$XW@M@)
                                                            (if g$ls/false$8792$XW@M@
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8793$XW@M@
                                                                     g$p$8794$XW@M@)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8793$XW@M@))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8794$XW@M@
                                                                         '(t))
                                                                       (g$f$8767$XW@M@
                                                                         (car g$cls*$8769$XW@M@)
                                                                         (cdr g$cls*$8769$XW@M@))))))
                                                                g$ls/false$8792$XW@M@)
                                                              ((case-lambda
                                                                 ((g$t$8795$XW@M@)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8796$XW@M@)
                                                                      (if g$ls/false$8796$XW@M@
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8797$XW@M@)
                                                                             (list
                                                                               'or
                                                                               g$e$8797$XW@M@
                                                                               (g$f$8767$XW@M@
                                                                                 (car g$cls*$8769$XW@M@)
                                                                                 (cdr g$cls*$8769$XW@M@)))))
                                                                          g$ls/false$8796$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$t$8798$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8799$XW@M@)
                                                                                (if g$ls/false$8799$XW@M@
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8800$XW@M@
                                                                                         g$e*$8801$XW@M@)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8800$XW@M@
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8801$XW@M@)
                                                                                         (g$f$8767$XW@M@
                                                                                           (car g$cls*$8769$XW@M@)
                                                                                           (cdr g$cls*$8769$XW@M@)))))
                                                                                    g$ls/false$8799$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$t$8802$XW@M@)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8803$XW@M@)
                                                                                          (if g$ls/false$8803$XW@M@
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7971$XW@M@
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8762$XW@M@)))
                                                                                              g$ls/false$8803$XW@M@)
                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8802$XW@M@))))
                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                         g$t$8802$XW@M@
                                                                                         '_))))
                                                                                   g$t$8798$XW@M@))))
                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                               g$t$8798$XW@M@
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8795$XW@M@))))
                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                     g$t$8795$XW@M@
                                                                     '(any)))))
                                                               g$t$8791$XW@M@))))
                                                         (g$syntax-dispatch$7865$XW@M@
                                                           g$t$8791$XW@M@
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8787$XW@M@))))
                                               (g$syntax-dispatch$7865$XW@M@
                                                 g$t$8787$XW@M@
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8768$XW@M@))))))
                            g$f$8767$XW@M@)
                          g$cls$8765$XW@M@
                          g$cls*$8766$XW@M@))))
                    g$ls/false$8764$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8763$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8763$XW@M@
               '(_ any . each-any)))))
         g$stx$8762$XW@M@))))
   (g$do-include$7852$XW@M@
     g$do-include$11302$XW@M@
     (case-lambda
       ((g$stx$8804$XW@M@ g$id$8805$XW@M@ g$filename$8806$XW@M@)
        ((case-lambda
           ((g$filename$8807$XW@M@)
            (begin
              (if (if (string? g$filename$8807$XW@M@)
                    (begin '#f (g$id?$7587$XW@M@ g$id$8805$XW@M@))
                    '#f)
                (void)
                (g$syntax-violation$7971$XW@M@
                  '#f
                  '"invalid syntax"
                  g$stx$8804$XW@M@))
              (cons
                (g$bless$7828$XW@M@ 'begin)
                (with-input-from-file
                  g$filename$8807$XW@M@
                  (case-lambda
                    (()
                     ((letrec ((g$f$8808$XW@M@
                                 (case-lambda
                                   ((g$ls$8809$XW@M@)
                                    ((case-lambda
                                       ((g$x$8810$XW@M@)
                                        (if (eof-object? g$x$8810$XW@M@)
                                          (reverse g$ls$8809$XW@M@)
                                          (g$f$8808$XW@M@
                                            (cons
                                              (g$datum->stx$7570$XW@M@
                                                g$id$8805$XW@M@
                                                g$x$8810$XW@M@)
                                              g$ls$8809$XW@M@)))))
                                     (read-annotated))))))
                        g$f$8808$XW@M@)
                      '()))))))))
         (g$stx->datum$7598$XW@M@ g$filename$8806$XW@M@)))))
   (g$include-macro$7853$XW@M@
     g$include-macro$11303$XW@M@
     (case-lambda
       ((g$e$8811$XW@M@)
        ((case-lambda
           ((g$t$8812$XW@M@)
            ((case-lambda
               ((g$ls/false$8813$XW@M@)
                (if g$ls/false$8813$XW@M@
                  (apply
                    (case-lambda
                      ((g$id$8814$XW@M@ g$filename$8815$XW@M@)
                       (g$do-include$7852$XW@M@
                         g$e$8811$XW@M@
                         g$id$8814$XW@M@
                         g$filename$8815$XW@M@)))
                    g$ls/false$8813$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8812$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8812$XW@M@ '(any any)))))
         g$e$8811$XW@M@))))
   (g$include-into-macro$7854$XW@M@
     g$include-into-macro$11304$XW@M@
     (case-lambda
       ((g$e$8816$XW@M@)
        ((case-lambda
           ((g$t$8817$XW@M@)
            ((case-lambda
               ((g$ls/false$8818$XW@M@)
                (if g$ls/false$8818$XW@M@
                  (apply
                    (case-lambda
                      ((g$id$8819$XW@M@ g$filename$8820$XW@M@)
                       (g$do-include$7852$XW@M@
                         g$e$8816$XW@M@
                         g$id$8819$XW@M@
                         g$filename$8820$XW@M@)))
                    g$ls/false$8818$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8817$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$8817$XW@M@ '(_ any any)))))
         g$e$8816$XW@M@))))
   (g$syntax-rules-macro$7855$XW@M@
     g$syntax-rules-macro$11305$XW@M@
     (case-lambda
       ((g$e$8821$XW@M@)
        ((case-lambda
           ((g$t$8822$XW@M@)
            ((case-lambda
               ((g$ls/false$8823$XW@M@)
                (if g$ls/false$8823$XW@M@
                  (apply
                    (case-lambda
                      ((g$lits$8824$XW@M@ g$pat*$8825$XW@M@ g$tmp*$8826$XW@M@)
                       (begin
                         (g$verify-literals$7868$XW@M@
                           g$lits$8824$XW@M@
                           g$e$8821$XW@M@)
                         (g$bless$7828$XW@M@
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8824$XW@M@
                                   (map (case-lambda
                                          ((g$pat$8827$XW@M@ g$tmp$8828$XW@M@)
                                           ((case-lambda
                                              ((g$t$8829$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$8830$XW@M@)
                                                   (if g$ls/false$8830$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8831$XW@M@)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8831$XW@M@)
                                                            (list
                                                              'syntax
                                                              g$tmp$8828$XW@M@))))
                                                       g$ls/false$8830$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$8832$XW@M@)
                                                         ((case-lambda
                                                            ((g$ls/false$8833$XW@M@)
                                                             (if g$ls/false$8833$XW@M@
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8821$XW@M@
                                                                      g$pat$8827$XW@M@)))
                                                                 g$ls/false$8833$XW@M@)
                                                               (g$syntax-violation$7971$XW@M@
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8832$XW@M@))))
                                                          (g$syntax-dispatch$7865$XW@M@
                                                            g$t$8832$XW@M@
                                                            '_))))
                                                      g$t$8829$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$8829$XW@M@
                                                  '(_ . any)))))
                                            g$pat$8827$XW@M@)))
                                        g$pat*$8825$XW@M@
                                        g$tmp*$8826$XW@M@)))))))))
                    g$ls/false$8823$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$8822$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$8822$XW@M@
               '(_ each-any . #(each (any any)))))))
         g$e$8821$XW@M@))))
   (g$quasiquote-macro$7856$XW@M@
     g$quasiquote-macro$11306$XW@M@
     ((case-lambda
        (()
         (letrec* ((g$datum$8834$XW@M@
                     (case-lambda
                       ((g$x$8965$XW@M@)
                        (list
                          (g$scheme-stx$7808$XW@M@ 'quote)
                          (g$mkstx$7575$XW@M@ g$x$8965$XW@M@ '() '() '())))))
                   (g$quasicons*$8850$XW@M@
                     (case-lambda
                       ((g$x$8961$XW@M@ g$y$8962$XW@M@)
                        ((letrec ((g$f$8963$XW@M@
                                    (case-lambda
                                      ((g$x$8964$XW@M@)
                                       (if (null? g$x$8964$XW@M@)
                                         g$y$8962$XW@M@
                                         (g$quasicons$8851$XW@M@
                                           (car g$x$8964$XW@M@)
                                           (g$f$8963$XW@M@
                                             (cdr g$x$8964$XW@M@))))))))
                           g$f$8963$XW@M@)
                         g$x$8961$XW@M@))))
                   (g$quasicons$8851$XW@M@
                     (case-lambda
                       ((g$x$8942$XW@M@ g$y$8943$XW@M@)
                        ((case-lambda
                           ((g$t$8944$XW@M@)
                            ((case-lambda
                               ((g$ls/false$8945$XW@M@)
                                (if g$ls/false$8945$XW@M@
                                  (apply
                                    (case-lambda
                                      ((g$dy$8946$XW@M@)
                                       ((case-lambda
                                          ((g$t$8947$XW@M@)
                                           ((case-lambda
                                              ((g$ls/false$8948$XW@M@)
                                               (if g$ls/false$8948$XW@M@
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8949$XW@M@)
                                                      (list
                                                        (g$scheme-stx$7808$XW@M@
                                                          'quote)
                                                        (cons
                                                          g$dx$8949$XW@M@
                                                          g$dy$8946$XW@M@))))
                                                   g$ls/false$8948$XW@M@)
                                                 ((case-lambda
                                                    ((g$t$8950$XW@M@)
                                                     ((case-lambda
                                                        ((g$ls/false$8951$XW@M@)
                                                         (if g$ls/false$8951$XW@M@
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8952$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8953$XW@M@)
                                                                        (if g$ls/false$8953$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7808$XW@M@
                                                                                   'list)
                                                                                 g$x$8942$XW@M@)))
                                                                            g$ls/false$8953$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$8954$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8955$XW@M@)
                                                                                  (if g$ls/false$8955$XW@M@
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7808$XW@M@
                                                                                             'cons)
                                                                                           g$x$8942$XW@M@
                                                                                           g$y$8943$XW@M@)))
                                                                                      g$ls/false$8955$XW@M@)
                                                                                    (g$syntax-violation$7971$XW@M@
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8954$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$8954$XW@M@
                                                                                 '_))))
                                                                           g$t$8952$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$8952$XW@M@
                                                                       '()))))
                                                                 g$dy$8946$XW@M@)))
                                                             g$ls/false$8951$XW@M@)
                                                           (g$syntax-violation$7971$XW@M@
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8950$XW@M@))))
                                                      (g$syntax-dispatch$7865$XW@M@
                                                        g$t$8950$XW@M@
                                                        '_))))
                                                  g$t$8947$XW@M@))))
                                            (g$syntax-dispatch$7865$XW@M@
                                              g$t$8947$XW@M@
                                              '(#(scheme-id quote) any)))))
                                        g$x$8942$XW@M@)))
                                    g$ls/false$8945$XW@M@)
                                  ((case-lambda
                                     ((g$t$8956$XW@M@)
                                      ((case-lambda
                                         ((g$ls/false$8957$XW@M@)
                                          (if g$ls/false$8957$XW@M@
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8958$XW@M@)
                                                 (g$cons*$5873$XW@M@
                                                   (g$scheme-stx$7808$XW@M@
                                                     'list)
                                                   g$x$8942$XW@M@
                                                   g$stuff$8958$XW@M@)))
                                              g$ls/false$8957$XW@M@)
                                            ((case-lambda
                                               ((g$t$8959$XW@M@)
                                                ((case-lambda
                                                   ((g$ls/false$8960$XW@M@)
                                                    (if g$ls/false$8960$XW@M@
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7808$XW@M@
                                                               'cons)
                                                             g$x$8942$XW@M@
                                                             g$y$8943$XW@M@)))
                                                        g$ls/false$8960$XW@M@)
                                                      (g$syntax-violation$7971$XW@M@
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8959$XW@M@))))
                                                 (g$syntax-dispatch$7865$XW@M@
                                                   g$t$8959$XW@M@
                                                   '_))))
                                             g$t$8956$XW@M@))))
                                       (g$syntax-dispatch$7865$XW@M@
                                         g$t$8956$XW@M@
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8944$XW@M@))))
                             (g$syntax-dispatch$7865$XW@M@
                               g$t$8944$XW@M@
                               '(#(scheme-id quote) any)))))
                         g$y$8943$XW@M@))))
                   (g$quasiappend$8852$XW@M@
                     (case-lambda
                       ((g$x$8929$XW@M@ g$y$8930$XW@M@)
                        ((case-lambda
                           ((g$ls$8931$XW@M@)
                            (if (null? g$ls$8931$XW@M@)
                              (list (g$scheme-stx$7808$XW@M@ 'quote) '())
                              (if (null? (cdr g$ls$8931$XW@M@))
                                (car g$ls$8931$XW@M@)
                                (g$cons*$5873$XW@M@
                                  (g$scheme-stx$7808$XW@M@ 'append)
                                  g$ls$8931$XW@M@)))))
                         ((letrec ((g$f$8932$XW@M@
                                     (case-lambda
                                       ((g$x$8933$XW@M@)
                                        (if (null? g$x$8933$XW@M@)
                                          ((case-lambda
                                             ((g$t$8934$XW@M@)
                                              ((case-lambda
                                                 ((g$ls/false$8935$XW@M@)
                                                  (if g$ls/false$8935$XW@M@
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8935$XW@M@)
                                                    ((case-lambda
                                                       ((g$t$8936$XW@M@)
                                                        ((case-lambda
                                                           ((g$ls/false$8937$XW@M@)
                                                            (if g$ls/false$8937$XW@M@
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8930$XW@M@)))
                                                                g$ls/false$8937$XW@M@)
                                                              (g$syntax-violation$7971$XW@M@
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8936$XW@M@))))
                                                         (g$syntax-dispatch$7865$XW@M@
                                                           g$t$8936$XW@M@
                                                           '_))))
                                                     g$t$8934$XW@M@))))
                                               (g$syntax-dispatch$7865$XW@M@
                                                 g$t$8934$XW@M@
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8930$XW@M@)
                                          ((case-lambda
                                             ((g$t$8938$XW@M@)
                                              ((case-lambda
                                                 ((g$ls/false$8939$XW@M@)
                                                  (if g$ls/false$8939$XW@M@
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8932$XW@M@
                                                           (cdr g$x$8933$XW@M@))))
                                                      g$ls/false$8939$XW@M@)
                                                    ((case-lambda
                                                       ((g$t$8940$XW@M@)
                                                        ((case-lambda
                                                           ((g$ls/false$8941$XW@M@)
                                                            (if g$ls/false$8941$XW@M@
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8933$XW@M@)
                                                                     (g$f$8932$XW@M@
                                                                       (cdr g$x$8933$XW@M@)))))
                                                                g$ls/false$8941$XW@M@)
                                                              (g$syntax-violation$7971$XW@M@
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8940$XW@M@))))
                                                         (g$syntax-dispatch$7865$XW@M@
                                                           g$t$8940$XW@M@
                                                           '_))))
                                                     g$t$8938$XW@M@))))
                                               (g$syntax-dispatch$7865$XW@M@
                                                 g$t$8938$XW@M@
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8933$XW@M@)))))))
                            g$f$8932$XW@M@)
                          g$x$8929$XW@M@)))))
                   (g$quasivector$8853$XW@M@
                     (case-lambda
                       ((g$x$8904$XW@M@)
                        ((case-lambda
                           ((g$pat-x$8905$XW@M@)
                            ((case-lambda
                               ((g$t$8906$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$8907$XW@M@)
                                    (if g$ls/false$8907$XW@M@
                                      (apply
                                        (case-lambda
                                          ((g$x*$8908$XW@M@)
                                           (list
                                             (g$scheme-stx$7808$XW@M@ 'quote)
                                             (list->vector g$x*$8908$XW@M@))))
                                        g$ls/false$8907$XW@M@)
                                      ((case-lambda
                                         ((g$t$8909$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$8910$XW@M@)
                                              (if g$ls/false$8910$XW@M@
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8911$XW@M@
                                                                 (case-lambda
                                                                   ((g$x$8912$XW@M@
                                                                      g$k$8913$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$8914$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8915$XW@M@)
                                                                            (if g$ls/false$8915$XW@M@
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8916$XW@M@)
                                                                                   (g$k$8913$XW@M@
                                                                                     (map (case-lambda
                                                                                            ((g$x$8917$XW@M@)
                                                                                             (list
                                                                                               (g$scheme-stx$7808$XW@M@
                                                                                                 'quote)
                                                                                               g$x$8917$XW@M@)))
                                                                                          g$x*$8916$XW@M@))))
                                                                                g$ls/false$8915$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$t$8918$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8919$XW@M@)
                                                                                      (if g$ls/false$8919$XW@M@
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8920$XW@M@)
                                                                                             (g$k$8913$XW@M@
                                                                                               g$x*$8920$XW@M@)))
                                                                                          g$ls/false$8919$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$t$8921$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8922$XW@M@)
                                                                                                (if g$ls/false$8922$XW@M@
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8923$XW@M@
                                                                                                         g$y$8924$XW@M@)
                                                                                                       (g$f$8911$XW@M@
                                                                                                         g$y$8924$XW@M@
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8925$XW@M@)
                                                                                                            (g$k$8913$XW@M@
                                                                                                              (cons
                                                                                                                g$x$8923$XW@M@
                                                                                                                g$ls$8925$XW@M@)))))))
                                                                                                    g$ls/false$8922$XW@M@)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8926$XW@M@)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8927$XW@M@)
                                                                                                          (if g$ls/false$8927$XW@M@
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7808$XW@M@
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8905$XW@M@)))
                                                                                                              g$ls/false$8927$XW@M@)
                                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8926$XW@M@))))
                                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                                         g$t$8926$XW@M@
                                                                                                         '_))))
                                                                                                   g$t$8921$XW@M@))))
                                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                                               g$t$8921$XW@M@
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8918$XW@M@))))
                                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                                     g$t$8918$XW@M@
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8914$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$8914$XW@M@
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8912$XW@M@)))))
                                                        g$f$8911$XW@M@)
                                                      g$x$8904$XW@M@
                                                      (case-lambda
                                                        ((g$ls$8928$XW@M@)
                                                         (g$cons*$5873$XW@M@
                                                           (g$scheme-stx$7808$XW@M@
                                                             'vector)
                                                           g$ls$8928$XW@M@))))))
                                                  g$ls/false$8910$XW@M@)
                                                (g$syntax-violation$7971$XW@M@
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8909$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$8909$XW@M@
                                             '_))))
                                       g$t$8906$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$8906$XW@M@
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8905$XW@M@)))
                         g$x$8904$XW@M@))))
                   (g$vquasi$8854$XW@M@
                     (case-lambda
                       ((g$p$8887$XW@M@ g$lev$8888$XW@M@)
                        ((case-lambda
                           ((g$t$8889$XW@M@)
                            ((case-lambda
                               ((g$ls/false$8890$XW@M@)
                                (if g$ls/false$8890$XW@M@
                                  (apply
                                    (case-lambda
                                      ((g$p$8891$XW@M@ g$q$8892$XW@M@)
                                       ((case-lambda
                                          ((g$t$8893$XW@M@)
                                           ((case-lambda
                                              ((g$ls/false$8894$XW@M@)
                                               (if g$ls/false$8894$XW@M@
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8895$XW@M@)
                                                      (if (= g$lev$8888$XW@M@
                                                             '0)
                                                        (g$quasicons*$8850$XW@M@
                                                          g$p$8895$XW@M@
                                                          (g$vquasi$8854$XW@M@
                                                            g$q$8892$XW@M@
                                                            g$lev$8888$XW@M@))
                                                        (g$quasicons$8851$XW@M@
                                                          (g$quasicons$8851$XW@M@
                                                            (g$datum$8834$XW@M@
                                                              'unquote)
                                                            (g$quasi$8855$XW@M@
                                                              g$p$8895$XW@M@
                                                              (- g$lev$8888$XW@M@
                                                                 '1)))
                                                          (g$vquasi$8854$XW@M@
                                                            g$q$8892$XW@M@
                                                            g$lev$8888$XW@M@)))))
                                                   g$ls/false$8894$XW@M@)
                                                 ((case-lambda
                                                    ((g$t$8896$XW@M@)
                                                     ((case-lambda
                                                        ((g$ls/false$8897$XW@M@)
                                                         (if g$ls/false$8897$XW@M@
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8898$XW@M@)
                                                                (if (= g$lev$8888$XW@M@
                                                                       '0)
                                                                  (g$quasiappend$8852$XW@M@
                                                                    g$p$8898$XW@M@
                                                                    (g$vquasi$8854$XW@M@
                                                                      g$q$8892$XW@M@
                                                                      g$lev$8888$XW@M@))
                                                                  (g$quasicons$8851$XW@M@
                                                                    (g$quasicons$8851$XW@M@
                                                                      (g$datum$8834$XW@M@
                                                                        'unquote-splicing)
                                                                      (g$quasi$8855$XW@M@
                                                                        g$p$8898$XW@M@
                                                                        (- g$lev$8888$XW@M@
                                                                           '1)))
                                                                    (g$vquasi$8854$XW@M@
                                                                      g$q$8892$XW@M@
                                                                      g$lev$8888$XW@M@)))))
                                                             g$ls/false$8897$XW@M@)
                                                           ((case-lambda
                                                              ((g$t$8899$XW@M@)
                                                               ((case-lambda
                                                                  ((g$ls/false$8900$XW@M@)
                                                                   (if g$ls/false$8900$XW@M@
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8901$XW@M@)
                                                                          (g$quasicons$8851$XW@M@
                                                                            (g$quasi$8855$XW@M@
                                                                              g$p$8901$XW@M@
                                                                              g$lev$8888$XW@M@)
                                                                            (g$vquasi$8854$XW@M@
                                                                              g$q$8892$XW@M@
                                                                              g$lev$8888$XW@M@))))
                                                                       g$ls/false$8900$XW@M@)
                                                                     (g$syntax-violation$7971$XW@M@
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8899$XW@M@))))
                                                                (g$syntax-dispatch$7865$XW@M@
                                                                  g$t$8899$XW@M@
                                                                  'any))))
                                                            g$t$8896$XW@M@))))
                                                      (g$syntax-dispatch$7865$XW@M@
                                                        g$t$8896$XW@M@
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8893$XW@M@))))
                                            (g$syntax-dispatch$7865$XW@M@
                                              g$t$8893$XW@M@
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8891$XW@M@)))
                                    g$ls/false$8890$XW@M@)
                                  ((case-lambda
                                     ((g$t$8902$XW@M@)
                                      ((case-lambda
                                         ((g$ls/false$8903$XW@M@)
                                          (if g$ls/false$8903$XW@M@
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7808$XW@M@
                                                     'quote)
                                                   '())))
                                              g$ls/false$8903$XW@M@)
                                            (g$syntax-violation$7971$XW@M@
                                              '#f
                                              '"invalid syntax"
                                              g$t$8902$XW@M@))))
                                       (g$syntax-dispatch$7865$XW@M@
                                         g$t$8902$XW@M@
                                         '()))))
                                   g$t$8889$XW@M@))))
                             (g$syntax-dispatch$7865$XW@M@
                               g$t$8889$XW@M@
                               '(any . any)))))
                         g$p$8887$XW@M@))))
                   (g$quasi$8855$XW@M@
                     (case-lambda
                       ((g$p$8860$XW@M@ g$lev$8861$XW@M@)
                        ((case-lambda
                           ((g$t$8862$XW@M@)
                            ((case-lambda
                               ((g$ls/false$8863$XW@M@)
                                (if g$ls/false$8863$XW@M@
                                  (apply
                                    (case-lambda
                                      ((g$p$8864$XW@M@)
                                       (if (= g$lev$8861$XW@M@ '0)
                                         g$p$8864$XW@M@
                                         (g$quasicons$8851$XW@M@
                                           (g$datum$8834$XW@M@ 'unquote)
                                           (g$quasi$8855$XW@M@
                                             (list g$p$8864$XW@M@)
                                             (- g$lev$8861$XW@M@ '1))))))
                                    g$ls/false$8863$XW@M@)
                                  ((case-lambda
                                     ((g$t$8865$XW@M@)
                                      ((case-lambda
                                         ((g$ls/false$8866$XW@M@)
                                          (if g$ls/false$8866$XW@M@
                                            (apply
                                              (case-lambda
                                                ((g$p$8867$XW@M@ g$q$8868$XW@M@)
                                                 (if (= g$lev$8861$XW@M@ '0)
                                                   (g$quasicons*$8850$XW@M@
                                                     g$p$8867$XW@M@
                                                     (g$quasi$8855$XW@M@
                                                       g$q$8868$XW@M@
                                                       g$lev$8861$XW@M@))
                                                   (g$quasicons$8851$XW@M@
                                                     (g$quasicons$8851$XW@M@
                                                       (g$datum$8834$XW@M@
                                                         'unquote)
                                                       (g$quasi$8855$XW@M@
                                                         g$p$8867$XW@M@
                                                         (- g$lev$8861$XW@M@
                                                            '1)))
                                                     (g$quasi$8855$XW@M@
                                                       g$q$8868$XW@M@
                                                       g$lev$8861$XW@M@)))))
                                              g$ls/false$8866$XW@M@)
                                            ((case-lambda
                                               ((g$t$8869$XW@M@)
                                                ((case-lambda
                                                   ((g$ls/false$8870$XW@M@)
                                                    (if g$ls/false$8870$XW@M@
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8871$XW@M@
                                                             g$q$8872$XW@M@)
                                                           (if (= g$lev$8861$XW@M@
                                                                  '0)
                                                             (g$quasiappend$8852$XW@M@
                                                               g$p$8871$XW@M@
                                                               (g$quasi$8855$XW@M@
                                                                 g$q$8872$XW@M@
                                                                 g$lev$8861$XW@M@))
                                                             (g$quasicons$8851$XW@M@
                                                               (g$quasicons$8851$XW@M@
                                                                 (g$datum$8834$XW@M@
                                                                   'unquote-splicing)
                                                                 (g$quasi$8855$XW@M@
                                                                   g$p$8871$XW@M@
                                                                   (- g$lev$8861$XW@M@
                                                                      '1)))
                                                               (g$quasi$8855$XW@M@
                                                                 g$q$8872$XW@M@
                                                                 g$lev$8861$XW@M@)))))
                                                        g$ls/false$8870$XW@M@)
                                                      ((case-lambda
                                                         ((g$t$8873$XW@M@)
                                                          ((case-lambda
                                                             ((g$ls/false$8874$XW@M@)
                                                              (if g$ls/false$8874$XW@M@
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8875$XW@M@)
                                                                     (g$quasicons$8851$XW@M@
                                                                       (g$datum$8834$XW@M@
                                                                         'quasiquote)
                                                                       (g$quasi$8855$XW@M@
                                                                         (list
                                                                           g$p$8875$XW@M@)
                                                                         (+ g$lev$8861$XW@M@
                                                                            '1)))))
                                                                  g$ls/false$8874$XW@M@)
                                                                ((case-lambda
                                                                   ((g$t$8876$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8877$XW@M@)
                                                                        (if g$ls/false$8877$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8878$XW@M@
                                                                                 g$q$8879$XW@M@)
                                                                               (g$quasicons$8851$XW@M@
                                                                                 (g$quasi$8855$XW@M@
                                                                                   g$p$8878$XW@M@
                                                                                   g$lev$8861$XW@M@)
                                                                                 (g$quasi$8855$XW@M@
                                                                                   g$q$8879$XW@M@
                                                                                   g$lev$8861$XW@M@))))
                                                                            g$ls/false$8877$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$8880$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8881$XW@M@)
                                                                                  (if (if g$ls/false$8881$XW@M@
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8882$XW@M@)
                                                                                               (not (g$stx?$7559$XW@M@
                                                                                                      g$x$8882$XW@M@))))
                                                                                            g$ls/false$8881$XW@M@))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8883$XW@M@)
                                                                                         (g$quasivector$8853$XW@M@
                                                                                           (g$vquasi$8854$XW@M@
                                                                                             g$x$8883$XW@M@
                                                                                             g$lev$8861$XW@M@))))
                                                                                      g$ls/false$8881$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$t$8884$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8885$XW@M@)
                                                                                            (if g$ls/false$8885$XW@M@
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8886$XW@M@)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7808$XW@M@
                                                                                                       'quote)
                                                                                                     g$p$8886$XW@M@)))
                                                                                                g$ls/false$8885$XW@M@)
                                                                                              (g$syntax-violation$7971$XW@M@
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8884$XW@M@))))
                                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                                           g$t$8884$XW@M@
                                                                                           'any))))
                                                                                     g$t$8880$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$8880$XW@M@
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8876$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$8876$XW@M@
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8873$XW@M@))))
                                                           (g$syntax-dispatch$7865$XW@M@
                                                             g$t$8873$XW@M@
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8869$XW@M@))))
                                                 (g$syntax-dispatch$7865$XW@M@
                                                   g$t$8869$XW@M@
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8865$XW@M@))))
                                       (g$syntax-dispatch$7865$XW@M@
                                         g$t$8865$XW@M@
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8862$XW@M@))))
                             (g$syntax-dispatch$7865$XW@M@
                               g$t$8862$XW@M@
                               '(#(scheme-id unquote) any)))))
                         g$p$8860$XW@M@)))))
           (case-lambda
             ((g$x$8856$XW@M@)
              ((case-lambda
                 ((g$t$8857$XW@M@)
                  ((case-lambda
                     ((g$ls/false$8858$XW@M@)
                      (if g$ls/false$8858$XW@M@
                        (apply
                          (case-lambda
                            ((g$e$8859$XW@M@)
                             (g$quasi$8855$XW@M@ g$e$8859$XW@M@ '0)))
                          g$ls/false$8858$XW@M@)
                        (g$syntax-violation$7971$XW@M@
                          '#f
                          '"invalid syntax"
                          g$t$8857$XW@M@))))
                   (g$syntax-dispatch$7865$XW@M@ g$t$8857$XW@M@ '(_ any)))))
               g$x$8856$XW@M@))))))))
   (g$quasisyntax-macro$7857$XW@M@
     g$quasisyntax-macro$11307$XW@M@
     ((case-lambda
        (()
         (letrec* ((g$quasi$8966$XW@M@
                     (case-lambda
                       ((g$p$8980$XW@M@ g$lev$8981$XW@M@)
                        ((case-lambda
                           ((g$t$8982$XW@M@)
                            ((case-lambda
                               ((g$ls/false$8983$XW@M@)
                                (if g$ls/false$8983$XW@M@
                                  (apply
                                    (case-lambda
                                      ((g$p$8984$XW@M@)
                                       (if (= g$lev$8981$XW@M@ '0)
                                         ((case-lambda
                                            ((g$g$8985$XW@M@)
                                             (values
                                               (list g$g$8985$XW@M@)
                                               (list g$p$8984$XW@M@)
                                               g$g$8985$XW@M@)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8966$XW@M@
                                                g$p$8984$XW@M@
                                                (- g$lev$8981$XW@M@ '1))))
                                           (case-lambda
                                             ((g$lhs*$8989$XW@M@
                                                g$rhs*$8990$XW@M@
                                                g$p$8991$XW@M@)
                                              ((case-lambda
                                                 ((g$p$8992$XW@M@
                                                    g$rhs*$8993$XW@M@
                                                    g$lhs*$8994$XW@M@)
                                                  (values
                                                    g$lhs*$8994$XW@M@
                                                    g$rhs*$8993$XW@M@
                                                    (list
                                                      'unsyntax
                                                      g$p$8992$XW@M@))))
                                               g$p$8991$XW@M@
                                               g$rhs*$8990$XW@M@
                                               g$lhs*$8989$XW@M@)))))))
                                    g$ls/false$8983$XW@M@)
                                  ((case-lambda
                                     ((g$t$8995$XW@M@)
                                      ((case-lambda
                                         ((g$ls/false$8996$XW@M@)
                                          (if (if g$ls/false$8996$XW@M@
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8981$XW@M@ '0)))
                                                    g$ls/false$8996$XW@M@))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7971$XW@M@
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8980$XW@M@)))
                                              g$ls/false$8996$XW@M@)
                                            ((case-lambda
                                               ((g$t$8997$XW@M@)
                                                ((case-lambda
                                                   ((g$ls/false$8998$XW@M@)
                                                    (if g$ls/false$8998$XW@M@
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8999$XW@M@
                                                             g$q$9000$XW@M@)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8966$XW@M@
                                                                  g$q$9000$XW@M@
                                                                  g$lev$8981$XW@M@)))
                                                             (case-lambda
                                                               ((g$lhs*$9004$XW@M@
                                                                  g$rhs*$9005$XW@M@
                                                                  g$q$9006$XW@M@)
                                                                ((case-lambda
                                                                   ((g$q$9007$XW@M@
                                                                      g$rhs*$9008$XW@M@
                                                                      g$lhs*$9009$XW@M@)
                                                                    (if (= g$lev$8981$XW@M@
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$9010$XW@M@)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$9010$XW@M@
                                                                                '(...))
                                                                              g$lhs*$9009$XW@M@)
                                                                            (cons
                                                                              g$p$8999$XW@M@
                                                                              g$rhs*$9008$XW@M@)
                                                                            (cons
                                                                              g$g$9010$XW@M@
                                                                              (cons
                                                                                '...
                                                                                g$q$9007$XW@M@)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8966$XW@M@
                                                                             g$p$8999$XW@M@
                                                                             (- g$lev$8981$XW@M@
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9014$XW@M@
                                                                             g$rhs2*$9015$XW@M@
                                                                             g$p$9016$XW@M@)
                                                                           ((case-lambda
                                                                              ((g$p$9017$XW@M@
                                                                                 g$rhs2*$9018$XW@M@
                                                                                 g$lhs2*$9019$XW@M@)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9019$XW@M@
                                                                                   g$lhs*$9009$XW@M@)
                                                                                 (append
                                                                                   g$rhs2*$9018$XW@M@
                                                                                   g$rhs*$9008$XW@M@)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$9017$XW@M@)
                                                                                   g$q$9007$XW@M@))))
                                                                            g$p$9016$XW@M@
                                                                            g$rhs2*$9015$XW@M@
                                                                            g$lhs2*$9014$XW@M@)))))))
                                                                 g$q$9006$XW@M@
                                                                 g$rhs*$9005$XW@M@
                                                                 g$lhs*$9004$XW@M@))))))
                                                        g$ls/false$8998$XW@M@)
                                                      ((case-lambda
                                                         ((g$t$9020$XW@M@)
                                                          ((case-lambda
                                                             ((g$ls/false$9021$XW@M@)
                                                              (if (if g$ls/false$9021$XW@M@
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8981$XW@M@
                                                                              '0)))
                                                                        g$ls/false$9021$XW@M@))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7971$XW@M@
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8980$XW@M@)))
                                                                  g$ls/false$9021$XW@M@)
                                                                ((case-lambda
                                                                   ((g$t$9022$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9023$XW@M@)
                                                                        (if g$ls/false$9023$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9024$XW@M@)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8966$XW@M@
                                                                                      g$p$9024$XW@M@
                                                                                      (+ g$lev$8981$XW@M@
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$9028$XW@M@
                                                                                      g$rhs*$9029$XW@M@
                                                                                      g$p$9030$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$p$9031$XW@M@
                                                                                          g$rhs*$9032$XW@M@
                                                                                          g$lhs*$9033$XW@M@)
                                                                                        (values
                                                                                          g$lhs*$9033$XW@M@
                                                                                          g$rhs*$9032$XW@M@
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$9031$XW@M@))))
                                                                                     g$p$9030$XW@M@
                                                                                     g$rhs*$9029$XW@M@
                                                                                     g$lhs*$9028$XW@M@))))))
                                                                            g$ls/false$9023$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$9034$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9035$XW@M@)
                                                                                  (if g$ls/false$9035$XW@M@
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9036$XW@M@
                                                                                           g$q$9037$XW@M@)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8966$XW@M@
                                                                                                g$p$9036$XW@M@
                                                                                                g$lev$8981$XW@M@)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9044$XW@M@
                                                                                                g$rhs*$9045$XW@M@
                                                                                                g$p$9046$XW@M@)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8966$XW@M@
                                                                                                     g$q$9037$XW@M@
                                                                                                     g$lev$8981$XW@M@)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$9047$XW@M@
                                                                                                     g$rhs2*$9048$XW@M@
                                                                                                     g$q$9049$XW@M@)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$9050$XW@M@
                                                                                                         g$rhs2*$9051$XW@M@
                                                                                                         g$lhs2*$9052$XW@M@
                                                                                                         g$p$9053$XW@M@
                                                                                                         g$rhs*$9054$XW@M@
                                                                                                         g$lhs*$9055$XW@M@)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$9052$XW@M@
                                                                                                           g$lhs*$9055$XW@M@)
                                                                                                         (append
                                                                                                           g$rhs2*$9051$XW@M@
                                                                                                           g$rhs*$9054$XW@M@)
                                                                                                         (cons
                                                                                                           g$p$9053$XW@M@
                                                                                                           g$q$9050$XW@M@))))
                                                                                                    g$q$9049$XW@M@
                                                                                                    g$rhs2*$9048$XW@M@
                                                                                                    g$lhs2*$9047$XW@M@
                                                                                                    g$p$9046$XW@M@
                                                                                                    g$rhs*$9045$XW@M@
                                                                                                    g$lhs*$9044$XW@M@)))))))))
                                                                                      g$ls/false$9035$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$t$9056$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9057$XW@M@)
                                                                                            (if (if g$ls/false$9057$XW@M@
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$9058$XW@M@)
                                                                                                         (not (g$stx?$7559$XW@M@
                                                                                                                g$p$8980$XW@M@))))
                                                                                                      g$ls/false$9057$XW@M@))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$9059$XW@M@)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$9063$XW@M@
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9064$XW@M@)
                                                                                                                       (if (null?
                                                                                                                             g$x$9064$XW@M@)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8966$XW@M@
                                                                                                                                (car g$x$9064$XW@M@)
                                                                                                                                g$lev$8981$XW@M@)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$9068$XW@M@
                                                                                                                                g$rhs*$9069$XW@M@
                                                                                                                                g$a$9070$XW@M@)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$9071$XW@M@
                                                                                                                                    g$rhs*$9072$XW@M@
                                                                                                                                    g$lhs*$9073$XW@M@)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$9063$XW@M@
                                                                                                                                         (cdr g$x$9064$XW@M@))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$9077$XW@M@
                                                                                                                                         g$rhs2*$9078$XW@M@
                                                                                                                                         g$d$9079$XW@M@)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$9080$XW@M@
                                                                                                                                             g$rhs2*$9081$XW@M@
                                                                                                                                             g$lhs2*$9082$XW@M@)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$9073$XW@M@
                                                                                                                                               g$lhs2*$9082$XW@M@)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$9072$XW@M@
                                                                                                                                               g$rhs2*$9081$XW@M@)
                                                                                                                                             (cons
                                                                                                                                               g$a$9071$XW@M@
                                                                                                                                               g$d$9080$XW@M@))))
                                                                                                                                        g$d$9079$XW@M@
                                                                                                                                        g$rhs2*$9078$XW@M@
                                                                                                                                        g$lhs2*$9077$XW@M@))))))
                                                                                                                               g$a$9070$XW@M@
                                                                                                                               g$rhs*$9069$XW@M@
                                                                                                                               g$lhs*$9068$XW@M@)))))))))
                                                                                                           g$f$9063$XW@M@)
                                                                                                         g$x$9059$XW@M@)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9083$XW@M@
                                                                                                          g$rhs*$9084$XW@M@
                                                                                                          g$x*$9085$XW@M@)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$9086$XW@M@
                                                                                                              g$rhs*$9087$XW@M@
                                                                                                              g$lhs*$9088$XW@M@)
                                                                                                            (values
                                                                                                              g$lhs*$9088$XW@M@
                                                                                                              g$rhs*$9087$XW@M@
                                                                                                              (list->vector
                                                                                                                g$x*$9086$XW@M@))))
                                                                                                         g$x*$9085$XW@M@
                                                                                                         g$rhs*$9084$XW@M@
                                                                                                         g$lhs*$9083$XW@M@))))))
                                                                                                g$ls/false$9057$XW@M@)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9089$XW@M@)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9090$XW@M@)
                                                                                                      (if g$ls/false$9090$XW@M@
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8980$XW@M@)))
                                                                                                          g$ls/false$9090$XW@M@)
                                                                                                        (g$syntax-violation$7971$XW@M@
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$9089$XW@M@))))
                                                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                                                     g$t$9089$XW@M@
                                                                                                     '_))))
                                                                                               g$t$9056$XW@M@))))
                                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                                           g$t$9056$XW@M@
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$9034$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$9034$XW@M@
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$9022$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$9022$XW@M@
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$9020$XW@M@))))
                                                           (g$syntax-dispatch$7865$XW@M@
                                                             g$t$9020$XW@M@
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8997$XW@M@))))
                                                 (g$syntax-dispatch$7865$XW@M@
                                                   g$t$8997$XW@M@
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8995$XW@M@))))
                                       (g$syntax-dispatch$7865$XW@M@
                                         g$t$8995$XW@M@
                                         '#(scheme-id unsyntax)))))
                                   g$t$8982$XW@M@))))
                             (g$syntax-dispatch$7865$XW@M@
                               g$t$8982$XW@M@
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8980$XW@M@)))))
           (case-lambda
             ((g$x$8967$XW@M@)
              ((case-lambda
                 ((g$t$8968$XW@M@)
                  ((case-lambda
                     ((g$ls/false$8969$XW@M@)
                      (if g$ls/false$8969$XW@M@
                        (apply
                          (case-lambda
                            ((g$e$8970$XW@M@)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8966$XW@M@ g$e$8970$XW@M@ '0)))
                               (case-lambda
                                 ((g$lhs*$8974$XW@M@
                                    g$rhs*$8975$XW@M@
                                    g$v$8976$XW@M@)
                                  ((case-lambda
                                     ((g$v$8977$XW@M@
                                        g$rhs*$8978$XW@M@
                                        g$lhs*$8979$XW@M@)
                                      (g$bless$7828$XW@M@
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8978$XW@M@)
                                          '()
                                          (list
                                            g$lhs*$8979$XW@M@
                                            (list 'syntax g$v$8977$XW@M@))))))
                                   g$v$8976$XW@M@
                                   g$rhs*$8975$XW@M@
                                   g$lhs*$8974$XW@M@))))))
                          g$ls/false$8969$XW@M@)
                        (g$syntax-violation$7971$XW@M@
                          '#f
                          '"invalid syntax"
                          g$t$8968$XW@M@))))
                   (g$syntax-dispatch$7865$XW@M@ g$t$8968$XW@M@ '(_ any)))))
               g$x$8967$XW@M@))))))))
   (g$define-struct-macro$7858$XW@M@
     g$define-struct-macro$11308$XW@M@
     (case-lambda
       ((g$stx$9091$XW@M@)
        (g$syntax-violation$7971$XW@M@
          '#f
          '"define-struct not supported"
          g$stx$9091$XW@M@))))
   (g$define-record-type-macro$7859$XW@M@
     g$define-record-type-macro$11309$XW@M@
     (case-lambda
       ((g$x$9092$XW@M@)
        (letrec* ((g$id$9093$XW@M@
                    (case-lambda
                      ((g$ctxt$9345$XW@M@ . g$str*$9346$XW@M@)
                       (g$datum->syntax$7973$XW@M@
                         g$ctxt$9345$XW@M@
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9347$XW@M@)
                                     (if (symbol? g$x$9347$XW@M@)
                                       (symbol->string g$x$9347$XW@M@)
                                       (if (string? g$x$9347$XW@M@)
                                         g$x$9347$XW@M@
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9346$XW@M@)))))))
                  (g$get-record-name$9094$XW@M@
                    (case-lambda
                      ((g$spec$9336$XW@M@)
                       ((case-lambda
                          ((g$t$9337$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9338$XW@M@)
                               (if g$ls/false$9338$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$foo$9339$XW@M@
                                        g$make-foo$9340$XW@M@
                                        g$foo?$9341$XW@M@)
                                      g$foo$9339$XW@M@))
                                   g$ls/false$9338$XW@M@)
                                 ((case-lambda
                                    ((g$t$9342$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9343$XW@M@)
                                         (if g$ls/false$9343$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$foo$9344$XW@M@)
                                                g$foo$9344$XW@M@))
                                             g$ls/false$9343$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9342$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9342$XW@M@
                                        'any))))
                                  g$t$9337$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9337$XW@M@
                              '(any any any)))))
                        g$spec$9336$XW@M@))))
                  (g$get-record-constructor-name$9095$XW@M@
                    (case-lambda
                      ((g$spec$9326$XW@M@)
                       ((case-lambda
                          ((g$t$9327$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9328$XW@M@)
                               (if g$ls/false$9328$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$foo$9329$XW@M@
                                        g$make-foo$9330$XW@M@
                                        g$foo?$9331$XW@M@)
                                      g$make-foo$9330$XW@M@))
                                   g$ls/false$9328$XW@M@)
                                 ((case-lambda
                                    ((g$t$9332$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9333$XW@M@)
                                         (if (if g$ls/false$9333$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9334$XW@M@)
                                                      (g$id?$7587$XW@M@
                                                        g$foo$9334$XW@M@)))
                                                   g$ls/false$9333$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9335$XW@M@)
                                                (g$id$9093$XW@M@
                                                  g$foo$9335$XW@M@
                                                  '"make-"
                                                  (g$stx->datum$7598$XW@M@
                                                    g$foo$9335$XW@M@))))
                                             g$ls/false$9333$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9332$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9332$XW@M@
                                        'any))))
                                  g$t$9327$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9327$XW@M@
                              '(any any any)))))
                        g$spec$9326$XW@M@))))
                  (g$get-record-predicate-name$9096$XW@M@
                    (case-lambda
                      ((g$spec$9316$XW@M@)
                       ((case-lambda
                          ((g$t$9317$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9318$XW@M@)
                               (if g$ls/false$9318$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$foo$9319$XW@M@
                                        g$make-foo$9320$XW@M@
                                        g$foo?$9321$XW@M@)
                                      g$foo?$9321$XW@M@))
                                   g$ls/false$9318$XW@M@)
                                 ((case-lambda
                                    ((g$t$9322$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9323$XW@M@)
                                         (if (if g$ls/false$9323$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9324$XW@M@)
                                                      (g$id?$7587$XW@M@
                                                        g$foo$9324$XW@M@)))
                                                   g$ls/false$9323$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9325$XW@M@)
                                                (g$id$9093$XW@M@
                                                  g$foo$9325$XW@M@
                                                  (g$stx->datum$7598$XW@M@
                                                    g$foo$9325$XW@M@)
                                                  '"?")))
                                             g$ls/false$9323$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9322$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9322$XW@M@
                                        'any))))
                                  g$t$9317$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9317$XW@M@
                              '(any any any)))))
                        g$spec$9316$XW@M@))))
                  (g$get-clause$9097$XW@M@
                    (case-lambda
                      ((g$id$9307$XW@M@ g$ls$9308$XW@M@)
                       ((case-lambda
                          ((g$t$9309$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9310$XW@M@)
                               (if g$ls/false$9310$XW@M@
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9310$XW@M@)
                                 ((case-lambda
                                    ((g$t$9311$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9312$XW@M@)
                                         (if g$ls/false$9312$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$x$9313$XW@M@
                                                  g$rest$9314$XW@M@
                                                  g$ls$9315$XW@M@)
                                                (if (g$free-id=?$7591$XW@M@
                                                      (g$bless$7828$XW@M@
                                                        g$id$9307$XW@M@)
                                                      g$x$9313$XW@M@)
                                                  (cons
                                                    g$x$9313$XW@M@
                                                    g$rest$9314$XW@M@)
                                                  (g$get-clause$9097$XW@M@
                                                    g$id$9307$XW@M@
                                                    g$ls$9315$XW@M@))))
                                             g$ls/false$9312$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9311$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9311$XW@M@
                                        '((any . any) . any)))))
                                  g$t$9309$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@ g$t$9309$XW@M@ '()))))
                        g$ls$9308$XW@M@))))
                  (g$foo-rtd-code$9098$XW@M@
                    (case-lambda
                      ((g$name$9266$XW@M@
                         g$clause*$9267$XW@M@
                         g$parent-rtd-code$9268$XW@M@)
                       (letrec* ((g$convert-field-spec*$9269$XW@M@
                                   (case-lambda
                                     ((g$ls$9294$XW@M@)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9295$XW@M@)
                                                ((case-lambda
                                                   ((g$t$9296$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$9297$XW@M@)
                                                        (if g$ls/false$9297$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9298$XW@M@
                                                                 g$rest$9299$XW@M@)
                                                               (list
                                                                 'mutable
                                                                 g$name$9298$XW@M@)))
                                                            g$ls/false$9297$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$9300$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$9301$XW@M@)
                                                                  (if g$ls/false$9301$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9302$XW@M@
                                                                           g$rest$9303$XW@M@)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9302$XW@M@)))
                                                                      g$ls/false$9301$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$9304$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9305$XW@M@)
                                                                            (if g$ls/false$9305$XW@M@
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9306$XW@M@)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9306$XW@M@)))
                                                                                g$ls/false$9305$XW@M@)
                                                                              (g$syntax-violation$7971$XW@M@
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9304$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$9304$XW@M@
                                                                           'any))))
                                                                     g$t$9300$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$9300$XW@M@
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9296$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$9296$XW@M@
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9295$XW@M@)))
                                             g$ls$9294$XW@M@))))))
                         ((case-lambda
                            ((g$uid-code$9270$XW@M@
                               g$sealed?$9271$XW@M@
                               g$opaque?$9272$XW@M@
                               g$fields$9273$XW@M@)
                             (g$bless$7828$XW@M@
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9266$XW@M@)
                                 g$parent-rtd-code$9268$XW@M@
                                 g$uid-code$9270$XW@M@
                                 g$sealed?$9271$XW@M@
                                 g$opaque?$9272$XW@M@
                                 g$fields$9273$XW@M@))))
                          ((case-lambda
                             ((g$t$9274$XW@M@)
                              ((case-lambda
                                 ((g$ls/false$9275$XW@M@)
                                  (if g$ls/false$9275$XW@M@
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9275$XW@M@)
                                    ((case-lambda
                                       ((g$t$9276$XW@M@)
                                        ((case-lambda
                                           ((g$ls/false$9277$XW@M@)
                                            (if g$ls/false$9277$XW@M@
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9278$XW@M@)
                                                   (list
                                                     'quote
                                                     g$uid$9278$XW@M@)))
                                                g$ls/false$9277$XW@M@)
                                              ((case-lambda
                                                 ((g$t$9279$XW@M@)
                                                  ((case-lambda
                                                     ((g$ls/false$9280$XW@M@)
                                                      (if g$ls/false$9280$XW@M@
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9280$XW@M@)
                                                        (g$syntax-violation$7971$XW@M@
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9279$XW@M@))))
                                                   (g$syntax-dispatch$7865$XW@M@
                                                     g$t$9279$XW@M@
                                                     '_))))
                                               g$t$9276$XW@M@))))
                                         (g$syntax-dispatch$7865$XW@M@
                                           g$t$9276$XW@M@
                                           '(_ any)))))
                                     g$t$9274$XW@M@))))
                               (g$syntax-dispatch$7865$XW@M@
                                 g$t$9274$XW@M@
                                 '(_)))))
                           (g$get-clause$9097$XW@M@
                             'nongenerative
                             g$clause*$9267$XW@M@))
                          ((case-lambda
                             ((g$t$9281$XW@M@)
                              ((case-lambda
                                 ((g$ls/false$9282$XW@M@)
                                  (if g$ls/false$9282$XW@M@
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9282$XW@M@)
                                    ((case-lambda
                                       ((g$t$9283$XW@M@)
                                        ((case-lambda
                                           ((g$ls/false$9284$XW@M@)
                                            (if g$ls/false$9284$XW@M@
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9284$XW@M@)
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"invalid syntax"
                                                g$t$9283$XW@M@))))
                                         (g$syntax-dispatch$7865$XW@M@
                                           g$t$9283$XW@M@
                                           '_))))
                                     g$t$9281$XW@M@))))
                               (g$syntax-dispatch$7865$XW@M@
                                 g$t$9281$XW@M@
                                 '(_ #(atom #t))))))
                           (g$get-clause$9097$XW@M@
                             'sealed
                             g$clause*$9267$XW@M@))
                          ((case-lambda
                             ((g$t$9285$XW@M@)
                              ((case-lambda
                                 ((g$ls/false$9286$XW@M@)
                                  (if g$ls/false$9286$XW@M@
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9286$XW@M@)
                                    ((case-lambda
                                       ((g$t$9287$XW@M@)
                                        ((case-lambda
                                           ((g$ls/false$9288$XW@M@)
                                            (if g$ls/false$9288$XW@M@
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9288$XW@M@)
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"invalid syntax"
                                                g$t$9287$XW@M@))))
                                         (g$syntax-dispatch$7865$XW@M@
                                           g$t$9287$XW@M@
                                           '_))))
                                     g$t$9285$XW@M@))))
                               (g$syntax-dispatch$7865$XW@M@
                                 g$t$9285$XW@M@
                                 '(_ #(atom #t))))))
                           (g$get-clause$9097$XW@M@
                             'opaque
                             g$clause*$9267$XW@M@))
                          ((case-lambda
                             ((g$t$9289$XW@M@)
                              ((case-lambda
                                 ((g$ls/false$9290$XW@M@)
                                  (if g$ls/false$9290$XW@M@
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9291$XW@M@)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9269$XW@M@
                                             g$field-spec*$9291$XW@M@))))
                                      g$ls/false$9290$XW@M@)
                                    ((case-lambda
                                       ((g$t$9292$XW@M@)
                                        ((case-lambda
                                           ((g$ls/false$9293$XW@M@)
                                            (if g$ls/false$9293$XW@M@
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9293$XW@M@)
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"invalid syntax"
                                                g$t$9292$XW@M@))))
                                         (g$syntax-dispatch$7865$XW@M@
                                           g$t$9292$XW@M@
                                           '_))))
                                     g$t$9289$XW@M@))))
                               (g$syntax-dispatch$7865$XW@M@
                                 g$t$9289$XW@M@
                                 '(_ . each-any)))))
                           (g$get-clause$9097$XW@M@
                             'fields
                             g$clause*$9267$XW@M@)))))))
                  (g$parent-rtd-code$9099$XW@M@
                    (case-lambda
                      ((g$clause*$9254$XW@M@)
                       ((case-lambda
                          ((g$t$9255$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9256$XW@M@)
                               (if g$ls/false$9256$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$name$9257$XW@M@)
                                      (list
                                        'record-type-descriptor
                                        g$name$9257$XW@M@)))
                                   g$ls/false$9256$XW@M@)
                                 ((case-lambda
                                    ((g$t$9258$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9259$XW@M@)
                                         (if g$ls/false$9259$XW@M@
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9260$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$9261$XW@M@)
                                                        (if g$ls/false$9261$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9262$XW@M@
                                                                 g$rcd$9263$XW@M@)
                                                               g$rtd$9262$XW@M@))
                                                            g$ls/false$9261$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$9264$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$9265$XW@M@)
                                                                  (if g$ls/false$9265$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9265$XW@M@)
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9264$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$9264$XW@M@
                                                                 '#(atom #f)))))
                                                           g$t$9260$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$9260$XW@M@
                                                       '(_ any any)))))
                                                 (g$get-clause$9097$XW@M@
                                                   'parent-rtd
                                                   g$clause*$9254$XW@M@))))
                                             g$ls/false$9259$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9258$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9258$XW@M@
                                        '#(atom #f)))))
                                  g$t$9255$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9255$XW@M@
                              '(_ any)))))
                        (g$get-clause$9097$XW@M@
                          'parent
                          g$clause*$9254$XW@M@)))))
                  (g$parent-rcd-code$9100$XW@M@
                    (case-lambda
                      ((g$clause*$9242$XW@M@)
                       ((case-lambda
                          ((g$t$9243$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9244$XW@M@)
                               (if g$ls/false$9244$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$name$9245$XW@M@)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9245$XW@M@)))
                                   g$ls/false$9244$XW@M@)
                                 ((case-lambda
                                    ((g$t$9246$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9247$XW@M@)
                                         (if g$ls/false$9247$XW@M@
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9248$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$9249$XW@M@)
                                                        (if g$ls/false$9249$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9250$XW@M@
                                                                 g$rcd$9251$XW@M@)
                                                               g$rcd$9251$XW@M@))
                                                            g$ls/false$9249$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$9252$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$9253$XW@M@)
                                                                  (if g$ls/false$9253$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9253$XW@M@)
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9252$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$9252$XW@M@
                                                                 '#(atom #f)))))
                                                           g$t$9248$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$9248$XW@M@
                                                       '(_ any any)))))
                                                 (g$get-clause$9097$XW@M@
                                                   'parent-rtd
                                                   g$clause*$9242$XW@M@))))
                                             g$ls/false$9247$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9246$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9246$XW@M@
                                        '#(atom #f)))))
                                  g$t$9243$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9243$XW@M@
                              '(_ any)))))
                        (g$get-clause$9097$XW@M@
                          'parent
                          g$clause*$9242$XW@M@)))))
                  (g$foo-rcd-code$9101$XW@M@
                    (case-lambda
                      ((g$clause*$9238$XW@M@
                         g$foo-rtd$9239$XW@M@
                         g$protocol$9240$XW@M@
                         g$parent-rcd-code$9241$XW@M@)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9239$XW@M@
                         g$parent-rcd-code$9241$XW@M@
                         g$protocol$9240$XW@M@))))
                  (g$get-protocol-code$9102$XW@M@
                    (case-lambda
                      ((g$clause*$9232$XW@M@)
                       ((case-lambda
                          ((g$t$9233$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9234$XW@M@)
                               (if g$ls/false$9234$XW@M@
                                 (apply
                                   (case-lambda
                                     ((g$expr$9235$XW@M@) g$expr$9235$XW@M@))
                                   g$ls/false$9234$XW@M@)
                                 ((case-lambda
                                    ((g$t$9236$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9237$XW@M@)
                                         (if g$ls/false$9237$XW@M@
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9237$XW@M@)
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$t$9236$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9236$XW@M@
                                        '_))))
                                  g$t$9233$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9233$XW@M@
                              '(_ any)))))
                        (g$get-clause$9097$XW@M@
                          'protocol
                          g$clause*$9232$XW@M@)))))
                  (g$get-fields$9103$XW@M@
                    (case-lambda
                      ((g$clause*$9223$XW@M@)
                       ((case-lambda
                          ((g$t$9224$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9225$XW@M@)
                               (if g$ls/false$9225$XW@M@
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9225$XW@M@)
                                 ((case-lambda
                                    ((g$t$9226$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9227$XW@M@)
                                         (if g$ls/false$9227$XW@M@
                                           (apply
                                             (case-lambda
                                               ((g$f*$9228$XW@M@)
                                                g$f*$9228$XW@M@))
                                             g$ls/false$9227$XW@M@)
                                           ((case-lambda
                                              ((g$t$9229$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$9230$XW@M@)
                                                   (if g$ls/false$9230$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9231$XW@M@)
                                                          (g$get-fields$9103$XW@M@
                                                            g$rest$9231$XW@M@)))
                                                       g$ls/false$9230$XW@M@)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9229$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$9229$XW@M@
                                                  '(_ . any)))))
                                            g$t$9226$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9226$XW@M@
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9224$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@ g$t$9224$XW@M@ '()))))
                        g$clause*$9223$XW@M@))))
                  (g$get-mutator-indices$9104$XW@M@
                    (case-lambda
                      ((g$fields$9211$XW@M@)
                       ((letrec ((g$f$9212$XW@M@
                                   (case-lambda
                                     ((g$fields$9213$XW@M@ g$i$9214$XW@M@)
                                      ((case-lambda
                                         ((g$t$9215$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$9216$XW@M@)
                                              (if g$ls/false$9216$XW@M@
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9216$XW@M@)
                                                ((case-lambda
                                                   ((g$t$9217$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$9218$XW@M@)
                                                        (if g$ls/false$9218$XW@M@
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9219$XW@M@)
                                                               (cons
                                                                 g$i$9214$XW@M@
                                                                 (g$f$9212$XW@M@
                                                                   g$rest$9219$XW@M@
                                                                   (+ g$i$9214$XW@M@
                                                                      '1)))))
                                                            g$ls/false$9218$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$9220$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$9221$XW@M@)
                                                                  (if g$ls/false$9221$XW@M@
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9222$XW@M@)
                                                                         (g$f$9212$XW@M@
                                                                           g$rest$9222$XW@M@
                                                                           (+ g$i$9214$XW@M@
                                                                              '1))))
                                                                      g$ls/false$9221$XW@M@)
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9220$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$9220$XW@M@
                                                                 '(_ . any)))))
                                                           g$t$9217$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$9217$XW@M@
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9215$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$9215$XW@M@
                                             '()))))
                                       g$fields$9213$XW@M@)))))
                          g$f$9212$XW@M@)
                        g$fields$9211$XW@M@
                        '0))))
                  (g$get-mutators$9105$XW@M@
                    (case-lambda
                      ((g$foo$9190$XW@M@ g$fields$9191$XW@M@)
                       (letrec* ((g$gen-name$9192$XW@M@
                                   (case-lambda
                                     ((g$x$9210$XW@M@)
                                      (g$datum->syntax$7973$XW@M@
                                        g$foo$9190$XW@M@
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7974$XW@M@
                                                g$foo$9190$XW@M@))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7974$XW@M@
                                                g$x$9210$XW@M@))
                                            '"-set!")))))))
                         ((letrec ((g$f$9193$XW@M@
                                     (case-lambda
                                       ((g$fields$9194$XW@M@)
                                        ((case-lambda
                                           ((g$t$9195$XW@M@)
                                            ((case-lambda
                                               ((g$ls/false$9196$XW@M@)
                                                (if g$ls/false$9196$XW@M@
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9196$XW@M@)
                                                  ((case-lambda
                                                     ((g$t$9197$XW@M@)
                                                      ((case-lambda
                                                         ((g$ls/false$9198$XW@M@)
                                                          (if g$ls/false$9198$XW@M@
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9199$XW@M@
                                                                   g$accessor$9200$XW@M@
                                                                   g$mutator$9201$XW@M@
                                                                   g$rest$9202$XW@M@)
                                                                 (cons
                                                                   g$mutator$9201$XW@M@
                                                                   (g$f$9193$XW@M@
                                                                     g$rest$9202$XW@M@))))
                                                              g$ls/false$9198$XW@M@)
                                                            ((case-lambda
                                                               ((g$t$9203$XW@M@)
                                                                ((case-lambda
                                                                   ((g$ls/false$9204$XW@M@)
                                                                    (if g$ls/false$9204$XW@M@
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9205$XW@M@
                                                                             g$rest$9206$XW@M@)
                                                                           (cons
                                                                             (g$gen-name$9192$XW@M@
                                                                               g$name$9205$XW@M@)
                                                                             (g$f$9193$XW@M@
                                                                               g$rest$9206$XW@M@))))
                                                                        g$ls/false$9204$XW@M@)
                                                                      ((case-lambda
                                                                         ((g$t$9207$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9208$XW@M@)
                                                                              (if g$ls/false$9208$XW@M@
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9209$XW@M@)
                                                                                     (g$f$9193$XW@M@
                                                                                       g$rest$9209$XW@M@)))
                                                                                  g$ls/false$9208$XW@M@)
                                                                                (g$syntax-violation$7971$XW@M@
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9207$XW@M@))))
                                                                           (g$syntax-dispatch$7865$XW@M@
                                                                             g$t$9207$XW@M@
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9203$XW@M@))))
                                                                 (g$syntax-dispatch$7865$XW@M@
                                                                   g$t$9203$XW@M@
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9197$XW@M@))))
                                                       (g$syntax-dispatch$7865$XW@M@
                                                         g$t$9197$XW@M@
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9195$XW@M@))))
                                             (g$syntax-dispatch$7865$XW@M@
                                               g$t$9195$XW@M@
                                               '()))))
                                         g$fields$9194$XW@M@)))))
                            g$f$9193$XW@M@)
                          g$fields$9191$XW@M@)))))
                  (g$get-accessors$9106$XW@M@
                    (case-lambda
                      ((g$foo$9156$XW@M@ g$fields$9157$XW@M@)
                       (letrec* ((g$gen-name$9158$XW@M@
                                   (case-lambda
                                     ((g$x$9189$XW@M@)
                                      (g$datum->syntax$7973$XW@M@
                                        g$foo$9156$XW@M@
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7974$XW@M@
                                                g$foo$9156$XW@M@))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7974$XW@M@
                                                g$x$9189$XW@M@)))))))))
                         (map (case-lambda
                                ((g$field$9159$XW@M@)
                                 ((case-lambda
                                    ((g$t$9160$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9161$XW@M@)
                                         (if (if g$ls/false$9161$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9162$XW@M@
                                                        g$accessor$9163$XW@M@
                                                        g$mutator$9164$XW@M@)
                                                      (g$id?$7587$XW@M@
                                                        g$accessor$9163$XW@M@)))
                                                   g$ls/false$9161$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9165$XW@M@
                                                  g$accessor$9166$XW@M@
                                                  g$mutator$9167$XW@M@)
                                                g$accessor$9166$XW@M@))
                                             g$ls/false$9161$XW@M@)
                                           ((case-lambda
                                              ((g$t$9168$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$9169$XW@M@)
                                                   (if (if g$ls/false$9169$XW@M@
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9170$XW@M@
                                                                  g$accessor$9171$XW@M@)
                                                                (g$id?$7587$XW@M@
                                                                  g$accessor$9171$XW@M@)))
                                                             g$ls/false$9169$XW@M@))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9172$XW@M@
                                                            g$accessor$9173$XW@M@)
                                                          g$accessor$9173$XW@M@))
                                                       g$ls/false$9169$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$9174$XW@M@)
                                                         ((case-lambda
                                                            ((g$ls/false$9175$XW@M@)
                                                             (if (if g$ls/false$9175$XW@M@
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9176$XW@M@)
                                                                          (g$id?$7587$XW@M@
                                                                            g$name$9176$XW@M@)))
                                                                       g$ls/false$9175$XW@M@))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9177$XW@M@)
                                                                    (g$gen-name$9158$XW@M@
                                                                      g$name$9177$XW@M@)))
                                                                 g$ls/false$9175$XW@M@)
                                                               ((case-lambda
                                                                  ((g$t$9178$XW@M@)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9179$XW@M@)
                                                                       (if (if g$ls/false$9179$XW@M@
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9180$XW@M@)
                                                                                    (g$id?$7587$XW@M@
                                                                                      g$name$9180$XW@M@)))
                                                                                 g$ls/false$9179$XW@M@))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9181$XW@M@)
                                                                              (g$gen-name$9158$XW@M@
                                                                                g$name$9181$XW@M@)))
                                                                           g$ls/false$9179$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$t$9182$XW@M@)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9183$XW@M@)
                                                                                 (if (if g$ls/false$9183$XW@M@
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9184$XW@M@)
                                                                                              (g$id?$7587$XW@M@
                                                                                                g$name$9184$XW@M@)))
                                                                                           g$ls/false$9183$XW@M@))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9185$XW@M@)
                                                                                        (g$gen-name$9158$XW@M@
                                                                                          g$name$9185$XW@M@)))
                                                                                     g$ls/false$9183$XW@M@)
                                                                                   ((case-lambda
                                                                                      ((g$t$9186$XW@M@)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9187$XW@M@)
                                                                                           (if g$ls/false$9187$XW@M@
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9188$XW@M@)
                                                                                                  (g$syntax-violation$7971$XW@M@
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9159$XW@M@)))
                                                                                               g$ls/false$9187$XW@M@)
                                                                                             (g$syntax-violation$7971$XW@M@
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9186$XW@M@))))
                                                                                        (g$syntax-dispatch$7865$XW@M@
                                                                                          g$t$9186$XW@M@
                                                                                          'any))))
                                                                                    g$t$9182$XW@M@))))
                                                                              (g$syntax-dispatch$7865$XW@M@
                                                                                g$t$9182$XW@M@
                                                                                'any))))
                                                                          g$t$9178$XW@M@))))
                                                                    (g$syntax-dispatch$7865$XW@M@
                                                                      g$t$9178$XW@M@
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9174$XW@M@))))
                                                          (g$syntax-dispatch$7865$XW@M@
                                                            g$t$9174$XW@M@
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9168$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$9168$XW@M@
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9160$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9160$XW@M@
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9159$XW@M@)))
                              g$fields$9157$XW@M@)))))
                  (g$enumerate$9107$XW@M@
                    (case-lambda
                      ((g$ls$9152$XW@M@)
                       ((letrec ((g$f$9153$XW@M@
                                   (case-lambda
                                     ((g$ls$9154$XW@M@ g$i$9155$XW@M@)
                                      (if (null? g$ls$9154$XW@M@)
                                        '()
                                        (cons
                                          g$i$9155$XW@M@
                                          (g$f$9153$XW@M@
                                            (cdr g$ls$9154$XW@M@)
                                            (+ g$i$9155$XW@M@ '1))))))))
                          g$f$9153$XW@M@)
                        g$ls$9152$XW@M@
                        '0))))
                  (g$do-define-record$9108$XW@M@
                    (case-lambda
                      ((g$namespec$9132$XW@M@ g$clause*$9133$XW@M@)
                       ((case-lambda
                          ((g$foo$9134$XW@M@)
                           ((case-lambda
                              ((g$foo-rtd$9135$XW@M@)
                               ((case-lambda
                                  ((g$foo-rcd$9136$XW@M@)
                                   ((case-lambda
                                      ((g$protocol$9137$XW@M@)
                                       ((case-lambda
                                          ((g$make-foo$9138$XW@M@)
                                           ((case-lambda
                                              ((g$fields$9139$XW@M@)
                                               ((case-lambda
                                                  ((g$idx*$9140$XW@M@)
                                                   ((case-lambda
                                                      ((g$foo-x*$9141$XW@M@)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9142$XW@M@)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9143$XW@M@)
                                                               ((case-lambda
                                                                  ((g$foo?$9144$XW@M@)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9145$XW@M@)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9146$XW@M@)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9147$XW@M@)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7828$XW@M@
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9135$XW@M@
                                                                                           g$foo-rtd-code$9145$XW@M@)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9137$XW@M@
                                                                                             g$protocol-code$9147$XW@M@)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9136$XW@M@
                                                                                               g$foo-rcd-code$9146$XW@M@)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9134$XW@M@
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9135$XW@M@)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9136$XW@M@)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9144$XW@M@
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9135$XW@M@))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9138$XW@M@
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9136$XW@M@))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9148$XW@M@
                                                                                                               g$idx$9149$XW@M@)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9148$XW@M@
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9135$XW@M@
                                                                                                                 g$idx$9149$XW@M@))))
                                                                                                          g$foo-x*$9141$XW@M@
                                                                                                          g$idx*$9140$XW@M@)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9150$XW@M@
                                                                                                               g$idx$9151$XW@M@)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9150$XW@M@
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9135$XW@M@
                                                                                                                 g$idx$9151$XW@M@))))
                                                                                                          g$set-foo-x!*$9142$XW@M@
                                                                                                          g$set-foo-idx*$9143$XW@M@)))))))))))))))
                                                                            (g$get-protocol-code$9102$XW@M@
                                                                              g$clause*$9133$XW@M@))))
                                                                        (g$foo-rcd-code$9101$XW@M@
                                                                          g$clause*$9133$XW@M@
                                                                          g$foo-rtd$9135$XW@M@
                                                                          g$protocol$9137$XW@M@
                                                                          (g$parent-rcd-code$9100$XW@M@
                                                                            g$clause*$9133$XW@M@)))))
                                                                    (g$foo-rtd-code$9098$XW@M@
                                                                      g$foo$9134$XW@M@
                                                                      g$clause*$9133$XW@M@
                                                                      (g$parent-rtd-code$9099$XW@M@
                                                                        g$clause*$9133$XW@M@)))))
                                                                (g$get-record-predicate-name$9096$XW@M@
                                                                  g$namespec$9132$XW@M@))))
                                                            (g$get-mutator-indices$9104$XW@M@
                                                              g$fields$9139$XW@M@))))
                                                        (g$get-mutators$9105$XW@M@
                                                          g$foo$9134$XW@M@
                                                          g$fields$9139$XW@M@))))
                                                    (g$get-accessors$9106$XW@M@
                                                      g$foo$9134$XW@M@
                                                      g$fields$9139$XW@M@))))
                                                (g$enumerate$9107$XW@M@
                                                  g$fields$9139$XW@M@))))
                                            (g$get-fields$9103$XW@M@
                                              g$clause*$9133$XW@M@))))
                                        (g$get-record-constructor-name$9095$XW@M@
                                          g$namespec$9132$XW@M@))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9094$XW@M@ g$namespec$9132$XW@M@)))))
                  (g$verify-clauses$9109$XW@M@
                    (case-lambda
                      ((g$x$9114$XW@M@ g$cls*$9115$XW@M@)
                       (letrec* ((g$valid-kwds$9116$XW@M@
                                   (map g$bless$7828$XW@M@
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9117$XW@M@
                                   (case-lambda
                                     ((g$x$9129$XW@M@ g$ls$9130$XW@M@)
                                      (if (pair? g$ls$9130$XW@M@)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9131$XW@M@)
                                              (if g$t$9131$XW@M@
                                                g$t$9131$XW@M@
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9117$XW@M@
                                                    g$x$9129$XW@M@
                                                    (cdr g$ls$9130$XW@M@))))))
                                           (g$free-id=?$7591$XW@M@
                                             g$x$9129$XW@M@
                                             (car g$ls$9130$XW@M@))))
                                        '#f)))))
                         ((letrec ((g$f$9118$XW@M@
                                     (case-lambda
                                       ((g$cls*$9119$XW@M@ g$seen*$9120$XW@M@)
                                        (if (null? g$cls*$9119$XW@M@)
                                          (void)
                                          ((case-lambda
                                             ((g$t$9121$XW@M@)
                                              ((case-lambda
                                                 ((g$ls/false$9122$XW@M@)
                                                  (if g$ls/false$9122$XW@M@
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9123$XW@M@
                                                           g$rest$9124$XW@M@)
                                                         (if ((case-lambda
                                                                ((g$t$9125$XW@M@)
                                                                 (if g$t$9125$XW@M@
                                                                   g$t$9125$XW@M@
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9117$XW@M@
                                                                            g$kwd$9123$XW@M@
                                                                            g$valid-kwds$9116$XW@M@))))))
                                                              (not (g$id?$7587$XW@M@
                                                                     g$kwd$9123$XW@M@)))
                                                           (g$syntax-violation$7971$XW@M@
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9123$XW@M@)
                                                           (if (g$bound-id-member?$7594$XW@M@
                                                                 g$kwd$9123$XW@M@
                                                                 g$seen*$9120$XW@M@)
                                                             (g$syntax-violation$7971$XW@M@
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9114$XW@M@
                                                               g$kwd$9123$XW@M@)
                                                             (g$f$9118$XW@M@
                                                               (cdr g$cls*$9119$XW@M@)
                                                               (cons
                                                                 g$kwd$9123$XW@M@
                                                                 g$seen*$9120$XW@M@))))))
                                                      g$ls/false$9122$XW@M@)
                                                    ((case-lambda
                                                       ((g$t$9126$XW@M@)
                                                        ((case-lambda
                                                           ((g$ls/false$9127$XW@M@)
                                                            (if g$ls/false$9127$XW@M@
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9128$XW@M@)
                                                                   (g$syntax-violation$7971$XW@M@
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9128$XW@M@)))
                                                                g$ls/false$9127$XW@M@)
                                                              (g$syntax-violation$7971$XW@M@
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9126$XW@M@))))
                                                         (g$syntax-dispatch$7865$XW@M@
                                                           g$t$9126$XW@M@
                                                           'any))))
                                                     g$t$9121$XW@M@))))
                                               (g$syntax-dispatch$7865$XW@M@
                                                 g$t$9121$XW@M@
                                                 '(any . any)))))
                                           (car g$cls*$9119$XW@M@)))))))
                            g$f$9118$XW@M@)
                          g$cls*$9115$XW@M@
                          '()))))))
          ((case-lambda
             ((g$t$9110$XW@M@)
              ((case-lambda
                 ((g$ls/false$9111$XW@M@)
                  (if g$ls/false$9111$XW@M@
                    (apply
                      (case-lambda
                        ((g$namespec$9112$XW@M@ g$clause*$9113$XW@M@)
                         (begin
                           (g$verify-clauses$9109$XW@M@
                             g$x$9092$XW@M@
                             g$clause*$9113$XW@M@)
                           (g$do-define-record$9108$XW@M@
                             g$namespec$9112$XW@M@
                             g$clause*$9113$XW@M@))))
                      g$ls/false$9111$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$9110$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$9110$XW@M@
                 '(_ any . each-any)))))
           g$x$9092$XW@M@)))))
   (g$define-condition-type-macro$7860$XW@M@
     g$define-condition-type-macro$11310$XW@M@
     (case-lambda
       ((g$x$9348$XW@M@)
        (letrec* ((g$mkname$9349$XW@M@
                    (case-lambda
                      ((g$name$9372$XW@M@ g$suffix$9373$XW@M@)
                       (g$datum->syntax$7973$XW@M@
                         g$name$9372$XW@M@
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7974$XW@M@ g$name$9372$XW@M@))
                             g$suffix$9373$XW@M@)))))))
          ((case-lambda
             ((g$t$9350$XW@M@)
              ((case-lambda
                 ((g$ls/false$9351$XW@M@)
                  (if (if g$ls/false$9351$XW@M@
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9352$XW@M@
                                 g$name$9353$XW@M@
                                 g$super$9354$XW@M@
                                 g$constructor$9355$XW@M@
                                 g$predicate$9356$XW@M@
                                 g$field*$9357$XW@M@
                                 g$accessor*$9358$XW@M@)
                               (if (g$id?$7587$XW@M@ g$name$9353$XW@M@)
                                 (if (g$id?$7587$XW@M@ g$super$9354$XW@M@)
                                   (if (g$id?$7587$XW@M@
                                         g$constructor$9355$XW@M@)
                                     (if (g$id?$7587$XW@M@
                                           g$predicate$9356$XW@M@)
                                       (if (g$for-all$5871$XW@M@
                                             g$id?$7587$XW@M@
                                             g$field*$9357$XW@M@)
                                         (begin
                                           '#f
                                           (g$for-all$5871$XW@M@
                                             g$id?$7587$XW@M@
                                             g$accessor*$9358$XW@M@))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9351$XW@M@))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9359$XW@M@
                           g$name$9360$XW@M@
                           g$super$9361$XW@M@
                           g$constructor$9362$XW@M@
                           g$predicate$9363$XW@M@
                           g$field*$9364$XW@M@
                           g$accessor*$9365$XW@M@)
                         ((case-lambda
                            ((g$aux-accessor*$9366$XW@M@)
                             (g$bless$7828$XW@M@
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9360$XW@M@
                                         g$constructor$9362$XW@M@
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9361$XW@M@)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9367$XW@M@
                                                       g$aux$9368$XW@M@)
                                                     (list
                                                       'immutable
                                                       g$field$9367$XW@M@
                                                       g$aux$9368$XW@M@)))
                                                  g$field*$9364$XW@M@
                                                  g$aux-accessor*$9366$XW@M@))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9363$XW@M@
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9360$XW@M@)))
                                     (map (case-lambda
                                            ((g$accessor$9369$XW@M@
                                               g$aux$9370$XW@M@)
                                             (list
                                               'define
                                               g$accessor$9369$XW@M@
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9360$XW@M@)
                                                 g$aux$9370$XW@M@))))
                                          g$accessor*$9365$XW@M@
                                          g$aux-accessor*$9366$XW@M@)))))))
                          (map (case-lambda ((g$x$9371$XW@M@) (gensym)))
                               g$accessor*$9365$XW@M@))))
                      g$ls/false$9351$XW@M@)
                    (g$syntax-violation$7971$XW@M@
                      '#f
                      '"invalid syntax"
                      g$t$9350$XW@M@))))
               (g$syntax-dispatch$7865$XW@M@
                 g$t$9350$XW@M@
                 '(any any any any any . #(each (any any)))))))
           g$x$9348$XW@M@)))))
   (g$incorrect-usage-macro$7861$XW@M@
     g$incorrect-usage-macro$11311$XW@M@
     (case-lambda
       ((g$e$9374$XW@M@)
        (g$syntax-violation$7971$XW@M@
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9374$XW@M@))))
   (g$parameterize-transformer$7862$XW@M@
     g$parameterize-transformer$11312$XW@M@
     (case-lambda
       ((g$e$9375$XW@M@ g$r$9376$XW@M@ g$mr$9377$XW@M@)
        ((case-lambda
           ((g$t$9378$XW@M@)
            ((case-lambda
               ((g$ls/false$9379$XW@M@)
                (if g$ls/false$9379$XW@M@
                  (apply
                    (case-lambda
                      ((g$b$9380$XW@M@ g$b*$9381$XW@M@)
                       (g$chi-internal$7894$XW@M@
                         (cons g$b$9380$XW@M@ g$b*$9381$XW@M@)
                         g$r$9376$XW@M@
                         g$mr$9377$XW@M@)))
                    g$ls/false$9379$XW@M@)
                  ((case-lambda
                     ((g$t$9382$XW@M@)
                      ((case-lambda
                         ((g$ls/false$9383$XW@M@)
                          (if g$ls/false$9383$XW@M@
                            (apply
                              (case-lambda
                                ((g$olhs*$9384$XW@M@
                                   g$orhs*$9385$XW@M@
                                   g$b$9386$XW@M@
                                   g$b*$9387$XW@M@)
                                 ((case-lambda
                                    ((g$lhs*$9388$XW@M@
                                       g$rhs*$9389$XW@M@
                                       g$t*$9390$XW@M@
                                       g$swap$9391$XW@M@)
                                     (g$build-let$7520$XW@M@
                                       '#f
                                       (append
                                         g$lhs*$9388$XW@M@
                                         g$rhs*$9389$XW@M@)
                                       (append
                                         (g$chi-expr*$7881$XW@M@
                                           g$olhs*$9384$XW@M@
                                           g$r$9376$XW@M@
                                           g$mr$9377$XW@M@)
                                         (g$chi-expr*$7881$XW@M@
                                           g$orhs*$9385$XW@M@
                                           g$r$9376$XW@M@
                                           g$mr$9377$XW@M@))
                                       (g$build-let$7520$XW@M@
                                         '#f
                                         (list g$swap$9391$XW@M@)
                                         (list
                                           (g$build-lambda$7518$XW@M@
                                             '#f
                                             '()
                                             (g$build-sequence$7521$XW@M@
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$9392$XW@M@
                                                         g$lhs$9393$XW@M@
                                                         g$rhs$9394$XW@M@)
                                                       (g$build-let$7520$XW@M@
                                                         '#f
                                                         (list g$t$9392$XW@M@)
                                                         (list
                                                           (list
                                                             g$lhs$9393$XW@M@))
                                                         (g$build-sequence$7521$XW@M@
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$9393$XW@M@
                                                               g$rhs$9394$XW@M@)
                                                             (list
                                                               'set!
                                                               g$rhs$9394$XW@M@
                                                               g$t$9392$XW@M@))))))
                                                    g$t*$9390$XW@M@
                                                    g$lhs*$9388$XW@M@
                                                    g$rhs*$9389$XW@M@))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$9391$XW@M@
                                           (g$build-lambda$7518$XW@M@
                                             '#f
                                             '()
                                             (g$chi-internal$7894$XW@M@
                                               (cons
                                                 g$b$9386$XW@M@
                                                 g$b*$9387$XW@M@)
                                               g$r$9376$XW@M@
                                               g$mr$9377$XW@M@))
                                           g$swap$9391$XW@M@)))))
                                  (map (case-lambda
                                         ((g$x$9395$XW@M@)
                                          (g$gen-lexical$7531$XW@M@ 'lhs)))
                                       g$olhs*$9384$XW@M@)
                                  (map (case-lambda
                                         ((g$x$9396$XW@M@)
                                          (g$gen-lexical$7531$XW@M@ 'rhs)))
                                       g$olhs*$9384$XW@M@)
                                  (map (case-lambda
                                         ((g$x$9397$XW@M@)
                                          (g$gen-lexical$7531$XW@M@ 't)))
                                       g$olhs*$9384$XW@M@)
                                  (g$gen-lexical$7531$XW@M@ 'swap))))
                              g$ls/false$9383$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$9382$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$9382$XW@M@
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9378$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$9378$XW@M@
               '(_ () any . each-any)))))
         g$e$9375$XW@M@))))
   (g$foreign-call-transformer$7863$XW@M@
     g$foreign-call-transformer$11313$XW@M@
     (case-lambda
       ((g$e$9398$XW@M@ g$r$9399$XW@M@ g$mr$9400$XW@M@)
        ((case-lambda
           ((g$t$9401$XW@M@)
            ((case-lambda
               ((g$ls/false$9402$XW@M@)
                (if g$ls/false$9402$XW@M@
                  (apply
                    (case-lambda
                      ((g$name$9403$XW@M@ g$arg*$9404$XW@M@)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7883$XW@M@
                             g$name$9403$XW@M@
                             g$r$9399$XW@M@
                             g$mr$9400$XW@M@)
                           (g$chi-expr*$7881$XW@M@
                             g$arg*$9404$XW@M@
                             g$r$9399$XW@M@
                             g$mr$9400$XW@M@)))))
                    g$ls/false$9402$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$9401$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$9401$XW@M@
               '(_ any . each-any)))))
         g$e$9398$XW@M@))))
   (g$convert-pattern$7864$XW@M@
     g$convert-pattern$11314$XW@M@
     (case-lambda
       ((g$pattern$9405$XW@M@ g$keys$9406$XW@M@)
        (letrec* ((g$cvt*$9407$XW@M@
                    (case-lambda
                      ((g$p*$9487$XW@M@ g$n$9488$XW@M@ g$ids$9489$XW@M@)
                       (if (null? g$p*$9487$XW@M@)
                         (values '() g$ids$9489$XW@M@)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9407$XW@M@
                                (cdr g$p*$9487$XW@M@)
                                g$n$9488$XW@M@
                                g$ids$9489$XW@M@)))
                           (case-lambda
                             ((g$y$9492$XW@M@ g$ids$9493$XW@M@)
                              ((case-lambda
                                 ((g$ids$9494$XW@M@ g$y$9495$XW@M@)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9408$XW@M@
                                         (car g$p*$9487$XW@M@)
                                         g$n$9488$XW@M@
                                         g$ids$9494$XW@M@)))
                                    (case-lambda
                                      ((g$x$9498$XW@M@ g$ids$9499$XW@M@)
                                       ((case-lambda
                                          ((g$ids$9500$XW@M@ g$x$9501$XW@M@)
                                           (values
                                             (cons
                                               g$x$9501$XW@M@
                                               g$y$9495$XW@M@)
                                             g$ids$9500$XW@M@)))
                                        g$ids$9499$XW@M@
                                        g$x$9498$XW@M@))))))
                               g$ids$9493$XW@M@
                               g$y$9492$XW@M@))))))))
                  (g$cvt$9408$XW@M@
                    (case-lambda
                      ((g$p$9409$XW@M@ g$n$9410$XW@M@ g$ids$9411$XW@M@)
                       ((case-lambda
                          ((g$t$9412$XW@M@)
                           ((case-lambda
                              ((g$ls/false$9413$XW@M@)
                               (if (if g$ls/false$9413$XW@M@
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9414$XW@M@)
                                            (g$id?$7587$XW@M@ g$id$9414$XW@M@)))
                                         g$ls/false$9413$XW@M@))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9415$XW@M@)
                                      (if (g$bound-id-member?$7594$XW@M@
                                            g$p$9409$XW@M@
                                            g$keys$9406$XW@M@)
                                        (values
                                          (vector 'free-id g$p$9409$XW@M@)
                                          g$ids$9411$XW@M@)
                                        (if (g$free-id=?$7591$XW@M@
                                              g$p$9409$XW@M@
                                              (g$scheme-stx$7808$XW@M@ '_))
                                          (values '_ g$ids$9411$XW@M@)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9409$XW@M@
                                                g$n$9410$XW@M@)
                                              g$ids$9411$XW@M@))))))
                                   g$ls/false$9413$XW@M@)
                                 ((case-lambda
                                    ((g$t$9416$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$9417$XW@M@)
                                         (if (if g$ls/false$9417$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9418$XW@M@
                                                        g$dots$9419$XW@M@)
                                                      (g$ellipsis?$7866$XW@M@
                                                        g$dots$9419$XW@M@)))
                                                   g$ls/false$9417$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9420$XW@M@
                                                  g$dots$9421$XW@M@)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9408$XW@M@
                                                       g$p$9420$XW@M@
                                                       (+ g$n$9410$XW@M@ '1)
                                                       g$ids$9411$XW@M@)))
                                                  (case-lambda
                                                    ((g$p$9424$XW@M@
                                                       g$ids$9425$XW@M@)
                                                     ((case-lambda
                                                        ((g$ids$9426$XW@M@
                                                           g$p$9427$XW@M@)
                                                         (values
                                                           (if (eq? g$p$9427$XW@M@
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9427$XW@M@))
                                                           g$ids$9426$XW@M@)))
                                                      g$ids$9425$XW@M@
                                                      g$p$9424$XW@M@))))))
                                             g$ls/false$9417$XW@M@)
                                           ((case-lambda
                                              ((g$t$9428$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$9429$XW@M@)
                                                   (if (if g$ls/false$9429$XW@M@
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9430$XW@M@
                                                                  g$dots$9431$XW@M@
                                                                  g$ys$9432$XW@M@
                                                                  g$z$9433$XW@M@)
                                                                (g$ellipsis?$7866$XW@M@
                                                                  g$dots$9431$XW@M@)))
                                                             g$ls/false$9429$XW@M@))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9434$XW@M@
                                                            g$dots$9435$XW@M@
                                                            g$ys$9436$XW@M@
                                                            g$z$9437$XW@M@)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9408$XW@M@
                                                                 g$z$9437$XW@M@
                                                                 g$n$9410$XW@M@
                                                                 g$ids$9411$XW@M@)))
                                                            (case-lambda
                                                              ((g$z$9440$XW@M@
                                                                 g$ids$9441$XW@M@)
                                                               ((case-lambda
                                                                  ((g$ids$9442$XW@M@
                                                                     g$z$9443$XW@M@)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9407$XW@M@
                                                                          g$ys$9436$XW@M@
                                                                          g$n$9410$XW@M@
                                                                          g$ids$9442$XW@M@)))
                                                                     (case-lambda
                                                                       ((g$ys$9446$XW@M@
                                                                          g$ids$9447$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ids$9448$XW@M@
                                                                              g$ys$9449$XW@M@)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9408$XW@M@
                                                                                   g$x$9434$XW@M@
                                                                                   (+ g$n$9410$XW@M@
                                                                                      '1)
                                                                                   g$ids$9448$XW@M@)))
                                                                              (case-lambda
                                                                                ((g$x$9452$XW@M@
                                                                                   g$ids$9453$XW@M@)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9454$XW@M@
                                                                                       g$x$9455$XW@M@)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9455$XW@M@
                                                                                         (reverse
                                                                                           g$ys$9449$XW@M@)
                                                                                         g$z$9443$XW@M@)
                                                                                       g$ids$9454$XW@M@)))
                                                                                  g$ids$9453$XW@M@
                                                                                  g$x$9452$XW@M@))))))
                                                                         g$ids$9447$XW@M@
                                                                         g$ys$9446$XW@M@))))))
                                                                g$ids$9441$XW@M@
                                                                g$z$9440$XW@M@))))))
                                                       g$ls/false$9429$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$9456$XW@M@)
                                                         ((case-lambda
                                                            ((g$ls/false$9457$XW@M@)
                                                             (if g$ls/false$9457$XW@M@
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9458$XW@M@
                                                                      g$y$9459$XW@M@)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9408$XW@M@
                                                                           g$y$9459$XW@M@
                                                                           g$n$9410$XW@M@
                                                                           g$ids$9411$XW@M@)))
                                                                      (case-lambda
                                                                        ((g$y$9462$XW@M@
                                                                           g$ids$9463$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$ids$9464$XW@M@
                                                                               g$y$9465$XW@M@)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9408$XW@M@
                                                                                    g$x$9458$XW@M@
                                                                                    g$n$9410$XW@M@
                                                                                    g$ids$9464$XW@M@)))
                                                                               (case-lambda
                                                                                 ((g$x$9468$XW@M@
                                                                                    g$ids$9469$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9470$XW@M@
                                                                                        g$x$9471$XW@M@)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9471$XW@M@
                                                                                          g$y$9465$XW@M@)
                                                                                        g$ids$9470$XW@M@)))
                                                                                   g$ids$9469$XW@M@
                                                                                   g$x$9468$XW@M@))))))
                                                                          g$ids$9463$XW@M@
                                                                          g$y$9462$XW@M@))))))
                                                                 g$ls/false$9457$XW@M@)
                                                               ((case-lambda
                                                                  ((g$t$9472$XW@M@)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9473$XW@M@)
                                                                       (if g$ls/false$9473$XW@M@
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9411$XW@M@)))
                                                                           g$ls/false$9473$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$t$9474$XW@M@)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9475$XW@M@)
                                                                                 (if (if g$ls/false$9475$XW@M@
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9476$XW@M@)
                                                                                              (not (g$stx?$7559$XW@M@
                                                                                                     g$p$9476$XW@M@))))
                                                                                           g$ls/false$9475$XW@M@))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9477$XW@M@)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9408$XW@M@
                                                                                               g$p$9477$XW@M@
                                                                                               g$n$9410$XW@M@
                                                                                               g$ids$9411$XW@M@)))
                                                                                          (case-lambda
                                                                                            ((g$p$9480$XW@M@
                                                                                               g$ids$9481$XW@M@)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9482$XW@M@
                                                                                                   g$p$9483$XW@M@)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9483$XW@M@)
                                                                                                   g$ids$9482$XW@M@)))
                                                                                              g$ids$9481$XW@M@
                                                                                              g$p$9480$XW@M@))))))
                                                                                     g$ls/false$9475$XW@M@)
                                                                                   ((case-lambda
                                                                                      ((g$t$9484$XW@M@)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9485$XW@M@)
                                                                                           (if g$ls/false$9485$XW@M@
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9486$XW@M@)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7598$XW@M@
                                                                                                        g$datum$9486$XW@M@))
                                                                                                    g$ids$9411$XW@M@)))
                                                                                               g$ls/false$9485$XW@M@)
                                                                                             (g$syntax-violation$7971$XW@M@
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9484$XW@M@))))
                                                                                        (g$syntax-dispatch$7865$XW@M@
                                                                                          g$t$9484$XW@M@
                                                                                          'any))))
                                                                                    g$t$9474$XW@M@))))
                                                                              (g$syntax-dispatch$7865$XW@M@
                                                                                g$t$9474$XW@M@
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9472$XW@M@))))
                                                                    (g$syntax-dispatch$7865$XW@M@
                                                                      g$t$9472$XW@M@
                                                                      '()))))
                                                                g$t$9456$XW@M@))))
                                                          (g$syntax-dispatch$7865$XW@M@
                                                            g$t$9456$XW@M@
                                                            '(any . any)))))
                                                      g$t$9428$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$9428$XW@M@
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9416$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$9416$XW@M@
                                        '(any any)))))
                                  g$t$9412$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$9412$XW@M@
                              'any))))
                        g$p$9409$XW@M@)))))
          (g$cvt$9408$XW@M@ g$pattern$9405$XW@M@ '0 '())))))
   (g$syntax-dispatch$7865$XW@M@
     g$syntax-dispatch$11315$XW@M@
     (case-lambda
       ((g$e$9502$XW@M@ g$p$9503$XW@M@)
        (letrec* ((g$stx^$9504$XW@M@
                    (case-lambda
                      ((g$e$9612$XW@M@
                         g$m*$9613$XW@M@
                         g$s*$9614$XW@M@
                         g$ae*$9615$XW@M@)
                       (if (if (null? g$m*$9613$XW@M@)
                             (if (null? g$s*$9614$XW@M@)
                               (begin '#f (null? g$ae*$9615$XW@M@))
                               '#f)
                             '#f)
                         g$e$9612$XW@M@
                         (g$mkstx$7575$XW@M@
                           g$e$9612$XW@M@
                           g$m*$9613$XW@M@
                           g$s*$9614$XW@M@
                           g$ae*$9615$XW@M@)))))
                  (g$match-each$9505$XW@M@
                    (case-lambda
                      ((g$e$9596$XW@M@
                         g$p$9597$XW@M@
                         g$m*$9598$XW@M@
                         g$s*$9599$XW@M@
                         g$ae*$9600$XW@M@)
                       (if (pair? g$e$9596$XW@M@)
                         ((case-lambda
                            ((g$first$9601$XW@M@)
                             (if g$first$9601$XW@M@
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9602$XW@M@)
                                     (if g$rest$9602$XW@M@
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9601$XW@M@
                                           g$rest$9602$XW@M@))
                                       '#f)))
                                  (g$match-each$9505$XW@M@
                                    (cdr g$e$9596$XW@M@)
                                    g$p$9597$XW@M@
                                    g$m*$9598$XW@M@
                                    g$s*$9599$XW@M@
                                    g$ae*$9600$XW@M@)))
                               '#f)))
                          (g$match$9511$XW@M@
                            (car g$e$9596$XW@M@)
                            g$p$9597$XW@M@
                            g$m*$9598$XW@M@
                            g$s*$9599$XW@M@
                            g$ae*$9600$XW@M@
                            '()))
                         (if (null? g$e$9596$XW@M@)
                           '()
                           (if (g$stx?$7559$XW@M@ g$e$9596$XW@M@)
                             (if (not (g$top-marked?$7530$XW@M@
                                        g$m*$9598$XW@M@))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7574$XW@M@
                                        g$m*$9598$XW@M@
                                        g$s*$9599$XW@M@
                                        g$ae*$9600$XW@M@
                                        g$e$9596$XW@M@)))
                                   (case-lambda
                                     ((g$m*$9606$XW@M@
                                        g$s*$9607$XW@M@
                                        g$ae*$9608$XW@M@)
                                      ((case-lambda
                                         ((g$ae*$9609$XW@M@
                                            g$s*$9610$XW@M@
                                            g$m*$9611$XW@M@)
                                          (g$match-each$9505$XW@M@
                                            (g$stx-expr$7561$XW@M@
                                              g$e$9596$XW@M@)
                                            g$p$9597$XW@M@
                                            g$m*$9611$XW@M@
                                            g$s*$9610$XW@M@
                                            g$ae*$9609$XW@M@)))
                                       g$ae*$9608$XW@M@
                                       g$s*$9607$XW@M@
                                       g$m*$9606$XW@M@)))))
                               '#f)
                             (if (annotation? g$e$9596$XW@M@)
                               (g$match-each$9505$XW@M@
                                 (annotation-expression g$e$9596$XW@M@)
                                 g$p$9597$XW@M@
                                 g$m*$9598$XW@M@
                                 g$s*$9599$XW@M@
                                 g$ae*$9600$XW@M@)
                               '#f)))))))
                  (g$match-each+$9506$XW@M@
                    (case-lambda
                      ((g$e$9564$XW@M@
                         g$x-pat$9565$XW@M@
                         g$y-pat$9566$XW@M@
                         g$z-pat$9567$XW@M@
                         g$m*$9568$XW@M@
                         g$s*$9569$XW@M@
                         g$ae*$9570$XW@M@
                         g$r$9571$XW@M@)
                       ((letrec ((g$f$9572$XW@M@
                                   (case-lambda
                                     ((g$e$9573$XW@M@
                                        g$m*$9574$XW@M@
                                        g$s*$9575$XW@M@
                                        g$ae*$9576$XW@M@)
                                      (if (pair? g$e$9573$XW@M@)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9572$XW@M@
                                               (cdr g$e$9573$XW@M@)
                                               g$m*$9574$XW@M@
                                               g$s*$9575$XW@M@
                                               g$ae*$9576$XW@M@)))
                                          (case-lambda
                                            ((g$xr*$9580$XW@M@
                                               g$y-pat$9581$XW@M@
                                               g$r$9582$XW@M@)
                                             ((case-lambda
                                                ((g$r$9583$XW@M@
                                                   g$y-pat$9584$XW@M@
                                                   g$xr*$9585$XW@M@)
                                                 (if g$r$9583$XW@M@
                                                   (if (null?
                                                         g$y-pat$9584$XW@M@)
                                                     ((case-lambda
                                                        ((g$xr$9586$XW@M@)
                                                         (if g$xr$9586$XW@M@
                                                           (values
                                                             (cons
                                                               g$xr$9586$XW@M@
                                                               g$xr*$9585$XW@M@)
                                                             g$y-pat$9584$XW@M@
                                                             g$r$9583$XW@M@)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9511$XW@M@
                                                        (car g$e$9573$XW@M@)
                                                        g$x-pat$9565$XW@M@
                                                        g$m*$9574$XW@M@
                                                        g$s*$9575$XW@M@
                                                        g$ae*$9576$XW@M@
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9584$XW@M@)
                                                       (g$match$9511$XW@M@
                                                         (car g$e$9573$XW@M@)
                                                         (car g$y-pat$9584$XW@M@)
                                                         g$m*$9574$XW@M@
                                                         g$s*$9575$XW@M@
                                                         g$ae*$9576$XW@M@
                                                         g$r$9583$XW@M@)))
                                                   (values '#f '#f '#f))))
                                              g$r$9582$XW@M@
                                              g$y-pat$9581$XW@M@
                                              g$xr*$9580$XW@M@))))
                                        (if (g$stx?$7559$XW@M@ g$e$9573$XW@M@)
                                          (if (g$top-marked?$7530$XW@M@
                                                g$m*$9574$XW@M@)
                                            (values
                                              '()
                                              g$y-pat$9566$XW@M@
                                              (g$match$9511$XW@M@
                                                g$e$9573$XW@M@
                                                g$z-pat$9567$XW@M@
                                                g$m*$9574$XW@M@
                                                g$s*$9575$XW@M@
                                                g$ae*$9576$XW@M@
                                                g$r$9571$XW@M@))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7574$XW@M@
                                                   g$m*$9574$XW@M@
                                                   g$s*$9575$XW@M@
                                                   g$ae*$9576$XW@M@
                                                   g$e$9573$XW@M@)))
                                              (case-lambda
                                                ((g$m*$9590$XW@M@
                                                   g$s*$9591$XW@M@
                                                   g$ae*$9592$XW@M@)
                                                 ((case-lambda
                                                    ((g$ae*$9593$XW@M@
                                                       g$s*$9594$XW@M@
                                                       g$m*$9595$XW@M@)
                                                     (g$f$9572$XW@M@
                                                       (g$stx-expr$7561$XW@M@
                                                         g$e$9573$XW@M@)
                                                       g$m*$9595$XW@M@
                                                       g$s*$9594$XW@M@
                                                       g$ae*$9593$XW@M@)))
                                                  g$ae*$9592$XW@M@
                                                  g$s*$9591$XW@M@
                                                  g$m*$9590$XW@M@)))))
                                          (if (annotation? g$e$9573$XW@M@)
                                            (g$f$9572$XW@M@
                                              (annotation-expression
                                                g$e$9573$XW@M@)
                                              g$m*$9574$XW@M@
                                              g$s*$9575$XW@M@
                                              g$ae*$9576$XW@M@)
                                            (values
                                              '()
                                              g$y-pat$9566$XW@M@
                                              (g$match$9511$XW@M@
                                                g$e$9573$XW@M@
                                                g$z-pat$9567$XW@M@
                                                g$m*$9574$XW@M@
                                                g$s*$9575$XW@M@
                                                g$ae*$9576$XW@M@
                                                g$r$9571$XW@M@)))))))))
                          g$f$9572$XW@M@)
                        g$e$9564$XW@M@
                        g$m*$9568$XW@M@
                        g$s*$9569$XW@M@
                        g$ae*$9570$XW@M@))))
                  (g$match-each-any$9507$XW@M@
                    (case-lambda
                      ((g$e$9550$XW@M@
                         g$m*$9551$XW@M@
                         g$s*$9552$XW@M@
                         g$ae*$9553$XW@M@)
                       (if (pair? g$e$9550$XW@M@)
                         ((case-lambda
                            ((g$l$9554$XW@M@)
                             (if g$l$9554$XW@M@
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9504$XW@M@
                                     (car g$e$9550$XW@M@)
                                     g$m*$9551$XW@M@
                                     g$s*$9552$XW@M@
                                     g$ae*$9553$XW@M@)
                                   g$l$9554$XW@M@))
                               '#f)))
                          (g$match-each-any$9507$XW@M@
                            (cdr g$e$9550$XW@M@)
                            g$m*$9551$XW@M@
                            g$s*$9552$XW@M@
                            g$ae*$9553$XW@M@))
                         (if (null? g$e$9550$XW@M@)
                           '()
                           (if (g$stx?$7559$XW@M@ g$e$9550$XW@M@)
                             (if (not (g$top-marked?$7530$XW@M@
                                        g$m*$9551$XW@M@))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7574$XW@M@
                                        g$m*$9551$XW@M@
                                        g$s*$9552$XW@M@
                                        g$ae*$9553$XW@M@
                                        g$e$9550$XW@M@)))
                                   (case-lambda
                                     ((g$m*$9558$XW@M@
                                        g$s*$9559$XW@M@
                                        g$ae*$9560$XW@M@)
                                      ((case-lambda
                                         ((g$ae*$9561$XW@M@
                                            g$s*$9562$XW@M@
                                            g$m*$9563$XW@M@)
                                          (g$match-each-any$9507$XW@M@
                                            (g$stx-expr$7561$XW@M@
                                              g$e$9550$XW@M@)
                                            g$m*$9563$XW@M@
                                            g$s*$9562$XW@M@
                                            g$ae*$9561$XW@M@)))
                                       g$ae*$9560$XW@M@
                                       g$s*$9559$XW@M@
                                       g$m*$9558$XW@M@)))))
                               '#f)
                             (if (annotation? g$e$9550$XW@M@)
                               (g$match-each-any$9507$XW@M@
                                 (annotation-expression g$e$9550$XW@M@)
                                 g$m*$9551$XW@M@
                                 g$s*$9552$XW@M@
                                 g$ae*$9553$XW@M@)
                               '#f)))))))
                  (g$match-empty$9508$XW@M@
                    (case-lambda
                      ((g$p$9547$XW@M@ g$r$9548$XW@M@)
                       (if (null? g$p$9547$XW@M@)
                         g$r$9548$XW@M@
                         (if (eq? g$p$9547$XW@M@ '_)
                           g$r$9548$XW@M@
                           (if (eq? g$p$9547$XW@M@ 'any)
                             (cons '() g$r$9548$XW@M@)
                             (if (pair? g$p$9547$XW@M@)
                               (g$match-empty$9508$XW@M@
                                 (car g$p$9547$XW@M@)
                                 (g$match-empty$9508$XW@M@
                                   (cdr g$p$9547$XW@M@)
                                   g$r$9548$XW@M@))
                               (if (eq? g$p$9547$XW@M@ 'each-any)
                                 (cons '() g$r$9548$XW@M@)
                                 ((case-lambda
                                    ((g$t$9549$XW@M@)
                                     (if (eqv? g$t$9549$XW@M@ 'each)
                                       (g$match-empty$9508$XW@M@
                                         (vector-ref g$p$9547$XW@M@ '1)
                                         g$r$9548$XW@M@)
                                       (if (eqv? g$t$9549$XW@M@ 'each+)
                                         (g$match-empty$9508$XW@M@
                                           (vector-ref g$p$9547$XW@M@ '1)
                                           (g$match-empty$9508$XW@M@
                                             (reverse
                                               (vector-ref g$p$9547$XW@M@ '2))
                                             (g$match-empty$9508$XW@M@
                                               (vector-ref g$p$9547$XW@M@ '3)
                                               g$r$9548$XW@M@)))
                                         (if (memv
                                               g$t$9549$XW@M@
                                               '(free-id atom))
                                           g$r$9548$XW@M@
                                           (if (memv
                                                 g$t$9549$XW@M@
                                                 '(scheme-id atom))
                                             g$r$9548$XW@M@
                                             (if (eqv? g$t$9549$XW@M@ 'vector)
                                               (g$match-empty$9508$XW@M@
                                                 (vector-ref g$p$9547$XW@M@ '1)
                                                 g$r$9548$XW@M@)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9547$XW@M@))))))))
                                  (vector-ref g$p$9547$XW@M@ '0))))))))))
                  (g$combine$9509$XW@M@
                    (case-lambda
                      ((g$r*$9545$XW@M@ g$r$9546$XW@M@)
                       (if (null? (car g$r*$9545$XW@M@))
                         g$r$9546$XW@M@
                         (cons
                           (map car g$r*$9545$XW@M@)
                           (g$combine$9509$XW@M@
                             (map cdr g$r*$9545$XW@M@)
                             g$r$9546$XW@M@))))))
                  (g$match*$9510$XW@M@
                    (case-lambda
                      ((g$e$9527$XW@M@
                         g$p$9528$XW@M@
                         g$m*$9529$XW@M@
                         g$s*$9530$XW@M@
                         g$ae*$9531$XW@M@
                         g$r$9532$XW@M@)
                       (if (null? g$p$9528$XW@M@)
                         (if (null? g$e$9527$XW@M@)
                           (begin '#f g$r$9532$XW@M@)
                           '#f)
                         (if (pair? g$p$9528$XW@M@)
                           (if (pair? g$e$9527$XW@M@)
                             (begin
                               '#f
                               (g$match$9511$XW@M@
                                 (car g$e$9527$XW@M@)
                                 (car g$p$9528$XW@M@)
                                 g$m*$9529$XW@M@
                                 g$s*$9530$XW@M@
                                 g$ae*$9531$XW@M@
                                 (g$match$9511$XW@M@
                                   (cdr g$e$9527$XW@M@)
                                   (cdr g$p$9528$XW@M@)
                                   g$m*$9529$XW@M@
                                   g$s*$9530$XW@M@
                                   g$ae*$9531$XW@M@
                                   g$r$9532$XW@M@)))
                             '#f)
                           (if (eq? g$p$9528$XW@M@ 'each-any)
                             ((case-lambda
                                ((g$l$9533$XW@M@)
                                 (if g$l$9533$XW@M@
                                   (begin
                                     '#f
                                     (cons g$l$9533$XW@M@ g$r$9532$XW@M@))
                                   '#f)))
                              (g$match-each-any$9507$XW@M@
                                g$e$9527$XW@M@
                                g$m*$9529$XW@M@
                                g$s*$9530$XW@M@
                                g$ae*$9531$XW@M@))
                             ((case-lambda
                                ((g$t$9534$XW@M@)
                                 (if (eqv? g$t$9534$XW@M@ 'each)
                                   (if (null? g$e$9527$XW@M@)
                                     (g$match-empty$9508$XW@M@
                                       (vector-ref g$p$9528$XW@M@ '1)
                                       g$r$9532$XW@M@)
                                     ((case-lambda
                                        ((g$r*$9544$XW@M@)
                                         (if g$r*$9544$XW@M@
                                           (begin
                                             '#f
                                             (g$combine$9509$XW@M@
                                               g$r*$9544$XW@M@
                                               g$r$9532$XW@M@))
                                           '#f)))
                                      (g$match-each$9505$XW@M@
                                        g$e$9527$XW@M@
                                        (vector-ref g$p$9528$XW@M@ '1)
                                        g$m*$9529$XW@M@
                                        g$s*$9530$XW@M@
                                        g$ae*$9531$XW@M@)))
                                   (if (eqv? g$t$9534$XW@M@ 'free-id)
                                     (if (symbol? g$e$9527$XW@M@)
                                       (if (g$top-marked?$7530$XW@M@
                                             g$m*$9529$XW@M@)
                                         (if (g$free-id=?$7591$XW@M@
                                               (g$stx^$9504$XW@M@
                                                 g$e$9527$XW@M@
                                                 g$m*$9529$XW@M@
                                                 g$s*$9530$XW@M@
                                                 g$ae*$9531$XW@M@)
                                               (vector-ref g$p$9528$XW@M@ '1))
                                           (begin '#f g$r$9532$XW@M@)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$9534$XW@M@ 'scheme-id)
                                       (if (symbol? g$e$9527$XW@M@)
                                         (if (g$top-marked?$7530$XW@M@
                                               g$m*$9529$XW@M@)
                                           (if (g$free-id=?$7591$XW@M@
                                                 (g$stx^$9504$XW@M@
                                                   g$e$9527$XW@M@
                                                   g$m*$9529$XW@M@
                                                   g$s*$9530$XW@M@
                                                   g$ae*$9531$XW@M@)
                                                 (g$scheme-stx$7808$XW@M@
                                                   (vector-ref
                                                     g$p$9528$XW@M@
                                                     '1)))
                                             (begin '#f g$r$9532$XW@M@)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$9534$XW@M@ 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9506$XW@M@
                                                g$e$9527$XW@M@
                                                (vector-ref g$p$9528$XW@M@ '1)
                                                (vector-ref g$p$9528$XW@M@ '2)
                                                (vector-ref g$p$9528$XW@M@ '3)
                                                g$m*$9529$XW@M@
                                                g$s*$9530$XW@M@
                                                g$ae*$9531$XW@M@
                                                g$r$9532$XW@M@)))
                                           (case-lambda
                                             ((g$xr*$9538$XW@M@
                                                g$y-pat$9539$XW@M@
                                                g$r$9540$XW@M@)
                                              ((case-lambda
                                                 ((g$r$9541$XW@M@
                                                    g$y-pat$9542$XW@M@
                                                    g$xr*$9543$XW@M@)
                                                  (if g$r$9541$XW@M@
                                                    (if (null?
                                                          g$y-pat$9542$XW@M@)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9543$XW@M@)
                                                          (g$match-empty$9508$XW@M@
                                                            (vector-ref
                                                              g$p$9528$XW@M@
                                                              '1)
                                                            g$r$9541$XW@M@)
                                                          (g$combine$9509$XW@M@
                                                            g$xr*$9543$XW@M@
                                                            g$r$9541$XW@M@)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9540$XW@M@
                                               g$y-pat$9539$XW@M@
                                               g$xr*$9538$XW@M@))))
                                         (if (eqv? g$t$9534$XW@M@ 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$9528$XW@M@ '1)
                                                 (g$strip$7597$XW@M@
                                                   g$e$9527$XW@M@
                                                   g$m*$9529$XW@M@))
                                             (begin '#f g$r$9532$XW@M@)
                                             '#f)
                                           (if (eqv? g$t$9534$XW@M@ 'vector)
                                             (if (vector? g$e$9527$XW@M@)
                                               (begin
                                                 '#f
                                                 (g$match$9511$XW@M@
                                                   (vector->list g$e$9527$XW@M@)
                                                   (vector-ref
                                                     g$p$9528$XW@M@
                                                     '1)
                                                   g$m*$9529$XW@M@
                                                   g$s*$9530$XW@M@
                                                   g$ae*$9531$XW@M@
                                                   g$r$9532$XW@M@))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9528$XW@M@)))))))))
                              (vector-ref g$p$9528$XW@M@ '0))))))))
                  (g$match$9511$XW@M@
                    (case-lambda
                      ((g$e$9512$XW@M@
                         g$p$9513$XW@M@
                         g$m*$9514$XW@M@
                         g$s*$9515$XW@M@
                         g$ae*$9516$XW@M@
                         g$r$9517$XW@M@)
                       (if (not g$r$9517$XW@M@)
                         '#f
                         (if (eq? g$p$9513$XW@M@ '_)
                           g$r$9517$XW@M@
                           (if (eq? g$p$9513$XW@M@ 'any)
                             (cons
                               (g$stx^$9504$XW@M@
                                 g$e$9512$XW@M@
                                 g$m*$9514$XW@M@
                                 g$s*$9515$XW@M@
                                 g$ae*$9516$XW@M@)
                               g$r$9517$XW@M@)
                             (if (g$stx?$7559$XW@M@ g$e$9512$XW@M@)
                               (if (not (g$top-marked?$7530$XW@M@
                                          g$m*$9514$XW@M@))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7574$XW@M@
                                          g$m*$9514$XW@M@
                                          g$s*$9515$XW@M@
                                          g$ae*$9516$XW@M@
                                          g$e$9512$XW@M@)))
                                     (case-lambda
                                       ((g$m*$9521$XW@M@
                                          g$s*$9522$XW@M@
                                          g$ae*$9523$XW@M@)
                                        ((case-lambda
                                           ((g$ae*$9524$XW@M@
                                              g$s*$9525$XW@M@
                                              g$m*$9526$XW@M@)
                                            (g$match$9511$XW@M@
                                              (g$stx-expr$7561$XW@M@
                                                g$e$9512$XW@M@)
                                              g$p$9513$XW@M@
                                              g$m*$9526$XW@M@
                                              g$s*$9525$XW@M@
                                              g$ae*$9524$XW@M@
                                              g$r$9517$XW@M@)))
                                         g$ae*$9523$XW@M@
                                         g$s*$9522$XW@M@
                                         g$m*$9521$XW@M@)))))
                                 '#f)
                               (if (annotation? g$e$9512$XW@M@)
                                 (g$match$9511$XW@M@
                                   (annotation-expression g$e$9512$XW@M@)
                                   g$p$9513$XW@M@
                                   g$m*$9514$XW@M@
                                   g$s*$9515$XW@M@
                                   g$ae*$9516$XW@M@
                                   g$r$9517$XW@M@)
                                 (g$match*$9510$XW@M@
                                   g$e$9512$XW@M@
                                   g$p$9513$XW@M@
                                   g$m*$9514$XW@M@
                                   g$s*$9515$XW@M@
                                   g$ae*$9516$XW@M@
                                   g$r$9517$XW@M@))))))))))
          (g$match$9511$XW@M@ g$e$9502$XW@M@ g$p$9503$XW@M@ '() '() '() '())))))
   (g$ellipsis?$7866$XW@M@
     g$ellipsis?$11316$XW@M@
     (case-lambda
       ((g$x$9616$XW@M@)
        (if (g$id?$7587$XW@M@ g$x$9616$XW@M@)
          (begin
            '#f
            (g$free-id=?$7591$XW@M@
              g$x$9616$XW@M@
              (g$scheme-stx$7808$XW@M@ '...)))
          '#f))))
   (g$underscore?$7867$XW@M@
     g$underscore?$11317$XW@M@
     (case-lambda
       ((g$x$9617$XW@M@)
        (if (g$id?$7587$XW@M@ g$x$9617$XW@M@)
          (begin
            '#f
            (g$free-id=?$7591$XW@M@
              g$x$9617$XW@M@
              (g$scheme-stx$7808$XW@M@ '_)))
          '#f))))
   (g$verify-literals$7868$XW@M@
     g$verify-literals$11318$XW@M@
     (case-lambda
       ((g$lits$9618$XW@M@ g$expr$9619$XW@M@)
        (for-each
          (case-lambda
            ((g$x$9620$XW@M@)
             (if ((case-lambda
                    ((g$t$9621$XW@M@)
                     (if g$t$9621$XW@M@
                       g$t$9621$XW@M@
                       ((case-lambda
                          ((g$t$9622$XW@M@)
                           (if g$t$9622$XW@M@
                             g$t$9622$XW@M@
                             (begin
                               '#f
                               (g$underscore?$7867$XW@M@ g$x$9620$XW@M@)))))
                        (g$ellipsis?$7866$XW@M@ g$x$9620$XW@M@)))))
                  (not (g$id?$7587$XW@M@ g$x$9620$XW@M@)))
               (g$syntax-violation$7971$XW@M@
                 '#f
                 '"invalid literal"
                 g$expr$9619$XW@M@
                 g$x$9620$XW@M@)
               (void))))
          g$lits$9618$XW@M@))))
   (g$syntax-case-transformer$7869$XW@M@
     g$syntax-case-transformer$11319$XW@M@
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9623$XW@M@
                     (case-lambda
                       ((g$pvars$9680$XW@M@
                          g$expr$9681$XW@M@
                          g$y$9682$XW@M@
                          g$r$9683$XW@M@
                          g$mr$9684$XW@M@)
                        ((case-lambda
                           ((g$ids$9685$XW@M@ g$levels$9686$XW@M@)
                            ((case-lambda
                               ((g$labels$9687$XW@M@ g$new-vars$9688$XW@M@)
                                ((case-lambda
                                   ((g$body$9689$XW@M@)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7518$XW@M@
                                        '#f
                                        g$new-vars$9688$XW@M@
                                        g$body$9689$XW@M@)
                                      g$y$9682$XW@M@)))
                                 (g$chi-expr$7883$XW@M@
                                   (g$add-subst$7577$XW@M@
                                     (g$make-full-rib$7555$XW@M@
                                       g$ids$9685$XW@M@
                                       g$labels$9687$XW@M@)
                                     g$expr$9681$XW@M@)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9690$XW@M@
                                               g$var$9691$XW@M@
                                               g$level$9692$XW@M@)
                                             (cons
                                               g$label$9690$XW@M@
                                               (g$make-binding$7603$XW@M@
                                                 'syntax
                                                 (cons
                                                   g$var$9691$XW@M@
                                                   g$level$9692$XW@M@)))))
                                          g$labels$9687$XW@M@
                                          g$new-vars$9688$XW@M@
                                          (map cdr g$pvars$9680$XW@M@))
                                     g$r$9683$XW@M@)
                                   g$mr$9684$XW@M@))))
                             (map g$gen-label$7533$XW@M@ g$ids$9685$XW@M@)
                             (map g$gen-lexical$7531$XW@M@ g$ids$9685$XW@M@))))
                         (map car g$pvars$9680$XW@M@)
                         (map cdr g$pvars$9680$XW@M@)))))
                   (g$invalid-ids-error$9624$XW@M@
                     (case-lambda
                       ((g$id*$9674$XW@M@ g$e$9675$XW@M@ g$class$9676$XW@M@)
                        ((letrec ((g$find$9677$XW@M@
                                    (case-lambda
                                      ((g$id*$9678$XW@M@ g$ok*$9679$XW@M@)
                                       (if (null? g$id*$9678$XW@M@)
                                         (g$syntax-violation$7971$XW@M@
                                           '#f
                                           '"invalid syntax"
                                           g$e$9675$XW@M@)
                                         (if (g$id?$7587$XW@M@
                                               (car g$id*$9678$XW@M@))
                                           (if (g$bound-id-member?$7594$XW@M@
                                                 (car g$id*$9678$XW@M@)
                                                 g$ok*$9679$XW@M@)
                                             (g$syntax-error$7968$XW@M@
                                               (car g$id*$9678$XW@M@)
                                               '"duplicate "
                                               g$class$9676$XW@M@)
                                             (g$find$9677$XW@M@
                                               (cdr g$id*$9678$XW@M@)
                                               (cons
                                                 (car g$id*$9678$XW@M@)
                                                 g$ok*$9679$XW@M@)))
                                           (g$syntax-error$7968$XW@M@
                                             (car g$id*$9678$XW@M@)
                                             '"invalid "
                                             g$class$9676$XW@M@)))))))
                           g$find$9677$XW@M@)
                         g$id*$9674$XW@M@
                         '()))))
                   (g$gen-clause$9625$XW@M@
                     (case-lambda
                       ((g$x$9654$XW@M@
                          g$keys$9655$XW@M@
                          g$clauses$9656$XW@M@
                          g$r$9657$XW@M@
                          g$mr$9658$XW@M@
                          g$pat$9659$XW@M@
                          g$fender$9660$XW@M@
                          g$expr$9661$XW@M@)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7864$XW@M@
                               g$pat$9659$XW@M@
                               g$keys$9655$XW@M@)))
                          (case-lambda
                            ((g$p$9664$XW@M@ g$pvars$9665$XW@M@)
                             ((case-lambda
                                ((g$pvars$9666$XW@M@ g$p$9667$XW@M@)
                                 (if (not (g$distinct-bound-ids?$7593$XW@M@
                                            (map car g$pvars$9666$XW@M@)))
                                   (g$invalid-ids-error$9624$XW@M@
                                     (map car g$pvars$9666$XW@M@)
                                     g$pat$9659$XW@M@
                                     '"pattern variable")
                                   (if (not (g$for-all$5871$XW@M@
                                              (case-lambda
                                                ((g$x$9668$XW@M@)
                                                 (not (g$ellipsis?$7866$XW@M@
                                                        (car g$x$9668$XW@M@)))))
                                              g$pvars$9666$XW@M@))
                                     (g$syntax-violation$7971$XW@M@
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9659$XW@M@)
                                     ((case-lambda
                                        ((g$y$9669$XW@M@)
                                         ((case-lambda
                                            ((g$test$9670$XW@M@)
                                             ((case-lambda
                                                ((g$conseq$9671$XW@M@)
                                                 ((case-lambda
                                                    ((g$altern$9672$XW@M@)
                                                     (list
                                                       (g$build-lambda$7518$XW@M@
                                                         '#f
                                                         (list g$y$9669$XW@M@)
                                                         (list
                                                           'if
                                                           g$test$9670$XW@M@
                                                           g$conseq$9671$XW@M@
                                                           g$altern$9672$XW@M@))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9654$XW@M@
                                                         (list
                                                           'quote
                                                           g$p$9667$XW@M@)))))
                                                  (g$gen-syntax-case$9626$XW@M@
                                                    g$x$9654$XW@M@
                                                    g$keys$9655$XW@M@
                                                    g$clauses$9656$XW@M@
                                                    g$r$9657$XW@M@
                                                    g$mr$9658$XW@M@))))
                                              (g$build-dispatch-call$9623$XW@M@
                                                g$pvars$9666$XW@M@
                                                g$expr$9661$XW@M@
                                                g$y$9669$XW@M@
                                                g$r$9657$XW@M@
                                                g$mr$9658$XW@M@))))
                                          (if (eq? g$fender$9660$XW@M@ '#t)
                                            g$y$9669$XW@M@
                                            ((case-lambda
                                               ((g$call$9673$XW@M@)
                                                (list
                                                  'if
                                                  g$y$9669$XW@M@
                                                  g$call$9673$XW@M@
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9623$XW@M@
                                               g$pvars$9666$XW@M@
                                               g$fender$9660$XW@M@
                                               g$y$9669$XW@M@
                                               g$r$9657$XW@M@
                                               g$mr$9658$XW@M@))))))
                                      (g$gen-lexical$7531$XW@M@ 'tmp))))))
                              g$pvars$9665$XW@M@
                              g$p$9664$XW@M@)))))))
                   (g$gen-syntax-case$9626$XW@M@
                     (case-lambda
                       ((g$x$9637$XW@M@
                          g$keys$9638$XW@M@
                          g$clauses$9639$XW@M@
                          g$r$9640$XW@M@
                          g$mr$9641$XW@M@)
                        (if (null? g$clauses$9639$XW@M@)
                          (list '(primitive syntax-error) g$x$9637$XW@M@)
                          ((case-lambda
                             ((g$t$9642$XW@M@)
                              ((case-lambda
                                 ((g$ls/false$9643$XW@M@)
                                  (if g$ls/false$9643$XW@M@
                                    (apply
                                      (case-lambda
                                        ((g$pat$9644$XW@M@ g$expr$9645$XW@M@)
                                         (if (if (g$id?$7587$XW@M@
                                                   g$pat$9644$XW@M@)
                                               (if (not (g$bound-id-member?$7594$XW@M@
                                                          g$pat$9644$XW@M@
                                                          g$keys$9638$XW@M@))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7866$XW@M@
                                                          g$pat$9644$XW@M@)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7591$XW@M@
                                                 g$pat$9644$XW@M@
                                                 (g$scheme-stx$7808$XW@M@ '_))
                                             (g$chi-expr$7883$XW@M@
                                               g$expr$9645$XW@M@
                                               g$r$9640$XW@M@
                                               g$mr$9641$XW@M@)
                                             ((case-lambda
                                                ((g$lab$9646$XW@M@
                                                   g$lex$9647$XW@M@)
                                                 ((case-lambda
                                                    ((g$body$9648$XW@M@)
                                                     (list
                                                       (g$build-lambda$7518$XW@M@
                                                         '#f
                                                         (list g$lex$9647$XW@M@)
                                                         g$body$9648$XW@M@)
                                                       g$x$9637$XW@M@)))
                                                  (g$chi-expr$7883$XW@M@
                                                    (g$add-subst$7577$XW@M@
                                                      (g$make-full-rib$7555$XW@M@
                                                        (list g$pat$9644$XW@M@)
                                                        (list g$lab$9646$XW@M@))
                                                      g$expr$9645$XW@M@)
                                                    (cons
                                                      (cons
                                                        g$lab$9646$XW@M@
                                                        (g$make-binding$7603$XW@M@
                                                          'syntax
                                                          (cons
                                                            g$lex$9647$XW@M@
                                                            '0)))
                                                      g$r$9640$XW@M@)
                                                    g$mr$9641$XW@M@))))
                                              (g$gen-label$7533$XW@M@
                                                g$pat$9644$XW@M@)
                                              (g$gen-lexical$7531$XW@M@
                                                g$pat$9644$XW@M@)))
                                           (g$gen-clause$9625$XW@M@
                                             g$x$9637$XW@M@
                                             g$keys$9638$XW@M@
                                             (cdr g$clauses$9639$XW@M@)
                                             g$r$9640$XW@M@
                                             g$mr$9641$XW@M@
                                             g$pat$9644$XW@M@
                                             '#t
                                             g$expr$9645$XW@M@))))
                                      g$ls/false$9643$XW@M@)
                                    ((case-lambda
                                       ((g$t$9649$XW@M@)
                                        ((case-lambda
                                           ((g$ls/false$9650$XW@M@)
                                            (if g$ls/false$9650$XW@M@
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9651$XW@M@
                                                     g$fender$9652$XW@M@
                                                     g$expr$9653$XW@M@)
                                                   (g$gen-clause$9625$XW@M@
                                                     g$x$9637$XW@M@
                                                     g$keys$9638$XW@M@
                                                     (cdr g$clauses$9639$XW@M@)
                                                     g$r$9640$XW@M@
                                                     g$mr$9641$XW@M@
                                                     g$pat$9651$XW@M@
                                                     g$fender$9652$XW@M@
                                                     g$expr$9653$XW@M@)))
                                                g$ls/false$9650$XW@M@)
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"invalid syntax"
                                                g$t$9649$XW@M@))))
                                         (g$syntax-dispatch$7865$XW@M@
                                           g$t$9649$XW@M@
                                           '(any any any)))))
                                     g$t$9642$XW@M@))))
                               (g$syntax-dispatch$7865$XW@M@
                                 g$t$9642$XW@M@
                                 '(any any)))))
                           (car g$clauses$9639$XW@M@)))))))
           (case-lambda
             ((g$e$9627$XW@M@ g$r$9628$XW@M@ g$mr$9629$XW@M@)
              ((case-lambda
                 ((g$t$9630$XW@M@)
                  ((case-lambda
                     ((g$ls/false$9631$XW@M@)
                      (if g$ls/false$9631$XW@M@
                        (apply
                          (case-lambda
                            ((g$expr$9632$XW@M@
                               g$keys$9633$XW@M@
                               g$clauses$9634$XW@M@)
                             (begin
                               (g$verify-literals$7868$XW@M@
                                 g$keys$9633$XW@M@
                                 g$e$9627$XW@M@)
                               ((case-lambda
                                  ((g$x$9635$XW@M@)
                                   ((case-lambda
                                      ((g$body$9636$XW@M@)
                                       (list
                                         (g$build-lambda$7518$XW@M@
                                           '#f
                                           (list g$x$9635$XW@M@)
                                           g$body$9636$XW@M@)
                                         (g$chi-expr$7883$XW@M@
                                           g$expr$9632$XW@M@
                                           g$r$9628$XW@M@
                                           g$mr$9629$XW@M@))))
                                    (g$gen-syntax-case$9626$XW@M@
                                      g$x$9635$XW@M@
                                      g$keys$9633$XW@M@
                                      g$clauses$9634$XW@M@
                                      g$r$9628$XW@M@
                                      g$mr$9629$XW@M@))))
                                (g$gen-lexical$7531$XW@M@ 'tmp)))))
                          g$ls/false$9631$XW@M@)
                        (g$syntax-violation$7971$XW@M@
                          '#f
                          '"invalid syntax"
                          g$t$9630$XW@M@))))
                   (g$syntax-dispatch$7865$XW@M@
                     g$t$9630$XW@M@
                     '(_ any each-any . each-any)))))
               g$e$9627$XW@M@))))))))
   (g$ellipsis-map$7870$XW@M@
     g$ellipsis-map$11320$XW@M@
     (case-lambda
       ((g$proc$9693$XW@M@ g$ls$9694$XW@M@ . g$ls*$9695$XW@M@)
        (letrec* ((g$who$9696$XW@M@ '...))
          (begin
            (if (list? g$ls$9694$XW@M@)
              (void)
              (assertion-violation
                g$who$9696$XW@M@
                '"not a list"
                g$ls$9694$XW@M@))
            (if (null? g$ls*$9695$XW@M@)
              (void)
              ((case-lambda
                 ((g$n$9697$XW@M@)
                  (for-each
                    (case-lambda
                      ((g$x$9698$XW@M@)
                       (begin
                         (if (list? g$x$9698$XW@M@)
                           (void)
                           (assertion-violation
                             g$who$9696$XW@M@
                             '"not a list"
                             g$x$9698$XW@M@))
                         (if (= (length g$x$9698$XW@M@) g$n$9697$XW@M@)
                           (void)
                           (assertion-violation
                             g$who$9696$XW@M@
                             '"length mismatch"
                             g$ls$9694$XW@M@
                             g$x$9698$XW@M@)))))
                    g$ls*$9695$XW@M@)))
               (length g$ls$9694$XW@M@)))
            (apply map g$proc$9693$XW@M@ g$ls$9694$XW@M@ g$ls*$9695$XW@M@))))))
   (g$syntax-transformer$7871$XW@M@
     g$syntax-transformer$11321$XW@M@
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9699$XW@M@
                     (case-lambda
                       ((g$src$9759$XW@M@
                          g$e$9760$XW@M@
                          g$r$9761$XW@M@
                          g$maps$9762$XW@M@
                          g$ellipsis?$9763$XW@M@
                          g$vec?$9764$XW@M@)
                        ((case-lambda
                           ((g$t$9765$XW@M@)
                            ((case-lambda
                               ((g$ls/false$9766$XW@M@)
                                (if (if g$ls/false$9766$XW@M@
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9767$XW@M@)
                                             (g$ellipsis?$9763$XW@M@
                                               g$dots$9767$XW@M@)))
                                          g$ls/false$9766$XW@M@))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9768$XW@M@)
                                       (g$syntax-violation$7971$XW@M@
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9759$XW@M@)))
                                    g$ls/false$9766$XW@M@)
                                  ((case-lambda
                                     ((g$t$9769$XW@M@)
                                      ((case-lambda
                                         ((g$ls/false$9770$XW@M@)
                                          (if (if g$ls/false$9770$XW@M@
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9771$XW@M@)
                                                       (g$id?$7587$XW@M@
                                                         g$id$9771$XW@M@)))
                                                    g$ls/false$9770$XW@M@))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9772$XW@M@)
                                                 ((case-lambda
                                                    ((g$label$9773$XW@M@)
                                                     ((case-lambda
                                                        ((g$b$9774$XW@M@)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7604$XW@M@
                                                                        g$b$9774$XW@M@)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9777$XW@M@)
                                                                        (g$gen-ref$9700$XW@M@
                                                                          g$src$9759$XW@M@
                                                                          (car g$var.lev$9777$XW@M@)
                                                                          (cdr g$var.lev$9777$XW@M@)
                                                                          g$maps$9762$XW@M@)))
                                                                     (g$binding-value$7605$XW@M@
                                                                       g$b$9774$XW@M@))))
                                                                 (case-lambda
                                                                   ((g$var$9778$XW@M@
                                                                      g$maps$9779$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$maps$9780$XW@M@
                                                                          g$var$9781$XW@M@)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9781$XW@M@)
                                                                          g$maps$9780$XW@M@)))
                                                                     g$maps$9779$XW@M@
                                                                     g$var$9778$XW@M@))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9760$XW@M@)
                                                                 g$maps$9762$XW@M@)))))))
                                                      (g$label->binding$7602$XW@M@
                                                        g$label$9773$XW@M@
                                                        g$r$9761$XW@M@))))
                                                  (g$id->label$7600$XW@M@
                                                    g$e$9760$XW@M@))))
                                              g$ls/false$9770$XW@M@)
                                            ((case-lambda
                                               ((g$t$9782$XW@M@)
                                                ((case-lambda
                                                   ((g$ls/false$9783$XW@M@)
                                                    (if (if g$ls/false$9783$XW@M@
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9784$XW@M@
                                                                   g$e$9785$XW@M@)
                                                                 (g$ellipsis?$9763$XW@M@
                                                                   g$dots$9784$XW@M@)))
                                                              g$ls/false$9783$XW@M@))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9786$XW@M@
                                                             g$e$9787$XW@M@)
                                                           (if g$vec?$9764$XW@M@
                                                             (g$syntax-violation$7971$XW@M@
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9759$XW@M@)
                                                             (g$gen-syntax$9699$XW@M@
                                                               g$src$9759$XW@M@
                                                               g$e$9787$XW@M@
                                                               g$r$9761$XW@M@
                                                               g$maps$9762$XW@M@
                                                               (case-lambda
                                                                 ((g$x$9788$XW@M@)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9783$XW@M@)
                                                      ((case-lambda
                                                         ((g$t$9789$XW@M@)
                                                          ((case-lambda
                                                             ((g$ls/false$9790$XW@M@)
                                                              (if (if g$ls/false$9790$XW@M@
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9791$XW@M@
                                                                             g$dots$9792$XW@M@
                                                                             g$y$9793$XW@M@)
                                                                           (g$ellipsis?$9763$XW@M@
                                                                             g$dots$9792$XW@M@)))
                                                                        g$ls/false$9790$XW@M@))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9794$XW@M@
                                                                       g$dots$9795$XW@M@
                                                                       g$y$9796$XW@M@)
                                                                     ((letrec ((g$f$9797$XW@M@
                                                                                 (case-lambda
                                                                                   ((g$y$9798$XW@M@
                                                                                      g$k$9799$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$t$9800$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9801$XW@M@)
                                                                                            (if g$ls/false$9801$XW@M@
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9799$XW@M@
                                                                                                     g$maps$9762$XW@M@)))
                                                                                                g$ls/false$9801$XW@M@)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9802$XW@M@)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9803$XW@M@)
                                                                                                      (if (if g$ls/false$9803$XW@M@
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9804$XW@M@
                                                                                                                     g$y$9805$XW@M@)
                                                                                                                   (g$ellipsis?$9763$XW@M@
                                                                                                                     g$dots$9804$XW@M@)))
                                                                                                                g$ls/false$9803$XW@M@))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9806$XW@M@
                                                                                                               g$y$9807$XW@M@)
                                                                                                             (g$f$9797$XW@M@
                                                                                                               g$y$9807$XW@M@
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9808$XW@M@)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9799$XW@M@
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9808$XW@M@))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9811$XW@M@
                                                                                                                         g$maps$9812$XW@M@)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9813$XW@M@
                                                                                                                             g$x$9814$XW@M@)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9813$XW@M@))
                                                                                                                             (g$syntax-violation$7971$XW@M@
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9759$XW@M@)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9702$XW@M@
                                                                                                                                 g$x$9814$XW@M@
                                                                                                                                 (car g$maps$9813$XW@M@))
                                                                                                                               (cdr g$maps$9813$XW@M@)))))
                                                                                                                        g$maps$9812$XW@M@
                                                                                                                        g$x$9811$XW@M@)))))))))
                                                                                                          g$ls/false$9803$XW@M@)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9815$XW@M@)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9816$XW@M@)
                                                                                                                (if g$ls/false$9816$XW@M@
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9699$XW@M@
                                                                                                                              g$src$9759$XW@M@
                                                                                                                              g$y$9798$XW@M@
                                                                                                                              g$r$9761$XW@M@
                                                                                                                              g$maps$9762$XW@M@
                                                                                                                              g$ellipsis?$9763$XW@M@
                                                                                                                              g$vec?$9764$XW@M@)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9819$XW@M@
                                                                                                                              g$maps$9820$XW@M@)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9821$XW@M@
                                                                                                                                  g$y$9822$XW@M@)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9799$XW@M@
                                                                                                                                       g$maps$9821$XW@M@)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9825$XW@M@
                                                                                                                                       g$maps$9826$XW@M@)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9827$XW@M@
                                                                                                                                           g$x$9828$XW@M@)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9701$XW@M@
                                                                                                                                             g$x$9828$XW@M@
                                                                                                                                             g$y$9822$XW@M@)
                                                                                                                                           g$maps$9827$XW@M@)))
                                                                                                                                      g$maps$9826$XW@M@
                                                                                                                                      g$x$9825$XW@M@))))))
                                                                                                                             g$maps$9820$XW@M@
                                                                                                                             g$y$9819$XW@M@))))))
                                                                                                                    g$ls/false$9816$XW@M@)
                                                                                                                  (g$syntax-violation$7971$XW@M@
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9815$XW@M@))))
                                                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                                                               g$t$9815$XW@M@
                                                                                                               '_))))
                                                                                                         g$t$9802$XW@M@))))
                                                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                                                     g$t$9802$XW@M@
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9800$XW@M@))))
                                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                                           g$t$9800$XW@M@
                                                                                           '()))))
                                                                                     g$y$9798$XW@M@)))))
                                                                        g$f$9797$XW@M@)
                                                                      g$y$9796$XW@M@
                                                                      (case-lambda
                                                                        ((g$maps$9829$XW@M@)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9699$XW@M@
                                                                                g$src$9759$XW@M@
                                                                                g$x$9794$XW@M@
                                                                                g$r$9761$XW@M@
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9829$XW@M@)
                                                                                g$ellipsis?$9763$XW@M@
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9832$XW@M@
                                                                                g$maps$9833$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$maps$9834$XW@M@
                                                                                    g$x$9835$XW@M@)
                                                                                  (if (null?
                                                                                        (car g$maps$9834$XW@M@))
                                                                                    (g$syntax-violation$7971$XW@M@
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9759$XW@M@)
                                                                                    (values
                                                                                      (g$gen-map$9703$XW@M@
                                                                                        g$x$9835$XW@M@
                                                                                        (car g$maps$9834$XW@M@))
                                                                                      (cdr g$maps$9834$XW@M@)))))
                                                                               g$maps$9833$XW@M@
                                                                               g$x$9832$XW@M@)))))))))
                                                                  g$ls/false$9790$XW@M@)
                                                                ((case-lambda
                                                                   ((g$t$9836$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9837$XW@M@)
                                                                        (if g$ls/false$9837$XW@M@
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9838$XW@M@
                                                                                 g$y$9839$XW@M@)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9699$XW@M@
                                                                                      g$src$9759$XW@M@
                                                                                      g$x$9838$XW@M@
                                                                                      g$r$9761$XW@M@
                                                                                      g$maps$9762$XW@M@
                                                                                      g$ellipsis?$9763$XW@M@
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9842$XW@M@
                                                                                      g$maps$9843$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9844$XW@M@
                                                                                          g$xnew$9845$XW@M@)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9699$XW@M@
                                                                                               g$src$9759$XW@M@
                                                                                               g$y$9839$XW@M@
                                                                                               g$r$9761$XW@M@
                                                                                               g$maps$9844$XW@M@
                                                                                               g$ellipsis?$9763$XW@M@
                                                                                               g$vec?$9764$XW@M@)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9848$XW@M@
                                                                                               g$maps$9849$XW@M@)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9850$XW@M@
                                                                                                   g$ynew$9851$XW@M@)
                                                                                                 (values
                                                                                                   (g$gen-cons$9704$XW@M@
                                                                                                     g$e$9760$XW@M@
                                                                                                     g$x$9838$XW@M@
                                                                                                     g$y$9839$XW@M@
                                                                                                     g$xnew$9845$XW@M@
                                                                                                     g$ynew$9851$XW@M@)
                                                                                                   g$maps$9850$XW@M@)))
                                                                                              g$maps$9849$XW@M@
                                                                                              g$ynew$9848$XW@M@))))))
                                                                                     g$maps$9843$XW@M@
                                                                                     g$xnew$9842$XW@M@))))))
                                                                            g$ls/false$9837$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$t$9852$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9853$XW@M@)
                                                                                  (if g$ls/false$9853$XW@M@
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9854$XW@M@)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9699$XW@M@
                                                                                                g$src$9759$XW@M@
                                                                                                g$ls$9854$XW@M@
                                                                                                g$r$9761$XW@M@
                                                                                                g$maps$9762$XW@M@
                                                                                                g$ellipsis?$9763$XW@M@
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9857$XW@M@
                                                                                                g$maps$9858$XW@M@)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9859$XW@M@
                                                                                                    g$lsnew$9860$XW@M@)
                                                                                                  (values
                                                                                                    (g$gen-vector$9705$XW@M@
                                                                                                      g$e$9760$XW@M@
                                                                                                      g$ls$9854$XW@M@
                                                                                                      g$lsnew$9860$XW@M@)
                                                                                                    g$maps$9859$XW@M@)))
                                                                                               g$maps$9858$XW@M@
                                                                                               g$lsnew$9857$XW@M@))))))
                                                                                      g$ls/false$9853$XW@M@)
                                                                                    ((case-lambda
                                                                                       ((g$t$9861$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9862$XW@M@)
                                                                                            (if g$ls/false$9862$XW@M@
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9760$XW@M@)
                                                                                                     g$maps$9762$XW@M@)))
                                                                                                g$ls/false$9862$XW@M@)
                                                                                              (g$syntax-violation$7971$XW@M@
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9861$XW@M@))))
                                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                                           g$t$9861$XW@M@
                                                                                           '_))))
                                                                                     g$t$9852$XW@M@))))
                                                                               (g$syntax-dispatch$7865$XW@M@
                                                                                 g$t$9852$XW@M@
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9836$XW@M@))))
                                                                     (g$syntax-dispatch$7865$XW@M@
                                                                       g$t$9836$XW@M@
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9789$XW@M@))))
                                                           (g$syntax-dispatch$7865$XW@M@
                                                             g$t$9789$XW@M@
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9782$XW@M@))))
                                                 (g$syntax-dispatch$7865$XW@M@
                                                   g$t$9782$XW@M@
                                                   '(any any)))))
                                             g$t$9769$XW@M@))))
                                       (g$syntax-dispatch$7865$XW@M@
                                         g$t$9769$XW@M@
                                         'any))))
                                   g$t$9765$XW@M@))))
                             (g$syntax-dispatch$7865$XW@M@
                               g$t$9765$XW@M@
                               'any))))
                         g$e$9760$XW@M@))))
                   (g$gen-ref$9700$XW@M@
                     (case-lambda
                       ((g$src$9746$XW@M@
                          g$var$9747$XW@M@
                          g$level$9748$XW@M@
                          g$maps$9749$XW@M@)
                        (if (= g$level$9748$XW@M@ '0)
                          (values g$var$9747$XW@M@ g$maps$9749$XW@M@)
                          (if (null? g$maps$9749$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9746$XW@M@)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9700$XW@M@
                                   g$src$9746$XW@M@
                                   g$var$9747$XW@M@
                                   (- g$level$9748$XW@M@ '1)
                                   (cdr g$maps$9749$XW@M@))))
                              (case-lambda
                                ((g$outer-var$9752$XW@M@
                                   g$outer-maps$9753$XW@M@)
                                 ((case-lambda
                                    ((g$outer-maps$9754$XW@M@
                                       g$outer-var$9755$XW@M@)
                                     ((case-lambda
                                        ((g$t$9756$XW@M@)
                                         (if g$t$9756$XW@M@
                                           ((case-lambda
                                              ((g$b$9757$XW@M@)
                                               (values
                                                 (cdr g$b$9757$XW@M@)
                                                 g$maps$9749$XW@M@)))
                                            g$t$9756$XW@M@)
                                           ((case-lambda
                                              ((g$inner-var$9758$XW@M@)
                                               (values
                                                 g$inner-var$9758$XW@M@
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9755$XW@M@
                                                       g$inner-var$9758$XW@M@)
                                                     (car g$maps$9749$XW@M@))
                                                   g$outer-maps$9754$XW@M@))))
                                            (g$gen-lexical$7531$XW@M@ 'tmp)))))
                                      (assq
                                        g$outer-var$9755$XW@M@
                                        (car g$maps$9749$XW@M@)))))
                                  g$outer-maps$9753$XW@M@
                                  g$outer-var$9752$XW@M@)))))))))
                   (g$gen-append$9701$XW@M@
                     (case-lambda
                       ((g$x$9744$XW@M@ g$y$9745$XW@M@)
                        (if (equal? g$y$9745$XW@M@ ''())
                          g$x$9744$XW@M@
                          (list 'append g$x$9744$XW@M@ g$y$9745$XW@M@)))))
                   (g$gen-mappend$9702$XW@M@
                     (case-lambda
                       ((g$e$9742$XW@M@ g$map-env$9743$XW@M@)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9703$XW@M@
                            g$e$9742$XW@M@
                            g$map-env$9743$XW@M@)))))
                   (g$gen-map$9703$XW@M@
                     (case-lambda
                       ((g$e$9733$XW@M@ g$map-env$9734$XW@M@)
                        ((case-lambda
                           ((g$formals$9735$XW@M@ g$actuals$9736$XW@M@)
                            (if (eq? (car g$e$9733$XW@M@) 'ref)
                              (car g$actuals$9736$XW@M@)
                              (if (g$for-all$5871$XW@M@
                                    (case-lambda
                                      ((g$x$9737$XW@M@)
                                       (if (eq? (car g$x$9737$XW@M@) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5402$XW@M@ g$x$9737$XW@M@)
                                             g$formals$9735$XW@M@))
                                         '#f)))
                                    (cdr g$e$9733$XW@M@))
                                ((case-lambda
                                   ((g$args$9738$XW@M@)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9733$XW@M@))
                                        g$args$9738$XW@M@))))
                                 (map ((case-lambda
                                         ((g$r$9739$XW@M@)
                                          (case-lambda
                                            ((g$x$9740$XW@M@)
                                             (cdr (assq
                                                    (g$cadr$5402$XW@M@
                                                      g$x$9740$XW@M@)
                                                    g$r$9739$XW@M@))))))
                                       (map cons
                                            g$formals$9735$XW@M@
                                            g$actuals$9736$XW@M@))
                                      (cdr g$e$9733$XW@M@)))
                                (g$cons*$5873$XW@M@
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9735$XW@M@
                                    g$e$9733$XW@M@)
                                  g$actuals$9736$XW@M@)))))
                         (map cdr g$map-env$9734$XW@M@)
                         (map (case-lambda
                                ((g$x$9741$XW@M@)
                                 (list 'ref (car g$x$9741$XW@M@))))
                              g$map-env$9734$XW@M@)))))
                   (g$gen-cons$9704$XW@M@
                     (case-lambda
                       ((g$e$9725$XW@M@
                          g$x$9726$XW@M@
                          g$y$9727$XW@M@
                          g$xnew$9728$XW@M@
                          g$ynew$9729$XW@M@)
                        ((case-lambda
                           ((g$t$9730$XW@M@)
                            (if (eqv? g$t$9730$XW@M@ 'quote)
                              (if (eq? (car g$xnew$9728$XW@M@) 'quote)
                                ((case-lambda
                                   ((g$xnew$9731$XW@M@ g$ynew$9732$XW@M@)
                                    (if (if (eq? g$xnew$9731$XW@M@
                                                 g$x$9726$XW@M@)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9732$XW@M@
                                                 g$y$9727$XW@M@))
                                          '#f)
                                      (list 'quote g$e$9725$XW@M@)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9731$XW@M@
                                          g$ynew$9732$XW@M@)))))
                                 (g$cadr$5402$XW@M@ g$xnew$9728$XW@M@)
                                 (g$cadr$5402$XW@M@ g$ynew$9729$XW@M@))
                                (if (null?
                                      (g$cadr$5402$XW@M@ g$ynew$9729$XW@M@))
                                  (list 'list g$xnew$9728$XW@M@)
                                  (list
                                    'cons
                                    g$xnew$9728$XW@M@
                                    g$ynew$9729$XW@M@)))
                              (if (eqv? g$t$9730$XW@M@ 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9728$XW@M@
                                    (cdr g$ynew$9729$XW@M@)))
                                (list
                                  'cons
                                  g$xnew$9728$XW@M@
                                  g$ynew$9729$XW@M@)))))
                         (car g$ynew$9729$XW@M@)))))
                   (g$gen-vector$9705$XW@M@
                     (case-lambda
                       ((g$e$9722$XW@M@ g$ls$9723$XW@M@ g$lsnew$9724$XW@M@)
                        (if (eq? (car g$lsnew$9724$XW@M@) 'quote)
                          (if (eq? (g$cadr$5402$XW@M@ g$lsnew$9724$XW@M@)
                                   g$ls$9723$XW@M@)
                            (list 'quote g$e$9722$XW@M@)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5402$XW@M@ g$lsnew$9724$XW@M@))))
                          (if (eq? (car g$lsnew$9724$XW@M@) 'list)
                            (cons 'vector (cdr g$lsnew$9724$XW@M@))
                            (list 'list->vector g$lsnew$9724$XW@M@))))))
                   (g$regen$9706$XW@M@
                     (case-lambda
                       ((g$x$9719$XW@M@)
                        ((case-lambda
                           ((g$t$9720$XW@M@)
                            (if (eqv? g$t$9720$XW@M@ 'ref)
                              (g$cadr$5402$XW@M@ g$x$9719$XW@M@)
                              (if (eqv? g$t$9720$XW@M@ 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$5402$XW@M@ g$x$9719$XW@M@))
                                (if (eqv? g$t$9720$XW@M@ 'quote)
                                  (list
                                    'quote
                                    (g$cadr$5402$XW@M@ g$x$9719$XW@M@))
                                  (if (eqv? g$t$9720$XW@M@ 'lambda)
                                    (g$build-lambda$7518$XW@M@
                                      '#f
                                      (g$cadr$5402$XW@M@ g$x$9719$XW@M@)
                                      (g$regen$9706$XW@M@
                                        (g$caddr$5408$XW@M@ g$x$9719$XW@M@)))
                                    (if (eqv? g$t$9720$XW@M@ 'map)
                                      ((case-lambda
                                         ((g$ls$9721$XW@M@)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9721$XW@M@)))
                                       (map g$regen$9706$XW@M@
                                            (cdr g$x$9719$XW@M@)))
                                      (cons
                                        (list 'primitive (car g$x$9719$XW@M@))
                                        (map g$regen$9706$XW@M@
                                             (cdr g$x$9719$XW@M@))))))))))
                         (car g$x$9719$XW@M@))))))
           (case-lambda
             ((g$e$9707$XW@M@ g$r$9708$XW@M@ g$mr$9709$XW@M@)
              ((case-lambda
                 ((g$t$9710$XW@M@)
                  ((case-lambda
                     ((g$ls/false$9711$XW@M@)
                      (if g$ls/false$9711$XW@M@
                        (apply
                          (case-lambda
                            ((g$x$9712$XW@M@)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9699$XW@M@
                                    g$e$9707$XW@M@
                                    g$x$9712$XW@M@
                                    g$r$9708$XW@M@
                                    '()
                                    g$ellipsis?$7866$XW@M@
                                    '#f)))
                               (case-lambda
                                 ((g$e$9715$XW@M@ g$maps$9716$XW@M@)
                                  ((case-lambda
                                     ((g$maps$9717$XW@M@ g$e$9718$XW@M@)
                                      (g$regen$9706$XW@M@ g$e$9718$XW@M@)))
                                   g$maps$9716$XW@M@
                                   g$e$9715$XW@M@))))))
                          g$ls/false$9711$XW@M@)
                        (g$syntax-violation$7971$XW@M@
                          '#f
                          '"invalid syntax"
                          g$t$9710$XW@M@))))
                   (g$syntax-dispatch$7865$XW@M@ g$t$9710$XW@M@ '(_ any)))))
               g$e$9707$XW@M@))))))))
   (g$core-macro-transformer$7872$XW@M@
     g$core-macro-transformer$11322$XW@M@
     (case-lambda
       ((g$name$9863$XW@M@)
        ((case-lambda
           ((g$t$9864$XW@M@)
            (if (eqv? g$t$9864$XW@M@ 'quote)
              g$quote-transformer$7825$XW@M@
              (if (eqv? g$t$9864$XW@M@ 'lambda)
                g$lambda-transformer$7827$XW@M@
                (if (eqv? g$t$9864$XW@M@ 'case-lambda)
                  g$case-lambda-transformer$7826$XW@M@
                  (if (eqv? g$t$9864$XW@M@ 'letrec)
                    g$letrec-transformer$7815$XW@M@
                    (if (eqv? g$t$9864$XW@M@ 'letrec*)
                      g$letrec*-transformer$7816$XW@M@
                      (if (eqv? g$t$9864$XW@M@ 'case)
                        g$case-transformer$7824$XW@M@
                        (if (eqv? g$t$9864$XW@M@ 'if)
                          g$if-transformer$7823$XW@M@
                          (if (eqv? g$t$9864$XW@M@ 'when)
                            g$when-transformer$7821$XW@M@
                            (if (eqv? g$t$9864$XW@M@ 'unless)
                              g$unless-transformer$7822$XW@M@
                              (if (eqv? g$t$9864$XW@M@ 'parameterize)
                                g$parameterize-transformer$7862$XW@M@
                                (if (eqv? g$t$9864$XW@M@ 'foreign-call)
                                  g$foreign-call-transformer$7863$XW@M@
                                  (if (eqv? g$t$9864$XW@M@ 'syntax-case)
                                    g$syntax-case-transformer$7869$XW@M@
                                    (if (eqv? g$t$9864$XW@M@ 'syntax)
                                      g$syntax-transformer$7871$XW@M@
                                      (if (eqv? g$t$9864$XW@M@ 'type-descriptor)
                                        g$type-descriptor-transformer$7818$XW@M@
                                        (if (eqv?
                                              g$t$9864$XW@M@
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7819$XW@M@
                                          (if (eqv?
                                                g$t$9864$XW@M@
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7820$XW@M@
                                            (if (eqv?
                                                  g$t$9864$XW@M@
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7817$XW@M@
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9863$XW@M@))))))))))))))))))))
         g$name$9863$XW@M@))))
   (g$file-options-macro$7873$XW@M@
     g$file-options-macro$11323$XW@M@
     (case-lambda
       ((g$x$9865$XW@M@)
        ((case-lambda
           ((g$t$9866$XW@M@)
            ((case-lambda
               ((g$ls/false$9867$XW@M@)
                (if (if g$ls/false$9867$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9868$XW@M@)
                             (if (g$for-all$5871$XW@M@
                                   g$id?$7587$XW@M@
                                   g$opt*$9868$XW@M@)
                               (begin
                                 '#f
                                 (g$file-options-spec$6856$XW@M@
                                   (map g$id->sym$7588$XW@M@
                                        g$opt*$9868$XW@M@)))
                               '#f)))
                          g$ls/false$9867$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9869$XW@M@)
                       (g$bless$7828$XW@M@
                         (list
                           'quote
                           (g$file-options-spec$6856$XW@M@
                             (map g$id->sym$7588$XW@M@ g$opt*$9869$XW@M@))))))
                    g$ls/false$9867$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$9866$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9866$XW@M@ '(_ . each-any)))))
         g$x$9865$XW@M@))))
   (g$symbol-macro$7874$XW@M@
     g$symbol-macro$11324$XW@M@
     (case-lambda
       ((g$x$9870$XW@M@ g$set$9871$XW@M@)
        ((case-lambda
           ((g$t$9872$XW@M@)
            ((case-lambda
               ((g$ls/false$9873$XW@M@)
                (if (if g$ls/false$9873$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9874$XW@M@)
                             (if (g$id?$7587$XW@M@ g$name$9874$XW@M@)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7588$XW@M@ g$name$9874$XW@M@)
                                   g$set$9871$XW@M@))
                               '#f)))
                          g$ls/false$9873$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9875$XW@M@)
                       (g$bless$7828$XW@M@ (list 'quote g$name$9875$XW@M@))))
                    g$ls/false$9873$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$9872$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9872$XW@M@ '(_ any)))))
         g$x$9870$XW@M@))))
   (g$macro-transformer$7875$XW@M@
     g$macro-transformer$11325$XW@M@
     (case-lambda
       ((g$x$9876$XW@M@)
        (if (procedure? g$x$9876$XW@M@)
          g$x$9876$XW@M@
          (if (symbol? g$x$9876$XW@M@)
            ((case-lambda
               ((g$t$9877$XW@M@)
                (if (eqv? g$t$9877$XW@M@ 'define-record-type)
                  g$define-record-type-macro$7859$XW@M@
                  (if (eqv? g$t$9877$XW@M@ 'define-struct)
                    g$define-struct-macro$7858$XW@M@
                    (if (eqv? g$t$9877$XW@M@ 'include)
                      g$include-macro$7853$XW@M@
                      (if (eqv? g$t$9877$XW@M@ 'cond)
                        g$cond-macro$7851$XW@M@
                        (if (eqv? g$t$9877$XW@M@ 'let)
                          g$let-macro$7831$XW@M@
                          (if (eqv? g$t$9877$XW@M@ 'do)
                            g$do-macro$7847$XW@M@
                            (if (eqv? g$t$9877$XW@M@ 'or)
                              g$or-macro$7849$XW@M@
                              (if (eqv? g$t$9877$XW@M@ 'and)
                                g$and-macro$7850$XW@M@
                                (if (eqv? g$t$9877$XW@M@ 'let*)
                                  g$let*-macro$7848$XW@M@
                                  (if (eqv? g$t$9877$XW@M@ 'let-values)
                                    g$let-values-macro$7832$XW@M@
                                    (if (eqv? g$t$9877$XW@M@ 'let*-values)
                                      g$let*-values-macro$7833$XW@M@
                                      (if (eqv? g$t$9877$XW@M@ 'syntax-rules)
                                        g$syntax-rules-macro$7855$XW@M@
                                        (if (eqv? g$t$9877$XW@M@ 'quasiquote)
                                          g$quasiquote-macro$7856$XW@M@
                                          (if (eqv? g$t$9877$XW@M@ 'quasisyntax)
                                            g$quasisyntax-macro$7857$XW@M@
                                            (if (eqv?
                                                  g$t$9877$XW@M@
                                                  'with-syntax)
                                              g$with-syntax-macro$7829$XW@M@
                                              (if (eqv?
                                                    g$t$9877$XW@M@
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7846$XW@M@
                                                (if (eqv? g$t$9877$XW@M@ 'time)
                                                  g$time-macro$7842$XW@M@
                                                  (if (eqv?
                                                        g$t$9877$XW@M@
                                                        'delay)
                                                    g$delay-macro$7843$XW@M@
                                                    (if (eqv?
                                                          g$t$9877$XW@M@
                                                          'assert)
                                                      g$assert-macro$7844$XW@M@
                                                      (if (eqv?
                                                            g$t$9877$XW@M@
                                                            'endianness)
                                                        g$endianness-macro$7845$XW@M@
                                                        (if (eqv?
                                                              g$t$9877$XW@M@
                                                              'guard)
                                                          g$guard-macro$7840$XW@M@
                                                          (if (eqv?
                                                                g$t$9877$XW@M@
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7841$XW@M@
                                                            (if (eqv?
                                                                  g$t$9877$XW@M@
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7834$XW@M@
                                                              (if (eqv?
                                                                    g$t$9877$XW@M@
                                                                    'trace-define)
                                                                g$trace-define-macro$7835$XW@M@
                                                                (if (eqv?
                                                                      g$t$9877$XW@M@
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7836$XW@M@
                                                                  (if (eqv?
                                                                        g$t$9877$XW@M@
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7838$XW@M@
                                                                    (if (eqv?
                                                                          g$t$9877$XW@M@
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7839$XW@M@
                                                                      (if (eqv?
                                                                            g$t$9877$XW@M@
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7860$XW@M@
                                                                        (if (eqv?
                                                                              g$t$9877$XW@M@
                                                                              'include-into)
                                                                          g$include-into-macro$7854$XW@M@
                                                                          (if (eqv?
                                                                                g$t$9877$XW@M@
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9880$XW@M@)
                                                                               (g$symbol-macro$7874$XW@M@
                                                                                 g$x$9880$XW@M@
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9877$XW@M@
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9879$XW@M@)
                                                                                 (g$symbol-macro$7874$XW@M@
                                                                                   g$x$9879$XW@M@
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9877$XW@M@
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9878$XW@M@)
                                                                                   (g$symbol-macro$7874$XW@M@
                                                                                     g$x$9878$XW@M@
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9877$XW@M@
                                                                                      'file-options)
                                                                                  g$file-options-macro$7873$XW@M@
                                                                                  (if (memv
                                                                                        g$t$9877$XW@M@
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7861$XW@M@
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9876$XW@M@)))))))))))))))))))))))))))))))))))))
             g$x$9876$XW@M@)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9876$XW@M@))))))
   (g$local-macro-transformer$7876$XW@M@
     g$local-macro-transformer$11326$XW@M@
     (case-lambda ((g$x$9881$XW@M@) (car g$x$9881$XW@M@))))
   (g$do-macro-call$7877$XW@M@
     g$do-macro-call$11327$XW@M@
     (case-lambda
       ((g$transformer$9882$XW@M@ g$expr$9883$XW@M@)
        ((case-lambda
           ((g$out$9884$XW@M@)
            (begin
              ((letrec ((g$f$9885$XW@M@
                          (case-lambda
                            ((g$x$9886$XW@M@)
                             (if (g$stx?$7559$XW@M@ g$x$9886$XW@M@)
                               (void)
                               (if (pair? g$x$9886$XW@M@)
                                 (begin
                                   (g$f$9885$XW@M@ (car g$x$9886$XW@M@))
                                   (g$f$9885$XW@M@ (cdr g$x$9886$XW@M@)))
                                 (if (vector? g$x$9886$XW@M@)
                                   (vector-for-each
                                     g$f$9885$XW@M@
                                     g$x$9886$XW@M@)
                                   (if (symbol? g$x$9886$XW@M@)
                                     (g$syntax-violation$7971$XW@M@
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9883$XW@M@
                                       g$x$9886$XW@M@)
                                     (void)))))))))
                 g$f$9885$XW@M@)
               g$out$9884$XW@M@)
              (g$add-mark$7576$XW@M@
                (g$gen-mark$7571$XW@M@)
                g$out$9884$XW@M@
                g$expr$9883$XW@M@))))
         (g$transformer$9882$XW@M@
           (g$add-mark$7576$XW@M@
             g$anti-mark$7572$XW@M@
             g$expr$9883$XW@M@
             '#f))))))
   (g$chi-macro$7878$XW@M@
     g$chi-macro$11328$XW@M@
     (case-lambda
       ((g$p$9887$XW@M@ g$e$9888$XW@M@)
        (g$do-macro-call$7877$XW@M@
          (g$macro-transformer$7875$XW@M@ g$p$9887$XW@M@)
          g$e$9888$XW@M@))))
   (g$chi-local-macro$7879$XW@M@
     g$chi-local-macro$11329$XW@M@
     (case-lambda
       ((g$p$9889$XW@M@ g$e$9890$XW@M@)
        (g$do-macro-call$7877$XW@M@
          (g$local-macro-transformer$7876$XW@M@ g$p$9889$XW@M@)
          g$e$9890$XW@M@))))
   (g$chi-global-macro$7880$XW@M@
     g$chi-global-macro$11330$XW@M@
     (case-lambda
       ((g$p$9891$XW@M@ g$e$9892$XW@M@)
        ((case-lambda
           ((g$lib$9893$XW@M@ g$loc$9894$XW@M@)
            (begin
              (g$visit-library$7403$XW@M@ g$lib$9893$XW@M@)
              ((case-lambda
                 ((g$x$9895$XW@M@)
                  ((case-lambda
                     ((g$transformer$9896$XW@M@)
                      (g$do-macro-call$7877$XW@M@
                        g$transformer$9896$XW@M@
                        g$e$9892$XW@M@)))
                   (if (procedure? g$x$9895$XW@M@)
                     g$x$9895$XW@M@
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9895$XW@M@)))))
               (symbol-value g$loc$9894$XW@M@)))))
         (car g$p$9891$XW@M@)
         (cdr g$p$9891$XW@M@)))))
   (g$chi-expr*$7881$XW@M@
     g$chi-expr*$11331$XW@M@
     (case-lambda
       ((g$e*$9897$XW@M@ g$r$9898$XW@M@ g$mr$9899$XW@M@)
        (if (null? g$e*$9897$XW@M@)
          '()
          ((case-lambda
             ((g$e$9900$XW@M@)
              (cons
                g$e$9900$XW@M@
                (g$chi-expr*$7881$XW@M@
                  (cdr g$e*$9897$XW@M@)
                  g$r$9898$XW@M@
                  g$mr$9899$XW@M@))))
           (g$chi-expr$7883$XW@M@
             (car g$e*$9897$XW@M@)
             g$r$9898$XW@M@
             g$mr$9899$XW@M@))))))
   (g$chi-application$7882$XW@M@
     g$chi-application$11332$XW@M@
     (case-lambda
       ((g$e$9901$XW@M@ g$r$9902$XW@M@ g$mr$9903$XW@M@)
        ((case-lambda
           ((g$t$9904$XW@M@)
            ((case-lambda
               ((g$ls/false$9905$XW@M@)
                (if g$ls/false$9905$XW@M@
                  (apply
                    (case-lambda
                      ((g$rator$9906$XW@M@ g$rands$9907$XW@M@)
                       ((case-lambda
                          ((g$rator$9908$XW@M@)
                           (cons
                             g$rator$9908$XW@M@
                             (g$chi-expr*$7881$XW@M@
                               g$rands$9907$XW@M@
                               g$r$9902$XW@M@
                               g$mr$9903$XW@M@))))
                        (g$chi-expr$7883$XW@M@
                          g$rator$9906$XW@M@
                          g$r$9902$XW@M@
                          g$mr$9903$XW@M@))))
                    g$ls/false$9905$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$9904$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9904$XW@M@ '(any . each-any)))))
         g$e$9901$XW@M@))))
   (g$chi-expr$7883$XW@M@
     g$chi-expr$11333$XW@M@
     (case-lambda
       ((g$e$9909$XW@M@ g$r$9910$XW@M@ g$mr$9911$XW@M@)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7607$XW@M@ g$e$9909$XW@M@ g$r$9910$XW@M@)))
          (case-lambda
            ((g$type$9915$XW@M@ g$value$9916$XW@M@ g$kwd$9917$XW@M@)
             ((case-lambda
                ((g$kwd$9918$XW@M@ g$value$9919$XW@M@ g$type$9920$XW@M@)
                 ((case-lambda
                    ((g$t$9921$XW@M@)
                     (if (eqv? g$t$9921$XW@M@ 'core-macro)
                       ((case-lambda
                          ((g$transformer$9947$XW@M@)
                           (g$transformer$9947$XW@M@
                             g$e$9909$XW@M@
                             g$r$9910$XW@M@
                             g$mr$9911$XW@M@)))
                        (g$core-macro-transformer$7872$XW@M@
                          g$value$9919$XW@M@))
                       (if (eqv? g$t$9921$XW@M@ 'global)
                         ((case-lambda
                            ((g$lib$9945$XW@M@)
                             ((case-lambda
                                ((g$loc$9946$XW@M@)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7917$XW@M@)
                                        g$lib$9945$XW@M@)
                                       g$loc$9946$XW@M@))))))
                              (cdr g$value$9919$XW@M@))))
                          (car g$value$9919$XW@M@))
                         (if (eqv? g$t$9921$XW@M@ 'core-prim)
                           ((case-lambda
                              ((g$name$9944$XW@M@)
                               (list 'primitive g$name$9944$XW@M@)))
                            g$value$9919$XW@M@)
                           (if (eqv? g$t$9921$XW@M@ 'call)
                             (g$chi-application$7882$XW@M@
                               g$e$9909$XW@M@
                               g$r$9910$XW@M@
                               g$mr$9911$XW@M@)
                             (if (eqv? g$t$9921$XW@M@ 'lexical)
                               ((case-lambda
                                  ((g$lex$9943$XW@M@) g$lex$9943$XW@M@))
                                (g$lexical-var$7809$XW@M@ g$value$9919$XW@M@))
                               (if (memv
                                     g$t$9921$XW@M@
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7883$XW@M@
                                   (g$chi-global-macro$7880$XW@M@
                                     g$value$9919$XW@M@
                                     g$e$9909$XW@M@)
                                   g$r$9910$XW@M@
                                   g$mr$9911$XW@M@)
                                 (if (memv
                                       g$t$9921$XW@M@
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7883$XW@M@
                                     (g$chi-local-macro$7879$XW@M@
                                       g$value$9919$XW@M@
                                       g$e$9909$XW@M@)
                                     g$r$9910$XW@M@
                                     g$mr$9911$XW@M@)
                                   (if (memv g$t$9921$XW@M@ '(macro macro!))
                                     (g$chi-expr$7883$XW@M@
                                       (g$chi-macro$7878$XW@M@
                                         g$value$9919$XW@M@
                                         g$e$9909$XW@M@)
                                       g$r$9910$XW@M@
                                       g$mr$9911$XW@M@)
                                     (if (eqv? g$t$9921$XW@M@ 'constant)
                                       ((case-lambda
                                          ((g$datum$9942$XW@M@)
                                           (list 'quote g$datum$9942$XW@M@)))
                                        g$value$9919$XW@M@)
                                       (if (eqv? g$t$9921$XW@M@ 'set!)
                                         (g$chi-set!$7884$XW@M@
                                           g$e$9909$XW@M@
                                           g$r$9910$XW@M@
                                           g$mr$9911$XW@M@)
                                         (if (eqv? g$t$9921$XW@M@ 'begin)
                                           ((case-lambda
                                              ((g$t$9938$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$9939$XW@M@)
                                                   (if g$ls/false$9939$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9940$XW@M@
                                                            g$x*$9941$XW@M@)
                                                          (g$build-sequence$7521$XW@M@
                                                            '#f
                                                            (g$chi-expr*$7881$XW@M@
                                                              (cons
                                                                g$x$9940$XW@M@
                                                                g$x*$9941$XW@M@)
                                                              g$r$9910$XW@M@
                                                              g$mr$9911$XW@M@))))
                                                       g$ls/false$9939$XW@M@)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9938$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$9938$XW@M@
                                                  '(_ any . each-any)))))
                                            g$e$9909$XW@M@)
                                           (if (memv
                                                 g$t$9921$XW@M@
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9923$XW@M@)
                                                 ((case-lambda
                                                    ((g$ls/false$9924$XW@M@)
                                                     (if (if g$ls/false$9924$XW@M@
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9925$XW@M@
                                                                    g$xrhs*$9926$XW@M@
                                                                    g$xbody$9927$XW@M@
                                                                    g$xbody*$9928$XW@M@)
                                                                  (if (g$valid-bound-ids?$7592$XW@M@
                                                                        g$xlhs*$9925$XW@M@)
                                                                    (void)
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9909$XW@M@))))
                                                               g$ls/false$9924$XW@M@))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9929$XW@M@
                                                              g$xrhs*$9930$XW@M@
                                                              g$xbody$9931$XW@M@
                                                              g$xbody*$9932$XW@M@)
                                                            ((case-lambda
                                                               ((g$xlab*$9933$XW@M@)
                                                                ((case-lambda
                                                                   ((g$xrib$9934$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$xb*$9935$XW@M@)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7521$XW@M@
                                                                              '#f
                                                                              (g$chi-expr*$7881$XW@M@
                                                                                (map (case-lambda
                                                                                       ((g$x$9936$XW@M@)
                                                                                        (g$add-subst$7577$XW@M@
                                                                                          g$xrib$9934$XW@M@
                                                                                          g$x$9936$XW@M@)))
                                                                                     (cons
                                                                                       g$xbody$9931$XW@M@
                                                                                       g$xbody*$9932$XW@M@))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9933$XW@M@
                                                                                       g$xb*$9935$XW@M@)
                                                                                  g$r$9910$XW@M@)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9933$XW@M@
                                                                                       g$xb*$9935$XW@M@)
                                                                                  g$mr$9911$XW@M@))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9937$XW@M@)
                                                                             (g$make-eval-transformer$7619$XW@M@
                                                                               (g$expand-transformer$7910$XW@M@
                                                                                 (if (eq? g$type$9920$XW@M@
                                                                                          'let-syntax)
                                                                                   g$x$9937$XW@M@
                                                                                   (g$add-subst$7577$XW@M@
                                                                                     g$xrib$9934$XW@M@
                                                                                     g$x$9937$XW@M@))
                                                                                 g$mr$9911$XW@M@))))
                                                                          g$xrhs*$9930$XW@M@))))
                                                                 (g$make-full-rib$7555$XW@M@
                                                                   g$xlhs*$9929$XW@M@
                                                                   g$xlab*$9933$XW@M@))))
                                                             (map g$gen-label$7533$XW@M@
                                                                  g$xlhs*$9929$XW@M@))))
                                                         g$ls/false$9924$XW@M@)
                                                       (g$syntax-violation$7971$XW@M@
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9923$XW@M@))))
                                                  (g$syntax-dispatch$7865$XW@M@
                                                    g$t$9923$XW@M@
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9909$XW@M@)
                                             (if (eqv?
                                                   g$t$9921$XW@M@
                                                   'displaced-lexical)
                                               (g$syntax-violation$7971$XW@M@
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9909$XW@M@)
                                               (if (eqv? g$t$9921$XW@M@ 'syntax)
                                                 (g$syntax-violation$7971$XW@M@
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9909$XW@M@)
                                                 (if (memv
                                                       g$t$9921$XW@M@
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7971$XW@M@
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9922$XW@M@)
                                                           (if (eqv?
                                                                 g$t$9922$XW@M@
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9922$XW@M@
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9922$XW@M@
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9922$XW@M@
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9922$XW@M@
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9920$XW@M@)
                                                       '" was found where an expression was expected")
                                                     g$e$9909$XW@M@)
                                                   (if (eqv?
                                                         g$t$9921$XW@M@
                                                         'mutable)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9909$XW@M@)
                                                     (g$syntax-violation$7971$XW@M@
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9909$XW@M@)))))))))))))))))))
                  g$type$9920$XW@M@)))
              g$kwd$9917$XW@M@
              g$value$9916$XW@M@
              g$type$9915$XW@M@)))))))
   (g$chi-set!$7884$XW@M@
     g$chi-set!$11334$XW@M@
     (case-lambda
       ((g$e$9948$XW@M@ g$r$9949$XW@M@ g$mr$9950$XW@M@)
        ((case-lambda
           ((g$t$9951$XW@M@)
            ((case-lambda
               ((g$ls/false$9952$XW@M@)
                (if (if g$ls/false$9952$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9953$XW@M@ g$v$9954$XW@M@)
                             (g$id?$7587$XW@M@ g$x$9953$XW@M@)))
                          g$ls/false$9952$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9955$XW@M@ g$v$9956$XW@M@)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7607$XW@M@
                              g$x$9955$XW@M@
                              g$r$9949$XW@M@)))
                         (case-lambda
                           ((g$type$9960$XW@M@
                              g$value$9961$XW@M@
                              g$kwd$9962$XW@M@)
                            ((case-lambda
                               ((g$kwd$9963$XW@M@
                                  g$value$9964$XW@M@
                                  g$type$9965$XW@M@)
                                ((case-lambda
                                   ((g$t$9966$XW@M@)
                                    (if (eqv? g$t$9966$XW@M@ 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7811$XW@M@
                                          g$value$9964$XW@M@
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7809$XW@M@
                                            g$value$9964$XW@M@)
                                          (g$chi-expr$7883$XW@M@
                                            g$v$9956$XW@M@
                                            g$r$9949$XW@M@
                                            g$mr$9950$XW@M@)))
                                      (if (eqv? g$t$9966$XW@M@ 'core-prim)
                                        (g$syntax-violation$7971$XW@M@
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9948$XW@M@)
                                        (if (eqv? g$t$9966$XW@M@ 'global)
                                          (g$syntax-violation$7971$XW@M@
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9948$XW@M@)
                                          (if (eqv?
                                                g$t$9966$XW@M@
                                                'global-macro!)
                                            (g$chi-expr$7883$XW@M@
                                              (g$chi-global-macro$7880$XW@M@
                                                g$value$9964$XW@M@
                                                g$e$9948$XW@M@)
                                              g$r$9949$XW@M@
                                              g$mr$9950$XW@M@)
                                            (if (eqv?
                                                  g$t$9966$XW@M@
                                                  'local-macro!)
                                              (g$chi-expr$7883$XW@M@
                                                (g$chi-local-macro$7879$XW@M@
                                                  g$value$9964$XW@M@
                                                  g$e$9948$XW@M@)
                                                g$r$9949$XW@M@
                                                g$mr$9950$XW@M@)
                                              (if (eqv? g$t$9966$XW@M@ 'mutable)
                                                (g$syntax-violation$7971$XW@M@
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9948$XW@M@)
                                                (g$syntax-violation$7971$XW@M@
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9948$XW@M@)))))))))
                                 g$type$9965$XW@M@)))
                             g$kwd$9962$XW@M@
                             g$value$9961$XW@M@
                             g$type$9960$XW@M@))))))
                    g$ls/false$9952$XW@M@)
                  (g$syntax-violation$7971$XW@M@
                    '#f
                    '"invalid syntax"
                    g$t$9951$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9951$XW@M@ '(_ any any)))))
         g$e$9948$XW@M@))))
   (g$verify-formals$7885$XW@M@
     g$verify-formals$11335$XW@M@
     (case-lambda
       ((g$fmls$9967$XW@M@ g$stx$9968$XW@M@)
        ((case-lambda
           ((g$t$9969$XW@M@)
            ((case-lambda
               ((g$ls/false$9970$XW@M@)
                (if g$ls/false$9970$XW@M@
                  (apply
                    (case-lambda
                      ((g$x*$9971$XW@M@)
                       (if (g$valid-bound-ids?$7592$XW@M@ g$x*$9971$XW@M@)
                         (void)
                         (g$invalid-fmls-error$7830$XW@M@
                           g$stx$9968$XW@M@
                           g$fmls$9967$XW@M@))))
                    g$ls/false$9970$XW@M@)
                  ((case-lambda
                     ((g$t$9972$XW@M@)
                      ((case-lambda
                         ((g$ls/false$9973$XW@M@)
                          (if g$ls/false$9973$XW@M@
                            (apply
                              (case-lambda
                                ((g$x*$9974$XW@M@ g$x$9975$XW@M@)
                                 (if (g$valid-bound-ids?$7592$XW@M@
                                       (cons g$x$9975$XW@M@ g$x*$9974$XW@M@))
                                   (void)
                                   (g$invalid-fmls-error$7830$XW@M@
                                     g$stx$9968$XW@M@
                                     g$fmls$9967$XW@M@))))
                              g$ls/false$9973$XW@M@)
                            ((case-lambda
                               ((g$t$9976$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$9977$XW@M@)
                                    (if g$ls/false$9977$XW@M@
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9968$XW@M@)))
                                        g$ls/false$9977$XW@M@)
                                      (g$syntax-violation$7971$XW@M@
                                        '#f
                                        '"invalid syntax"
                                        g$t$9976$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$9976$XW@M@
                                   '_))))
                             g$t$9972$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$9972$XW@M@
                         '#(each+ any () any)))))
                   g$t$9969$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9969$XW@M@ 'each-any))))
         g$fmls$9967$XW@M@))))
   (g$chi-lambda-clause$7886$XW@M@
     g$chi-lambda-clause$11336$XW@M@
     (case-lambda
       ((g$stx$9978$XW@M@
          g$fmls$9979$XW@M@
          g$body*$9980$XW@M@
          g$r$9981$XW@M@
          g$mr$9982$XW@M@)
        ((case-lambda
           ((g$t$9983$XW@M@)
            ((case-lambda
               ((g$ls/false$9984$XW@M@)
                (if g$ls/false$9984$XW@M@
                  (apply
                    (case-lambda
                      ((g$x*$9985$XW@M@)
                       (begin
                         (g$verify-formals$7885$XW@M@
                           g$fmls$9979$XW@M@
                           g$stx$9978$XW@M@)
                         ((case-lambda
                            ((g$lex*$9986$XW@M@ g$lab*$9987$XW@M@)
                             (values
                               g$lex*$9986$XW@M@
                               (g$chi-internal$7894$XW@M@
                                 (g$add-subst$7577$XW@M@
                                   (g$make-full-rib$7555$XW@M@
                                     g$x*$9985$XW@M@
                                     g$lab*$9987$XW@M@)
                                   g$body*$9980$XW@M@)
                                 (g$add-lexicals$7813$XW@M@
                                   g$lab*$9987$XW@M@
                                   g$lex*$9986$XW@M@
                                   g$r$9981$XW@M@)
                                 g$mr$9982$XW@M@))))
                          (map g$gen-lexical$7531$XW@M@ g$x*$9985$XW@M@)
                          (map g$gen-label$7533$XW@M@ g$x*$9985$XW@M@)))))
                    g$ls/false$9984$XW@M@)
                  ((case-lambda
                     ((g$t$9988$XW@M@)
                      ((case-lambda
                         ((g$ls/false$9989$XW@M@)
                          (if g$ls/false$9989$XW@M@
                            (apply
                              (case-lambda
                                ((g$x*$9990$XW@M@ g$x$9991$XW@M@)
                                 (begin
                                   (g$verify-formals$7885$XW@M@
                                     g$fmls$9979$XW@M@
                                     g$stx$9978$XW@M@)
                                   ((case-lambda
                                      ((g$lex*$9992$XW@M@
                                         g$lab*$9993$XW@M@
                                         g$lex$9994$XW@M@
                                         g$lab$9995$XW@M@)
                                       (values
                                         (append
                                           g$lex*$9992$XW@M@
                                           g$lex$9994$XW@M@)
                                         (g$chi-internal$7894$XW@M@
                                           (g$add-subst$7577$XW@M@
                                             (g$make-full-rib$7555$XW@M@
                                               (cons
                                                 g$x$9991$XW@M@
                                                 g$x*$9990$XW@M@)
                                               (cons
                                                 g$lab$9995$XW@M@
                                                 g$lab*$9993$XW@M@))
                                             g$body*$9980$XW@M@)
                                           (g$add-lexicals$7813$XW@M@
                                             (cons
                                               g$lab$9995$XW@M@
                                               g$lab*$9993$XW@M@)
                                             (cons
                                               g$lex$9994$XW@M@
                                               g$lex*$9992$XW@M@)
                                             g$r$9981$XW@M@)
                                           g$mr$9982$XW@M@))))
                                    (map g$gen-lexical$7531$XW@M@
                                         g$x*$9990$XW@M@)
                                    (map g$gen-label$7533$XW@M@ g$x*$9990$XW@M@)
                                    (g$gen-lexical$7531$XW@M@ g$x$9991$XW@M@)
                                    (g$gen-label$7533$XW@M@ g$x$9991$XW@M@)))))
                              g$ls/false$9989$XW@M@)
                            ((case-lambda
                               ((g$t$9996$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$9997$XW@M@)
                                    (if g$ls/false$9997$XW@M@
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7971$XW@M@
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9979$XW@M@)))
                                        g$ls/false$9997$XW@M@)
                                      (g$syntax-violation$7971$XW@M@
                                        '#f
                                        '"invalid syntax"
                                        g$t$9996$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$9996$XW@M@
                                   '_))))
                             g$t$9988$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$9988$XW@M@
                         '#(each+ any () any)))))
                   g$t$9983$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$9983$XW@M@ 'each-any))))
         g$fmls$9979$XW@M@))))
   (g$chi-lambda-clause*$7887$XW@M@
     g$chi-lambda-clause*$11337$XW@M@
     (case-lambda
       ((g$stx$9998$XW@M@
          g$fmls*$9999$XW@M@
          g$body**$10000$XW@M@
          g$r$10001$XW@M@
          g$mr$10002$XW@M@)
        (if (null? g$fmls*$9999$XW@M@)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7886$XW@M@
                 g$stx$9998$XW@M@
                 (car g$fmls*$9999$XW@M@)
                 (car g$body**$10000$XW@M@)
                 g$r$10001$XW@M@
                 g$mr$10002$XW@M@)))
            (case-lambda
              ((g$a$10005$XW@M@ g$b$10006$XW@M@)
               ((case-lambda
                  ((g$b$10007$XW@M@ g$a$10008$XW@M@)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7887$XW@M@
                          g$stx$9998$XW@M@
                          (cdr g$fmls*$9999$XW@M@)
                          (cdr g$body**$10000$XW@M@)
                          g$r$10001$XW@M@
                          g$mr$10002$XW@M@)))
                     (case-lambda
                       ((g$a*$10011$XW@M@ g$b*$10012$XW@M@)
                        ((case-lambda
                           ((g$b*$10013$XW@M@ g$a*$10014$XW@M@)
                            (values
                              (cons g$a$10008$XW@M@ g$a*$10014$XW@M@)
                              (cons g$b$10007$XW@M@ g$b*$10013$XW@M@))))
                         g$b*$10012$XW@M@
                         g$a*$10011$XW@M@))))))
                g$b$10006$XW@M@
                g$a$10005$XW@M@))))))))
   (g$chi-defun$7888$XW@M@
     g$chi-defun$11338$XW@M@
     (case-lambda
       ((g$x$10015$XW@M@ g$r$10016$XW@M@ g$mr$10017$XW@M@)
        ((case-lambda
           ((g$fmls$10018$XW@M@ g$body*$10019$XW@M@)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7886$XW@M@
                   g$fmls$10018$XW@M@
                   g$fmls$10018$XW@M@
                   g$body*$10019$XW@M@
                   g$r$10016$XW@M@
                   g$mr$10017$XW@M@)))
              (case-lambda
                ((g$fmls$10022$XW@M@ g$body$10023$XW@M@)
                 ((case-lambda
                    ((g$body$10024$XW@M@ g$fmls$10025$XW@M@)
                     (g$build-lambda$7518$XW@M@
                       '#f
                       g$fmls$10025$XW@M@
                       g$body$10024$XW@M@)))
                  g$body$10023$XW@M@
                  g$fmls$10022$XW@M@))))))
         (car g$x$10015$XW@M@)
         (cdr g$x$10015$XW@M@)))))
   (g$chi-rhs$7889$XW@M@
     g$chi-rhs$11339$XW@M@
     (case-lambda
       ((g$rhs$10026$XW@M@ g$r$10027$XW@M@ g$mr$10028$XW@M@)
        ((case-lambda
           ((g$t$10029$XW@M@)
            (if (eqv? g$t$10029$XW@M@ 'defun)
              (g$chi-defun$7888$XW@M@
                (cdr g$rhs$10026$XW@M@)
                g$r$10027$XW@M@
                g$mr$10028$XW@M@)
              (if (eqv? g$t$10029$XW@M@ 'expr)
                ((case-lambda
                   ((g$expr$10031$XW@M@)
                    (g$chi-expr$7883$XW@M@
                      g$expr$10031$XW@M@
                      g$r$10027$XW@M@
                      g$mr$10028$XW@M@)))
                 (cdr g$rhs$10026$XW@M@))
                (if (eqv? g$t$10029$XW@M@ 'top-expr)
                  ((case-lambda
                     ((g$expr$10030$XW@M@)
                      (g$build-sequence$7521$XW@M@
                        '#f
                        (list
                          (g$chi-expr$7883$XW@M@
                            g$expr$10030$XW@M@
                            g$r$10027$XW@M@
                            g$mr$10028$XW@M@)
                          (g$build-void$7522$XW@M@)))))
                   (cdr g$rhs$10026$XW@M@))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10026$XW@M@))))))
         (car g$rhs$10026$XW@M@)))))
   (g$expand-interaction-rhs*/init*$7890$XW@M@
     g$expand-interaction-rhs*/init*$11340$XW@M@
     (case-lambda
       ((g$lhs*$10032$XW@M@
          g$rhs*$10033$XW@M@
          g$init*$10034$XW@M@
          g$r$10035$XW@M@
          g$mr$10036$XW@M@)
        ((letrec ((g$f$10037$XW@M@
                    (case-lambda
                      ((g$lhs*$10038$XW@M@ g$rhs*$10039$XW@M@)
                       (if (null? g$lhs*$10038$XW@M@)
                         (map (case-lambda
                                ((g$x$10040$XW@M@)
                                 (g$chi-expr$7883$XW@M@
                                   g$x$10040$XW@M@
                                   g$r$10035$XW@M@
                                   g$mr$10036$XW@M@)))
                              g$init*$10034$XW@M@)
                         ((case-lambda
                            ((g$lhs$10041$XW@M@ g$rhs$10042$XW@M@)
                             ((case-lambda
                                ((g$t$10043$XW@M@)
                                 (if (eqv? g$t$10043$XW@M@ 'defun)
                                   ((case-lambda
                                      ((g$rhs$10046$XW@M@)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10041$XW@M@
                                           g$rhs$10046$XW@M@)
                                         (g$f$10037$XW@M@
                                           (cdr g$lhs*$10038$XW@M@)
                                           (cdr g$rhs*$10039$XW@M@)))))
                                    (g$chi-defun$7888$XW@M@
                                      (cdr g$rhs$10042$XW@M@)
                                      g$r$10035$XW@M@
                                      g$mr$10036$XW@M@))
                                   (if (eqv? g$t$10043$XW@M@ 'expr)
                                     ((case-lambda
                                        ((g$rhs$10045$XW@M@)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10041$XW@M@
                                             g$rhs$10045$XW@M@)
                                           (g$f$10037$XW@M@
                                             (cdr g$lhs*$10038$XW@M@)
                                             (cdr g$rhs*$10039$XW@M@)))))
                                      (g$chi-expr$7883$XW@M@
                                        (cdr g$rhs$10042$XW@M@)
                                        g$r$10035$XW@M@
                                        g$mr$10036$XW@M@))
                                     (if (eqv? g$t$10043$XW@M@ 'top-expr)
                                       ((case-lambda
                                          ((g$e$10044$XW@M@)
                                           (cons
                                             g$e$10044$XW@M@
                                             (g$f$10037$XW@M@
                                               (cdr g$lhs*$10038$XW@M@)
                                               (cdr g$rhs*$10039$XW@M@)))))
                                        (g$chi-expr$7883$XW@M@
                                          (cdr g$rhs$10042$XW@M@)
                                          g$r$10035$XW@M@
                                          g$mr$10036$XW@M@))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10042$XW@M@))))))
                              (car g$rhs$10042$XW@M@))))
                          (car g$lhs*$10038$XW@M@)
                          (car g$rhs*$10039$XW@M@)))))))
           g$f$10037$XW@M@)
         g$lhs*$10032$XW@M@
         g$rhs*$10033$XW@M@))))
   (g$chi-rhs*$7891$XW@M@
     g$chi-rhs*$11341$XW@M@
     (case-lambda
       ((g$rhs*$10047$XW@M@ g$r$10048$XW@M@ g$mr$10049$XW@M@)
        ((letrec ((g$f$10050$XW@M@
                    (case-lambda
                      ((g$ls$10051$XW@M@)
                       (if (null? g$ls$10051$XW@M@)
                         '()
                         ((case-lambda
                            ((g$a$10052$XW@M@)
                             (cons
                               g$a$10052$XW@M@
                               (g$f$10050$XW@M@ (cdr g$ls$10051$XW@M@)))))
                          (g$chi-rhs$7889$XW@M@
                            (car g$ls$10051$XW@M@)
                            g$r$10048$XW@M@
                            g$mr$10049$XW@M@)))))))
           g$f$10050$XW@M@)
         g$rhs*$10047$XW@M@))))
   (g$find-bound=?$7892$XW@M@
     g$find-bound=?$11342$XW@M@
     (case-lambda
       ((g$x$10053$XW@M@ g$lhs*$10054$XW@M@ g$rhs*$10055$XW@M@)
        (if (null? g$lhs*$10054$XW@M@)
          '#f
          (if (g$bound-id=?$7590$XW@M@ g$x$10053$XW@M@ (car g$lhs*$10054$XW@M@))
            (car g$rhs*$10055$XW@M@)
            (g$find-bound=?$7892$XW@M@
              g$x$10053$XW@M@
              (cdr g$lhs*$10054$XW@M@)
              (cdr g$rhs*$10055$XW@M@)))))))
   (g$find-dups$7893$XW@M@
     g$find-dups$11343$XW@M@
     (case-lambda
       ((g$ls$10056$XW@M@)
        ((letrec ((g$f$10057$XW@M@
                    (case-lambda
                      ((g$ls$10058$XW@M@ g$dups$10059$XW@M@)
                       (if (null? g$ls$10058$XW@M@)
                         g$dups$10059$XW@M@
                         ((case-lambda
                            ((g$t$10060$XW@M@)
                             (if g$t$10060$XW@M@
                               ((case-lambda
                                  ((g$x$10061$XW@M@)
                                   (g$f$10057$XW@M@
                                     (cdr g$ls$10058$XW@M@)
                                     (cons
                                       (list
                                         (car g$ls$10058$XW@M@)
                                         g$x$10061$XW@M@)
                                       g$dups$10059$XW@M@))))
                                g$t$10060$XW@M@)
                               (g$f$10057$XW@M@
                                 (cdr g$ls$10058$XW@M@)
                                 g$dups$10059$XW@M@))))
                          (g$find-bound=?$7892$XW@M@
                            (car g$ls$10058$XW@M@)
                            (cdr g$ls$10058$XW@M@)
                            (cdr g$ls$10058$XW@M@))))))))
           g$f$10057$XW@M@)
         g$ls$10056$XW@M@
         '()))))
   (g$chi-internal$7894$XW@M@
     g$chi-internal$11344$XW@M@
     (case-lambda
       ((g$e*$10062$XW@M@ g$r$10063$XW@M@ g$mr$10064$XW@M@)
        ((case-lambda
           ((g$rib$10065$XW@M@)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7909$XW@M@
                   (map (case-lambda
                          ((g$x$10073$XW@M@)
                           (g$add-subst$7577$XW@M@
                             g$rib$10065$XW@M@
                             g$x$10073$XW@M@)))
                        (g$syntax->list$7586$XW@M@ g$e*$10062$XW@M@))
                   g$r$10063$XW@M@
                   g$mr$10064$XW@M@
                   '()
                   '()
                   '()
                   '()
                   g$rib$10065$XW@M@
                   '#f)))
              (case-lambda
                ((g$e*$10074$XW@M@
                   g$r$10075$XW@M@
                   g$mr$10076$XW@M@
                   g$lex*$10077$XW@M@
                   g$rhs*$10078$XW@M@
                   g$mod**$10079$XW@M@
                   g$kwd*$10080$XW@M@)
                 ((case-lambda
                    ((g$kwd*$10081$XW@M@
                       g$mod**$10082$XW@M@
                       g$rhs*$10083$XW@M@
                       g$lex*$10084$XW@M@
                       g$mr$10085$XW@M@
                       g$r$10086$XW@M@
                       g$e*$10087$XW@M@)
                     (begin
                       (if (null? g$e*$10087$XW@M@)
                         (g$syntax-violation$7971$XW@M@
                           '#f
                           '"no expression in body"
                           g$e*$10087$XW@M@)
                         (void))
                       ((case-lambda
                          ((g$init*$10088$XW@M@)
                           ((case-lambda
                              ((g$rhs*$10089$XW@M@)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7524$XW@M@
                                     '#f
                                     (reverse g$lex*$10084$XW@M@)
                                     (reverse g$rhs*$10089$XW@M@)
                                     (g$build-sequence$7521$XW@M@
                                       '#f
                                       g$init*$10088$XW@M@)))))))
                            (g$chi-rhs*$7891$XW@M@
                              g$rhs*$10083$XW@M@
                              g$r$10086$XW@M@
                              g$mr$10085$XW@M@))))
                        (g$chi-expr*$7881$XW@M@
                          (append
                            (apply append (reverse g$mod**$10082$XW@M@))
                            g$e*$10087$XW@M@)
                          g$r$10086$XW@M@
                          g$mr$10085$XW@M@)))))
                  g$kwd*$10080$XW@M@
                  g$mod**$10079$XW@M@
                  g$rhs*$10078$XW@M@
                  g$lex*$10077$XW@M@
                  g$mr$10076$XW@M@
                  g$r$10075$XW@M@
                  g$e*$10074$XW@M@))))))
         (g$make-empty-rib$7550$XW@M@)))))
   (g$parse-module$7895$XW@M@
     g$parse-module$11345$XW@M@
     (case-lambda
       ((g$e$10090$XW@M@)
        ((case-lambda
           ((g$t$10091$XW@M@)
            ((case-lambda
               ((g$ls/false$10092$XW@M@)
                (if g$ls/false$10092$XW@M@
                  (apply
                    (case-lambda
                      ((g$export*$10093$XW@M@ g$b*$10094$XW@M@)
                       (begin
                         (if (g$for-all$5871$XW@M@
                               g$id?$7587$XW@M@
                               g$export*$10093$XW@M@)
                           (void)
                           (g$syntax-violation$7971$XW@M@
                             '#f
                             '"module exports must be identifiers"
                             g$e$10090$XW@M@))
                         (values
                           '#f
                           (list->vector g$export*$10093$XW@M@)
                           g$b*$10094$XW@M@))))
                    g$ls/false$10092$XW@M@)
                  ((case-lambda
                     ((g$t$10095$XW@M@)
                      ((case-lambda
                         ((g$ls/false$10096$XW@M@)
                          (if g$ls/false$10096$XW@M@
                            (apply
                              (case-lambda
                                ((g$name$10097$XW@M@
                                   g$export*$10098$XW@M@
                                   g$b*$10099$XW@M@)
                                 (begin
                                   (if (g$id?$7587$XW@M@ g$name$10097$XW@M@)
                                     (void)
                                     (g$syntax-violation$7971$XW@M@
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10090$XW@M@))
                                   (if (g$for-all$5871$XW@M@
                                         g$id?$7587$XW@M@
                                         g$export*$10098$XW@M@)
                                     (void)
                                     (g$syntax-violation$7971$XW@M@
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10090$XW@M@))
                                   (values
                                     g$name$10097$XW@M@
                                     (list->vector g$export*$10098$XW@M@)
                                     g$b*$10099$XW@M@))))
                              g$ls/false$10096$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$10095$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$10095$XW@M@
                         '(_ any each-any . each-any)))))
                   g$t$10091$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$10091$XW@M@
               '(_ each-any . each-any)))))
         g$e$10090$XW@M@))))
   (g$8853$7896$XW@M@
     g$8853$11346$XW@M@
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8856$XW@M@
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8855$7897$XW@M@ g$8855$11347$XW@M@ '#f)
   (g$8854$7898$XW@M@
     g$8854$11348$XW@M@
     (make-record-constructor-descriptor
       g$8853$7896$XW@M@
       '#f
       g$8855$7897$XW@M@))
   (g$module-interface?$7899$XW@M@
     g$module-interface?$11349$XW@M@
     (record-predicate g$8853$7896$XW@M@))
   (g$make-module-interface$7900$XW@M@
     g$make-module-interface$11350$XW@M@
     (record-constructor g$8854$7898$XW@M@))
   (g$module-interface-first-mark$7901$XW@M@
     g$module-interface-first-mark$11351$XW@M@
     (record-accessor g$8853$7896$XW@M@ '0))
   (g$module-interface-exp-id-vec$7902$XW@M@
     g$module-interface-exp-id-vec$11352$XW@M@
     (record-accessor g$8853$7896$XW@M@ '1))
   (g$module-interface-exp-lab-vec$7903$XW@M@
     g$module-interface-exp-lab-vec$11353$XW@M@
     (record-accessor g$8853$7896$XW@M@ '2))
   (g$set-module-interface-first-mark!$7904$XW@M@
     g$set-module-interface-first-mark!$11354$XW@M@
     (record-mutator g$8853$7896$XW@M@ '0))
   (g$set-module-interface-exp-id-vec!$7905$XW@M@
     g$set-module-interface-exp-id-vec!$11355$XW@M@
     (record-mutator g$8853$7896$XW@M@ '1))
   (g$set-module-interface-exp-lab-vec!$7906$XW@M@
     g$set-module-interface-exp-lab-vec!$11356$XW@M@
     (record-mutator g$8853$7896$XW@M@ '2))
   (g$module-interface-exp-id*$7907$XW@M@
     g$module-interface-exp-id*$11357$XW@M@
     (case-lambda
       ((g$iface$10100$XW@M@ g$id$10101$XW@M@)
        (letrec* ((g$diff-marks$10102$XW@M@
                    (case-lambda
                      ((g$ls$10106$XW@M@ g$x$10107$XW@M@)
                       (begin
                         (if (null? g$ls$10106$XW@M@)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10108$XW@M@)
                             (if (eq? g$a$10108$XW@M@ g$x$10107$XW@M@)
                               '()
                               (cons
                                 g$a$10108$XW@M@
                                 (g$diff-marks$10102$XW@M@
                                   (cdr g$ls$10106$XW@M@)
                                   g$x$10107$XW@M@)))))
                          (car g$ls$10106$XW@M@)))))))
          ((case-lambda
             ((g$diff$10103$XW@M@ g$id-vec$10104$XW@M@)
              (if (null? g$diff$10103$XW@M@)
                g$id-vec$10104$XW@M@
                (vector-map
                  (case-lambda
                    ((g$x$10105$XW@M@)
                     (g$make-stx$7560$XW@M@
                       (g$stx-expr$7561$XW@M@ g$x$10105$XW@M@)
                       (append
                         g$diff$10103$XW@M@
                         (g$stx-mark*$7562$XW@M@ g$x$10105$XW@M@))
                       '()
                       '())))
                  g$id-vec$10104$XW@M@))))
           (g$diff-marks$10102$XW@M@
             (g$stx-mark*$7562$XW@M@ g$id$10101$XW@M@)
             (g$module-interface-first-mark$7901$XW@M@ g$iface$10100$XW@M@))
           (g$module-interface-exp-id-vec$7902$XW@M@ g$iface$10100$XW@M@))))))
   (g$chi-internal-module$7908$XW@M@
     g$chi-internal-module$11358$XW@M@
     (case-lambda
       ((g$e$10109$XW@M@
          g$r$10110$XW@M@
          g$mr$10111$XW@M@
          g$lex*$10112$XW@M@
          g$rhs*$10113$XW@M@
          g$mod**$10114$XW@M@
          g$kwd*$10115$XW@M@)
        (call-with-values
          (case-lambda (() (g$parse-module$7895$XW@M@ g$e$10109$XW@M@)))
          (case-lambda
            ((g$name$10119$XW@M@ g$exp-id*$10120$XW@M@ g$e*$10121$XW@M@)
             ((case-lambda
                ((g$e*$10122$XW@M@ g$exp-id*$10123$XW@M@ g$name$10124$XW@M@)
                 ((case-lambda
                    ((g$rib$10125$XW@M@)
                     ((case-lambda
                        ((g$e*$10126$XW@M@)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7909$XW@M@
                                    g$e*$10126$XW@M@
                                    g$r$10110$XW@M@
                                    g$mr$10111$XW@M@
                                    g$lex*$10112$XW@M@
                                    g$rhs*$10113$XW@M@
                                    g$mod**$10114$XW@M@
                                    g$kwd*$10115$XW@M@
                                    g$rib$10125$XW@M@
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10134$XW@M@
                                    g$r$10135$XW@M@
                                    g$mr$10136$XW@M@
                                    g$lex*$10137$XW@M@
                                    g$rhs*$10138$XW@M@
                                    g$mod**$10139$XW@M@
                                    g$kwd*$10140$XW@M@)
                                  ((case-lambda
                                     ((g$kwd*$10141$XW@M@
                                        g$mod**$10142$XW@M@
                                        g$rhs*$10143$XW@M@
                                        g$lex*$10144$XW@M@
                                        g$mr$10145$XW@M@
                                        g$r$10146$XW@M@
                                        g$e*$10147$XW@M@)
                                      ((case-lambda
                                         ((g$exp-lab*$10148$XW@M@
                                            g$mod**$10149$XW@M@)
                                          (if (not g$name$10124$XW@M@)
                                            (values
                                              g$lex*$10144$XW@M@
                                              g$rhs*$10143$XW@M@
                                              g$exp-id*$10123$XW@M@
                                              g$exp-lab*$10148$XW@M@
                                              g$r$10146$XW@M@
                                              g$mr$10145$XW@M@
                                              g$mod**$10149$XW@M@
                                              g$kwd*$10141$XW@M@)
                                            ((case-lambda
                                               ((g$lab$10150$XW@M@
                                                  g$iface$10151$XW@M@)
                                                (values
                                                  g$lex*$10144$XW@M@
                                                  g$rhs*$10143$XW@M@
                                                  (vector g$name$10124$XW@M@)
                                                  (vector g$lab$10150$XW@M@)
                                                  (cons
                                                    (cons
                                                      g$lab$10150$XW@M@
                                                      (cons
                                                        '$module
                                                        g$iface$10151$XW@M@))
                                                    g$r$10146$XW@M@)
                                                  (cons
                                                    (cons
                                                      g$lab$10150$XW@M@
                                                      (cons
                                                        '$module
                                                        g$iface$10151$XW@M@))
                                                    g$mr$10145$XW@M@)
                                                  g$mod**$10149$XW@M@
                                                  g$kwd*$10141$XW@M@)))
                                             (g$gen-label$7533$XW@M@ 'module)
                                             (g$make-module-interface$7900$XW@M@
                                               (car (g$stx-mark*$7562$XW@M@
                                                      g$name$10124$XW@M@))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10152$XW@M@)
                                                    (g$make-stx$7560$XW@M@
                                                      (g$stx-expr$7561$XW@M@
                                                        g$x$10152$XW@M@)
                                                      (g$stx-mark*$7562$XW@M@
                                                        g$x$10152$XW@M@)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10123$XW@M@)
                                               g$exp-lab*$10148$XW@M@)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10153$XW@M@)
                                            ((case-lambda
                                               ((g$t$10154$XW@M@)
                                                (if g$t$10154$XW@M@
                                                  g$t$10154$XW@M@
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7971$XW@M@
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10153$XW@M@)))))
                                             (g$id->label$7600$XW@M@
                                               (g$make-stx$7560$XW@M@
                                                 (g$id->sym$7588$XW@M@
                                                   g$x$10153$XW@M@)
                                                 (g$stx-mark*$7562$XW@M@
                                                   g$x$10153$XW@M@)
                                                 (list g$rib$10125$XW@M@)
                                                 '())))))
                                         g$exp-id*$10123$XW@M@)
                                       (cons
                                         g$e*$10147$XW@M@
                                         g$mod**$10142$XW@M@))))
                                   g$kwd*$10140$XW@M@
                                   g$mod**$10139$XW@M@
                                   g$rhs*$10138$XW@M@
                                   g$lex*$10137$XW@M@
                                   g$mr$10136$XW@M@
                                   g$r$10135$XW@M@
                                   g$e*$10134$XW@M@)))))))))
                      (map (case-lambda
                             ((g$x$10155$XW@M@)
                              (g$add-subst$7577$XW@M@
                                g$rib$10125$XW@M@
                                g$x$10155$XW@M@)))
                           (g$syntax->list$7586$XW@M@ g$e*$10122$XW@M@)))))
                  (g$make-empty-rib$7550$XW@M@))))
              g$e*$10121$XW@M@
              g$exp-id*$10120$XW@M@
              g$name$10119$XW@M@)))))))
   (g$chi-body*$7909$XW@M@
     g$chi-body*$11359$XW@M@
     (case-lambda
       ((g$e*$10156$XW@M@
          g$r$10157$XW@M@
          g$mr$10158$XW@M@
          g$lex*$10159$XW@M@
          g$rhs*$10160$XW@M@
          g$mod**$10161$XW@M@
          g$kwd*$10162$XW@M@
          g$rib$10163$XW@M@
          g$top?$10164$XW@M@)
        (if (null? g$e*$10156$XW@M@)
          (values
            g$e*$10156$XW@M@
            g$r$10157$XW@M@
            g$mr$10158$XW@M@
            g$lex*$10159$XW@M@
            g$rhs*$10160$XW@M@
            g$mod**$10161$XW@M@
            g$kwd*$10162$XW@M@)
          ((case-lambda
             ((g$e$10165$XW@M@)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7607$XW@M@ g$e$10165$XW@M@ g$r$10157$XW@M@)))
                (case-lambda
                  ((g$type$10169$XW@M@ g$value$10170$XW@M@ g$kwd$10171$XW@M@)
                   ((case-lambda
                      ((g$kwd$10172$XW@M@
                         g$value$10173$XW@M@
                         g$type$10174$XW@M@)
                       ((case-lambda
                          ((g$kwd*$10175$XW@M@)
                           ((case-lambda
                              ((g$t$10176$XW@M@)
                               (if (eqv? g$t$10176$XW@M@ 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7805$XW@M@
                                        g$e$10165$XW@M@)))
                                   (case-lambda
                                     ((g$id$10282$XW@M@ g$rhs$10283$XW@M@)
                                      ((case-lambda
                                         ((g$rhs$10284$XW@M@ g$id$10285$XW@M@)
                                          (begin
                                            (if (g$bound-id-member?$7594$XW@M@
                                                  g$id$10285$XW@M@
                                                  g$kwd*$10175$XW@M@)
                                              (g$syntax-violation$7971$XW@M@
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10165$XW@M@)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7535$XW@M@
                                                   g$id$10285$XW@M@
                                                   g$rib$10163$XW@M@)))
                                              (case-lambda
                                                ((g$lab$10288$XW@M@
                                                   g$lex$10289$XW@M@)
                                                 ((case-lambda
                                                    ((g$lex$10290$XW@M@
                                                       g$lab$10291$XW@M@)
                                                     (begin
                                                       (g$extend-rib!$7551$XW@M@
                                                         g$rib$10163$XW@M@
                                                         g$id$10285$XW@M@
                                                         g$lab$10291$XW@M@)
                                                       (g$chi-body*$7909$XW@M@
                                                         (cdr g$e*$10156$XW@M@)
                                                         (g$add-lexical$7812$XW@M@
                                                           g$lab$10291$XW@M@
                                                           g$lex$10290$XW@M@
                                                           g$r$10157$XW@M@)
                                                         g$mr$10158$XW@M@
                                                         (cons
                                                           g$lex$10290$XW@M@
                                                           g$lex*$10159$XW@M@)
                                                         (cons
                                                           g$rhs$10284$XW@M@
                                                           g$rhs*$10160$XW@M@)
                                                         g$mod**$10161$XW@M@
                                                         g$kwd*$10175$XW@M@
                                                         g$rib$10163$XW@M@
                                                         g$top?$10164$XW@M@))))
                                                  g$lex$10289$XW@M@
                                                  g$lab$10288$XW@M@)))))))
                                       g$rhs$10283$XW@M@
                                       g$id$10282$XW@M@))))
                                 (if (eqv? g$t$10176$XW@M@ 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7806$XW@M@
                                          g$e$10165$XW@M@)))
                                     (case-lambda
                                       ((g$id$10273$XW@M@ g$rhs$10274$XW@M@)
                                        ((case-lambda
                                           ((g$rhs$10275$XW@M@ g$id$10276$XW@M@)
                                            (begin
                                              (if (g$bound-id-member?$7594$XW@M@
                                                    g$id$10276$XW@M@
                                                    g$kwd*$10175$XW@M@)
                                                (g$syntax-violation$7971$XW@M@
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10165$XW@M@)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10277$XW@M@
                                                    g$expanded-rhs$10278$XW@M@)
                                                  (begin
                                                    (g$extend-rib!$7551$XW@M@
                                                      g$rib$10163$XW@M@
                                                      g$id$10276$XW@M@
                                                      g$lab$10277$XW@M@)
                                                    ((case-lambda
                                                       ((g$b$10279$XW@M@)
                                                        (g$chi-body*$7909$XW@M@
                                                          (cdr g$e*$10156$XW@M@)
                                                          (cons
                                                            (cons
                                                              g$lab$10277$XW@M@
                                                              g$b$10279$XW@M@)
                                                            g$r$10157$XW@M@)
                                                          (cons
                                                            (cons
                                                              g$lab$10277$XW@M@
                                                              g$b$10279$XW@M@)
                                                            g$mr$10158$XW@M@)
                                                          g$lex*$10159$XW@M@
                                                          g$rhs*$10160$XW@M@
                                                          g$mod**$10161$XW@M@
                                                          g$kwd*$10175$XW@M@
                                                          g$rib$10163$XW@M@
                                                          g$top?$10164$XW@M@)))
                                                     (g$make-eval-transformer$7619$XW@M@
                                                       g$expanded-rhs$10278$XW@M@)))))
                                               (g$gen-define-label$7536$XW@M@
                                                 g$id$10276$XW@M@
                                                 g$rib$10163$XW@M@)
                                               (g$expand-transformer$7910$XW@M@
                                                 g$rhs$10275$XW@M@
                                                 g$mr$10158$XW@M@)))))
                                         g$rhs$10274$XW@M@
                                         g$id$10273$XW@M@))))
                                   (if (memv
                                         g$t$10176$XW@M@
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10258$XW@M@)
                                         ((case-lambda
                                            ((g$ls/false$10259$XW@M@)
                                             (if (if g$ls/false$10259$XW@M@
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10260$XW@M@
                                                            g$xrhs*$10261$XW@M@
                                                            g$xbody*$10262$XW@M@)
                                                          (if (g$valid-bound-ids?$7592$XW@M@
                                                                g$xlhs*$10260$XW@M@)
                                                            (void)
                                                            (g$syntax-violation$7971$XW@M@
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10165$XW@M@))))
                                                       g$ls/false$10259$XW@M@))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10263$XW@M@
                                                      g$xrhs*$10264$XW@M@
                                                      g$xbody*$10265$XW@M@)
                                                    ((case-lambda
                                                       ((g$xlab*$10266$XW@M@)
                                                        ((case-lambda
                                                           ((g$xrib$10267$XW@M@)
                                                            ((case-lambda
                                                               ((g$xb*$10268$XW@M@)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7909$XW@M@
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10269$XW@M@)
                                                                                (g$add-subst$7577$XW@M@
                                                                                  g$xrib$10267$XW@M@
                                                                                  g$x$10269$XW@M@)))
                                                                             g$xbody*$10265$XW@M@)
                                                                        (cdr g$e*$10156$XW@M@))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10266$XW@M@
                                                                             g$xb*$10268$XW@M@)
                                                                        g$r$10157$XW@M@)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10266$XW@M@
                                                                             g$xb*$10268$XW@M@)
                                                                        g$mr$10158$XW@M@)
                                                                      g$lex*$10159$XW@M@
                                                                      g$rhs*$10160$XW@M@
                                                                      g$mod**$10161$XW@M@
                                                                      g$kwd*$10175$XW@M@
                                                                      g$rib$10163$XW@M@
                                                                      g$top?$10164$XW@M@))))))
                                                             (map (case-lambda
                                                                    ((g$x$10270$XW@M@)
                                                                     (g$make-eval-transformer$7619$XW@M@
                                                                       (g$expand-transformer$7910$XW@M@
                                                                         (if (eq? g$type$10174$XW@M@
                                                                                  'let-syntax)
                                                                           g$x$10270$XW@M@
                                                                           (g$add-subst$7577$XW@M@
                                                                             g$xrib$10267$XW@M@
                                                                             g$x$10270$XW@M@))
                                                                         g$mr$10158$XW@M@))))
                                                                  g$xrhs*$10264$XW@M@))))
                                                         (g$make-full-rib$7555$XW@M@
                                                           g$xlhs*$10263$XW@M@
                                                           g$xlab*$10266$XW@M@))))
                                                     (map g$gen-label$7533$XW@M@
                                                          g$xlhs*$10263$XW@M@))))
                                                 g$ls/false$10259$XW@M@)
                                               (g$syntax-violation$7971$XW@M@
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10258$XW@M@))))
                                          (g$syntax-dispatch$7865$XW@M@
                                            g$t$10258$XW@M@
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10165$XW@M@)
                                     (if (eqv? g$t$10176$XW@M@ 'begin)
                                       ((case-lambda
                                          ((g$t$10255$XW@M@)
                                           ((case-lambda
                                              ((g$ls/false$10256$XW@M@)
                                               (if g$ls/false$10256$XW@M@
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10257$XW@M@)
                                                      (g$chi-body*$7909$XW@M@
                                                        (append
                                                          g$x*$10257$XW@M@
                                                          (cdr g$e*$10156$XW@M@))
                                                        g$r$10157$XW@M@
                                                        g$mr$10158$XW@M@
                                                        g$lex*$10159$XW@M@
                                                        g$rhs*$10160$XW@M@
                                                        g$mod**$10161$XW@M@
                                                        g$kwd*$10175$XW@M@
                                                        g$rib$10163$XW@M@
                                                        g$top?$10164$XW@M@)))
                                                   g$ls/false$10256$XW@M@)
                                                 (g$syntax-violation$7971$XW@M@
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10255$XW@M@))))
                                            (g$syntax-dispatch$7865$XW@M@
                                              g$t$10255$XW@M@
                                              '(_ . each-any)))))
                                        g$e$10165$XW@M@)
                                       (if (memv
                                             g$t$10176$XW@M@
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7909$XW@M@
                                           (cons
                                             (g$add-subst$7577$XW@M@
                                               g$rib$10163$XW@M@
                                               (g$chi-global-macro$7880$XW@M@
                                                 g$value$10173$XW@M@
                                                 g$e$10165$XW@M@))
                                             (cdr g$e*$10156$XW@M@))
                                           g$r$10157$XW@M@
                                           g$mr$10158$XW@M@
                                           g$lex*$10159$XW@M@
                                           g$rhs*$10160$XW@M@
                                           g$mod**$10161$XW@M@
                                           g$kwd*$10175$XW@M@
                                           g$rib$10163$XW@M@
                                           g$top?$10164$XW@M@)
                                         (if (memv
                                               g$t$10176$XW@M@
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7909$XW@M@
                                             (cons
                                               (g$add-subst$7577$XW@M@
                                                 g$rib$10163$XW@M@
                                                 (g$chi-local-macro$7879$XW@M@
                                                   g$value$10173$XW@M@
                                                   g$e$10165$XW@M@))
                                               (cdr g$e*$10156$XW@M@))
                                             g$r$10157$XW@M@
                                             g$mr$10158$XW@M@
                                             g$lex*$10159$XW@M@
                                             g$rhs*$10160$XW@M@
                                             g$mod**$10161$XW@M@
                                             g$kwd*$10175$XW@M@
                                             g$rib$10163$XW@M@
                                             g$top?$10164$XW@M@)
                                           (if (memv
                                                 g$t$10176$XW@M@
                                                 '(macro macro!))
                                             (g$chi-body*$7909$XW@M@
                                               (cons
                                                 (g$add-subst$7577$XW@M@
                                                   g$rib$10163$XW@M@
                                                   (g$chi-macro$7878$XW@M@
                                                     g$value$10173$XW@M@
                                                     g$e$10165$XW@M@))
                                                 (cdr g$e*$10156$XW@M@))
                                               g$r$10157$XW@M@
                                               g$mr$10158$XW@M@
                                               g$lex*$10159$XW@M@
                                               g$rhs*$10160$XW@M@
                                               g$mod**$10161$XW@M@
                                               g$kwd*$10175$XW@M@
                                               g$rib$10163$XW@M@
                                               g$top?$10164$XW@M@)
                                             (if (eqv? g$t$10176$XW@M@ 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7908$XW@M@
                                                      g$e$10165$XW@M@
                                                      g$r$10157$XW@M@
                                                      g$mr$10158$XW@M@
                                                      g$lex*$10159$XW@M@
                                                      g$rhs*$10160$XW@M@
                                                      g$mod**$10161$XW@M@
                                                      g$kwd*$10175$XW@M@)))
                                                 (case-lambda
                                                   ((g$lex*$10237$XW@M@
                                                      g$rhs*$10238$XW@M@
                                                      g$m-exp-id*$10239$XW@M@
                                                      g$m-exp-lab*$10240$XW@M@
                                                      g$r$10241$XW@M@
                                                      g$mr$10242$XW@M@
                                                      g$mod**$10243$XW@M@
                                                      g$kwd*$10244$XW@M@)
                                                    ((case-lambda
                                                       ((g$kwd*$10245$XW@M@
                                                          g$mod**$10246$XW@M@
                                                          g$mr$10247$XW@M@
                                                          g$r$10248$XW@M@
                                                          g$m-exp-lab*$10249$XW@M@
                                                          g$m-exp-id*$10250$XW@M@
                                                          g$rhs*$10251$XW@M@
                                                          g$lex*$10252$XW@M@)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10253$XW@M@
                                                                 g$lab$10254$XW@M@)
                                                               (g$extend-rib!$7551$XW@M@
                                                                 g$rib$10163$XW@M@
                                                                 g$id$10253$XW@M@
                                                                 g$lab$10254$XW@M@)))
                                                            g$m-exp-id*$10250$XW@M@
                                                            g$m-exp-lab*$10249$XW@M@)
                                                          (g$chi-body*$7909$XW@M@
                                                            (cdr g$e*$10156$XW@M@)
                                                            g$r$10248$XW@M@
                                                            g$mr$10247$XW@M@
                                                            g$lex*$10252$XW@M@
                                                            g$rhs*$10251$XW@M@
                                                            g$mod**$10246$XW@M@
                                                            g$kwd*$10245$XW@M@
                                                            g$rib$10163$XW@M@
                                                            g$top?$10164$XW@M@))))
                                                     g$kwd*$10244$XW@M@
                                                     g$mod**$10243$XW@M@
                                                     g$mr$10242$XW@M@
                                                     g$r$10241$XW@M@
                                                     g$m-exp-lab*$10240$XW@M@
                                                     g$m-exp-id*$10239$XW@M@
                                                     g$rhs*$10238$XW@M@
                                                     g$lex*$10237$XW@M@))))
                                               (if (eqv?
                                                     g$t$10176$XW@M@
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7958$XW@M@
                                                     (g$stx->datum$7598$XW@M@
                                                       g$e$10165$XW@M@))
                                                   (g$chi-body*$7909$XW@M@
                                                     (cdr g$e*$10156$XW@M@)
                                                     g$r$10157$XW@M@
                                                     g$mr$10158$XW@M@
                                                     g$lex*$10159$XW@M@
                                                     g$rhs*$10160$XW@M@
                                                     g$mod**$10161$XW@M@
                                                     g$kwd*$10175$XW@M@
                                                     g$rib$10163$XW@M@
                                                     g$top?$10164$XW@M@))
                                                 (if (eqv?
                                                       g$t$10176$XW@M@
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10177$XW@M@
                                                                     (case-lambda
                                                                       ((g$e$10219$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$t$10220$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10221$XW@M@)
                                                                                (if (if g$ls/false$10221$XW@M@
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10222$XW@M@)
                                                                                             (g$id?$7587$XW@M@
                                                                                               g$id$10222$XW@M@)))
                                                                                          g$ls/false$10221$XW@M@))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10223$XW@M@)
                                                                                       '#t))
                                                                                    g$ls/false$10221$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$t$10224$XW@M@)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10225$XW@M@)
                                                                                          (if g$ls/false$10225$XW@M@
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10226$XW@M@)
                                                                                                 '#f))
                                                                                              g$ls/false$10225$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$t$10227$XW@M@)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10228$XW@M@)
                                                                                                    (if g$ls/false$10228$XW@M@
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7971$XW@M@
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10219$XW@M@)))
                                                                                                        g$ls/false$10228$XW@M@)
                                                                                                      (g$syntax-violation$7971$XW@M@
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10227$XW@M@))))
                                                                                                 (g$syntax-dispatch$7865$XW@M@
                                                                                                   g$t$10227$XW@M@
                                                                                                   '_))))
                                                                                             g$t$10224$XW@M@))))
                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                         g$t$10224$XW@M@
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10220$XW@M@))))
                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                               g$t$10220$XW@M@
                                                                               '(_ any)))))
                                                                         g$e$10219$XW@M@))))
                                                                   (g$module-import$10178$XW@M@
                                                                     (case-lambda
                                                                       ((g$e$10202$XW@M@
                                                                          g$r$10203$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$t$10204$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10205$XW@M@)
                                                                                (if (if g$ls/false$10205$XW@M@
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10206$XW@M@)
                                                                                             (g$id?$7587$XW@M@
                                                                                               g$id$10206$XW@M@)))
                                                                                          g$ls/false$10205$XW@M@))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10207$XW@M@)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7607$XW@M@
                                                                                              g$id$10207$XW@M@
                                                                                              g$r$10203$XW@M@)))
                                                                                         (case-lambda
                                                                                           ((g$type$10211$XW@M@
                                                                                              g$value$10212$XW@M@
                                                                                              g$kwd$10213$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10214$XW@M@
                                                                                                  g$value$10215$XW@M@
                                                                                                  g$type$10216$XW@M@)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10217$XW@M@)
                                                                                                    (if (eqv?
                                                                                                          g$t$10217$XW@M@
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10218$XW@M@)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7907$XW@M@
                                                                                                              g$iface$10218$XW@M@
                                                                                                              g$id$10207$XW@M@)
                                                                                                            (g$module-interface-exp-lab-vec$7903$XW@M@
                                                                                                              g$iface$10218$XW@M@))))
                                                                                                       g$value$10215$XW@M@)
                                                                                                      (g$syntax-violation$7971$XW@M@
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10202$XW@M@))))
                                                                                                 g$type$10216$XW@M@)))
                                                                                             g$kwd$10213$XW@M@
                                                                                             g$value$10212$XW@M@
                                                                                             g$type$10211$XW@M@))))))
                                                                                    g$ls/false$10205$XW@M@)
                                                                                  (g$syntax-violation$7971$XW@M@
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10204$XW@M@))))
                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                               g$t$10204$XW@M@
                                                                               '(_ any)))))
                                                                         g$e$10202$XW@M@))))
                                                                   (g$library-import$10179$XW@M@
                                                                     (case-lambda
                                                                       ((g$e$10188$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$t$10189$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10190$XW@M@)
                                                                                (if g$ls/false$10190$XW@M@
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10191$XW@M@
                                                                                         g$imp*$10192$XW@M@)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7914$XW@M@
                                                                                              (g$syntax->datum$7974$XW@M@
                                                                                                g$imp*$10192$XW@M@))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10195$XW@M@
                                                                                              g$subst-labels$10196$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10197$XW@M@
                                                                                                  g$subst-names$10198$XW@M@)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10199$XW@M@)
                                                                                                       (g$datum->stx$7570$XW@M@
                                                                                                         g$ctxt$10191$XW@M@
                                                                                                         g$name$10199$XW@M@)))
                                                                                                    g$subst-names$10198$XW@M@)
                                                                                                  g$subst-labels$10197$XW@M@)))
                                                                                             g$subst-labels$10196$XW@M@
                                                                                             g$subst-names$10195$XW@M@))))))
                                                                                    g$ls/false$10190$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$t$10200$XW@M@)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10201$XW@M@)
                                                                                          (if g$ls/false$10201$XW@M@
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7971$XW@M@
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10188$XW@M@)))
                                                                                              g$ls/false$10201$XW@M@)
                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10200$XW@M@))))
                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                         g$t$10200$XW@M@
                                                                                         '_))))
                                                                                   g$t$10189$XW@M@))))
                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                               g$t$10189$XW@M@
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10188$XW@M@)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10177$XW@M@
                                                                      g$e$10165$XW@M@)
                                                                  (g$module-import$10178$XW@M@
                                                                    g$e$10165$XW@M@
                                                                    g$r$10157$XW@M@)
                                                                  (g$library-import$10179$XW@M@
                                                                    g$e$10165$XW@M@))))
                                                             (case-lambda
                                                               ((g$id*$10182$XW@M@
                                                                  g$lab*$10183$XW@M@)
                                                                ((case-lambda
                                                                   ((g$lab*$10184$XW@M@
                                                                      g$id*$10185$XW@M@)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10186$XW@M@
                                                                           g$lab$10187$XW@M@)
                                                                         (g$extend-rib!$7551$XW@M@
                                                                           g$rib$10163$XW@M@
                                                                           g$id$10186$XW@M@
                                                                           g$lab$10187$XW@M@)))
                                                                      g$id*$10185$XW@M@
                                                                      g$lab*$10184$XW@M@)))
                                                                 g$lab*$10183$XW@M@
                                                                 g$id*$10182$XW@M@))))))))
                                                     (g$chi-body*$7909$XW@M@
                                                       (cdr g$e*$10156$XW@M@)
                                                       g$r$10157$XW@M@
                                                       g$mr$10158$XW@M@
                                                       g$lex*$10159$XW@M@
                                                       g$rhs*$10160$XW@M@
                                                       g$mod**$10161$XW@M@
                                                       g$kwd*$10175$XW@M@
                                                       g$rib$10163$XW@M@
                                                       g$top?$10164$XW@M@))
                                                   (if g$top?$10164$XW@M@
                                                     (g$chi-body*$7909$XW@M@
                                                       (cdr g$e*$10156$XW@M@)
                                                       g$r$10157$XW@M@
                                                       g$mr$10158$XW@M@
                                                       (cons
                                                         (g$gen-lexical$7531$XW@M@
                                                           'dummy)
                                                         g$lex*$10159$XW@M@)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$10165$XW@M@)
                                                         g$rhs*$10160$XW@M@)
                                                       g$mod**$10161$XW@M@
                                                       g$kwd*$10175$XW@M@
                                                       g$rib$10163$XW@M@
                                                       g$top?$10164$XW@M@)
                                                     (values
                                                       g$e*$10156$XW@M@
                                                       g$r$10157$XW@M@
                                                       g$mr$10158$XW@M@
                                                       g$lex*$10159$XW@M@
                                                       g$rhs*$10160$XW@M@
                                                       g$mod**$10161$XW@M@
                                                       g$kwd*$10175$XW@M@))))))))))))))
                            g$type$10174$XW@M@)))
                        (if (g$id?$7587$XW@M@ g$kwd$10172$XW@M@)
                          (cons g$kwd$10172$XW@M@ g$kwd*$10162$XW@M@)
                          g$kwd*$10162$XW@M@))))
                    g$kwd$10171$XW@M@
                    g$value$10170$XW@M@
                    g$type$10169$XW@M@))))))
           (car g$e*$10156$XW@M@))))))
   (g$expand-transformer$7910$XW@M@
     g$expand-transformer$11360$XW@M@
     (case-lambda
       ((g$expr$10292$XW@M@ g$r$10293$XW@M@)
        ((case-lambda
           ((g$rtc$10294$XW@M@)
            ((case-lambda
               ((g$expanded-rhs$10295$XW@M@)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10296$XW@M@)
                        (case-lambda
                          ((g$x$10297$XW@M@)
                           (begin
                             (g$invoke-library$7402$XW@M@ g$x$10297$XW@M@)
                             (g$mark-visit$10296$XW@M@ g$x$10297$XW@M@))))))
                     (g$vis-collector$7918$XW@M@))
                    (g$rtc$10294$XW@M@))
                  g$expanded-rhs$10295$XW@M@)))
             ((case-lambda
                ((g$inv-collector$10302$XW@M@
                   g$vis-collector$10303$XW@M@
                   g$inv-collector$10304$XW@M@
                   g$vis-collector$10305$XW@M@)
                 ((case-lambda
                    ((g$swap$10306$XW@M@)
                     (dynamic-wind
                       g$swap$10306$XW@M@
                       (case-lambda
                         (()
                          (g$chi-expr$7883$XW@M@
                            g$expr$10292$XW@M@
                            g$r$10293$XW@M@
                            g$r$10293$XW@M@)))
                       g$swap$10306$XW@M@)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10307$XW@M@)
                           (begin
                             (g$inv-collector$10302$XW@M@
                               g$inv-collector$10304$XW@M@)
                             (set! g$inv-collector$10304$XW@M@
                               g$t$10307$XW@M@))))
                        (g$inv-collector$10302$XW@M@))
                       ((case-lambda
                          ((g$t$10308$XW@M@)
                           (begin
                             (g$vis-collector$10303$XW@M@
                               g$vis-collector$10305$XW@M@)
                             (set! g$vis-collector$10305$XW@M@
                               g$t$10308$XW@M@))))
                        (g$vis-collector$10303$XW@M@))))))))
              g$inv-collector$7917$XW@M@
              g$vis-collector$7918$XW@M@
              g$rtc$10294$XW@M@
              (case-lambda ((g$x$10309$XW@M@) (values)))))))
         (g$make-collector$7916$XW@M@)))))
   (g$parse-exports$7911$XW@M@
     g$parse-exports$11361$XW@M@
     (case-lambda
       ((g$exp*$10310$XW@M@)
        (letrec* ((g$idsyn?$10311$XW@M@
                    (case-lambda
                      ((g$x$10326$XW@M@)
                       (symbol?
                         (g$syntax->datum$7974$XW@M@ g$x$10326$XW@M@))))))
          ((letrec ((g$f$10312$XW@M@
                      (case-lambda
                        ((g$exp*$10313$XW@M@
                           g$int*$10314$XW@M@
                           g$ext*$10315$XW@M@)
                         (if (null? g$exp*$10313$XW@M@)
                           (begin
                             ((case-lambda
                                ((g$id*$10316$XW@M@)
                                 (if (g$valid-bound-ids?$7592$XW@M@
                                       g$id*$10316$XW@M@)
                                   (void)
                                   (g$syntax-violation$7971$XW@M@
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7893$XW@M@
                                       g$id*$10316$XW@M@)))))
                              (map (case-lambda
                                     ((g$x$10317$XW@M@)
                                      (g$make-stx$7560$XW@M@
                                        g$x$10317$XW@M@
                                        g$top-mark*$7529$XW@M@
                                        '()
                                        '())))
                                   g$ext*$10315$XW@M@))
                             (values
                               (map g$syntax->datum$7974$XW@M@
                                    g$int*$10314$XW@M@)
                               (map g$syntax->datum$7974$XW@M@
                                    g$ext*$10315$XW@M@)))
                           ((case-lambda
                              ((g$t$10318$XW@M@)
                               ((case-lambda
                                  ((g$ls/false$10319$XW@M@)
                                   (if g$ls/false$10319$XW@M@
                                     (apply
                                       (case-lambda
                                         ((g$rename$10320$XW@M@
                                            g$i*$10321$XW@M@
                                            g$e*$10322$XW@M@)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7974$XW@M@
                                                           g$rename$10320$XW@M@)
                                                         'rename)
                                                  (if (g$for-all$5871$XW@M@
                                                        g$idsyn?$10311$XW@M@
                                                        g$i*$10321$XW@M@)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5871$XW@M@
                                                        g$idsyn?$10311$XW@M@
                                                        g$e*$10322$XW@M@))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7971$XW@M@
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10313$XW@M@)))
                                            (g$f$10312$XW@M@
                                              (cdr g$exp*$10313$XW@M@)
                                              (append
                                                g$i*$10321$XW@M@
                                                g$int*$10314$XW@M@)
                                              (append
                                                g$e*$10322$XW@M@
                                                g$ext*$10315$XW@M@)))))
                                       g$ls/false$10319$XW@M@)
                                     ((case-lambda
                                        ((g$t$10323$XW@M@)
                                         ((case-lambda
                                            ((g$ls/false$10324$XW@M@)
                                             (if g$ls/false$10324$XW@M@
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10325$XW@M@)
                                                    (begin
                                                      (if (g$idsyn?$10311$XW@M@
                                                            g$ie$10325$XW@M@)
                                                        (void)
                                                        (g$syntax-violation$7971$XW@M@
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10325$XW@M@))
                                                      (g$f$10312$XW@M@
                                                        (cdr g$exp*$10313$XW@M@)
                                                        (cons
                                                          g$ie$10325$XW@M@
                                                          g$int*$10314$XW@M@)
                                                        (cons
                                                          g$ie$10325$XW@M@
                                                          g$ext*$10315$XW@M@)))))
                                                 g$ls/false$10324$XW@M@)
                                               (g$syntax-violation$7971$XW@M@
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10323$XW@M@))))
                                          (g$syntax-dispatch$7865$XW@M@
                                            g$t$10323$XW@M@
                                            'any))))
                                      g$t$10318$XW@M@))))
                                (g$syntax-dispatch$7865$XW@M@
                                  g$t$10318$XW@M@
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10313$XW@M@)))))))
             g$f$10312$XW@M@)
           g$exp*$10310$XW@M@
           '()
           '())))))
   (g$parse-library-name$7912$XW@M@
     g$parse-library-name$11362$XW@M@
     (case-lambda
       ((g$spec$10327$XW@M@)
        (letrec* ((g$parse$10328$XW@M@
                    (case-lambda
                      ((g$x$10335$XW@M@)
                       ((case-lambda
                          ((g$t$10336$XW@M@)
                           ((case-lambda
                              ((g$ls/false$10337$XW@M@)
                               (if (if g$ls/false$10337$XW@M@
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10338$XW@M@)
                                            (g$for-all$5871$XW@M@
                                              (case-lambda
                                                ((g$x$10339$XW@M@)
                                                 ((case-lambda
                                                    ((g$x$10340$XW@M@)
                                                     (if (integer?
                                                           g$x$10340$XW@M@)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10340$XW@M@))
                                                       '#f)))
                                                  (g$syntax->datum$7974$XW@M@
                                                    g$x$10339$XW@M@))))
                                              g$v*$10338$XW@M@)))
                                         g$ls/false$10337$XW@M@))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10341$XW@M@)
                                      (values
                                        '()
                                        (map g$syntax->datum$7974$XW@M@
                                             g$v*$10341$XW@M@))))
                                   g$ls/false$10337$XW@M@)
                                 ((case-lambda
                                    ((g$t$10342$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$10343$XW@M@)
                                         (if (if g$ls/false$10343$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10344$XW@M@
                                                        g$rest$10345$XW@M@)
                                                      (symbol?
                                                        (g$syntax->datum$7974$XW@M@
                                                          g$x$10344$XW@M@))))
                                                   g$ls/false$10343$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10346$XW@M@
                                                  g$rest$10347$XW@M@)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10328$XW@M@
                                                       g$rest$10347$XW@M@)))
                                                  (case-lambda
                                                    ((g$x*$10350$XW@M@
                                                       g$v*$10351$XW@M@)
                                                     ((case-lambda
                                                        ((g$v*$10352$XW@M@
                                                           g$x*$10353$XW@M@)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7974$XW@M@
                                                               g$x$10346$XW@M@)
                                                             g$x*$10353$XW@M@)
                                                           g$v*$10352$XW@M@)))
                                                      g$v*$10351$XW@M@
                                                      g$x*$10350$XW@M@))))))
                                             g$ls/false$10343$XW@M@)
                                           ((case-lambda
                                              ((g$t$10354$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$10355$XW@M@)
                                                   (if g$ls/false$10355$XW@M@
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10355$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$10356$XW@M@)
                                                         ((case-lambda
                                                            ((g$ls/false$10357$XW@M@)
                                                             (if g$ls/false$10357$XW@M@
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7971$XW@M@
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10327$XW@M@)))
                                                                 g$ls/false$10357$XW@M@)
                                                               (g$syntax-violation$7971$XW@M@
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10356$XW@M@))))
                                                          (g$syntax-dispatch$7865$XW@M@
                                                            g$t$10356$XW@M@
                                                            '_))))
                                                      g$t$10354$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$10354$XW@M@
                                                  '()))))
                                            g$t$10342$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$10342$XW@M@
                                        '(any . any)))))
                                  g$t$10336$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$10336$XW@M@
                              '(each-any)))))
                        g$x$10335$XW@M@)))))
          (call-with-values
            (case-lambda (() (g$parse$10328$XW@M@ g$spec$10327$XW@M@)))
            (case-lambda
              ((g$name*$10331$XW@M@ g$ver*$10332$XW@M@)
               ((case-lambda
                  ((g$ver*$10333$XW@M@ g$name*$10334$XW@M@)
                   (begin
                     (if (null? g$name*$10334$XW@M@)
                       (g$syntax-violation$7971$XW@M@
                         '#f
                         '"empty library name"
                         g$spec$10327$XW@M@)
                       (void))
                     (values g$name*$10334$XW@M@ g$ver*$10333$XW@M@))))
                g$ver*$10332$XW@M@
                g$name*$10331$XW@M@))))))))
   (g$parse-library$7913$XW@M@
     g$parse-library$11363$XW@M@
     (case-lambda
       ((g$e$10358$XW@M@)
        ((case-lambda
           ((g$t$10359$XW@M@)
            ((case-lambda
               ((g$ls/false$10360$XW@M@)
                (if (if g$ls/false$10360$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10361$XW@M@
                               g$name*$10362$XW@M@
                               g$export$10363$XW@M@
                               g$exp*$10364$XW@M@
                               g$import$10365$XW@M@
                               g$imp*$10366$XW@M@
                               g$b*$10367$XW@M@)
                             (if (eq? (g$syntax->datum$7974$XW@M@
                                        g$export$10363$XW@M@)
                                      'export)
                               (if (eq? (g$syntax->datum$7974$XW@M@
                                          g$import$10365$XW@M@)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7974$XW@M@
                                          g$library$10361$XW@M@)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10360$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10368$XW@M@
                         g$name*$10369$XW@M@
                         g$export$10370$XW@M@
                         g$exp*$10371$XW@M@
                         g$import$10372$XW@M@
                         g$imp*$10373$XW@M@
                         g$b*$10374$XW@M@)
                       (values
                         g$name*$10369$XW@M@
                         g$exp*$10371$XW@M@
                         g$imp*$10373$XW@M@
                         g$b*$10374$XW@M@)))
                    g$ls/false$10360$XW@M@)
                  ((case-lambda
                     ((g$t$10375$XW@M@)
                      ((case-lambda
                         ((g$ls/false$10376$XW@M@)
                          (if g$ls/false$10376$XW@M@
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7971$XW@M@
                                   '#f
                                   '"malformed library"
                                   g$e$10358$XW@M@)))
                              g$ls/false$10376$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$10375$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@ g$t$10375$XW@M@ '_))))
                   g$t$10359$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$10359$XW@M@
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10358$XW@M@))))
   (g$parse-import-spec*$7914$XW@M@
     g$parse-import-spec*$11364$XW@M@
     (case-lambda
       ((g$imp*$10377$XW@M@)
        (letrec* ((g$idsyn?$10378$XW@M@
                    (case-lambda
                      ((g$x$10637$XW@M@)
                       (symbol? (g$syntax->datum$7974$XW@M@ g$x$10637$XW@M@)))))
                  (g$dup-error$10379$XW@M@
                    (case-lambda
                      ((g$name$10636$XW@M@)
                       (g$syntax-violation$7971$XW@M@
                         'import
                         '"two imports with different bindings"
                         g$name$10636$XW@M@))))
                  (g$merge-substs$10380$XW@M@
                    (case-lambda
                      ((g$s$10627$XW@M@ g$subst$10628$XW@M@)
                       (letrec* ((g$insert-to-subst$10629$XW@M@
                                   (case-lambda
                                     ((g$a$10630$XW@M@ g$subst$10631$XW@M@)
                                      ((case-lambda
                                         ((g$name$10632$XW@M@
                                            g$label$10633$XW@M@)
                                          ((case-lambda
                                             ((g$t$10634$XW@M@)
                                              (if g$t$10634$XW@M@
                                                ((case-lambda
                                                   ((g$x$10635$XW@M@)
                                                    (if (eq? (cdr g$x$10635$XW@M@)
                                                             g$label$10633$XW@M@)
                                                      g$subst$10631$XW@M@
                                                      (g$dup-error$10379$XW@M@
                                                        g$name$10632$XW@M@))))
                                                 g$t$10634$XW@M@)
                                                (cons
                                                  g$a$10630$XW@M@
                                                  g$subst$10631$XW@M@))))
                                           (assq
                                             g$name$10632$XW@M@
                                             g$subst$10631$XW@M@))))
                                       (car g$a$10630$XW@M@)
                                       (cdr g$a$10630$XW@M@))))))
                         (if (null? g$s$10627$XW@M@)
                           g$subst$10628$XW@M@
                           (g$insert-to-subst$10629$XW@M@
                             (car g$s$10627$XW@M@)
                             (g$merge-substs$10380$XW@M@
                               (cdr g$s$10627$XW@M@)
                               g$subst$10628$XW@M@)))))))
                  (g$exclude*$10381$XW@M@
                    (case-lambda
                      ((g$sym*$10603$XW@M@ g$subst$10604$XW@M@)
                       (letrec* ((g$exclude$10605$XW@M@
                                   (case-lambda
                                     ((g$sym$10618$XW@M@ g$subst$10619$XW@M@)
                                      (if (null? g$subst$10619$XW@M@)
                                        (g$syntax-violation$7971$XW@M@
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10618$XW@M@)
                                        (if (eq? g$sym$10618$XW@M@
                                                 (g$caar$5401$XW@M@
                                                   g$subst$10619$XW@M@))
                                          (values
                                            (g$cdar$5403$XW@M@
                                              g$subst$10619$XW@M@)
                                            (cdr g$subst$10619$XW@M@))
                                          ((case-lambda
                                             ((g$a$10620$XW@M@)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10605$XW@M@
                                                     g$sym$10618$XW@M@
                                                     (cdr g$subst$10619$XW@M@))))
                                                (case-lambda
                                                  ((g$old$10623$XW@M@
                                                     g$subst$10624$XW@M@)
                                                   ((case-lambda
                                                      ((g$subst$10625$XW@M@
                                                         g$old$10626$XW@M@)
                                                       (values
                                                         g$old$10626$XW@M@
                                                         (cons
                                                           g$a$10620$XW@M@
                                                           g$subst$10625$XW@M@))))
                                                    g$subst$10624$XW@M@
                                                    g$old$10623$XW@M@))))))
                                           (car g$subst$10619$XW@M@))))))))
                         (if (null? g$sym*$10603$XW@M@)
                           (values '() g$subst$10604$XW@M@)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10605$XW@M@
                                  (car g$sym*$10603$XW@M@)
                                  g$subst$10604$XW@M@)))
                             (case-lambda
                               ((g$old$10608$XW@M@ g$subst$10609$XW@M@)
                                ((case-lambda
                                   ((g$subst$10610$XW@M@ g$old$10611$XW@M@)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10381$XW@M@
                                           (cdr g$sym*$10603$XW@M@)
                                           g$subst$10610$XW@M@)))
                                      (case-lambda
                                        ((g$old*$10614$XW@M@
                                           g$subst$10615$XW@M@)
                                         ((case-lambda
                                            ((g$subst$10616$XW@M@
                                               g$old*$10617$XW@M@)
                                             (values
                                               (cons
                                                 g$old$10611$XW@M@
                                                 g$old*$10617$XW@M@)
                                               g$subst$10616$XW@M@)))
                                          g$subst$10615$XW@M@
                                          g$old*$10614$XW@M@))))))
                                 g$subst$10609$XW@M@
                                 g$old$10608$XW@M@)))))))))
                  (g$find*$10382$XW@M@
                    (case-lambda
                      ((g$sym*$10599$XW@M@ g$subst$10600$XW@M@)
                       (map (case-lambda
                              ((g$x$10601$XW@M@)
                               ((case-lambda
                                  ((g$t$10602$XW@M@)
                                   (if g$t$10602$XW@M@
                                     (cdr g$t$10602$XW@M@)
                                     (g$syntax-violation$7971$XW@M@
                                       'import
                                       '"cannot find identifier"
                                       g$x$10601$XW@M@))))
                                (assq g$x$10601$XW@M@ g$subst$10600$XW@M@))))
                            g$sym*$10599$XW@M@))))
                  (g$rem*$10383$XW@M@
                    (case-lambda
                      ((g$sym*$10595$XW@M@ g$subst$10596$XW@M@)
                       ((letrec ((g$f$10597$XW@M@
                                   (case-lambda
                                     ((g$subst$10598$XW@M@)
                                      (if (null? g$subst$10598$XW@M@)
                                        '()
                                        (if (memq
                                              (g$caar$5401$XW@M@
                                                g$subst$10598$XW@M@)
                                              g$sym*$10595$XW@M@)
                                          (g$f$10597$XW@M@
                                            (cdr g$subst$10598$XW@M@))
                                          (cons
                                            (car g$subst$10598$XW@M@)
                                            (g$f$10597$XW@M@
                                              (cdr g$subst$10598$XW@M@)))))))))
                          g$f$10597$XW@M@)
                        g$subst$10596$XW@M@))))
                  (g$remove-dups$10384$XW@M@
                    (case-lambda
                      ((g$ls$10594$XW@M@)
                       (if (null? g$ls$10594$XW@M@)
                         '()
                         (if (memq
                               (car g$ls$10594$XW@M@)
                               (cdr g$ls$10594$XW@M@))
                           (g$remove-dups$10384$XW@M@ (cdr g$ls$10594$XW@M@))
                           (cons
                             (car g$ls$10594$XW@M@)
                             (g$remove-dups$10384$XW@M@
                               (cdr g$ls$10594$XW@M@))))))))
                  (g$parse-library-name$10385$XW@M@
                    (case-lambda
                      ((g$spec$10479$XW@M@)
                       (letrec* ((g$subversion?$10480$XW@M@
                                   (case-lambda
                                     ((g$x$10593$XW@M@)
                                      (if (integer? g$x$10593$XW@M@)
                                        (if (exact? g$x$10593$XW@M@)
                                          (begin '#f (>= g$x$10593$XW@M@ '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$10481$XW@M@
                                   (case-lambda
                                     ((g$x*$10545$XW@M@)
                                      ((case-lambda
                                         ((g$t$10546$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$10547$XW@M@)
                                              (if (if g$ls/false$10547$XW@M@
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10548$XW@M@)
                                                           (g$subversion?$10480$XW@M@
                                                             (g$syntax->datum$7974$XW@M@
                                                               g$n$10548$XW@M@))))
                                                        g$ls/false$10547$XW@M@))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10549$XW@M@)
                                                     (case-lambda
                                                       ((g$x$10550$XW@M@)
                                                        (= g$x$10550$XW@M@
                                                           (g$syntax->datum$7974$XW@M@
                                                             g$n$10549$XW@M@))))))
                                                  g$ls/false$10547$XW@M@)
                                                ((case-lambda
                                                   ((g$t$10551$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$10552$XW@M@)
                                                        (if (if g$ls/false$10552$XW@M@
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10553$XW@M@
                                                                       g$sub*$10554$XW@M@)
                                                                     (eq? (g$syntax->datum$7974$XW@M@
                                                                            g$p?$10553$XW@M@)
                                                                          'and)))
                                                                  g$ls/false$10552$XW@M@))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10555$XW@M@
                                                                 g$sub*$10556$XW@M@)
                                                               ((case-lambda
                                                                  ((g$p*$10557$XW@M@)
                                                                   (case-lambda
                                                                     ((g$x$10558$XW@M@)
                                                                      (g$for-all$5871$XW@M@
                                                                        (case-lambda
                                                                          ((g$p$10559$XW@M@)
                                                                           (g$p$10559$XW@M@
                                                                             g$x$10558$XW@M@)))
                                                                        g$p*$10557$XW@M@)))))
                                                                (map g$subversion-pred$10481$XW@M@
                                                                     g$sub*$10556$XW@M@))))
                                                            g$ls/false$10552$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$10560$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$10561$XW@M@)
                                                                  (if (if g$ls/false$10561$XW@M@
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10562$XW@M@
                                                                                 g$sub*$10563$XW@M@)
                                                                               (eq? (g$syntax->datum$7974$XW@M@
                                                                                      g$p?$10562$XW@M@)
                                                                                    'or)))
                                                                            g$ls/false$10561$XW@M@))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10564$XW@M@
                                                                           g$sub*$10565$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$p*$10566$XW@M@)
                                                                             (case-lambda
                                                                               ((g$x$10567$XW@M@)
                                                                                (g$exists$5872$XW@M@
                                                                                  (case-lambda
                                                                                    ((g$p$10568$XW@M@)
                                                                                     (g$p$10568$XW@M@
                                                                                       g$x$10567$XW@M@)))
                                                                                  g$p*$10566$XW@M@)))))
                                                                          (map g$subversion-pred$10481$XW@M@
                                                                               g$sub*$10565$XW@M@))))
                                                                      g$ls/false$10561$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$10569$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10570$XW@M@)
                                                                            (if (if g$ls/false$10570$XW@M@
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10571$XW@M@
                                                                                           g$sub$10572$XW@M@)
                                                                                         (eq? (g$syntax->datum$7974$XW@M@
                                                                                                g$p?$10571$XW@M@)
                                                                                              'not)))
                                                                                      g$ls/false$10570$XW@M@))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10573$XW@M@
                                                                                     g$sub$10574$XW@M@)
                                                                                   ((case-lambda
                                                                                      ((g$p$10575$XW@M@)
                                                                                       (case-lambda
                                                                                         ((g$x$10576$XW@M@)
                                                                                          (not (g$p$10575$XW@M@
                                                                                                 g$x$10576$XW@M@))))))
                                                                                    (g$subversion-pred$10481$XW@M@
                                                                                      g$sub$10574$XW@M@))))
                                                                                g$ls/false$10570$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$t$10577$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10578$XW@M@)
                                                                                      (if (if g$ls/false$10578$XW@M@
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10579$XW@M@
                                                                                                     g$n$10580$XW@M@)
                                                                                                   (if (eq? (g$syntax->datum$7974$XW@M@
                                                                                                              g$p?$10579$XW@M@)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10480$XW@M@
                                                                                                         (g$syntax->datum$7974$XW@M@
                                                                                                           g$n$10580$XW@M@)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10578$XW@M@))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10581$XW@M@
                                                                                               g$n$10582$XW@M@)
                                                                                             (case-lambda
                                                                                               ((g$x$10583$XW@M@)
                                                                                                (<= g$x$10583$XW@M@
                                                                                                    (g$syntax->datum$7974$XW@M@
                                                                                                      g$n$10582$XW@M@))))))
                                                                                          g$ls/false$10578$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$t$10584$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10585$XW@M@)
                                                                                                (if (if g$ls/false$10585$XW@M@
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10586$XW@M@
                                                                                                               g$n$10587$XW@M@)
                                                                                                             (if (eq? (g$syntax->datum$7974$XW@M@
                                                                                                                        g$p?$10586$XW@M@)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10480$XW@M@
                                                                                                                   g$n$10587$XW@M@))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10585$XW@M@))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10588$XW@M@
                                                                                                         g$n$10589$XW@M@)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10590$XW@M@)
                                                                                                          (>= g$x$10590$XW@M@
                                                                                                              (g$syntax->datum$7974$XW@M@
                                                                                                                g$n$10589$XW@M@))))))
                                                                                                    g$ls/false$10585$XW@M@)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10591$XW@M@)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10592$XW@M@)
                                                                                                          (if g$ls/false$10592$XW@M@
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7971$XW@M@
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10479$XW@M@
                                                                                                                   g$x*$10545$XW@M@)))
                                                                                                              g$ls/false$10592$XW@M@)
                                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10591$XW@M@))))
                                                                                                       (g$syntax-dispatch$7865$XW@M@
                                                                                                         g$t$10591$XW@M@
                                                                                                         '_))))
                                                                                                   g$t$10584$XW@M@))))
                                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                                               g$t$10584$XW@M@
                                                                                               '(any any)))))
                                                                                         g$t$10577$XW@M@))))
                                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                                     g$t$10577$XW@M@
                                                                                     '(any any)))))
                                                                               g$t$10569$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$10569$XW@M@
                                                                           '(any any)))))
                                                                     g$t$10560$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$10560$XW@M@
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10551$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$10551$XW@M@
                                                       '(any . each-any)))))
                                                 g$t$10546$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$10546$XW@M@
                                             'any))))
                                       g$x*$10545$XW@M@))))
                                 (g$version-pred$10482$XW@M@
                                   (case-lambda
                                     ((g$x*$10505$XW@M@)
                                      ((case-lambda
                                         ((g$t$10506$XW@M@)
                                          ((case-lambda
                                             ((g$ls/false$10507$XW@M@)
                                              (if g$ls/false$10507$XW@M@
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10508$XW@M@)
                                                        '#t))))
                                                  g$ls/false$10507$XW@M@)
                                                ((case-lambda
                                                   ((g$t$10509$XW@M@)
                                                    ((case-lambda
                                                       ((g$ls/false$10510$XW@M@)
                                                        (if (if g$ls/false$10510$XW@M@
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10511$XW@M@
                                                                       g$ver*$10512$XW@M@)
                                                                     (eq? (g$syntax->datum$7974$XW@M@
                                                                            g$c$10511$XW@M@)
                                                                          'and)))
                                                                  g$ls/false$10510$XW@M@))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10513$XW@M@
                                                                 g$ver*$10514$XW@M@)
                                                               ((case-lambda
                                                                  ((g$p*$10515$XW@M@)
                                                                   (case-lambda
                                                                     ((g$x$10516$XW@M@)
                                                                      (g$for-all$5871$XW@M@
                                                                        (case-lambda
                                                                          ((g$p$10517$XW@M@)
                                                                           (g$p$10517$XW@M@
                                                                             g$x$10516$XW@M@)))
                                                                        g$p*$10515$XW@M@)))))
                                                                (map g$version-pred$10482$XW@M@
                                                                     g$ver*$10514$XW@M@))))
                                                            g$ls/false$10510$XW@M@)
                                                          ((case-lambda
                                                             ((g$t$10518$XW@M@)
                                                              ((case-lambda
                                                                 ((g$ls/false$10519$XW@M@)
                                                                  (if (if g$ls/false$10519$XW@M@
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10520$XW@M@
                                                                                 g$ver*$10521$XW@M@)
                                                                               (eq? (g$syntax->datum$7974$XW@M@
                                                                                      g$c$10520$XW@M@)
                                                                                    'or)))
                                                                            g$ls/false$10519$XW@M@))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10522$XW@M@
                                                                           g$ver*$10523$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$p*$10524$XW@M@)
                                                                             (case-lambda
                                                                               ((g$x$10525$XW@M@)
                                                                                (g$exists$5872$XW@M@
                                                                                  (case-lambda
                                                                                    ((g$p$10526$XW@M@)
                                                                                     (g$p$10526$XW@M@
                                                                                       g$x$10525$XW@M@)))
                                                                                  g$p*$10524$XW@M@)))))
                                                                          (map g$version-pred$10482$XW@M@
                                                                               g$ver*$10523$XW@M@))))
                                                                      g$ls/false$10519$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$t$10527$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10528$XW@M@)
                                                                            (if (if g$ls/false$10528$XW@M@
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10529$XW@M@
                                                                                           g$ver$10530$XW@M@)
                                                                                         (eq? (g$syntax->datum$7974$XW@M@
                                                                                                g$c$10529$XW@M@)
                                                                                              'not)))
                                                                                      g$ls/false$10528$XW@M@))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10531$XW@M@
                                                                                     g$ver$10532$XW@M@)
                                                                                   ((case-lambda
                                                                                      ((g$p$10533$XW@M@)
                                                                                       (case-lambda
                                                                                         ((g$x$10534$XW@M@)
                                                                                          (not (g$p$10533$XW@M@
                                                                                                 g$x$10534$XW@M@))))))
                                                                                    (g$version-pred$10482$XW@M@
                                                                                      g$ver$10532$XW@M@))))
                                                                                g$ls/false$10528$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$t$10535$XW@M@)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10536$XW@M@)
                                                                                      (if g$ls/false$10536$XW@M@
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10537$XW@M@)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10538$XW@M@)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10539$XW@M@)
                                                                                                    ((letrec ((g$f$10540$XW@M@
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10541$XW@M@
                                                                                                                     g$x$10542$XW@M@)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10541$XW@M@)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10542$XW@M@)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10541$XW@M@)
                                                                                                                            (car g$x$10542$XW@M@))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10540$XW@M@
                                                                                                                             (cdr g$p*$10541$XW@M@)
                                                                                                                             (cdr g$x$10542$XW@M@)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10540$XW@M@)
                                                                                                     g$p*$10538$XW@M@
                                                                                                     g$x$10539$XW@M@)))))
                                                                                              (map g$subversion-pred$10481$XW@M@
                                                                                                   g$sub*$10537$XW@M@))))
                                                                                          g$ls/false$10536$XW@M@)
                                                                                        ((case-lambda
                                                                                           ((g$t$10543$XW@M@)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10544$XW@M@)
                                                                                                (if g$ls/false$10544$XW@M@
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7971$XW@M@
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10479$XW@M@
                                                                                                         g$x*$10505$XW@M@)))
                                                                                                    g$ls/false$10544$XW@M@)
                                                                                                  (g$syntax-violation$7971$XW@M@
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10543$XW@M@))))
                                                                                             (g$syntax-dispatch$7865$XW@M@
                                                                                               g$t$10543$XW@M@
                                                                                               '_))))
                                                                                         g$t$10535$XW@M@))))
                                                                                   (g$syntax-dispatch$7865$XW@M@
                                                                                     g$t$10535$XW@M@
                                                                                     'each-any))))
                                                                               g$t$10527$XW@M@))))
                                                                         (g$syntax-dispatch$7865$XW@M@
                                                                           g$t$10527$XW@M@
                                                                           '(any any)))))
                                                                     g$t$10518$XW@M@))))
                                                               (g$syntax-dispatch$7865$XW@M@
                                                                 g$t$10518$XW@M@
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10509$XW@M@))))
                                                     (g$syntax-dispatch$7865$XW@M@
                                                       g$t$10509$XW@M@
                                                       '(any . each-any)))))
                                                 g$t$10506$XW@M@))))
                                           (g$syntax-dispatch$7865$XW@M@
                                             g$t$10506$XW@M@
                                             '()))))
                                       g$x*$10505$XW@M@)))))
                         ((letrec ((g$f$10483$XW@M@
                                     (case-lambda
                                       ((g$x$10484$XW@M@)
                                        ((case-lambda
                                           ((g$t$10485$XW@M@)
                                            ((case-lambda
                                               ((g$ls/false$10486$XW@M@)
                                                (if g$ls/false$10486$XW@M@
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10487$XW@M@)
                                                       (values
                                                         '()
                                                         (g$version-pred$10482$XW@M@
                                                           g$version-spec*$10487$XW@M@))))
                                                    g$ls/false$10486$XW@M@)
                                                  ((case-lambda
                                                     ((g$t$10488$XW@M@)
                                                      ((case-lambda
                                                         ((g$ls/false$10489$XW@M@)
                                                          (if (if g$ls/false$10489$XW@M@
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10490$XW@M@
                                                                         g$x*$10491$XW@M@)
                                                                       (g$idsyn?$10378$XW@M@
                                                                         g$x$10490$XW@M@)))
                                                                    g$ls/false$10489$XW@M@))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10492$XW@M@
                                                                   g$x*$10493$XW@M@)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10483$XW@M@
                                                                        g$x*$10493$XW@M@)))
                                                                   (case-lambda
                                                                     ((g$name$10496$XW@M@
                                                                        g$pred$10497$XW@M@)
                                                                      ((case-lambda
                                                                         ((g$pred$10498$XW@M@
                                                                            g$name$10499$XW@M@)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7974$XW@M@
                                                                                g$x$10492$XW@M@)
                                                                              g$name$10499$XW@M@)
                                                                            g$pred$10498$XW@M@)))
                                                                       g$pred$10497$XW@M@
                                                                       g$name$10496$XW@M@))))))
                                                              g$ls/false$10489$XW@M@)
                                                            ((case-lambda
                                                               ((g$t$10500$XW@M@)
                                                                ((case-lambda
                                                                   ((g$ls/false$10501$XW@M@)
                                                                    (if g$ls/false$10501$XW@M@
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10502$XW@M@)
                                                                                '#t)))))
                                                                        g$ls/false$10501$XW@M@)
                                                                      ((case-lambda
                                                                         ((g$t$10503$XW@M@)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10504$XW@M@)
                                                                              (if g$ls/false$10504$XW@M@
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7971$XW@M@
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10479$XW@M@)))
                                                                                  g$ls/false$10504$XW@M@)
                                                                                (g$syntax-violation$7971$XW@M@
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10503$XW@M@))))
                                                                           (g$syntax-dispatch$7865$XW@M@
                                                                             g$t$10503$XW@M@
                                                                             '_))))
                                                                       g$t$10500$XW@M@))))
                                                                 (g$syntax-dispatch$7865$XW@M@
                                                                   g$t$10500$XW@M@
                                                                   '()))))
                                                             g$t$10488$XW@M@))))
                                                       (g$syntax-dispatch$7865$XW@M@
                                                         g$t$10488$XW@M@
                                                         '(any . any)))))
                                                   g$t$10485$XW@M@))))
                                             (g$syntax-dispatch$7865$XW@M@
                                               g$t$10485$XW@M@
                                               '(each-any)))))
                                         g$x$10484$XW@M@)))))
                            g$f$10483$XW@M@)
                          g$spec$10479$XW@M@)))))
                  (g$import-library$10386$XW@M@
                    (case-lambda
                      ((g$spec*$10471$XW@M@)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10385$XW@M@
                              g$spec*$10471$XW@M@)))
                         (case-lambda
                           ((g$name$10474$XW@M@ g$pred$10475$XW@M@)
                            ((case-lambda
                               ((g$pred$10476$XW@M@ g$name$10477$XW@M@)
                                (begin
                                  (if (null? g$name$10477$XW@M@)
                                    (g$syntax-violation$7971$XW@M@
                                      'import
                                      '"empty library name"
                                      g$spec*$10471$XW@M@)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10478$XW@M@)
                                      (begin
                                        (if g$lib$10478$XW@M@
                                          (void)
                                          (g$syntax-violation$7971$XW@M@
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10477$XW@M@))
                                        (if (g$pred$10476$XW@M@
                                              (g$library-version$7355$XW@M@
                                                g$lib$10478$XW@M@))
                                          (void)
                                          (g$syntax-violation$7971$XW@M@
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10471$XW@M@
                                            g$lib$10478$XW@M@))
                                        ((g$imp-collector$7919$XW@M@)
                                         g$lib$10478$XW@M@)
                                        (g$library-subst$7359$XW@M@
                                          g$lib$10478$XW@M@))))
                                   (g$find-library-by-name$7395$XW@M@
                                     g$name$10477$XW@M@)))))
                             g$pred$10475$XW@M@
                             g$name$10474$XW@M@)))))))
                  (g$get-import$10387$XW@M@
                    (case-lambda
                      ((g$spec$10400$XW@M@)
                       ((case-lambda
                          ((g$t$10401$XW@M@)
                           ((case-lambda
                              ((g$ls/false$10402$XW@M@)
                               (if (if g$ls/false$10402$XW@M@
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10403$XW@M@ g$x*$10404$XW@M@)
                                            (not (memq
                                                   (g$syntax->datum$7974$XW@M@
                                                     g$x$10403$XW@M@)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10402$XW@M@))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10405$XW@M@ g$x*$10406$XW@M@)
                                      (g$import-library$10386$XW@M@
                                        (cons
                                          g$x$10405$XW@M@
                                          g$x*$10406$XW@M@))))
                                   g$ls/false$10402$XW@M@)
                                 ((case-lambda
                                    ((g$t$10407$XW@M@)
                                     ((case-lambda
                                        ((g$ls/false$10408$XW@M@)
                                         (if (if g$ls/false$10408$XW@M@
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10409$XW@M@
                                                        g$isp$10410$XW@M@
                                                        g$old*$10411$XW@M@
                                                        g$new*$10412$XW@M@)
                                                      (if (eq? (g$syntax->datum$7974$XW@M@
                                                                 g$rename$10409$XW@M@)
                                                               'rename)
                                                        (if (g$for-all$5871$XW@M@
                                                              g$idsyn?$10378$XW@M@
                                                              g$old*$10411$XW@M@)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5871$XW@M@
                                                              g$idsyn?$10378$XW@M@
                                                              g$new*$10412$XW@M@))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10408$XW@M@))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10413$XW@M@
                                                  g$isp$10414$XW@M@
                                                  g$old*$10415$XW@M@
                                                  g$new*$10416$XW@M@)
                                                ((case-lambda
                                                   ((g$subst$10417$XW@M@
                                                      g$old*$10418$XW@M@
                                                      g$new*$10419$XW@M@)
                                                    ((case-lambda
                                                       ((g$old-label*$10420$XW@M@)
                                                        ((case-lambda
                                                           ((g$subst$10421$XW@M@)
                                                            (g$merge-substs$10380$XW@M@
                                                              (map cons
                                                                   g$new*$10419$XW@M@
                                                                   g$old-label*$10420$XW@M@)
                                                              g$subst$10421$XW@M@)))
                                                         (g$rem*$10383$XW@M@
                                                           g$old*$10418$XW@M@
                                                           g$subst$10417$XW@M@))))
                                                     (g$find*$10382$XW@M@
                                                       g$old*$10418$XW@M@
                                                       g$subst$10417$XW@M@))))
                                                 (g$get-import$10387$XW@M@
                                                   g$isp$10414$XW@M@)
                                                 (map g$syntax->datum$7974$XW@M@
                                                      g$old*$10415$XW@M@)
                                                 (map g$syntax->datum$7974$XW@M@
                                                      g$new*$10416$XW@M@))))
                                             g$ls/false$10408$XW@M@)
                                           ((case-lambda
                                              ((g$t$10422$XW@M@)
                                               ((case-lambda
                                                  ((g$ls/false$10423$XW@M@)
                                                   (if (if g$ls/false$10423$XW@M@
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10424$XW@M@
                                                                  g$isp$10425$XW@M@
                                                                  g$sym*$10426$XW@M@)
                                                                (if (eq? (g$syntax->datum$7974$XW@M@
                                                                           g$except$10424$XW@M@)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5871$XW@M@
                                                                      g$idsyn?$10378$XW@M@
                                                                      g$sym*$10426$XW@M@))
                                                                  '#f)))
                                                             g$ls/false$10423$XW@M@))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10427$XW@M@
                                                            g$isp$10428$XW@M@
                                                            g$sym*$10429$XW@M@)
                                                          ((case-lambda
                                                             ((g$subst$10430$XW@M@)
                                                              (g$rem*$10383$XW@M@
                                                                (map g$syntax->datum$7974$XW@M@
                                                                     g$sym*$10429$XW@M@)
                                                                g$subst$10430$XW@M@)))
                                                           (g$get-import$10387$XW@M@
                                                             g$isp$10428$XW@M@))))
                                                       g$ls/false$10423$XW@M@)
                                                     ((case-lambda
                                                        ((g$t$10431$XW@M@)
                                                         ((case-lambda
                                                            ((g$ls/false$10432$XW@M@)
                                                             (if (if g$ls/false$10432$XW@M@
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10433$XW@M@
                                                                            g$isp$10434$XW@M@
                                                                            g$sym*$10435$XW@M@)
                                                                          (if (eq? (g$syntax->datum$7974$XW@M@
                                                                                     g$only$10433$XW@M@)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5871$XW@M@
                                                                                g$idsyn?$10378$XW@M@
                                                                                g$sym*$10435$XW@M@))
                                                                            '#f)))
                                                                       g$ls/false$10432$XW@M@))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10436$XW@M@
                                                                      g$isp$10437$XW@M@
                                                                      g$sym*$10438$XW@M@)
                                                                    ((case-lambda
                                                                       ((g$subst$10439$XW@M@
                                                                          g$sym*$10440$XW@M@)
                                                                        ((case-lambda
                                                                           ((g$sym*$10441$XW@M@)
                                                                            ((case-lambda
                                                                               ((g$lab*$10442$XW@M@)
                                                                                (map cons
                                                                                     g$sym*$10441$XW@M@
                                                                                     g$lab*$10442$XW@M@)))
                                                                             (g$find*$10382$XW@M@
                                                                               g$sym*$10441$XW@M@
                                                                               g$subst$10439$XW@M@))))
                                                                         (g$remove-dups$10384$XW@M@
                                                                           g$sym*$10440$XW@M@))))
                                                                     (g$get-import$10387$XW@M@
                                                                       g$isp$10437$XW@M@)
                                                                     (map g$syntax->datum$7974$XW@M@
                                                                          g$sym*$10438$XW@M@))))
                                                                 g$ls/false$10432$XW@M@)
                                                               ((case-lambda
                                                                  ((g$t$10443$XW@M@)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10444$XW@M@)
                                                                       (if (if g$ls/false$10444$XW@M@
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10445$XW@M@
                                                                                      g$isp$10446$XW@M@
                                                                                      g$p$10447$XW@M@)
                                                                                    (if (eq? (g$syntax->datum$7974$XW@M@
                                                                                               g$prefix$10445$XW@M@)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10378$XW@M@
                                                                                          g$p$10447$XW@M@))
                                                                                      '#f)))
                                                                                 g$ls/false$10444$XW@M@))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10448$XW@M@
                                                                                g$isp$10449$XW@M@
                                                                                g$p$10450$XW@M@)
                                                                              ((case-lambda
                                                                                 ((g$subst$10451$XW@M@
                                                                                    g$prefix$10452$XW@M@)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10453$XW@M@)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10452$XW@M@
                                                                                                (symbol->string
                                                                                                  (car g$x$10453$XW@M@))))
                                                                                            (cdr g$x$10453$XW@M@))))
                                                                                       g$subst$10451$XW@M@)))
                                                                               (g$get-import$10387$XW@M@
                                                                                 g$isp$10449$XW@M@)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7974$XW@M@
                                                                                   g$p$10450$XW@M@)))))
                                                                           g$ls/false$10444$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$t$10454$XW@M@)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10455$XW@M@)
                                                                                 (if (if g$ls/false$10455$XW@M@
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10456$XW@M@
                                                                                                g$spec*$10457$XW@M@)
                                                                                              (eq? (g$syntax->datum$7974$XW@M@
                                                                                                     g$library$10456$XW@M@)
                                                                                                   'library)))
                                                                                           g$ls/false$10455$XW@M@))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10458$XW@M@
                                                                                          g$spec*$10459$XW@M@)
                                                                                        (g$import-library$10386$XW@M@
                                                                                          g$spec*$10459$XW@M@)))
                                                                                     g$ls/false$10455$XW@M@)
                                                                                   ((case-lambda
                                                                                      ((g$t$10460$XW@M@)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10461$XW@M@)
                                                                                           (if (if g$ls/false$10461$XW@M@
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10462$XW@M@
                                                                                                          g$isp$10463$XW@M@
                                                                                                          g$rest$10464$XW@M@)
                                                                                                        (eq? (g$syntax->datum$7974$XW@M@
                                                                                                               g$for$10462$XW@M@)
                                                                                                             'for)))
                                                                                                     g$ls/false$10461$XW@M@))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10465$XW@M@
                                                                                                    g$isp$10466$XW@M@
                                                                                                    g$rest$10467$XW@M@)
                                                                                                  (g$get-import$10387$XW@M@
                                                                                                    g$isp$10466$XW@M@)))
                                                                                               g$ls/false$10461$XW@M@)
                                                                                             ((case-lambda
                                                                                                ((g$t$10468$XW@M@)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10469$XW@M@)
                                                                                                     (if g$ls/false$10469$XW@M@
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10470$XW@M@)
                                                                                                            (g$syntax-violation$7971$XW@M@
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10470$XW@M@)))
                                                                                                         g$ls/false$10469$XW@M@)
                                                                                                       (g$syntax-violation$7971$XW@M@
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10468$XW@M@))))
                                                                                                  (g$syntax-dispatch$7865$XW@M@
                                                                                                    g$t$10468$XW@M@
                                                                                                    'any))))
                                                                                              g$t$10460$XW@M@))))
                                                                                        (g$syntax-dispatch$7865$XW@M@
                                                                                          g$t$10460$XW@M@
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10454$XW@M@))))
                                                                              (g$syntax-dispatch$7865$XW@M@
                                                                                g$t$10454$XW@M@
                                                                                '(any each-any)))))
                                                                          g$t$10443$XW@M@))))
                                                                    (g$syntax-dispatch$7865$XW@M@
                                                                      g$t$10443$XW@M@
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10431$XW@M@))))
                                                          (g$syntax-dispatch$7865$XW@M@
                                                            g$t$10431$XW@M@
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10422$XW@M@))))
                                                (g$syntax-dispatch$7865$XW@M@
                                                  g$t$10422$XW@M@
                                                  '(any any . each-any)))))
                                            g$t$10407$XW@M@))))
                                      (g$syntax-dispatch$7865$XW@M@
                                        g$t$10407$XW@M@
                                        '(any any . #(each (any any)))))))
                                  g$t$10401$XW@M@))))
                            (g$syntax-dispatch$7865$XW@M@
                              g$t$10401$XW@M@
                              '(any . each-any)))))
                        g$spec$10400$XW@M@))))
                  (g$add-imports!$10388$XW@M@
                    (case-lambda
                      ((g$imp$10392$XW@M@ g$h$10393$XW@M@)
                       ((case-lambda
                          ((g$subst$10394$XW@M@)
                           (for-each
                             (case-lambda
                               ((g$x$10395$XW@M@)
                                ((case-lambda
                                   ((g$name$10396$XW@M@ g$label$10397$XW@M@)
                                    ((case-lambda
                                       ((g$t$10398$XW@M@)
                                        (if g$t$10398$XW@M@
                                          ((case-lambda
                                             ((g$l$10399$XW@M@)
                                              (if (eq? g$l$10399$XW@M@
                                                       g$label$10397$XW@M@)
                                                (void)
                                                (g$dup-error$10379$XW@M@
                                                  g$name$10396$XW@M@))))
                                           g$t$10398$XW@M@)
                                          (g$hashtable-set!$5668$XW@M@
                                            g$h$10393$XW@M@
                                            g$name$10396$XW@M@
                                            g$label$10397$XW@M@))))
                                     (g$hashtable-ref$5667$XW@M@
                                       g$h$10393$XW@M@
                                       g$name$10396$XW@M@
                                       '#f))))
                                 (car g$x$10395$XW@M@)
                                 (cdr g$x$10395$XW@M@))))
                             g$subst$10394$XW@M@)))
                        (g$get-import$10387$XW@M@ g$imp$10392$XW@M@))))))
          ((letrec ((g$f$10389$XW@M@
                      (case-lambda
                        ((g$imp*$10390$XW@M@ g$h$10391$XW@M@)
                         (if (null? g$imp*$10390$XW@M@)
                           (hashtable-entries g$h$10391$XW@M@)
                           (begin
                             (g$add-imports!$10388$XW@M@
                               (car g$imp*$10390$XW@M@)
                               g$h$10391$XW@M@)
                             (g$f$10389$XW@M@
                               (cdr g$imp*$10390$XW@M@)
                               g$h$10391$XW@M@)))))))
             g$f$10389$XW@M@)
           g$imp*$10377$XW@M@
           (g$make-eq-hashtable$5664$XW@M@))))))
   (g$make-top-rib$7915$XW@M@
     g$make-top-rib$11365$XW@M@
     (case-lambda
       ((g$names$10638$XW@M@ g$labels$10639$XW@M@)
        ((case-lambda
           ((g$rib$10640$XW@M@)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10641$XW@M@ g$label$10642$XW@M@)
                   (begin
                     (if (symbol? g$name$10641$XW@M@)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10641$XW@M@))
                     (g$extend-rib!$7551$XW@M@
                       g$rib$10640$XW@M@
                       (g$make-stx$7560$XW@M@
                         g$name$10641$XW@M@
                         g$top-mark*$7529$XW@M@
                         '()
                         '())
                       g$label$10642$XW@M@))))
                g$names$10638$XW@M@
                g$labels$10639$XW@M@)
              g$rib$10640$XW@M@)))
         (g$make-empty-rib$7550$XW@M@)))))
   (g$make-collector$7916$XW@M@
     g$make-collector$11366$XW@M@
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10643$XW@M@)
            (case-lambda
              (() g$ls$10643$XW@M@)
              ((g$x$10644$XW@M@)
               (set! g$ls$10643$XW@M@
                 (g$set-cons$7526$XW@M@ g$x$10644$XW@M@ g$ls$10643$XW@M@))))))
         '()))))
   (g$inv-collector$7917$XW@M@
     g$inv-collector$11367$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         (g$args$10645$XW@M@
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10646$XW@M@)
          (begin
            (if (procedure? g$x$10646$XW@M@)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10646$XW@M@))
            g$x$10646$XW@M@)))))
   (g$vis-collector$7918$XW@M@
     g$vis-collector$11368$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         (g$args$10647$XW@M@
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10648$XW@M@)
          (begin
            (if (procedure? g$x$10648$XW@M@)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10648$XW@M@))
            g$x$10648$XW@M@)))))
   (g$imp-collector$7919$XW@M@
     g$imp-collector$11369$XW@M@
     (g$make-parameter$6854$XW@M@
       (case-lambda
         (g$args$10649$XW@M@
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10650$XW@M@)
          (begin
            (if (procedure? g$x$10650$XW@M@)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10650$XW@M@))
            g$x$10650$XW@M@)))))
   (g$chi-library-internal$7920$XW@M@
     g$chi-library-internal$11370$XW@M@
     (case-lambda
       ((g$e*$10651$XW@M@ g$rib$10652$XW@M@ g$top?$10653$XW@M@)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7909$XW@M@
               g$e*$10651$XW@M@
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10652$XW@M@
               g$top?$10653$XW@M@)))
          (case-lambda
            ((g$e*$10661$XW@M@
               g$r$10662$XW@M@
               g$mr$10663$XW@M@
               g$lex*$10664$XW@M@
               g$rhs*$10665$XW@M@
               g$mod**$10666$XW@M@
               g$_kwd*$10667$XW@M@)
             ((case-lambda
                ((g$_kwd*$10668$XW@M@
                   g$mod**$10669$XW@M@
                   g$rhs*$10670$XW@M@
                   g$lex*$10671$XW@M@
                   g$mr$10672$XW@M@
                   g$r$10673$XW@M@
                   g$e*$10674$XW@M@)
                 (values
                   (append
                     (apply append (reverse g$mod**$10669$XW@M@))
                     g$e*$10674$XW@M@)
                   g$r$10673$XW@M@
                   g$mr$10672$XW@M@
                   (reverse g$lex*$10671$XW@M@)
                   (reverse g$rhs*$10670$XW@M@))))
              g$_kwd*$10667$XW@M@
              g$mod**$10666$XW@M@
              g$rhs*$10665$XW@M@
              g$lex*$10664$XW@M@
              g$mr$10663$XW@M@
              g$r$10662$XW@M@
              g$e*$10661$XW@M@)))))))
   (g$chi-interaction-expr$7921$XW@M@
     g$chi-interaction-expr$11371$XW@M@
     (case-lambda
       ((g$e$10675$XW@M@ g$rib$10676$XW@M@ g$r$10677$XW@M@)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7909$XW@M@
               (list g$e$10675$XW@M@)
               g$r$10677$XW@M@
               g$r$10677$XW@M@
               '()
               '()
               '()
               '()
               g$rib$10676$XW@M@
               '#t)))
          (case-lambda
            ((g$e*$10685$XW@M@
               g$r$10686$XW@M@
               g$mr$10687$XW@M@
               g$lex*$10688$XW@M@
               g$rhs*$10689$XW@M@
               g$mod**$10690$XW@M@
               g$_kwd*$10691$XW@M@)
             ((case-lambda
                ((g$_kwd*$10692$XW@M@
                   g$mod**$10693$XW@M@
                   g$rhs*$10694$XW@M@
                   g$lex*$10695$XW@M@
                   g$mr$10696$XW@M@
                   g$r$10697$XW@M@
                   g$e*$10698$XW@M@)
                 ((case-lambda
                    ((g$e*$10699$XW@M@)
                     ((case-lambda
                        ((g$e$10700$XW@M@)
                         (values g$e$10700$XW@M@ g$r$10697$XW@M@)))
                      (if (null? g$e*$10699$XW@M@)
                        (g$build-void$7522$XW@M@)
                        (if (null? (cdr g$e*$10699$XW@M@))
                          (car g$e*$10699$XW@M@)
                          (g$build-sequence$7521$XW@M@
                            '#f
                            g$e*$10699$XW@M@))))))
                  (g$expand-interaction-rhs*/init*$7890$XW@M@
                    (reverse g$lex*$10695$XW@M@)
                    (reverse g$rhs*$10694$XW@M@)
                    (append
                      (apply append (reverse g$mod**$10693$XW@M@))
                      g$e*$10698$XW@M@)
                    g$r$10697$XW@M@
                    g$mr$10696$XW@M@))))
              g$_kwd*$10691$XW@M@
              g$mod**$10690$XW@M@
              g$rhs*$10689$XW@M@
              g$lex*$10688$XW@M@
              g$mr$10687$XW@M@
              g$r$10686$XW@M@
              g$e*$10685$XW@M@)))))))
   (g$library-body-expander$7922$XW@M@
     g$library-body-expander$11372$XW@M@
     (case-lambda
       ((g$name$10701$XW@M@
          g$exp*$10702$XW@M@
          g$imp*$10703$XW@M@
          g$b*$10704$XW@M@
          g$top?$10705$XW@M@)
        (letrec* ((g$itc$10706$XW@M@ (g$make-collector$7916$XW@M@)))
          ((case-lambda
             ((g$imp-collector$10711$XW@M@
                g$top-level-context$10712$XW@M@
                g$imp-collector$10713$XW@M@
                g$top-level-context$10714$XW@M@)
              ((case-lambda
                 ((g$swap$10715$XW@M@)
                  (dynamic-wind
                    g$swap$10715$XW@M@
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7911$XW@M@ g$exp*$10702$XW@M@)))
                         (case-lambda
                           ((g$exp-int*$10718$XW@M@ g$exp-ext*$10719$XW@M@)
                            ((case-lambda
                               ((g$exp-ext*$10720$XW@M@ g$exp-int*$10721$XW@M@)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7914$XW@M@
                                       g$imp*$10703$XW@M@)))
                                  (case-lambda
                                    ((g$subst-names$10724$XW@M@
                                       g$subst-labels$10725$XW@M@)
                                     ((case-lambda
                                        ((g$subst-labels$10726$XW@M@
                                           g$subst-names$10727$XW@M@)
                                         ((case-lambda
                                            ((g$rib$10728$XW@M@)
                                             ((case-lambda
                                                ((g$b*$10729$XW@M@
                                                   g$rtc$10730$XW@M@
                                                   g$vtc$10731$XW@M@)
                                                 ((case-lambda
                                                    ((g$inv-collector$10736$XW@M@
                                                       g$vis-collector$10737$XW@M@
                                                       g$inv-collector$10738$XW@M@
                                                       g$vis-collector$10739$XW@M@)
                                                     ((case-lambda
                                                        ((g$swap$10740$XW@M@)
                                                         (dynamic-wind
                                                           g$swap$10740$XW@M@
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7920$XW@M@
                                                                     g$b*$10729$XW@M@
                                                                     g$rib$10728$XW@M@
                                                                     g$top?$10705$XW@M@)))
                                                                (case-lambda
                                                                  ((g$init*$10746$XW@M@
                                                                     g$r$10747$XW@M@
                                                                     g$mr$10748$XW@M@
                                                                     g$lex*$10749$XW@M@
                                                                     g$rhs*$10750$XW@M@)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10751$XW@M@
                                                                         g$lex*$10752$XW@M@
                                                                         g$mr$10753$XW@M@
                                                                         g$r$10754$XW@M@
                                                                         g$init*$10755$XW@M@)
                                                                       (begin
                                                                         (g$seal-rib!$7553$XW@M@
                                                                           g$rib$10728$XW@M@)
                                                                         ((case-lambda
                                                                            ((g$init*$10756$XW@M@)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10757$XW@M@)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7554$XW@M@
                                                                                         g$rib$10728$XW@M@)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10758$XW@M@
                                                                                             g$export-subst$10759$XW@M@)
                                                                                           (letrec* ((g$errstr$10760$XW@M@
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7963$XW@M@
                                                                                                    g$lex*$10752$XW@M@
                                                                                                    g$loc*$10758$XW@M@
                                                                                                    g$r$10754$XW@M@)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10764$XW@M@
                                                                                                    g$global*$10765$XW@M@
                                                                                                    g$macro*$10766$XW@M@)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10767$XW@M@
                                                                                                        g$global*$10768$XW@M@
                                                                                                        g$export-env$10769$XW@M@)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10770$XW@M@)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10771$XW@M@
                                                                                                                   g$label$10772$XW@M@)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10773$XW@M@)
                                                                                                                     (if g$p$10773$XW@M@
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10774$XW@M@)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10775$XW@M@)
                                                                                                                               (if (eq? g$type$10775$XW@M@
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7971$XW@M@
                                                                                                                                   'export
                                                                                                                                   g$errstr$10760$XW@M@
                                                                                                                                   g$name$10771$XW@M@)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10774$XW@M@))))
                                                                                                                        (cdr g$p$10773$XW@M@))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10772$XW@M@
                                                                                                                    g$export-env$10769$XW@M@))))
                                                                                                              (car g$s$10770$XW@M@)
                                                                                                              (cdr g$s$10770$XW@M@))))
                                                                                                          g$export-subst$10759$XW@M@)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10776$XW@M@
                                                                                                              g$invoke-definitions$10777$XW@M@)
                                                                                                            (values
                                                                                                              (g$itc$10706$XW@M@)
                                                                                                              (g$rtc$10730$XW@M@)
                                                                                                              (g$vtc$10731$XW@M@)
                                                                                                              (g$build-sequence$7521$XW@M@
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10777$XW@M@
                                                                                                                  (list
                                                                                                                    g$invoke-body$10776$XW@M@)))
                                                                                                              g$macro*$10767$XW@M@
                                                                                                              g$export-subst$10759$XW@M@
                                                                                                              g$export-env$10769$XW@M@)))
                                                                                                         (g$build-library-letrec*$7525$XW@M@
                                                                                                           '#f
                                                                                                           g$name$10701$XW@M@
                                                                                                           g$lex*$10752$XW@M@
                                                                                                           g$loc*$10758$XW@M@
                                                                                                           g$rhs*$10757$XW@M@
                                                                                                           (if (null?
                                                                                                                 g$init*$10756$XW@M@)
                                                                                                             (g$build-void$7522$XW@M@)
                                                                                                             (g$build-sequence$7521$XW@M@
                                                                                                               '#f
                                                                                                               g$init*$10756$XW@M@)))
                                                                                                         (map g$build-global-define$7517$XW@M@
                                                                                                              (map cdr
                                                                                                                   g$global*$10768$XW@M@))))))
                                                                                                   g$macro*$10766$XW@M@
                                                                                                   g$global*$10765$XW@M@
                                                                                                   g$export-env$10764$XW@M@)))))))
                                                                                        (map g$gen-global$7532$XW@M@
                                                                                             g$lex*$10752$XW@M@)
                                                                                        (g$make-export-subst$7962$XW@M@
                                                                                          g$exp-int*$10721$XW@M@
                                                                                          g$exp-ext*$10720$XW@M@
                                                                                          g$rib$10728$XW@M@))))))))
                                                                              (g$chi-rhs*$7891$XW@M@
                                                                                g$rhs*$10751$XW@M@
                                                                                g$r$10754$XW@M@
                                                                                g$mr$10753$XW@M@))))
                                                                          (g$chi-expr*$7881$XW@M@
                                                                            g$init*$10755$XW@M@
                                                                            g$r$10754$XW@M@
                                                                            g$mr$10753$XW@M@)))))
                                                                    g$rhs*$10750$XW@M@
                                                                    g$lex*$10749$XW@M@
                                                                    g$mr$10748$XW@M@
                                                                    g$r$10747$XW@M@
                                                                    g$init*$10746$XW@M@))))))
                                                           g$swap$10740$XW@M@)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10778$XW@M@)
                                                               (begin
                                                                 (g$inv-collector$10736$XW@M@
                                                                   g$inv-collector$10738$XW@M@)
                                                                 (set! g$inv-collector$10738$XW@M@
                                                                   g$t$10778$XW@M@))))
                                                            (g$inv-collector$10736$XW@M@))
                                                           ((case-lambda
                                                              ((g$t$10779$XW@M@)
                                                               (begin
                                                                 (g$vis-collector$10737$XW@M@
                                                                   g$vis-collector$10739$XW@M@)
                                                                 (set! g$vis-collector$10739$XW@M@
                                                                   g$t$10779$XW@M@))))
                                                            (g$vis-collector$10737$XW@M@))))))))
                                                  g$inv-collector$7917$XW@M@
                                                  g$vis-collector$7918$XW@M@
                                                  g$rtc$10730$XW@M@
                                                  g$vtc$10731$XW@M@)))
                                              (map (case-lambda
                                                     ((g$x$10780$XW@M@)
                                                      (g$make-stx$7560$XW@M@
                                                        g$x$10780$XW@M@
                                                        g$top-mark*$7529$XW@M@
                                                        (list g$rib$10728$XW@M@)
                                                        '())))
                                                   g$b*$10704$XW@M@)
                                              (g$make-collector$7916$XW@M@)
                                              (g$make-collector$7916$XW@M@))))
                                          (g$make-top-rib$7915$XW@M@
                                            g$subst-names$10727$XW@M@
                                            g$subst-labels$10726$XW@M@))))
                                      g$subst-labels$10725$XW@M@
                                      g$subst-names$10724$XW@M@))))))
                             g$exp-ext*$10719$XW@M@
                             g$exp-int*$10718$XW@M@))))))
                    g$swap$10715$XW@M@)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10781$XW@M@)
                        (begin
                          (g$imp-collector$10711$XW@M@
                            g$imp-collector$10713$XW@M@)
                          (set! g$imp-collector$10713$XW@M@ g$t$10781$XW@M@))))
                     (g$imp-collector$10711$XW@M@))
                    ((case-lambda
                       ((g$t$10782$XW@M@)
                        (begin
                          (g$top-level-context$10712$XW@M@
                            g$top-level-context$10714$XW@M@)
                          (set! g$top-level-context$10714$XW@M@
                            g$t$10782$XW@M@))))
                     (g$top-level-context$10712$XW@M@))))))))
           g$imp-collector$7919$XW@M@
           g$top-level-context$7978$XW@M@
           g$itc$10706$XW@M@
           '#f)))))
   (g$core-library-expander$7923$XW@M@
     g$core-library-expander$11373$XW@M@
     (case-lambda
       ((g$e$10783$XW@M@ g$verify-name$10784$XW@M@)
        (call-with-values
          (case-lambda (() (g$parse-library$7913$XW@M@ g$e$10783$XW@M@)))
          (case-lambda
            ((g$name*$10789$XW@M@
               g$exp*$10790$XW@M@
               g$imp*$10791$XW@M@
               g$b*$10792$XW@M@)
             ((case-lambda
                ((g$b*$10793$XW@M@
                   g$imp*$10794$XW@M@
                   g$exp*$10795$XW@M@
                   g$name*$10796$XW@M@)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7912$XW@M@ g$name*$10796$XW@M@)))
                   (case-lambda
                     ((g$name$10799$XW@M@ g$ver$10800$XW@M@)
                      ((case-lambda
                         ((g$ver$10801$XW@M@ g$name$10802$XW@M@)
                          (begin
                            (g$verify-name$10784$XW@M@ g$name$10802$XW@M@)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7922$XW@M@
                                   g$name$10802$XW@M@
                                   g$exp*$10795$XW@M@
                                   g$imp*$10794$XW@M@
                                   g$b*$10793$XW@M@
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10810$XW@M@
                                   g$invoke-req*$10811$XW@M@
                                   g$visit-req*$10812$XW@M@
                                   g$invoke-code$10813$XW@M@
                                   g$visit-code$10814$XW@M@
                                   g$export-subst$10815$XW@M@
                                   g$export-env$10816$XW@M@)
                                 ((case-lambda
                                    ((g$export-env$10817$XW@M@
                                       g$export-subst$10818$XW@M@
                                       g$visit-code$10819$XW@M@
                                       g$invoke-code$10820$XW@M@
                                       g$visit-req*$10821$XW@M@
                                       g$invoke-req*$10822$XW@M@
                                       g$imp*$10823$XW@M@)
                                     (values
                                       g$name$10802$XW@M@
                                       g$ver$10801$XW@M@
                                       g$imp*$10823$XW@M@
                                       g$invoke-req*$10822$XW@M@
                                       g$visit-req*$10821$XW@M@
                                       g$invoke-code$10820$XW@M@
                                       g$visit-code$10819$XW@M@
                                       g$export-subst$10818$XW@M@
                                       g$export-env$10817$XW@M@)))
                                  g$export-env$10816$XW@M@
                                  g$export-subst$10815$XW@M@
                                  g$visit-code$10814$XW@M@
                                  g$invoke-code$10813$XW@M@
                                  g$visit-req*$10812$XW@M@
                                  g$invoke-req*$10811$XW@M@
                                  g$imp*$10810$XW@M@)))))))
                       g$ver$10800$XW@M@
                       g$name$10799$XW@M@))))))
              g$b*$10792$XW@M@
              g$imp*$10791$XW@M@
              g$exp*$10790$XW@M@
              g$name*$10789$XW@M@)))))))
   (g$parse-top-level-program$7924$XW@M@
     g$parse-top-level-program$11374$XW@M@
     (case-lambda
       ((g$e*$10824$XW@M@)
        ((case-lambda
           ((g$t$10825$XW@M@)
            ((case-lambda
               ((g$ls/false$10826$XW@M@)
                (if (if g$ls/false$10826$XW@M@
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10827$XW@M@
                               g$imp*$10828$XW@M@
                               g$b*$10829$XW@M@)
                             (eq? (g$syntax->datum$7974$XW@M@
                                    g$import$10827$XW@M@)
                                  'import)))
                          g$ls/false$10826$XW@M@))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10830$XW@M@
                         g$imp*$10831$XW@M@
                         g$b*$10832$XW@M@)
                       (values g$imp*$10831$XW@M@ g$b*$10832$XW@M@)))
                    g$ls/false$10826$XW@M@)
                  ((case-lambda
                     ((g$t$10833$XW@M@)
                      ((case-lambda
                         ((g$ls/false$10834$XW@M@)
                          (if (if g$ls/false$10834$XW@M@
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10835$XW@M@
                                         g$x$10836$XW@M@
                                         g$y$10837$XW@M@)
                                       (eq? (g$syntax->datum$7974$XW@M@
                                              g$import$10835$XW@M@)
                                            'import)))
                                    g$ls/false$10834$XW@M@))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10838$XW@M@
                                   g$x$10839$XW@M@
                                   g$y$10840$XW@M@)
                                 (g$syntax-violation$7971$XW@M@
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7584$XW@M@ g$e*$10824$XW@M@))))
                              g$ls/false$10834$XW@M@)
                            ((case-lambda
                               ((g$t$10841$XW@M@)
                                ((case-lambda
                                   ((g$ls/false$10842$XW@M@)
                                    (if g$ls/false$10842$XW@M@
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10842$XW@M@)
                                      (g$syntax-violation$7971$XW@M@
                                        '#f
                                        '"invalid syntax"
                                        g$t$10841$XW@M@))))
                                 (g$syntax-dispatch$7865$XW@M@
                                   g$t$10841$XW@M@
                                   '_))))
                             g$t$10833$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@
                         g$t$10833$XW@M@
                         '((any . any) . any)))))
                   g$t$10825$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@
               g$t$10825$XW@M@
               '((any . each-any) . each-any)))))
         g$e*$10824$XW@M@))))
   (g$top-level-expander$7925$XW@M@
     g$top-level-expander$11375$XW@M@
     (case-lambda
       ((g$e*$10843$XW@M@)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7924$XW@M@ g$e*$10843$XW@M@)))
          (case-lambda
            ((g$imp*$10846$XW@M@ g$b*$10847$XW@M@)
             ((case-lambda
                ((g$b*$10848$XW@M@ g$imp*$10849$XW@M@)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7922$XW@M@
                        '()
                        '()
                        g$imp*$10849$XW@M@
                        g$b*$10848$XW@M@
                        '#t)))
                   (case-lambda
                     ((g$imp*$10857$XW@M@
                        g$invoke-req*$10858$XW@M@
                        g$visit-req*$10859$XW@M@
                        g$invoke-code$10860$XW@M@
                        g$visit-code$10861$XW@M@
                        g$export-subst$10862$XW@M@
                        g$export-env$10863$XW@M@)
                      ((case-lambda
                         ((g$export-env$10864$XW@M@
                            g$export-subst$10865$XW@M@
                            g$visit-code$10866$XW@M@
                            g$invoke-code$10867$XW@M@
                            g$visit-req*$10868$XW@M@
                            g$invoke-req*$10869$XW@M@
                            g$imp*$10870$XW@M@)
                          (values
                            g$invoke-req*$10869$XW@M@
                            g$invoke-code$10867$XW@M@)))
                       g$export-env$10863$XW@M@
                       g$export-subst$10862$XW@M@
                       g$visit-code$10861$XW@M@
                       g$invoke-code$10860$XW@M@
                       g$visit-req*$10859$XW@M@
                       g$invoke-req*$10858$XW@M@
                       g$imp*$10857$XW@M@))))))
              g$b*$10847$XW@M@
              g$imp*$10846$XW@M@)))))))
   (g$8890$7926$XW@M@
     g$8890$11376$XW@M@
     (make-record-type-descriptor
       'env
       '#f
       'g$8893$XW@M@
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8892$7927$XW@M@ g$8892$11377$XW@M@ '#f)
   (g$8891$7928$XW@M@
     g$8891$11378$XW@M@
     (make-record-constructor-descriptor
       g$8890$7926$XW@M@
       '#f
       g$8892$7927$XW@M@))
   (g$env?$7929$XW@M@
     g$env?$11379$XW@M@
     (record-predicate g$8890$7926$XW@M@))
   (g$make-env$7930$XW@M@
     g$make-env$11380$XW@M@
     (record-constructor g$8891$7928$XW@M@))
   (g$env-names$7931$XW@M@
     g$env-names$11381$XW@M@
     (record-accessor g$8890$7926$XW@M@ '0))
   (g$env-labels$7932$XW@M@
     g$env-labels$11382$XW@M@
     (record-accessor g$8890$7926$XW@M@ '1))
   (g$env-itc$7933$XW@M@
     g$env-itc$11383$XW@M@
     (record-accessor g$8890$7926$XW@M@ '2))
   (g$set-env-names!$7934$XW@M@
     g$set-env-names!$11384$XW@M@
     (record-mutator g$8890$7926$XW@M@ '0))
   (g$set-env-labels!$7935$XW@M@
     g$set-env-labels!$11385$XW@M@
     (record-mutator g$8890$7926$XW@M@ '1))
   (g$set-env-itc!$7936$XW@M@
     g$set-env-itc!$11386$XW@M@
     (record-mutator g$8890$7926$XW@M@ '2))
   (g$rp$7937$XW@M@
     g$rp$11387$XW@M@
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10871$XW@M@ g$p$10872$XW@M@)
          (display '"#<environment>" g$p$10872$XW@M@)))))
   (g$8909$7938$XW@M@
     g$8909$11388$XW@M@
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8912$XW@M@
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8911$7939$XW@M@ g$8911$11389$XW@M@ '#f)
   (g$8910$7940$XW@M@
     g$8910$11390$XW@M@
     (make-record-constructor-descriptor
       g$8909$7938$XW@M@
       '#f
       g$8911$7939$XW@M@))
   (g$interaction-env?$7941$XW@M@
     g$interaction-env?$11391$XW@M@
     (record-predicate g$8909$7938$XW@M@))
   (g$make-interaction-env$7942$XW@M@
     g$make-interaction-env$11392$XW@M@
     (record-constructor g$8910$7940$XW@M@))
   (g$interaction-env-rib$7943$XW@M@
     g$interaction-env-rib$11393$XW@M@
     (record-accessor g$8909$7938$XW@M@ '0))
   (g$interaction-env-r$7944$XW@M@
     g$interaction-env-r$11394$XW@M@
     (record-accessor g$8909$7938$XW@M@ '1))
   (g$interaction-env-locs$7945$XW@M@
     g$interaction-env-locs$11395$XW@M@
     (record-accessor g$8909$7938$XW@M@ '2))
   (g$set-interaction-env-rib!$7946$XW@M@
     g$set-interaction-env-rib!$11396$XW@M@
     (record-mutator g$8909$7938$XW@M@ '0))
   (g$set-interaction-env-r!$7947$XW@M@
     g$set-interaction-env-r!$11397$XW@M@
     (record-mutator g$8909$7938$XW@M@ '1))
   (g$set-interaction-env-locs!$7948$XW@M@
     g$set-interaction-env-locs!$11398$XW@M@
     (record-mutator g$8909$7938$XW@M@ '2))
   (g$rp$7949$XW@M@
     g$rp$11399$XW@M@
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10873$XW@M@ g$p$10874$XW@M@)
          (display '"#<environment>" g$p$10874$XW@M@)))))
   (g$interaction-environment-symbols$7950$XW@M@
     g$interaction-environment-symbols$11400$XW@M@
     (case-lambda
       (()
        (map (case-lambda ((g$x$10875$XW@M@) g$x$10875$XW@M@))
             (g$rib-sym*$7542$XW@M@
               (g$interaction-env-rib$7943$XW@M@
                 (g$interaction-environment$7977$XW@M@)))))))
   (g$environment-symbols$7951$XW@M@
     g$environment-symbols$11401$XW@M@
     (case-lambda
       ((g$e$10876$XW@M@)
        (vector->list (g$env-names$7931$XW@M@ g$e$10876$XW@M@)))))
   (g$environment?$7952$XW@M@
     g$environment?$11402$XW@M@
     (case-lambda
       ((g$x$10877$XW@M@)
        ((case-lambda
           ((g$t$10878$XW@M@)
            (if g$t$10878$XW@M@
              g$t$10878$XW@M@
              (begin '#f (g$interaction-env?$7941$XW@M@ g$x$10877$XW@M@)))))
         (g$env?$7929$XW@M@ g$x$10877$XW@M@)))))
   (g$environment$7953$XW@M@
     g$environment$11403$XW@M@
     (case-lambda
       (g$imp*$10879$XW@M@
        ((case-lambda
           ((g$itc$10880$XW@M@)
            ((case-lambda
               ((g$imp-collector$10883$XW@M@ g$imp-collector$10884$XW@M@)
                ((case-lambda
                   ((g$swap$10885$XW@M@)
                    (dynamic-wind
                      g$swap$10885$XW@M@
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7914$XW@M@
                                g$imp*$10879$XW@M@)))
                           (case-lambda
                             ((g$subst-names$10888$XW@M@
                                g$subst-labels$10889$XW@M@)
                              ((case-lambda
                                 ((g$subst-labels$10890$XW@M@
                                    g$subst-names$10891$XW@M@)
                                  (g$make-env$7930$XW@M@
                                    g$subst-names$10891$XW@M@
                                    g$subst-labels$10890$XW@M@
                                    g$itc$10880$XW@M@)))
                               g$subst-labels$10889$XW@M@
                               g$subst-names$10888$XW@M@))))))
                      g$swap$10885$XW@M@)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10892$XW@M@)
                        (begin
                          (g$imp-collector$10883$XW@M@
                            g$imp-collector$10884$XW@M@)
                          (set! g$imp-collector$10884$XW@M@ g$t$10892$XW@M@))))
                     (g$imp-collector$10883$XW@M@)))))))
             g$imp-collector$7919$XW@M@
             g$itc$10880$XW@M@)))
         (g$make-collector$7916$XW@M@)))))
   (g$null-environment$7954$XW@M@
     g$null-environment$11404$XW@M@
     (case-lambda
       ((g$n$10893$XW@M@)
        (begin
          (if (eqv? g$n$10893$XW@M@ '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10893$XW@M@))
          (g$environment$7953$XW@M@ '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7955$XW@M@
     g$scheme-report-environment$11405$XW@M@
     (case-lambda
       ((g$n$10894$XW@M@)
        (begin
          (if (eqv? g$n$10894$XW@M@ '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10894$XW@M@))
          (g$environment$7953$XW@M@ '(psyntax scheme-report-environment-5))))))
   (g$expand$7956$XW@M@
     g$expand$11406$XW@M@
     (case-lambda
       ((g$x$10895$XW@M@ g$env$10896$XW@M@)
        (if (g$env?$7929$XW@M@ g$env$10896$XW@M@)
          ((case-lambda
             ((g$rib$10897$XW@M@)
              ((case-lambda
                 ((g$x$10898$XW@M@
                    g$itc$10899$XW@M@
                    g$rtc$10900$XW@M@
                    g$vtc$10901$XW@M@)
                  ((case-lambda
                     ((g$x$10902$XW@M@)
                      (begin
                        (g$seal-rib!$7553$XW@M@ g$rib$10897$XW@M@)
                        (values g$x$10902$XW@M@ (g$rtc$10900$XW@M@)))))
                   ((case-lambda
                      ((g$inv-collector$10909$XW@M@
                         g$vis-collector$10910$XW@M@
                         g$imp-collector$10911$XW@M@
                         g$inv-collector$10912$XW@M@
                         g$vis-collector$10913$XW@M@
                         g$imp-collector$10914$XW@M@)
                       ((case-lambda
                          ((g$swap$10915$XW@M@)
                           (dynamic-wind
                             g$swap$10915$XW@M@
                             (case-lambda
                               (()
                                (g$chi-expr$7883$XW@M@
                                  g$x$10898$XW@M@
                                  '()
                                  '())))
                             g$swap$10915$XW@M@)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10916$XW@M@)
                                 (begin
                                   (g$inv-collector$10909$XW@M@
                                     g$inv-collector$10912$XW@M@)
                                   (set! g$inv-collector$10912$XW@M@
                                     g$t$10916$XW@M@))))
                              (g$inv-collector$10909$XW@M@))
                             ((case-lambda
                                ((g$t$10917$XW@M@)
                                 (begin
                                   (g$vis-collector$10910$XW@M@
                                     g$vis-collector$10913$XW@M@)
                                   (set! g$vis-collector$10913$XW@M@
                                     g$t$10917$XW@M@))))
                              (g$vis-collector$10910$XW@M@))
                             ((case-lambda
                                ((g$t$10918$XW@M@)
                                 (begin
                                   (g$imp-collector$10911$XW@M@
                                     g$imp-collector$10914$XW@M@)
                                   (set! g$imp-collector$10914$XW@M@
                                     g$t$10918$XW@M@))))
                              (g$imp-collector$10911$XW@M@))))))))
                    g$inv-collector$7917$XW@M@
                    g$vis-collector$7918$XW@M@
                    g$imp-collector$7919$XW@M@
                    g$rtc$10900$XW@M@
                    g$vtc$10901$XW@M@
                    g$itc$10899$XW@M@))))
               (g$make-stx$7560$XW@M@
                 g$x$10895$XW@M@
                 g$top-mark*$7529$XW@M@
                 (list g$rib$10897$XW@M@)
                 '())
               (g$env-itc$7933$XW@M@ g$env$10896$XW@M@)
               (g$make-collector$7916$XW@M@)
               (g$make-collector$7916$XW@M@))))
           (g$make-top-rib$7915$XW@M@
             (g$env-names$7931$XW@M@ g$env$10896$XW@M@)
             (g$env-labels$7932$XW@M@ g$env$10896$XW@M@)))
          (if (g$interaction-env?$7941$XW@M@ g$env$10896$XW@M@)
            ((case-lambda
               ((g$rib$10919$XW@M@ g$r$10920$XW@M@ g$rtc$10921$XW@M@)
                ((case-lambda
                   ((g$x$10922$XW@M@)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10933$XW@M@
                               g$inv-collector$10934$XW@M@
                               g$vis-collector$10935$XW@M@
                               g$imp-collector$10936$XW@M@
                               g$top-level-context$10937$XW@M@
                               g$inv-collector$10938$XW@M@
                               g$vis-collector$10939$XW@M@
                               g$imp-collector$10940$XW@M@)
                             ((case-lambda
                                ((g$swap$10941$XW@M@)
                                 (dynamic-wind
                                   g$swap$10941$XW@M@
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7921$XW@M@
                                        g$x$10922$XW@M@
                                        g$rib$10919$XW@M@
                                        g$r$10920$XW@M@)))
                                   g$swap$10941$XW@M@)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10942$XW@M@)
                                       (begin
                                         (g$top-level-context$10933$XW@M@
                                           g$top-level-context$10937$XW@M@)
                                         (set! g$top-level-context$10937$XW@M@
                                           g$t$10942$XW@M@))))
                                    (g$top-level-context$10933$XW@M@))
                                   ((case-lambda
                                      ((g$t$10943$XW@M@)
                                       (begin
                                         (g$inv-collector$10934$XW@M@
                                           g$inv-collector$10938$XW@M@)
                                         (set! g$inv-collector$10938$XW@M@
                                           g$t$10943$XW@M@))))
                                    (g$inv-collector$10934$XW@M@))
                                   ((case-lambda
                                      ((g$t$10944$XW@M@)
                                       (begin
                                         (g$vis-collector$10935$XW@M@
                                           g$vis-collector$10939$XW@M@)
                                         (set! g$vis-collector$10939$XW@M@
                                           g$t$10944$XW@M@))))
                                    (g$vis-collector$10935$XW@M@))
                                   ((case-lambda
                                      ((g$t$10945$XW@M@)
                                       (begin
                                         (g$imp-collector$10936$XW@M@
                                           g$imp-collector$10940$XW@M@)
                                         (set! g$imp-collector$10940$XW@M@
                                           g$t$10945$XW@M@))))
                                    (g$imp-collector$10936$XW@M@))))))))
                          g$top-level-context$7978$XW@M@
                          g$inv-collector$7917$XW@M@
                          g$vis-collector$7918$XW@M@
                          g$imp-collector$7919$XW@M@
                          g$env$10896$XW@M@
                          g$rtc$10921$XW@M@
                          (g$make-collector$7916$XW@M@)
                          (g$make-collector$7916$XW@M@))))
                      (case-lambda
                        ((g$e$10946$XW@M@ g$r^$10947$XW@M@)
                         ((case-lambda
                            ((g$r^$10948$XW@M@ g$e$10949$XW@M@)
                             (begin
                               (g$set-interaction-env-r!$7947$XW@M@
                                 g$env$10896$XW@M@
                                 g$r^$10948$XW@M@)
                               (values g$e$10949$XW@M@ (g$rtc$10921$XW@M@)))))
                          g$r^$10947$XW@M@
                          g$e$10946$XW@M@))))))
                 (g$make-stx$7560$XW@M@
                   g$x$10895$XW@M@
                   g$top-mark*$7529$XW@M@
                   (list g$rib$10919$XW@M@)
                   '()))))
             (g$interaction-env-rib$7943$XW@M@ g$env$10896$XW@M@)
             (g$interaction-env-r$7944$XW@M@ g$env$10896$XW@M@)
             (g$make-collector$7916$XW@M@))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10896$XW@M@))))))
   (g$eval$7957$XW@M@
     g$eval$11407$XW@M@
     (case-lambda
       ((g$x$10950$XW@M@ g$env$10951$XW@M@)
        (begin
          (if (g$environment?$7952$XW@M@ g$env$10951$XW@M@)
            (void)
            (error 'eval '"not an environment" g$env$10951$XW@M@))
          (call-with-values
            (case-lambda
              (() (g$expand$7956$XW@M@ g$x$10950$XW@M@ g$env$10951$XW@M@)))
            (case-lambda
              ((g$x$10954$XW@M@ g$invoke-req*$10955$XW@M@)
               ((case-lambda
                  ((g$invoke-req*$10956$XW@M@ g$x$10957$XW@M@)
                   (begin
                     (for-each
                       g$invoke-library$7402$XW@M@
                       g$invoke-req*$10956$XW@M@)
                     (eval-core
                       (g$expanded->core$7101$XW@M@ g$x$10957$XW@M@)))))
                g$invoke-req*$10955$XW@M@
                g$x$10954$XW@M@))))))))
   (g$library-expander$7958$XW@M@
     g$library-expander$11408$XW@M@
     (case-lambda
       ((g$x$10958$XW@M@ g$filename$10959$XW@M@ g$verify-name$10960$XW@M@)
        (letrec* ((g$build-visit-code$10961$XW@M@
                    (case-lambda
                      ((g$macro*$11004$XW@M@)
                       (if (null? g$macro*$11004$XW@M@)
                         (g$build-void$7522$XW@M@)
                         (g$build-sequence$7521$XW@M@
                           '#f
                           (map (case-lambda
                                  ((g$x$11005$XW@M@)
                                   ((case-lambda
                                      ((g$loc$11006$XW@M@ g$src$11007$XW@M@)
                                       (list
                                         'set!
                                         g$loc$11006$XW@M@
                                         g$src$11007$XW@M@)))
                                    (car g$x$11005$XW@M@)
                                    (g$cddr$5404$XW@M@ g$x$11005$XW@M@))))
                                g$macro*$11004$XW@M@))))))
                  (g$visit!$10962$XW@M@
                    (case-lambda
                      ((g$macro*$11000$XW@M@)
                       (for-each
                         (case-lambda
                           ((g$x$11001$XW@M@)
                            ((case-lambda
                               ((g$loc$11002$XW@M@ g$proc$11003$XW@M@)
                                (set-symbol-value!
                                  g$loc$11002$XW@M@
                                  g$proc$11003$XW@M@)))
                             (car g$x$11001$XW@M@)
                             (g$cadr$5402$XW@M@ g$x$11001$XW@M@))))
                         g$macro*$11000$XW@M@)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7923$XW@M@
                 g$x$10958$XW@M@
                 g$verify-name$10960$XW@M@)))
            (case-lambda
              ((g$name$10972$XW@M@
                 g$ver$10973$XW@M@
                 g$imp*$10974$XW@M@
                 g$inv*$10975$XW@M@
                 g$vis*$10976$XW@M@
                 g$invoke-code$10977$XW@M@
                 g$macro*$10978$XW@M@
                 g$export-subst$10979$XW@M@
                 g$export-env$10980$XW@M@)
               ((case-lambda
                  ((g$export-env$10981$XW@M@
                     g$export-subst$10982$XW@M@
                     g$macro*$10983$XW@M@
                     g$invoke-code$10984$XW@M@
                     g$vis*$10985$XW@M@
                     g$inv*$10986$XW@M@
                     g$imp*$10987$XW@M@
                     g$ver$10988$XW@M@
                     g$name$10989$XW@M@)
                   ((case-lambda
                      ((g$id$10990$XW@M@
                         g$name$10991$XW@M@
                         g$ver$10992$XW@M@
                         g$imp*$10993$XW@M@
                         g$vis*$10994$XW@M@
                         g$inv*$10995$XW@M@
                         g$visit-proc$10996$XW@M@
                         g$invoke-proc$10997$XW@M@
                         g$visit-code$10998$XW@M@
                         g$invoke-code$10999$XW@M@)
                       (begin
                         (g$install-library$7400$XW@M@
                           g$id$10990$XW@M@
                           g$name$10991$XW@M@
                           g$ver$10992$XW@M@
                           g$imp*$10993$XW@M@
                           g$vis*$10994$XW@M@
                           g$inv*$10995$XW@M@
                           g$export-subst$10982$XW@M@
                           g$export-env$10981$XW@M@
                           g$visit-proc$10996$XW@M@
                           g$invoke-proc$10997$XW@M@
                           g$visit-code$10998$XW@M@
                           g$invoke-code$10999$XW@M@
                           '#t
                           g$filename$10959$XW@M@)
                         (values
                           g$id$10990$XW@M@
                           g$name$10991$XW@M@
                           g$ver$10992$XW@M@
                           g$imp*$10993$XW@M@
                           g$vis*$10994$XW@M@
                           g$inv*$10995$XW@M@
                           g$invoke-code$10999$XW@M@
                           g$visit-code$10998$XW@M@
                           g$export-subst$10982$XW@M@
                           g$export-env$10981$XW@M@))))
                    (gensym)
                    g$name$10989$XW@M@
                    g$ver$10988$XW@M@
                    (map g$library-spec$7406$XW@M@ g$imp*$10987$XW@M@)
                    (map g$library-spec$7406$XW@M@ g$vis*$10985$XW@M@)
                    (map g$library-spec$7406$XW@M@ g$inv*$10986$XW@M@)
                    (case-lambda
                      (() (g$visit!$10962$XW@M@ g$macro*$10983$XW@M@)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7101$XW@M@
                           g$invoke-code$10984$XW@M@))))
                    (g$build-visit-code$10961$XW@M@ g$macro*$10983$XW@M@)
                    g$invoke-code$10984$XW@M@)))
                g$export-env$10980$XW@M@
                g$export-subst$10979$XW@M@
                g$macro*$10978$XW@M@
                g$invoke-code$10977$XW@M@
                g$vis*$10976$XW@M@
                g$inv*$10975$XW@M@
                g$imp*$10974$XW@M@
                g$ver$10973$XW@M@
                g$name$10972$XW@M@))))))
       ((g$x$11008$XW@M@ g$filename$11009$XW@M@)
        (g$library-expander$7958$XW@M@
          g$x$11008$XW@M@
          g$filename$11009$XW@M@
          (case-lambda ((g$x$11010$XW@M@) (values)))))
       ((g$x$11011$XW@M@)
        (g$library-expander$7958$XW@M@
          g$x$11011$XW@M@
          '#f
          (case-lambda ((g$x$11012$XW@M@) (values)))))))
   (g$boot-library-expand$7959$XW@M@
     g$boot-library-expand$11409$XW@M@
     (case-lambda
       ((g$x$11013$XW@M@)
        (call-with-values
          (case-lambda (() (g$library-expander$7958$XW@M@ g$x$11013$XW@M@)))
          (case-lambda
            ((g$id$11024$XW@M@
               g$name$11025$XW@M@
               g$ver$11026$XW@M@
               g$imp*$11027$XW@M@
               g$vis*$11028$XW@M@
               g$inv*$11029$XW@M@
               g$invoke-code$11030$XW@M@
               g$visit-code$11031$XW@M@
               g$export-subst$11032$XW@M@
               g$export-env$11033$XW@M@)
             ((case-lambda
                ((g$export-env$11034$XW@M@
                   g$export-subst$11035$XW@M@
                   g$visit-code$11036$XW@M@
                   g$invoke-code$11037$XW@M@
                   g$inv*$11038$XW@M@
                   g$vis*$11039$XW@M@
                   g$imp*$11040$XW@M@
                   g$ver$11041$XW@M@
                   g$name$11042$XW@M@
                   g$id$11043$XW@M@)
                 (values
                   g$name$11042$XW@M@
                   g$invoke-code$11037$XW@M@
                   g$export-subst$11035$XW@M@
                   g$export-env$11034$XW@M@)))
              g$export-env$11033$XW@M@
              g$export-subst$11032$XW@M@
              g$visit-code$11031$XW@M@
              g$invoke-code$11030$XW@M@
              g$inv*$11029$XW@M@
              g$vis*$11028$XW@M@
              g$imp*$11027$XW@M@
              g$ver$11026$XW@M@
              g$name$11025$XW@M@
              g$id$11024$XW@M@)))))))
   (g$rev-map-append$7960$XW@M@
     g$rev-map-append$11410$XW@M@
     (case-lambda
       ((g$f$11044$XW@M@ g$ls$11045$XW@M@ g$ac$11046$XW@M@)
        (if (null? g$ls$11045$XW@M@)
          g$ac$11046$XW@M@
          (g$rev-map-append$7960$XW@M@
            g$f$11044$XW@M@
            (cdr g$ls$11045$XW@M@)
            (cons
              (g$f$11044$XW@M@ (car g$ls$11045$XW@M@))
              g$ac$11046$XW@M@))))))
   (g$build-exports$7961$XW@M@
     g$build-exports$11411$XW@M@
     (case-lambda
       ((g$lex*+loc*$11047$XW@M@ g$init*$11048$XW@M@)
        (g$build-sequence$7521$XW@M@
          '#f
          (cons
            (g$build-void$7522$XW@M@)
            (g$rev-map-append$7960$XW@M@
              (case-lambda
                ((g$x$11049$XW@M@)
                 (list 'set! (cdr g$x$11049$XW@M@) (car g$x$11049$XW@M@))))
              g$lex*+loc*$11047$XW@M@
              g$init*$11048$XW@M@))))))
   (g$make-export-subst$7962$XW@M@
     g$make-export-subst$11412$XW@M@
     (case-lambda
       ((g$int*$11050$XW@M@ g$ext*$11051$XW@M@ g$rib$11052$XW@M@)
        (map (case-lambda
               ((g$int$11053$XW@M@ g$ext$11054$XW@M@)
                ((case-lambda
                   ((g$id$11055$XW@M@)
                    ((case-lambda
                       ((g$label$11056$XW@M@)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$11056$XW@M@
                                (void)
                                (g$syntax-violation$7971$XW@M@
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$11055$XW@M@))
                              (cons g$ext$11054$XW@M@ g$label$11056$XW@M@)))))))
                     (g$id->label$7600$XW@M@ g$id$11055$XW@M@))))
                 (g$make-stx$7560$XW@M@
                   g$int$11053$XW@M@
                   g$top-mark*$7529$XW@M@
                   (list g$rib$11052$XW@M@)
                   '()))))
             g$int*$11050$XW@M@
             g$ext*$11051$XW@M@))))
   (g$make-export-env/macros$7963$XW@M@
     g$make-export-env/macros$11413$XW@M@
     (case-lambda
       ((g$lex*$11057$XW@M@ g$loc*$11058$XW@M@ g$r$11059$XW@M@)
        (letrec* ((g$lookup$11060$XW@M@
                    (case-lambda
                      ((g$x$11075$XW@M@)
                       ((letrec ((g$f$11076$XW@M@
                                   (case-lambda
                                     ((g$x$11077$XW@M@
                                        g$lex*$11078$XW@M@
                                        g$loc*$11079$XW@M@)
                                      (if (pair? g$lex*$11078$XW@M@)
                                        (if (eq? g$x$11077$XW@M@
                                                 (car g$lex*$11078$XW@M@))
                                          (car g$loc*$11079$XW@M@)
                                          (g$f$11076$XW@M@
                                            g$x$11077$XW@M@
                                            (cdr g$lex*$11078$XW@M@)
                                            (cdr g$loc*$11079$XW@M@)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11076$XW@M@)
                        g$x$11075$XW@M@
                        g$lex*$11057$XW@M@
                        g$loc*$11058$XW@M@)))))
          ((letrec ((g$f$11061$XW@M@
                      (case-lambda
                        ((g$r$11062$XW@M@
                           g$env$11063$XW@M@
                           g$global*$11064$XW@M@
                           g$macro*$11065$XW@M@)
                         (if (null? g$r$11062$XW@M@)
                           (values
                             g$env$11063$XW@M@
                             g$global*$11064$XW@M@
                             g$macro*$11065$XW@M@)
                           ((case-lambda
                              ((g$x$11066$XW@M@)
                               ((case-lambda
                                  ((g$label$11067$XW@M@ g$b$11068$XW@M@)
                                   ((case-lambda
                                      ((g$t$11069$XW@M@)
                                       (if (eqv? g$t$11069$XW@M@ 'lexical)
                                         ((case-lambda
                                            ((g$v$11072$XW@M@)
                                             ((case-lambda
                                                ((g$loc$11073$XW@M@
                                                   g$type$11074$XW@M@)
                                                 (g$f$11061$XW@M@
                                                   (cdr g$r$11062$XW@M@)
                                                   (cons
                                                     (g$cons*$5873$XW@M@
                                                       g$label$11067$XW@M@
                                                       g$type$11074$XW@M@
                                                       g$loc$11073$XW@M@)
                                                     g$env$11063$XW@M@)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7809$XW@M@
                                                         g$v$11072$XW@M@)
                                                       g$loc$11073$XW@M@)
                                                     g$global*$11064$XW@M@)
                                                   g$macro*$11065$XW@M@)))
                                              (g$lookup$11060$XW@M@
                                                (g$lexical-var$7809$XW@M@
                                                  g$v$11072$XW@M@))
                                              (if (g$lexical-mutable?$7810$XW@M@
                                                    g$v$11072$XW@M@)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7605$XW@M@
                                            g$b$11068$XW@M@))
                                         (if (eqv? g$t$11069$XW@M@ 'local-macro)
                                           ((case-lambda
                                              ((g$loc$11071$XW@M@)
                                               (g$f$11061$XW@M@
                                                 (cdr g$r$11062$XW@M@)
                                                 (cons
                                                   (g$cons*$5873$XW@M@
                                                     g$label$11067$XW@M@
                                                     'global-macro
                                                     g$loc$11071$XW@M@)
                                                   g$env$11063$XW@M@)
                                                 g$global*$11064$XW@M@
                                                 (cons
                                                   (cons
                                                     g$loc$11071$XW@M@
                                                     (g$binding-value$7605$XW@M@
                                                       g$b$11068$XW@M@))
                                                   g$macro*$11065$XW@M@))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$11069$XW@M@
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$11070$XW@M@)
                                                 (g$f$11061$XW@M@
                                                   (cdr g$r$11062$XW@M@)
                                                   (cons
                                                     (g$cons*$5873$XW@M@
                                                       g$label$11067$XW@M@
                                                       'global-macro!
                                                       g$loc$11070$XW@M@)
                                                     g$env$11063$XW@M@)
                                                   g$global*$11064$XW@M@
                                                   (cons
                                                     (cons
                                                       g$loc$11070$XW@M@
                                                       (g$binding-value$7605$XW@M@
                                                         g$b$11068$XW@M@))
                                                     g$macro*$11065$XW@M@))))
                                              (gensym))
                                             (if (memv
                                                   g$t$11069$XW@M@
                                                   '($rtd $module))
                                               (g$f$11061$XW@M@
                                                 (cdr g$r$11062$XW@M@)
                                                 (cons
                                                   g$x$11066$XW@M@
                                                   g$env$11063$XW@M@)
                                                 g$global*$11064$XW@M@
                                                 g$macro*$11065$XW@M@)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7604$XW@M@
                                                   g$b$11068$XW@M@)
                                                 (g$binding-value$7605$XW@M@
                                                   g$b$11068$XW@M@))))))))
                                    (g$binding-type$7604$XW@M@
                                      g$b$11068$XW@M@))))
                                (car g$x$11066$XW@M@)
                                (cdr g$x$11066$XW@M@))))
                            (car g$r$11062$XW@M@)))))))
             g$f$11061$XW@M@)
           g$r$11059$XW@M@
           '()
           '()
           '())))))
   (g$generate-temporaries$7964$XW@M@
     g$generate-temporaries$11414$XW@M@
     (case-lambda
       ((g$ls$11080$XW@M@)
        ((case-lambda
           ((g$t$11081$XW@M@)
            ((case-lambda
               ((g$ls/false$11082$XW@M@)
                (if g$ls/false$11082$XW@M@
                  (apply
                    (case-lambda
                      ((g$ls$11083$XW@M@)
                       (map (case-lambda
                              ((g$x$11084$XW@M@)
                               (g$make-stx$7560$XW@M@
                                 ((case-lambda
                                    ((g$x$11085$XW@M@)
                                     (if ((case-lambda
                                            ((g$t$11086$XW@M@)
                                             (if g$t$11086$XW@M@
                                               g$t$11086$XW@M@
                                               (begin
                                                 '#f
                                                 (string? g$x$11085$XW@M@)))))
                                          (symbol? g$x$11085$XW@M@))
                                       (gensym g$x$11085$XW@M@)
                                       (gensym 't))))
                                  (g$syntax->datum$7974$XW@M@ g$x$11084$XW@M@))
                                 g$top-mark*$7529$XW@M@
                                 '()
                                 '())))
                            g$ls$11083$XW@M@)))
                    g$ls/false$11082$XW@M@)
                  ((case-lambda
                     ((g$t$11087$XW@M@)
                      ((case-lambda
                         ((g$ls/false$11088$XW@M@)
                          (if g$ls/false$11088$XW@M@
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11088$XW@M@)
                            (g$syntax-violation$7971$XW@M@
                              '#f
                              '"invalid syntax"
                              g$t$11087$XW@M@))))
                       (g$syntax-dispatch$7865$XW@M@ g$t$11087$XW@M@ '_))))
                   g$t$11081$XW@M@))))
             (g$syntax-dispatch$7865$XW@M@ g$t$11081$XW@M@ 'each-any))))
         g$ls$11080$XW@M@))))
   (g$free-identifier=?$7965$XW@M@
     g$free-identifier=?$11415$XW@M@
     (case-lambda
       ((g$x$11089$XW@M@ g$y$11090$XW@M@)
        (if (g$id?$7587$XW@M@ g$x$11089$XW@M@)
          (if (g$id?$7587$XW@M@ g$y$11090$XW@M@)
            (g$free-id=?$7591$XW@M@ g$x$11089$XW@M@ g$y$11090$XW@M@)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11090$XW@M@))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11089$XW@M@)))))
   (g$bound-identifier=?$7966$XW@M@
     g$bound-identifier=?$11416$XW@M@
     (case-lambda
       ((g$x$11091$XW@M@ g$y$11092$XW@M@)
        (if (g$id?$7587$XW@M@ g$x$11091$XW@M@)
          (if (g$id?$7587$XW@M@ g$y$11092$XW@M@)
            (g$bound-id=?$7590$XW@M@ g$x$11091$XW@M@ g$y$11092$XW@M@)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11092$XW@M@))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11091$XW@M@)))))
   (g$extract-position-condition$7967$XW@M@
     g$extract-position-condition$11417$XW@M@
     (case-lambda
       ((g$x$11093$XW@M@)
        (letrec* ((g$11791$11094$XW@M@
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11794$XW@M@
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11793$11095$XW@M@ '#f)
                  (g$11792$11096$XW@M@
                    (make-record-constructor-descriptor
                      g$11791$11094$XW@M@
                      &condition-rcd
                      g$11793$11095$XW@M@))
                  (g$11790$11097$XW@M@ (record-predicate g$11791$11094$XW@M@))
                  (g$make-source-condition$11098$XW@M@
                    (record-constructor g$11792$11096$XW@M@))
                  (g$11788$11099$XW@M@ (record-accessor g$11791$11094$XW@M@ '0))
                  (g$11789$11100$XW@M@ (record-accessor g$11791$11094$XW@M@ '1))
                  (g$source-condition?$11101$XW@M@
                    (condition-predicate g$11791$11094$XW@M@))
                  (g$source-filename$11102$XW@M@
                    (condition-accessor
                      g$11791$11094$XW@M@
                      g$11788$11099$XW@M@))
                  (g$source-character$11103$XW@M@
                    (condition-accessor
                      g$11791$11094$XW@M@
                      g$11789$11100$XW@M@)))
          (if (g$stx?$7559$XW@M@ g$x$11093$XW@M@)
            ((case-lambda
               ((g$x$11104$XW@M@)
                (if (annotation? g$x$11104$XW@M@)
                  ((case-lambda
                     ((g$src$11105$XW@M@)
                      (if (pair? g$src$11105$XW@M@)
                        (g$make-source-condition$11098$XW@M@
                          (car g$src$11105$XW@M@)
                          (cdr g$src$11105$XW@M@))
                        (condition))))
                   (annotation-source g$x$11104$XW@M@))
                  (condition))))
             (g$stx-expr$7561$XW@M@ g$x$11093$XW@M@))
            (condition))))))
   (g$syntax-error$7968$XW@M@
     g$syntax-error$11418$XW@M@
     (case-lambda
       ((g$x$11106$XW@M@ . g$args$11107$XW@M@)
        (begin
          (if (g$for-all$5871$XW@M@ string? g$args$11107$XW@M@)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11107$XW@M@))
          (raise
            (condition
              (g$make-message-condition$6125$XW@M@
                (if (null? g$args$11107$XW@M@)
                  '"invalid syntax"
                  (apply string-append g$args$11107$XW@M@)))
              (g$make-syntax-violation$6197$XW@M@
                (g$syntax->datum$7974$XW@M@ g$x$11106$XW@M@)
                '#f)
              (g$extract-position-condition$7967$XW@M@ g$x$11106$XW@M@)
              (g$extract-trace$7969$XW@M@ g$x$11106$XW@M@)))))))
   (g$extract-trace$7969$XW@M@
     g$extract-trace$11419$XW@M@
     (case-lambda
       ((g$x$11108$XW@M@)
        (letrec* ((g$11815$11109$XW@M@
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11818$XW@M@
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11817$11110$XW@M@ '#f)
                  (g$11816$11111$XW@M@
                    (make-record-constructor-descriptor
                      g$11815$11109$XW@M@
                      &condition-rcd
                      g$11817$11110$XW@M@))
                  (g$11814$11112$XW@M@ (record-predicate g$11815$11109$XW@M@))
                  (g$make-trace$11113$XW@M@
                    (record-constructor g$11816$11111$XW@M@))
                  (g$11813$11114$XW@M@ (record-accessor g$11815$11109$XW@M@ '0))
                  (g$trace?$11115$XW@M@
                    (condition-predicate g$11815$11109$XW@M@))
                  (g$trace-form$11116$XW@M@
                    (condition-accessor
                      g$11815$11109$XW@M@
                      g$11813$11114$XW@M@)))
          ((letrec ((g$f$11117$XW@M@
                      (case-lambda
                        ((g$x$11118$XW@M@)
                         (if (g$stx?$7559$XW@M@ g$x$11118$XW@M@)
                           (apply
                             condition
                             (g$make-trace$11113$XW@M@ g$x$11118$XW@M@)
                             (map g$f$11117$XW@M@
                                  (g$stx-ae*$7564$XW@M@ g$x$11118$XW@M@)))
                           (if (annotation? g$x$11118$XW@M@)
                             (g$make-trace$11113$XW@M@
                               (g$make-stx$7560$XW@M@
                                 g$x$11118$XW@M@
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11117$XW@M@)
           g$x$11108$XW@M@)))))
   (g$syntax-violation*$7970$XW@M@
     g$syntax-violation*$11420$XW@M@
     (case-lambda
       ((g$who$11119$XW@M@
          g$msg$11120$XW@M@
          g$form$11121$XW@M@
          g$condition-object$11122$XW@M@)
        (begin
          (if (string? g$msg$11120$XW@M@)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11120$XW@M@))
          ((case-lambda
             ((g$who$11123$XW@M@)
              (raise
                (condition
                  (if g$who$11123$XW@M@
                    (g$make-who-condition$6171$XW@M@ g$who$11123$XW@M@)
                    (condition))
                  (g$make-message-condition$6125$XW@M@ g$msg$11120$XW@M@)
                  g$condition-object$11122$XW@M@
                  (g$extract-position-condition$7967$XW@M@ g$form$11121$XW@M@)
                  (g$extract-trace$7969$XW@M@ g$form$11121$XW@M@)))))
           (if ((case-lambda
                  ((g$t$11124$XW@M@)
                   (if g$t$11124$XW@M@
                     g$t$11124$XW@M@
                     (begin '#f (symbol? g$who$11119$XW@M@)))))
                (string? g$who$11119$XW@M@))
             g$who$11119$XW@M@
             (if (not g$who$11119$XW@M@)
               ((case-lambda
                  ((g$t$11125$XW@M@)
                   ((case-lambda
                      ((g$ls/false$11126$XW@M@)
                       (if (if g$ls/false$11126$XW@M@
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11127$XW@M@)
                                    (g$id?$7587$XW@M@ g$id$11127$XW@M@)))
                                 g$ls/false$11126$XW@M@))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11128$XW@M@)
                              (g$syntax->datum$7974$XW@M@ g$id$11128$XW@M@)))
                           g$ls/false$11126$XW@M@)
                         ((case-lambda
                            ((g$t$11129$XW@M@)
                             ((case-lambda
                                ((g$ls/false$11130$XW@M@)
                                 (if (if g$ls/false$11130$XW@M@
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11131$XW@M@
                                                g$rest$11132$XW@M@)
                                              (g$id?$7587$XW@M@
                                                g$id$11131$XW@M@)))
                                           g$ls/false$11130$XW@M@))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11133$XW@M@ g$rest$11134$XW@M@)
                                        (g$syntax->datum$7974$XW@M@
                                          g$id$11133$XW@M@)))
                                     g$ls/false$11130$XW@M@)
                                   ((case-lambda
                                      ((g$t$11135$XW@M@)
                                       ((case-lambda
                                          ((g$ls/false$11136$XW@M@)
                                           (if g$ls/false$11136$XW@M@
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11136$XW@M@)
                                             (g$syntax-violation$7971$XW@M@
                                               '#f
                                               '"invalid syntax"
                                               g$t$11135$XW@M@))))
                                        (g$syntax-dispatch$7865$XW@M@
                                          g$t$11135$XW@M@
                                          '_))))
                                    g$t$11129$XW@M@))))
                              (g$syntax-dispatch$7865$XW@M@
                                g$t$11129$XW@M@
                                '(any . any)))))
                          g$t$11125$XW@M@))))
                    (g$syntax-dispatch$7865$XW@M@ g$t$11125$XW@M@ 'any))))
                g$form$11121$XW@M@)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11119$XW@M@))))))))
   (g$syntax-violation$7971$XW@M@
     g$syntax-violation$11421$XW@M@
     (case-lambda
       ((g$who$11137$XW@M@ g$msg$11138$XW@M@ g$form$11139$XW@M@)
        (g$syntax-violation$7971$XW@M@
          g$who$11137$XW@M@
          g$msg$11138$XW@M@
          g$form$11139$XW@M@
          '#f))
       ((g$who$11140$XW@M@
          g$msg$11141$XW@M@
          g$form$11142$XW@M@
          g$subform$11143$XW@M@)
        (g$syntax-violation*$7970$XW@M@
          g$who$11140$XW@M@
          g$msg$11141$XW@M@
          g$form$11142$XW@M@
          (g$make-syntax-violation$6197$XW@M@
            (g$syntax->datum$7974$XW@M@ g$form$11142$XW@M@)
            (g$syntax->datum$7974$XW@M@ g$subform$11143$XW@M@))))))
   (g$identifier?$7972$XW@M@
     g$identifier?$11422$XW@M@
     (case-lambda ((g$x$11144$XW@M@) (g$id?$7587$XW@M@ g$x$11144$XW@M@))))
   (g$datum->syntax$7973$XW@M@
     g$datum->syntax$11423$XW@M@
     (case-lambda
       ((g$id$11145$XW@M@ g$datum$11146$XW@M@)
        (if (g$id?$7587$XW@M@ g$id$11145$XW@M@)
          (g$datum->stx$7570$XW@M@ g$id$11145$XW@M@ g$datum$11146$XW@M@)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11145$XW@M@)))))
   (g$syntax->datum$7974$XW@M@
     g$syntax->datum$11424$XW@M@
     (case-lambda
       ((g$x$11147$XW@M@) (g$stx->datum$7598$XW@M@ g$x$11147$XW@M@))))
   (g$compile-r6rs-top-level$7975$XW@M@
     g$compile-r6rs-top-level$11425$XW@M@
     (case-lambda
       ((g$x*$11148$XW@M@)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7925$XW@M@ g$x*$11148$XW@M@)))
          (case-lambda
            ((g$lib*$11151$XW@M@ g$invoke-code$11152$XW@M@)
             ((case-lambda
                ((g$invoke-code$11153$XW@M@ g$lib*$11154$XW@M@)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$7402$XW@M@ g$lib*$11154$XW@M@)
                      (eval-core
                        (g$expanded->core$7101$XW@M@
                          g$invoke-code$11153$XW@M@)))))))
              g$invoke-code$11152$XW@M@
              g$lib*$11151$XW@M@)))))))
   (g$pre-compile-r6rs-top-level$7976$XW@M@
     g$pre-compile-r6rs-top-level$11426$XW@M@
     (case-lambda
       ((g$x*$11155$XW@M@)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7925$XW@M@ g$x*$11155$XW@M@)))
          (case-lambda
            ((g$lib*$11158$XW@M@ g$invoke-code$11159$XW@M@)
             ((case-lambda
                ((g$invoke-code$11160$XW@M@ g$lib*$11161$XW@M@)
                 (begin
                   (for-each g$invoke-library$7402$XW@M@ g$lib*$11161$XW@M@)
                   (compile-core
                     (g$expanded->core$7101$XW@M@ g$invoke-code$11160$XW@M@)))))
              g$invoke-code$11159$XW@M@
              g$lib*$11158$XW@M@)))))))
   (g$interaction-environment$7977$XW@M@
     g$interaction-environment$11427$XW@M@
     ((case-lambda
        ((g$the-env$11162$XW@M@)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11163$XW@M@)
                (if g$t$11163$XW@M@
                  g$t$11163$XW@M@
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11164$XW@M@ g$rib$11165$XW@M@)
                        (begin
                          ((case-lambda
                             ((g$subst$11166$XW@M@)
                              (begin
                                (g$set-rib-sym*!$7546$XW@M@
                                  g$rib$11165$XW@M@
                                  (map car g$subst$11166$XW@M@))
                                (g$set-rib-mark**!$7547$XW@M@
                                  g$rib$11165$XW@M@
                                  (map (case-lambda
                                         ((g$x$11167$XW@M@)
                                          g$top-mark*$7529$XW@M@))
                                       g$subst$11166$XW@M@))
                                (g$set-rib-label*!$7548$XW@M@
                                  g$rib$11165$XW@M@
                                  (map cdr g$subst$11166$XW@M@)))))
                           (g$library-subst$7359$XW@M@ g$lib$11164$XW@M@))
                          ((case-lambda
                             ((g$env$11168$XW@M@)
                              (begin
                                (set! g$the-env$11162$XW@M@ g$env$11168$XW@M@)
                                g$env$11168$XW@M@)))
                           (g$make-interaction-env$7942$XW@M@
                             g$rib$11165$XW@M@
                             '()
                             '())))))
                     (g$find-library-by-name$7395$XW@M@ '(ironscheme))
                     (g$make-empty-rib$7550$XW@M@))))))
             g$the-env$11162$XW@M@)))))
      '#f))
   (g$top-level-context$7978$XW@M@
     g$top-level-context$11428$XW@M@
     (g$make-parameter$6854$XW@M@ '#f)))
  (g$current-library-expander$7392$XW@M@ g$library-expander$7958$XW@M@))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7098$XW@M@
      (case-lambda
        ((g$x$11481$XW@M@)
         ((case-lambda
            ((g$t$11482$XW@M@) (if g$t$11482$XW@M@ (cdr g$t$11482$XW@M@) '#f)))
          (assq
            g$x$11481$XW@M@
            '((ellipsis-map . g$ellipsis-map$11320$XW@M@)
              (ironscheme-build . g$ironscheme-build$11474$XW@M@)
              (syntax-error . g$syntax-error$11418$XW@M@)
              (syntax-dispatch . g$syntax-dispatch$11315$XW@M@)
              (compile-system-libraries
                .
                g$compile-system-libraries$11476$XW@M@)
              (compile->closure . g$compile->closure$11478$XW@M@)
              (compile . g$compile$11477$XW@M@)
              (load . g$load$11473$XW@M@)
              (interaction-environment . g$interaction-environment$11427$XW@M@)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11253$XW@M@)
              (variable-transformer? . g$variable-transformer?$11252$XW@M@)
              (make-variable-transformer
                .
                g$make-variable-transformer$11251$XW@M@)
              (identifier? . g$identifier?$11422$XW@M@)
              (generate-temporaries . g$generate-temporaries$11414$XW@M@)
              (free-identifier=? . g$free-identifier=?$11415$XW@M@)
              (syntax->datum . g$syntax->datum$11424$XW@M@)
              (datum->syntax . g$datum->syntax$11423$XW@M@)
              (bound-identifier=? . g$bound-identifier=?$11416$XW@M@)
              (delete-file . g$delete-file$5743$XW@M@)
              (file-exists? . g$file-exists?$5742$XW@M@)
              (list-sort . g$list-sort$6259$XW@M@)
              (make-eqv-hashtable . g$make-eqv-hashtable$5665$XW@M@)
              (make-eq-hashtable . g$make-eq-hashtable$5664$XW@M@)
              (hashtable-update! . g$hashtable-update!$5671$XW@M@)
              (hashtable-size . g$hashtable-size$5666$XW@M@)
              (hashtable-set! . g$hashtable-set!$5668$XW@M@)
              (hashtable-ref . g$hashtable-ref$5667$XW@M@)
              (hashtable-delete! . g$hashtable-delete!$5669$XW@M@)
              (hashtable-contains? . g$hashtable-contains?$5670$XW@M@)
              (hashtable-clear! . g$hashtable-clear!$5672$XW@M@)
              (port? . g$port?$6605$XW@M@)
              (open-string-output-port . g$open-string-output-port$6604$XW@M@)
              (make-i/o-write-error . g$make-i/o-write-error$6530$XW@M@)
              (make-i/o-read-error . g$make-i/o-read-error$6524$XW@M@)
              (make-i/o-port-error . g$make-i/o-port-error$6576$XW@M@)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6536$XW@M@)
              (make-i/o-filename-error . g$make-i/o-filename-error$6544$XW@M@)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6552$XW@M@)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6558$XW@M@)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6570$XW@M@)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6564$XW@M@)
              (make-i/o-error . g$make-i/o-error$6518$XW@M@)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6590$XW@M@)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6584$XW@M@)
              (i/o-write-error? . g$i/o-write-error?$6531$XW@M@)
              (i/o-read-error? . g$i/o-read-error?$6525$XW@M@)
              (i/o-port-error? . g$i/o-port-error?$6578$XW@M@)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6538$XW@M@)
              (i/o-error-position . g$i/o-error-position$6539$XW@M@)
              (i/o-filename-error? . g$i/o-filename-error?$6546$XW@M@)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6553$XW@M@)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6559$XW@M@)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6571$XW@M@)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6565$XW@M@)
              (i/o-error? . g$i/o-error?$6519$XW@M@)
              (i/o-error-port . g$i/o-error-port$6579$XW@M@)
              (i/o-error-filename . g$i/o-error-filename$6547$XW@M@)
              (i/o-encoding-error? . g$i/o-encoding-error?$6592$XW@M@)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6593$XW@M@)
              (i/o-decoding-error? . g$i/o-decoding-error?$6585$XW@M@)
              (scheme-report-environment
                .
                g$scheme-report-environment$11405$XW@M@)
              (quotient . g$quotient$6228$XW@M@)
              (null-environment . g$null-environment$11404$XW@M@)
              (remainder . g$remainder$6229$XW@M@)
              (modulo . g$modulo$6230$XW@M@)
              (command-line . g$command-line$11470$XW@M@)
              (remove . g$remove$5876$XW@M@)
              (remv . g$remv$5877$XW@M@)
              (remp . g$remp$5862$XW@M@)
              (remq . g$remq$5878$XW@M@)
              (partition . g$partition$5861$XW@M@)
              (memp . g$memp$5868$XW@M@)
              (member . g$member$5867$XW@M@)
              (exists . g$exists$5872$XW@M@)
              (for-all . g$for-all$5871$XW@M@)
              (fold-right . g$fold-right$5875$XW@M@)
              (fold-left . g$fold-left$5874$XW@M@)
              (find . g$find$5860$XW@M@)
              (filter . g$filter$5863$XW@M@)
              (cons* . g$cons*$5873$XW@M@)
              (assv . g$assv$5864$XW@M@)
              (assp . g$assp$5866$XW@M@)
              (assoc . g$assoc$5865$XW@M@)
              (eval . g$eval$11407$XW@M@)
              (environment . g$environment$11403$XW@M@)
              (make-enumeration . g$make-enumeration$6731$XW@M@)
              (enum-set=? . g$enum-set=?$6738$XW@M@)
              (enum-set-universe . g$enum-set-universe$6732$XW@M@)
              (enum-set-union . g$enum-set-union$6739$XW@M@)
              (enum-set-subset? . g$enum-set-subset?$6737$XW@M@)
              (enum-set-projection . g$enum-set-projection$6743$XW@M@)
              (enum-set-member? . g$enum-set-member?$6736$XW@M@)
              (enum-set-intersection . g$enum-set-intersection$6740$XW@M@)
              (enum-set-indexer . g$enum-set-indexer$6733$XW@M@)
              (enum-set-difference . g$enum-set-difference$6741$XW@M@)
              (enum-set-constructor . g$enum-set-constructor$6734$XW@M@)
              (enum-set-complement . g$enum-set-complement$6742$XW@M@)
              (enum-set->list . g$enum-set->list$6735$XW@M@)
              (who-condition? . g$who-condition?$6173$XW@M@)
              (warning? . g$warning?$6134$XW@M@)
              (violation? . g$violation?$6152$XW@M@)
              (undefined-violation? . g$undefined-violation?$6208$XW@M@)
              (syntax-violation? . g$syntax-violation?$6200$XW@M@)
              (syntax-violation-subform . g$syntax-violation-subform$6202$XW@M@)
              (syntax-violation-form . g$syntax-violation-form$6201$XW@M@)
              (syntax-violation . g$syntax-violation$11421$XW@M@)
              (serious-condition? . g$serious-condition?$6140$XW@M@)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6180$XW@M@)
              (message-condition? . g$message-condition?$6127$XW@M@)
              (make-who-condition . g$make-who-condition$6171$XW@M@)
              (make-warning . g$make-warning$6133$XW@M@)
              (make-violation . g$make-violation$6151$XW@M@)
              (make-undefined-violation . g$make-undefined-violation$6207$XW@M@)
              (make-syntax-violation . g$make-syntax-violation$6197$XW@M@)
              (make-serious-condition . g$make-serious-condition$6139$XW@M@)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6179$XW@M@)
              (make-message-condition . g$make-message-condition$6125$XW@M@)
              (make-lexical-violation . g$make-lexical-violation$6191$XW@M@)
              (make-irritants-condition . g$make-irritants-condition$6163$XW@M@)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6185$XW@M@)
              (make-error . g$make-error$6145$XW@M@)
              (make-assertion-violation . g$make-assertion-violation$6157$XW@M@)
              (lexical-violation? . g$lexical-violation?$6192$XW@M@)
              (irritants-condition? . g$irritants-condition?$6165$XW@M@)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6186$XW@M@)
              (error? . g$error?$6146$XW@M@)
              (condition-who . g$condition-who$6174$XW@M@)
              (condition-message . g$condition-message$6128$XW@M@)
              (condition-irritants . g$condition-irritants$6166$XW@M@)
              (assertion-violation? . g$assertion-violation?$6158$XW@M@)
              (native-endianness . g$native-endianness$5990$XW@M@)
              (bytevector-u64-set! . g$bytevector-u64-set!$6011$XW@M@)
              (bytevector-u64-ref . g$bytevector-u64-ref$6007$XW@M@)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6013$XW@M@)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6009$XW@M@)
              (bytevector-u32-set! . g$bytevector-u32-set!$6003$XW@M@)
              (bytevector-u32-ref . g$bytevector-u32-ref$5999$XW@M@)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6005$XW@M@)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6001$XW@M@)
              (bytevector-u16-set! . g$bytevector-u16-set!$5995$XW@M@)
              (bytevector-u16-ref . g$bytevector-u16-ref$5991$XW@M@)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5997$XW@M@)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5993$XW@M@)
              (bytevector-s64-set! . g$bytevector-s64-set!$6012$XW@M@)
              (bytevector-s64-ref . g$bytevector-s64-ref$6008$XW@M@)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6014$XW@M@)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6010$XW@M@)
              (bytevector-s32-set! . g$bytevector-s32-set!$6004$XW@M@)
              (bytevector-s32-ref . g$bytevector-s32-ref$6000$XW@M@)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6006$XW@M@)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6002$XW@M@)
              (bytevector-s16-set! . g$bytevector-s16-set!$5996$XW@M@)
              (bytevector-s16-ref . g$bytevector-s16-ref$5992$XW@M@)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5998$XW@M@)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5994$XW@M@)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6017$XW@M@)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6015$XW@M@)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6018$XW@M@)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6016$XW@M@)
              (no-nans-violation? . g$no-nans-violation?$6433$XW@M@)
              (no-infinities-violation? . g$no-infinities-violation?$6427$XW@M@)
              (make-no-nans-violation . g$make-no-nans-violation$6432$XW@M@)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6426$XW@M@)
              (fxrotate-bit-field . g$fxrotate-bit-field$6409$XW@M@)
              (fxif . g$fxif$6403$XW@M@)
              (fxcopy-bit-field . g$fxcopy-bit-field$6406$XW@M@)
              (fxcopy-bit . g$fxcopy-bit$6404$XW@M@)
              (fxbit-field . g$fxbit-field$6405$XW@M@)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6408$XW@M@)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6407$XW@M@)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6354$XW@M@)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$6355$XW@M@)
              (bitwise-if . g$bitwise-if$6348$XW@M@)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6351$XW@M@)
              (bitwise-copy-bit . g$bitwise-copy-bit$6349$XW@M@)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6353$XW@M@)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6352$XW@M@)
              (rationalize . g$rationalize$5429$XW@M@)
              (cddddr . g$cddddr$5428$XW@M@)
              (cdddar . g$cdddar$5427$XW@M@)
              (cddadr . g$cddadr$5426$XW@M@)
              (cddaar . g$cddaar$5425$XW@M@)
              (cdaddr . g$cdaddr$5424$XW@M@)
              (cdadar . g$cdadar$5423$XW@M@)
              (cdaadr . g$cdaadr$5422$XW@M@)
              (cdaaar . g$cdaaar$5421$XW@M@)
              (cadddr . g$cadddr$5420$XW@M@)
              (caddar . g$caddar$5419$XW@M@)
              (cadadr . g$cadadr$5418$XW@M@)
              (cadaar . g$cadaar$5417$XW@M@)
              (caaddr . g$caaddr$5416$XW@M@)
              (caadar . g$caadar$5415$XW@M@)
              (caaadr . g$caaadr$5414$XW@M@)
              (caaaar . g$caaaar$5413$XW@M@)
              (cdddr . g$cdddr$5412$XW@M@)
              (cddar . g$cddar$5411$XW@M@)
              (cdadr . g$cdadr$5410$XW@M@)
              (cdaar . g$cdaar$5409$XW@M@)
              (caddr . g$caddr$5408$XW@M@)
              (cadar . g$cadar$5407$XW@M@)
              (caadr . g$caadr$5406$XW@M@)
              (caaar . g$caaar$5405$XW@M@)
              (cddr . g$cddr$5404$XW@M@)
              (cdar . g$cdar$5403$XW@M@)
              (cadr . g$cadr$5402$XW@M@)
              (caar . g$caar$5401$XW@M@)
              (load/args . g$load/args$11472$XW@M@)
              (printf . g$printf$6767$XW@M@)
              (fprintf . g$fprintf$6768$XW@M@)
              (format . g$format$6769$XW@M@)
              (trace-printer . g$trace-printer$11469$XW@M@)
              (make-traced-macro . g$make-traced-macro$6773$XW@M@)
              (make-parameter . g$make-parameter$6854$XW@M@)
              (environment-symbols . g$environment-symbols$11401$XW@M@)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11400$XW@M@)
              (library-path . g$library-path$7384$XW@M@)
              (library-extensions . g$library-extensions$7385$XW@M@)
              (installed-libraries . g$installed-libraries$7405$XW@M@)
              (expand . g$expand$11406$XW@M@)))))))
    (g$install-library$7400$XW@M@
      'g$12562$XW@M@
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12499$XW@M@)
        (cosh . g$12498$XW@M@)
        (sinh . g$12497$XW@M@)
        (make-guid . g$12496$XW@M@)
        (unspecified? . g$12495$XW@M@)
        (make-trace . g$12494$XW@M@)
        (make-list . g$12493$XW@M@)
        (last-pair . g$12492$XW@M@)
        (load-r5rs . g$12491$XW@M@)
        (license . g$12490$XW@M@)
        (stacktrace . g$12489$XW@M@)
        (ironscheme-build . g$11887$XW@M@)
        (set-symbol-value! . g$12475$XW@M@)
        (symbol-value . g$12474$XW@M@)
        (ungensym . g$12473$XW@M@)
        (gensym . g$12472$XW@M@)
        (void . g$12471$XW@M@)
        (compile-system-libraries . g$11889$XW@M@)
        (compile->closure . g$11891$XW@M@)
        (compile . g$11890$XW@M@)
        (load . g$11886$XW@M@)
        (interaction-environment . g$8955$XW@M@)
        (string-upcase . g$12467$XW@M@)
        (string-titlecase . g$12466$XW@M@)
        (string-normalize-nfkd . g$12465$XW@M@)
        (string-normalize-nfkc . g$12464$XW@M@)
        (string-normalize-nfd . g$12463$XW@M@)
        (string-normalize-nfc . g$12462$XW@M@)
        (string-foldcase . g$12461$XW@M@)
        (string-downcase . g$12460$XW@M@)
        (string-ci>? . g$12459$XW@M@)
        (string-ci>=? . g$12458$XW@M@)
        (string-ci=? . g$12457$XW@M@)
        (string-ci<? . g$12456$XW@M@)
        (string-ci<=? . g$12455$XW@M@)
        (char-whitespace? . g$12454$XW@M@)
        (char-upper-case? . g$12453$XW@M@)
        (char-title-case? . g$12452$XW@M@)
        (char-numeric? . g$12451$XW@M@)
        (char-lower-case? . g$12450$XW@M@)
        (char-general-category . g$12449$XW@M@)
        (char-upcase . g$12448$XW@M@)
        (char-titlecase . g$12447$XW@M@)
        (char-foldcase . g$12446$XW@M@)
        (char-downcase . g$12445$XW@M@)
        (char-ci>? . g$12444$XW@M@)
        (char-ci>=? . g$12443$XW@M@)
        (char-ci=? . g$12442$XW@M@)
        (char-ci<? . g$12441$XW@M@)
        (char-ci<=? . g$12440$XW@M@)
        (char-alphabetic? . g$12439$XW@M@)
        (variable-transformer-procedure . g$8559$XW@M@)
        (variable-transformer? . g$8558$XW@M@)
        (make-variable-transformer . g$8557$XW@M@)
        (identifier? . g$8950$XW@M@)
        (generate-temporaries . g$8942$XW@M@)
        (free-identifier=? . g$8943$XW@M@)
        (syntax->datum . g$8952$XW@M@)
        (datum->syntax . g$8951$XW@M@)
        (bound-identifier=? . g$8944$XW@M@)
        (record-type-descriptor? . g$12438$XW@M@)
        (record-predicate . g$12437$XW@M@)
        (record-mutator . g$12436$XW@M@)
        (record-constructor . g$12435$XW@M@)
        (record-accessor . g$12434$XW@M@)
        (make-record-type-descriptor . g$12433$XW@M@)
        (make-record-constructor-descriptor . g$12432$XW@M@)
        (record? . g$12431$XW@M@)
        (record-type-uid . g$12430$XW@M@)
        (record-type-sealed? . g$12429$XW@M@)
        (record-type-parent . g$12428$XW@M@)
        (record-type-opaque? . g$12427$XW@M@)
        (record-type-name . g$12426$XW@M@)
        (record-type-generative? . g$12425$XW@M@)
        (record-type-field-names . g$12424$XW@M@)
        (record-rtd . g$12423$XW@M@)
        (record-field-mutable? . g$12422$XW@M@)
        (delete-file . g$6619$XW@M@)
        (file-exists? . g$6618$XW@M@)
        (vector-sort! . g$12421$XW@M@)
        (vector-sort . g$12420$XW@M@)
        (list-sort . g$7125$XW@M@)
        (symbol-hash . g$12419$XW@M@)
        (string-ci-hash . g$12418$XW@M@)
        (string-hash . g$12417$XW@M@)
        (equal-hash . g$12416$XW@M@)
        (hashtable-equivalence-function . g$12415$XW@M@)
        (make-hashtable . g$12414$XW@M@)
        (hashtable-hash-function . g$12413$XW@M@)
        (make-eqv-hashtable . g$6586$XW@M@)
        (make-eq-hashtable . g$6585$XW@M@)
        (hashtable? . g$12412$XW@M@)
        (hashtable-update! . g$6592$XW@M@)
        (hashtable-size . g$6587$XW@M@)
        (hashtable-set! . g$6589$XW@M@)
        (hashtable-ref . g$6588$XW@M@)
        (hashtable-mutable? . g$12411$XW@M@)
        (hashtable-keys . g$12410$XW@M@)
        (hashtable-entries . g$12409$XW@M@)
        (hashtable-delete! . g$6590$XW@M@)
        (hashtable-copy . g$12408$XW@M@)
        (hashtable-contains? . g$6591$XW@M@)
        (hashtable-clear! . g$6593$XW@M@)
        (call-with-output-file . g$12407$XW@M@)
        (call-with-input-file . g$12406$XW@M@)
        (write-char . g$12405$XW@M@)
        (write . g$12404$XW@M@)
        (with-output-to-file . g$12403$XW@M@)
        (with-input-from-file . g$12402$XW@M@)
        (read-char . g$12401$XW@M@)
        (read . g$12400$XW@M@)
        (peek-char . g$12399$XW@M@)
        (open-output-file . g$12398$XW@M@)
        (open-input-file . g$12397$XW@M@)
        (newline . g$12396$XW@M@)
        (display . g$12395$XW@M@)
        (close-output-port . g$12394$XW@M@)
        (close-input-port . g$12393$XW@M@)
        (eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (utf-8-codec . g$12385$XW@M@)
        (utf-16-codec . g$12384$XW@M@)
        (transcoder-error-handling-mode . g$12383$XW@M@)
        (transcoder-eol-style . g$12382$XW@M@)
        (transcoder-codec . g$12381$XW@M@)
        (transcoded-port . g$12380$XW@M@)
        (textual-port? . g$12379$XW@M@)
        (string->bytevector . g$12378$XW@M@)
        (standard-output-port . g$12377$XW@M@)
        (standard-input-port . g$12376$XW@M@)
        (standard-error-port . g$12375$XW@M@)
        (set-port-position! . g$12374$XW@M@)
        (put-u8 . g$12373$XW@M@)
        (put-string . g$12372$XW@M@)
        (put-datum . g$12371$XW@M@)
        (put-char . g$12370$XW@M@)
        (put-bytevector . g$12369$XW@M@)
        (port? . g$7517$XW@M@)
        (port-transcoder . g$12368$XW@M@)
        (port-position . g$12367$XW@M@)
        (port-has-set-port-position!? . g$12366$XW@M@)
        (port-has-port-position? . g$12365$XW@M@)
        (port-eof? . g$12364$XW@M@)
        (output-port-buffer-mode . g$12363$XW@M@)
        (open-string-output-port . g$7516$XW@M@)
        (open-string-input-port . g$12362$XW@M@)
        (open-file-output-port . g$12361$XW@M@)
        (open-file-input/output-port . g$12360$XW@M@)
        (open-file-input-port . g$12359$XW@M@)
        (open-bytevector-output-port . g$12358$XW@M@)
        (open-bytevector-input-port . g$12357$XW@M@)
        (native-transcoder . g$12356$XW@M@)
        (native-eol-style . g$12355$XW@M@)
        (make-transcoder . g$12354$XW@M@)
        (latin-1-codec . g$12353$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (make-i/o-encoding-error . g$7509$XW@M@)
        (make-i/o-decoding-error . g$7494$XW@M@)
        (make-custom-textual-output-port . g$12352$XW@M@)
        (make-custom-textual-input/output-port . g$12351$XW@M@)
        (make-custom-textual-input-port . g$12350$XW@M@)
        (make-custom-binary-output-port . g$12349$XW@M@)
        (make-custom-binary-input/output-port . g$12348$XW@M@)
        (make-custom-binary-input-port . g$12347$XW@M@)
        (make-bytevector . g$12346$XW@M@)
        (lookahead-u8 . g$12345$XW@M@)
        (lookahead-char . g$12344$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (i/o-encoding-error? . g$7511$XW@M@)
        (i/o-encoding-error-char . g$7512$XW@M@)
        (i/o-decoding-error? . g$7495$XW@M@)
        (get-u8 . g$12343$XW@M@)
        (get-string-n! . g$12342$XW@M@)
        (get-string-n . g$12341$XW@M@)
        (get-string-all . g$12340$XW@M@)
        (get-line . g$12339$XW@M@)
        (get-datum . g$12338$XW@M@)
        (get-char . g$12337$XW@M@)
        (get-bytevector-some . g$12336$XW@M@)
        (get-bytevector-n! . g$12335$XW@M@)
        (get-bytevector-n . g$12334$XW@M@)
        (get-bytevector-all . g$12333$XW@M@)
        (flush-output-port . g$12332$XW@M@)
        (close-port . g$12331$XW@M@)
        (call-with-string-output-port . g$12330$XW@M@)
        (call-with-port . g$12329$XW@M@)
        (call-with-bytevector-output-port . g$12328$XW@M@)
        (bytevector->string . g$12327$XW@M@)
        (buffer-mode? . g$12326$XW@M@)
        (binary-port? . g$12325$XW@M@)
        (scheme-report-environment . g$8933$XW@M@)
        (quotient . g$7112$XW@M@)
        (null-environment . g$8932$XW@M@)
        (remainder . g$7113$XW@M@)
        (modulo . g$7114$XW@M@)
        (inexact->exact . g$12324$XW@M@)
        (force . g$12323$XW@M@)
        (exact->inexact . g$12322$XW@M@)
        (exit . g$12321$XW@M@)
        (command-line . g$11883$XW@M@)
        (string-fill! . g$12320$XW@M@)
        (string-set! . g$12319$XW@M@)
        (set-cdr! . g$12318$XW@M@)
        (set-car! . g$12317$XW@M@)
        (remove . g$6699$XW@M@)
        (remv . g$6700$XW@M@)
        (remp . g$6685$XW@M@)
        (remq . g$6701$XW@M@)
        (partition . g$6684$XW@M@)
        (memv . g$12316$XW@M@)
        (memq . g$12315$XW@M@)
        (memp . g$6691$XW@M@)
        (member . g$6690$XW@M@)
        (exists . g$6695$XW@M@)
        (for-all . g$6694$XW@M@)
        (fold-right . g$6698$XW@M@)
        (fold-left . g$6697$XW@M@)
        (find . g$6683$XW@M@)
        (filter . g$6686$XW@M@)
        (cons* . g$6696$XW@M@)
        (assv . g$6687$XW@M@)
        (assq . g$12314$XW@M@)
        (assp . g$6689$XW@M@)
        (assoc . g$6688$XW@M@)
        (with-exception-handler . g$12313$XW@M@)
        (raise-continuable . g$12312$XW@M@)
        (raise . g$12311$XW@M@)
        (eval . g$8935$XW@M@)
        (environment . g$8931$XW@M@)
        (make-enumeration . g$7559$XW@M@)
        (enum-set=? . g$7566$XW@M@)
        (enum-set-universe . g$7560$XW@M@)
        (enum-set-union . g$7567$XW@M@)
        (enum-set-subset? . g$7565$XW@M@)
        (enum-set-projection . g$7571$XW@M@)
        (enum-set-member? . g$7564$XW@M@)
        (enum-set-intersection . g$7568$XW@M@)
        (enum-set-indexer . g$7561$XW@M@)
        (enum-set-difference . g$7569$XW@M@)
        (enum-set-constructor . g$7562$XW@M@)
        (enum-set-complement . g$7570$XW@M@)
        (enum-set->list . g$7563$XW@M@)
        (who-condition? . g$7023$XW@M@)
        (warning? . g$6934$XW@M@)
        (violation? . g$6976$XW@M@)
        (undefined-violation? . g$7100$XW@M@)
        (syntax-violation? . g$7084$XW@M@)
        (syntax-violation-subform . g$7086$XW@M@)
        (syntax-violation-form . g$7085$XW@M@)
        (syntax-violation . g$8949$XW@M@)
        (simple-conditions . g$12310$XW@M@)
        (serious-condition? . g$6948$XW@M@)
        (non-continuable-violation? . g$7038$XW@M@)
        (message-condition? . g$6919$XW@M@)
        (make-who-condition . g$7021$XW@M@)
        (make-warning . g$6933$XW@M@)
        (make-violation . g$6975$XW@M@)
        (make-undefined-violation . g$7099$XW@M@)
        (make-syntax-violation . g$7081$XW@M@)
        (make-serious-condition . g$6947$XW@M@)
        (make-non-continuable-violation . g$7037$XW@M@)
        (make-message-condition . g$6917$XW@M@)
        (make-lexical-violation . g$7065$XW@M@)
        (make-irritants-condition . g$7004$XW@M@)
        (make-implementation-restriction-violation . g$7051$XW@M@)
        (make-error . g$6961$XW@M@)
        (make-assertion-violation . g$6989$XW@M@)
        (lexical-violation? . g$7066$XW@M@)
        (irritants-condition? . g$7006$XW@M@)
        (implementation-restriction-violation? . g$7052$XW@M@)
        (error? . g$6962$XW@M@)
        (condition-who . g$7024$XW@M@)
        (condition-predicate . g$12309$XW@M@)
        (condition-message . g$6920$XW@M@)
        (condition-irritants . g$7007$XW@M@)
        (condition-accessor . g$12308$XW@M@)
        (condition . g$12307$XW@M@)
        (assertion-violation? . g$6990$XW@M@)
        (condition? . g$12306$XW@M@)
        (utf32->string . g$12305$XW@M@)
        (utf16->string . g$12304$XW@M@)
        (utf8->string . g$12303$XW@M@)
        (uint-list->bytevector . g$12302$XW@M@)
        (u8-list->bytevector . g$12301$XW@M@)
        (string->utf8 . g$12300$XW@M@)
        (string->utf32 . g$12299$XW@M@)
        (string->utf16 . g$12298$XW@M@)
        (sint-list->bytevector . g$12297$XW@M@)
        (native-endianness . g$6775$XW@M@)
        (bytevector? . g$12296$XW@M@)
        (bytevector=? . g$12295$XW@M@)
        (bytevector-uint-set! . g$12294$XW@M@)
        (bytevector-uint-ref . g$12293$XW@M@)
        (bytevector-u8-set! . g$12292$XW@M@)
        (bytevector-u8-ref . g$12291$XW@M@)
        (bytevector-u64-set! . g$6796$XW@M@)
        (bytevector-u64-ref . g$6792$XW@M@)
        (bytevector-u64-native-set! . g$6798$XW@M@)
        (bytevector-u64-native-ref . g$6794$XW@M@)
        (bytevector-u32-set! . g$6788$XW@M@)
        (bytevector-u32-ref . g$6784$XW@M@)
        (bytevector-u32-native-set! . g$6790$XW@M@)
        (bytevector-u32-native-ref . g$6786$XW@M@)
        (bytevector-u16-set! . g$6780$XW@M@)
        (bytevector-u16-ref . g$6776$XW@M@)
        (bytevector-u16-native-set! . g$6782$XW@M@)
        (bytevector-u16-native-ref . g$6778$XW@M@)
        (bytevector-sint-set! . g$12290$XW@M@)
        (bytevector-sint-ref . g$12289$XW@M@)
        (bytevector-s8-set! . g$12288$XW@M@)
        (bytevector-s8-ref . g$12287$XW@M@)
        (bytevector-s64-set! . g$6797$XW@M@)
        (bytevector-s64-ref . g$6793$XW@M@)
        (bytevector-s64-native-set! . g$6799$XW@M@)
        (bytevector-s64-native-ref . g$6795$XW@M@)
        (bytevector-s32-set! . g$6789$XW@M@)
        (bytevector-s32-ref . g$6785$XW@M@)
        (bytevector-s32-native-set! . g$6791$XW@M@)
        (bytevector-s32-native-ref . g$6787$XW@M@)
        (bytevector-s16-set! . g$6781$XW@M@)
        (bytevector-s16-ref . g$6777$XW@M@)
        (bytevector-s16-native-set! . g$6783$XW@M@)
        (bytevector-s16-native-ref . g$6779$XW@M@)
        (bytevector-length . g$12286$XW@M@)
        (bytevector-ieee-single-set! . g$12285$XW@M@)
        (bytevector-ieee-single-ref . g$12284$XW@M@)
        (bytevector-ieee-single-native-set! . g$6802$XW@M@)
        (bytevector-ieee-single-native-ref . g$6800$XW@M@)
        (bytevector-ieee-double-set! . g$12283$XW@M@)
        (bytevector-ieee-double-ref . g$12282$XW@M@)
        (bytevector-ieee-double-native-set! . g$6803$XW@M@)
        (bytevector-ieee-double-native-ref . g$6801$XW@M@)
        (bytevector-fill! . g$12281$XW@M@)
        (bytevector-copy! . g$12280$XW@M@)
        (bytevector-copy . g$12279$XW@M@)
        (bytevector->uint-list . g$12278$XW@M@)
        (bytevector->u8-list . g$12277$XW@M@)
        (bytevector->sint-list . g$12276$XW@M@)
        (no-nans-violation? . g$7331$XW@M@)
        (no-infinities-violation? . g$7317$XW@M@)
        (make-no-nans-violation . g$7330$XW@M@)
        (make-no-infinities-violation . g$7316$XW@M@)
        (real->flonum . g$12275$XW@M@)
        (flzero? . g$12274$XW@M@)
        (fltruncate . g$12273$XW@M@)
        (fltan . g$12272$XW@M@)
        (flsqrt . g$12271$XW@M@)
        (flsin . g$12270$XW@M@)
        (flround . g$12269$XW@M@)
        (flpositive? . g$12268$XW@M@)
        (flonum? . g$12267$XW@M@)
        (flodd? . g$12266$XW@M@)
        (flnumerator . g$12265$XW@M@)
        (flnegative? . g$12264$XW@M@)
        (flnan? . g$12263$XW@M@)
        (flmod0 . g$12262$XW@M@)
        (flmod . g$12261$XW@M@)
        (flmin . g$12260$XW@M@)
        (flmax . g$12259$XW@M@)
        (fllog . g$12258$XW@M@)
        (flinteger? . g$12257$XW@M@)
        (flinfinite? . g$12256$XW@M@)
        (flfloor . g$12255$XW@M@)
        (flfinite? . g$12254$XW@M@)
        (flexpt . g$12253$XW@M@)
        (flexp . g$12252$XW@M@)
        (fleven? . g$12251$XW@M@)
        (fldiv0-and-mod0 . g$12250$XW@M@)
        (fldiv0 . g$12249$XW@M@)
        (fldiv-and-mod . g$12248$XW@M@)
        (fldiv . g$12247$XW@M@)
        (fldenominator . g$12246$XW@M@)
        (flcos . g$12245$XW@M@)
        (flceiling . g$12244$XW@M@)
        (flatan . g$12243$XW@M@)
        (flasin . g$12242$XW@M@)
        (flacos . g$12241$XW@M@)
        (flabs . g$12240$XW@M@)
        (fl>? . g$12239$XW@M@)
        (fl>=? . g$12238$XW@M@)
        (fl=? . g$12237$XW@M@)
        (fl<? . g$12236$XW@M@)
        (fl<=? . g$12235$XW@M@)
        (fl/ . g$12234$XW@M@)
        (fl- . g$12233$XW@M@)
        (fl+ . g$12232$XW@M@)
        (fl* . g$12231$XW@M@)
        (fixnum->flonum . g$12230$XW@M@)
        (fxzero? . g$12229$XW@M@)
        (fxxor . g$12228$XW@M@)
        (fxrotate-bit-field . g$7262$XW@M@)
        (fxreverse-bit-field . g$12227$XW@M@)
        (fxpositive? . g$12226$XW@M@)
        (fxodd? . g$12225$XW@M@)
        (fxnot . g$12224$XW@M@)
        (fxnegative? . g$12223$XW@M@)
        (fxmod0 . g$12222$XW@M@)
        (fxmod . g$12221$XW@M@)
        (fxmin . g$12220$XW@M@)
        (fxmax . g$12219$XW@M@)
        (fxlength . g$12218$XW@M@)
        (fxior . g$12217$XW@M@)
        (fxif . g$7256$XW@M@)
        (fxfirst-bit-set . g$12216$XW@M@)
        (fxeven? . g$12215$XW@M@)
        (fxdiv0-and-mod0 . g$12214$XW@M@)
        (fxdiv0 . g$12213$XW@M@)
        (fxdiv-and-mod . g$12212$XW@M@)
        (fxdiv . g$12211$XW@M@)
        (fxcopy-bit-field . g$7259$XW@M@)
        (fxcopy-bit . g$7257$XW@M@)
        (fxbit-set? . g$12210$XW@M@)
        (fxbit-field . g$7258$XW@M@)
        (fxbit-count . g$12209$XW@M@)
        (fxarithmetic-shift-right . g$7261$XW@M@)
        (fxarithmetic-shift-left . g$7260$XW@M@)
        (fxarithmetic-shift . g$12208$XW@M@)
        (fxand . g$12207$XW@M@)
        (fx>? . g$12206$XW@M@)
        (fx>=? . g$12205$XW@M@)
        (fx=? . g$12204$XW@M@)
        (fx<? . g$12203$XW@M@)
        (fx<=? . g$12202$XW@M@)
        (fx-/carry . g$12201$XW@M@)
        (fx- . g$12200$XW@M@)
        (fx+/carry . g$12199$XW@M@)
        (fx+ . g$12198$XW@M@)
        (fx*/carry . g$12197$XW@M@)
        (fx* . g$12196$XW@M@)
        (greatest-fixnum . g$12195$XW@M@)
        (least-fixnum . g$12194$XW@M@)
        (fixnum-width . g$12193$XW@M@)
        (fixnum? . g$12192$XW@M@)
        (bitwise-rotate-bit-field . g$7210$XW@M@)
        (bitwise-reverse-bit-field . g$7211$XW@M@)
        (bitwise-length . g$12191$XW@M@)
        (bitwise-if . g$7204$XW@M@)
        (bitwise-first-bit-set . g$12190$XW@M@)
        (bitwise-copy-bit-field . g$7207$XW@M@)
        (bitwise-copy-bit . g$7205$XW@M@)
        (bitwise-bit-set? . g$12189$XW@M@)
        (bitwise-bit-field . g$12188$XW@M@)
        (bitwise-bit-count . g$12187$XW@M@)
        (bitwise-xor . g$12186$XW@M@)
        (bitwise-ior . g$12185$XW@M@)
        (bitwise-and . g$12184$XW@M@)
        (bitwise-not . g$12183$XW@M@)
        (bitwise-arithmetic-shift-right . g$7209$XW@M@)
        (bitwise-arithmetic-shift-left . g$7208$XW@M@)
        (bitwise-arithmetic-shift . g$12182$XW@M@)
        (zero? . g$12181$XW@M@)
        (vector? . g$12180$XW@M@)
        (vector-set! . g$12179$XW@M@)
        (vector-ref . g$12178$XW@M@)
        (vector-map . g$12177$XW@M@)
        (vector-length . g$12176$XW@M@)
        (vector-for-each . g$12175$XW@M@)
        (vector-fill! . g$12174$XW@M@)
        (vector->list . g$12173$XW@M@)
        (vector . g$12172$XW@M@)
        (values . g$12171$XW@M@)
        (truncate . g$12170$XW@M@)
        (tan . g$12169$XW@M@)
        (symbol? . g$12168$XW@M@)
        (symbol=? . g$12167$XW@M@)
        (symbol->string . g$12166$XW@M@)
        (substring . g$12165$XW@M@)
        (string? . g$12164$XW@M@)
        (string>? . g$12163$XW@M@)
        (string>=? . g$12162$XW@M@)
        (string=? . g$12161$XW@M@)
        (string<? . g$12160$XW@M@)
        (string<=? . g$12159$XW@M@)
        (string-ref . g$12158$XW@M@)
        (string-length . g$12157$XW@M@)
        (string-for-each . g$12156$XW@M@)
        (string-copy . g$12155$XW@M@)
        (string-append . g$12154$XW@M@)
        (string->symbol . g$12153$XW@M@)
        (string->number . g$12152$XW@M@)
        (string->list . g$12151$XW@M@)
        (string . g$12150$XW@M@)
        (sqrt . g$12149$XW@M@)
        (sin . g$12148$XW@M@)
        (round . g$12147$XW@M@)
        (reverse . g$12146$XW@M@)
        (real? . g$12145$XW@M@)
        (real-valued? . g$12144$XW@M@)
        (real-part . g$12143$XW@M@)
        (rationalize . g$6236$XW@M@)
        (rational? . g$12142$XW@M@)
        (rational-valued? . g$12141$XW@M@)
        (procedure? . g$12140$XW@M@)
        (positive? . g$12139$XW@M@)
        (pair? . g$12138$XW@M@)
        (odd? . g$12137$XW@M@)
        (numerator . g$12136$XW@M@)
        (number? . g$12135$XW@M@)
        (number->string . g$12134$XW@M@)
        (null? . g$12133$XW@M@)
        (not . g$12132$XW@M@)
        (negative? . g$12131$XW@M@)
        (nan? . g$12130$XW@M@)
        (min . g$12129$XW@M@)
        (max . g$12128$XW@M@)
        (map . g$12127$XW@M@)
        (make-vector . g$12126$XW@M@)
        (make-string . g$12125$XW@M@)
        (make-rectangular . g$12124$XW@M@)
        (make-polar . g$12123$XW@M@)
        (magnitude . g$12122$XW@M@)
        (log . g$12121$XW@M@)
        (list? . g$12120$XW@M@)
        (list-tail . g$12119$XW@M@)
        (list-ref . g$12118$XW@M@)
        (list->vector . g$12117$XW@M@)
        (list->string . g$12116$XW@M@)
        (list . g$12115$XW@M@)
        (length . g$12114$XW@M@)
        (lcm . g$12113$XW@M@)
        (integer? . g$12112$XW@M@)
        (integer-valued? . g$12111$XW@M@)
        (integer->char . g$12110$XW@M@)
        (infinite? . g$12109$XW@M@)
        (inexact? . g$12108$XW@M@)
        (inexact . g$12107$XW@M@)
        (imag-part . g$12106$XW@M@)
        (gcd . g$12105$XW@M@)
        (for-each . g$12104$XW@M@)
        (floor . g$12103$XW@M@)
        (finite? . g$12102$XW@M@)
        (expt . g$12101$XW@M@)
        (exp . g$12100$XW@M@)
        (exact? . g$12099$XW@M@)
        (exact-integer-sqrt . g$12098$XW@M@)
        (exact . g$12097$XW@M@)
        (even? . g$12096$XW@M@)
        (error . g$12095$XW@M@)
        (eqv? . g$12094$XW@M@)
        (equal? . g$12093$XW@M@)
        (eq? . g$12092$XW@M@)
        (dynamic-wind . g$12091$XW@M@)
        (div0-and-mod0 . g$12090$XW@M@)
        (mod0 . g$12089$XW@M@)
        (div0 . g$12088$XW@M@)
        (div-and-mod . g$12087$XW@M@)
        (mod . g$12086$XW@M@)
        (div . g$12085$XW@M@)
        (denominator . g$12084$XW@M@)
        (cos . g$12083$XW@M@)
        (cons . g$12082$XW@M@)
        (complex? . g$12081$XW@M@)
        (char? . g$12080$XW@M@)
        (char>? . g$12079$XW@M@)
        (char>=? . g$12078$XW@M@)
        (char=? . g$12077$XW@M@)
        (char<? . g$12076$XW@M@)
        (char<=? . g$12075$XW@M@)
        (char->integer . g$12074$XW@M@)
        (ceiling . g$12073$XW@M@)
        (call-with-values . g$12072$XW@M@)
        (call/cc . g$12071$XW@M@)
        (call-with-current-continuation . g$12070$XW@M@)
        (cddddr . g$6235$XW@M@)
        (cdddar . g$6234$XW@M@)
        (cddadr . g$6233$XW@M@)
        (cddaar . g$6232$XW@M@)
        (cdaddr . g$6231$XW@M@)
        (cdadar . g$6230$XW@M@)
        (cdaadr . g$6229$XW@M@)
        (cdaaar . g$6228$XW@M@)
        (cadddr . g$6227$XW@M@)
        (caddar . g$6226$XW@M@)
        (cadadr . g$6225$XW@M@)
        (cadaar . g$6224$XW@M@)
        (caaddr . g$6223$XW@M@)
        (caadar . g$6222$XW@M@)
        (caaadr . g$6221$XW@M@)
        (caaaar . g$6220$XW@M@)
        (cdddr . g$6219$XW@M@)
        (cddar . g$6218$XW@M@)
        (cdadr . g$6217$XW@M@)
        (cdaar . g$6216$XW@M@)
        (caddr . g$6215$XW@M@)
        (cadar . g$6214$XW@M@)
        (caadr . g$6213$XW@M@)
        (caaar . g$6212$XW@M@)
        (cddr . g$6211$XW@M@)
        (cdar . g$6210$XW@M@)
        (cadr . g$6209$XW@M@)
        (caar . g$6208$XW@M@)
        (cdr . g$12069$XW@M@)
        (car . g$12068$XW@M@)
        (boolean? . g$12067$XW@M@)
        (boolean=? . g$12066$XW@M@)
        (atan . g$12065$XW@M@)
        (assertion-violation . g$12064$XW@M@)
        (asin . g$12063$XW@M@)
        (apply . g$12062$XW@M@)
        (append . g$12061$XW@M@)
        (angle . g$12060$XW@M@)
        (acos . g$12059$XW@M@)
        (abs . g$12058$XW@M@)
        (/ . g$12057$XW@M@)
        (* . g$12056$XW@M@)
        (- . g$12055$XW@M@)
        (+ . g$12054$XW@M@)
        (>= . g$12053$XW@M@)
        (> . g$12052$XW@M@)
        (= . g$12051$XW@M@)
        (<= . g$12050$XW@M@)
        (< . g$12049$XW@M@)
        (make-promise . g$12044$XW@M@)
        (load/args . g$11885$XW@M@)
        (printf . g$7646$XW@M@)
        (fprintf . g$7647$XW@M@)
        (format . g$7648$XW@M@)
        (get-arity . g$12043$XW@M@)
        (gc-collect . g$12042$XW@M@)
        (clr-type? . g$12041$XW@M@)
        (get-clr-type . g$12040$XW@M@)
        (vector-append . g$12038$XW@M@)
        (vector-filter . g$12037$XW@M@)
        (vector-reverse! . g$12036$XW@M@)
        (vector-contains? . g$12035$XW@M@)
        (vector-index-of . g$12034$XW@M@)
        (vector-copy . g$12033$XW@M@)
        (vector-binary-search . g$12032$XW@M@)
        (get-output-string . g$12031$XW@M@)
        (open-output-string . g$12030$XW@M@)
        (open-input-string . g$12029$XW@M@)
        (string-format . g$12028$XW@M@)
        (trace-printer . g$11882$XW@M@)
        (make-traced-procedure . g$12027$XW@M@)
        (make-traced-macro . g$7667$XW@M@)
        (pmap . g$12026$XW@M@)
        (time-it . g$12025$XW@M@)
        (make-parameter . g$7672$XW@M@)
        (library-locator . g$12024$XW@M@)
        (get-library-paths . g$12023$XW@M@)
        (environment-symbols . g$8929$XW@M@)
        (interaction-environment-symbols . g$8928$XW@M@)
        (library-path . g$8098$XW@M@)
        (library-extensions . g$8099$XW@M@)
        (installed-libraries . g$8119$XW@M@)
        (expand . g$8934$XW@M@)
        (&no-nans . g$12022$XW@M@)
        (&no-infinities . g$12021$XW@M@)
        (&i/o-encoding . g$12020$XW@M@)
        (&i/o-decoding . g$12019$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@)
        (&non-continuable . g$12008$XW@M@)
        (&undefined . g$12007$XW@M@)
        (&syntax . g$12006$XW@M@)
        (&lexical . g$12005$XW@M@)
        (&implementation-restriction . g$12004$XW@M@)
        (&who . g$12002$XW@M@)
        (&irritants . g$12001$XW@M@)
        (&assertion . g$12000$XW@M@)
        (&violation . g$11999$XW@M@)
        (&error . g$11998$XW@M@)
        (&serious . g$11997$XW@M@)
        (&warning . g$11996$XW@M@)
        (&message . g$11995$XW@M@)
        (&condition . g$11994$XW@M@)
        (define-condition-type . g$11993$XW@M@)
        (define-enumeration . g$11992$XW@M@)
        (define-record-type . g$11991$XW@M@)
        (parent-rtd . g$11990$XW@M@)
        (nongenerative . g$11989$XW@M@)
        (opaque . g$11988$XW@M@)
        (sealed . g$11987$XW@M@)
        (protocol . g$11986$XW@M@)
        (parent . g$11985$XW@M@)
        (immutable . g$11984$XW@M@)
        (mutable . g$11983$XW@M@)
        (fields . g$11982$XW@M@)
        (error-handling-mode . g$11981$XW@M@)
        (file-options . g$11980$XW@M@)
        (buffer-mode . g$11979$XW@M@)
        (eol-style . g$11978$XW@M@)
        (guard . g$11977$XW@M@)
        (trace-letrec-syntax . g$11976$XW@M@)
        (trace-let-syntax . g$11975$XW@M@)
        (trace-define-syntax . g$11974$XW@M@)
        (trace-define . g$11973$XW@M@)
        (trace-lambda . g$11972$XW@M@)
        (unsyntax-splicing . g$11971$XW@M@)
        (unsyntax . g$11970$XW@M@)
        (unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (_ . g$11967$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@)
        (... . g$11964$XW@M@)
        (assert . g$11963$XW@M@)
        (endianness . g$11962$XW@M@)
        (delay . g$11961$XW@M@)
        (time . g$11960$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (do . g$11957$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (identifier-syntax . g$11953$XW@M@)
        (with-syntax . g$11952$XW@M@)
        (quasisyntax . g$11951$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (include-into . g$11948$XW@M@)
        (include . g$11947$XW@M@)
        (let-values . g$11945$XW@M@)
        (let*-values . g$11944$XW@M@)
        (record-constructor-descriptor . g$11943$XW@M@)
        (record-type-descriptor . g$11942$XW@M@)
        (fluid-let-syntax . g$11941$XW@M@)
        (case . g$11940$XW@M@)
        (parameterize . g$11939$XW@M@)
        (unless . g$11938$XW@M@)
        (when . g$11937$XW@M@)
        (if . g$11936$XW@M@)
        (letrec* . g$11935$XW@M@)
        (letrec . g$11934$XW@M@)
        (case-lambda . g$11932$XW@M@)
        (lambda . g$11931$XW@M@)
        (syntax . g$11930$XW@M@)
        (syntax-case . g$11929$XW@M@)
        (quote . g$11928$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (import . g$11923$XW@M@)
        (library . g$11922$XW@M@)
        (begin . g$11921$XW@M@)
        (module . g$11920$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12563$XW@M@
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12023$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12564$XW@M@
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12504$XW@M@)
        (annotation-source . g$12503$XW@M@)
        (annotation-expression . g$12502$XW@M@)
        (annotation? . g$12501$XW@M@)
        (read-annotated . g$12500$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12565$XW@M@
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12470$XW@M@)
        (serialize-library . g$12469$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12566$XW@M@
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8559$XW@M@)
        (variable-transformer? . g$8558$XW@M@)
        (eqv-hash . g$12047$XW@M@)
        (eq-hash . g$12046$XW@M@)
        (reverse! . g$12045$XW@M@)
        (format . g$7648$XW@M@)
        (get-command-line . g$12039$XW@M@)
        (make-traced-procedure . g$12027$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12567$XW@M@
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12048$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12568$XW@M@
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12488$XW@M@)
        (clr-field-set!-internal . g$12487$XW@M@)
        (clr-field-get-internal . g$12486$XW@M@)
        (clr-cast-internal . g$12485$XW@M@)
        (clr-call-internal . g$12484$XW@M@)
        (clr-new-internal . g$12483$XW@M@)
        (clr-new-array-internal . g$12482$XW@M@)
        (clr-is-internal . g$12481$XW@M@)
        (clr-reference-internal . g$12480$XW@M@)
        (clr-using-internal . g$12479$XW@M@)
        (clr-clear-usings-internal . g$12478$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12569$XW@M@
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (delay . g$11961$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (do . g$11957$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (case . g$11940$XW@M@)
        (if . g$11936$XW@M@)
        (letrec . g$11934$XW@M@)
        (lambda . g$11931$XW@M@)
        (quote . g$11928$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (begin . g$11921$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12570$XW@M@
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8955$XW@M@)
        (char-ready? . g$12468$XW@M@)
        (string-ci>? . g$12459$XW@M@)
        (string-ci>=? . g$12458$XW@M@)
        (string-ci=? . g$12457$XW@M@)
        (string-ci<? . g$12456$XW@M@)
        (string-ci<=? . g$12455$XW@M@)
        (char-whitespace? . g$12454$XW@M@)
        (char-upper-case? . g$12453$XW@M@)
        (char-numeric? . g$12451$XW@M@)
        (char-lower-case? . g$12450$XW@M@)
        (char-upcase . g$12448$XW@M@)
        (char-downcase . g$12445$XW@M@)
        (char-ci>? . g$12444$XW@M@)
        (char-ci>=? . g$12443$XW@M@)
        (char-ci=? . g$12442$XW@M@)
        (char-ci<? . g$12441$XW@M@)
        (char-ci<=? . g$12440$XW@M@)
        (char-alphabetic? . g$12439$XW@M@)
        (call-with-output-file . g$12407$XW@M@)
        (call-with-input-file . g$12406$XW@M@)
        (write-char . g$12405$XW@M@)
        (write . g$12404$XW@M@)
        (with-output-to-file . g$12403$XW@M@)
        (with-input-from-file . g$12402$XW@M@)
        (read-char . g$12401$XW@M@)
        (read . g$12400$XW@M@)
        (peek-char . g$12399$XW@M@)
        (open-output-file . g$12398$XW@M@)
        (open-input-file . g$12397$XW@M@)
        (newline . g$12396$XW@M@)
        (display . g$12395$XW@M@)
        (close-output-port . g$12394$XW@M@)
        (close-input-port . g$12393$XW@M@)
        (eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (scheme-report-environment . g$8933$XW@M@)
        (quotient . g$7112$XW@M@)
        (null-environment . g$8932$XW@M@)
        (remainder . g$7113$XW@M@)
        (modulo . g$7114$XW@M@)
        (inexact->exact . g$12324$XW@M@)
        (force . g$12323$XW@M@)
        (exact->inexact . g$12322$XW@M@)
        (string-fill! . g$12320$XW@M@)
        (string-set! . g$12319$XW@M@)
        (set-cdr! . g$12318$XW@M@)
        (set-car! . g$12317$XW@M@)
        (memv . g$12316$XW@M@)
        (memq . g$12315$XW@M@)
        (member . g$6690$XW@M@)
        (assv . g$6687$XW@M@)
        (assq . g$12314$XW@M@)
        (assoc . g$6688$XW@M@)
        (eval . g$8935$XW@M@)
        (zero? . g$12181$XW@M@)
        (vector? . g$12180$XW@M@)
        (vector-set! . g$12179$XW@M@)
        (vector-ref . g$12178$XW@M@)
        (vector-length . g$12176$XW@M@)
        (vector-fill! . g$12174$XW@M@)
        (vector->list . g$12173$XW@M@)
        (vector . g$12172$XW@M@)
        (values . g$12171$XW@M@)
        (truncate . g$12170$XW@M@)
        (tan . g$12169$XW@M@)
        (symbol? . g$12168$XW@M@)
        (symbol->string . g$12166$XW@M@)
        (substring . g$12165$XW@M@)
        (string? . g$12164$XW@M@)
        (string>? . g$12163$XW@M@)
        (string>=? . g$12162$XW@M@)
        (string=? . g$12161$XW@M@)
        (string<? . g$12160$XW@M@)
        (string<=? . g$12159$XW@M@)
        (string-ref . g$12158$XW@M@)
        (string-length . g$12157$XW@M@)
        (string-copy . g$12155$XW@M@)
        (string-append . g$12154$XW@M@)
        (string->symbol . g$12153$XW@M@)
        (string->number . g$12152$XW@M@)
        (string->list . g$12151$XW@M@)
        (string . g$12150$XW@M@)
        (sqrt . g$12149$XW@M@)
        (sin . g$12148$XW@M@)
        (round . g$12147$XW@M@)
        (reverse . g$12146$XW@M@)
        (real? . g$12145$XW@M@)
        (real-part . g$12143$XW@M@)
        (rationalize . g$6236$XW@M@)
        (rational? . g$12142$XW@M@)
        (procedure? . g$12140$XW@M@)
        (positive? . g$12139$XW@M@)
        (pair? . g$12138$XW@M@)
        (odd? . g$12137$XW@M@)
        (numerator . g$12136$XW@M@)
        (number? . g$12135$XW@M@)
        (number->string . g$12134$XW@M@)
        (null? . g$12133$XW@M@)
        (not . g$12132$XW@M@)
        (negative? . g$12131$XW@M@)
        (min . g$12129$XW@M@)
        (max . g$12128$XW@M@)
        (map . g$12127$XW@M@)
        (make-vector . g$12126$XW@M@)
        (make-string . g$12125$XW@M@)
        (make-rectangular . g$12124$XW@M@)
        (make-polar . g$12123$XW@M@)
        (magnitude . g$12122$XW@M@)
        (log . g$12121$XW@M@)
        (list? . g$12120$XW@M@)
        (list-tail . g$12119$XW@M@)
        (list-ref . g$12118$XW@M@)
        (list->vector . g$12117$XW@M@)
        (list->string . g$12116$XW@M@)
        (list . g$12115$XW@M@)
        (length . g$12114$XW@M@)
        (lcm . g$12113$XW@M@)
        (integer? . g$12112$XW@M@)
        (integer->char . g$12110$XW@M@)
        (inexact? . g$12108$XW@M@)
        (imag-part . g$12106$XW@M@)
        (gcd . g$12105$XW@M@)
        (for-each . g$12104$XW@M@)
        (floor . g$12103$XW@M@)
        (expt . g$12101$XW@M@)
        (exp . g$12100$XW@M@)
        (exact? . g$12099$XW@M@)
        (even? . g$12096$XW@M@)
        (eqv? . g$12094$XW@M@)
        (equal? . g$12093$XW@M@)
        (eq? . g$12092$XW@M@)
        (dynamic-wind . g$12091$XW@M@)
        (denominator . g$12084$XW@M@)
        (cos . g$12083$XW@M@)
        (cons . g$12082$XW@M@)
        (complex? . g$12081$XW@M@)
        (char? . g$12080$XW@M@)
        (char>? . g$12079$XW@M@)
        (char>=? . g$12078$XW@M@)
        (char=? . g$12077$XW@M@)
        (char<? . g$12076$XW@M@)
        (char<=? . g$12075$XW@M@)
        (char->integer . g$12074$XW@M@)
        (ceiling . g$12073$XW@M@)
        (call-with-values . g$12072$XW@M@)
        (call-with-current-continuation . g$12070$XW@M@)
        (cddddr . g$6235$XW@M@)
        (cdddar . g$6234$XW@M@)
        (cddadr . g$6233$XW@M@)
        (cddaar . g$6232$XW@M@)
        (cdaddr . g$6231$XW@M@)
        (cdadar . g$6230$XW@M@)
        (cdaadr . g$6229$XW@M@)
        (cdaaar . g$6228$XW@M@)
        (cadddr . g$6227$XW@M@)
        (caddar . g$6226$XW@M@)
        (cadadr . g$6225$XW@M@)
        (cadaar . g$6224$XW@M@)
        (caaddr . g$6223$XW@M@)
        (caadar . g$6222$XW@M@)
        (caaadr . g$6221$XW@M@)
        (caaaar . g$6220$XW@M@)
        (cdddr . g$6219$XW@M@)
        (cddar . g$6218$XW@M@)
        (cdadr . g$6217$XW@M@)
        (cdaar . g$6216$XW@M@)
        (caddr . g$6215$XW@M@)
        (cadar . g$6214$XW@M@)
        (caadr . g$6213$XW@M@)
        (caaar . g$6212$XW@M@)
        (cddr . g$6211$XW@M@)
        (cdar . g$6210$XW@M@)
        (cadr . g$6209$XW@M@)
        (caar . g$6208$XW@M@)
        (cdr . g$12069$XW@M@)
        (car . g$12068$XW@M@)
        (boolean? . g$12067$XW@M@)
        (atan . g$12065$XW@M@)
        (asin . g$12063$XW@M@)
        (apply . g$12062$XW@M@)
        (append . g$12061$XW@M@)
        (angle . g$12060$XW@M@)
        (acos . g$12059$XW@M@)
        (abs . g$12058$XW@M@)
        (/ . g$12057$XW@M@)
        (* . g$12056$XW@M@)
        (- . g$12055$XW@M@)
        (+ . g$12054$XW@M@)
        (>= . g$12053$XW@M@)
        (> . g$12052$XW@M@)
        (= . g$12051$XW@M@)
        (<= . g$12050$XW@M@)
        (< . g$12049$XW@M@)
        (unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@)
        (... . g$11964$XW@M@)
        (delay . g$11961$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (do . g$11957$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (case . g$11940$XW@M@)
        (if . g$11936$XW@M@)
        (letrec . g$11934$XW@M@)
        (lambda . g$11931$XW@M@)
        (quote . g$11928$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (begin . g$11921$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12571$XW@M@
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12467$XW@M@)
        (string-titlecase . g$12466$XW@M@)
        (string-normalize-nfkd . g$12465$XW@M@)
        (string-normalize-nfkc . g$12464$XW@M@)
        (string-normalize-nfd . g$12463$XW@M@)
        (string-normalize-nfc . g$12462$XW@M@)
        (string-foldcase . g$12461$XW@M@)
        (string-downcase . g$12460$XW@M@)
        (string-ci>? . g$12459$XW@M@)
        (string-ci>=? . g$12458$XW@M@)
        (string-ci=? . g$12457$XW@M@)
        (string-ci<? . g$12456$XW@M@)
        (string-ci<=? . g$12455$XW@M@)
        (char-whitespace? . g$12454$XW@M@)
        (char-upper-case? . g$12453$XW@M@)
        (char-title-case? . g$12452$XW@M@)
        (char-numeric? . g$12451$XW@M@)
        (char-lower-case? . g$12450$XW@M@)
        (char-general-category . g$12449$XW@M@)
        (char-upcase . g$12448$XW@M@)
        (char-titlecase . g$12447$XW@M@)
        (char-foldcase . g$12446$XW@M@)
        (char-downcase . g$12445$XW@M@)
        (char-ci>? . g$12444$XW@M@)
        (char-ci>=? . g$12443$XW@M@)
        (char-ci=? . g$12442$XW@M@)
        (char-ci<? . g$12441$XW@M@)
        (char-ci<=? . g$12440$XW@M@)
        (char-alphabetic? . g$12439$XW@M@)
        (make-variable-transformer . g$8557$XW@M@)
        (identifier? . g$8950$XW@M@)
        (generate-temporaries . g$8942$XW@M@)
        (free-identifier=? . g$8943$XW@M@)
        (syntax->datum . g$8952$XW@M@)
        (datum->syntax . g$8951$XW@M@)
        (bound-identifier=? . g$8944$XW@M@)
        (record-type-descriptor? . g$12438$XW@M@)
        (record-predicate . g$12437$XW@M@)
        (record-mutator . g$12436$XW@M@)
        (record-constructor . g$12435$XW@M@)
        (record-accessor . g$12434$XW@M@)
        (make-record-type-descriptor . g$12433$XW@M@)
        (make-record-constructor-descriptor . g$12432$XW@M@)
        (record? . g$12431$XW@M@)
        (record-type-uid . g$12430$XW@M@)
        (record-type-sealed? . g$12429$XW@M@)
        (record-type-parent . g$12428$XW@M@)
        (record-type-opaque? . g$12427$XW@M@)
        (record-type-name . g$12426$XW@M@)
        (record-type-generative? . g$12425$XW@M@)
        (record-type-field-names . g$12424$XW@M@)
        (record-rtd . g$12423$XW@M@)
        (record-field-mutable? . g$12422$XW@M@)
        (delete-file . g$6619$XW@M@)
        (file-exists? . g$6618$XW@M@)
        (vector-sort! . g$12421$XW@M@)
        (vector-sort . g$12420$XW@M@)
        (list-sort . g$7125$XW@M@)
        (symbol-hash . g$12419$XW@M@)
        (string-ci-hash . g$12418$XW@M@)
        (string-hash . g$12417$XW@M@)
        (equal-hash . g$12416$XW@M@)
        (hashtable-equivalence-function . g$12415$XW@M@)
        (make-hashtable . g$12414$XW@M@)
        (hashtable-hash-function . g$12413$XW@M@)
        (make-eqv-hashtable . g$6586$XW@M@)
        (make-eq-hashtable . g$6585$XW@M@)
        (hashtable? . g$12412$XW@M@)
        (hashtable-update! . g$6592$XW@M@)
        (hashtable-size . g$6587$XW@M@)
        (hashtable-set! . g$6589$XW@M@)
        (hashtable-ref . g$6588$XW@M@)
        (hashtable-mutable? . g$12411$XW@M@)
        (hashtable-keys . g$12410$XW@M@)
        (hashtable-entries . g$12409$XW@M@)
        (hashtable-delete! . g$6590$XW@M@)
        (hashtable-copy . g$12408$XW@M@)
        (hashtable-contains? . g$6591$XW@M@)
        (hashtable-clear! . g$6593$XW@M@)
        (call-with-output-file . g$12407$XW@M@)
        (call-with-input-file . g$12406$XW@M@)
        (write-char . g$12405$XW@M@)
        (write . g$12404$XW@M@)
        (with-output-to-file . g$12403$XW@M@)
        (with-input-from-file . g$12402$XW@M@)
        (read-char . g$12401$XW@M@)
        (read . g$12400$XW@M@)
        (peek-char . g$12399$XW@M@)
        (open-output-file . g$12398$XW@M@)
        (open-input-file . g$12397$XW@M@)
        (newline . g$12396$XW@M@)
        (display . g$12395$XW@M@)
        (close-output-port . g$12394$XW@M@)
        (close-input-port . g$12393$XW@M@)
        (eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (utf-8-codec . g$12385$XW@M@)
        (utf-16-codec . g$12384$XW@M@)
        (transcoder-error-handling-mode . g$12383$XW@M@)
        (transcoder-eol-style . g$12382$XW@M@)
        (transcoder-codec . g$12381$XW@M@)
        (transcoded-port . g$12380$XW@M@)
        (textual-port? . g$12379$XW@M@)
        (string->bytevector . g$12378$XW@M@)
        (standard-output-port . g$12377$XW@M@)
        (standard-input-port . g$12376$XW@M@)
        (standard-error-port . g$12375$XW@M@)
        (set-port-position! . g$12374$XW@M@)
        (put-u8 . g$12373$XW@M@)
        (put-string . g$12372$XW@M@)
        (put-datum . g$12371$XW@M@)
        (put-char . g$12370$XW@M@)
        (put-bytevector . g$12369$XW@M@)
        (port? . g$7517$XW@M@)
        (port-transcoder . g$12368$XW@M@)
        (port-position . g$12367$XW@M@)
        (port-has-set-port-position!? . g$12366$XW@M@)
        (port-has-port-position? . g$12365$XW@M@)
        (port-eof? . g$12364$XW@M@)
        (output-port-buffer-mode . g$12363$XW@M@)
        (open-string-output-port . g$7516$XW@M@)
        (open-string-input-port . g$12362$XW@M@)
        (open-file-output-port . g$12361$XW@M@)
        (open-file-input/output-port . g$12360$XW@M@)
        (open-file-input-port . g$12359$XW@M@)
        (open-bytevector-output-port . g$12358$XW@M@)
        (open-bytevector-input-port . g$12357$XW@M@)
        (native-transcoder . g$12356$XW@M@)
        (native-eol-style . g$12355$XW@M@)
        (make-transcoder . g$12354$XW@M@)
        (latin-1-codec . g$12353$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (make-i/o-encoding-error . g$7509$XW@M@)
        (make-i/o-decoding-error . g$7494$XW@M@)
        (make-custom-textual-output-port . g$12352$XW@M@)
        (make-custom-textual-input/output-port . g$12351$XW@M@)
        (make-custom-textual-input-port . g$12350$XW@M@)
        (make-custom-binary-output-port . g$12349$XW@M@)
        (make-custom-binary-input/output-port . g$12348$XW@M@)
        (make-custom-binary-input-port . g$12347$XW@M@)
        (make-bytevector . g$12346$XW@M@)
        (lookahead-u8 . g$12345$XW@M@)
        (lookahead-char . g$12344$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (i/o-encoding-error? . g$7511$XW@M@)
        (i/o-encoding-error-char . g$7512$XW@M@)
        (i/o-decoding-error? . g$7495$XW@M@)
        (get-u8 . g$12343$XW@M@)
        (get-string-n! . g$12342$XW@M@)
        (get-string-n . g$12341$XW@M@)
        (get-string-all . g$12340$XW@M@)
        (get-line . g$12339$XW@M@)
        (get-datum . g$12338$XW@M@)
        (get-char . g$12337$XW@M@)
        (get-bytevector-some . g$12336$XW@M@)
        (get-bytevector-n! . g$12335$XW@M@)
        (get-bytevector-n . g$12334$XW@M@)
        (get-bytevector-all . g$12333$XW@M@)
        (flush-output-port . g$12332$XW@M@)
        (close-port . g$12331$XW@M@)
        (call-with-string-output-port . g$12330$XW@M@)
        (call-with-port . g$12329$XW@M@)
        (call-with-bytevector-output-port . g$12328$XW@M@)
        (bytevector->string . g$12327$XW@M@)
        (buffer-mode? . g$12326$XW@M@)
        (binary-port? . g$12325$XW@M@)
        (exit . g$12321$XW@M@)
        (command-line . g$11883$XW@M@)
        (remove . g$6699$XW@M@)
        (remv . g$6700$XW@M@)
        (remp . g$6685$XW@M@)
        (remq . g$6701$XW@M@)
        (partition . g$6684$XW@M@)
        (memv . g$12316$XW@M@)
        (memq . g$12315$XW@M@)
        (memp . g$6691$XW@M@)
        (member . g$6690$XW@M@)
        (exists . g$6695$XW@M@)
        (for-all . g$6694$XW@M@)
        (fold-right . g$6698$XW@M@)
        (fold-left . g$6697$XW@M@)
        (find . g$6683$XW@M@)
        (filter . g$6686$XW@M@)
        (cons* . g$6696$XW@M@)
        (assv . g$6687$XW@M@)
        (assq . g$12314$XW@M@)
        (assp . g$6689$XW@M@)
        (assoc . g$6688$XW@M@)
        (with-exception-handler . g$12313$XW@M@)
        (raise-continuable . g$12312$XW@M@)
        (raise . g$12311$XW@M@)
        (make-enumeration . g$7559$XW@M@)
        (enum-set=? . g$7566$XW@M@)
        (enum-set-universe . g$7560$XW@M@)
        (enum-set-union . g$7567$XW@M@)
        (enum-set-subset? . g$7565$XW@M@)
        (enum-set-projection . g$7571$XW@M@)
        (enum-set-member? . g$7564$XW@M@)
        (enum-set-intersection . g$7568$XW@M@)
        (enum-set-indexer . g$7561$XW@M@)
        (enum-set-difference . g$7569$XW@M@)
        (enum-set-constructor . g$7562$XW@M@)
        (enum-set-complement . g$7570$XW@M@)
        (enum-set->list . g$7563$XW@M@)
        (who-condition? . g$7023$XW@M@)
        (warning? . g$6934$XW@M@)
        (violation? . g$6976$XW@M@)
        (undefined-violation? . g$7100$XW@M@)
        (syntax-violation? . g$7084$XW@M@)
        (syntax-violation-subform . g$7086$XW@M@)
        (syntax-violation-form . g$7085$XW@M@)
        (syntax-violation . g$8949$XW@M@)
        (simple-conditions . g$12310$XW@M@)
        (serious-condition? . g$6948$XW@M@)
        (non-continuable-violation? . g$7038$XW@M@)
        (message-condition? . g$6919$XW@M@)
        (make-who-condition . g$7021$XW@M@)
        (make-warning . g$6933$XW@M@)
        (make-violation . g$6975$XW@M@)
        (make-undefined-violation . g$7099$XW@M@)
        (make-syntax-violation . g$7081$XW@M@)
        (make-serious-condition . g$6947$XW@M@)
        (make-non-continuable-violation . g$7037$XW@M@)
        (make-message-condition . g$6917$XW@M@)
        (make-lexical-violation . g$7065$XW@M@)
        (make-irritants-condition . g$7004$XW@M@)
        (make-implementation-restriction-violation . g$7051$XW@M@)
        (make-error . g$6961$XW@M@)
        (make-assertion-violation . g$6989$XW@M@)
        (lexical-violation? . g$7066$XW@M@)
        (irritants-condition? . g$7006$XW@M@)
        (implementation-restriction-violation? . g$7052$XW@M@)
        (error? . g$6962$XW@M@)
        (condition-who . g$7024$XW@M@)
        (condition-predicate . g$12309$XW@M@)
        (condition-message . g$6920$XW@M@)
        (condition-irritants . g$7007$XW@M@)
        (condition-accessor . g$12308$XW@M@)
        (condition . g$12307$XW@M@)
        (assertion-violation? . g$6990$XW@M@)
        (condition? . g$12306$XW@M@)
        (utf32->string . g$12305$XW@M@)
        (utf16->string . g$12304$XW@M@)
        (utf8->string . g$12303$XW@M@)
        (uint-list->bytevector . g$12302$XW@M@)
        (u8-list->bytevector . g$12301$XW@M@)
        (string->utf8 . g$12300$XW@M@)
        (string->utf32 . g$12299$XW@M@)
        (string->utf16 . g$12298$XW@M@)
        (sint-list->bytevector . g$12297$XW@M@)
        (native-endianness . g$6775$XW@M@)
        (bytevector? . g$12296$XW@M@)
        (bytevector=? . g$12295$XW@M@)
        (bytevector-uint-set! . g$12294$XW@M@)
        (bytevector-uint-ref . g$12293$XW@M@)
        (bytevector-u8-set! . g$12292$XW@M@)
        (bytevector-u8-ref . g$12291$XW@M@)
        (bytevector-u64-set! . g$6796$XW@M@)
        (bytevector-u64-ref . g$6792$XW@M@)
        (bytevector-u64-native-set! . g$6798$XW@M@)
        (bytevector-u64-native-ref . g$6794$XW@M@)
        (bytevector-u32-set! . g$6788$XW@M@)
        (bytevector-u32-ref . g$6784$XW@M@)
        (bytevector-u32-native-set! . g$6790$XW@M@)
        (bytevector-u32-native-ref . g$6786$XW@M@)
        (bytevector-u16-set! . g$6780$XW@M@)
        (bytevector-u16-ref . g$6776$XW@M@)
        (bytevector-u16-native-set! . g$6782$XW@M@)
        (bytevector-u16-native-ref . g$6778$XW@M@)
        (bytevector-sint-set! . g$12290$XW@M@)
        (bytevector-sint-ref . g$12289$XW@M@)
        (bytevector-s8-set! . g$12288$XW@M@)
        (bytevector-s8-ref . g$12287$XW@M@)
        (bytevector-s64-set! . g$6797$XW@M@)
        (bytevector-s64-ref . g$6793$XW@M@)
        (bytevector-s64-native-set! . g$6799$XW@M@)
        (bytevector-s64-native-ref . g$6795$XW@M@)
        (bytevector-s32-set! . g$6789$XW@M@)
        (bytevector-s32-ref . g$6785$XW@M@)
        (bytevector-s32-native-set! . g$6791$XW@M@)
        (bytevector-s32-native-ref . g$6787$XW@M@)
        (bytevector-s16-set! . g$6781$XW@M@)
        (bytevector-s16-ref . g$6777$XW@M@)
        (bytevector-s16-native-set! . g$6783$XW@M@)
        (bytevector-s16-native-ref . g$6779$XW@M@)
        (bytevector-length . g$12286$XW@M@)
        (bytevector-ieee-single-set! . g$12285$XW@M@)
        (bytevector-ieee-single-ref . g$12284$XW@M@)
        (bytevector-ieee-single-native-set! . g$6802$XW@M@)
        (bytevector-ieee-single-native-ref . g$6800$XW@M@)
        (bytevector-ieee-double-set! . g$12283$XW@M@)
        (bytevector-ieee-double-ref . g$12282$XW@M@)
        (bytevector-ieee-double-native-set! . g$6803$XW@M@)
        (bytevector-ieee-double-native-ref . g$6801$XW@M@)
        (bytevector-fill! . g$12281$XW@M@)
        (bytevector-copy! . g$12280$XW@M@)
        (bytevector-copy . g$12279$XW@M@)
        (bytevector->uint-list . g$12278$XW@M@)
        (bytevector->u8-list . g$12277$XW@M@)
        (bytevector->sint-list . g$12276$XW@M@)
        (no-nans-violation? . g$7331$XW@M@)
        (no-infinities-violation? . g$7317$XW@M@)
        (make-no-nans-violation . g$7330$XW@M@)
        (make-no-infinities-violation . g$7316$XW@M@)
        (real->flonum . g$12275$XW@M@)
        (flzero? . g$12274$XW@M@)
        (fltruncate . g$12273$XW@M@)
        (fltan . g$12272$XW@M@)
        (flsqrt . g$12271$XW@M@)
        (flsin . g$12270$XW@M@)
        (flround . g$12269$XW@M@)
        (flpositive? . g$12268$XW@M@)
        (flonum? . g$12267$XW@M@)
        (flodd? . g$12266$XW@M@)
        (flnumerator . g$12265$XW@M@)
        (flnegative? . g$12264$XW@M@)
        (flnan? . g$12263$XW@M@)
        (flmod0 . g$12262$XW@M@)
        (flmod . g$12261$XW@M@)
        (flmin . g$12260$XW@M@)
        (flmax . g$12259$XW@M@)
        (fllog . g$12258$XW@M@)
        (flinteger? . g$12257$XW@M@)
        (flinfinite? . g$12256$XW@M@)
        (flfloor . g$12255$XW@M@)
        (flfinite? . g$12254$XW@M@)
        (flexpt . g$12253$XW@M@)
        (flexp . g$12252$XW@M@)
        (fleven? . g$12251$XW@M@)
        (fldiv0-and-mod0 . g$12250$XW@M@)
        (fldiv0 . g$12249$XW@M@)
        (fldiv-and-mod . g$12248$XW@M@)
        (fldiv . g$12247$XW@M@)
        (fldenominator . g$12246$XW@M@)
        (flcos . g$12245$XW@M@)
        (flceiling . g$12244$XW@M@)
        (flatan . g$12243$XW@M@)
        (flasin . g$12242$XW@M@)
        (flacos . g$12241$XW@M@)
        (flabs . g$12240$XW@M@)
        (fl>? . g$12239$XW@M@)
        (fl>=? . g$12238$XW@M@)
        (fl=? . g$12237$XW@M@)
        (fl<? . g$12236$XW@M@)
        (fl<=? . g$12235$XW@M@)
        (fl/ . g$12234$XW@M@)
        (fl- . g$12233$XW@M@)
        (fl+ . g$12232$XW@M@)
        (fl* . g$12231$XW@M@)
        (fixnum->flonum . g$12230$XW@M@)
        (fxzero? . g$12229$XW@M@)
        (fxxor . g$12228$XW@M@)
        (fxrotate-bit-field . g$7262$XW@M@)
        (fxreverse-bit-field . g$12227$XW@M@)
        (fxpositive? . g$12226$XW@M@)
        (fxodd? . g$12225$XW@M@)
        (fxnot . g$12224$XW@M@)
        (fxnegative? . g$12223$XW@M@)
        (fxmod0 . g$12222$XW@M@)
        (fxmod . g$12221$XW@M@)
        (fxmin . g$12220$XW@M@)
        (fxmax . g$12219$XW@M@)
        (fxlength . g$12218$XW@M@)
        (fxior . g$12217$XW@M@)
        (fxif . g$7256$XW@M@)
        (fxfirst-bit-set . g$12216$XW@M@)
        (fxeven? . g$12215$XW@M@)
        (fxdiv0-and-mod0 . g$12214$XW@M@)
        (fxdiv0 . g$12213$XW@M@)
        (fxdiv-and-mod . g$12212$XW@M@)
        (fxdiv . g$12211$XW@M@)
        (fxcopy-bit-field . g$7259$XW@M@)
        (fxcopy-bit . g$7257$XW@M@)
        (fxbit-set? . g$12210$XW@M@)
        (fxbit-field . g$7258$XW@M@)
        (fxbit-count . g$12209$XW@M@)
        (fxarithmetic-shift-right . g$7261$XW@M@)
        (fxarithmetic-shift-left . g$7260$XW@M@)
        (fxarithmetic-shift . g$12208$XW@M@)
        (fxand . g$12207$XW@M@)
        (fx>? . g$12206$XW@M@)
        (fx>=? . g$12205$XW@M@)
        (fx=? . g$12204$XW@M@)
        (fx<? . g$12203$XW@M@)
        (fx<=? . g$12202$XW@M@)
        (fx-/carry . g$12201$XW@M@)
        (fx- . g$12200$XW@M@)
        (fx+/carry . g$12199$XW@M@)
        (fx+ . g$12198$XW@M@)
        (fx*/carry . g$12197$XW@M@)
        (fx* . g$12196$XW@M@)
        (greatest-fixnum . g$12195$XW@M@)
        (least-fixnum . g$12194$XW@M@)
        (fixnum-width . g$12193$XW@M@)
        (fixnum? . g$12192$XW@M@)
        (bitwise-rotate-bit-field . g$7210$XW@M@)
        (bitwise-reverse-bit-field . g$7211$XW@M@)
        (bitwise-length . g$12191$XW@M@)
        (bitwise-if . g$7204$XW@M@)
        (bitwise-first-bit-set . g$12190$XW@M@)
        (bitwise-copy-bit-field . g$7207$XW@M@)
        (bitwise-copy-bit . g$7205$XW@M@)
        (bitwise-bit-set? . g$12189$XW@M@)
        (bitwise-bit-field . g$12188$XW@M@)
        (bitwise-bit-count . g$12187$XW@M@)
        (bitwise-xor . g$12186$XW@M@)
        (bitwise-ior . g$12185$XW@M@)
        (bitwise-and . g$12184$XW@M@)
        (bitwise-not . g$12183$XW@M@)
        (bitwise-arithmetic-shift-right . g$7209$XW@M@)
        (bitwise-arithmetic-shift-left . g$7208$XW@M@)
        (bitwise-arithmetic-shift . g$12182$XW@M@)
        (zero? . g$12181$XW@M@)
        (vector? . g$12180$XW@M@)
        (vector-set! . g$12179$XW@M@)
        (vector-ref . g$12178$XW@M@)
        (vector-map . g$12177$XW@M@)
        (vector-length . g$12176$XW@M@)
        (vector-for-each . g$12175$XW@M@)
        (vector-fill! . g$12174$XW@M@)
        (vector->list . g$12173$XW@M@)
        (vector . g$12172$XW@M@)
        (values . g$12171$XW@M@)
        (truncate . g$12170$XW@M@)
        (tan . g$12169$XW@M@)
        (symbol? . g$12168$XW@M@)
        (symbol=? . g$12167$XW@M@)
        (symbol->string . g$12166$XW@M@)
        (substring . g$12165$XW@M@)
        (string? . g$12164$XW@M@)
        (string>? . g$12163$XW@M@)
        (string>=? . g$12162$XW@M@)
        (string=? . g$12161$XW@M@)
        (string<? . g$12160$XW@M@)
        (string<=? . g$12159$XW@M@)
        (string-ref . g$12158$XW@M@)
        (string-length . g$12157$XW@M@)
        (string-for-each . g$12156$XW@M@)
        (string-copy . g$12155$XW@M@)
        (string-append . g$12154$XW@M@)
        (string->symbol . g$12153$XW@M@)
        (string->number . g$12152$XW@M@)
        (string->list . g$12151$XW@M@)
        (string . g$12150$XW@M@)
        (sqrt . g$12149$XW@M@)
        (sin . g$12148$XW@M@)
        (round . g$12147$XW@M@)
        (reverse . g$12146$XW@M@)
        (real? . g$12145$XW@M@)
        (real-valued? . g$12144$XW@M@)
        (real-part . g$12143$XW@M@)
        (rationalize . g$6236$XW@M@)
        (rational? . g$12142$XW@M@)
        (rational-valued? . g$12141$XW@M@)
        (procedure? . g$12140$XW@M@)
        (positive? . g$12139$XW@M@)
        (pair? . g$12138$XW@M@)
        (odd? . g$12137$XW@M@)
        (numerator . g$12136$XW@M@)
        (number? . g$12135$XW@M@)
        (number->string . g$12134$XW@M@)
        (null? . g$12133$XW@M@)
        (not . g$12132$XW@M@)
        (negative? . g$12131$XW@M@)
        (nan? . g$12130$XW@M@)
        (min . g$12129$XW@M@)
        (max . g$12128$XW@M@)
        (map . g$12127$XW@M@)
        (make-vector . g$12126$XW@M@)
        (make-string . g$12125$XW@M@)
        (make-rectangular . g$12124$XW@M@)
        (make-polar . g$12123$XW@M@)
        (magnitude . g$12122$XW@M@)
        (log . g$12121$XW@M@)
        (list? . g$12120$XW@M@)
        (list-tail . g$12119$XW@M@)
        (list-ref . g$12118$XW@M@)
        (list->vector . g$12117$XW@M@)
        (list->string . g$12116$XW@M@)
        (list . g$12115$XW@M@)
        (length . g$12114$XW@M@)
        (lcm . g$12113$XW@M@)
        (integer? . g$12112$XW@M@)
        (integer-valued? . g$12111$XW@M@)
        (integer->char . g$12110$XW@M@)
        (infinite? . g$12109$XW@M@)
        (inexact? . g$12108$XW@M@)
        (inexact . g$12107$XW@M@)
        (imag-part . g$12106$XW@M@)
        (gcd . g$12105$XW@M@)
        (for-each . g$12104$XW@M@)
        (floor . g$12103$XW@M@)
        (finite? . g$12102$XW@M@)
        (expt . g$12101$XW@M@)
        (exp . g$12100$XW@M@)
        (exact? . g$12099$XW@M@)
        (exact-integer-sqrt . g$12098$XW@M@)
        (exact . g$12097$XW@M@)
        (even? . g$12096$XW@M@)
        (error . g$12095$XW@M@)
        (eqv? . g$12094$XW@M@)
        (equal? . g$12093$XW@M@)
        (eq? . g$12092$XW@M@)
        (dynamic-wind . g$12091$XW@M@)
        (div0-and-mod0 . g$12090$XW@M@)
        (mod0 . g$12089$XW@M@)
        (div0 . g$12088$XW@M@)
        (div-and-mod . g$12087$XW@M@)
        (mod . g$12086$XW@M@)
        (div . g$12085$XW@M@)
        (denominator . g$12084$XW@M@)
        (cos . g$12083$XW@M@)
        (cons . g$12082$XW@M@)
        (complex? . g$12081$XW@M@)
        (char? . g$12080$XW@M@)
        (char>? . g$12079$XW@M@)
        (char>=? . g$12078$XW@M@)
        (char=? . g$12077$XW@M@)
        (char<? . g$12076$XW@M@)
        (char<=? . g$12075$XW@M@)
        (char->integer . g$12074$XW@M@)
        (ceiling . g$12073$XW@M@)
        (call-with-values . g$12072$XW@M@)
        (call/cc . g$12071$XW@M@)
        (call-with-current-continuation . g$12070$XW@M@)
        (cddddr . g$6235$XW@M@)
        (cdddar . g$6234$XW@M@)
        (cddadr . g$6233$XW@M@)
        (cddaar . g$6232$XW@M@)
        (cdaddr . g$6231$XW@M@)
        (cdadar . g$6230$XW@M@)
        (cdaadr . g$6229$XW@M@)
        (cdaaar . g$6228$XW@M@)
        (cadddr . g$6227$XW@M@)
        (caddar . g$6226$XW@M@)
        (cadadr . g$6225$XW@M@)
        (cadaar . g$6224$XW@M@)
        (caaddr . g$6223$XW@M@)
        (caadar . g$6222$XW@M@)
        (caaadr . g$6221$XW@M@)
        (caaaar . g$6220$XW@M@)
        (cdddr . g$6219$XW@M@)
        (cddar . g$6218$XW@M@)
        (cdadr . g$6217$XW@M@)
        (cdaar . g$6216$XW@M@)
        (caddr . g$6215$XW@M@)
        (cadar . g$6214$XW@M@)
        (caadr . g$6213$XW@M@)
        (caaar . g$6212$XW@M@)
        (cddr . g$6211$XW@M@)
        (cdar . g$6210$XW@M@)
        (cadr . g$6209$XW@M@)
        (caar . g$6208$XW@M@)
        (cdr . g$12069$XW@M@)
        (car . g$12068$XW@M@)
        (boolean? . g$12067$XW@M@)
        (boolean=? . g$12066$XW@M@)
        (atan . g$12065$XW@M@)
        (assertion-violation . g$12064$XW@M@)
        (asin . g$12063$XW@M@)
        (apply . g$12062$XW@M@)
        (append . g$12061$XW@M@)
        (angle . g$12060$XW@M@)
        (acos . g$12059$XW@M@)
        (abs . g$12058$XW@M@)
        (/ . g$12057$XW@M@)
        (* . g$12056$XW@M@)
        (- . g$12055$XW@M@)
        (+ . g$12054$XW@M@)
        (>= . g$12053$XW@M@)
        (> . g$12052$XW@M@)
        (= . g$12051$XW@M@)
        (<= . g$12050$XW@M@)
        (< . g$12049$XW@M@)
        (&no-nans . g$12022$XW@M@)
        (&no-infinities . g$12021$XW@M@)
        (&i/o-encoding . g$12020$XW@M@)
        (&i/o-decoding . g$12019$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@)
        (&non-continuable . g$12008$XW@M@)
        (&undefined . g$12007$XW@M@)
        (&syntax . g$12006$XW@M@)
        (&lexical . g$12005$XW@M@)
        (&implementation-restriction . g$12004$XW@M@)
        (&who . g$12002$XW@M@)
        (&irritants . g$12001$XW@M@)
        (&assertion . g$12000$XW@M@)
        (&violation . g$11999$XW@M@)
        (&error . g$11998$XW@M@)
        (&serious . g$11997$XW@M@)
        (&warning . g$11996$XW@M@)
        (&message . g$11995$XW@M@)
        (&condition . g$11994$XW@M@)
        (define-condition-type . g$11993$XW@M@)
        (define-enumeration . g$11992$XW@M@)
        (define-record-type . g$11991$XW@M@)
        (parent-rtd . g$11990$XW@M@)
        (nongenerative . g$11989$XW@M@)
        (opaque . g$11988$XW@M@)
        (sealed . g$11987$XW@M@)
        (protocol . g$11986$XW@M@)
        (parent . g$11985$XW@M@)
        (immutable . g$11984$XW@M@)
        (mutable . g$11983$XW@M@)
        (fields . g$11982$XW@M@)
        (error-handling-mode . g$11981$XW@M@)
        (file-options . g$11980$XW@M@)
        (buffer-mode . g$11979$XW@M@)
        (eol-style . g$11978$XW@M@)
        (guard . g$11977$XW@M@)
        (unsyntax-splicing . g$11971$XW@M@)
        (unsyntax . g$11970$XW@M@)
        (unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (_ . g$11967$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@)
        (... . g$11964$XW@M@)
        (assert . g$11963$XW@M@)
        (endianness . g$11962$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (do . g$11957$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (identifier-syntax . g$11953$XW@M@)
        (with-syntax . g$11952$XW@M@)
        (quasisyntax . g$11951$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (let-values . g$11945$XW@M@)
        (let*-values . g$11944$XW@M@)
        (record-constructor-descriptor . g$11943$XW@M@)
        (record-type-descriptor . g$11942$XW@M@)
        (case . g$11940$XW@M@)
        (unless . g$11938$XW@M@)
        (when . g$11937$XW@M@)
        (if . g$11936$XW@M@)
        (letrec* . g$11935$XW@M@)
        (letrec . g$11934$XW@M@)
        (case-lambda . g$11932$XW@M@)
        (lambda . g$11931$XW@M@)
        (syntax . g$11930$XW@M@)
        (syntax-case . g$11929$XW@M@)
        (quote . g$11928$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (import . g$11923$XW@M@)
        (library . g$11922$XW@M@)
        (begin . g$11921$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12572$XW@M@
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8955$XW@M@)
        (scheme-report-environment . g$8933$XW@M@)
        (quotient . g$7112$XW@M@)
        (null-environment . g$8932$XW@M@)
        (remainder . g$7113$XW@M@)
        (modulo . g$7114$XW@M@)
        (inexact->exact . g$12324$XW@M@)
        (force . g$12323$XW@M@)
        (exact->inexact . g$12322$XW@M@)
        (delay . g$11961$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12573$XW@M@
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11957$XW@M@)
        (unless . g$11938$XW@M@)
        (when . g$11937$XW@M@)
        (case-lambda . g$11932$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12574$XW@M@
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8935$XW@M@) (environment . g$8931$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12575$XW@M@
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12318$XW@M@) (set-car! . g$12317$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12576$XW@M@
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12320$XW@M@) (string-set! . g$12319$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12577$XW@M@
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12321$XW@M@) (command-line . g$11883$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12578$XW@M@
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8557$XW@M@)
        (identifier? . g$8950$XW@M@)
        (generate-temporaries . g$8942$XW@M@)
        (free-identifier=? . g$8943$XW@M@)
        (syntax->datum . g$8952$XW@M@)
        (datum->syntax . g$8951$XW@M@)
        (bound-identifier=? . g$8944$XW@M@)
        (syntax-violation . g$8949$XW@M@)
        (unsyntax-splicing . g$11971$XW@M@)
        (unsyntax . g$11970$XW@M@)
        (_ . g$11967$XW@M@)
        (... . g$11964$XW@M@)
        (with-syntax . g$11952$XW@M@)
        (quasisyntax . g$11951$XW@M@)
        (syntax . g$11930$XW@M@)
        (syntax-case . g$11929$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12579$XW@M@
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6619$XW@M@)
        (file-exists? . g$6618$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12580$XW@M@
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12421$XW@M@)
        (vector-sort . g$12420$XW@M@)
        (list-sort . g$7125$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12581$XW@M@
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12181$XW@M@)
        (vector? . g$12180$XW@M@)
        (vector-set! . g$12179$XW@M@)
        (vector-ref . g$12178$XW@M@)
        (vector-map . g$12177$XW@M@)
        (vector-length . g$12176$XW@M@)
        (vector-for-each . g$12175$XW@M@)
        (vector-fill! . g$12174$XW@M@)
        (vector->list . g$12173$XW@M@)
        (vector . g$12172$XW@M@)
        (values . g$12171$XW@M@)
        (truncate . g$12170$XW@M@)
        (tan . g$12169$XW@M@)
        (symbol? . g$12168$XW@M@)
        (symbol=? . g$12167$XW@M@)
        (symbol->string . g$12166$XW@M@)
        (substring . g$12165$XW@M@)
        (string? . g$12164$XW@M@)
        (string>? . g$12163$XW@M@)
        (string>=? . g$12162$XW@M@)
        (string=? . g$12161$XW@M@)
        (string<? . g$12160$XW@M@)
        (string<=? . g$12159$XW@M@)
        (string-ref . g$12158$XW@M@)
        (string-length . g$12157$XW@M@)
        (string-for-each . g$12156$XW@M@)
        (string-copy . g$12155$XW@M@)
        (string-append . g$12154$XW@M@)
        (string->symbol . g$12153$XW@M@)
        (string->number . g$12152$XW@M@)
        (string->list . g$12151$XW@M@)
        (string . g$12150$XW@M@)
        (sqrt . g$12149$XW@M@)
        (sin . g$12148$XW@M@)
        (round . g$12147$XW@M@)
        (reverse . g$12146$XW@M@)
        (real? . g$12145$XW@M@)
        (real-valued? . g$12144$XW@M@)
        (real-part . g$12143$XW@M@)
        (rationalize . g$6236$XW@M@)
        (rational? . g$12142$XW@M@)
        (rational-valued? . g$12141$XW@M@)
        (procedure? . g$12140$XW@M@)
        (positive? . g$12139$XW@M@)
        (pair? . g$12138$XW@M@)
        (odd? . g$12137$XW@M@)
        (numerator . g$12136$XW@M@)
        (number? . g$12135$XW@M@)
        (number->string . g$12134$XW@M@)
        (null? . g$12133$XW@M@)
        (not . g$12132$XW@M@)
        (negative? . g$12131$XW@M@)
        (nan? . g$12130$XW@M@)
        (min . g$12129$XW@M@)
        (max . g$12128$XW@M@)
        (map . g$12127$XW@M@)
        (make-vector . g$12126$XW@M@)
        (make-string . g$12125$XW@M@)
        (make-rectangular . g$12124$XW@M@)
        (make-polar . g$12123$XW@M@)
        (magnitude . g$12122$XW@M@)
        (log . g$12121$XW@M@)
        (list? . g$12120$XW@M@)
        (list-tail . g$12119$XW@M@)
        (list-ref . g$12118$XW@M@)
        (list->vector . g$12117$XW@M@)
        (list->string . g$12116$XW@M@)
        (list . g$12115$XW@M@)
        (length . g$12114$XW@M@)
        (lcm . g$12113$XW@M@)
        (integer? . g$12112$XW@M@)
        (integer-valued? . g$12111$XW@M@)
        (integer->char . g$12110$XW@M@)
        (infinite? . g$12109$XW@M@)
        (inexact? . g$12108$XW@M@)
        (inexact . g$12107$XW@M@)
        (imag-part . g$12106$XW@M@)
        (gcd . g$12105$XW@M@)
        (for-each . g$12104$XW@M@)
        (floor . g$12103$XW@M@)
        (finite? . g$12102$XW@M@)
        (expt . g$12101$XW@M@)
        (exp . g$12100$XW@M@)
        (exact? . g$12099$XW@M@)
        (exact-integer-sqrt . g$12098$XW@M@)
        (exact . g$12097$XW@M@)
        (even? . g$12096$XW@M@)
        (error . g$12095$XW@M@)
        (eqv? . g$12094$XW@M@)
        (equal? . g$12093$XW@M@)
        (eq? . g$12092$XW@M@)
        (dynamic-wind . g$12091$XW@M@)
        (div0-and-mod0 . g$12090$XW@M@)
        (mod0 . g$12089$XW@M@)
        (div0 . g$12088$XW@M@)
        (div-and-mod . g$12087$XW@M@)
        (mod . g$12086$XW@M@)
        (div . g$12085$XW@M@)
        (denominator . g$12084$XW@M@)
        (cos . g$12083$XW@M@)
        (cons . g$12082$XW@M@)
        (complex? . g$12081$XW@M@)
        (char? . g$12080$XW@M@)
        (char>? . g$12079$XW@M@)
        (char>=? . g$12078$XW@M@)
        (char=? . g$12077$XW@M@)
        (char<? . g$12076$XW@M@)
        (char<=? . g$12075$XW@M@)
        (char->integer . g$12074$XW@M@)
        (ceiling . g$12073$XW@M@)
        (call-with-values . g$12072$XW@M@)
        (call/cc . g$12071$XW@M@)
        (call-with-current-continuation . g$12070$XW@M@)
        (cddddr . g$6235$XW@M@)
        (cdddar . g$6234$XW@M@)
        (cddadr . g$6233$XW@M@)
        (cddaar . g$6232$XW@M@)
        (cdaddr . g$6231$XW@M@)
        (cdadar . g$6230$XW@M@)
        (cdaadr . g$6229$XW@M@)
        (cdaaar . g$6228$XW@M@)
        (cadddr . g$6227$XW@M@)
        (caddar . g$6226$XW@M@)
        (cadadr . g$6225$XW@M@)
        (cadaar . g$6224$XW@M@)
        (caaddr . g$6223$XW@M@)
        (caadar . g$6222$XW@M@)
        (caaadr . g$6221$XW@M@)
        (caaaar . g$6220$XW@M@)
        (cdddr . g$6219$XW@M@)
        (cddar . g$6218$XW@M@)
        (cdadr . g$6217$XW@M@)
        (cdaar . g$6216$XW@M@)
        (caddr . g$6215$XW@M@)
        (cadar . g$6214$XW@M@)
        (caadr . g$6213$XW@M@)
        (caaar . g$6212$XW@M@)
        (cddr . g$6211$XW@M@)
        (cdar . g$6210$XW@M@)
        (cadr . g$6209$XW@M@)
        (caar . g$6208$XW@M@)
        (cdr . g$12069$XW@M@)
        (car . g$12068$XW@M@)
        (boolean? . g$12067$XW@M@)
        (boolean=? . g$12066$XW@M@)
        (atan . g$12065$XW@M@)
        (assertion-violation . g$12064$XW@M@)
        (asin . g$12063$XW@M@)
        (apply . g$12062$XW@M@)
        (append . g$12061$XW@M@)
        (angle . g$12060$XW@M@)
        (acos . g$12059$XW@M@)
        (abs . g$12058$XW@M@)
        (/ . g$12057$XW@M@)
        (* . g$12056$XW@M@)
        (- . g$12055$XW@M@)
        (+ . g$12054$XW@M@)
        (>= . g$12053$XW@M@)
        (> . g$12052$XW@M@)
        (= . g$12051$XW@M@)
        (<= . g$12050$XW@M@)
        (< . g$12049$XW@M@)
        (unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (_ . g$11967$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@)
        (... . g$11964$XW@M@)
        (assert . g$11963$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (identifier-syntax . g$11953$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (let-values . g$11945$XW@M@)
        (let*-values . g$11944$XW@M@)
        (case . g$11940$XW@M@)
        (if . g$11936$XW@M@)
        (letrec* . g$11935$XW@M@)
        (letrec . g$11934$XW@M@)
        (lambda . g$11931$XW@M@)
        (quote . g$11928$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (begin . g$11921$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12582$XW@M@
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6699$XW@M@)
        (remv . g$6700$XW@M@)
        (remp . g$6685$XW@M@)
        (remq . g$6701$XW@M@)
        (partition . g$6684$XW@M@)
        (memv . g$12316$XW@M@)
        (memq . g$12315$XW@M@)
        (memp . g$6691$XW@M@)
        (member . g$6690$XW@M@)
        (exists . g$6695$XW@M@)
        (for-all . g$6694$XW@M@)
        (fold-right . g$6698$XW@M@)
        (fold-left . g$6697$XW@M@)
        (find . g$6683$XW@M@)
        (filter . g$6686$XW@M@)
        (cons* . g$6696$XW@M@)
        (assv . g$6687$XW@M@)
        (assq . g$12314$XW@M@)
        (assp . g$6689$XW@M@)
        (assoc . g$6688$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12583$XW@M@
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$12407$XW@M@)
        (call-with-input-file . g$12406$XW@M@)
        (write-char . g$12405$XW@M@)
        (write . g$12404$XW@M@)
        (with-output-to-file . g$12403$XW@M@)
        (with-input-from-file . g$12402$XW@M@)
        (read-char . g$12401$XW@M@)
        (read . g$12400$XW@M@)
        (peek-char . g$12399$XW@M@)
        (open-output-file . g$12398$XW@M@)
        (open-input-file . g$12397$XW@M@)
        (newline . g$12396$XW@M@)
        (display . g$12395$XW@M@)
        (close-output-port . g$12394$XW@M@)
        (close-input-port . g$12393$XW@M@)
        (eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12584$XW@M@
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12346$XW@M@)
        (utf32->string . g$12305$XW@M@)
        (utf16->string . g$12304$XW@M@)
        (utf8->string . g$12303$XW@M@)
        (uint-list->bytevector . g$12302$XW@M@)
        (u8-list->bytevector . g$12301$XW@M@)
        (string->utf8 . g$12300$XW@M@)
        (string->utf32 . g$12299$XW@M@)
        (string->utf16 . g$12298$XW@M@)
        (sint-list->bytevector . g$12297$XW@M@)
        (native-endianness . g$6775$XW@M@)
        (bytevector? . g$12296$XW@M@)
        (bytevector=? . g$12295$XW@M@)
        (bytevector-uint-set! . g$12294$XW@M@)
        (bytevector-uint-ref . g$12293$XW@M@)
        (bytevector-u8-set! . g$12292$XW@M@)
        (bytevector-u8-ref . g$12291$XW@M@)
        (bytevector-u64-set! . g$6796$XW@M@)
        (bytevector-u64-ref . g$6792$XW@M@)
        (bytevector-u64-native-set! . g$6798$XW@M@)
        (bytevector-u64-native-ref . g$6794$XW@M@)
        (bytevector-u32-set! . g$6788$XW@M@)
        (bytevector-u32-ref . g$6784$XW@M@)
        (bytevector-u32-native-set! . g$6790$XW@M@)
        (bytevector-u32-native-ref . g$6786$XW@M@)
        (bytevector-u16-set! . g$6780$XW@M@)
        (bytevector-u16-ref . g$6776$XW@M@)
        (bytevector-u16-native-set! . g$6782$XW@M@)
        (bytevector-u16-native-ref . g$6778$XW@M@)
        (bytevector-sint-set! . g$12290$XW@M@)
        (bytevector-sint-ref . g$12289$XW@M@)
        (bytevector-s8-set! . g$12288$XW@M@)
        (bytevector-s8-ref . g$12287$XW@M@)
        (bytevector-s64-set! . g$6797$XW@M@)
        (bytevector-s64-ref . g$6793$XW@M@)
        (bytevector-s64-native-set! . g$6799$XW@M@)
        (bytevector-s64-native-ref . g$6795$XW@M@)
        (bytevector-s32-set! . g$6789$XW@M@)
        (bytevector-s32-ref . g$6785$XW@M@)
        (bytevector-s32-native-set! . g$6791$XW@M@)
        (bytevector-s32-native-ref . g$6787$XW@M@)
        (bytevector-s16-set! . g$6781$XW@M@)
        (bytevector-s16-ref . g$6777$XW@M@)
        (bytevector-s16-native-set! . g$6783$XW@M@)
        (bytevector-s16-native-ref . g$6779$XW@M@)
        (bytevector-length . g$12286$XW@M@)
        (bytevector-ieee-single-set! . g$12285$XW@M@)
        (bytevector-ieee-single-ref . g$12284$XW@M@)
        (bytevector-ieee-single-native-set! . g$6802$XW@M@)
        (bytevector-ieee-single-native-ref . g$6800$XW@M@)
        (bytevector-ieee-double-set! . g$12283$XW@M@)
        (bytevector-ieee-double-ref . g$12282$XW@M@)
        (bytevector-ieee-double-native-set! . g$6803$XW@M@)
        (bytevector-ieee-double-native-ref . g$6801$XW@M@)
        (bytevector-fill! . g$12281$XW@M@)
        (bytevector-copy! . g$12280$XW@M@)
        (bytevector-copy . g$12279$XW@M@)
        (bytevector->uint-list . g$12278$XW@M@)
        (bytevector->u8-list . g$12277$XW@M@)
        (bytevector->sint-list . g$12276$XW@M@)
        (endianness . g$11962$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12585$XW@M@
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12467$XW@M@)
        (string-titlecase . g$12466$XW@M@)
        (string-normalize-nfkd . g$12465$XW@M@)
        (string-normalize-nfkc . g$12464$XW@M@)
        (string-normalize-nfd . g$12463$XW@M@)
        (string-normalize-nfc . g$12462$XW@M@)
        (string-foldcase . g$12461$XW@M@)
        (string-downcase . g$12460$XW@M@)
        (string-ci>? . g$12459$XW@M@)
        (string-ci>=? . g$12458$XW@M@)
        (string-ci=? . g$12457$XW@M@)
        (string-ci<? . g$12456$XW@M@)
        (string-ci<=? . g$12455$XW@M@)
        (char-whitespace? . g$12454$XW@M@)
        (char-upper-case? . g$12453$XW@M@)
        (char-title-case? . g$12452$XW@M@)
        (char-numeric? . g$12451$XW@M@)
        (char-lower-case? . g$12450$XW@M@)
        (char-general-category . g$12449$XW@M@)
        (char-upcase . g$12448$XW@M@)
        (char-titlecase . g$12447$XW@M@)
        (char-foldcase . g$12446$XW@M@)
        (char-downcase . g$12445$XW@M@)
        (char-ci>? . g$12444$XW@M@)
        (char-ci>=? . g$12443$XW@M@)
        (char-ci=? . g$12442$XW@M@)
        (char-ci<? . g$12441$XW@M@)
        (char-ci<=? . g$12440$XW@M@)
        (char-alphabetic? . g$12439$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12586$XW@M@
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12313$XW@M@)
        (raise-continuable . g$12312$XW@M@)
        (raise . g$12311$XW@M@)
        (guard . g$11977$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12587$XW@M@
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7210$XW@M@)
        (bitwise-reverse-bit-field . g$7211$XW@M@)
        (bitwise-length . g$12191$XW@M@)
        (bitwise-if . g$7204$XW@M@)
        (bitwise-first-bit-set . g$12190$XW@M@)
        (bitwise-copy-bit-field . g$7207$XW@M@)
        (bitwise-copy-bit . g$7205$XW@M@)
        (bitwise-bit-set? . g$12189$XW@M@)
        (bitwise-bit-field . g$12188$XW@M@)
        (bitwise-bit-count . g$12187$XW@M@)
        (bitwise-xor . g$12186$XW@M@)
        (bitwise-ior . g$12185$XW@M@)
        (bitwise-and . g$12184$XW@M@)
        (bitwise-not . g$12183$XW@M@)
        (bitwise-arithmetic-shift-right . g$7209$XW@M@)
        (bitwise-arithmetic-shift-left . g$7208$XW@M@)
        (bitwise-arithmetic-shift . g$12182$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12588$XW@M@
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12229$XW@M@)
        (fxxor . g$12228$XW@M@)
        (fxrotate-bit-field . g$7262$XW@M@)
        (fxreverse-bit-field . g$12227$XW@M@)
        (fxpositive? . g$12226$XW@M@)
        (fxodd? . g$12225$XW@M@)
        (fxnot . g$12224$XW@M@)
        (fxnegative? . g$12223$XW@M@)
        (fxmod0 . g$12222$XW@M@)
        (fxmod . g$12221$XW@M@)
        (fxmin . g$12220$XW@M@)
        (fxmax . g$12219$XW@M@)
        (fxlength . g$12218$XW@M@)
        (fxior . g$12217$XW@M@)
        (fxif . g$7256$XW@M@)
        (fxfirst-bit-set . g$12216$XW@M@)
        (fxeven? . g$12215$XW@M@)
        (fxdiv0-and-mod0 . g$12214$XW@M@)
        (fxdiv0 . g$12213$XW@M@)
        (fxdiv-and-mod . g$12212$XW@M@)
        (fxdiv . g$12211$XW@M@)
        (fxcopy-bit-field . g$7259$XW@M@)
        (fxcopy-bit . g$7257$XW@M@)
        (fxbit-set? . g$12210$XW@M@)
        (fxbit-field . g$7258$XW@M@)
        (fxbit-count . g$12209$XW@M@)
        (fxarithmetic-shift-right . g$7261$XW@M@)
        (fxarithmetic-shift-left . g$7260$XW@M@)
        (fxarithmetic-shift . g$12208$XW@M@)
        (fxand . g$12207$XW@M@)
        (fx>? . g$12206$XW@M@)
        (fx>=? . g$12205$XW@M@)
        (fx=? . g$12204$XW@M@)
        (fx<? . g$12203$XW@M@)
        (fx<=? . g$12202$XW@M@)
        (fx-/carry . g$12201$XW@M@)
        (fx- . g$12200$XW@M@)
        (fx+/carry . g$12199$XW@M@)
        (fx+ . g$12198$XW@M@)
        (fx*/carry . g$12197$XW@M@)
        (fx* . g$12196$XW@M@)
        (greatest-fixnum . g$12195$XW@M@)
        (least-fixnum . g$12194$XW@M@)
        (fixnum-width . g$12193$XW@M@)
        (fixnum? . g$12192$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12589$XW@M@
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7331$XW@M@)
        (no-infinities-violation? . g$7317$XW@M@)
        (make-no-nans-violation . g$7330$XW@M@)
        (make-no-infinities-violation . g$7316$XW@M@)
        (real->flonum . g$12275$XW@M@)
        (flzero? . g$12274$XW@M@)
        (fltruncate . g$12273$XW@M@)
        (fltan . g$12272$XW@M@)
        (flsqrt . g$12271$XW@M@)
        (flsin . g$12270$XW@M@)
        (flround . g$12269$XW@M@)
        (flpositive? . g$12268$XW@M@)
        (flonum? . g$12267$XW@M@)
        (flodd? . g$12266$XW@M@)
        (flnumerator . g$12265$XW@M@)
        (flnegative? . g$12264$XW@M@)
        (flnan? . g$12263$XW@M@)
        (flmod0 . g$12262$XW@M@)
        (flmod . g$12261$XW@M@)
        (flmin . g$12260$XW@M@)
        (flmax . g$12259$XW@M@)
        (fllog . g$12258$XW@M@)
        (flinteger? . g$12257$XW@M@)
        (flinfinite? . g$12256$XW@M@)
        (flfloor . g$12255$XW@M@)
        (flfinite? . g$12254$XW@M@)
        (flexpt . g$12253$XW@M@)
        (flexp . g$12252$XW@M@)
        (fleven? . g$12251$XW@M@)
        (fldiv0-and-mod0 . g$12250$XW@M@)
        (fldiv0 . g$12249$XW@M@)
        (fldiv-and-mod . g$12248$XW@M@)
        (fldiv . g$12247$XW@M@)
        (fldenominator . g$12246$XW@M@)
        (flcos . g$12245$XW@M@)
        (flceiling . g$12244$XW@M@)
        (flatan . g$12243$XW@M@)
        (flasin . g$12242$XW@M@)
        (flacos . g$12241$XW@M@)
        (flabs . g$12240$XW@M@)
        (fl>? . g$12239$XW@M@)
        (fl>=? . g$12238$XW@M@)
        (fl=? . g$12237$XW@M@)
        (fl<? . g$12236$XW@M@)
        (fl<=? . g$12235$XW@M@)
        (fl/ . g$12234$XW@M@)
        (fl- . g$12233$XW@M@)
        (fl+ . g$12232$XW@M@)
        (fl* . g$12231$XW@M@)
        (fixnum->flonum . g$12230$XW@M@)
        (&no-nans . g$12022$XW@M@)
        (&no-infinities . g$12021$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12590$XW@M@
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12419$XW@M@)
        (string-ci-hash . g$12418$XW@M@)
        (string-hash . g$12417$XW@M@)
        (equal-hash . g$12416$XW@M@)
        (hashtable-equivalence-function . g$12415$XW@M@)
        (make-hashtable . g$12414$XW@M@)
        (hashtable-hash-function . g$12413$XW@M@)
        (make-eqv-hashtable . g$6586$XW@M@)
        (make-eq-hashtable . g$6585$XW@M@)
        (hashtable? . g$12412$XW@M@)
        (hashtable-update! . g$6592$XW@M@)
        (hashtable-size . g$6587$XW@M@)
        (hashtable-set! . g$6589$XW@M@)
        (hashtable-ref . g$6588$XW@M@)
        (hashtable-mutable? . g$12411$XW@M@)
        (hashtable-keys . g$12410$XW@M@)
        (hashtable-entries . g$12409$XW@M@)
        (hashtable-delete! . g$6590$XW@M@)
        (hashtable-copy . g$12408$XW@M@)
        (hashtable-contains? . g$6591$XW@M@)
        (hashtable-clear! . g$6593$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12591$XW@M@
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (utf-8-codec . g$12385$XW@M@)
        (utf-16-codec . g$12384$XW@M@)
        (transcoder-error-handling-mode . g$12383$XW@M@)
        (transcoder-eol-style . g$12382$XW@M@)
        (transcoder-codec . g$12381$XW@M@)
        (transcoded-port . g$12380$XW@M@)
        (textual-port? . g$12379$XW@M@)
        (string->bytevector . g$12378$XW@M@)
        (standard-output-port . g$12377$XW@M@)
        (standard-input-port . g$12376$XW@M@)
        (standard-error-port . g$12375$XW@M@)
        (set-port-position! . g$12374$XW@M@)
        (put-u8 . g$12373$XW@M@)
        (put-string . g$12372$XW@M@)
        (put-datum . g$12371$XW@M@)
        (put-char . g$12370$XW@M@)
        (put-bytevector . g$12369$XW@M@)
        (port? . g$7517$XW@M@)
        (port-transcoder . g$12368$XW@M@)
        (port-position . g$12367$XW@M@)
        (port-has-set-port-position!? . g$12366$XW@M@)
        (port-has-port-position? . g$12365$XW@M@)
        (port-eof? . g$12364$XW@M@)
        (output-port-buffer-mode . g$12363$XW@M@)
        (open-string-output-port . g$7516$XW@M@)
        (open-string-input-port . g$12362$XW@M@)
        (open-file-output-port . g$12361$XW@M@)
        (open-file-input/output-port . g$12360$XW@M@)
        (open-file-input-port . g$12359$XW@M@)
        (open-bytevector-output-port . g$12358$XW@M@)
        (open-bytevector-input-port . g$12357$XW@M@)
        (native-transcoder . g$12356$XW@M@)
        (native-eol-style . g$12355$XW@M@)
        (make-transcoder . g$12354$XW@M@)
        (latin-1-codec . g$12353$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (make-i/o-encoding-error . g$7509$XW@M@)
        (make-i/o-decoding-error . g$7494$XW@M@)
        (make-custom-textual-output-port . g$12352$XW@M@)
        (make-custom-textual-input/output-port . g$12351$XW@M@)
        (make-custom-textual-input-port . g$12350$XW@M@)
        (make-custom-binary-output-port . g$12349$XW@M@)
        (make-custom-binary-input/output-port . g$12348$XW@M@)
        (make-custom-binary-input-port . g$12347$XW@M@)
        (lookahead-u8 . g$12345$XW@M@)
        (lookahead-char . g$12344$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (i/o-encoding-error? . g$7511$XW@M@)
        (i/o-encoding-error-char . g$7512$XW@M@)
        (i/o-decoding-error? . g$7495$XW@M@)
        (get-u8 . g$12343$XW@M@)
        (get-string-n! . g$12342$XW@M@)
        (get-string-n . g$12341$XW@M@)
        (get-string-all . g$12340$XW@M@)
        (get-line . g$12339$XW@M@)
        (get-datum . g$12338$XW@M@)
        (get-char . g$12337$XW@M@)
        (get-bytevector-some . g$12336$XW@M@)
        (get-bytevector-n! . g$12335$XW@M@)
        (get-bytevector-n . g$12334$XW@M@)
        (get-bytevector-all . g$12333$XW@M@)
        (flush-output-port . g$12332$XW@M@)
        (close-port . g$12331$XW@M@)
        (call-with-string-output-port . g$12330$XW@M@)
        (call-with-port . g$12329$XW@M@)
        (call-with-bytevector-output-port . g$12328$XW@M@)
        (bytevector->string . g$12327$XW@M@)
        (buffer-mode? . g$12326$XW@M@)
        (binary-port? . g$12325$XW@M@)
        (&i/o-encoding . g$12020$XW@M@)
        (&i/o-decoding . g$12019$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@)
        (error-handling-mode . g$11981$XW@M@)
        (file-options . g$11980$XW@M@)
        (buffer-mode . g$11979$XW@M@)
        (eol-style . g$11978$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12592$XW@M@
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7559$XW@M@)
        (enum-set=? . g$7566$XW@M@)
        (enum-set-universe . g$7560$XW@M@)
        (enum-set-union . g$7567$XW@M@)
        (enum-set-subset? . g$7565$XW@M@)
        (enum-set-projection . g$7571$XW@M@)
        (enum-set-member? . g$7564$XW@M@)
        (enum-set-intersection . g$7568$XW@M@)
        (enum-set-indexer . g$7561$XW@M@)
        (enum-set-difference . g$7569$XW@M@)
        (enum-set-constructor . g$7562$XW@M@)
        (enum-set-complement . g$7570$XW@M@)
        (enum-set->list . g$7563$XW@M@)
        (define-enumeration . g$11992$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12593$XW@M@
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7023$XW@M@)
        (warning? . g$6934$XW@M@)
        (violation? . g$6976$XW@M@)
        (undefined-violation? . g$7100$XW@M@)
        (syntax-violation? . g$7084$XW@M@)
        (syntax-violation-subform . g$7086$XW@M@)
        (syntax-violation-form . g$7085$XW@M@)
        (syntax-violation . g$8949$XW@M@)
        (simple-conditions . g$12310$XW@M@)
        (serious-condition? . g$6948$XW@M@)
        (non-continuable-violation? . g$7038$XW@M@)
        (message-condition? . g$6919$XW@M@)
        (make-who-condition . g$7021$XW@M@)
        (make-warning . g$6933$XW@M@)
        (make-violation . g$6975$XW@M@)
        (make-undefined-violation . g$7099$XW@M@)
        (make-syntax-violation . g$7081$XW@M@)
        (make-serious-condition . g$6947$XW@M@)
        (make-non-continuable-violation . g$7037$XW@M@)
        (make-message-condition . g$6917$XW@M@)
        (make-lexical-violation . g$7065$XW@M@)
        (make-irritants-condition . g$7004$XW@M@)
        (make-implementation-restriction-violation . g$7051$XW@M@)
        (make-error . g$6961$XW@M@)
        (make-assertion-violation . g$6989$XW@M@)
        (lexical-violation? . g$7066$XW@M@)
        (irritants-condition? . g$7006$XW@M@)
        (implementation-restriction-violation? . g$7052$XW@M@)
        (error? . g$6962$XW@M@)
        (condition-who . g$7024$XW@M@)
        (condition-predicate . g$12309$XW@M@)
        (condition-message . g$6920$XW@M@)
        (condition-irritants . g$7007$XW@M@)
        (condition-accessor . g$12308$XW@M@)
        (condition . g$12307$XW@M@)
        (assertion-violation? . g$6990$XW@M@)
        (condition? . g$12306$XW@M@)
        (&non-continuable . g$12008$XW@M@)
        (&undefined . g$12007$XW@M@)
        (&syntax . g$12006$XW@M@)
        (&lexical . g$12005$XW@M@)
        (&implementation-restriction . g$12004$XW@M@)
        (&who . g$12002$XW@M@)
        (&irritants . g$12001$XW@M@)
        (&assertion . g$12000$XW@M@)
        (&violation . g$11999$XW@M@)
        (&error . g$11998$XW@M@)
        (&serious . g$11997$XW@M@)
        (&warning . g$11996$XW@M@)
        (&message . g$11995$XW@M@)
        (&condition . g$11994$XW@M@)
        (define-condition-type . g$11993$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12594$XW@M@
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12431$XW@M@)
        (record-type-uid . g$12430$XW@M@)
        (record-type-sealed? . g$12429$XW@M@)
        (record-type-parent . g$12428$XW@M@)
        (record-type-opaque? . g$12427$XW@M@)
        (record-type-name . g$12426$XW@M@)
        (record-type-generative? . g$12425$XW@M@)
        (record-type-field-names . g$12424$XW@M@)
        (record-rtd . g$12423$XW@M@)
        (record-field-mutable? . g$12422$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12595$XW@M@
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12438$XW@M@)
        (record-predicate . g$12437$XW@M@)
        (record-mutator . g$12436$XW@M@)
        (record-constructor . g$12435$XW@M@)
        (record-accessor . g$12434$XW@M@)
        (make-record-type-descriptor . g$12433$XW@M@)
        (make-record-constructor-descriptor . g$12432$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12596$XW@M@
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11991$XW@M@)
        (parent-rtd . g$11990$XW@M@)
        (nongenerative . g$11989$XW@M@)
        (opaque . g$11988$XW@M@)
        (sealed . g$11987$XW@M@)
        (protocol . g$11986$XW@M@)
        (parent . g$11985$XW@M@)
        (immutable . g$11984$XW@M@)
        (mutable . g$11983$XW@M@)
        (fields . g$11982$XW@M@)
        (record-constructor-descriptor . g$11943$XW@M@)
        (record-type-descriptor . g$11942$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7400$XW@M@
      'g$12597$XW@M@
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8827$XW@M@)
        (&no-nans-rcd . g$12561$XW@M@)
        (&no-nans-rtd . g$12560$XW@M@)
        (&no-infinities-rcd . g$12559$XW@M@)
        (&no-infinities-rtd . g$12558$XW@M@)
        (&i/o-encoding-rcd . g$12557$XW@M@)
        (&i/o-encoding-rtd . g$12556$XW@M@)
        (&i/o-decoding-rcd . g$12555$XW@M@)
        (&i/o-decoding-rtd . g$12554$XW@M@)
        (&i/o-port-rcd . g$12553$XW@M@)
        (&i/o-port-rtd . g$12552$XW@M@)
        (&i/o-file-does-not-exist-rcd . g$12551$XW@M@)
        (&i/o-file-does-not-exist-rtd . g$12550$XW@M@)
        (&i/o-file-already-exists-rcd . g$12549$XW@M@)
        (&i/o-file-already-exists-rtd . g$12548$XW@M@)
        (&i/o-file-is-read-only-rcd . g$12547$XW@M@)
        (&i/o-file-is-read-only-rtd . g$12546$XW@M@)
        (&i/o-file-protection-rcd . g$12545$XW@M@)
        (&i/o-file-protection-rtd . g$12544$XW@M@)
        (&i/o-filename-rcd . g$12543$XW@M@)
        (&i/o-filename-rtd . g$12542$XW@M@)
        (&i/o-invalid-position-rcd . g$12541$XW@M@)
        (&i/o-invalid-position-rtd . g$12540$XW@M@)
        (&i/o-write-rcd . g$12539$XW@M@)
        (&i/o-write-rtd . g$12538$XW@M@)
        (&i/o-read-rcd . g$12537$XW@M@)
        (&i/o-read-rtd . g$12536$XW@M@)
        (&i/o-rcd . g$12535$XW@M@)
        (&i/o-rtd . g$12534$XW@M@)
        (&undefined-rcd . g$12533$XW@M@)
        (&undefined-rtd . g$12532$XW@M@)
        (&syntax-rcd . g$12531$XW@M@)
        (&syntax-rtd . g$12530$XW@M@)
        (&lexical-rcd . g$12529$XW@M@)
        (&lexical-rtd . g$12528$XW@M@)
        (&implementation-restriction-rcd . g$12527$XW@M@)
        (&implementation-restriction-rtd . g$12526$XW@M@)
        (&non-continuable-rcd . g$12525$XW@M@)
        (&non-continuable-rtd . g$12524$XW@M@)
        (&who-rcd . g$12523$XW@M@)
        (&who-rtd . g$12522$XW@M@)
        (&irritants-rcd . g$12521$XW@M@)
        (&irritants-rtd . g$12520$XW@M@)
        (&assertion-rcd . g$12519$XW@M@)
        (&assertion-rtd . g$12518$XW@M@)
        (&violation-rcd . g$12517$XW@M@)
        (&violation-rtd . g$12516$XW@M@)
        (&error-rcd . g$12515$XW@M@)
        (&error-rtd . g$12514$XW@M@)
        (&serious-rcd . g$12513$XW@M@)
        (&serious-rtd . g$12512$XW@M@)
        (&warning-rcd . g$12511$XW@M@)
        (&warning-rtd . g$12510$XW@M@)
        (&message-rcd . g$12509$XW@M@)
        (&message-rtd . g$12508$XW@M@)
        (&condition-rcd . g$12507$XW@M@)
        (&condition-rtd . g$12506$XW@M@)
        (library-letrec* . g$12505$XW@M@)
        (annotation-stripped . g$12504$XW@M@)
        (annotation-source . g$12503$XW@M@)
        (annotation-expression . g$12502$XW@M@)
        (annotation? . g$12501$XW@M@)
        (read-annotated . g$12500$XW@M@)
        (tanh . g$12499$XW@M@)
        (cosh . g$12498$XW@M@)
        (sinh . g$12497$XW@M@)
        (make-guid . g$12496$XW@M@)
        (unspecified? . g$12495$XW@M@)
        (make-trace . g$12494$XW@M@)
        (make-list . g$12493$XW@M@)
        (last-pair . g$12492$XW@M@)
        (load-r5rs . g$12491$XW@M@)
        (license . g$12490$XW@M@)
        (stacktrace . g$12489$XW@M@)
        (ironscheme-build . g$11887$XW@M@)
        (define-clr-class-internal . g$12488$XW@M@)
        (clr-field-set!-internal . g$12487$XW@M@)
        (clr-field-get-internal . g$12486$XW@M@)
        (clr-cast-internal . g$12485$XW@M@)
        (clr-call-internal . g$12484$XW@M@)
        (clr-new-internal . g$12483$XW@M@)
        (clr-new-array-internal . g$12482$XW@M@)
        (clr-is-internal . g$12481$XW@M@)
        (clr-reference-internal . g$12480$XW@M@)
        (clr-using-internal . g$12479$XW@M@)
        (clr-clear-usings-internal . g$12478$XW@M@)
        (syntax-error . g$8946$XW@M@)
        (syntax-dispatch . g$8822$XW@M@)
        (compile-core . g$12477$XW@M@)
        (eval-core . g$12476$XW@M@)
        (set-symbol-value! . g$12475$XW@M@)
        (symbol-value . g$12474$XW@M@)
        (ungensym . g$12473$XW@M@)
        (gensym . g$12472$XW@M@)
        (void . g$12471$XW@M@)
        (load-serialized-library . g$12470$XW@M@)
        (serialize-library . g$12469$XW@M@)
        (compile-system-libraries . g$11889$XW@M@)
        (compile->closure . g$11891$XW@M@)
        (compile . g$11890$XW@M@)
        (load . g$11886$XW@M@)
        (interaction-environment . g$8955$XW@M@)
        (char-ready? . g$12468$XW@M@)
        (string-upcase . g$12467$XW@M@)
        (string-titlecase . g$12466$XW@M@)
        (string-normalize-nfkd . g$12465$XW@M@)
        (string-normalize-nfkc . g$12464$XW@M@)
        (string-normalize-nfd . g$12463$XW@M@)
        (string-normalize-nfc . g$12462$XW@M@)
        (string-foldcase . g$12461$XW@M@)
        (string-downcase . g$12460$XW@M@)
        (string-ci>? . g$12459$XW@M@)
        (string-ci>=? . g$12458$XW@M@)
        (string-ci=? . g$12457$XW@M@)
        (string-ci<? . g$12456$XW@M@)
        (string-ci<=? . g$12455$XW@M@)
        (char-whitespace? . g$12454$XW@M@)
        (char-upper-case? . g$12453$XW@M@)
        (char-title-case? . g$12452$XW@M@)
        (char-numeric? . g$12451$XW@M@)
        (char-lower-case? . g$12450$XW@M@)
        (char-general-category . g$12449$XW@M@)
        (char-upcase . g$12448$XW@M@)
        (char-titlecase . g$12447$XW@M@)
        (char-foldcase . g$12446$XW@M@)
        (char-downcase . g$12445$XW@M@)
        (char-ci>? . g$12444$XW@M@)
        (char-ci>=? . g$12443$XW@M@)
        (char-ci=? . g$12442$XW@M@)
        (char-ci<? . g$12441$XW@M@)
        (char-ci<=? . g$12440$XW@M@)
        (char-alphabetic? . g$12439$XW@M@)
        (variable-transformer-procedure . g$8559$XW@M@)
        (variable-transformer? . g$8558$XW@M@)
        (make-variable-transformer . g$8557$XW@M@)
        (identifier? . g$8950$XW@M@)
        (generate-temporaries . g$8942$XW@M@)
        (free-identifier=? . g$8943$XW@M@)
        (syntax->datum . g$8952$XW@M@)
        (datum->syntax . g$8951$XW@M@)
        (bound-identifier=? . g$8944$XW@M@)
        (record-type-descriptor? . g$12438$XW@M@)
        (record-predicate . g$12437$XW@M@)
        (record-mutator . g$12436$XW@M@)
        (record-constructor . g$12435$XW@M@)
        (record-accessor . g$12434$XW@M@)
        (make-record-type-descriptor . g$12433$XW@M@)
        (make-record-constructor-descriptor . g$12432$XW@M@)
        (record? . g$12431$XW@M@)
        (record-type-uid . g$12430$XW@M@)
        (record-type-sealed? . g$12429$XW@M@)
        (record-type-parent . g$12428$XW@M@)
        (record-type-opaque? . g$12427$XW@M@)
        (record-type-name . g$12426$XW@M@)
        (record-type-generative? . g$12425$XW@M@)
        (record-type-field-names . g$12424$XW@M@)
        (record-rtd . g$12423$XW@M@)
        (record-field-mutable? . g$12422$XW@M@)
        (delete-file . g$6619$XW@M@)
        (file-exists? . g$6618$XW@M@)
        (vector-sort! . g$12421$XW@M@)
        (vector-sort . g$12420$XW@M@)
        (list-sort . g$7125$XW@M@)
        (symbol-hash . g$12419$XW@M@)
        (string-ci-hash . g$12418$XW@M@)
        (string-hash . g$12417$XW@M@)
        (equal-hash . g$12416$XW@M@)
        (hashtable-equivalence-function . g$12415$XW@M@)
        (make-hashtable . g$12414$XW@M@)
        (hashtable-hash-function . g$12413$XW@M@)
        (make-eqv-hashtable . g$6586$XW@M@)
        (make-eq-hashtable . g$6585$XW@M@)
        (hashtable? . g$12412$XW@M@)
        (hashtable-update! . g$6592$XW@M@)
        (hashtable-size . g$6587$XW@M@)
        (hashtable-set! . g$6589$XW@M@)
        (hashtable-ref . g$6588$XW@M@)
        (hashtable-mutable? . g$12411$XW@M@)
        (hashtable-keys . g$12410$XW@M@)
        (hashtable-entries . g$12409$XW@M@)
        (hashtable-delete! . g$6590$XW@M@)
        (hashtable-copy . g$12408$XW@M@)
        (hashtable-contains? . g$6591$XW@M@)
        (hashtable-clear! . g$6593$XW@M@)
        (call-with-output-file . g$12407$XW@M@)
        (call-with-input-file . g$12406$XW@M@)
        (write-char . g$12405$XW@M@)
        (write . g$12404$XW@M@)
        (with-output-to-file . g$12403$XW@M@)
        (with-input-from-file . g$12402$XW@M@)
        (read-char . g$12401$XW@M@)
        (read . g$12400$XW@M@)
        (peek-char . g$12399$XW@M@)
        (open-output-file . g$12398$XW@M@)
        (open-input-file . g$12397$XW@M@)
        (newline . g$12396$XW@M@)
        (display . g$12395$XW@M@)
        (close-output-port . g$12394$XW@M@)
        (close-input-port . g$12393$XW@M@)
        (eof-object? . g$12392$XW@M@)
        (eof-object . g$12391$XW@M@)
        (current-error-port . g$12390$XW@M@)
        (current-output-port . g$12389$XW@M@)
        (current-input-port . g$12388$XW@M@)
        (output-port? . g$12387$XW@M@)
        (input-port? . g$12386$XW@M@)
        (utf-8-codec . g$12385$XW@M@)
        (utf-16-codec . g$12384$XW@M@)
        (transcoder-error-handling-mode . g$12383$XW@M@)
        (transcoder-eol-style . g$12382$XW@M@)
        (transcoder-codec . g$12381$XW@M@)
        (transcoded-port . g$12380$XW@M@)
        (textual-port? . g$12379$XW@M@)
        (string->bytevector . g$12378$XW@M@)
        (standard-output-port . g$12377$XW@M@)
        (standard-input-port . g$12376$XW@M@)
        (standard-error-port . g$12375$XW@M@)
        (set-port-position! . g$12374$XW@M@)
        (put-u8 . g$12373$XW@M@)
        (put-string . g$12372$XW@M@)
        (put-datum . g$12371$XW@M@)
        (put-char . g$12370$XW@M@)
        (put-bytevector . g$12369$XW@M@)
        (port? . g$7517$XW@M@)
        (port-transcoder . g$12368$XW@M@)
        (port-position . g$12367$XW@M@)
        (port-has-set-port-position!? . g$12366$XW@M@)
        (port-has-port-position? . g$12365$XW@M@)
        (port-eof? . g$12364$XW@M@)
        (output-port-buffer-mode . g$12363$XW@M@)
        (open-string-output-port . g$7516$XW@M@)
        (open-string-input-port . g$12362$XW@M@)
        (open-file-output-port . g$12361$XW@M@)
        (open-file-input/output-port . g$12360$XW@M@)
        (open-file-input-port . g$12359$XW@M@)
        (open-bytevector-output-port . g$12358$XW@M@)
        (open-bytevector-input-port . g$12357$XW@M@)
        (native-transcoder . g$12356$XW@M@)
        (native-eol-style . g$12355$XW@M@)
        (make-transcoder . g$12354$XW@M@)
        (latin-1-codec . g$12353$XW@M@)
        (make-i/o-write-error . g$7373$XW@M@)
        (make-i/o-read-error . g$7359$XW@M@)
        (make-i/o-port-error . g$7478$XW@M@)
        (make-i/o-invalid-position-error . g$7388$XW@M@)
        (make-i/o-filename-error . g$7405$XW@M@)
        (make-i/o-file-protection-error . g$7421$XW@M@)
        (make-i/o-file-is-read-only-error . g$7435$XW@M@)
        (make-i/o-file-does-not-exist-error . g$7463$XW@M@)
        (make-i/o-file-already-exists-error . g$7449$XW@M@)
        (make-i/o-error . g$7345$XW@M@)
        (make-i/o-encoding-error . g$7509$XW@M@)
        (make-i/o-decoding-error . g$7494$XW@M@)
        (make-custom-textual-output-port . g$12352$XW@M@)
        (make-custom-textual-input/output-port . g$12351$XW@M@)
        (make-custom-textual-input-port . g$12350$XW@M@)
        (make-custom-binary-output-port . g$12349$XW@M@)
        (make-custom-binary-input/output-port . g$12348$XW@M@)
        (make-custom-binary-input-port . g$12347$XW@M@)
        (make-bytevector . g$12346$XW@M@)
        (lookahead-u8 . g$12345$XW@M@)
        (lookahead-char . g$12344$XW@M@)
        (i/o-write-error? . g$7374$XW@M@)
        (i/o-read-error? . g$7360$XW@M@)
        (i/o-port-error? . g$7480$XW@M@)
        (i/o-invalid-position-error? . g$7390$XW@M@)
        (i/o-error-position . g$7391$XW@M@)
        (i/o-filename-error? . g$7407$XW@M@)
        (i/o-file-protection-error? . g$7422$XW@M@)
        (i/o-file-is-read-only-error? . g$7436$XW@M@)
        (i/o-file-does-not-exist-error? . g$7464$XW@M@)
        (i/o-file-already-exists-error? . g$7450$XW@M@)
        (i/o-error? . g$7346$XW@M@)
        (i/o-error-port . g$7481$XW@M@)
        (i/o-error-filename . g$7408$XW@M@)
        (i/o-encoding-error? . g$7511$XW@M@)
        (i/o-encoding-error-char . g$7512$XW@M@)
        (i/o-decoding-error? . g$7495$XW@M@)
        (get-u8 . g$12343$XW@M@)
        (get-string-n! . g$12342$XW@M@)
        (get-string-n . g$12341$XW@M@)
        (get-string-all . g$12340$XW@M@)
        (get-line . g$12339$XW@M@)
        (get-datum . g$12338$XW@M@)
        (get-char . g$12337$XW@M@)
        (get-bytevector-some . g$12336$XW@M@)
        (get-bytevector-n! . g$12335$XW@M@)
        (get-bytevector-n . g$12334$XW@M@)
        (get-bytevector-all . g$12333$XW@M@)
        (flush-output-port . g$12332$XW@M@)
        (close-port . g$12331$XW@M@)
        (call-with-string-output-port . g$12330$XW@M@)
        (call-with-port . g$12329$XW@M@)
        (call-with-bytevector-output-port . g$12328$XW@M@)
        (bytevector->string . g$12327$XW@M@)
        (buffer-mode? . g$12326$XW@M@)
        (binary-port? . g$12325$XW@M@)
        (scheme-report-environment . g$8933$XW@M@)
        (quotient . g$7112$XW@M@)
        (null-environment . g$8932$XW@M@)
        (remainder . g$7113$XW@M@)
        (modulo . g$7114$XW@M@)
        (inexact->exact . g$12324$XW@M@)
        (force . g$12323$XW@M@)
        (exact->inexact . g$12322$XW@M@)
        (exit . g$12321$XW@M@)
        (command-line . g$11883$XW@M@)
        (string-fill! . g$12320$XW@M@)
        (string-set! . g$12319$XW@M@)
        (set-cdr! . g$12318$XW@M@)
        (set-car! . g$12317$XW@M@)
        (remove . g$6699$XW@M@)
        (remv . g$6700$XW@M@)
        (remp . g$6685$XW@M@)
        (remq . g$6701$XW@M@)
        (partition . g$6684$XW@M@)
        (memv . g$12316$XW@M@)
        (memq . g$12315$XW@M@)
        (memp . g$6691$XW@M@)
        (member . g$6690$XW@M@)
        (exists . g$6695$XW@M@)
        (for-all . g$6694$XW@M@)
        (fold-right . g$6698$XW@M@)
        (fold-left . g$6697$XW@M@)
        (find . g$6683$XW@M@)
        (filter . g$6686$XW@M@)
        (cons* . g$6696$XW@M@)
        (assv . g$6687$XW@M@)
        (assq . g$12314$XW@M@)
        (assp . g$6689$XW@M@)
        (assoc . g$6688$XW@M@)
        (with-exception-handler . g$12313$XW@M@)
        (raise-continuable . g$12312$XW@M@)
        (raise . g$12311$XW@M@)
        (eval . g$8935$XW@M@)
        (environment . g$8931$XW@M@)
        (make-enumeration . g$7559$XW@M@)
        (enum-set=? . g$7566$XW@M@)
        (enum-set-universe . g$7560$XW@M@)
        (enum-set-union . g$7567$XW@M@)
        (enum-set-subset? . g$7565$XW@M@)
        (enum-set-projection . g$7571$XW@M@)
        (enum-set-member? . g$7564$XW@M@)
        (enum-set-intersection . g$7568$XW@M@)
        (enum-set-indexer . g$7561$XW@M@)
        (enum-set-difference . g$7569$XW@M@)
        (enum-set-constructor . g$7562$XW@M@)
        (enum-set-complement . g$7570$XW@M@)
        (enum-set->list . g$7563$XW@M@)
        (who-condition? . g$7023$XW@M@)
        (warning? . g$6934$XW@M@)
        (violation? . g$6976$XW@M@)
        (undefined-violation? . g$7100$XW@M@)
        (syntax-violation? . g$7084$XW@M@)
        (syntax-violation-subform . g$7086$XW@M@)
        (syntax-violation-form . g$7085$XW@M@)
        (syntax-violation . g$8949$XW@M@)
        (simple-conditions . g$12310$XW@M@)
        (serious-condition? . g$6948$XW@M@)
        (non-continuable-violation? . g$7038$XW@M@)
        (message-condition? . g$6919$XW@M@)
        (make-who-condition . g$7021$XW@M@)
        (make-warning . g$6933$XW@M@)
        (make-violation . g$6975$XW@M@)
        (make-undefined-violation . g$7099$XW@M@)
        (make-syntax-violation . g$7081$XW@M@)
        (make-serious-condition . g$6947$XW@M@)
        (make-non-continuable-violation . g$7037$XW@M@)
        (make-message-condition . g$6917$XW@M@)
        (make-lexical-violation . g$7065$XW@M@)
        (make-irritants-condition . g$7004$XW@M@)
        (make-implementation-restriction-violation . g$7051$XW@M@)
        (make-error . g$6961$XW@M@)
        (make-assertion-violation . g$6989$XW@M@)
        (lexical-violation? . g$7066$XW@M@)
        (irritants-condition? . g$7006$XW@M@)
        (implementation-restriction-violation? . g$7052$XW@M@)
        (error? . g$6962$XW@M@)
        (condition-who . g$7024$XW@M@)
        (condition-predicate . g$12309$XW@M@)
        (condition-message . g$6920$XW@M@)
        (condition-irritants . g$7007$XW@M@)
        (condition-accessor . g$12308$XW@M@)
        (condition . g$12307$XW@M@)
        (assertion-violation? . g$6990$XW@M@)
        (condition? . g$12306$XW@M@)
        (utf32->string . g$12305$XW@M@)
        (utf16->string . g$12304$XW@M@)
        (utf8->string . g$12303$XW@M@)
        (uint-list->bytevector . g$12302$XW@M@)
        (u8-list->bytevector . g$12301$XW@M@)
        (string->utf8 . g$12300$XW@M@)
        (string->utf32 . g$12299$XW@M@)
        (string->utf16 . g$12298$XW@M@)
        (sint-list->bytevector . g$12297$XW@M@)
        (native-endianness . g$6775$XW@M@)
        (bytevector? . g$12296$XW@M@)
        (bytevector=? . g$12295$XW@M@)
        (bytevector-uint-set! . g$12294$XW@M@)
        (bytevector-uint-ref . g$12293$XW@M@)
        (bytevector-u8-set! . g$12292$XW@M@)
        (bytevector-u8-ref . g$12291$XW@M@)
        (bytevector-u64-set! . g$6796$XW@M@)
        (bytevector-u64-ref . g$6792$XW@M@)
        (bytevector-u64-native-set! . g$6798$XW@M@)
        (bytevector-u64-native-ref . g$6794$XW@M@)
        (bytevector-u32-set! . g$6788$XW@M@)
        (bytevector-u32-ref . g$6784$XW@M@)
        (bytevector-u32-native-set! . g$6790$XW@M@)
        (bytevector-u32-native-ref . g$6786$XW@M@)
        (bytevector-u16-set! . g$6780$XW@M@)
        (bytevector-u16-ref . g$6776$XW@M@)
        (bytevector-u16-native-set! . g$6782$XW@M@)
        (bytevector-u16-native-ref . g$6778$XW@M@)
        (bytevector-sint-set! . g$12290$XW@M@)
        (bytevector-sint-ref . g$12289$XW@M@)
        (bytevector-s8-set! . g$12288$XW@M@)
        (bytevector-s8-ref . g$12287$XW@M@)
        (bytevector-s64-set! . g$6797$XW@M@)
        (bytevector-s64-ref . g$6793$XW@M@)
        (bytevector-s64-native-set! . g$6799$XW@M@)
        (bytevector-s64-native-ref . g$6795$XW@M@)
        (bytevector-s32-set! . g$6789$XW@M@)
        (bytevector-s32-ref . g$6785$XW@M@)
        (bytevector-s32-native-set! . g$6791$XW@M@)
        (bytevector-s32-native-ref . g$6787$XW@M@)
        (bytevector-s16-set! . g$6781$XW@M@)
        (bytevector-s16-ref . g$6777$XW@M@)
        (bytevector-s16-native-set! . g$6783$XW@M@)
        (bytevector-s16-native-ref . g$6779$XW@M@)
        (bytevector-length . g$12286$XW@M@)
        (bytevector-ieee-single-set! . g$12285$XW@M@)
        (bytevector-ieee-single-ref . g$12284$XW@M@)
        (bytevector-ieee-single-native-set! . g$6802$XW@M@)
        (bytevector-ieee-single-native-ref . g$6800$XW@M@)
        (bytevector-ieee-double-set! . g$12283$XW@M@)
        (bytevector-ieee-double-ref . g$12282$XW@M@)
        (bytevector-ieee-double-native-set! . g$6803$XW@M@)
        (bytevector-ieee-double-native-ref . g$6801$XW@M@)
        (bytevector-fill! . g$12281$XW@M@)
        (bytevector-copy! . g$12280$XW@M@)
        (bytevector-copy . g$12279$XW@M@)
        (bytevector->uint-list . g$12278$XW@M@)
        (bytevector->u8-list . g$12277$XW@M@)
        (bytevector->sint-list . g$12276$XW@M@)
        (no-nans-violation? . g$7331$XW@M@)
        (no-infinities-violation? . g$7317$XW@M@)
        (make-no-nans-violation . g$7330$XW@M@)
        (make-no-infinities-violation . g$7316$XW@M@)
        (real->flonum . g$12275$XW@M@)
        (flzero? . g$12274$XW@M@)
        (fltruncate . g$12273$XW@M@)
        (fltan . g$12272$XW@M@)
        (flsqrt . g$12271$XW@M@)
        (flsin . g$12270$XW@M@)
        (flround . g$12269$XW@M@)
        (flpositive? . g$12268$XW@M@)
        (flonum? . g$12267$XW@M@)
        (flodd? . g$12266$XW@M@)
        (flnumerator . g$12265$XW@M@)
        (flnegative? . g$12264$XW@M@)
        (flnan? . g$12263$XW@M@)
        (flmod0 . g$12262$XW@M@)
        (flmod . g$12261$XW@M@)
        (flmin . g$12260$XW@M@)
        (flmax . g$12259$XW@M@)
        (fllog . g$12258$XW@M@)
        (flinteger? . g$12257$XW@M@)
        (flinfinite? . g$12256$XW@M@)
        (flfloor . g$12255$XW@M@)
        (flfinite? . g$12254$XW@M@)
        (flexpt . g$12253$XW@M@)
        (flexp . g$12252$XW@M@)
        (fleven? . g$12251$XW@M@)
        (fldiv0-and-mod0 . g$12250$XW@M@)
        (fldiv0 . g$12249$XW@M@)
        (fldiv-and-mod . g$12248$XW@M@)
        (fldiv . g$12247$XW@M@)
        (fldenominator . g$12246$XW@M@)
        (flcos . g$12245$XW@M@)
        (flceiling . g$12244$XW@M@)
        (flatan . g$12243$XW@M@)
        (flasin . g$12242$XW@M@)
        (flacos . g$12241$XW@M@)
        (flabs . g$12240$XW@M@)
        (fl>? . g$12239$XW@M@)
        (fl>=? . g$12238$XW@M@)
        (fl=? . g$12237$XW@M@)
        (fl<? . g$12236$XW@M@)
        (fl<=? . g$12235$XW@M@)
        (fl/ . g$12234$XW@M@)
        (fl- . g$12233$XW@M@)
        (fl+ . g$12232$XW@M@)
        (fl* . g$12231$XW@M@)
        (fixnum->flonum . g$12230$XW@M@)
        (fxzero? . g$12229$XW@M@)
        (fxxor . g$12228$XW@M@)
        (fxrotate-bit-field . g$7262$XW@M@)
        (fxreverse-bit-field . g$12227$XW@M@)
        (fxpositive? . g$12226$XW@M@)
        (fxodd? . g$12225$XW@M@)
        (fxnot . g$12224$XW@M@)
        (fxnegative? . g$12223$XW@M@)
        (fxmod0 . g$12222$XW@M@)
        (fxmod . g$12221$XW@M@)
        (fxmin . g$12220$XW@M@)
        (fxmax . g$12219$XW@M@)
        (fxlength . g$12218$XW@M@)
        (fxior . g$12217$XW@M@)
        (fxif . g$7256$XW@M@)
        (fxfirst-bit-set . g$12216$XW@M@)
        (fxeven? . g$12215$XW@M@)
        (fxdiv0-and-mod0 . g$12214$XW@M@)
        (fxdiv0 . g$12213$XW@M@)
        (fxdiv-and-mod . g$12212$XW@M@)
        (fxdiv . g$12211$XW@M@)
        (fxcopy-bit-field . g$7259$XW@M@)
        (fxcopy-bit . g$7257$XW@M@)
        (fxbit-set? . g$12210$XW@M@)
        (fxbit-field . g$7258$XW@M@)
        (fxbit-count . g$12209$XW@M@)
        (fxarithmetic-shift-right . g$7261$XW@M@)
        (fxarithmetic-shift-left . g$7260$XW@M@)
        (fxarithmetic-shift . g$12208$XW@M@)
        (fxand . g$12207$XW@M@)
        (fx>? . g$12206$XW@M@)
        (fx>=? . g$12205$XW@M@)
        (fx=? . g$12204$XW@M@)
        (fx<? . g$12203$XW@M@)
        (fx<=? . g$12202$XW@M@)
        (fx-/carry . g$12201$XW@M@)
        (fx- . g$12200$XW@M@)
        (fx+/carry . g$12199$XW@M@)
        (fx+ . g$12198$XW@M@)
        (fx*/carry . g$12197$XW@M@)
        (fx* . g$12196$XW@M@)
        (greatest-fixnum . g$12195$XW@M@)
        (least-fixnum . g$12194$XW@M@)
        (fixnum-width . g$12193$XW@M@)
        (fixnum? . g$12192$XW@M@)
        (bitwise-rotate-bit-field . g$7210$XW@M@)
        (bitwise-reverse-bit-field . g$7211$XW@M@)
        (bitwise-length . g$12191$XW@M@)
        (bitwise-if . g$7204$XW@M@)
        (bitwise-first-bit-set . g$12190$XW@M@)
        (bitwise-copy-bit-field . g$7207$XW@M@)
        (bitwise-copy-bit . g$7205$XW@M@)
        (bitwise-bit-set? . g$12189$XW@M@)
        (bitwise-bit-field . g$12188$XW@M@)
        (bitwise-bit-count . g$12187$XW@M@)
        (bitwise-xor . g$12186$XW@M@)
        (bitwise-ior . g$12185$XW@M@)
        (bitwise-and . g$12184$XW@M@)
        (bitwise-not . g$12183$XW@M@)
        (bitwise-arithmetic-shift-right . g$7209$XW@M@)
        (bitwise-arithmetic-shift-left . g$7208$XW@M@)
        (bitwise-arithmetic-shift . g$12182$XW@M@)
        (zero? . g$12181$XW@M@)
        (vector? . g$12180$XW@M@)
        (vector-set! . g$12179$XW@M@)
        (vector-ref . g$12178$XW@M@)
        (vector-map . g$12177$XW@M@)
        (vector-length . g$12176$XW@M@)
        (vector-for-each . g$12175$XW@M@)
        (vector-fill! . g$12174$XW@M@)
        (vector->list . g$12173$XW@M@)
        (vector . g$12172$XW@M@)
        (values . g$12171$XW@M@)
        (truncate . g$12170$XW@M@)
        (tan . g$12169$XW@M@)
        (symbol? . g$12168$XW@M@)
        (symbol=? . g$12167$XW@M@)
        (symbol->string . g$12166$XW@M@)
        (substring . g$12165$XW@M@)
        (string? . g$12164$XW@M@)
        (string>? . g$12163$XW@M@)
        (string>=? . g$12162$XW@M@)
        (string=? . g$12161$XW@M@)
        (string<? . g$12160$XW@M@)
        (string<=? . g$12159$XW@M@)
        (string-ref . g$12158$XW@M@)
        (string-length . g$12157$XW@M@)
        (string-for-each . g$12156$XW@M@)
        (string-copy . g$12155$XW@M@)
        (string-append . g$12154$XW@M@)
        (string->symbol . g$12153$XW@M@)
        (string->number . g$12152$XW@M@)
        (string->list . g$12151$XW@M@)
        (string . g$12150$XW@M@)
        (sqrt . g$12149$XW@M@)
        (sin . g$12148$XW@M@)
        (round . g$12147$XW@M@)
        (reverse . g$12146$XW@M@)
        (real? . g$12145$XW@M@)
        (real-valued? . g$12144$XW@M@)
        (real-part . g$12143$XW@M@)
        (rationalize . g$6236$XW@M@)
        (rational? . g$12142$XW@M@)
        (rational-valued? . g$12141$XW@M@)
        (procedure? . g$12140$XW@M@)
        (positive? . g$12139$XW@M@)
        (pair? . g$12138$XW@M@)
        (odd? . g$12137$XW@M@)
        (numerator . g$12136$XW@M@)
        (number? . g$12135$XW@M@)
        (number->string . g$12134$XW@M@)
        (null? . g$12133$XW@M@)
        (not . g$12132$XW@M@)
        (negative? . g$12131$XW@M@)
        (nan? . g$12130$XW@M@)
        (min . g$12129$XW@M@)
        (max . g$12128$XW@M@)
        (map . g$12127$XW@M@)
        (make-vector . g$12126$XW@M@)
        (make-string . g$12125$XW@M@)
        (make-rectangular . g$12124$XW@M@)
        (make-polar . g$12123$XW@M@)
        (magnitude . g$12122$XW@M@)
        (log . g$12121$XW@M@)
        (list? . g$12120$XW@M@)
        (list-tail . g$12119$XW@M@)
        (list-ref . g$12118$XW@M@)
        (list->vector . g$12117$XW@M@)
        (list->string . g$12116$XW@M@)
        (list . g$12115$XW@M@)
        (length . g$12114$XW@M@)
        (lcm . g$12113$XW@M@)
        (integer? . g$12112$XW@M@)
        (integer-valued? . g$12111$XW@M@)
        (integer->char . g$12110$XW@M@)
        (infinite? . g$12109$XW@M@)
        (inexact? . g$12108$XW@M@)
        (inexact . g$12107$XW@M@)
        (imag-part . g$12106$XW@M@)
        (gcd . g$12105$XW@M@)
        (for-each . g$12104$XW@M@)
        (floor . g$12103$XW@M@)
        (finite? . g$12102$XW@M@)
        (expt . g$12101$XW@M@)
        (exp . g$12100$XW@M@)
        (exact? . g$12099$XW@M@)
        (exact-integer-sqrt . g$12098$XW@M@)
        (exact . g$12097$XW@M@)
        (even? . g$12096$XW@M@)
        (error . g$12095$XW@M@)
        (eqv? . g$12094$XW@M@)
        (equal? . g$12093$XW@M@)
        (eq? . g$12092$XW@M@)
        (dynamic-wind . g$12091$XW@M@)
        (div0-and-mod0 . g$12090$XW@M@)
        (mod0 . g$12089$XW@M@)
        (div0 . g$12088$XW@M@)
        (div-and-mod . g$12087$XW@M@)
        (mod . g$12086$XW@M@)
        (div . g$12085$XW@M@)
        (denominator . g$12084$XW@M@)
        (cos . g$12083$XW@M@)
        (cons . g$12082$XW@M@)
        (complex? . g$12081$XW@M@)
        (char? . g$12080$XW@M@)
        (char>? . g$12079$XW@M@)
        (char>=? . g$12078$XW@M@)
        (char=? . g$12077$XW@M@)
        (char<? . g$12076$XW@M@)
        (char<=? . g$12075$XW@M@)
        (char->integer . g$12074$XW@M@)
        (ceiling . g$12073$XW@M@)
        (call-with-values . g$12072$XW@M@)
        (call/cc . g$12071$XW@M@)
        (call-with-current-continuation . g$12070$XW@M@)
        (cddddr . g$6235$XW@M@)
        (cdddar . g$6234$XW@M@)
        (cddadr . g$6233$XW@M@)
        (cddaar . g$6232$XW@M@)
        (cdaddr . g$6231$XW@M@)
        (cdadar . g$6230$XW@M@)
        (cdaadr . g$6229$XW@M@)
        (cdaaar . g$6228$XW@M@)
        (cadddr . g$6227$XW@M@)
        (caddar . g$6226$XW@M@)
        (cadadr . g$6225$XW@M@)
        (cadaar . g$6224$XW@M@)
        (caaddr . g$6223$XW@M@)
        (caadar . g$6222$XW@M@)
        (caaadr . g$6221$XW@M@)
        (caaaar . g$6220$XW@M@)
        (cdddr . g$6219$XW@M@)
        (cddar . g$6218$XW@M@)
        (cdadr . g$6217$XW@M@)
        (cdaar . g$6216$XW@M@)
        (caddr . g$6215$XW@M@)
        (cadar . g$6214$XW@M@)
        (caadr . g$6213$XW@M@)
        (caaar . g$6212$XW@M@)
        (cddr . g$6211$XW@M@)
        (cdar . g$6210$XW@M@)
        (cadr . g$6209$XW@M@)
        (caar . g$6208$XW@M@)
        (cdr . g$12069$XW@M@)
        (car . g$12068$XW@M@)
        (boolean? . g$12067$XW@M@)
        (boolean=? . g$12066$XW@M@)
        (atan . g$12065$XW@M@)
        (assertion-violation . g$12064$XW@M@)
        (asin . g$12063$XW@M@)
        (apply . g$12062$XW@M@)
        (append . g$12061$XW@M@)
        (angle . g$12060$XW@M@)
        (acos . g$12059$XW@M@)
        (abs . g$12058$XW@M@)
        (/ . g$12057$XW@M@)
        (* . g$12056$XW@M@)
        (- . g$12055$XW@M@)
        (+ . g$12054$XW@M@)
        (>= . g$12053$XW@M@)
        (> . g$12052$XW@M@)
        (= . g$12051$XW@M@)
        (<= . g$12050$XW@M@)
        (< . g$12049$XW@M@)
        (make-record-printer . g$12048$XW@M@)
        (eqv-hash . g$12047$XW@M@)
        (eq-hash . g$12046$XW@M@)
        (reverse! . g$12045$XW@M@)
        (make-promise . g$12044$XW@M@)
        (load/args . g$11885$XW@M@)
        (printf . g$7646$XW@M@)
        (fprintf . g$7647$XW@M@)
        (format . g$7648$XW@M@)
        (get-arity . g$12043$XW@M@)
        (gc-collect . g$12042$XW@M@)
        (clr-type? . g$12041$XW@M@)
        (get-clr-type . g$12040$XW@M@)
        (get-command-line . g$12039$XW@M@)
        (vector-append . g$12038$XW@M@)
        (vector-filter . g$12037$XW@M@)
        (vector-reverse! . g$12036$XW@M@)
        (vector-contains? . g$12035$XW@M@)
        (vector-index-of . g$12034$XW@M@)
        (vector-copy . g$12033$XW@M@)
        (vector-binary-search . g$12032$XW@M@)
        (get-output-string . g$12031$XW@M@)
        (open-output-string . g$12030$XW@M@)
        (open-input-string . g$12029$XW@M@)
        (string-format . g$12028$XW@M@)
        (trace-printer . g$11882$XW@M@)
        (make-traced-procedure . g$12027$XW@M@)
        (make-traced-macro . g$7667$XW@M@)
        (pmap . g$12026$XW@M@)
        (time-it . g$12025$XW@M@)
        (make-parameter . g$7672$XW@M@)
        (library-locator . g$12024$XW@M@)
        (get-library-paths . g$12023$XW@M@)
        (environment-symbols . g$8929$XW@M@)
        (interaction-environment-symbols . g$8928$XW@M@)
        (library-path . g$8098$XW@M@)
        (library-extensions . g$8099$XW@M@)
        (installed-libraries . g$8119$XW@M@)
        (expand . g$8934$XW@M@)
        (&no-nans . g$12022$XW@M@)
        (&no-infinities . g$12021$XW@M@)
        (&i/o-encoding . g$12020$XW@M@)
        (&i/o-decoding . g$12019$XW@M@)
        (&i/o-port . g$12018$XW@M@)
        (&i/o-file-does-not-exist . g$12017$XW@M@)
        (&i/o-file-already-exists . g$12016$XW@M@)
        (&i/o-file-is-read-only . g$12015$XW@M@)
        (&i/o-file-protection . g$12014$XW@M@)
        (&i/o-filename . g$12013$XW@M@)
        (&i/o-invalid-position . g$12012$XW@M@)
        (&i/o-write . g$12011$XW@M@)
        (&i/o-read . g$12010$XW@M@)
        (&i/o . g$12009$XW@M@)
        (&non-continuable . g$12008$XW@M@)
        (&undefined . g$12007$XW@M@)
        (&syntax . g$12006$XW@M@)
        (&lexical . g$12005$XW@M@)
        (&implementation-restriction . g$12004$XW@M@)
        (&non . g$12003$XW@M@)
        (&who . g$12002$XW@M@)
        (&irritants . g$12001$XW@M@)
        (&assertion . g$12000$XW@M@)
        (&violation . g$11999$XW@M@)
        (&error . g$11998$XW@M@)
        (&serious . g$11997$XW@M@)
        (&warning . g$11996$XW@M@)
        (&message . g$11995$XW@M@)
        (&condition . g$11994$XW@M@)
        (define-condition-type . g$11993$XW@M@)
        (define-enumeration . g$11992$XW@M@)
        (define-record-type . g$11991$XW@M@)
        (parent-rtd . g$11990$XW@M@)
        (nongenerative . g$11989$XW@M@)
        (opaque . g$11988$XW@M@)
        (sealed . g$11987$XW@M@)
        (protocol . g$11986$XW@M@)
        (parent . g$11985$XW@M@)
        (immutable . g$11984$XW@M@)
        (mutable . g$11983$XW@M@)
        (fields . g$11982$XW@M@)
        (error-handling-mode . g$11981$XW@M@)
        (file-options . g$11980$XW@M@)
        (buffer-mode . g$11979$XW@M@)
        (eol-style . g$11978$XW@M@)
        (guard . g$11977$XW@M@)
        (trace-letrec-syntax . g$11976$XW@M@)
        (trace-let-syntax . g$11975$XW@M@)
        (trace-define-syntax . g$11974$XW@M@)
        (trace-define . g$11973$XW@M@)
        (trace-lambda . g$11972$XW@M@)
        (unsyntax-splicing . g$11971$XW@M@)
        (unsyntax . g$11970$XW@M@)
        (unquote-splicing . g$11969$XW@M@)
        (unquote . g$11968$XW@M@)
        (_ . g$11967$XW@M@)
        (else . g$11966$XW@M@)
        (=> . g$11965$XW@M@)
        (... . g$11964$XW@M@)
        (assert . g$11963$XW@M@)
        (endianness . g$11962$XW@M@)
        (delay . g$11961$XW@M@)
        (time . g$11960$XW@M@)
        (or . g$11959$XW@M@)
        (and . g$11958$XW@M@)
        (do . g$11957$XW@M@)
        (cond . g$11956$XW@M@)
        (let* . g$11955$XW@M@)
        (let . g$11954$XW@M@)
        (identifier-syntax . g$11953$XW@M@)
        (with-syntax . g$11952$XW@M@)
        (quasisyntax . g$11951$XW@M@)
        (quasiquote . g$11950$XW@M@)
        (syntax-rules . g$11949$XW@M@)
        (include-into . g$11948$XW@M@)
        (include . g$11947$XW@M@)
        (define-struct . g$11946$XW@M@)
        (let-values . g$11945$XW@M@)
        (let*-values . g$11944$XW@M@)
        (record-constructor-descriptor . g$11943$XW@M@)
        (record-type-descriptor . g$11942$XW@M@)
        (fluid-let-syntax . g$11941$XW@M@)
        (case . g$11940$XW@M@)
        (parameterize . g$11939$XW@M@)
        (unless . g$11938$XW@M@)
        (when . g$11937$XW@M@)
        (if . g$11936$XW@M@)
        (letrec* . g$11935$XW@M@)
        (letrec . g$11934$XW@M@)
        (type-descriptor . g$11933$XW@M@)
        (case-lambda . g$11932$XW@M@)
        (lambda . g$11931$XW@M@)
        (syntax . g$11930$XW@M@)
        (syntax-case . g$11929$XW@M@)
        (quote . g$11928$XW@M@)
        (foreign-call . g$11927$XW@M@)
        (letrec-syntax . g$11926$XW@M@)
        (let-syntax . g$11925$XW@M@)
        (set! . g$11924$XW@M@)
        (import . g$11923$XW@M@)
        (library . g$11922$XW@M@)
        (begin . g$11921$XW@M@)
        (module . g$11920$XW@M@)
        (define-syntax . g$11919$XW@M@)
        (define . g$11918$XW@M@))
      '((g$8827$XW@M@ core-prim . ellipsis-map)
        (g$12561$XW@M@ core-prim . &no-nans-rcd)
        (g$12560$XW@M@ core-prim . &no-nans-rtd)
        (g$12559$XW@M@ core-prim . &no-infinities-rcd)
        (g$12558$XW@M@ core-prim . &no-infinities-rtd)
        (g$12557$XW@M@ core-prim . &i/o-encoding-rcd)
        (g$12556$XW@M@ core-prim . &i/o-encoding-rtd)
        (g$12555$XW@M@ core-prim . &i/o-decoding-rcd)
        (g$12554$XW@M@ core-prim . &i/o-decoding-rtd)
        (g$12553$XW@M@ core-prim . &i/o-port-rcd)
        (g$12552$XW@M@ core-prim . &i/o-port-rtd)
        (g$12551$XW@M@ core-prim . &i/o-file-does-not-exist-rcd)
        (g$12550$XW@M@ core-prim . &i/o-file-does-not-exist-rtd)
        (g$12549$XW@M@ core-prim . &i/o-file-already-exists-rcd)
        (g$12548$XW@M@ core-prim . &i/o-file-already-exists-rtd)
        (g$12547$XW@M@ core-prim . &i/o-file-is-read-only-rcd)
        (g$12546$XW@M@ core-prim . &i/o-file-is-read-only-rtd)
        (g$12545$XW@M@ core-prim . &i/o-file-protection-rcd)
        (g$12544$XW@M@ core-prim . &i/o-file-protection-rtd)
        (g$12543$XW@M@ core-prim . &i/o-filename-rcd)
        (g$12542$XW@M@ core-prim . &i/o-filename-rtd)
        (g$12541$XW@M@ core-prim . &i/o-invalid-position-rcd)
        (g$12540$XW@M@ core-prim . &i/o-invalid-position-rtd)
        (g$12539$XW@M@ core-prim . &i/o-write-rcd)
        (g$12538$XW@M@ core-prim . &i/o-write-rtd)
        (g$12537$XW@M@ core-prim . &i/o-read-rcd)
        (g$12536$XW@M@ core-prim . &i/o-read-rtd)
        (g$12535$XW@M@ core-prim . &i/o-rcd)
        (g$12534$XW@M@ core-prim . &i/o-rtd)
        (g$12533$XW@M@ core-prim . &undefined-rcd)
        (g$12532$XW@M@ core-prim . &undefined-rtd)
        (g$12531$XW@M@ core-prim . &syntax-rcd)
        (g$12530$XW@M@ core-prim . &syntax-rtd)
        (g$12529$XW@M@ core-prim . &lexical-rcd)
        (g$12528$XW@M@ core-prim . &lexical-rtd)
        (g$12527$XW@M@ core-prim . &implementation-restriction-rcd)
        (g$12526$XW@M@ core-prim . &implementation-restriction-rtd)
        (g$12525$XW@M@ core-prim . &non-continuable-rcd)
        (g$12524$XW@M@ core-prim . &non-continuable-rtd)
        (g$12523$XW@M@ core-prim . &who-rcd)
        (g$12522$XW@M@ core-prim . &who-rtd)
        (g$12521$XW@M@ core-prim . &irritants-rcd)
        (g$12520$XW@M@ core-prim . &irritants-rtd)
        (g$12519$XW@M@ core-prim . &assertion-rcd)
        (g$12518$XW@M@ core-prim . &assertion-rtd)
        (g$12517$XW@M@ core-prim . &violation-rcd)
        (g$12516$XW@M@ core-prim . &violation-rtd)
        (g$12515$XW@M@ core-prim . &error-rcd)
        (g$12514$XW@M@ core-prim . &error-rtd)
        (g$12513$XW@M@ core-prim . &serious-rcd)
        (g$12512$XW@M@ core-prim . &serious-rtd)
        (g$12511$XW@M@ core-prim . &warning-rcd)
        (g$12510$XW@M@ core-prim . &warning-rtd)
        (g$12509$XW@M@ core-prim . &message-rcd)
        (g$12508$XW@M@ core-prim . &message-rtd)
        (g$12507$XW@M@ core-prim . &condition-rcd)
        (g$12506$XW@M@ core-prim . &condition-rtd)
        (g$12505$XW@M@ core-prim . library-letrec*)
        (g$12504$XW@M@ core-prim . annotation-stripped)
        (g$12503$XW@M@ core-prim . annotation-source)
        (g$12502$XW@M@ core-prim . annotation-expression)
        (g$12501$XW@M@ core-prim . annotation?)
        (g$12500$XW@M@ core-prim . read-annotated)
        (g$12499$XW@M@ core-prim . tanh)
        (g$12498$XW@M@ core-prim . cosh)
        (g$12497$XW@M@ core-prim . sinh)
        (g$12496$XW@M@ core-prim . make-guid)
        (g$12495$XW@M@ core-prim . unspecified?)
        (g$12494$XW@M@ core-prim . make-trace)
        (g$12493$XW@M@ core-prim . make-list)
        (g$12492$XW@M@ core-prim . last-pair)
        (g$12491$XW@M@ core-prim . load-r5rs)
        (g$12490$XW@M@ core-prim . license)
        (g$12489$XW@M@ core-prim . stacktrace)
        (g$11887$XW@M@ core-prim . ironscheme-build)
        (g$12488$XW@M@ core-prim . define-clr-class-internal)
        (g$12487$XW@M@ core-prim . clr-field-set!-internal)
        (g$12486$XW@M@ core-prim . clr-field-get-internal)
        (g$12485$XW@M@ core-prim . clr-cast-internal)
        (g$12484$XW@M@ core-prim . clr-call-internal)
        (g$12483$XW@M@ core-prim . clr-new-internal)
        (g$12482$XW@M@ core-prim . clr-new-array-internal)
        (g$12481$XW@M@ core-prim . clr-is-internal)
        (g$12480$XW@M@ core-prim . clr-reference-internal)
        (g$12479$XW@M@ core-prim . clr-using-internal)
        (g$12478$XW@M@ core-prim . clr-clear-usings-internal)
        (g$8946$XW@M@ core-prim . syntax-error)
        (g$8822$XW@M@ core-prim . syntax-dispatch)
        (g$12477$XW@M@ core-prim . compile-core)
        (g$12476$XW@M@ core-prim . eval-core)
        (g$12475$XW@M@ core-prim . set-symbol-value!)
        (g$12474$XW@M@ core-prim . symbol-value)
        (g$12473$XW@M@ core-prim . ungensym)
        (g$12472$XW@M@ core-prim . gensym)
        (g$12471$XW@M@ core-prim . void)
        (g$12470$XW@M@ core-prim . load-serialized-library)
        (g$12469$XW@M@ core-prim . serialize-library)
        (g$11889$XW@M@ core-prim . compile-system-libraries)
        (g$11891$XW@M@ core-prim . compile->closure)
        (g$11890$XW@M@ core-prim . compile)
        (g$11886$XW@M@ core-prim . load)
        (g$8955$XW@M@ core-prim . interaction-environment)
        (g$12468$XW@M@ core-prim . char-ready?)
        (g$12467$XW@M@ core-prim . string-upcase)
        (g$12466$XW@M@ core-prim . string-titlecase)
        (g$12465$XW@M@ core-prim . string-normalize-nfkd)
        (g$12464$XW@M@ core-prim . string-normalize-nfkc)
        (g$12463$XW@M@ core-prim . string-normalize-nfd)
        (g$12462$XW@M@ core-prim . string-normalize-nfc)
        (g$12461$XW@M@ core-prim . string-foldcase)
        (g$12460$XW@M@ core-prim . string-downcase)
        (g$12459$XW@M@ core-prim . string-ci>?)
        (g$12458$XW@M@ core-prim . string-ci>=?)
        (g$12457$XW@M@ core-prim . string-ci=?)
        (g$12456$XW@M@ core-prim . string-ci<?)
        (g$12455$XW@M@ core-prim . string-ci<=?)
        (g$12454$XW@M@ core-prim . char-whitespace?)
        (g$12453$XW@M@ core-prim . char-upper-case?)
        (g$12452$XW@M@ core-prim . char-title-case?)
        (g$12451$XW@M@ core-prim . char-numeric?)
        (g$12450$XW@M@ core-prim . char-lower-case?)
        (g$12449$XW@M@ core-prim . char-general-category)
        (g$12448$XW@M@ core-prim . char-upcase)
        (g$12447$XW@M@ core-prim . char-titlecase)
        (g$12446$XW@M@ core-prim . char-foldcase)
        (g$12445$XW@M@ core-prim . char-downcase)
        (g$12444$XW@M@ core-prim . char-ci>?)
        (g$12443$XW@M@ core-prim . char-ci>=?)
        (g$12442$XW@M@ core-prim . char-ci=?)
        (g$12441$XW@M@ core-prim . char-ci<?)
        (g$12440$XW@M@ core-prim . char-ci<=?)
        (g$12439$XW@M@ core-prim . char-alphabetic?)
        (g$8559$XW@M@ core-prim . variable-transformer-procedure)
        (g$8558$XW@M@ core-prim . variable-transformer?)
        (g$8557$XW@M@ core-prim . make-variable-transformer)
        (g$8950$XW@M@ core-prim . identifier?)
        (g$8942$XW@M@ core-prim . generate-temporaries)
        (g$8943$XW@M@ core-prim . free-identifier=?)
        (g$8952$XW@M@ core-prim . syntax->datum)
        (g$8951$XW@M@ core-prim . datum->syntax)
        (g$8944$XW@M@ core-prim . bound-identifier=?)
        (g$12438$XW@M@ core-prim . record-type-descriptor?)
        (g$12437$XW@M@ core-prim . record-predicate)
        (g$12436$XW@M@ core-prim . record-mutator)
        (g$12435$XW@M@ core-prim . record-constructor)
        (g$12434$XW@M@ core-prim . record-accessor)
        (g$12433$XW@M@ core-prim . make-record-type-descriptor)
        (g$12432$XW@M@ core-prim . make-record-constructor-descriptor)
        (g$12431$XW@M@ core-prim . record?)
        (g$12430$XW@M@ core-prim . record-type-uid)
        (g$12429$XW@M@ core-prim . record-type-sealed?)
        (g$12428$XW@M@ core-prim . record-type-parent)
        (g$12427$XW@M@ core-prim . record-type-opaque?)
        (g$12426$XW@M@ core-prim . record-type-name)
        (g$12425$XW@M@ core-prim . record-type-generative?)
        (g$12424$XW@M@ core-prim . record-type-field-names)
        (g$12423$XW@M@ core-prim . record-rtd)
        (g$12422$XW@M@ core-prim . record-field-mutable?)
        (g$6619$XW@M@ core-prim . delete-file)
        (g$6618$XW@M@ core-prim . file-exists?)
        (g$12421$XW@M@ core-prim . vector-sort!)
        (g$12420$XW@M@ core-prim . vector-sort)
        (g$7125$XW@M@ core-prim . list-sort)
        (g$12419$XW@M@ core-prim . symbol-hash)
        (g$12418$XW@M@ core-prim . string-ci-hash)
        (g$12417$XW@M@ core-prim . string-hash)
        (g$12416$XW@M@ core-prim . equal-hash)
        (g$12415$XW@M@ core-prim . hashtable-equivalence-function)
        (g$12414$XW@M@ core-prim . make-hashtable)
        (g$12413$XW@M@ core-prim . hashtable-hash-function)
        (g$6586$XW@M@ core-prim . make-eqv-hashtable)
        (g$6585$XW@M@ core-prim . make-eq-hashtable)
        (g$12412$XW@M@ core-prim . hashtable?)
        (g$6592$XW@M@ core-prim . hashtable-update!)
        (g$6587$XW@M@ core-prim . hashtable-size)
        (g$6589$XW@M@ core-prim . hashtable-set!)
        (g$6588$XW@M@ core-prim . hashtable-ref)
        (g$12411$XW@M@ core-prim . hashtable-mutable?)
        (g$12410$XW@M@ core-prim . hashtable-keys)
        (g$12409$XW@M@ core-prim . hashtable-entries)
        (g$6590$XW@M@ core-prim . hashtable-delete!)
        (g$12408$XW@M@ core-prim . hashtable-copy)
        (g$6591$XW@M@ core-prim . hashtable-contains?)
        (g$6593$XW@M@ core-prim . hashtable-clear!)
        (g$12407$XW@M@ core-prim . call-with-output-file)
        (g$12406$XW@M@ core-prim . call-with-input-file)
        (g$12405$XW@M@ core-prim . write-char)
        (g$12404$XW@M@ core-prim . write)
        (g$12403$XW@M@ core-prim . with-output-to-file)
        (g$12402$XW@M@ core-prim . with-input-from-file)
        (g$12401$XW@M@ core-prim . read-char)
        (g$12400$XW@M@ core-prim . read)
        (g$12399$XW@M@ core-prim . peek-char)
        (g$12398$XW@M@ core-prim . open-output-file)
        (g$12397$XW@M@ core-prim . open-input-file)
        (g$12396$XW@M@ core-prim . newline)
        (g$12395$XW@M@ core-prim . display)
        (g$12394$XW@M@ core-prim . close-output-port)
        (g$12393$XW@M@ core-prim . close-input-port)
        (g$12392$XW@M@ core-prim . eof-object?)
        (g$12391$XW@M@ core-prim . eof-object)
        (g$12390$XW@M@ core-prim . current-error-port)
        (g$12389$XW@M@ core-prim . current-output-port)
        (g$12388$XW@M@ core-prim . current-input-port)
        (g$12387$XW@M@ core-prim . output-port?)
        (g$12386$XW@M@ core-prim . input-port?)
        (g$12385$XW@M@ core-prim . utf-8-codec)
        (g$12384$XW@M@ core-prim . utf-16-codec)
        (g$12383$XW@M@ core-prim . transcoder-error-handling-mode)
        (g$12382$XW@M@ core-prim . transcoder-eol-style)
        (g$12381$XW@M@ core-prim . transcoder-codec)
        (g$12380$XW@M@ core-prim . transcoded-port)
        (g$12379$XW@M@ core-prim . textual-port?)
        (g$12378$XW@M@ core-prim . string->bytevector)
        (g$12377$XW@M@ core-prim . standard-output-port)
        (g$12376$XW@M@ core-prim . standard-input-port)
        (g$12375$XW@M@ core-prim . standard-error-port)
        (g$12374$XW@M@ core-prim . set-port-position!)
        (g$12373$XW@M@ core-prim . put-u8)
        (g$12372$XW@M@ core-prim . put-string)
        (g$12371$XW@M@ core-prim . put-datum)
        (g$12370$XW@M@ core-prim . put-char)
        (g$12369$XW@M@ core-prim . put-bytevector)
        (g$7517$XW@M@ core-prim . port?)
        (g$12368$XW@M@ core-prim . port-transcoder)
        (g$12367$XW@M@ core-prim . port-position)
        (g$12366$XW@M@ core-prim . port-has-set-port-position!?)
        (g$12365$XW@M@ core-prim . port-has-port-position?)
        (g$12364$XW@M@ core-prim . port-eof?)
        (g$12363$XW@M@ core-prim . output-port-buffer-mode)
        (g$7516$XW@M@ core-prim . open-string-output-port)
        (g$12362$XW@M@ core-prim . open-string-input-port)
        (g$12361$XW@M@ core-prim . open-file-output-port)
        (g$12360$XW@M@ core-prim . open-file-input/output-port)
        (g$12359$XW@M@ core-prim . open-file-input-port)
        (g$12358$XW@M@ core-prim . open-bytevector-output-port)
        (g$12357$XW@M@ core-prim . open-bytevector-input-port)
        (g$12356$XW@M@ core-prim . native-transcoder)
        (g$12355$XW@M@ core-prim . native-eol-style)
        (g$12354$XW@M@ core-prim . make-transcoder)
        (g$12353$XW@M@ core-prim . latin-1-codec)
        (g$7373$XW@M@ core-prim . make-i/o-write-error)
        (g$7359$XW@M@ core-prim . make-i/o-read-error)
        (g$7478$XW@M@ core-prim . make-i/o-port-error)
        (g$7388$XW@M@ core-prim . make-i/o-invalid-position-error)
        (g$7405$XW@M@ core-prim . make-i/o-filename-error)
        (g$7421$XW@M@ core-prim . make-i/o-file-protection-error)
        (g$7435$XW@M@ core-prim . make-i/o-file-is-read-only-error)
        (g$7463$XW@M@ core-prim . make-i/o-file-does-not-exist-error)
        (g$7449$XW@M@ core-prim . make-i/o-file-already-exists-error)
        (g$7345$XW@M@ core-prim . make-i/o-error)
        (g$7509$XW@M@ core-prim . make-i/o-encoding-error)
        (g$7494$XW@M@ core-prim . make-i/o-decoding-error)
        (g$12352$XW@M@ core-prim . make-custom-textual-output-port)
        (g$12351$XW@M@ core-prim . make-custom-textual-input/output-port)
        (g$12350$XW@M@ core-prim . make-custom-textual-input-port)
        (g$12349$XW@M@ core-prim . make-custom-binary-output-port)
        (g$12348$XW@M@ core-prim . make-custom-binary-input/output-port)
        (g$12347$XW@M@ core-prim . make-custom-binary-input-port)
        (g$12346$XW@M@ core-prim . make-bytevector)
        (g$12345$XW@M@ core-prim . lookahead-u8)
        (g$12344$XW@M@ core-prim . lookahead-char)
        (g$7374$XW@M@ core-prim . i/o-write-error?)
        (g$7360$XW@M@ core-prim . i/o-read-error?)
        (g$7480$XW@M@ core-prim . i/o-port-error?)
        (g$7390$XW@M@ core-prim . i/o-invalid-position-error?)
        (g$7391$XW@M@ core-prim . i/o-error-position)
        (g$7407$XW@M@ core-prim . i/o-filename-error?)
        (g$7422$XW@M@ core-prim . i/o-file-protection-error?)
        (g$7436$XW@M@ core-prim . i/o-file-is-read-only-error?)
        (g$7464$XW@M@ core-prim . i/o-file-does-not-exist-error?)
        (g$7450$XW@M@ core-prim . i/o-file-already-exists-error?)
        (g$7346$XW@M@ core-prim . i/o-error?)
        (g$7481$XW@M@ core-prim . i/o-error-port)
        (g$7408$XW@M@ core-prim . i/o-error-filename)
        (g$7511$XW@M@ core-prim . i/o-encoding-error?)
        (g$7512$XW@M@ core-prim . i/o-encoding-error-char)
        (g$7495$XW@M@ core-prim . i/o-decoding-error?)
        (g$12343$XW@M@ core-prim . get-u8)
        (g$12342$XW@M@ core-prim . get-string-n!)
        (g$12341$XW@M@ core-prim . get-string-n)
        (g$12340$XW@M@ core-prim . get-string-all)
        (g$12339$XW@M@ core-prim . get-line)
        (g$12338$XW@M@ core-prim . get-datum)
        (g$12337$XW@M@ core-prim . get-char)
        (g$12336$XW@M@ core-prim . get-bytevector-some)
        (g$12335$XW@M@ core-prim . get-bytevector-n!)
        (g$12334$XW@M@ core-prim . get-bytevector-n)
        (g$12333$XW@M@ core-prim . get-bytevector-all)
        (g$12332$XW@M@ core-prim . flush-output-port)
        (g$12331$XW@M@ core-prim . close-port)
        (g$12330$XW@M@ core-prim . call-with-string-output-port)
        (g$12329$XW@M@ core-prim . call-with-port)
        (g$12328$XW@M@ core-prim . call-with-bytevector-output-port)
        (g$12327$XW@M@ core-prim . bytevector->string)
        (g$12326$XW@M@ core-prim . buffer-mode?)
        (g$12325$XW@M@ core-prim . binary-port?)
        (g$8933$XW@M@ core-prim . scheme-report-environment)
        (g$7112$XW@M@ core-prim . quotient)
        (g$8932$XW@M@ core-prim . null-environment)
        (g$7113$XW@M@ core-prim . remainder)
        (g$7114$XW@M@ core-prim . modulo)
        (g$12324$XW@M@ core-prim . inexact->exact)
        (g$12323$XW@M@ core-prim . force)
        (g$12322$XW@M@ core-prim . exact->inexact)
        (g$12321$XW@M@ core-prim . exit)
        (g$11883$XW@M@ core-prim . command-line)
        (g$12320$XW@M@ core-prim . string-fill!)
        (g$12319$XW@M@ core-prim . string-set!)
        (g$12318$XW@M@ core-prim . set-cdr!)
        (g$12317$XW@M@ core-prim . set-car!)
        (g$6699$XW@M@ core-prim . remove)
        (g$6700$XW@M@ core-prim . remv)
        (g$6685$XW@M@ core-prim . remp)
        (g$6701$XW@M@ core-prim . remq)
        (g$6684$XW@M@ core-prim . partition)
        (g$12316$XW@M@ core-prim . memv)
        (g$12315$XW@M@ core-prim . memq)
        (g$6691$XW@M@ core-prim . memp)
        (g$6690$XW@M@ core-prim . member)
        (g$6695$XW@M@ core-prim . exists)
        (g$6694$XW@M@ core-prim . for-all)
        (g$6698$XW@M@ core-prim . fold-right)
        (g$6697$XW@M@ core-prim . fold-left)
        (g$6683$XW@M@ core-prim . find)
        (g$6686$XW@M@ core-prim . filter)
        (g$6696$XW@M@ core-prim . cons*)
        (g$6687$XW@M@ core-prim . assv)
        (g$12314$XW@M@ core-prim . assq)
        (g$6689$XW@M@ core-prim . assp)
        (g$6688$XW@M@ core-prim . assoc)
        (g$12313$XW@M@ core-prim . with-exception-handler)
        (g$12312$XW@M@ core-prim . raise-continuable)
        (g$12311$XW@M@ core-prim . raise)
        (g$8935$XW@M@ core-prim . eval)
        (g$8931$XW@M@ core-prim . environment)
        (g$7559$XW@M@ core-prim . make-enumeration)
        (g$7566$XW@M@ core-prim . enum-set=?)
        (g$7560$XW@M@ core-prim . enum-set-universe)
        (g$7567$XW@M@ core-prim . enum-set-union)
        (g$7565$XW@M@ core-prim . enum-set-subset?)
        (g$7571$XW@M@ core-prim . enum-set-projection)
        (g$7564$XW@M@ core-prim . enum-set-member?)
        (g$7568$XW@M@ core-prim . enum-set-intersection)
        (g$7561$XW@M@ core-prim . enum-set-indexer)
        (g$7569$XW@M@ core-prim . enum-set-difference)
        (g$7562$XW@M@ core-prim . enum-set-constructor)
        (g$7570$XW@M@ core-prim . enum-set-complement)
        (g$7563$XW@M@ core-prim . enum-set->list)
        (g$7023$XW@M@ core-prim . who-condition?)
        (g$6934$XW@M@ core-prim . warning?)
        (g$6976$XW@M@ core-prim . violation?)
        (g$7100$XW@M@ core-prim . undefined-violation?)
        (g$7084$XW@M@ core-prim . syntax-violation?)
        (g$7086$XW@M@ core-prim . syntax-violation-subform)
        (g$7085$XW@M@ core-prim . syntax-violation-form)
        (g$8949$XW@M@ core-prim . syntax-violation)
        (g$12310$XW@M@ core-prim . simple-conditions)
        (g$6948$XW@M@ core-prim . serious-condition?)
        (g$7038$XW@M@ core-prim . non-continuable-violation?)
        (g$6919$XW@M@ core-prim . message-condition?)
        (g$7021$XW@M@ core-prim . make-who-condition)
        (g$6933$XW@M@ core-prim . make-warning)
        (g$6975$XW@M@ core-prim . make-violation)
        (g$7099$XW@M@ core-prim . make-undefined-violation)
        (g$7081$XW@M@ core-prim . make-syntax-violation)
        (g$6947$XW@M@ core-prim . make-serious-condition)
        (g$7037$XW@M@ core-prim . make-non-continuable-violation)
        (g$6917$XW@M@ core-prim . make-message-condition)
        (g$7065$XW@M@ core-prim . make-lexical-violation)
        (g$7004$XW@M@ core-prim . make-irritants-condition)
        (g$7051$XW@M@ core-prim . make-implementation-restriction-violation)
        (g$6961$XW@M@ core-prim . make-error)
        (g$6989$XW@M@ core-prim . make-assertion-violation)
        (g$7066$XW@M@ core-prim . lexical-violation?)
        (g$7006$XW@M@ core-prim . irritants-condition?)
        (g$7052$XW@M@ core-prim . implementation-restriction-violation?)
        (g$6962$XW@M@ core-prim . error?)
        (g$7024$XW@M@ core-prim . condition-who)
        (g$12309$XW@M@ core-prim . condition-predicate)
        (g$6920$XW@M@ core-prim . condition-message)
        (g$7007$XW@M@ core-prim . condition-irritants)
        (g$12308$XW@M@ core-prim . condition-accessor)
        (g$12307$XW@M@ core-prim . condition)
        (g$6990$XW@M@ core-prim . assertion-violation?)
        (g$12306$XW@M@ core-prim . condition?)
        (g$12305$XW@M@ core-prim . utf32->string)
        (g$12304$XW@M@ core-prim . utf16->string)
        (g$12303$XW@M@ core-prim . utf8->string)
        (g$12302$XW@M@ core-prim . uint-list->bytevector)
        (g$12301$XW@M@ core-prim . u8-list->bytevector)
        (g$12300$XW@M@ core-prim . string->utf8)
        (g$12299$XW@M@ core-prim . string->utf32)
        (g$12298$XW@M@ core-prim . string->utf16)
        (g$12297$XW@M@ core-prim . sint-list->bytevector)
        (g$6775$XW@M@ core-prim . native-endianness)
        (g$12296$XW@M@ core-prim . bytevector?)
        (g$12295$XW@M@ core-prim . bytevector=?)
        (g$12294$XW@M@ core-prim . bytevector-uint-set!)
        (g$12293$XW@M@ core-prim . bytevector-uint-ref)
        (g$12292$XW@M@ core-prim . bytevector-u8-set!)
        (g$12291$XW@M@ core-prim . bytevector-u8-ref)
        (g$6796$XW@M@ core-prim . bytevector-u64-set!)
        (g$6792$XW@M@ core-prim . bytevector-u64-ref)
        (g$6798$XW@M@ core-prim . bytevector-u64-native-set!)
        (g$6794$XW@M@ core-prim . bytevector-u64-native-ref)
        (g$6788$XW@M@ core-prim . bytevector-u32-set!)
        (g$6784$XW@M@ core-prim . bytevector-u32-ref)
        (g$6790$XW@M@ core-prim . bytevector-u32-native-set!)
        (g$6786$XW@M@ core-prim . bytevector-u32-native-ref)
        (g$6780$XW@M@ core-prim . bytevector-u16-set!)
        (g$6776$XW@M@ core-prim . bytevector-u16-ref)
        (g$6782$XW@M@ core-prim . bytevector-u16-native-set!)
        (g$6778$XW@M@ core-prim . bytevector-u16-native-ref)
        (g$12290$XW@M@ core-prim . bytevector-sint-set!)
        (g$12289$XW@M@ core-prim . bytevector-sint-ref)
        (g$12288$XW@M@ core-prim . bytevector-s8-set!)
        (g$12287$XW@M@ core-prim . bytevector-s8-ref)
        (g$6797$XW@M@ core-prim . bytevector-s64-set!)
        (g$6793$XW@M@ core-prim . bytevector-s64-ref)
        (g$6799$XW@M@ core-prim . bytevector-s64-native-set!)
        (g$6795$XW@M@ core-prim . bytevector-s64-native-ref)
        (g$6789$XW@M@ core-prim . bytevector-s32-set!)
        (g$6785$XW@M@ core-prim . bytevector-s32-ref)
        (g$6791$XW@M@ core-prim . bytevector-s32-native-set!)
        (g$6787$XW@M@ core-prim . bytevector-s32-native-ref)
        (g$6781$XW@M@ core-prim . bytevector-s16-set!)
        (g$6777$XW@M@ core-prim . bytevector-s16-ref)
        (g$6783$XW@M@ core-prim . bytevector-s16-native-set!)
        (g$6779$XW@M@ core-prim . bytevector-s16-native-ref)
        (g$12286$XW@M@ core-prim . bytevector-length)
        (g$12285$XW@M@ core-prim . bytevector-ieee-single-set!)
        (g$12284$XW@M@ core-prim . bytevector-ieee-single-ref)
        (g$6802$XW@M@ core-prim . bytevector-ieee-single-native-set!)
        (g$6800$XW@M@ core-prim . bytevector-ieee-single-native-ref)
        (g$12283$XW@M@ core-prim . bytevector-ieee-double-set!)
        (g$12282$XW@M@ core-prim . bytevector-ieee-double-ref)
        (g$6803$XW@M@ core-prim . bytevector-ieee-double-native-set!)
        (g$6801$XW@M@ core-prim . bytevector-ieee-double-native-ref)
        (g$12281$XW@M@ core-prim . bytevector-fill!)
        (g$12280$XW@M@ core-prim . bytevector-copy!)
        (g$12279$XW@M@ core-prim . bytevector-copy)
        (g$12278$XW@M@ core-prim . bytevector->uint-list)
        (g$12277$XW@M@ core-prim . bytevector->u8-list)
        (g$12276$XW@M@ core-prim . bytevector->sint-list)
        (g$7331$XW@M@ core-prim . no-nans-violation?)
        (g$7317$XW@M@ core-prim . no-infinities-violation?)
        (g$7330$XW@M@ core-prim . make-no-nans-violation)
        (g$7316$XW@M@ core-prim . make-no-infinities-violation)
        (g$12275$XW@M@ core-prim . real->flonum)
        (g$12274$XW@M@ core-prim . flzero?)
        (g$12273$XW@M@ core-prim . fltruncate)
        (g$12272$XW@M@ core-prim . fltan)
        (g$12271$XW@M@ core-prim . flsqrt)
        (g$12270$XW@M@ core-prim . flsin)
        (g$12269$XW@M@ core-prim . flround)
        (g$12268$XW@M@ core-prim . flpositive?)
        (g$12267$XW@M@ core-prim . flonum?)
        (g$12266$XW@M@ core-prim . flodd?)
        (g$12265$XW@M@ core-prim . flnumerator)
        (g$12264$XW@M@ core-prim . flnegative?)
        (g$12263$XW@M@ core-prim . flnan?)
        (g$12262$XW@M@ core-prim . flmod0)
        (g$12261$XW@M@ core-prim . flmod)
        (g$12260$XW@M@ core-prim . flmin)
        (g$12259$XW@M@ core-prim . flmax)
        (g$12258$XW@M@ core-prim . fllog)
        (g$12257$XW@M@ core-prim . flinteger?)
        (g$12256$XW@M@ core-prim . flinfinite?)
        (g$12255$XW@M@ core-prim . flfloor)
        (g$12254$XW@M@ core-prim . flfinite?)
        (g$12253$XW@M@ core-prim . flexpt)
        (g$12252$XW@M@ core-prim . flexp)
        (g$12251$XW@M@ core-prim . fleven?)
        (g$12250$XW@M@ core-prim . fldiv0-and-mod0)
        (g$12249$XW@M@ core-prim . fldiv0)
        (g$12248$XW@M@ core-prim . fldiv-and-mod)
        (g$12247$XW@M@ core-prim . fldiv)
        (g$12246$XW@M@ core-prim . fldenominator)
        (g$12245$XW@M@ core-prim . flcos)
        (g$12244$XW@M@ core-prim . flceiling)
        (g$12243$XW@M@ core-prim . flatan)
        (g$12242$XW@M@ core-prim . flasin)
        (g$12241$XW@M@ core-prim . flacos)
        (g$12240$XW@M@ core-prim . flabs)
        (g$12239$XW@M@ core-prim . fl>?)
        (g$12238$XW@M@ core-prim . fl>=?)
        (g$12237$XW@M@ core-prim . fl=?)
        (g$12236$XW@M@ core-prim . fl<?)
        (g$12235$XW@M@ core-prim . fl<=?)
        (g$12234$XW@M@ core-prim . fl/)
        (g$12233$XW@M@ core-prim . fl-)
        (g$12232$XW@M@ core-prim . fl+)
        (g$12231$XW@M@ core-prim . fl*)
        (g$12230$XW@M@ core-prim . fixnum->flonum)
        (g$12229$XW@M@ core-prim . fxzero?)
        (g$12228$XW@M@ core-prim . fxxor)
        (g$7262$XW@M@ core-prim . fxrotate-bit-field)
        (g$12227$XW@M@ core-prim . fxreverse-bit-field)
        (g$12226$XW@M@ core-prim . fxpositive?)
        (g$12225$XW@M@ core-prim . fxodd?)
        (g$12224$XW@M@ core-prim . fxnot)
        (g$12223$XW@M@ core-prim . fxnegative?)
        (g$12222$XW@M@ core-prim . fxmod0)
        (g$12221$XW@M@ core-prim . fxmod)
        (g$12220$XW@M@ core-prim . fxmin)
        (g$12219$XW@M@ core-prim . fxmax)
        (g$12218$XW@M@ core-prim . fxlength)
        (g$12217$XW@M@ core-prim . fxior)
        (g$7256$XW@M@ core-prim . fxif)
        (g$12216$XW@M@ core-prim . fxfirst-bit-set)
        (g$12215$XW@M@ core-prim . fxeven?)
        (g$12214$XW@M@ core-prim . fxdiv0-and-mod0)
        (g$12213$XW@M@ core-prim . fxdiv0)
        (g$12212$XW@M@ core-prim . fxdiv-and-mod)
        (g$12211$XW@M@ core-prim . fxdiv)
        (g$7259$XW@M@ core-prim . fxcopy-bit-field)
        (g$7257$XW@M@ core-prim . fxcopy-bit)
        (g$12210$XW@M@ core-prim . fxbit-set?)
        (g$7258$XW@M@ core-prim . fxbit-field)
        (g$12209$XW@M@ core-prim . fxbit-count)
        (g$7261$XW@M@ core-prim . fxarithmetic-shift-right)
        (g$7260$XW@M@ core-prim . fxarithmetic-shift-left)
        (g$12208$XW@M@ core-prim . fxarithmetic-shift)
        (g$12207$XW@M@ core-prim . fxand)
        (g$12206$XW@M@ core-prim . fx>?)
        (g$12205$XW@M@ core-prim . fx>=?)
        (g$12204$XW@M@ core-prim . fx=?)
        (g$12203$XW@M@ core-prim . fx<?)
        (g$12202$XW@M@ core-prim . fx<=?)
        (g$12201$XW@M@ core-prim . fx-/carry)
        (g$12200$XW@M@ core-prim . fx-)
        (g$12199$XW@M@ core-prim . fx+/carry)
        (g$12198$XW@M@ core-prim . fx+)
        (g$12197$XW@M@ core-prim . fx*/carry)
        (g$12196$XW@M@ core-prim . fx*)
        (g$12195$XW@M@ core-prim . greatest-fixnum)
        (g$12194$XW@M@ core-prim . least-fixnum)
        (g$12193$XW@M@ core-prim . fixnum-width)
        (g$12192$XW@M@ core-prim . fixnum?)
        (g$7210$XW@M@ core-prim . bitwise-rotate-bit-field)
        (g$7211$XW@M@ core-prim . bitwise-reverse-bit-field)
        (g$12191$XW@M@ core-prim . bitwise-length)
        (g$7204$XW@M@ core-prim . bitwise-if)
        (g$12190$XW@M@ core-prim . bitwise-first-bit-set)
        (g$7207$XW@M@ core-prim . bitwise-copy-bit-field)
        (g$7205$XW@M@ core-prim . bitwise-copy-bit)
        (g$12189$XW@M@ core-prim . bitwise-bit-set?)
        (g$12188$XW@M@ core-prim . bitwise-bit-field)
        (g$12187$XW@M@ core-prim . bitwise-bit-count)
        (g$12186$XW@M@ core-prim . bitwise-xor)
        (g$12185$XW@M@ core-prim . bitwise-ior)
        (g$12184$XW@M@ core-prim . bitwise-and)
        (g$12183$XW@M@ core-prim . bitwise-not)
        (g$7209$XW@M@ core-prim . bitwise-arithmetic-shift-right)
        (g$7208$XW@M@ core-prim . bitwise-arithmetic-shift-left)
        (g$12182$XW@M@ core-prim . bitwise-arithmetic-shift)
        (g$12181$XW@M@ core-prim . zero?)
        (g$12180$XW@M@ core-prim . vector?)
        (g$12179$XW@M@ core-prim . vector-set!)
        (g$12178$XW@M@ core-prim . vector-ref)
        (g$12177$XW@M@ core-prim . vector-map)
        (g$12176$XW@M@ core-prim . vector-length)
        (g$12175$XW@M@ core-prim . vector-for-each)
        (g$12174$XW@M@ core-prim . vector-fill!)
        (g$12173$XW@M@ core-prim . vector->list)
        (g$12172$XW@M@ core-prim . vector)
        (g$12171$XW@M@ core-prim . values)
        (g$12170$XW@M@ core-prim . truncate)
        (g$12169$XW@M@ core-prim . tan)
        (g$12168$XW@M@ core-prim . symbol?)
        (g$12167$XW@M@ core-prim . symbol=?)
        (g$12166$XW@M@ core-prim . symbol->string)
        (g$12165$XW@M@ core-prim . substring)
        (g$12164$XW@M@ core-prim . string?)
        (g$12163$XW@M@ core-prim . string>?)
        (g$12162$XW@M@ core-prim . string>=?)
        (g$12161$XW@M@ core-prim . string=?)
        (g$12160$XW@M@ core-prim . string<?)
        (g$12159$XW@M@ core-prim . string<=?)
        (g$12158$XW@M@ core-prim . string-ref)
        (g$12157$XW@M@ core-prim . string-length)
        (g$12156$XW@M@ core-prim . string-for-each)
        (g$12155$XW@M@ core-prim . string-copy)
        (g$12154$XW@M@ core-prim . string-append)
        (g$12153$XW@M@ core-prim . string->symbol)
        (g$12152$XW@M@ core-prim . string->number)
        (g$12151$XW@M@ core-prim . string->list)
        (g$12150$XW@M@ core-prim . string)
        (g$12149$XW@M@ core-prim . sqrt)
        (g$12148$XW@M@ core-prim . sin)
        (g$12147$XW@M@ core-prim . round)
        (g$12146$XW@M@ core-prim . reverse)
        (g$12145$XW@M@ core-prim . real?)
        (g$12144$XW@M@ core-prim . real-valued?)
        (g$12143$XW@M@ core-prim . real-part)
        (g$6236$XW@M@ core-prim . rationalize)
        (g$12142$XW@M@ core-prim . rational?)
        (g$12141$XW@M@ core-prim . rational-valued?)
        (g$12140$XW@M@ core-prim . procedure?)
        (g$12139$XW@M@ core-prim . positive?)
        (g$12138$XW@M@ core-prim . pair?)
        (g$12137$XW@M@ core-prim . odd?)
        (g$12136$XW@M@ core-prim . numerator)
        (g$12135$XW@M@ core-prim . number?)
        (g$12134$XW@M@ core-prim . number->string)
        (g$12133$XW@M@ core-prim . null?)
        (g$12132$XW@M@ core-prim . not)
        (g$12131$XW@M@ core-prim . negative?)
        (g$12130$XW@M@ core-prim . nan?)
        (g$12129$XW@M@ core-prim . min)
        (g$12128$XW@M@ core-prim . max)
        (g$12127$XW@M@ core-prim . map)
        (g$12126$XW@M@ core-prim . make-vector)
        (g$12125$XW@M@ core-prim . make-string)
        (g$12124$XW@M@ core-prim . make-rectangular)
        (g$12123$XW@M@ core-prim . make-polar)
        (g$12122$XW@M@ core-prim . magnitude)
        (g$12121$XW@M@ core-prim . log)
        (g$12120$XW@M@ core-prim . list?)
        (g$12119$XW@M@ core-prim . list-tail)
        (g$12118$XW@M@ core-prim . list-ref)
        (g$12117$XW@M@ core-prim . list->vector)
        (g$12116$XW@M@ core-prim . list->string)
        (g$12115$XW@M@ core-prim . list)
        (g$12114$XW@M@ core-prim . length)
        (g$12113$XW@M@ core-prim . lcm)
        (g$12112$XW@M@ core-prim . integer?)
        (g$12111$XW@M@ core-prim . integer-valued?)
        (g$12110$XW@M@ core-prim . integer->char)
        (g$12109$XW@M@ core-prim . infinite?)
        (g$12108$XW@M@ core-prim . inexact?)
        (g$12107$XW@M@ core-prim . inexact)
        (g$12106$XW@M@ core-prim . imag-part)
        (g$12105$XW@M@ core-prim . gcd)
        (g$12104$XW@M@ core-prim . for-each)
        (g$12103$XW@M@ core-prim . floor)
        (g$12102$XW@M@ core-prim . finite?)
        (g$12101$XW@M@ core-prim . expt)
        (g$12100$XW@M@ core-prim . exp)
        (g$12099$XW@M@ core-prim . exact?)
        (g$12098$XW@M@ core-prim . exact-integer-sqrt)
        (g$12097$XW@M@ core-prim . exact)
        (g$12096$XW@M@ core-prim . even?)
        (g$12095$XW@M@ core-prim . error)
        (g$12094$XW@M@ core-prim . eqv?)
        (g$12093$XW@M@ core-prim . equal?)
        (g$12092$XW@M@ core-prim . eq?)
        (g$12091$XW@M@ core-prim . dynamic-wind)
        (g$12090$XW@M@ core-prim . div0-and-mod0)
        (g$12089$XW@M@ core-prim . mod0)
        (g$12088$XW@M@ core-prim . div0)
        (g$12087$XW@M@ core-prim . div-and-mod)
        (g$12086$XW@M@ core-prim . mod)
        (g$12085$XW@M@ core-prim . div)
        (g$12084$XW@M@ core-prim . denominator)
        (g$12083$XW@M@ core-prim . cos)
        (g$12082$XW@M@ core-prim . cons)
        (g$12081$XW@M@ core-prim . complex?)
        (g$12080$XW@M@ core-prim . char?)
        (g$12079$XW@M@ core-prim . char>?)
        (g$12078$XW@M@ core-prim . char>=?)
        (g$12077$XW@M@ core-prim . char=?)
        (g$12076$XW@M@ core-prim . char<?)
        (g$12075$XW@M@ core-prim . char<=?)
        (g$12074$XW@M@ core-prim . char->integer)
        (g$12073$XW@M@ core-prim . ceiling)
        (g$12072$XW@M@ core-prim . call-with-values)
        (g$12071$XW@M@ core-prim . call/cc)
        (g$12070$XW@M@ core-prim . call-with-current-continuation)
        (g$6235$XW@M@ core-prim . cddddr)
        (g$6234$XW@M@ core-prim . cdddar)
        (g$6233$XW@M@ core-prim . cddadr)
        (g$6232$XW@M@ core-prim . cddaar)
        (g$6231$XW@M@ core-prim . cdaddr)
        (g$6230$XW@M@ core-prim . cdadar)
        (g$6229$XW@M@ core-prim . cdaadr)
        (g$6228$XW@M@ core-prim . cdaaar)
        (g$6227$XW@M@ core-prim . cadddr)
        (g$6226$XW@M@ core-prim . caddar)
        (g$6225$XW@M@ core-prim . cadadr)
        (g$6224$XW@M@ core-prim . cadaar)
        (g$6223$XW@M@ core-prim . caaddr)
        (g$6222$XW@M@ core-prim . caadar)
        (g$6221$XW@M@ core-prim . caaadr)
        (g$6220$XW@M@ core-prim . caaaar)
        (g$6219$XW@M@ core-prim . cdddr)
        (g$6218$XW@M@ core-prim . cddar)
        (g$6217$XW@M@ core-prim . cdadr)
        (g$6216$XW@M@ core-prim . cdaar)
        (g$6215$XW@M@ core-prim . caddr)
        (g$6214$XW@M@ core-prim . cadar)
        (g$6213$XW@M@ core-prim . caadr)
        (g$6212$XW@M@ core-prim . caaar)
        (g$6211$XW@M@ core-prim . cddr)
        (g$6210$XW@M@ core-prim . cdar)
        (g$6209$XW@M@ core-prim . cadr)
        (g$6208$XW@M@ core-prim . caar)
        (g$12069$XW@M@ core-prim . cdr)
        (g$12068$XW@M@ core-prim . car)
        (g$12067$XW@M@ core-prim . boolean?)
        (g$12066$XW@M@ core-prim . boolean=?)
        (g$12065$XW@M@ core-prim . atan)
        (g$12064$XW@M@ core-prim . assertion-violation)
        (g$12063$XW@M@ core-prim . asin)
        (g$12062$XW@M@ core-prim . apply)
        (g$12061$XW@M@ core-prim . append)
        (g$12060$XW@M@ core-prim . angle)
        (g$12059$XW@M@ core-prim . acos)
        (g$12058$XW@M@ core-prim . abs)
        (g$12057$XW@M@ core-prim . /)
        (g$12056$XW@M@ core-prim . *)
        (g$12055$XW@M@ core-prim . -)
        (g$12054$XW@M@ core-prim . +)
        (g$12053$XW@M@ core-prim . >=)
        (g$12052$XW@M@ core-prim . >)
        (g$12051$XW@M@ core-prim . =)
        (g$12050$XW@M@ core-prim . <=)
        (g$12049$XW@M@ core-prim . <)
        (g$12048$XW@M@ core-prim . make-record-printer)
        (g$12047$XW@M@ core-prim . eqv-hash)
        (g$12046$XW@M@ core-prim . eq-hash)
        (g$12045$XW@M@ core-prim . reverse!)
        (g$12044$XW@M@ core-prim . make-promise)
        (g$11885$XW@M@ core-prim . load/args)
        (g$7646$XW@M@ core-prim . printf)
        (g$7647$XW@M@ core-prim . fprintf)
        (g$7648$XW@M@ core-prim . format)
        (g$12043$XW@M@ core-prim . get-arity)
        (g$12042$XW@M@ core-prim . gc-collect)
        (g$12041$XW@M@ core-prim . clr-type?)
        (g$12040$XW@M@ core-prim . get-clr-type)
        (g$12039$XW@M@ core-prim . get-command-line)
        (g$12038$XW@M@ core-prim . vector-append)
        (g$12037$XW@M@ core-prim . vector-filter)
        (g$12036$XW@M@ core-prim . vector-reverse!)
        (g$12035$XW@M@ core-prim . vector-contains?)
        (g$12034$XW@M@ core-prim . vector-index-of)
        (g$12033$XW@M@ core-prim . vector-copy)
        (g$12032$XW@M@ core-prim . vector-binary-search)
        (g$12031$XW@M@ core-prim . get-output-string)
        (g$12030$XW@M@ core-prim . open-output-string)
        (g$12029$XW@M@ core-prim . open-input-string)
        (g$12028$XW@M@ core-prim . string-format)
        (g$11882$XW@M@ core-prim . trace-printer)
        (g$12027$XW@M@ core-prim . make-traced-procedure)
        (g$7667$XW@M@ core-prim . make-traced-macro)
        (g$12026$XW@M@ core-prim . pmap)
        (g$12025$XW@M@ core-prim . time-it)
        (g$7672$XW@M@ core-prim . make-parameter)
        (g$12024$XW@M@ core-prim . library-locator)
        (g$12023$XW@M@ core-prim . get-library-paths)
        (g$8929$XW@M@ core-prim . environment-symbols)
        (g$8928$XW@M@ core-prim . interaction-environment-symbols)
        (g$8098$XW@M@ core-prim . library-path)
        (g$8099$XW@M@ core-prim . library-extensions)
        (g$8119$XW@M@ core-prim . installed-libraries)
        (g$8934$XW@M@ core-prim . expand)
        (g$12022$XW@M@ $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12021$XW@M@ $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12020$XW@M@ $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12019$XW@M@ $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12018$XW@M@ $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12017$XW@M@
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12016$XW@M@
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12015$XW@M@
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12014$XW@M@
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12013$XW@M@ $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12012$XW@M@
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12011$XW@M@ $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12010$XW@M@ $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12009$XW@M@ $core-rtd &i/o-rtd &i/o-rcd)
        (g$12008$XW@M@ $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12007$XW@M@ $core-rtd &undefined-rtd &undefined-rcd)
        (g$12006$XW@M@ $core-rtd &syntax-rtd &syntax-rcd)
        (g$12005$XW@M@ $core-rtd &lexical-rtd &lexical-rcd)
        (g$12004$XW@M@
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12003$XW@M@ $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12002$XW@M@ $core-rtd &who-rtd &who-rcd)
        (g$12001$XW@M@ $core-rtd &irritants-rtd &irritants-rcd)
        (g$12000$XW@M@ $core-rtd &assertion-rtd &assertion-rcd)
        (g$11999$XW@M@ $core-rtd &violation-rtd &violation-rcd)
        (g$11998$XW@M@ $core-rtd &error-rtd &error-rcd)
        (g$11997$XW@M@ $core-rtd &serious-rtd &serious-rcd)
        (g$11996$XW@M@ $core-rtd &warning-rtd &warning-rcd)
        (g$11995$XW@M@ $core-rtd &message-rtd &message-rcd)
        (g$11994$XW@M@ $core-rtd &condition-rtd &condition-rcd)
        (g$11993$XW@M@ macro . define-condition-type)
        (g$11992$XW@M@ macro . define-enumeration)
        (g$11991$XW@M@ macro . define-record-type)
        (g$11990$XW@M@ macro . parent-rtd)
        (g$11989$XW@M@ macro . nongenerative)
        (g$11988$XW@M@ macro . opaque)
        (g$11987$XW@M@ macro . sealed)
        (g$11986$XW@M@ macro . protocol)
        (g$11985$XW@M@ macro . parent)
        (g$11984$XW@M@ macro . immutable)
        (g$11983$XW@M@ macro . mutable)
        (g$11982$XW@M@ macro . fields)
        (g$11981$XW@M@ macro . error-handling-mode)
        (g$11980$XW@M@ macro . file-options)
        (g$11979$XW@M@ macro . buffer-mode)
        (g$11978$XW@M@ macro . eol-style)
        (g$11977$XW@M@ macro . guard)
        (g$11976$XW@M@ macro . trace-letrec-syntax)
        (g$11975$XW@M@ macro . trace-let-syntax)
        (g$11974$XW@M@ macro . trace-define-syntax)
        (g$11973$XW@M@ macro . trace-define)
        (g$11972$XW@M@ macro . trace-lambda)
        (g$11971$XW@M@ macro . unsyntax-splicing)
        (g$11970$XW@M@ macro . unsyntax)
        (g$11969$XW@M@ macro . unquote-splicing)
        (g$11968$XW@M@ macro . unquote)
        (g$11967$XW@M@ macro . _)
        (g$11966$XW@M@ macro . else)
        (g$11965$XW@M@ macro . =>)
        (g$11964$XW@M@ macro . ...)
        (g$11963$XW@M@ macro . assert)
        (g$11962$XW@M@ macro . endianness)
        (g$11961$XW@M@ macro . delay)
        (g$11960$XW@M@ macro . time)
        (g$11959$XW@M@ macro . or)
        (g$11958$XW@M@ macro . and)
        (g$11957$XW@M@ macro . do)
        (g$11956$XW@M@ macro . cond)
        (g$11955$XW@M@ macro . let*)
        (g$11954$XW@M@ macro . let)
        (g$11953$XW@M@ macro . identifier-syntax)
        (g$11952$XW@M@ macro . with-syntax)
        (g$11951$XW@M@ macro . quasisyntax)
        (g$11950$XW@M@ macro . quasiquote)
        (g$11949$XW@M@ macro . syntax-rules)
        (g$11948$XW@M@ macro . include-into)
        (g$11947$XW@M@ macro . include)
        (g$11946$XW@M@ macro . define-struct)
        (g$11945$XW@M@ macro . let-values)
        (g$11944$XW@M@ macro . let*-values)
        (g$11943$XW@M@ core-macro . record-constructor-descriptor)
        (g$11942$XW@M@ core-macro . record-type-descriptor)
        (g$11941$XW@M@ core-macro . fluid-let-syntax)
        (g$11940$XW@M@ core-macro . case)
        (g$11939$XW@M@ core-macro . parameterize)
        (g$11938$XW@M@ core-macro . unless)
        (g$11937$XW@M@ core-macro . when)
        (g$11936$XW@M@ core-macro . if)
        (g$11935$XW@M@ core-macro . letrec*)
        (g$11934$XW@M@ core-macro . letrec)
        (g$11933$XW@M@ core-macro . type-descriptor)
        (g$11932$XW@M@ core-macro . case-lambda)
        (g$11931$XW@M@ core-macro . lambda)
        (g$11930$XW@M@ core-macro . syntax)
        (g$11929$XW@M@ core-macro . syntax-case)
        (g$11928$XW@M@ core-macro . quote)
        (g$11927$XW@M@ core-macro . foreign-call)
        (g$11926$XW@M@ letrec-syntax)
        (g$11925$XW@M@ let-syntax)
        (g$11924$XW@M@ set!)
        (g$11923$XW@M@ import)
        (g$11922$XW@M@ library)
        (g$11921$XW@M@ begin)
        (g$11920$XW@M@ module)
        (g$11919$XW@M@ define-syntax)
        (g$11918$XW@M@ define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7400$XW@M@
      'g$12598$XW@M@
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12477$XW@M@)
        (eval-core . g$12476$XW@M@)
        (set-symbol-value! . g$12475$XW@M@)
        (symbol-value . g$12474$XW@M@)
        (gensym . g$12472$XW@M@)
        (void . g$12471$XW@M@))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11429$XW@M@
     g$trace-printer$11469$XW@M@
     (g$make-parameter$6854$XW@M@ write))
   (g$command-line$11430$XW@M@
     g$command-line$11470$XW@M@
     (g$make-parameter$6854$XW@M@ (get-command-line)))
   (g$local-library-path$11431$XW@M@
     g$local-library-path$11471$XW@M@
     (case-lambda
       ((g$filename$11442$XW@M@)
        (cons
          (g$get-directory-name$5757$XW@M@ g$filename$11442$XW@M@)
          (g$library-path$7384$XW@M@)))))
   (g$load/args$11432$XW@M@
     g$load/args$11472$XW@M@
     (case-lambda
       ((g$filename$11443$XW@M@ . g$args$11444$XW@M@)
        (begin
          (apply
            g$load-r6rs-top-level$11439$XW@M@
            g$filename$11443$XW@M@
            'load
            g$args$11444$XW@M@)
          (void)))))
   (g$load$11433$XW@M@
     g$load$11473$XW@M@
     (case-lambda
       ((g$filename$11445$XW@M@)
        (begin
          (apply
            g$load-r6rs-top-level$11439$XW@M@
            g$filename$11445$XW@M@
            'load
            (cdr (g$command-line$11430$XW@M@)))
          (void)))))
   (g$ironscheme-build$11434$XW@M@
     g$ironscheme-build$11474$XW@M@
     (case-lambda (() (g$load$11433$XW@M@ '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11435$XW@M@
     g$eval-top-level$11475$XW@M@
     (case-lambda
       ((g$x$11446$XW@M@)
        (g$eval$11407$XW@M@
          g$x$11446$XW@M@
          (g$interaction-environment$11427$XW@M@)))))
   (g$compile-system-libraries$11436$XW@M@
     g$compile-system-libraries$11476$XW@M@
     (case-lambda
       (()
        (g$eval-top-level$11435$XW@M@
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11437$XW@M@
     g$compile$11477$XW@M@
     (case-lambda
       ((g$filename$11447$XW@M@)
        (g$load-r6rs-top-level$11439$XW@M@ g$filename$11447$XW@M@ 'compile))))
   (g$compile->closure$11438$XW@M@
     g$compile->closure$11478$XW@M@
     (case-lambda
       ((g$filename$11448$XW@M@)
        (g$load-r6rs-top-level$11439$XW@M@ g$filename$11448$XW@M@ 'closure))))
   (g$load-r6rs-top-level$11439$XW@M@
     g$load-r6rs-top-level$11479$XW@M@
     (case-lambda
       ((g$filename$11449$XW@M@ g$how$11450$XW@M@ . g$args$11451$XW@M@)
        ((case-lambda
           ((g$library-path$11454$XW@M@ g$library-path$11455$XW@M@)
            ((case-lambda
               ((g$swap$11456$XW@M@)
                (dynamic-wind
                  g$swap$11456$XW@M@
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11457$XW@M@)
                         ((case-lambda
                            ((g$t$11458$XW@M@)
                             (if (eqv? g$t$11458$XW@M@ 'closure)
                               (g$pre-compile-r6rs-top-level$11426$XW@M@
                                 g$x*$11457$XW@M@)
                               (if (eqv? g$t$11458$XW@M@ 'load)
                                 ((case-lambda
                                    ((g$command-line$11461$XW@M@
                                       g$command-line$11462$XW@M@)
                                     ((case-lambda
                                        ((g$swap$11463$XW@M@)
                                         (dynamic-wind
                                           g$swap$11463$XW@M@
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11425$XW@M@
                                                 g$x*$11457$XW@M@))))
                                           g$swap$11463$XW@M@)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11464$XW@M@)
                                             (begin
                                               (g$command-line$11461$XW@M@
                                                 g$command-line$11462$XW@M@)
                                               (set! g$command-line$11462$XW@M@
                                                 g$t$11464$XW@M@))))
                                          (g$command-line$11461$XW@M@)))))))
                                  g$command-line$11430$XW@M@
                                  (cons
                                    g$filename$11449$XW@M@
                                    (map (case-lambda
                                           ((g$x$11465$XW@M@)
                                            (g$format$6769$XW@M@
                                              '"~a"
                                              g$x$11465$XW@M@)))
                                         g$args$11451$XW@M@)))
                                 (if (eqv? g$t$11458$XW@M@ 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$11425$XW@M@
                                       g$x*$11457$XW@M@)
                                     (g$serialize-all$7388$XW@M@
                                       serialize-library
                                       g$compile-core-expr$7102$XW@M@))
                                   (void))))))
                          g$how$11450$XW@M@)))
                      (with-input-from-file
                        g$filename$11449$XW@M@
                        (case-lambda
                          (()
                           ((letrec ((g$f$11466$XW@M@
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11467$XW@M@)
                                              (if (eof-object? g$x$11467$XW@M@)
                                                '()
                                                (cons
                                                  g$x$11467$XW@M@
                                                  (g$f$11466$XW@M@)))))
                                           (read-annotated))))))
                              g$f$11466$XW@M@))))))))
                  g$swap$11456$XW@M@)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11468$XW@M@)
                    (begin
                      (g$library-path$11454$XW@M@ g$library-path$11455$XW@M@)
                      (set! g$library-path$11455$XW@M@ g$t$11468$XW@M@))))
                 (g$library-path$11454$XW@M@)))))))
         g$library-path$7384$XW@M@
         (g$local-library-path$11431$XW@M@ g$filename$11449$XW@M@)))))
   (g$fo$11440$XW@M@
     g$fo$11480$XW@M@
     (g$make-enumeration$6731$XW@M@ '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7389$XW@M@
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11441$XW@M@)
         (if (g$serious-condition?$6140$XW@M@ g$ex$11441$XW@M@)
           (raise g$ex$11441$XW@M@)
           (begin (display g$ex$11441$XW@M@) (newline))))))
    (set-symbol-value! 'load g$load$11433$XW@M@)
    (set-symbol-value! 'compile g$compile$11437$XW@M@)
    (set-symbol-value! 'compile->closure g$compile->closure$11438$XW@M@)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11435$XW@M@)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11400$XW@M@)
    (set-symbol-value! 'expanded2core g$expanded->core$7101$XW@M@)
    (set-symbol-value! 'trace-printer g$trace-printer$11429$XW@M@)
    (g$file-options-constructor$6855$XW@M@
      (g$enum-set-constructor$6734$XW@M@ g$fo$11440$XW@M@))
    (g$library-path$7384$XW@M@ (get-library-paths))))

