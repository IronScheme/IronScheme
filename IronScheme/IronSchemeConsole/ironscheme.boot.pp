;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11560$T@1Mj
     g$list-tail$11704$T@1Mj
     (case-lambda
       ((g$lst$11588$T@1Mj g$index$11589$T@1Mj)
        (if ((case-lambda
               ((g$t$11590$T@1Mj)
                (if g$t$11590$T@1Mj
                  g$t$11590$T@1Mj
                  (begin
                    '#f
                    (g$negative?$12505$T@1Mj g$index$11589$T@1Mj)))))
             (null? g$lst$11588$T@1Mj))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11588$T@1Mj
            g$index$11589$T@1Mj)
          (if (g$zero?$12506$T@1Mj g$index$11589$T@1Mj)
            g$lst$11588$T@1Mj
            (g$list-tail$11560$T@1Mj
              (cdr g$lst$11588$T@1Mj)
              (- g$index$11589$T@1Mj '1)))))))
   (g$list-ref$11561$T@1Mj
     g$list-ref$11705$T@1Mj
     (case-lambda
       ((g$lst$11591$T@1Mj g$index$11592$T@1Mj)
        (car (g$list-tail$11560$T@1Mj
               g$lst$11591$T@1Mj
               g$index$11592$T@1Mj)))))
   (g$last-pair$11562$T@1Mj
     g$last-pair$11706$T@1Mj
     (case-lambda
       ((g$lst$11593$T@1Mj)
        (if (null? g$lst$11593$T@1Mj)
          g$lst$11593$T@1Mj
          (if (null? (cdr g$lst$11593$T@1Mj))
            g$lst$11593$T@1Mj
            (g$last-pair$11562$T@1Mj (cdr g$lst$11593$T@1Mj)))))))
   (g$make-list$11563$T@1Mj
     g$make-list$11707$T@1Mj
     (case-lambda
       ((g$n$11594$T@1Mj) (vector->list (make-vector g$n$11594$T@1Mj)))
       ((g$n$11595$T@1Mj g$fill$11596$T@1Mj)
        (vector->list
          (make-vector g$n$11595$T@1Mj g$fill$11596$T@1Mj)))))
   (g$find$11564$T@1Mj
     g$find$11708$T@1Mj
     (case-lambda
       ((g$proc$11597$T@1Mj g$l$11598$T@1Mj)
        (if (null? g$l$11598$T@1Mj)
          '#f
          ((case-lambda
             ((g$e$11599$T@1Mj g$r$11600$T@1Mj g$proc$11601$T@1Mj)
              (if (g$proc$11601$T@1Mj g$e$11599$T@1Mj)
                g$e$11599$T@1Mj
                (g$find$11564$T@1Mj
                  g$proc$11601$T@1Mj
                  g$r$11600$T@1Mj))))
           (car g$l$11598$T@1Mj)
           (cdr g$l$11598$T@1Mj)
           g$proc$11597$T@1Mj)))))
   (g$partition$11565$T@1Mj
     g$partition$11709$T@1Mj
     (case-lambda
       ((g$proc$11602$T@1Mj g$l$11603$T@1Mj)
        ((letrec ((g$f$11604$T@1Mj
                    (case-lambda
                      ((g$l$11605$T@1Mj g$a$11606$T@1Mj g$b$11607$T@1Mj)
                       (if (null? g$l$11605$T@1Mj)
                         (values
                           (reverse! g$a$11606$T@1Mj)
                           (reverse! g$b$11607$T@1Mj))
                         ((case-lambda
                            ((g$e$11608$T@1Mj)
                             (if (g$proc$11602$T@1Mj g$e$11608$T@1Mj)
                               (g$f$11604$T@1Mj
                                 (cdr g$l$11605$T@1Mj)
                                 (cons g$e$11608$T@1Mj g$a$11606$T@1Mj)
                                 g$b$11607$T@1Mj)
                               (g$f$11604$T@1Mj
                                 (cdr g$l$11605$T@1Mj)
                                 g$a$11606$T@1Mj
                                 (cons
                                   g$e$11608$T@1Mj
                                   g$b$11607$T@1Mj)))))
                          (car g$l$11605$T@1Mj)))))))
           g$f$11604$T@1Mj)
         g$l$11603$T@1Mj
         '()
         '()))))
   (g$remp$11566$T@1Mj
     g$remp$11710$T@1Mj
     (case-lambda
       ((g$proc$11609$T@1Mj g$l$11610$T@1Mj)
        ((letrec ((g$f$11611$T@1Mj
                    (case-lambda
                      ((g$l$11612$T@1Mj g$a$11613$T@1Mj)
                       (if (null? g$l$11612$T@1Mj)
                         (reverse! g$a$11613$T@1Mj)
                         ((case-lambda
                            ((g$e$11614$T@1Mj)
                             (if (g$proc$11609$T@1Mj g$e$11614$T@1Mj)
                               (g$f$11611$T@1Mj
                                 (cdr g$l$11612$T@1Mj)
                                 g$a$11613$T@1Mj)
                               (g$f$11611$T@1Mj
                                 (cdr g$l$11612$T@1Mj)
                                 (cons
                                   g$e$11614$T@1Mj
                                   g$a$11613$T@1Mj)))))
                          (car g$l$11612$T@1Mj)))))))
           g$f$11611$T@1Mj)
         g$l$11610$T@1Mj
         '()))))
   (g$filter$11567$T@1Mj
     g$filter$11711$T@1Mj
     (case-lambda
       ((g$proc$11615$T@1Mj g$l$11616$T@1Mj)
        ((letrec ((g$f$11617$T@1Mj
                    (case-lambda
                      ((g$l$11618$T@1Mj g$a$11619$T@1Mj)
                       (if (null? g$l$11618$T@1Mj)
                         (reverse! g$a$11619$T@1Mj)
                         ((case-lambda
                            ((g$e$11620$T@1Mj)
                             (if (g$proc$11615$T@1Mj g$e$11620$T@1Mj)
                               (g$f$11617$T@1Mj
                                 (cdr g$l$11618$T@1Mj)
                                 (cons g$e$11620$T@1Mj g$a$11619$T@1Mj))
                               (g$f$11617$T@1Mj
                                 (cdr g$l$11618$T@1Mj)
                                 g$a$11619$T@1Mj))))
                          (car g$l$11618$T@1Mj)))))))
           g$f$11617$T@1Mj)
         g$l$11616$T@1Mj
         '()))))
   (g$assq$11568$T@1Mj
     g$assq$11712$T@1Mj
     (case-lambda
       ((g$obj$11621$T@1Mj g$lst$11622$T@1Mj)
        (if (null? g$lst$11622$T@1Mj)
          '#f
          ((case-lambda
             ((g$obj$11623$T@1Mj g$t$11624$T@1Mj g$r$11625$T@1Mj)
              (if (eq? g$obj$11623$T@1Mj (car g$t$11624$T@1Mj))
                g$t$11624$T@1Mj
                (g$assq$11568$T@1Mj
                  g$obj$11623$T@1Mj
                  g$r$11625$T@1Mj))))
           g$obj$11621$T@1Mj
           (car g$lst$11622$T@1Mj)
           (cdr g$lst$11622$T@1Mj))))))
   (g$assv$11569$T@1Mj
     g$assv$11713$T@1Mj
     (case-lambda
       ((g$obj$11626$T@1Mj g$lst$11627$T@1Mj)
        (if (null? g$lst$11627$T@1Mj)
          '#f
          ((case-lambda
             ((g$obj$11628$T@1Mj g$t$11629$T@1Mj g$r$11630$T@1Mj)
              (if (eqv? g$obj$11628$T@1Mj (car g$t$11629$T@1Mj))
                g$t$11629$T@1Mj
                (g$assv$11569$T@1Mj
                  g$obj$11628$T@1Mj
                  g$r$11630$T@1Mj))))
           g$obj$11626$T@1Mj
           (car g$lst$11627$T@1Mj)
           (cdr g$lst$11627$T@1Mj))))))
   (g$assoc$11570$T@1Mj
     g$assoc$11714$T@1Mj
     (case-lambda
       ((g$obj$11631$T@1Mj g$lst$11632$T@1Mj)
        (if (null? g$lst$11632$T@1Mj)
          '#f
          ((case-lambda
             ((g$obj$11633$T@1Mj g$t$11634$T@1Mj g$r$11635$T@1Mj)
              (if (equal? g$obj$11633$T@1Mj (car g$t$11634$T@1Mj))
                g$t$11634$T@1Mj
                (g$assoc$11570$T@1Mj
                  g$obj$11633$T@1Mj
                  g$r$11635$T@1Mj))))
           g$obj$11631$T@1Mj
           (car g$lst$11632$T@1Mj)
           (cdr g$lst$11632$T@1Mj))))))
   (g$assp$11571$T@1Mj
     g$assp$11715$T@1Mj
     (case-lambda
       ((g$p?$11636$T@1Mj g$lst$11637$T@1Mj)
        (if (null? g$lst$11637$T@1Mj)
          '#f
          ((case-lambda
             ((g$p?$11638$T@1Mj g$t$11639$T@1Mj g$r$11640$T@1Mj)
              (if (g$p?$11638$T@1Mj (car g$t$11639$T@1Mj))
                g$t$11639$T@1Mj
                (g$assp$11571$T@1Mj g$p?$11638$T@1Mj g$r$11640$T@1Mj))))
           g$p?$11636$T@1Mj
           (car g$lst$11637$T@1Mj)
           (cdr g$lst$11637$T@1Mj))))))
   (g$memq$11572$T@1Mj
     g$memq$11716$T@1Mj
     (case-lambda
       ((g$obj$11641$T@1Mj g$lst$11642$T@1Mj)
        (if (null? g$lst$11642$T@1Mj)
          '#f
          (if (eq? g$obj$11641$T@1Mj (car g$lst$11642$T@1Mj))
            g$lst$11642$T@1Mj
            (g$memq$11572$T@1Mj
              g$obj$11641$T@1Mj
              (cdr g$lst$11642$T@1Mj)))))))
   (g$memv$11573$T@1Mj
     g$memv$11717$T@1Mj
     (case-lambda
       ((g$obj$11643$T@1Mj g$lst$11644$T@1Mj)
        (if (null? g$lst$11644$T@1Mj)
          '#f
          (if (eqv? g$obj$11643$T@1Mj (car g$lst$11644$T@1Mj))
            g$lst$11644$T@1Mj
            (g$memv$11573$T@1Mj
              g$obj$11643$T@1Mj
              (cdr g$lst$11644$T@1Mj)))))))
   (g$member$11574$T@1Mj
     g$member$11718$T@1Mj
     (case-lambda
       ((g$obj$11645$T@1Mj g$lst$11646$T@1Mj)
        (if (null? g$lst$11646$T@1Mj)
          '#f
          (if (equal? g$obj$11645$T@1Mj (car g$lst$11646$T@1Mj))
            g$lst$11646$T@1Mj
            (g$member$11574$T@1Mj
              g$obj$11645$T@1Mj
              (cdr g$lst$11646$T@1Mj)))))))
   (g$memp$11575$T@1Mj
     g$memp$11719$T@1Mj
     (case-lambda
       ((g$p?$11647$T@1Mj g$lst$11648$T@1Mj)
        (if (null? g$lst$11648$T@1Mj)
          '#f
          (if (g$p?$11647$T@1Mj (car g$lst$11648$T@1Mj))
            g$lst$11648$T@1Mj
            (g$memp$11575$T@1Mj
              g$p?$11647$T@1Mj
              (cdr g$lst$11648$T@1Mj)))))))
   (g$all-empty?$11576$T@1Mj
     g$all-empty?$11720$T@1Mj
     (case-lambda
       ((g$ls$11649$T@1Mj)
        ((case-lambda
           ((g$t$11650$T@1Mj)
            (if g$t$11650$T@1Mj
              g$t$11650$T@1Mj
              (begin
                '#f
                (if (null? (car g$ls$11649$T@1Mj))
                  (begin
                    '#f
                    (g$all-empty?$11576$T@1Mj (cdr g$ls$11649$T@1Mj)))
                  '#f)))))
         (null? g$ls$11649$T@1Mj)))))
   (g$split$11577$T@1Mj
     g$split$11721$T@1Mj
     (case-lambda
       ((g$ls$11651$T@1Mj)
        (if (null? g$ls$11651$T@1Mj)
          (values '() '())
          (call-with-values
            (case-lambda
              (() (g$split$11577$T@1Mj (cdr g$ls$11651$T@1Mj))))
            (case-lambda
              ((g$cars$11652$T@1Mj g$cdrs$11653$T@1Mj)
               ((case-lambda
                  ((g$a$11654$T@1Mj)
                   (values
                     (cons (car g$a$11654$T@1Mj) g$cars$11652$T@1Mj)
                     (cons (cdr g$a$11654$T@1Mj) g$cdrs$11653$T@1Mj))))
                (car g$ls$11651$T@1Mj)))))))))
   (g$for-all$11578$T@1Mj
     g$for-all$11722$T@1Mj
     (case-lambda
       ((g$f$11655$T@1Mj g$arg1$11656$T@1Mj . g$args$11657$T@1Mj)
        ((case-lambda
           ((g$args$11658$T@1Mj)
            (if (g$all-empty?$11576$T@1Mj g$args$11658$T@1Mj)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11577$T@1Mj g$args$11658$T@1Mj)))
                (case-lambda
                  ((g$cars$11659$T@1Mj g$cdrs$11660$T@1Mj)
                   (if (g$all-empty?$11576$T@1Mj g$cdrs$11660$T@1Mj)
                     (apply g$f$11655$T@1Mj g$cars$11659$T@1Mj)
                     (if (apply g$f$11655$T@1Mj g$cars$11659$T@1Mj)
                       (begin
                         '#f
                         (apply
                           g$for-all$11578$T@1Mj
                           g$f$11655$T@1Mj
                           g$cdrs$11660$T@1Mj))
                       '#f))))))))
         (cons g$arg1$11656$T@1Mj g$args$11657$T@1Mj)))))
   (g$exists$11579$T@1Mj
     g$exists$11723$T@1Mj
     (case-lambda
       ((g$f$11661$T@1Mj g$arg1$11662$T@1Mj . g$args$11663$T@1Mj)
        ((case-lambda
           ((g$args$11664$T@1Mj)
            (if (g$all-empty?$11576$T@1Mj g$args$11664$T@1Mj)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11577$T@1Mj g$args$11664$T@1Mj)))
                (case-lambda
                  ((g$cars$11665$T@1Mj g$cdrs$11666$T@1Mj)
                   ((case-lambda
                      ((g$t$11667$T@1Mj)
                       (if g$t$11667$T@1Mj
                         g$t$11667$T@1Mj
                         (begin
                           '#f
                           (apply
                             g$exists$11579$T@1Mj
                             g$f$11661$T@1Mj
                             g$cdrs$11666$T@1Mj)))))
                    (apply g$f$11661$T@1Mj g$cars$11665$T@1Mj))))))))
         (cons g$arg1$11662$T@1Mj g$args$11663$T@1Mj)))))
   (g$map$11580$T@1Mj
     g$map$11724$T@1Mj
     (case-lambda
       ((g$proc$11668$T@1Mj g$list1$11669$T@1Mj . g$lists$11670$T@1Mj)
        ((letrec ((g$f$11671$T@1Mj
                    (case-lambda
                      ((g$lists$11672$T@1Mj g$a$11673$T@1Mj)
                       (if (g$all-empty?$11576$T@1Mj
                             g$lists$11672$T@1Mj)
                         (reverse! g$a$11673$T@1Mj)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11577$T@1Mj
                                g$lists$11672$T@1Mj)))
                           (case-lambda
                             ((g$cars$11674$T@1Mj g$cdrs$11675$T@1Mj)
                              (g$f$11671$T@1Mj
                                g$cdrs$11675$T@1Mj
                                (cons
                                  (apply
                                    g$proc$11668$T@1Mj
                                    g$cars$11674$T@1Mj)
                                  g$a$11673$T@1Mj))))))))))
           g$f$11671$T@1Mj)
         (cons g$list1$11669$T@1Mj g$lists$11670$T@1Mj)
         '()))))
   (g$for-each$11581$T@1Mj
     g$for-each$11725$T@1Mj
     (case-lambda
       ((g$f$11676$T@1Mj g$arg1$11677$T@1Mj . g$args$11678$T@1Mj)
        ((case-lambda
           ((g$args$11679$T@1Mj)
            (if (not (g$all-empty?$11576$T@1Mj g$args$11679$T@1Mj))
              (call-with-values
                (case-lambda
                  (() (g$split$11577$T@1Mj g$args$11679$T@1Mj)))
                (case-lambda
                  ((g$cars$11680$T@1Mj g$cdrs$11681$T@1Mj)
                   (begin
                     (apply g$f$11676$T@1Mj g$cars$11680$T@1Mj)
                     (apply
                       g$for-each$11581$T@1Mj
                       g$f$11676$T@1Mj
                       g$cdrs$11681$T@1Mj)))))
              (void))))
         (cons g$arg1$11677$T@1Mj g$args$11678$T@1Mj)))))
   (g$cons*$11582$T@1Mj
     g$cons*$11726$T@1Mj
     (case-lambda
       ((g$a$11682$T@1Mj . g$rest$11683$T@1Mj)
        ((letrec ((g$f$11684$T@1Mj
                    (case-lambda
                      ((g$a$11685$T@1Mj g$rest$11686$T@1Mj)
                       (if (null? g$rest$11686$T@1Mj)
                         g$a$11685$T@1Mj
                         (cons
                           g$a$11685$T@1Mj
                           (g$f$11684$T@1Mj
                             (car g$rest$11686$T@1Mj)
                             (cdr g$rest$11686$T@1Mj))))))))
           g$f$11684$T@1Mj)
         g$a$11682$T@1Mj
         g$rest$11683$T@1Mj))))
   (g$fold-left$11583$T@1Mj
     g$fold-left$11727$T@1Mj
     (case-lambda
       ((g$combine$11687$T@1Mj
          g$nil$11688$T@1Mj
          g$list1$11689$T@1Mj
          .
          g$lists$11690$T@1Mj)
        (if (null? g$list1$11689$T@1Mj)
          g$nil$11688$T@1Mj
          (apply
            g$fold-left$11583$T@1Mj
            (g$cons*$11582$T@1Mj
              g$combine$11687$T@1Mj
              (apply
                g$combine$11687$T@1Mj
                (g$cons*$11582$T@1Mj
                  g$nil$11688$T@1Mj
                  (car g$list1$11689$T@1Mj)
                  (g$map$11580$T@1Mj car g$lists$11690$T@1Mj)))
              (cdr g$list1$11689$T@1Mj)
              (g$map$11580$T@1Mj cdr g$lists$11690$T@1Mj)))))))
   (g$fold-right$11584$T@1Mj
     g$fold-right$11728$T@1Mj
     (case-lambda
       ((g$combine$11691$T@1Mj
          g$nil$11692$T@1Mj
          g$list1$11693$T@1Mj
          .
          g$lists$11694$T@1Mj)
        (if (null? g$list1$11693$T@1Mj)
          g$nil$11692$T@1Mj
          (apply
            g$combine$11691$T@1Mj
            (append
              (list (car g$list1$11693$T@1Mj))
              (g$map$11580$T@1Mj car g$lists$11694$T@1Mj)
              (list
                (apply
                  g$fold-right$11584$T@1Mj
                  (g$cons*$11582$T@1Mj
                    g$combine$11691$T@1Mj
                    g$nil$11692$T@1Mj
                    (cdr g$list1$11693$T@1Mj)
                    (g$map$11580$T@1Mj cdr g$lists$11694$T@1Mj))))))))))
   (g$remove$11585$T@1Mj
     g$remove$11729$T@1Mj
     (case-lambda
       ((g$obj$11695$T@1Mj g$list$11696$T@1Mj)
        (g$remp$11566$T@1Mj
          (case-lambda
            ((g$x$11697$T@1Mj)
             (equal? g$obj$11695$T@1Mj g$x$11697$T@1Mj)))
          g$list$11696$T@1Mj))))
   (g$remv$11586$T@1Mj
     g$remv$11730$T@1Mj
     (case-lambda
       ((g$obj$11698$T@1Mj g$list$11699$T@1Mj)
        (g$remp$11566$T@1Mj
          (case-lambda
            ((g$x$11700$T@1Mj)
             (eqv? g$obj$11698$T@1Mj g$x$11700$T@1Mj)))
          g$list$11699$T@1Mj))))
   (g$remq$11587$T@1Mj
     g$remq$11731$T@1Mj
     (case-lambda
       ((g$obj$11701$T@1Mj g$list$11702$T@1Mj)
        (g$remp$11566$T@1Mj
          (case-lambda
            ((g$x$11703$T@1Mj) (eq? g$obj$11701$T@1Mj g$x$11703$T@1Mj)))
          g$list$11702$T@1Mj)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$mod$12127$T@1Mj
     g$mod$12458$T@1Mj
     (case-lambda
       ((g$x1$12280$T@1Mj g$x2$12281$T@1Mj)
        (- g$x1$12280$T@1Mj
           (* (div g$x1$12280$T@1Mj g$x2$12281$T@1Mj)
              g$x2$12281$T@1Mj)))))
   (g$mod0$12128$T@1Mj
     g$mod0$12459$T@1Mj
     (case-lambda
       ((g$x1$12282$T@1Mj g$x2$12283$T@1Mj)
        (- g$x1$12282$T@1Mj
           (* (div0 g$x1$12282$T@1Mj g$x2$12283$T@1Mj)
              g$x2$12283$T@1Mj)))))
   (g$div-and-mod$12129$T@1Mj
     g$div-and-mod$12460$T@1Mj
     (case-lambda
       ((g$x1$12284$T@1Mj g$x2$12285$T@1Mj)
        ((case-lambda
           ((g$d$12286$T@1Mj)
            (values
              g$d$12286$T@1Mj
              (- g$x1$12284$T@1Mj
                 (* g$d$12286$T@1Mj g$x2$12285$T@1Mj)))))
         (div g$x1$12284$T@1Mj g$x2$12285$T@1Mj)))))
   (g$div0-and-mod0$12130$T@1Mj
     g$div0-and-mod0$12461$T@1Mj
     (case-lambda
       ((g$x1$12287$T@1Mj g$x2$12288$T@1Mj)
        ((case-lambda
           ((g$d$12289$T@1Mj)
            (values
              g$d$12289$T@1Mj
              (- g$x1$12287$T@1Mj
                 (* g$d$12289$T@1Mj g$x2$12288$T@1Mj)))))
         (div0 g$x1$12287$T@1Mj g$x2$12288$T@1Mj)))))
   (g$list->vector$12131$T@1Mj
     g$list->vector$12462$T@1Mj
     (case-lambda
       ((g$lst$12290$T@1Mj) (apply vector g$lst$12290$T@1Mj))))
   (g$list->string$12132$T@1Mj
     g$list->string$12463$T@1Mj
     (case-lambda
       ((g$lst$12291$T@1Mj) (apply string g$lst$12291$T@1Mj))))
   (g$char?$12133$T@1Mj
     g$char?$12464$T@1Mj
     (case-lambda
       ((g$obj$12292$T@1Mj)
        (clr-is-internal 'system.char g$obj$12292$T@1Mj))))
   (g$vector?$12134$T@1Mj
     g$vector?$12465$T@1Mj
     (case-lambda
       ((g$obj$12293$T@1Mj)
        (clr-is-internal 'system.object[] g$obj$12293$T@1Mj))))
   (g$bytevector?$12135$T@1Mj
     g$bytevector?$12466$T@1Mj
     (case-lambda
       ((g$obj$12294$T@1Mj)
        (clr-is-internal 'system.byte[] g$obj$12294$T@1Mj))))
   (g$symbol?$12136$T@1Mj
     g$symbol?$12467$T@1Mj
     (case-lambda
       ((g$obj$12295$T@1Mj)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12295$T@1Mj))))
   (g$boolean?$12137$T@1Mj
     g$boolean?$12468$T@1Mj
     (case-lambda
       ((g$obj$12296$T@1Mj)
        (clr-is-internal 'system.boolean g$obj$12296$T@1Mj))))
   (g$procedure?$12138$T@1Mj
     g$procedure?$12469$T@1Mj
     (case-lambda
       ((g$obj$12297$T@1Mj)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12297$T@1Mj))))
   (g$fixnum?$12139$T@1Mj
     g$fixnum?$12470$T@1Mj
     (case-lambda
       ((g$obj$12298$T@1Mj)
        (clr-is-internal 'system.int32 g$obj$12298$T@1Mj))))
   (g$flonum?$12140$T@1Mj
     g$flonum?$12471$T@1Mj
     (case-lambda
       ((g$obj$12299$T@1Mj)
        (clr-is-internal 'system.double g$obj$12299$T@1Mj))))
   (g$fixnum-width$12141$T@1Mj
     g$fixnum-width$12472$T@1Mj
     (case-lambda (() '32)))
   (g$vector-fill!$12142$T@1Mj
     g$vector-fill!$12473$T@1Mj
     (case-lambda
       ((g$vec$12300$T@1Mj g$val$12301$T@1Mj)
        ((case-lambda
           ((g$len$12302$T@1Mj)
            (letrec ((g$loop$12303$T@1Mj
                       (case-lambda
                         ((g$i$12304$T@1Mj)
                          (if (fx=? g$i$12304$T@1Mj g$len$12302$T@1Mj)
                            (if '#f '#f (void))
                            (begin
                              (vector-set!
                                g$vec$12300$T@1Mj
                                g$i$12304$T@1Mj
                                g$val$12301$T@1Mj)
                              (g$loop$12303$T@1Mj
                                (fx+ g$i$12304$T@1Mj '1))))))))
              (g$loop$12303$T@1Mj '0))))
         (vector-length g$vec$12300$T@1Mj)))))
   (g$xcons$12143$T@1Mj
     g$xcons$12474$T@1Mj
     (case-lambda
       ((g$x$12305$T@1Mj g$y$12306$T@1Mj)
        (cons g$y$12306$T@1Mj g$x$12305$T@1Mj))))
   (g$reverse$12144$T@1Mj
     g$reverse$12475$T@1Mj
     (case-lambda
       ((g$lst$12307$T@1Mj)
        (g$fold-left$11727$T@1Mj
          g$xcons$12143$T@1Mj
          '()
          g$lst$12307$T@1Mj))))
   (g$caar$12145$T@1Mj
     g$caar$12476$T@1Mj
     (case-lambda ((g$x$12308$T@1Mj) (car (car g$x$12308$T@1Mj)))))
   (g$cadr$12146$T@1Mj
     g$cadr$12477$T@1Mj
     (case-lambda ((g$x$12309$T@1Mj) (car (cdr g$x$12309$T@1Mj)))))
   (g$cdar$12147$T@1Mj
     g$cdar$12478$T@1Mj
     (case-lambda ((g$x$12310$T@1Mj) (cdr (car g$x$12310$T@1Mj)))))
   (g$cddr$12148$T@1Mj
     g$cddr$12479$T@1Mj
     (case-lambda ((g$x$12311$T@1Mj) (cdr (cdr g$x$12311$T@1Mj)))))
   (g$caaar$12149$T@1Mj
     g$caaar$12480$T@1Mj
     (case-lambda
       ((g$x$12312$T@1Mj) (g$caar$12145$T@1Mj (car g$x$12312$T@1Mj)))))
   (g$caadr$12150$T@1Mj
     g$caadr$12481$T@1Mj
     (case-lambda
       ((g$x$12313$T@1Mj) (g$caar$12145$T@1Mj (cdr g$x$12313$T@1Mj)))))
   (g$cadar$12151$T@1Mj
     g$cadar$12482$T@1Mj
     (case-lambda
       ((g$x$12314$T@1Mj) (g$cadr$12146$T@1Mj (car g$x$12314$T@1Mj)))))
   (g$caddr$12152$T@1Mj
     g$caddr$12483$T@1Mj
     (case-lambda
       ((g$x$12315$T@1Mj) (g$cadr$12146$T@1Mj (cdr g$x$12315$T@1Mj)))))
   (g$cdaar$12153$T@1Mj
     g$cdaar$12484$T@1Mj
     (case-lambda
       ((g$x$12316$T@1Mj) (g$cdar$12147$T@1Mj (car g$x$12316$T@1Mj)))))
   (g$cdadr$12154$T@1Mj
     g$cdadr$12485$T@1Mj
     (case-lambda
       ((g$x$12317$T@1Mj) (g$cdar$12147$T@1Mj (cdr g$x$12317$T@1Mj)))))
   (g$cddar$12155$T@1Mj
     g$cddar$12486$T@1Mj
     (case-lambda
       ((g$x$12318$T@1Mj) (g$cddr$12148$T@1Mj (car g$x$12318$T@1Mj)))))
   (g$cdddr$12156$T@1Mj
     g$cdddr$12487$T@1Mj
     (case-lambda
       ((g$x$12319$T@1Mj) (g$cddr$12148$T@1Mj (cdr g$x$12319$T@1Mj)))))
   (g$caaaar$12157$T@1Mj
     g$caaaar$12488$T@1Mj
     (case-lambda
       ((g$x$12320$T@1Mj) (g$caaar$12149$T@1Mj (car g$x$12320$T@1Mj)))))
   (g$caaadr$12158$T@1Mj
     g$caaadr$12489$T@1Mj
     (case-lambda
       ((g$x$12321$T@1Mj) (g$caaar$12149$T@1Mj (cdr g$x$12321$T@1Mj)))))
   (g$caadar$12159$T@1Mj
     g$caadar$12490$T@1Mj
     (case-lambda
       ((g$x$12322$T@1Mj) (g$caadr$12150$T@1Mj (car g$x$12322$T@1Mj)))))
   (g$caaddr$12160$T@1Mj
     g$caaddr$12491$T@1Mj
     (case-lambda
       ((g$x$12323$T@1Mj) (g$caadr$12150$T@1Mj (cdr g$x$12323$T@1Mj)))))
   (g$cadaar$12161$T@1Mj
     g$cadaar$12492$T@1Mj
     (case-lambda
       ((g$x$12324$T@1Mj) (g$cadar$12151$T@1Mj (car g$x$12324$T@1Mj)))))
   (g$cadadr$12162$T@1Mj
     g$cadadr$12493$T@1Mj
     (case-lambda
       ((g$x$12325$T@1Mj) (g$cadar$12151$T@1Mj (cdr g$x$12325$T@1Mj)))))
   (g$caddar$12163$T@1Mj
     g$caddar$12494$T@1Mj
     (case-lambda
       ((g$x$12326$T@1Mj) (g$caddr$12152$T@1Mj (car g$x$12326$T@1Mj)))))
   (g$cadddr$12164$T@1Mj
     g$cadddr$12495$T@1Mj
     (case-lambda
       ((g$x$12327$T@1Mj) (g$caddr$12152$T@1Mj (cdr g$x$12327$T@1Mj)))))
   (g$cdaaar$12165$T@1Mj
     g$cdaaar$12496$T@1Mj
     (case-lambda
       ((g$x$12328$T@1Mj) (g$cdaar$12153$T@1Mj (car g$x$12328$T@1Mj)))))
   (g$cdaadr$12166$T@1Mj
     g$cdaadr$12497$T@1Mj
     (case-lambda
       ((g$x$12329$T@1Mj) (g$cdaar$12153$T@1Mj (cdr g$x$12329$T@1Mj)))))
   (g$cdadar$12167$T@1Mj
     g$cdadar$12498$T@1Mj
     (case-lambda
       ((g$x$12330$T@1Mj) (g$cdadr$12154$T@1Mj (car g$x$12330$T@1Mj)))))
   (g$cdaddr$12168$T@1Mj
     g$cdaddr$12499$T@1Mj
     (case-lambda
       ((g$x$12331$T@1Mj) (g$cdadr$12154$T@1Mj (cdr g$x$12331$T@1Mj)))))
   (g$cddaar$12169$T@1Mj
     g$cddaar$12500$T@1Mj
     (case-lambda
       ((g$x$12332$T@1Mj) (g$cddar$12155$T@1Mj (car g$x$12332$T@1Mj)))))
   (g$cddadr$12170$T@1Mj
     g$cddadr$12501$T@1Mj
     (case-lambda
       ((g$x$12333$T@1Mj) (g$cddar$12155$T@1Mj (cdr g$x$12333$T@1Mj)))))
   (g$cdddar$12171$T@1Mj
     g$cdddar$12502$T@1Mj
     (case-lambda
       ((g$x$12334$T@1Mj) (g$cdddr$12156$T@1Mj (car g$x$12334$T@1Mj)))))
   (g$cddddr$12172$T@1Mj
     g$cddddr$12503$T@1Mj
     (case-lambda
       ((g$x$12335$T@1Mj) (g$cdddr$12156$T@1Mj (cdr g$x$12335$T@1Mj)))))
   (g$positive?$12173$T@1Mj
     g$positive?$12504$T@1Mj
     (case-lambda
       ((g$r$12336$T@1Mj)
        (begin
          (if (not (real-valued? g$r$12336$T@1Mj))
            (assertion-violation
              'positive?
              '"not a real"
              g$r$12336$T@1Mj)
            (void))
          (< '0 g$r$12336$T@1Mj)))))
   (g$negative?$12174$T@1Mj
     g$negative?$12505$T@1Mj
     (case-lambda
       ((g$r$12337$T@1Mj)
        (begin
          (if (not (real-valued? g$r$12337$T@1Mj))
            (assertion-violation
              'negative?
              '"not a real"
              g$r$12337$T@1Mj)
            (void))
          (> '0 g$r$12337$T@1Mj)))))
   (g$zero?$12175$T@1Mj
     g$zero?$12506$T@1Mj
     (case-lambda
       ((g$z$12338$T@1Mj)
        (begin
          (if (not (number? g$z$12338$T@1Mj))
            (assertion-violation 'zero? '"not a number" g$z$12338$T@1Mj)
            (void))
          (= '0 g$z$12338$T@1Mj)))))
   (g$even?$12176$T@1Mj
     g$even?$12507$T@1Mj
     (case-lambda
       ((g$n$12339$T@1Mj)
        (begin
          (if (not (integer-valued? g$n$12339$T@1Mj))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12339$T@1Mj)
            (void))
          (= '0 (g$mod$12127$T@1Mj g$n$12339$T@1Mj '2))))))
   (g$odd?$12177$T@1Mj
     g$odd?$12508$T@1Mj
     (case-lambda
       ((g$n$12340$T@1Mj)
        (begin
          (if (not (integer-valued? g$n$12340$T@1Mj))
            (assertion-violation 'odd? '"not a integer" g$n$12340$T@1Mj)
            (void))
          (= '1 (g$mod$12127$T@1Mj g$n$12340$T@1Mj '2))))))
   (g$max$12178$T@1Mj
     g$max$12509$T@1Mj
     (case-lambda
       ((g$a$12341$T@1Mj . g$rest$12342$T@1Mj)
        (begin
          (if (not (real-valued? g$a$12341$T@1Mj))
            (assertion-violation 'max '"not a real" g$a$12341$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$12343$T@1Mj g$b$12344$T@1Mj)
               ((case-lambda
                  ((g$r$12345$T@1Mj)
                   (if ((case-lambda
                          ((g$t$12346$T@1Mj)
                           (if g$t$12346$T@1Mj
                             g$t$12346$T@1Mj
                             (begin '#f (inexact? g$b$12344$T@1Mj)))))
                        (inexact? g$a$12343$T@1Mj))
                     (inexact g$r$12345$T@1Mj)
                     g$r$12345$T@1Mj)))
                (if (< g$a$12343$T@1Mj g$b$12344$T@1Mj)
                  g$b$12344$T@1Mj
                  g$a$12343$T@1Mj))))
            g$a$12341$T@1Mj
            g$rest$12342$T@1Mj)))))
   (g$min$12179$T@1Mj
     g$min$12510$T@1Mj
     (case-lambda
       ((g$a$12347$T@1Mj . g$rest$12348$T@1Mj)
        (begin
          (if (not (real-valued? g$a$12347$T@1Mj))
            (assertion-violation 'min '"not a real" g$a$12347$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$12349$T@1Mj g$b$12350$T@1Mj)
               ((case-lambda
                  ((g$r$12351$T@1Mj)
                   (if ((case-lambda
                          ((g$t$12352$T@1Mj)
                           (if g$t$12352$T@1Mj
                             g$t$12352$T@1Mj
                             (begin '#f (inexact? g$b$12350$T@1Mj)))))
                        (inexact? g$a$12349$T@1Mj))
                     (inexact g$r$12351$T@1Mj)
                     g$r$12351$T@1Mj)))
                (if (> g$a$12349$T@1Mj g$b$12350$T@1Mj)
                  g$b$12350$T@1Mj
                  g$a$12349$T@1Mj))))
            g$a$12347$T@1Mj
            g$rest$12348$T@1Mj)))))
   (g$gcd$12180$T@1Mj
     g$gcd$12511$T@1Mj
     (case-lambda
       (g$nums$12353$T@1Mj
        ((case-lambda
           ((g$t$12354$T@1Mj)
            (if (eqv? g$t$12354$T@1Mj '0)
              '0
              (if (eqv? g$t$12354$T@1Mj '1)
                ((case-lambda
                   ((g$n$12355$T@1Mj)
                    (begin
                      (if (not (integer-valued? g$n$12355$T@1Mj))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12355$T@1Mj)
                        (void))
                      (abs g$n$12355$T@1Mj))))
                 (car g$nums$12353$T@1Mj))
                (if (eqv? g$t$12354$T@1Mj '2)
                  ((case-lambda
                     ((g$a$12356$T@1Mj g$b$12357$T@1Mj)
                      (begin
                        (if (not (integer-valued? g$a$12356$T@1Mj))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12356$T@1Mj)
                          (void))
                        (if (not (integer-valued? g$b$12357$T@1Mj))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12357$T@1Mj)
                          (void))
                        (if (g$zero?$12175$T@1Mj g$b$12357$T@1Mj)
                          (abs g$a$12356$T@1Mj)
                          (abs (g$gcd$12180$T@1Mj
                                 g$b$12357$T@1Mj
                                 (g$mod$12127$T@1Mj
                                   g$a$12356$T@1Mj
                                   g$b$12357$T@1Mj)))))))
                   (car g$nums$12353$T@1Mj)
                   (g$cadr$12146$T@1Mj g$nums$12353$T@1Mj))
                  (g$fold-left$11727$T@1Mj
                    g$gcd$12180$T@1Mj
                    (abs (car g$nums$12353$T@1Mj))
                    (cdr g$nums$12353$T@1Mj)))))))
         (length g$nums$12353$T@1Mj)))))
   (g$lcm$12181$T@1Mj
     g$lcm$12512$T@1Mj
     (case-lambda
       (g$nums$12358$T@1Mj
        ((case-lambda
           ((g$t$12359$T@1Mj)
            (if (eqv? g$t$12359$T@1Mj '0)
              '1
              (if (eqv? g$t$12359$T@1Mj '1)
                ((case-lambda
                   ((g$n$12360$T@1Mj)
                    (begin
                      (if (not (integer-valued? g$n$12360$T@1Mj))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12360$T@1Mj)
                        (void))
                      (abs g$n$12360$T@1Mj))))
                 (car g$nums$12358$T@1Mj))
                (if (eqv? g$t$12359$T@1Mj '2)
                  ((case-lambda
                     ((g$a$12361$T@1Mj g$b$12362$T@1Mj)
                      (begin
                        (if (not (integer-valued? g$a$12361$T@1Mj))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12361$T@1Mj)
                          (void))
                        (if (not (integer-valued? g$b$12362$T@1Mj))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12362$T@1Mj)
                          (void))
                        (if ((case-lambda
                               ((g$t$12363$T@1Mj)
                                (if g$t$12363$T@1Mj
                                  g$t$12363$T@1Mj
                                  (begin
                                    '#f
                                    (g$zero?$12175$T@1Mj
                                      g$b$12362$T@1Mj)))))
                             (g$zero?$12175$T@1Mj g$a$12361$T@1Mj))
                          '0
                          (abs (* (/ g$a$12361$T@1Mj
                                     (g$gcd$12180$T@1Mj
                                       g$a$12361$T@1Mj
                                       g$b$12362$T@1Mj))
                                  g$b$12362$T@1Mj))))))
                   (car g$nums$12358$T@1Mj)
                   (g$cadr$12146$T@1Mj g$nums$12358$T@1Mj))
                  (g$fold-left$11727$T@1Mj
                    g$lcm$12181$T@1Mj
                    (abs (car g$nums$12358$T@1Mj))
                    (cdr g$nums$12358$T@1Mj)))))))
         (length g$nums$12358$T@1Mj)))))
   (g$string=?$12222$T@1Mj
     g$string=?$12513$T@1Mj
     (case-lambda
       ((g$a$12364$T@1Mj g$b$12365$T@1Mj . g$rest$12366$T@1Mj)
        (begin
          (if (not (string? g$a$12364$T@1Mj))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12364$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12367$T@1Mj)
               (begin
                 (if (not (string? g$x$12367$T@1Mj))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12367$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12368$T@1Mj)
                     (begin
                       (set! g$a$12364$T@1Mj g$x$12367$T@1Mj)
                       g$r$12368$T@1Mj)))
                  (fx=?
                    (string-compare g$a$12364$T@1Mj g$x$12367$T@1Mj)
                    '0)))))
            (cons g$b$12365$T@1Mj g$rest$12366$T@1Mj))))))
   (g$string<?$12223$T@1Mj
     g$string<?$12514$T@1Mj
     (case-lambda
       ((g$a$12369$T@1Mj g$b$12370$T@1Mj . g$rest$12371$T@1Mj)
        (begin
          (if (not (string? g$a$12369$T@1Mj))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12369$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12372$T@1Mj)
               (begin
                 (if (not (string? g$x$12372$T@1Mj))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12372$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12373$T@1Mj)
                     (begin
                       (set! g$a$12369$T@1Mj g$x$12372$T@1Mj)
                       g$r$12373$T@1Mj)))
                  (fx<?
                    (string-compare g$a$12369$T@1Mj g$x$12372$T@1Mj)
                    '0)))))
            (cons g$b$12370$T@1Mj g$rest$12371$T@1Mj))))))
   (g$string>?$12224$T@1Mj
     g$string>?$12515$T@1Mj
     (case-lambda
       ((g$a$12374$T@1Mj g$b$12375$T@1Mj . g$rest$12376$T@1Mj)
        (begin
          (if (not (string? g$a$12374$T@1Mj))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12374$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12377$T@1Mj)
               (begin
                 (if (not (string? g$x$12377$T@1Mj))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12377$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12378$T@1Mj)
                     (begin
                       (set! g$a$12374$T@1Mj g$x$12377$T@1Mj)
                       g$r$12378$T@1Mj)))
                  (fx>?
                    (string-compare g$a$12374$T@1Mj g$x$12377$T@1Mj)
                    '0)))))
            (cons g$b$12375$T@1Mj g$rest$12376$T@1Mj))))))
   (g$string<=?$12225$T@1Mj
     g$string<=?$12516$T@1Mj
     (case-lambda
       ((g$a$12379$T@1Mj g$b$12380$T@1Mj . g$rest$12381$T@1Mj)
        (begin
          (if (not (string? g$a$12379$T@1Mj))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12379$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12382$T@1Mj)
               (begin
                 (if (not (string? g$x$12382$T@1Mj))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12382$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12383$T@1Mj)
                     (begin
                       (set! g$a$12379$T@1Mj g$x$12382$T@1Mj)
                       g$r$12383$T@1Mj)))
                  (fx<=?
                    (string-compare g$a$12379$T@1Mj g$x$12382$T@1Mj)
                    '0)))))
            (cons g$b$12380$T@1Mj g$rest$12381$T@1Mj))))))
   (g$string>=?$12226$T@1Mj
     g$string>=?$12517$T@1Mj
     (case-lambda
       ((g$a$12384$T@1Mj g$b$12385$T@1Mj . g$rest$12386$T@1Mj)
        (begin
          (if (not (string? g$a$12384$T@1Mj))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12384$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12387$T@1Mj)
               (begin
                 (if (not (string? g$x$12387$T@1Mj))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12387$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12388$T@1Mj)
                     (begin
                       (set! g$a$12384$T@1Mj g$x$12387$T@1Mj)
                       g$r$12388$T@1Mj)))
                  (fx>=?
                    (string-compare g$a$12384$T@1Mj g$x$12387$T@1Mj)
                    '0)))))
            (cons g$b$12385$T@1Mj g$rest$12386$T@1Mj))))))
   (g$symbol=?$12227$T@1Mj
     g$symbol=?$12518$T@1Mj
     (case-lambda
       ((g$a$12389$T@1Mj g$b$12390$T@1Mj . g$rest$12391$T@1Mj)
        (begin
          (if (not (g$symbol?$12136$T@1Mj g$a$12389$T@1Mj))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12389$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12392$T@1Mj)
               (begin
                 (if (not (g$symbol?$12136$T@1Mj g$x$12392$T@1Mj))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12392$T@1Mj)
                   (void))
                 (eq? g$a$12389$T@1Mj g$x$12392$T@1Mj))))
            (cons g$b$12390$T@1Mj g$rest$12391$T@1Mj))))))
   (g$boolean=?$12228$T@1Mj
     g$boolean=?$12519$T@1Mj
     (case-lambda
       ((g$a$12393$T@1Mj g$b$12394$T@1Mj . g$rest$12395$T@1Mj)
        (begin
          (if (not (g$boolean?$12137$T@1Mj g$a$12393$T@1Mj))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12393$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12396$T@1Mj)
               (begin
                 (if (not (g$boolean?$12137$T@1Mj g$x$12396$T@1Mj))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12396$T@1Mj)
                   (void))
                 (eq? g$a$12393$T@1Mj g$x$12396$T@1Mj))))
            (cons g$b$12394$T@1Mj g$rest$12395$T@1Mj))))))
   (g$char=?$12269$T@1Mj
     g$char=?$12520$T@1Mj
     (case-lambda
       ((g$a$12397$T@1Mj g$b$12398$T@1Mj . g$rest$12399$T@1Mj)
        (begin
          (if (not (g$char?$12133$T@1Mj g$a$12397$T@1Mj))
            (assertion-violation 'char=? '"not a char" g$a$12397$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12400$T@1Mj)
               (begin
                 (if (not (g$char?$12133$T@1Mj g$x$12400$T@1Mj))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12400$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12401$T@1Mj)
                     (begin
                       (set! g$a$12397$T@1Mj g$x$12400$T@1Mj)
                       g$r$12401$T@1Mj)))
                  (fx=?
                    (char->integer g$a$12397$T@1Mj)
                    (char->integer g$x$12400$T@1Mj))))))
            (cons g$b$12398$T@1Mj g$rest$12399$T@1Mj))))))
   (g$char<?$12270$T@1Mj
     g$char<?$12521$T@1Mj
     (case-lambda
       ((g$a$12402$T@1Mj g$b$12403$T@1Mj . g$rest$12404$T@1Mj)
        (begin
          (if (not (g$char?$12133$T@1Mj g$a$12402$T@1Mj))
            (assertion-violation 'char<? '"not a char" g$a$12402$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12405$T@1Mj)
               (begin
                 (if (not (g$char?$12133$T@1Mj g$x$12405$T@1Mj))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12405$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12406$T@1Mj)
                     (begin
                       (set! g$a$12402$T@1Mj g$x$12405$T@1Mj)
                       g$r$12406$T@1Mj)))
                  (fx<?
                    (char->integer g$a$12402$T@1Mj)
                    (char->integer g$x$12405$T@1Mj))))))
            (cons g$b$12403$T@1Mj g$rest$12404$T@1Mj))))))
   (g$char>?$12271$T@1Mj
     g$char>?$12522$T@1Mj
     (case-lambda
       ((g$a$12407$T@1Mj g$b$12408$T@1Mj . g$rest$12409$T@1Mj)
        (begin
          (if (not (g$char?$12133$T@1Mj g$a$12407$T@1Mj))
            (assertion-violation 'char>? '"not a char" g$a$12407$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12410$T@1Mj)
               (begin
                 (if (not (g$char?$12133$T@1Mj g$x$12410$T@1Mj))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12410$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12411$T@1Mj)
                     (begin
                       (set! g$a$12407$T@1Mj g$x$12410$T@1Mj)
                       g$r$12411$T@1Mj)))
                  (fx>?
                    (char->integer g$a$12407$T@1Mj)
                    (char->integer g$x$12410$T@1Mj))))))
            (cons g$b$12408$T@1Mj g$rest$12409$T@1Mj))))))
   (g$char<=?$12272$T@1Mj
     g$char<=?$12523$T@1Mj
     (case-lambda
       ((g$a$12412$T@1Mj g$b$12413$T@1Mj . g$rest$12414$T@1Mj)
        (begin
          (if (not (g$char?$12133$T@1Mj g$a$12412$T@1Mj))
            (assertion-violation 'char<=? '"not a char" g$a$12412$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12415$T@1Mj)
               (begin
                 (if (not (g$char?$12133$T@1Mj g$x$12415$T@1Mj))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12415$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12416$T@1Mj)
                     (begin
                       (set! g$a$12412$T@1Mj g$x$12415$T@1Mj)
                       g$r$12416$T@1Mj)))
                  (fx<=?
                    (char->integer g$a$12412$T@1Mj)
                    (char->integer g$x$12415$T@1Mj))))))
            (cons g$b$12413$T@1Mj g$rest$12414$T@1Mj))))))
   (g$char>=?$12273$T@1Mj
     g$char>=?$12524$T@1Mj
     (case-lambda
       ((g$a$12417$T@1Mj g$b$12418$T@1Mj . g$rest$12419$T@1Mj)
        (begin
          (if (not (g$char?$12133$T@1Mj g$a$12417$T@1Mj))
            (assertion-violation 'char>=? '"not a char" g$a$12417$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$12420$T@1Mj)
               (begin
                 (if (not (g$char?$12133$T@1Mj g$x$12420$T@1Mj))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12420$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$12421$T@1Mj)
                     (begin
                       (set! g$a$12417$T@1Mj g$x$12420$T@1Mj)
                       g$r$12421$T@1Mj)))
                  (fx>=?
                    (char->integer g$a$12417$T@1Mj)
                    (char->integer g$x$12420$T@1Mj))))))
            (cons g$b$12418$T@1Mj g$rest$12419$T@1Mj))))))
   (g$rationalize$12274$T@1Mj
     g$rationalize$12525$T@1Mj
     (case-lambda
       ((g$x$12422$T@1Mj g$e$12423$T@1Mj)
        (if (if (infinite? g$x$12422$T@1Mj)
              (begin '#f (infinite? g$e$12423$T@1Mj))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12424$T@1Mj)
              (if (if (exact? g$x$12422$T@1Mj)
                    (begin '#f (exact? g$e$12423$T@1Mj))
                    '#f)
                g$r$12424$T@1Mj
                (inexact g$r$12424$T@1Mj))))
           (apply
             /
             (g$find-ratio$12275$T@1Mj
               g$x$12422$T@1Mj
               g$e$12423$T@1Mj)))))))
   (g$find-ratio$12275$T@1Mj
     g$find-ratio$12526$T@1Mj
     (case-lambda
       ((g$x$12425$T@1Mj g$e$12426$T@1Mj)
        (g$find-ratio-between$12276$T@1Mj
          (- g$x$12425$T@1Mj g$e$12426$T@1Mj)
          (+ g$x$12425$T@1Mj g$e$12426$T@1Mj)))))
   (g$find-ratio-between$12276$T@1Mj
     g$find-ratio-between$12527$T@1Mj
     (case-lambda
       ((g$x$12427$T@1Mj g$y$12428$T@1Mj)
        (letrec* ((g$sr$12429$T@1Mj
                    (case-lambda
                      ((g$x$12431$T@1Mj g$y$12432$T@1Mj)
                       ((case-lambda
                          ((g$fx$12433$T@1Mj g$fy$12434$T@1Mj)
                           (if (>= g$fx$12433$T@1Mj g$x$12431$T@1Mj)
                             (list g$fx$12433$T@1Mj '1)
                             (if (= g$fx$12433$T@1Mj g$fy$12434$T@1Mj)
                               ((case-lambda
                                  ((g$rat$12435$T@1Mj)
                                   (list
                                     (+ (g$cadr$12146$T@1Mj
                                          g$rat$12435$T@1Mj)
                                        (* g$fx$12433$T@1Mj
                                           (car g$rat$12435$T@1Mj)))
                                     (car g$rat$12435$T@1Mj))))
                                (g$sr$12429$T@1Mj
                                  (/ (- g$y$12432$T@1Mj
                                        g$fy$12434$T@1Mj))
                                  (/ (- g$x$12431$T@1Mj
                                        g$fx$12433$T@1Mj))))
                               (list (+ '1 g$fx$12433$T@1Mj) '1)))))
                        (exact (floor g$x$12431$T@1Mj))
                        (exact (floor g$y$12432$T@1Mj)))))))
          (if (< g$y$12428$T@1Mj g$x$12427$T@1Mj)
            (g$find-ratio-between$12276$T@1Mj
              g$y$12428$T@1Mj
              g$x$12427$T@1Mj)
            (if (>= g$x$12427$T@1Mj g$y$12428$T@1Mj)
              (list g$x$12427$T@1Mj '1)
              (if (g$positive?$12173$T@1Mj g$x$12427$T@1Mj)
                (g$sr$12429$T@1Mj g$x$12427$T@1Mj g$y$12428$T@1Mj)
                (if (g$negative?$12174$T@1Mj g$y$12428$T@1Mj)
                  ((case-lambda
                     ((g$rat$12430$T@1Mj)
                      (list
                        (- (car g$rat$12430$T@1Mj))
                        (g$cadr$12146$T@1Mj g$rat$12430$T@1Mj))))
                   (g$sr$12429$T@1Mj
                     (- g$y$12428$T@1Mj)
                     (- g$x$12427$T@1Mj)))
                  '(0 1)))))))))
   (g$vector-map$12277$T@1Mj
     g$vector-map$12528$T@1Mj
     (case-lambda
       ((g$p$12436$T@1Mj g$vec1$12437$T@1Mj . g$vecs$12438$T@1Mj)
        ((case-lambda
           ((g$len$12439$T@1Mj)
            ((case-lambda
               ((g$res$12440$T@1Mj)
                (letrec ((g$loop$12441$T@1Mj
                           (case-lambda
                             ((g$i$12442$T@1Mj)
                              (if (fx=?
                                    g$i$12442$T@1Mj
                                    g$len$12439$T@1Mj)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12440$T@1Mj)
                                (begin
                                  (vector-set!
                                    g$res$12440$T@1Mj
                                    g$i$12442$T@1Mj
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$11724$T@1Mj
                                             (case-lambda
                                               ((g$x$12443$T@1Mj)
                                                (vector-ref
                                                  g$x$12443$T@1Mj
                                                  g$i$12442$T@1Mj)))
                                             (cons
                                               g$vec1$12437$T@1Mj
                                               g$vecs$12438$T@1Mj)))))
                                      g$p$12436$T@1Mj))
                                  (g$loop$12441$T@1Mj
                                    (fx+ g$i$12442$T@1Mj '1))))))))
                  (g$loop$12441$T@1Mj '0))))
             (make-vector g$len$12439$T@1Mj))))
         (vector-length g$vec1$12437$T@1Mj)))))
   (g$vector-for-each$12278$T@1Mj
     g$vector-for-each$12529$T@1Mj
     (case-lambda
       ((g$p$12444$T@1Mj g$vec1$12445$T@1Mj . g$vecs$12446$T@1Mj)
        ((case-lambda
           ((g$len$12447$T@1Mj)
            (letrec ((g$loop$12448$T@1Mj
                       (case-lambda
                         ((g$i$12449$T@1Mj)
                          (if (fx=? g$i$12449$T@1Mj g$len$12447$T@1Mj)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$11724$T@1Mj
                                       (case-lambda
                                         ((g$x$12450$T@1Mj)
                                          (vector-ref
                                            g$x$12450$T@1Mj
                                            g$i$12449$T@1Mj)))
                                       (cons
                                         g$vec1$12445$T@1Mj
                                         g$vecs$12446$T@1Mj)))))
                                g$p$12444$T@1Mj)
                              (g$loop$12448$T@1Mj
                                (fx+ g$i$12449$T@1Mj '1))))))))
              (g$loop$12448$T@1Mj '0))))
         (vector-length g$vec1$12445$T@1Mj)))))
   (g$string-for-each$12279$T@1Mj
     g$string-for-each$12530$T@1Mj
     (case-lambda
       ((g$p$12451$T@1Mj g$str1$12452$T@1Mj . g$strs$12453$T@1Mj)
        ((case-lambda
           ((g$len$12454$T@1Mj)
            (letrec ((g$loop$12455$T@1Mj
                       (case-lambda
                         ((g$i$12456$T@1Mj)
                          (if (fx=? g$i$12456$T@1Mj g$len$12454$T@1Mj)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$11724$T@1Mj
                                       (case-lambda
                                         ((g$x$12457$T@1Mj)
                                          (string-ref
                                            g$x$12457$T@1Mj
                                            g$i$12456$T@1Mj)))
                                       (cons
                                         g$str1$12452$T@1Mj
                                         g$strs$12453$T@1Mj)))))
                                g$p$12451$T@1Mj)
                              (g$loop$12455$T@1Mj
                                (fx+ g$i$12456$T@1Mj '1))))))))
              (g$loop$12455$T@1Mj '0))))
         (string-length g$str1$12452$T@1Mj))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12532$T@1Mj
     g$using$12566$T@1Mj
     (clr-using-internal 'system))
   (g$using$12534$T@1Mj
     g$using$12567$T@1Mj
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$12535$T@1Mj
     g$make-eq-hashtable$12568$T@1Mj
     (case-lambda
       (() (g$make-eq-hashtable$12535$T@1Mj '32))
       ((g$k$12544$T@1Mj)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12544$T@1Mj)))))
   (g$make-eqv-hashtable$12536$T@1Mj
     g$make-eqv-hashtable$12569$T@1Mj
     (case-lambda
       (() (g$make-eqv-hashtable$12536$T@1Mj '32))
       ((g$k$12545$T@1Mj)
        (make-hashtable eqv-hash eqv? g$k$12545$T@1Mj))))
   (g$hashtable-size$12537$T@1Mj
     g$hashtable-size$12570$T@1Mj
     (case-lambda
       ((g$ht$12546$T@1Mj)
        (clr-call-internal 'hashtable 'get_count g$ht$12546$T@1Mj))))
   (g$hashtable-ref$12538$T@1Mj
     g$hashtable-ref$12571$T@1Mj
     (case-lambda
       ((g$ht$12547$T@1Mj g$key$12548$T@1Mj g$default$12549$T@1Mj)
        (letrec* ((g$r$12550$T@1Mj
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$12547$T@1Mj
                      g$key$12548$T@1Mj)))
          (if ((case-lambda
                 ((g$t$12551$T@1Mj)
                  (if g$t$12551$T@1Mj
                    g$t$12551$T@1Mj
                    (begin
                      '#f
                      (g$hashtable-contains?$12541$T@1Mj
                        g$ht$12547$T@1Mj
                        g$key$12548$T@1Mj)))))
               (not (null? g$r$12550$T@1Mj)))
            g$r$12550$T@1Mj
            g$default$12549$T@1Mj)))))
   (g$hashtable-set!$12539$T@1Mj
     g$hashtable-set!$12572$T@1Mj
     (case-lambda
       ((g$ht$12552$T@1Mj g$key$12553$T@1Mj g$obj$12554$T@1Mj)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12552$T@1Mj
          g$key$12553$T@1Mj
          g$obj$12554$T@1Mj))))
   (g$hashtable-delete!$12540$T@1Mj
     g$hashtable-delete!$12573$T@1Mj
     (case-lambda
       ((g$ht$12555$T@1Mj g$key$12556$T@1Mj)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12555$T@1Mj
          g$key$12556$T@1Mj))))
   (g$hashtable-contains?$12541$T@1Mj
     g$hashtable-contains?$12574$T@1Mj
     (case-lambda
       ((g$ht$12557$T@1Mj g$key$12558$T@1Mj)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12557$T@1Mj
          g$key$12558$T@1Mj))))
   (g$hashtable-update!$12542$T@1Mj
     g$hashtable-update!$12575$T@1Mj
     (case-lambda
       ((g$ht$12559$T@1Mj
          g$key$12560$T@1Mj
          g$proc$12561$T@1Mj
          g$default$12562$T@1Mj)
        (g$hashtable-set!$12539$T@1Mj
          g$ht$12559$T@1Mj
          g$key$12560$T@1Mj
          (g$proc$12561$T@1Mj
            (g$hashtable-ref$12538$T@1Mj
              g$ht$12559$T@1Mj
              g$key$12560$T@1Mj
              g$default$12562$T@1Mj))))))
   (g$hashtable-clear!$12543$T@1Mj
     g$hashtable-clear!$12576$T@1Mj
     (case-lambda
       ((g$ht$12563$T@1Mj)
        (g$hashtable-clear!$12543$T@1Mj g$ht$12563$T@1Mj '32))
       ((g$ht$12564$T@1Mj g$k$12565$T@1Mj)
        (clr-call-internal 'hashtable 'clear g$ht$12564$T@1Mj)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12578$T@1Mj
     g$using$12585$T@1Mj
     (clr-using-internal 'system.io))
   (g$file-exists?$12579$T@1Mj
     g$file-exists?$12586$T@1Mj
     (case-lambda
       ((g$fn$12582$T@1Mj)
        (clr-call-internal 'file 'exists '() g$fn$12582$T@1Mj))))
   (g$delete-file$12580$T@1Mj
     g$delete-file$12587$T@1Mj
     (case-lambda
       ((g$fn$12583$T@1Mj)
        (clr-call-internal 'file 'delete '() g$fn$12583$T@1Mj))))
   (g$get-directory-name$12581$T@1Mj
     g$get-directory-name$12588$T@1Mj
     (case-lambda
       ((g$path$12584$T@1Mj)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12584$T@1Mj)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12589$T@1Mj
     g$native-endianness$12700$T@1Mj
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$12590$T@1Mj
     g$bytevector-u16-ref$12701$T@1Mj
     (case-lambda
       ((g$bytevector$12618$T@1Mj
          g$k$12619$T@1Mj
          g$endianness$12620$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12618$T@1Mj
          g$k$12619$T@1Mj
          g$endianness$12620$T@1Mj
          '2))))
   (g$bytevector-s16-ref$12591$T@1Mj
     g$bytevector-s16-ref$12702$T@1Mj
     (case-lambda
       ((g$bytevector$12621$T@1Mj
          g$k$12622$T@1Mj
          g$endianness$12623$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12621$T@1Mj
          g$k$12622$T@1Mj
          g$endianness$12623$T@1Mj
          '2))))
   (g$bytevector-u16-native-ref$12592$T@1Mj
     g$bytevector-u16-native-ref$12703$T@1Mj
     (case-lambda
       ((g$bytevector$12624$T@1Mj g$k$12625$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12624$T@1Mj
          g$k$12625$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '2))))
   (g$bytevector-s16-native-ref$12593$T@1Mj
     g$bytevector-s16-native-ref$12704$T@1Mj
     (case-lambda
       ((g$bytevector$12626$T@1Mj g$k$12627$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12626$T@1Mj
          g$k$12627$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '2))))
   (g$bytevector-u16-set!$12594$T@1Mj
     g$bytevector-u16-set!$12705$T@1Mj
     (case-lambda
       ((g$bytevector$12628$T@1Mj
          g$k$12629$T@1Mj
          g$n$12630$T@1Mj
          g$endianness$12631$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12628$T@1Mj
          g$k$12629$T@1Mj
          g$n$12630$T@1Mj
          g$endianness$12631$T@1Mj
          '2))))
   (g$bytevector-s16-set!$12595$T@1Mj
     g$bytevector-s16-set!$12706$T@1Mj
     (case-lambda
       ((g$bytevector$12632$T@1Mj
          g$k$12633$T@1Mj
          g$n$12634$T@1Mj
          g$endianness$12635$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12632$T@1Mj
          g$k$12633$T@1Mj
          g$n$12634$T@1Mj
          g$endianness$12635$T@1Mj
          '2))))
   (g$bytevector-u16-native-set!$12596$T@1Mj
     g$bytevector-u16-native-set!$12707$T@1Mj
     (case-lambda
       ((g$bytevector$12636$T@1Mj g$k$12637$T@1Mj g$n$12638$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12636$T@1Mj
          g$k$12637$T@1Mj
          g$n$12638$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '2))))
   (g$bytevector-s16-native-set!$12597$T@1Mj
     g$bytevector-s16-native-set!$12708$T@1Mj
     (case-lambda
       ((g$bytevector$12639$T@1Mj g$k$12640$T@1Mj g$n$12641$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12639$T@1Mj
          g$k$12640$T@1Mj
          g$n$12641$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '2))))
   (g$bytevector-u32-ref$12598$T@1Mj
     g$bytevector-u32-ref$12709$T@1Mj
     (case-lambda
       ((g$bytevector$12642$T@1Mj
          g$k$12643$T@1Mj
          g$endianness$12644$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12642$T@1Mj
          g$k$12643$T@1Mj
          g$endianness$12644$T@1Mj
          '4))))
   (g$bytevector-s32-ref$12599$T@1Mj
     g$bytevector-s32-ref$12710$T@1Mj
     (case-lambda
       ((g$bytevector$12645$T@1Mj
          g$k$12646$T@1Mj
          g$endianness$12647$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12645$T@1Mj
          g$k$12646$T@1Mj
          g$endianness$12647$T@1Mj
          '4))))
   (g$bytevector-u32-native-ref$12600$T@1Mj
     g$bytevector-u32-native-ref$12711$T@1Mj
     (case-lambda
       ((g$bytevector$12648$T@1Mj g$k$12649$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12648$T@1Mj
          g$k$12649$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '4))))
   (g$bytevector-s32-native-ref$12601$T@1Mj
     g$bytevector-s32-native-ref$12712$T@1Mj
     (case-lambda
       ((g$bytevector$12650$T@1Mj g$k$12651$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12650$T@1Mj
          g$k$12651$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '4))))
   (g$bytevector-u32-set!$12602$T@1Mj
     g$bytevector-u32-set!$12713$T@1Mj
     (case-lambda
       ((g$bytevector$12652$T@1Mj
          g$k$12653$T@1Mj
          g$n$12654$T@1Mj
          g$endianness$12655$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12652$T@1Mj
          g$k$12653$T@1Mj
          g$n$12654$T@1Mj
          g$endianness$12655$T@1Mj
          '4))))
   (g$bytevector-s32-set!$12603$T@1Mj
     g$bytevector-s32-set!$12714$T@1Mj
     (case-lambda
       ((g$bytevector$12656$T@1Mj
          g$k$12657$T@1Mj
          g$n$12658$T@1Mj
          g$endianness$12659$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12656$T@1Mj
          g$k$12657$T@1Mj
          g$n$12658$T@1Mj
          g$endianness$12659$T@1Mj
          '4))))
   (g$bytevector-u32-native-set!$12604$T@1Mj
     g$bytevector-u32-native-set!$12715$T@1Mj
     (case-lambda
       ((g$bytevector$12660$T@1Mj g$k$12661$T@1Mj g$n$12662$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12660$T@1Mj
          g$k$12661$T@1Mj
          g$n$12662$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '4))))
   (g$bytevector-s32-native-set!$12605$T@1Mj
     g$bytevector-s32-native-set!$12716$T@1Mj
     (case-lambda
       ((g$bytevector$12663$T@1Mj g$k$12664$T@1Mj g$n$12665$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12663$T@1Mj
          g$k$12664$T@1Mj
          g$n$12665$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '4))))
   (g$bytevector-u64-ref$12606$T@1Mj
     g$bytevector-u64-ref$12717$T@1Mj
     (case-lambda
       ((g$bytevector$12666$T@1Mj
          g$k$12667$T@1Mj
          g$endianness$12668$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12666$T@1Mj
          g$k$12667$T@1Mj
          g$endianness$12668$T@1Mj
          '8))))
   (g$bytevector-s64-ref$12607$T@1Mj
     g$bytevector-s64-ref$12718$T@1Mj
     (case-lambda
       ((g$bytevector$12669$T@1Mj
          g$k$12670$T@1Mj
          g$endianness$12671$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12669$T@1Mj
          g$k$12670$T@1Mj
          g$endianness$12671$T@1Mj
          '8))))
   (g$bytevector-u64-native-ref$12608$T@1Mj
     g$bytevector-u64-native-ref$12719$T@1Mj
     (case-lambda
       ((g$bytevector$12672$T@1Mj g$k$12673$T@1Mj)
        (bytevector-uint-ref
          g$bytevector$12672$T@1Mj
          g$k$12673$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '8))))
   (g$bytevector-s64-native-ref$12609$T@1Mj
     g$bytevector-s64-native-ref$12720$T@1Mj
     (case-lambda
       ((g$bytevector$12674$T@1Mj g$k$12675$T@1Mj)
        (bytevector-sint-ref
          g$bytevector$12674$T@1Mj
          g$k$12675$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '8))))
   (g$bytevector-u64-set!$12610$T@1Mj
     g$bytevector-u64-set!$12721$T@1Mj
     (case-lambda
       ((g$bytevector$12676$T@1Mj
          g$k$12677$T@1Mj
          g$n$12678$T@1Mj
          g$endianness$12679$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12676$T@1Mj
          g$k$12677$T@1Mj
          g$n$12678$T@1Mj
          g$endianness$12679$T@1Mj
          '8))))
   (g$bytevector-s64-set!$12611$T@1Mj
     g$bytevector-s64-set!$12722$T@1Mj
     (case-lambda
       ((g$bytevector$12680$T@1Mj
          g$k$12681$T@1Mj
          g$n$12682$T@1Mj
          g$endianness$12683$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12680$T@1Mj
          g$k$12681$T@1Mj
          g$n$12682$T@1Mj
          g$endianness$12683$T@1Mj
          '8))))
   (g$bytevector-u64-native-set!$12612$T@1Mj
     g$bytevector-u64-native-set!$12723$T@1Mj
     (case-lambda
       ((g$bytevector$12684$T@1Mj g$k$12685$T@1Mj g$n$12686$T@1Mj)
        (bytevector-uint-set!
          g$bytevector$12684$T@1Mj
          g$k$12685$T@1Mj
          g$n$12686$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '8))))
   (g$bytevector-s64-native-set!$12613$T@1Mj
     g$bytevector-s64-native-set!$12724$T@1Mj
     (case-lambda
       ((g$bytevector$12687$T@1Mj g$k$12688$T@1Mj g$n$12689$T@1Mj)
        (bytevector-sint-set!
          g$bytevector$12687$T@1Mj
          g$k$12688$T@1Mj
          g$n$12689$T@1Mj
          (g$native-endianness$12589$T@1Mj)
          '8))))
   (g$bytevector-ieee-single-native-ref$12614$T@1Mj
     g$bytevector-ieee-single-native-ref$12725$T@1Mj
     (case-lambda
       ((g$bytevector$12690$T@1Mj g$k$12691$T@1Mj)
        (if (not (g$zero?$12506$T@1Mj
                   (g$mod$12458$T@1Mj g$k$12691$T@1Mj '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$12691$T@1Mj)
          (bytevector-ieee-single-ref
            g$bytevector$12690$T@1Mj
            g$k$12691$T@1Mj
            (g$native-endianness$12589$T@1Mj))))))
   (g$bytevector-ieee-double-native-ref$12615$T@1Mj
     g$bytevector-ieee-double-native-ref$12726$T@1Mj
     (case-lambda
       ((g$bytevector$12692$T@1Mj g$k$12693$T@1Mj)
        (if (not (g$zero?$12506$T@1Mj
                   (g$mod$12458$T@1Mj g$k$12693$T@1Mj '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$12693$T@1Mj)
          (bytevector-ieee-double-ref
            g$bytevector$12692$T@1Mj
            g$k$12693$T@1Mj
            (g$native-endianness$12589$T@1Mj))))))
   (g$bytevector-ieee-single-native-set!$12616$T@1Mj
     g$bytevector-ieee-single-native-set!$12727$T@1Mj
     (case-lambda
       ((g$bytevector$12694$T@1Mj g$k$12695$T@1Mj g$x$12696$T@1Mj)
        (if (not (g$zero?$12506$T@1Mj
                   (g$mod$12458$T@1Mj g$k$12695$T@1Mj '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$12695$T@1Mj)
          (bytevector-ieee-single-set!
            g$bytevector$12694$T@1Mj
            g$k$12695$T@1Mj
            g$x$12696$T@1Mj
            (g$native-endianness$12589$T@1Mj))))))
   (g$bytevector-ieee-double-native-set!$12617$T@1Mj
     g$bytevector-ieee-double-native-set!$12728$T@1Mj
     (case-lambda
       ((g$bytevector$12697$T@1Mj g$k$12698$T@1Mj g$x$12699$T@1Mj)
        (if (not (g$zero?$12506$T@1Mj
                   (g$mod$12458$T@1Mj g$k$12698$T@1Mj '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$12698$T@1Mj)
          (bytevector-ieee-double-set!
            g$bytevector$12697$T@1Mj
            g$k$12698$T@1Mj
            g$x$12699$T@1Mj
            (g$native-endianness$12589$T@1Mj)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5837$12729$T@1Mj
     g$5837$13131$T@1Mj
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5840$T@1Mj
       '#f
       '#f
       '#()))
   (g$5839$12730$T@1Mj g$5839$13132$T@1Mj '#f)
   (g$5838$12731$T@1Mj
     g$5838$13133$T@1Mj
     (make-record-constructor-descriptor
       g$5837$12729$T@1Mj
       '#f
       g$5839$12730$T@1Mj))
   (g$&condition?$12734$T@1Mj
     g$&condition?$13134$T@1Mj
     (record-predicate g$5837$12729$T@1Mj))
   (g$make-&condition$12735$T@1Mj
     g$make-&condition$13135$T@1Mj
     (record-constructor g$5838$12731$T@1Mj))
   (g$&condition-rtd$12736$T@1Mj
     g$&condition-rtd$13136$T@1Mj
     g$5837$12729$T@1Mj)
   (g$&condition-rcd$12737$T@1Mj
     g$&condition-rcd$13137$T@1Mj
     g$5838$12731$T@1Mj)
   (g$5874$12835$T@1Mj
     g$5874$13138$T@1Mj
     (make-record-type-descriptor
       '&message
       g$5837$12729$T@1Mj
       'g$5877$T@1Mj
       '#f
       '#f
       '#((immutable message))))
   (g$5876$12836$T@1Mj g$5876$13139$T@1Mj '#f)
   (g$5875$12837$T@1Mj
     g$5875$13140$T@1Mj
     (make-record-constructor-descriptor
       g$5874$12835$T@1Mj
       g$5838$12731$T@1Mj
       g$5876$12836$T@1Mj))
   (g$p?$12840$T@1Mj
     g$p?$13141$T@1Mj
     (record-predicate g$5874$12835$T@1Mj))
   (g$make-message-condition$12841$T@1Mj
     g$make-message-condition$13142$T@1Mj
     (record-constructor g$5875$12837$T@1Mj))
   (g$condition-message$12842$T@1Mj
     g$condition-message$13143$T@1Mj
     (record-accessor g$5874$12835$T@1Mj '0))
   (g$message-condition?$12843$T@1Mj
     g$message-condition?$13144$T@1Mj
     (condition-predicate g$5874$12835$T@1Mj))
   (g$condition-message$12844$T@1Mj
     g$condition-message$13145$T@1Mj
     (condition-accessor
       g$5874$12835$T@1Mj
       g$condition-message$12842$T@1Mj))
   (g$&message-rtd$12845$T@1Mj
     g$&message-rtd$13146$T@1Mj
     g$5874$12835$T@1Mj)
   (g$&message-rcd$12846$T@1Mj
     g$&message-rcd$13147$T@1Mj
     g$5875$12837$T@1Mj)
   (g$5889$12847$T@1Mj
     g$5889$13148$T@1Mj
     (make-record-type-descriptor
       '&warning
       g$5837$12729$T@1Mj
       'g$5892$T@1Mj
       '#f
       '#f
       '#()))
   (g$5891$12848$T@1Mj g$5891$13149$T@1Mj '#f)
   (g$5890$12849$T@1Mj
     g$5890$13150$T@1Mj
     (make-record-constructor-descriptor
       g$5889$12847$T@1Mj
       g$5838$12731$T@1Mj
       g$5891$12848$T@1Mj))
   (g$p?$12852$T@1Mj
     g$p?$13151$T@1Mj
     (record-predicate g$5889$12847$T@1Mj))
   (g$make-warning$12853$T@1Mj
     g$make-warning$13152$T@1Mj
     (record-constructor g$5890$12849$T@1Mj))
   (g$warning?$12854$T@1Mj
     g$warning?$13153$T@1Mj
     (condition-predicate g$5889$12847$T@1Mj))
   (g$&warning-rtd$12855$T@1Mj
     g$&warning-rtd$13154$T@1Mj
     g$5889$12847$T@1Mj)
   (g$&warning-rcd$12856$T@1Mj
     g$&warning-rcd$13155$T@1Mj
     g$5890$12849$T@1Mj)
   (g$5902$12857$T@1Mj
     g$5902$13156$T@1Mj
     (make-record-type-descriptor
       '&serious
       g$5837$12729$T@1Mj
       'g$5905$T@1Mj
       '#f
       '#f
       '#()))
   (g$5904$12858$T@1Mj g$5904$13157$T@1Mj '#f)
   (g$5903$12859$T@1Mj
     g$5903$13158$T@1Mj
     (make-record-constructor-descriptor
       g$5902$12857$T@1Mj
       g$5838$12731$T@1Mj
       g$5904$12858$T@1Mj))
   (g$p?$12862$T@1Mj
     g$p?$13159$T@1Mj
     (record-predicate g$5902$12857$T@1Mj))
   (g$make-serious-condition$12863$T@1Mj
     g$make-serious-condition$13160$T@1Mj
     (record-constructor g$5903$12859$T@1Mj))
   (g$serious-condition?$12864$T@1Mj
     g$serious-condition?$13161$T@1Mj
     (condition-predicate g$5902$12857$T@1Mj))
   (g$&serious-rtd$12865$T@1Mj
     g$&serious-rtd$13162$T@1Mj
     g$5902$12857$T@1Mj)
   (g$&serious-rcd$12866$T@1Mj
     g$&serious-rcd$13163$T@1Mj
     g$5903$12859$T@1Mj)
   (g$5915$12867$T@1Mj
     g$5915$13164$T@1Mj
     (make-record-type-descriptor
       '&error
       g$5902$12857$T@1Mj
       'g$5918$T@1Mj
       '#f
       '#f
       '#()))
   (g$5917$12868$T@1Mj g$5917$13165$T@1Mj '#f)
   (g$5916$12869$T@1Mj
     g$5916$13166$T@1Mj
     (make-record-constructor-descriptor
       g$5915$12867$T@1Mj
       g$5903$12859$T@1Mj
       g$5917$12868$T@1Mj))
   (g$p?$12872$T@1Mj
     g$p?$13167$T@1Mj
     (record-predicate g$5915$12867$T@1Mj))
   (g$make-error$12873$T@1Mj
     g$make-error$13168$T@1Mj
     (record-constructor g$5916$12869$T@1Mj))
   (g$error?$12874$T@1Mj
     g$error?$13169$T@1Mj
     (condition-predicate g$5915$12867$T@1Mj))
   (g$&error-rtd$12875$T@1Mj
     g$&error-rtd$13170$T@1Mj
     g$5915$12867$T@1Mj)
   (g$&error-rcd$12876$T@1Mj
     g$&error-rcd$13171$T@1Mj
     g$5916$12869$T@1Mj)
   (g$5928$12877$T@1Mj
     g$5928$13172$T@1Mj
     (make-record-type-descriptor
       '&violation
       g$5902$12857$T@1Mj
       'g$5931$T@1Mj
       '#f
       '#f
       '#()))
   (g$5930$12878$T@1Mj g$5930$13173$T@1Mj '#f)
   (g$5929$12879$T@1Mj
     g$5929$13174$T@1Mj
     (make-record-constructor-descriptor
       g$5928$12877$T@1Mj
       g$5903$12859$T@1Mj
       g$5930$12878$T@1Mj))
   (g$p?$12882$T@1Mj
     g$p?$13175$T@1Mj
     (record-predicate g$5928$12877$T@1Mj))
   (g$make-violation$12883$T@1Mj
     g$make-violation$13176$T@1Mj
     (record-constructor g$5929$12879$T@1Mj))
   (g$violation?$12884$T@1Mj
     g$violation?$13177$T@1Mj
     (condition-predicate g$5928$12877$T@1Mj))
   (g$&violation-rtd$12885$T@1Mj
     g$&violation-rtd$13178$T@1Mj
     g$5928$12877$T@1Mj)
   (g$&violation-rcd$12886$T@1Mj
     g$&violation-rcd$13179$T@1Mj
     g$5929$12879$T@1Mj)
   (g$5941$12887$T@1Mj
     g$5941$13180$T@1Mj
     (make-record-type-descriptor
       '&assertion
       g$5928$12877$T@1Mj
       'g$5944$T@1Mj
       '#f
       '#f
       '#()))
   (g$5943$12888$T@1Mj g$5943$13181$T@1Mj '#f)
   (g$5942$12889$T@1Mj
     g$5942$13182$T@1Mj
     (make-record-constructor-descriptor
       g$5941$12887$T@1Mj
       g$5929$12879$T@1Mj
       g$5943$12888$T@1Mj))
   (g$p?$12892$T@1Mj
     g$p?$13183$T@1Mj
     (record-predicate g$5941$12887$T@1Mj))
   (g$make-assertion-violation$12893$T@1Mj
     g$make-assertion-violation$13184$T@1Mj
     (record-constructor g$5942$12889$T@1Mj))
   (g$assertion-violation?$12894$T@1Mj
     g$assertion-violation?$13185$T@1Mj
     (condition-predicate g$5941$12887$T@1Mj))
   (g$&assertion-rtd$12895$T@1Mj
     g$&assertion-rtd$13186$T@1Mj
     g$5941$12887$T@1Mj)
   (g$&assertion-rcd$12896$T@1Mj
     g$&assertion-rcd$13187$T@1Mj
     g$5942$12889$T@1Mj)
   (g$5954$12898$T@1Mj
     g$5954$13188$T@1Mj
     (make-record-type-descriptor
       '&irritants
       g$5837$12729$T@1Mj
       'g$5957$T@1Mj
       '#f
       '#f
       '#((immutable irritants))))
   (g$5956$12899$T@1Mj g$5956$13189$T@1Mj '#f)
   (g$5955$12900$T@1Mj
     g$5955$13190$T@1Mj
     (make-record-constructor-descriptor
       g$5954$12898$T@1Mj
       g$5838$12731$T@1Mj
       g$5956$12899$T@1Mj))
   (g$p?$12903$T@1Mj
     g$p?$13191$T@1Mj
     (record-predicate g$5954$12898$T@1Mj))
   (g$make-irritants-condition$12904$T@1Mj
     g$make-irritants-condition$13192$T@1Mj
     (record-constructor g$5955$12900$T@1Mj))
   (g$condition-irritants$12905$T@1Mj
     g$condition-irritants$13193$T@1Mj
     (record-accessor g$5954$12898$T@1Mj '0))
   (g$irritants-condition?$12906$T@1Mj
     g$irritants-condition?$13194$T@1Mj
     (condition-predicate g$5954$12898$T@1Mj))
   (g$condition-irritants$12907$T@1Mj
     g$condition-irritants$13195$T@1Mj
     (condition-accessor
       g$5954$12898$T@1Mj
       g$condition-irritants$12905$T@1Mj))
   (g$&irritants-rtd$12908$T@1Mj
     g$&irritants-rtd$13196$T@1Mj
     g$5954$12898$T@1Mj)
   (g$&irritants-rcd$12909$T@1Mj
     g$&irritants-rcd$13197$T@1Mj
     g$5955$12900$T@1Mj)
   (g$5969$12911$T@1Mj
     g$5969$13198$T@1Mj
     (make-record-type-descriptor
       '&who
       g$5837$12729$T@1Mj
       'g$5972$T@1Mj
       '#f
       '#f
       '#((immutable who))))
   (g$5971$12912$T@1Mj g$5971$13199$T@1Mj '#f)
   (g$5970$12913$T@1Mj
     g$5970$13200$T@1Mj
     (make-record-constructor-descriptor
       g$5969$12911$T@1Mj
       g$5838$12731$T@1Mj
       g$5971$12912$T@1Mj))
   (g$p?$12916$T@1Mj
     g$p?$13201$T@1Mj
     (record-predicate g$5969$12911$T@1Mj))
   (g$make-who-condition$12917$T@1Mj
     g$make-who-condition$13202$T@1Mj
     (record-constructor g$5970$12913$T@1Mj))
   (g$condition-who$12918$T@1Mj
     g$condition-who$13203$T@1Mj
     (record-accessor g$5969$12911$T@1Mj '0))
   (g$who-condition?$12919$T@1Mj
     g$who-condition?$13204$T@1Mj
     (condition-predicate g$5969$12911$T@1Mj))
   (g$condition-who$12920$T@1Mj
     g$condition-who$13205$T@1Mj
     (condition-accessor
       g$5969$12911$T@1Mj
       g$condition-who$12918$T@1Mj))
   (g$&who-rtd$12921$T@1Mj g$&who-rtd$13206$T@1Mj g$5969$12911$T@1Mj)
   (g$&who-rcd$12922$T@1Mj g$&who-rcd$13207$T@1Mj g$5970$12913$T@1Mj)
   (g$5984$12923$T@1Mj
     g$5984$13208$T@1Mj
     (make-record-type-descriptor
       '&non-continuable
       g$5928$12877$T@1Mj
       'g$5987$T@1Mj
       '#f
       '#f
       '#()))
   (g$5986$12924$T@1Mj g$5986$13209$T@1Mj '#f)
   (g$5985$12925$T@1Mj
     g$5985$13210$T@1Mj
     (make-record-constructor-descriptor
       g$5984$12923$T@1Mj
       g$5929$12879$T@1Mj
       g$5986$12924$T@1Mj))
   (g$p?$12928$T@1Mj
     g$p?$13211$T@1Mj
     (record-predicate g$5984$12923$T@1Mj))
   (g$make-non-continuable-violation$12929$T@1Mj
     g$make-non-continuable-violation$13212$T@1Mj
     (record-constructor g$5985$12925$T@1Mj))
   (g$non-continuable-violation?$12930$T@1Mj
     g$non-continuable-violation?$13213$T@1Mj
     (condition-predicate g$5984$12923$T@1Mj))
   (g$&non-continuable-rtd$12931$T@1Mj
     g$&non-continuable-rtd$13214$T@1Mj
     g$5984$12923$T@1Mj)
   (g$&non-continuable-rcd$12932$T@1Mj
     g$&non-continuable-rcd$13215$T@1Mj
     g$5985$12925$T@1Mj)
   (g$5997$12933$T@1Mj
     g$5997$13216$T@1Mj
     (make-record-type-descriptor
       '&implementation-restriction
       g$5928$12877$T@1Mj
       'g$6000$T@1Mj
       '#f
       '#f
       '#()))
   (g$5999$12934$T@1Mj g$5999$13217$T@1Mj '#f)
   (g$5998$12935$T@1Mj
     g$5998$13218$T@1Mj
     (make-record-constructor-descriptor
       g$5997$12933$T@1Mj
       g$5929$12879$T@1Mj
       g$5999$12934$T@1Mj))
   (g$p?$12938$T@1Mj
     g$p?$13219$T@1Mj
     (record-predicate g$5997$12933$T@1Mj))
   (g$make-implementation-restriction-violation$12939$T@1Mj
     g$make-implementation-restriction-violation$13220$T@1Mj
     (record-constructor g$5998$12935$T@1Mj))
   (g$implementation-restriction-violation?$12940$T@1Mj
     g$implementation-restriction-violation?$13221$T@1Mj
     (condition-predicate g$5997$12933$T@1Mj))
   (g$&implementation-restriction-rtd$12941$T@1Mj
     g$&implementation-restriction-rtd$13222$T@1Mj
     g$5997$12933$T@1Mj)
   (g$&implementation-restriction-rcd$12942$T@1Mj
     g$&implementation-restriction-rcd$13223$T@1Mj
     g$5998$12935$T@1Mj)
   (g$6010$12943$T@1Mj
     g$6010$13224$T@1Mj
     (make-record-type-descriptor
       '&lexical
       g$5928$12877$T@1Mj
       'g$6013$T@1Mj
       '#f
       '#f
       '#()))
   (g$6012$12944$T@1Mj g$6012$13225$T@1Mj '#f)
   (g$6011$12945$T@1Mj
     g$6011$13226$T@1Mj
     (make-record-constructor-descriptor
       g$6010$12943$T@1Mj
       g$5929$12879$T@1Mj
       g$6012$12944$T@1Mj))
   (g$p?$12948$T@1Mj
     g$p?$13227$T@1Mj
     (record-predicate g$6010$12943$T@1Mj))
   (g$make-lexical-violation$12949$T@1Mj
     g$make-lexical-violation$13228$T@1Mj
     (record-constructor g$6011$12945$T@1Mj))
   (g$lexical-violation?$12950$T@1Mj
     g$lexical-violation?$13229$T@1Mj
     (condition-predicate g$6010$12943$T@1Mj))
   (g$&lexical-rtd$12951$T@1Mj
     g$&lexical-rtd$13230$T@1Mj
     g$6010$12943$T@1Mj)
   (g$&lexical-rcd$12952$T@1Mj
     g$&lexical-rcd$13231$T@1Mj
     g$6011$12945$T@1Mj)
   (g$6023$12955$T@1Mj
     g$6023$13232$T@1Mj
     (make-record-type-descriptor
       '&syntax
       g$5928$12877$T@1Mj
       'g$6026$T@1Mj
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6025$12956$T@1Mj g$6025$13233$T@1Mj '#f)
   (g$6024$12957$T@1Mj
     g$6024$13234$T@1Mj
     (make-record-constructor-descriptor
       g$6023$12955$T@1Mj
       g$5929$12879$T@1Mj
       g$6025$12956$T@1Mj))
   (g$p?$12960$T@1Mj
     g$p?$13235$T@1Mj
     (record-predicate g$6023$12955$T@1Mj))
   (g$make-syntax-violation$12961$T@1Mj
     g$make-syntax-violation$13236$T@1Mj
     (record-constructor g$6024$12957$T@1Mj))
   (g$syntax-violation-form$12962$T@1Mj
     g$syntax-violation-form$13237$T@1Mj
     (record-accessor g$6023$12955$T@1Mj '0))
   (g$syntax-violation-subform$12963$T@1Mj
     g$syntax-violation-subform$13238$T@1Mj
     (record-accessor g$6023$12955$T@1Mj '1))
   (g$syntax-violation?$12964$T@1Mj
     g$syntax-violation?$13239$T@1Mj
     (condition-predicate g$6023$12955$T@1Mj))
   (g$syntax-violation-form$12965$T@1Mj
     g$syntax-violation-form$13240$T@1Mj
     (condition-accessor
       g$6023$12955$T@1Mj
       g$syntax-violation-form$12962$T@1Mj))
   (g$syntax-violation-subform$12966$T@1Mj
     g$syntax-violation-subform$13241$T@1Mj
     (condition-accessor
       g$6023$12955$T@1Mj
       g$syntax-violation-subform$12963$T@1Mj))
   (g$&syntax-rtd$12967$T@1Mj
     g$&syntax-rtd$13242$T@1Mj
     g$6023$12955$T@1Mj)
   (g$&syntax-rcd$12968$T@1Mj
     g$&syntax-rcd$13243$T@1Mj
     g$6024$12957$T@1Mj)
   (g$6040$12969$T@1Mj
     g$6040$13244$T@1Mj
     (make-record-type-descriptor
       '&undefined
       g$5928$12877$T@1Mj
       'g$6043$T@1Mj
       '#f
       '#f
       '#()))
   (g$6042$12970$T@1Mj g$6042$13245$T@1Mj '#f)
   (g$6041$12971$T@1Mj
     g$6041$13246$T@1Mj
     (make-record-constructor-descriptor
       g$6040$12969$T@1Mj
       g$5929$12879$T@1Mj
       g$6042$12970$T@1Mj))
   (g$p?$12974$T@1Mj
     g$p?$13247$T@1Mj
     (record-predicate g$6040$12969$T@1Mj))
   (g$make-undefined-violation$12975$T@1Mj
     g$make-undefined-violation$13248$T@1Mj
     (record-constructor g$6041$12971$T@1Mj))
   (g$undefined-violation?$12976$T@1Mj
     g$undefined-violation?$13249$T@1Mj
     (condition-predicate g$6040$12969$T@1Mj))
   (g$&undefined-rtd$12977$T@1Mj
     g$&undefined-rtd$13250$T@1Mj
     g$6040$12969$T@1Mj)
   (g$&undefined-rcd$12978$T@1Mj
     g$&undefined-rcd$13251$T@1Mj
     g$6041$12971$T@1Mj)
   (g$6053$12979$T@1Mj
     g$6053$13252$T@1Mj
     (make-record-type-descriptor
       '&i/o
       g$5915$12867$T@1Mj
       'g$6056$T@1Mj
       '#f
       '#f
       '#()))
   (g$6055$12980$T@1Mj g$6055$13253$T@1Mj '#f)
   (g$6054$12981$T@1Mj
     g$6054$13254$T@1Mj
     (make-record-constructor-descriptor
       g$6053$12979$T@1Mj
       g$5916$12869$T@1Mj
       g$6055$12980$T@1Mj))
   (g$p?$12984$T@1Mj
     g$p?$13255$T@1Mj
     (record-predicate g$6053$12979$T@1Mj))
   (g$make-i/o-error$12985$T@1Mj
     g$make-i/o-error$13256$T@1Mj
     (record-constructor g$6054$12981$T@1Mj))
   (g$i/o-error?$12986$T@1Mj
     g$i/o-error?$13257$T@1Mj
     (condition-predicate g$6053$12979$T@1Mj))
   (g$&i/o-rtd$12987$T@1Mj g$&i/o-rtd$13258$T@1Mj g$6053$12979$T@1Mj)
   (g$&i/o-rcd$12988$T@1Mj g$&i/o-rcd$13259$T@1Mj g$6054$12981$T@1Mj)
   (g$6066$12989$T@1Mj
     g$6066$13260$T@1Mj
     (make-record-type-descriptor
       '&i/o-read
       g$6053$12979$T@1Mj
       'g$6069$T@1Mj
       '#f
       '#f
       '#()))
   (g$6068$12990$T@1Mj g$6068$13261$T@1Mj '#f)
   (g$6067$12991$T@1Mj
     g$6067$13262$T@1Mj
     (make-record-constructor-descriptor
       g$6066$12989$T@1Mj
       g$6054$12981$T@1Mj
       g$6068$12990$T@1Mj))
   (g$p?$12994$T@1Mj
     g$p?$13263$T@1Mj
     (record-predicate g$6066$12989$T@1Mj))
   (g$make-i/o-read-error$12995$T@1Mj
     g$make-i/o-read-error$13264$T@1Mj
     (record-constructor g$6067$12991$T@1Mj))
   (g$i/o-read-error?$12996$T@1Mj
     g$i/o-read-error?$13265$T@1Mj
     (condition-predicate g$6066$12989$T@1Mj))
   (g$&i/o-read-rtd$12997$T@1Mj
     g$&i/o-read-rtd$13266$T@1Mj
     g$6066$12989$T@1Mj)
   (g$&i/o-read-rcd$12998$T@1Mj
     g$&i/o-read-rcd$13267$T@1Mj
     g$6067$12991$T@1Mj)
   (g$6079$12999$T@1Mj
     g$6079$13268$T@1Mj
     (make-record-type-descriptor
       '&i/o-write
       g$6053$12979$T@1Mj
       'g$6082$T@1Mj
       '#f
       '#f
       '#()))
   (g$6081$13000$T@1Mj g$6081$13269$T@1Mj '#f)
   (g$6080$13001$T@1Mj
     g$6080$13270$T@1Mj
     (make-record-constructor-descriptor
       g$6079$12999$T@1Mj
       g$6054$12981$T@1Mj
       g$6081$13000$T@1Mj))
   (g$p?$13004$T@1Mj
     g$p?$13271$T@1Mj
     (record-predicate g$6079$12999$T@1Mj))
   (g$make-i/o-write-error$13005$T@1Mj
     g$make-i/o-write-error$13272$T@1Mj
     (record-constructor g$6080$13001$T@1Mj))
   (g$i/o-write-error?$13006$T@1Mj
     g$i/o-write-error?$13273$T@1Mj
     (condition-predicate g$6079$12999$T@1Mj))
   (g$&i/o-write-rtd$13007$T@1Mj
     g$&i/o-write-rtd$13274$T@1Mj
     g$6079$12999$T@1Mj)
   (g$&i/o-write-rcd$13008$T@1Mj
     g$&i/o-write-rcd$13275$T@1Mj
     g$6080$13001$T@1Mj)
   (g$6092$13010$T@1Mj
     g$6092$13276$T@1Mj
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6053$12979$T@1Mj
       'g$6095$T@1Mj
       '#f
       '#f
       '#((immutable position))))
   (g$6094$13011$T@1Mj g$6094$13277$T@1Mj '#f)
   (g$6093$13012$T@1Mj
     g$6093$13278$T@1Mj
     (make-record-constructor-descriptor
       g$6092$13010$T@1Mj
       g$6054$12981$T@1Mj
       g$6094$13011$T@1Mj))
   (g$p?$13015$T@1Mj
     g$p?$13279$T@1Mj
     (record-predicate g$6092$13010$T@1Mj))
   (g$make-i/o-invalid-position-error$13016$T@1Mj
     g$make-i/o-invalid-position-error$13280$T@1Mj
     (record-constructor g$6093$13012$T@1Mj))
   (g$i/o-error-position$13017$T@1Mj
     g$i/o-error-position$13281$T@1Mj
     (record-accessor g$6092$13010$T@1Mj '0))
   (g$i/o-invalid-position-error?$13018$T@1Mj
     g$i/o-invalid-position-error?$13282$T@1Mj
     (condition-predicate g$6092$13010$T@1Mj))
   (g$i/o-error-position$13019$T@1Mj
     g$i/o-error-position$13283$T@1Mj
     (condition-accessor
       g$6092$13010$T@1Mj
       g$i/o-error-position$13017$T@1Mj))
   (g$&i/o-invalid-position-rtd$13020$T@1Mj
     g$&i/o-invalid-position-rtd$13284$T@1Mj
     g$6092$13010$T@1Mj)
   (g$&i/o-invalid-position-rcd$13021$T@1Mj
     g$&i/o-invalid-position-rcd$13285$T@1Mj
     g$6093$13012$T@1Mj)
   (g$6107$13023$T@1Mj
     g$6107$13286$T@1Mj
     (make-record-type-descriptor
       '&i/o-filename
       g$6053$12979$T@1Mj
       'g$6110$T@1Mj
       '#f
       '#f
       '#((immutable filename))))
   (g$6109$13024$T@1Mj g$6109$13287$T@1Mj '#f)
   (g$6108$13025$T@1Mj
     g$6108$13288$T@1Mj
     (make-record-constructor-descriptor
       g$6107$13023$T@1Mj
       g$6054$12981$T@1Mj
       g$6109$13024$T@1Mj))
   (g$p?$13028$T@1Mj
     g$p?$13289$T@1Mj
     (record-predicate g$6107$13023$T@1Mj))
   (g$make-i/o-filename-error$13029$T@1Mj
     g$make-i/o-filename-error$13290$T@1Mj
     (record-constructor g$6108$13025$T@1Mj))
   (g$i/o-error-filename$13030$T@1Mj
     g$i/o-error-filename$13291$T@1Mj
     (record-accessor g$6107$13023$T@1Mj '0))
   (g$i/o-filename-error?$13031$T@1Mj
     g$i/o-filename-error?$13292$T@1Mj
     (condition-predicate g$6107$13023$T@1Mj))
   (g$i/o-error-filename$13032$T@1Mj
     g$i/o-error-filename$13293$T@1Mj
     (condition-accessor
       g$6107$13023$T@1Mj
       g$i/o-error-filename$13030$T@1Mj))
   (g$&i/o-filename-rtd$13033$T@1Mj
     g$&i/o-filename-rtd$13294$T@1Mj
     g$6107$13023$T@1Mj)
   (g$&i/o-filename-rcd$13034$T@1Mj
     g$&i/o-filename-rcd$13295$T@1Mj
     g$6108$13025$T@1Mj)
   (g$6122$13035$T@1Mj
     g$6122$13296$T@1Mj
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6107$13023$T@1Mj
       'g$6125$T@1Mj
       '#f
       '#f
       '#()))
   (g$6124$13036$T@1Mj g$6124$13297$T@1Mj '#f)
   (g$6123$13037$T@1Mj
     g$6123$13298$T@1Mj
     (make-record-constructor-descriptor
       g$6122$13035$T@1Mj
       g$6108$13025$T@1Mj
       g$6124$13036$T@1Mj))
   (g$p?$13040$T@1Mj
     g$p?$13299$T@1Mj
     (record-predicate g$6122$13035$T@1Mj))
   (g$make-i/o-file-protection-error$13041$T@1Mj
     g$make-i/o-file-protection-error$13300$T@1Mj
     (record-constructor g$6123$13037$T@1Mj))
   (g$i/o-file-protection-error?$13042$T@1Mj
     g$i/o-file-protection-error?$13301$T@1Mj
     (condition-predicate g$6122$13035$T@1Mj))
   (g$&i/o-file-protection-rtd$13043$T@1Mj
     g$&i/o-file-protection-rtd$13302$T@1Mj
     g$6122$13035$T@1Mj)
   (g$&i/o-file-protection-rcd$13044$T@1Mj
     g$&i/o-file-protection-rcd$13303$T@1Mj
     g$6123$13037$T@1Mj)
   (g$6135$13045$T@1Mj
     g$6135$13304$T@1Mj
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6122$13035$T@1Mj
       'g$6138$T@1Mj
       '#f
       '#f
       '#()))
   (g$6137$13046$T@1Mj g$6137$13305$T@1Mj '#f)
   (g$6136$13047$T@1Mj
     g$6136$13306$T@1Mj
     (make-record-constructor-descriptor
       g$6135$13045$T@1Mj
       g$6123$13037$T@1Mj
       g$6137$13046$T@1Mj))
   (g$p?$13050$T@1Mj
     g$p?$13307$T@1Mj
     (record-predicate g$6135$13045$T@1Mj))
   (g$make-i/o-file-is-read-only-error$13051$T@1Mj
     g$make-i/o-file-is-read-only-error$13308$T@1Mj
     (record-constructor g$6136$13047$T@1Mj))
   (g$i/o-file-is-read-only-error?$13052$T@1Mj
     g$i/o-file-is-read-only-error?$13309$T@1Mj
     (condition-predicate g$6135$13045$T@1Mj))
   (g$&i/o-file-is-read-only-rtd$13053$T@1Mj
     g$&i/o-file-is-read-only-rtd$13310$T@1Mj
     g$6135$13045$T@1Mj)
   (g$&i/o-file-is-read-only-rcd$13054$T@1Mj
     g$&i/o-file-is-read-only-rcd$13311$T@1Mj
     g$6136$13047$T@1Mj)
   (g$6148$13055$T@1Mj
     g$6148$13312$T@1Mj
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6107$13023$T@1Mj
       'g$6151$T@1Mj
       '#f
       '#f
       '#()))
   (g$6150$13056$T@1Mj g$6150$13313$T@1Mj '#f)
   (g$6149$13057$T@1Mj
     g$6149$13314$T@1Mj
     (make-record-constructor-descriptor
       g$6148$13055$T@1Mj
       g$6108$13025$T@1Mj
       g$6150$13056$T@1Mj))
   (g$p?$13060$T@1Mj
     g$p?$13315$T@1Mj
     (record-predicate g$6148$13055$T@1Mj))
   (g$make-i/o-file-already-exists-error$13061$T@1Mj
     g$make-i/o-file-already-exists-error$13316$T@1Mj
     (record-constructor g$6149$13057$T@1Mj))
   (g$i/o-file-already-exists-error?$13062$T@1Mj
     g$i/o-file-already-exists-error?$13317$T@1Mj
     (condition-predicate g$6148$13055$T@1Mj))
   (g$&i/o-file-already-exists-rtd$13063$T@1Mj
     g$&i/o-file-already-exists-rtd$13318$T@1Mj
     g$6148$13055$T@1Mj)
   (g$&i/o-file-already-exists-rcd$13064$T@1Mj
     g$&i/o-file-already-exists-rcd$13319$T@1Mj
     g$6149$13057$T@1Mj)
   (g$6161$13065$T@1Mj
     g$6161$13320$T@1Mj
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6107$13023$T@1Mj
       'g$6164$T@1Mj
       '#f
       '#f
       '#()))
   (g$6163$13066$T@1Mj g$6163$13321$T@1Mj '#f)
   (g$6162$13067$T@1Mj
     g$6162$13322$T@1Mj
     (make-record-constructor-descriptor
       g$6161$13065$T@1Mj
       g$6108$13025$T@1Mj
       g$6163$13066$T@1Mj))
   (g$p?$13070$T@1Mj
     g$p?$13323$T@1Mj
     (record-predicate g$6161$13065$T@1Mj))
   (g$make-i/o-file-does-not-exist-error$13071$T@1Mj
     g$make-i/o-file-does-not-exist-error$13324$T@1Mj
     (record-constructor g$6162$13067$T@1Mj))
   (g$i/o-file-does-not-exist-error?$13072$T@1Mj
     g$i/o-file-does-not-exist-error?$13325$T@1Mj
     (condition-predicate g$6161$13065$T@1Mj))
   (g$&i/o-file-does-not-exist-rtd$13073$T@1Mj
     g$&i/o-file-does-not-exist-rtd$13326$T@1Mj
     g$6161$13065$T@1Mj)
   (g$&i/o-file-does-not-exist-rcd$13074$T@1Mj
     g$&i/o-file-does-not-exist-rcd$13327$T@1Mj
     g$6162$13067$T@1Mj)
   (g$6174$13076$T@1Mj
     g$6174$13328$T@1Mj
     (make-record-type-descriptor
       '&i/o-port
       g$6053$12979$T@1Mj
       'g$6177$T@1Mj
       '#f
       '#f
       '#((immutable port))))
   (g$6176$13077$T@1Mj g$6176$13329$T@1Mj '#f)
   (g$6175$13078$T@1Mj
     g$6175$13330$T@1Mj
     (make-record-constructor-descriptor
       g$6174$13076$T@1Mj
       g$6054$12981$T@1Mj
       g$6176$13077$T@1Mj))
   (g$p?$13081$T@1Mj
     g$p?$13331$T@1Mj
     (record-predicate g$6174$13076$T@1Mj))
   (g$make-i/o-port-error$13082$T@1Mj
     g$make-i/o-port-error$13332$T@1Mj
     (record-constructor g$6175$13078$T@1Mj))
   (g$i/o-error-port$13083$T@1Mj
     g$i/o-error-port$13333$T@1Mj
     (record-accessor g$6174$13076$T@1Mj '0))
   (g$i/o-port-error?$13084$T@1Mj
     g$i/o-port-error?$13334$T@1Mj
     (condition-predicate g$6174$13076$T@1Mj))
   (g$i/o-error-port$13085$T@1Mj
     g$i/o-error-port$13335$T@1Mj
     (condition-accessor
       g$6174$13076$T@1Mj
       g$i/o-error-port$13083$T@1Mj))
   (g$&i/o-port-rtd$13086$T@1Mj
     g$&i/o-port-rtd$13336$T@1Mj
     g$6174$13076$T@1Mj)
   (g$&i/o-port-rcd$13087$T@1Mj
     g$&i/o-port-rcd$13337$T@1Mj
     g$6175$13078$T@1Mj)
   (g$6189$13088$T@1Mj
     g$6189$13338$T@1Mj
     (make-record-type-descriptor
       '&i/o-decoding
       g$6174$13076$T@1Mj
       'g$6192$T@1Mj
       '#f
       '#f
       '#()))
   (g$6191$13089$T@1Mj g$6191$13339$T@1Mj '#f)
   (g$6190$13090$T@1Mj
     g$6190$13340$T@1Mj
     (make-record-constructor-descriptor
       g$6189$13088$T@1Mj
       g$6175$13078$T@1Mj
       g$6191$13089$T@1Mj))
   (g$p?$13093$T@1Mj
     g$p?$13341$T@1Mj
     (record-predicate g$6189$13088$T@1Mj))
   (g$make-i/o-decoding-error$13094$T@1Mj
     g$make-i/o-decoding-error$13342$T@1Mj
     (record-constructor g$6190$13090$T@1Mj))
   (g$i/o-decoding-error?$13095$T@1Mj
     g$i/o-decoding-error?$13343$T@1Mj
     (condition-predicate g$6189$13088$T@1Mj))
   (g$&i/o-decoding-rtd$13096$T@1Mj
     g$&i/o-decoding-rtd$13344$T@1Mj
     g$6189$13088$T@1Mj)
   (g$&i/o-decoding-rcd$13097$T@1Mj
     g$&i/o-decoding-rcd$13345$T@1Mj
     g$6190$13090$T@1Mj)
   (g$6202$13099$T@1Mj
     g$6202$13346$T@1Mj
     (make-record-type-descriptor
       '&i/o-encoding
       g$6174$13076$T@1Mj
       'g$6205$T@1Mj
       '#f
       '#f
       '#((immutable char))))
   (g$6204$13100$T@1Mj g$6204$13347$T@1Mj '#f)
   (g$6203$13101$T@1Mj
     g$6203$13348$T@1Mj
     (make-record-constructor-descriptor
       g$6202$13099$T@1Mj
       g$6175$13078$T@1Mj
       g$6204$13100$T@1Mj))
   (g$p?$13104$T@1Mj
     g$p?$13349$T@1Mj
     (record-predicate g$6202$13099$T@1Mj))
   (g$make-i/o-encoding-error$13105$T@1Mj
     g$make-i/o-encoding-error$13350$T@1Mj
     (record-constructor g$6203$13101$T@1Mj))
   (g$i/o-encoding-error-char$13106$T@1Mj
     g$i/o-encoding-error-char$13351$T@1Mj
     (record-accessor g$6202$13099$T@1Mj '0))
   (g$i/o-encoding-error?$13107$T@1Mj
     g$i/o-encoding-error?$13352$T@1Mj
     (condition-predicate g$6202$13099$T@1Mj))
   (g$i/o-encoding-error-char$13108$T@1Mj
     g$i/o-encoding-error-char$13353$T@1Mj
     (condition-accessor
       g$6202$13099$T@1Mj
       g$i/o-encoding-error-char$13106$T@1Mj))
   (g$&i/o-encoding-rtd$13109$T@1Mj
     g$&i/o-encoding-rtd$13354$T@1Mj
     g$6202$13099$T@1Mj)
   (g$&i/o-encoding-rcd$13110$T@1Mj
     g$&i/o-encoding-rcd$13355$T@1Mj
     g$6203$13101$T@1Mj)
   (g$6217$13111$T@1Mj
     g$6217$13356$T@1Mj
     (make-record-type-descriptor
       '&no-infinities
       g$5997$12933$T@1Mj
       'g$6220$T@1Mj
       '#f
       '#f
       '#()))
   (g$6219$13112$T@1Mj g$6219$13357$T@1Mj '#f)
   (g$6218$13113$T@1Mj
     g$6218$13358$T@1Mj
     (make-record-constructor-descriptor
       g$6217$13111$T@1Mj
       g$5998$12935$T@1Mj
       g$6219$13112$T@1Mj))
   (g$p?$13116$T@1Mj
     g$p?$13359$T@1Mj
     (record-predicate g$6217$13111$T@1Mj))
   (g$make-no-infinities-violation$13117$T@1Mj
     g$make-no-infinities-violation$13360$T@1Mj
     (record-constructor g$6218$13113$T@1Mj))
   (g$no-infinities-violation?$13118$T@1Mj
     g$no-infinities-violation?$13361$T@1Mj
     (condition-predicate g$6217$13111$T@1Mj))
   (g$&no-infinities-rtd$13119$T@1Mj
     g$&no-infinities-rtd$13362$T@1Mj
     g$6217$13111$T@1Mj)
   (g$&no-infinities-rcd$13120$T@1Mj
     g$&no-infinities-rcd$13363$T@1Mj
     g$6218$13113$T@1Mj)
   (g$6230$13121$T@1Mj
     g$6230$13364$T@1Mj
     (make-record-type-descriptor
       '&no-nans
       g$5997$12933$T@1Mj
       'g$6233$T@1Mj
       '#f
       '#f
       '#()))
   (g$6232$13122$T@1Mj g$6232$13365$T@1Mj '#f)
   (g$6231$13123$T@1Mj
     g$6231$13366$T@1Mj
     (make-record-constructor-descriptor
       g$6230$13121$T@1Mj
       g$5998$12935$T@1Mj
       g$6232$13122$T@1Mj))
   (g$p?$13126$T@1Mj
     g$p?$13367$T@1Mj
     (record-predicate g$6230$13121$T@1Mj))
   (g$make-no-nans-violation$13127$T@1Mj
     g$make-no-nans-violation$13368$T@1Mj
     (record-constructor g$6231$13123$T@1Mj))
   (g$no-nans-violation?$13128$T@1Mj
     g$no-nans-violation?$13369$T@1Mj
     (condition-predicate g$6230$13121$T@1Mj))
   (g$&no-nans-rtd$13129$T@1Mj
     g$&no-nans-rtd$13370$T@1Mj
     g$6230$13121$T@1Mj)
   (g$&no-nans-rcd$13130$T@1Mj
     g$&no-nans-rcd$13371$T@1Mj
     g$6231$13123$T@1Mj))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$13372$T@1Mj
     g$append!$13378$T@1Mj
     (case-lambda
       ((g$a$13373$T@1Mj . g$b$13374$T@1Mj)
        (if (null? g$a$13373$T@1Mj)
          g$b$13374$T@1Mj
          (if (null? g$b$13374$T@1Mj)
            g$a$13373$T@1Mj
            (begin
              ((letrec ((g$f$13375$T@1Mj
                          (case-lambda
                            ((g$a$13376$T@1Mj)
                             ((case-lambda
                                ((g$n$13377$T@1Mj)
                                 (if (null? g$n$13377$T@1Mj)
                                   (set-cdr!
                                     g$a$13376$T@1Mj
                                     g$b$13374$T@1Mj)
                                   (g$f$13375$T@1Mj g$n$13377$T@1Mj))))
                              (cdr g$a$13376$T@1Mj))))))
                 g$f$13375$T@1Mj)
               g$a$13373$T@1Mj)
              g$a$13373$T@1Mj)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$13379$T@1Mj g$inexact->exact$13399$T@1Mj exact)
   (g$exact->inexact$13380$T@1Mj g$exact->inexact$13400$T@1Mj inexact)
   (g$sign$13381$T@1Mj
     g$sign$13401$T@1Mj
     (case-lambda
       ((g$n$13387$T@1Mj)
        (if (> g$n$13387$T@1Mj '0)
          '1
          (if (< g$n$13387$T@1Mj '0) '-1 '0)))))
   (g$quotient$13382$T@1Mj
     g$quotient$13402$T@1Mj
     (case-lambda
       ((g$n1$13388$T@1Mj g$n2$13389$T@1Mj)
        (begin
          (if (not (integer-valued? g$n1$13388$T@1Mj))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$13388$T@1Mj)
            (void))
          (if (not (integer-valued? g$n2$13389$T@1Mj))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$13389$T@1Mj)
            (void))
          (* (g$sign$13381$T@1Mj g$n1$13388$T@1Mj)
             (g$sign$13381$T@1Mj g$n2$13389$T@1Mj)
             (div (abs g$n1$13388$T@1Mj) (abs g$n2$13389$T@1Mj)))))))
   (g$remainder$13383$T@1Mj
     g$remainder$13403$T@1Mj
     (case-lambda
       ((g$n1$13390$T@1Mj g$n2$13391$T@1Mj)
        (begin
          (if (not (integer-valued? g$n1$13390$T@1Mj))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$13390$T@1Mj)
            (void))
          (if (not (integer-valued? g$n2$13391$T@1Mj))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$13391$T@1Mj)
            (void))
          (* (g$sign$13381$T@1Mj g$n1$13390$T@1Mj)
             (g$mod$12458$T@1Mj
               (abs g$n1$13390$T@1Mj)
               (abs g$n2$13391$T@1Mj)))))))
   (g$modulo$13384$T@1Mj
     g$modulo$13404$T@1Mj
     (case-lambda
       ((g$n1$13392$T@1Mj g$n2$13393$T@1Mj)
        (begin
          (if (not (integer-valued? g$n1$13392$T@1Mj))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$13392$T@1Mj)
            (void))
          (if (not (integer-valued? g$n2$13393$T@1Mj))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$13393$T@1Mj)
            (void))
          (* (g$sign$13381$T@1Mj g$n2$13393$T@1Mj)
             (g$mod$12458$T@1Mj
               (* (g$sign$13381$T@1Mj g$n2$13393$T@1Mj)
                  g$n1$13392$T@1Mj)
               (abs g$n2$13393$T@1Mj)))))))
   (g$make-promise$13385$T@1Mj
     g$make-promise$13405$T@1Mj
     (case-lambda
       ((g$proc$13394$T@1Mj)
        ((case-lambda
           ((g$result-ready?$13395$T@1Mj g$result$13396$T@1Mj)
            (case-lambda
              (()
               (if g$result-ready?$13395$T@1Mj
                 g$result$13396$T@1Mj
                 ((case-lambda
                    ((g$x$13397$T@1Mj)
                     (if g$result-ready?$13395$T@1Mj
                       g$result$13396$T@1Mj
                       (begin
                         (set! g$result-ready?$13395$T@1Mj '#t)
                         (set! g$result$13396$T@1Mj g$x$13397$T@1Mj)
                         g$result$13396$T@1Mj))))
                  (g$proc$13394$T@1Mj)))))))
         '#f
         '#f))))
   (g$force$13386$T@1Mj
     g$force$13406$T@1Mj
     (case-lambda ((g$object$13398$T@1Mj) (g$object$13398$T@1Mj)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$13407$T@1Mj
     g$split$13432$T@1Mj
     (case-lambda
       ((g$ls$13411$T@1Mj)
        ((letrec ((g$loop$13412$T@1Mj
                    (case-lambda
                      ((g$rest$13413$T@1Mj
                         g$left$13414$T@1Mj
                         g$right$13415$T@1Mj)
                       (if (null? g$rest$13413$T@1Mj)
                         (cons g$left$13414$T@1Mj g$right$13415$T@1Mj)
                         (if (null? (cdr g$rest$13413$T@1Mj))
                           (cons
                             (cons
                               (car g$rest$13413$T@1Mj)
                               g$left$13414$T@1Mj)
                             g$right$13415$T@1Mj)
                           (g$loop$13412$T@1Mj
                             (g$cddr$12479$T@1Mj g$rest$13413$T@1Mj)
                             (cons
                               (car g$rest$13413$T@1Mj)
                               g$left$13414$T@1Mj)
                             (cons
                               (g$cadr$12477$T@1Mj g$rest$13413$T@1Mj)
                               g$right$13415$T@1Mj))))))))
           g$loop$13412$T@1Mj)
         g$ls$13411$T@1Mj
         '()
         '()))))
   (g$reverse-it$13408$T@1Mj
     g$reverse-it$13433$T@1Mj
     (case-lambda
       ((g$head$13416$T@1Mj g$tail$13417$T@1Mj)
        (if (null? g$head$13416$T@1Mj)
          g$tail$13417$T@1Mj
          (g$reverse-it$13408$T@1Mj
            (cdr g$head$13416$T@1Mj)
            (cons (car g$head$13416$T@1Mj) g$tail$13417$T@1Mj))))))
   (g$merge$13409$T@1Mj
     g$merge$13434$T@1Mj
     (case-lambda
       ((g$list-1$13418$T@1Mj
          g$list-2$13419$T@1Mj
          g$precedes?$13420$T@1Mj)
        ((letrec ((g$loop$13421$T@1Mj
                    (case-lambda
                      ((g$source-1$13422$T@1Mj
                         g$source-2$13423$T@1Mj
                         g$so-far$13424$T@1Mj)
                       (if (null? g$source-1$13422$T@1Mj)
                         (g$reverse-it$13408$T@1Mj
                           g$so-far$13424$T@1Mj
                           g$source-2$13423$T@1Mj)
                         (if (null? g$source-2$13423$T@1Mj)
                           (g$reverse-it$13408$T@1Mj
                             g$so-far$13424$T@1Mj
                             g$source-1$13422$T@1Mj)
                           ((case-lambda
                              ((g$car-1$13425$T@1Mj g$car-2$13426$T@1Mj)
                               (if (g$precedes?$13420$T@1Mj
                                     g$car-2$13426$T@1Mj
                                     g$car-1$13425$T@1Mj)
                                 (g$loop$13421$T@1Mj
                                   g$source-1$13422$T@1Mj
                                   (cdr g$source-2$13423$T@1Mj)
                                   (cons
                                     g$car-2$13426$T@1Mj
                                     g$so-far$13424$T@1Mj))
                                 (g$loop$13421$T@1Mj
                                   g$source-2$13423$T@1Mj
                                   (cdr g$source-1$13422$T@1Mj)
                                   (cons
                                     g$car-1$13425$T@1Mj
                                     g$so-far$13424$T@1Mj)))))
                            (car g$source-1$13422$T@1Mj)
                            (car g$source-2$13423$T@1Mj))))))))
           g$loop$13421$T@1Mj)
         g$list-1$13418$T@1Mj
         g$list-2$13419$T@1Mj
         '()))))
   (g$list-sort$13410$T@1Mj
     g$list-sort$13435$T@1Mj
     (case-lambda
       ((g$precedes?$13427$T@1Mj g$ls$13428$T@1Mj)
        (if (null? g$ls$13428$T@1Mj)
          '()
          ((letrec ((g$helper$13429$T@1Mj
                      (case-lambda
                        ((g$piece$13430$T@1Mj)
                         (if (null? (cdr g$piece$13430$T@1Mj))
                           g$piece$13430$T@1Mj
                           ((case-lambda
                              ((g$parts$13431$T@1Mj)
                               (g$merge$13409$T@1Mj
                                 (g$helper$13429$T@1Mj
                                   (car g$parts$13431$T@1Mj))
                                 (g$helper$13429$T@1Mj
                                   (cdr g$parts$13431$T@1Mj))
                                 g$precedes?$13427$T@1Mj)))
                            (g$split$13407$T@1Mj
                              g$piece$13430$T@1Mj)))))))
             g$helper$13429$T@1Mj)
           g$ls$13428$T@1Mj))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$13474$T@1Mj
     g$string-ci=?$13580$T@1Mj
     (case-lambda
       ((g$a$13526$T@1Mj g$b$13527$T@1Mj . g$rest$13528$T@1Mj)
        (begin
          (if (not (string? g$a$13526$T@1Mj))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$13526$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13529$T@1Mj)
               (begin
                 (if (not (string? g$x$13529$T@1Mj))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$13529$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13530$T@1Mj)
                     (begin
                       (set! g$a$13526$T@1Mj g$x$13529$T@1Mj)
                       g$r$13530$T@1Mj)))
                  (= (string-ci-compare g$a$13526$T@1Mj g$x$13529$T@1Mj)
                     '0)))))
            (cons g$b$13527$T@1Mj g$rest$13528$T@1Mj))))))
   (g$string-ci<?$13475$T@1Mj
     g$string-ci<?$13581$T@1Mj
     (case-lambda
       ((g$a$13531$T@1Mj g$b$13532$T@1Mj . g$rest$13533$T@1Mj)
        (begin
          (if (not (string? g$a$13531$T@1Mj))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$13531$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13534$T@1Mj)
               (begin
                 (if (not (string? g$x$13534$T@1Mj))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$13534$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13535$T@1Mj)
                     (begin
                       (set! g$a$13531$T@1Mj g$x$13534$T@1Mj)
                       g$r$13535$T@1Mj)))
                  (< (string-ci-compare g$a$13531$T@1Mj g$x$13534$T@1Mj)
                     '0)))))
            (cons g$b$13532$T@1Mj g$rest$13533$T@1Mj))))))
   (g$string-ci>?$13476$T@1Mj
     g$string-ci>?$13582$T@1Mj
     (case-lambda
       ((g$a$13536$T@1Mj g$b$13537$T@1Mj . g$rest$13538$T@1Mj)
        (begin
          (if (not (string? g$a$13536$T@1Mj))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$13536$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13539$T@1Mj)
               (begin
                 (if (not (string? g$x$13539$T@1Mj))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$13539$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13540$T@1Mj)
                     (begin
                       (set! g$a$13536$T@1Mj g$x$13539$T@1Mj)
                       g$r$13540$T@1Mj)))
                  (> (string-ci-compare g$a$13536$T@1Mj g$x$13539$T@1Mj)
                     '0)))))
            (cons g$b$13537$T@1Mj g$rest$13538$T@1Mj))))))
   (g$string-ci<=?$13477$T@1Mj
     g$string-ci<=?$13583$T@1Mj
     (case-lambda
       ((g$a$13541$T@1Mj g$b$13542$T@1Mj . g$rest$13543$T@1Mj)
        (begin
          (if (not (string? g$a$13541$T@1Mj))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$13541$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13544$T@1Mj)
               (begin
                 (if (not (string? g$x$13544$T@1Mj))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$13544$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13545$T@1Mj)
                     (begin
                       (set! g$a$13541$T@1Mj g$x$13544$T@1Mj)
                       g$r$13545$T@1Mj)))
                  (<= (string-ci-compare
                        g$a$13541$T@1Mj
                        g$x$13544$T@1Mj)
                      '0)))))
            (cons g$b$13542$T@1Mj g$rest$13543$T@1Mj))))))
   (g$string-ci>=?$13478$T@1Mj
     g$string-ci>=?$13584$T@1Mj
     (case-lambda
       ((g$a$13546$T@1Mj g$b$13547$T@1Mj . g$rest$13548$T@1Mj)
        (begin
          (if (not (string? g$a$13546$T@1Mj))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$13546$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13549$T@1Mj)
               (begin
                 (if (not (string? g$x$13549$T@1Mj))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$13549$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13550$T@1Mj)
                     (begin
                       (set! g$a$13546$T@1Mj g$x$13549$T@1Mj)
                       g$r$13550$T@1Mj)))
                  (>= (string-ci-compare
                        g$a$13546$T@1Mj
                        g$x$13549$T@1Mj)
                      '0)))))
            (cons g$b$13547$T@1Mj g$rest$13548$T@1Mj))))))
   (g$char-ci=?$13517$T@1Mj
     g$char-ci=?$13585$T@1Mj
     (case-lambda
       ((g$a$13551$T@1Mj g$b$13552$T@1Mj . g$rest$13553$T@1Mj)
        (begin
          (if (not (g$char?$12464$T@1Mj g$a$13551$T@1Mj))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$13551$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13554$T@1Mj)
               (begin
                 (if (not (g$char?$12464$T@1Mj g$x$13554$T@1Mj))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$13554$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13555$T@1Mj)
                     (begin
                       (set! g$a$13551$T@1Mj g$x$13554$T@1Mj)
                       g$r$13555$T@1Mj)))
                  (= (char->integer (char-upcase g$a$13551$T@1Mj))
                     (char->integer (char-upcase g$x$13554$T@1Mj)))))))
            (cons g$b$13552$T@1Mj g$rest$13553$T@1Mj))))))
   (g$char-ci<?$13518$T@1Mj
     g$char-ci<?$13586$T@1Mj
     (case-lambda
       ((g$a$13556$T@1Mj g$b$13557$T@1Mj . g$rest$13558$T@1Mj)
        (begin
          (if (not (g$char?$12464$T@1Mj g$a$13556$T@1Mj))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$13556$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13559$T@1Mj)
               (begin
                 (if (not (g$char?$12464$T@1Mj g$x$13559$T@1Mj))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$13559$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13560$T@1Mj)
                     (begin
                       (set! g$a$13556$T@1Mj g$x$13559$T@1Mj)
                       g$r$13560$T@1Mj)))
                  (< (char->integer (char-upcase g$a$13556$T@1Mj))
                     (char->integer (char-upcase g$x$13559$T@1Mj)))))))
            (cons g$b$13557$T@1Mj g$rest$13558$T@1Mj))))))
   (g$char-ci>?$13519$T@1Mj
     g$char-ci>?$13587$T@1Mj
     (case-lambda
       ((g$a$13561$T@1Mj g$b$13562$T@1Mj . g$rest$13563$T@1Mj)
        (begin
          (if (not (g$char?$12464$T@1Mj g$a$13561$T@1Mj))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$13561$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13564$T@1Mj)
               (begin
                 (if (not (g$char?$12464$T@1Mj g$x$13564$T@1Mj))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$13564$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13565$T@1Mj)
                     (begin
                       (set! g$a$13561$T@1Mj g$x$13564$T@1Mj)
                       g$r$13565$T@1Mj)))
                  (> (char->integer (char-upcase g$a$13561$T@1Mj))
                     (char->integer (char-upcase g$x$13564$T@1Mj)))))))
            (cons g$b$13562$T@1Mj g$rest$13563$T@1Mj))))))
   (g$char-ci<=?$13520$T@1Mj
     g$char-ci<=?$13588$T@1Mj
     (case-lambda
       ((g$a$13566$T@1Mj g$b$13567$T@1Mj . g$rest$13568$T@1Mj)
        (begin
          (if (not (g$char?$12464$T@1Mj g$a$13566$T@1Mj))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$13566$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13569$T@1Mj)
               (begin
                 (if (not (g$char?$12464$T@1Mj g$x$13569$T@1Mj))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$13569$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13570$T@1Mj)
                     (begin
                       (set! g$a$13566$T@1Mj g$x$13569$T@1Mj)
                       g$r$13570$T@1Mj)))
                  (<= (char->integer (char-upcase g$a$13566$T@1Mj))
                      (char->integer (char-upcase g$x$13569$T@1Mj)))))))
            (cons g$b$13567$T@1Mj g$rest$13568$T@1Mj))))))
   (g$char-ci>=?$13521$T@1Mj
     g$char-ci>=?$13589$T@1Mj
     (case-lambda
       ((g$a$13571$T@1Mj g$b$13572$T@1Mj . g$rest$13573$T@1Mj)
        (begin
          (if (not (g$char?$12464$T@1Mj g$a$13571$T@1Mj))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$13571$T@1Mj)
            (void))
          (g$for-all$11722$T@1Mj
            (case-lambda
              ((g$x$13574$T@1Mj)
               (begin
                 (if (not (g$char?$12464$T@1Mj g$x$13574$T@1Mj))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$13574$T@1Mj)
                   (void))
                 ((case-lambda
                    ((g$r$13575$T@1Mj)
                     (begin
                       (set! g$a$13571$T@1Mj g$x$13574$T@1Mj)
                       g$r$13575$T@1Mj)))
                  (>= (char->integer (char-upcase g$a$13571$T@1Mj))
                      (char->integer (char-upcase g$x$13574$T@1Mj)))))))
            (cons g$b$13572$T@1Mj g$rest$13573$T@1Mj))))))
   (g$string-normalize-nfc$13522$T@1Mj
     g$string-normalize-nfc$13590$T@1Mj
     (case-lambda
       ((g$s$13576$T@1Mj) (string-normalize g$s$13576$T@1Mj 'formc))))
   (g$string-normalize-nfd$13523$T@1Mj
     g$string-normalize-nfd$13591$T@1Mj
     (case-lambda
       ((g$s$13577$T@1Mj) (string-normalize g$s$13577$T@1Mj 'formd))))
   (g$string-normalize-nfkc$13524$T@1Mj
     g$string-normalize-nfkc$13592$T@1Mj
     (case-lambda
       ((g$s$13578$T@1Mj) (string-normalize g$s$13578$T@1Mj 'formkc))))
   (g$string-normalize-nfkd$13525$T@1Mj
     g$string-normalize-nfkd$13593$T@1Mj
     (case-lambda
       ((g$s$13579$T@1Mj) (string-normalize g$s$13579$T@1Mj 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$13594$T@1Mj
     g$bitwise-if$13625$T@1Mj
     (case-lambda
       ((g$ei1$13601$T@1Mj g$ei2$13602$T@1Mj g$ei3$13603$T@1Mj)
        (bitwise-ior
          (bitwise-and g$ei1$13601$T@1Mj g$ei2$13602$T@1Mj)
          (bitwise-and
            (bitwise-not g$ei1$13601$T@1Mj)
            g$ei3$13603$T@1Mj)))))
   (g$bitwise-copy-bit$13595$T@1Mj
     g$bitwise-copy-bit$13626$T@1Mj
     (case-lambda
       ((g$ei1$13604$T@1Mj g$ei2$13605$T@1Mj g$ei3$13606$T@1Mj)
        (g$bitwise-if$13594$T@1Mj
          (g$bitwise-arithmetic-shift-left$13598$T@1Mj
            '1
            g$ei2$13605$T@1Mj)
          (g$bitwise-arithmetic-shift-left$13598$T@1Mj
            g$ei3$13606$T@1Mj
            g$ei2$13605$T@1Mj)
          g$ei1$13604$T@1Mj))))
   (g$bitwise-bit-field$13596$T@1Mj
     g$bitwise-bit-field$13627$T@1Mj
     (case-lambda
       ((g$ei1$13607$T@1Mj g$ei2$13608$T@1Mj g$ei3$13609$T@1Mj)
        (g$bitwise-arithmetic-shift-right$13599$T@1Mj
          (bitwise-and
            g$ei1$13607$T@1Mj
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13598$T@1Mj
                '-1
                g$ei3$13609$T@1Mj)))
          g$ei2$13608$T@1Mj))))
   (g$bitwise-copy-bit-field$13597$T@1Mj
     g$bitwise-copy-bit-field$13628$T@1Mj
     (case-lambda
       ((g$to$13610$T@1Mj
          g$start$13611$T@1Mj
          g$end$13612$T@1Mj
          g$from$13613$T@1Mj)
        (g$bitwise-if$13594$T@1Mj
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$13598$T@1Mj
              '-1
              g$start$13611$T@1Mj)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13598$T@1Mj
                '-1
                g$end$13612$T@1Mj)))
          (g$bitwise-arithmetic-shift-left$13598$T@1Mj
            g$from$13613$T@1Mj
            g$start$13611$T@1Mj)
          g$to$13610$T@1Mj))))
   (g$bitwise-arithmetic-shift-left$13598$T@1Mj
     g$bitwise-arithmetic-shift-left$13629$T@1Mj
     (case-lambda
       ((g$ei1$13614$T@1Mj g$ei2$13615$T@1Mj)
        (bitwise-arithmetic-shift
          g$ei1$13614$T@1Mj
          g$ei2$13615$T@1Mj))))
   (g$bitwise-arithmetic-shift-right$13599$T@1Mj
     g$bitwise-arithmetic-shift-right$13630$T@1Mj
     (case-lambda
       ((g$ei1$13616$T@1Mj g$ei2$13617$T@1Mj)
        (bitwise-arithmetic-shift
          g$ei1$13616$T@1Mj
          (- g$ei2$13617$T@1Mj)))))
   (g$bitwise-rotate-bit-field$13600$T@1Mj
     g$bitwise-rotate-bit-field$13631$T@1Mj
     (case-lambda
       ((g$n$13618$T@1Mj
          g$start$13619$T@1Mj
          g$end$13620$T@1Mj
          g$count$13621$T@1Mj)
        ((case-lambda
           ((g$width$13622$T@1Mj)
            (if (g$positive?$12504$T@1Mj g$width$13622$T@1Mj)
              ((case-lambda
                 ((g$count$13623$T@1Mj g$field$13624$T@1Mj)
                  (g$bitwise-copy-bit-field$13597$T@1Mj
                    g$n$13618$T@1Mj
                    g$start$13619$T@1Mj
                    g$end$13620$T@1Mj
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$13598$T@1Mj
                        g$field$13624$T@1Mj
                        g$count$13623$T@1Mj)
                      (g$bitwise-arithmetic-shift-right$13599$T@1Mj
                        g$field$13624$T@1Mj
                        (- g$width$13622$T@1Mj g$count$13623$T@1Mj))))))
               (g$mod$12458$T@1Mj
                 g$count$13621$T@1Mj
                 g$width$13622$T@1Mj)
               (g$bitwise-bit-field$13596$T@1Mj
                 g$n$13618$T@1Mj
                 g$start$13619$T@1Mj
                 g$end$13620$T@1Mj))
              g$n$13618$T@1Mj)))
         (- g$end$13620$T@1Mj g$start$13619$T@1Mj))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxmod$13683$T@1Mj
     g$fxmod$13766$T@1Mj
     (case-lambda
       ((g$x1$13704$T@1Mj g$x2$13705$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$x1$13704$T@1Mj))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$13704$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$x2$13705$T@1Mj))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$13705$T@1Mj)
            (void))
          ((case-lambda
             (()
              ($$fx-
                g$x1$13704$T@1Mj
                ($$fx*
                  (fxdiv g$x1$13704$T@1Mj g$x2$13705$T@1Mj)
                  g$x2$13705$T@1Mj)))))))))
   (g$fxmod0$13684$T@1Mj
     g$fxmod0$13767$T@1Mj
     (case-lambda
       ((g$x1$13706$T@1Mj g$x2$13707$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$x1$13706$T@1Mj))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$13706$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$x2$13707$T@1Mj))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$13707$T@1Mj)
            (void))
          ((case-lambda
             (()
              ($$fx-
                g$x1$13706$T@1Mj
                ($$fx*
                  (fxdiv0 g$x1$13706$T@1Mj g$x2$13707$T@1Mj)
                  g$x2$13707$T@1Mj)))))))))
   (g$fxdiv-and-mod$13685$T@1Mj
     g$fxdiv-and-mod$13768$T@1Mj
     (case-lambda
       ((g$x1$13708$T@1Mj g$x2$13709$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$x1$13708$T@1Mj))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$13708$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$x2$13709$T@1Mj))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$13709$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$13710$T@1Mj)
                  (values
                    g$d$13710$T@1Mj
                    ($$fx-
                      g$x1$13708$T@1Mj
                      ($$fx* g$d$13710$T@1Mj g$x2$13709$T@1Mj)))))
               (fxdiv g$x1$13708$T@1Mj g$x2$13709$T@1Mj)))))))))
   (g$fxdiv0-and-mod0$13686$T@1Mj
     g$fxdiv0-and-mod0$13769$T@1Mj
     (case-lambda
       ((g$x1$13711$T@1Mj g$x2$13712$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$x1$13711$T@1Mj))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$13711$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$x2$13712$T@1Mj))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$13712$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$13713$T@1Mj)
                  (values
                    g$d$13713$T@1Mj
                    ($fx-
                      g$x1$13711$T@1Mj
                      ($fx* g$d$13713$T@1Mj g$x2$13712$T@1Mj)))))
               (fxdiv0 g$x1$13711$T@1Mj g$x2$13712$T@1Mj)))))))))
   (g$fxpositive?$13687$T@1Mj
     g$fxpositive?$13770$T@1Mj
     (case-lambda
       ((g$r$13714$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$r$13714$T@1Mj))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$13714$T@1Mj)
            (void))
          ((case-lambda (() ($fx<? '0 g$r$13714$T@1Mj))))))))
   (g$fxnegative?$13688$T@1Mj
     g$fxnegative?$13771$T@1Mj
     (case-lambda
       ((g$r$13715$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$r$13715$T@1Mj))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$13715$T@1Mj)
            (void))
          ((case-lambda (() ($fx>? '0 g$r$13715$T@1Mj))))))))
   (g$fxzero?$13689$T@1Mj
     g$fxzero?$13772$T@1Mj
     (case-lambda
       ((g$r$13716$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$r$13716$T@1Mj))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$13716$T@1Mj)
            (void))
          ((case-lambda (() ($fx=? '0 g$r$13716$T@1Mj))))))))
   (g$fxeven?$13690$T@1Mj
     g$fxeven?$13773$T@1Mj
     (case-lambda
       ((g$n$13717$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$n$13717$T@1Mj))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$13717$T@1Mj)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$n$13717$T@1Mj (least-fixnum))
                '#t
                ($fx=?
                  '0
                  (g$fxmod$13683$T@1Mj g$n$13717$T@1Mj '2))))))))))
   (g$fxodd?$13691$T@1Mj
     g$fxodd?$13774$T@1Mj
     (case-lambda
       ((g$n$13718$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$n$13718$T@1Mj))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$13718$T@1Mj)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$n$13718$T@1Mj (least-fixnum))
                '#f
                ($fx=?
                  '1
                  (g$fxmod$13683$T@1Mj g$n$13718$T@1Mj '2))))))))))
   (g$fxmax$13692$T@1Mj
     g$fxmax$13775$T@1Mj
     (case-lambda
       ((g$a$13719$T@1Mj . g$rest$13720$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$a$13719$T@1Mj))
            (assertion-violation 'fxmax '"not a fixnum" g$a$13719$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$13721$T@1Mj g$b$13722$T@1Mj)
               (if (fx<? g$a$13721$T@1Mj g$b$13722$T@1Mj)
                 g$b$13722$T@1Mj
                 g$a$13721$T@1Mj)))
            g$a$13719$T@1Mj
            g$rest$13720$T@1Mj)))))
   (g$fxmin$13693$T@1Mj
     g$fxmin$13776$T@1Mj
     (case-lambda
       ((g$a$13723$T@1Mj . g$rest$13724$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$a$13723$T@1Mj))
            (assertion-violation 'fxmin '"not a fixnum" g$a$13723$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$13725$T@1Mj g$b$13726$T@1Mj)
               (if (fx>? g$a$13725$T@1Mj g$b$13726$T@1Mj)
                 g$b$13726$T@1Mj
                 g$a$13725$T@1Mj)))
            g$a$13723$T@1Mj
            g$rest$13724$T@1Mj)))))
   (g$fx*/carry$13694$T@1Mj
     g$fx*/carry$13777$T@1Mj
     (case-lambda
       ((g$fx1$13727$T@1Mj g$fx2$13728$T@1Mj g$fx3$13729$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13727$T@1Mj))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$13727$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13728$T@1Mj))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$13728$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13729$T@1Mj))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$13729$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$13730$T@1Mj g$e$13731$T@1Mj)
                  (values
                    (g$mod0$12459$T@1Mj g$s$13730$T@1Mj g$e$13731$T@1Mj)
                    (div0 g$s$13730$T@1Mj g$e$13731$T@1Mj))))
               (+ (* g$fx1$13727$T@1Mj g$fx2$13728$T@1Mj)
                  g$fx3$13729$T@1Mj)
               (expt '2 (g$fixnum-width$12472$T@1Mj))))))))))
   (g$fx-/carry$13695$T@1Mj
     g$fx-/carry$13778$T@1Mj
     (case-lambda
       ((g$fx1$13732$T@1Mj g$fx2$13733$T@1Mj g$fx3$13734$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13732$T@1Mj))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$13732$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13733$T@1Mj))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$13733$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13734$T@1Mj))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$13734$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$13735$T@1Mj g$e$13736$T@1Mj)
                  (values
                    (g$mod0$12459$T@1Mj g$s$13735$T@1Mj g$e$13736$T@1Mj)
                    (div0 g$s$13735$T@1Mj g$e$13736$T@1Mj))))
               (- g$fx1$13732$T@1Mj g$fx2$13733$T@1Mj g$fx3$13734$T@1Mj)
               (expt '2 (g$fixnum-width$12472$T@1Mj))))))))))
   (g$fx+/carry$13696$T@1Mj
     g$fx+/carry$13779$T@1Mj
     (case-lambda
       ((g$fx1$13737$T@1Mj g$fx2$13738$T@1Mj g$fx3$13739$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13737$T@1Mj))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$13737$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13738$T@1Mj))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$13738$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13739$T@1Mj))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$13739$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$13740$T@1Mj g$e$13741$T@1Mj)
                  (values
                    (g$mod0$12459$T@1Mj g$s$13740$T@1Mj g$e$13741$T@1Mj)
                    (div0 g$s$13740$T@1Mj g$e$13741$T@1Mj))))
               (+ g$fx1$13737$T@1Mj g$fx2$13738$T@1Mj g$fx3$13739$T@1Mj)
               (expt '2 (g$fixnum-width$12472$T@1Mj))))))))))
   (g$fxif$13697$T@1Mj
     g$fxif$13780$T@1Mj
     (case-lambda
       ((g$fx1$13742$T@1Mj g$fx2$13743$T@1Mj g$fx3$13744$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13742$T@1Mj))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$13742$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13743$T@1Mj))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$13743$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13744$T@1Mj))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$13744$T@1Mj)
            (void))
          ((case-lambda
             (()
              ($fxior
                ($fxand g$fx1$13742$T@1Mj g$fx2$13743$T@1Mj)
                ($fxand
                  ($$fxnot g$fx1$13742$T@1Mj)
                  g$fx3$13744$T@1Mj)))))))))
   (g$fxcopy-bit$13698$T@1Mj
     g$fxcopy-bit$13781$T@1Mj
     (case-lambda
       ((g$fx1$13745$T@1Mj g$fx2$13746$T@1Mj g$fx3$13747$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13745$T@1Mj))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$13745$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13746$T@1Mj))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$13746$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13747$T@1Mj))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$13747$T@1Mj)
            (void))
          ((case-lambda
             (()
              (g$fxif$13697$T@1Mj
                (g$fxarithmetic-shift-left$13701$T@1Mj
                  '1
                  g$fx2$13746$T@1Mj)
                (g$fxarithmetic-shift-left$13701$T@1Mj
                  g$fx3$13747$T@1Mj
                  g$fx2$13746$T@1Mj)
                g$fx1$13745$T@1Mj))))))))
   (g$fxbit-field$13699$T@1Mj
     g$fxbit-field$13782$T@1Mj
     (case-lambda
       ((g$fx1$13748$T@1Mj g$fx2$13749$T@1Mj g$fx3$13750$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13748$T@1Mj))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$13748$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13749$T@1Mj))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$13749$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx3$13750$T@1Mj))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$13750$T@1Mj)
            (void))
          ((case-lambda
             (()
              (g$fxarithmetic-shift-right$13702$T@1Mj
                ($fxand
                  g$fx1$13748$T@1Mj
                  (fxnot
                    (g$fxarithmetic-shift-left$13701$T@1Mj
                      '-1
                      g$fx3$13750$T@1Mj)))
                g$fx2$13749$T@1Mj))))))))
   (g$fxcopy-bit-field$13700$T@1Mj
     g$fxcopy-bit-field$13783$T@1Mj
     (case-lambda
       ((g$to$13751$T@1Mj
          g$start$13752$T@1Mj
          g$end$13753$T@1Mj
          g$from$13754$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$to$13751$T@1Mj))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$13751$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$start$13752$T@1Mj))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$13752$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$end$13753$T@1Mj))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$13753$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$from$13754$T@1Mj))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$13754$T@1Mj)
            (void))
          ((case-lambda
             (()
              (g$fxif$13697$T@1Mj
                ($fxand
                  (g$fxarithmetic-shift-left$13701$T@1Mj
                    '-1
                    g$start$13752$T@1Mj)
                  ($$fxnot
                    (g$fxarithmetic-shift-left$13701$T@1Mj
                      '-1
                      g$end$13753$T@1Mj)))
                (g$fxarithmetic-shift-left$13701$T@1Mj
                  g$from$13754$T@1Mj
                  g$start$13752$T@1Mj)
                g$to$13751$T@1Mj))))))))
   (g$fxarithmetic-shift-left$13701$T@1Mj
     g$fxarithmetic-shift-left$13784$T@1Mj
     (case-lambda
       ((g$fx1$13755$T@1Mj g$fx2$13756$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13755$T@1Mj))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$13755$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13756$T@1Mj))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$13756$T@1Mj)
            (void))
          ((case-lambda
             (()
              (fxarithmetic-shift
                g$fx1$13755$T@1Mj
                g$fx2$13756$T@1Mj))))))))
   (g$fxarithmetic-shift-right$13702$T@1Mj
     g$fxarithmetic-shift-right$13785$T@1Mj
     (case-lambda
       ((g$fx1$13757$T@1Mj g$fx2$13758$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$fx1$13757$T@1Mj))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$13757$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$fx2$13758$T@1Mj))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$13758$T@1Mj)
            (void))
          ((case-lambda
             (()
              (fxarithmetic-shift
                g$fx1$13757$T@1Mj
                ($$fx- g$fx2$13758$T@1Mj)))))))))
   (g$fxrotate-bit-field$13703$T@1Mj
     g$fxrotate-bit-field$13786$T@1Mj
     (case-lambda
       ((g$n$13759$T@1Mj
          g$start$13760$T@1Mj
          g$end$13761$T@1Mj
          g$count$13762$T@1Mj)
        (begin
          (if (not (g$fixnum?$12470$T@1Mj g$n$13759$T@1Mj))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$13759$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$start$13760$T@1Mj))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$13760$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$end$13761$T@1Mj))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$13761$T@1Mj)
            (void))
          (if (not (g$fixnum?$12470$T@1Mj g$count$13762$T@1Mj))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$13762$T@1Mj)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$13763$T@1Mj)
                  (if (g$fxpositive?$13687$T@1Mj g$width$13763$T@1Mj)
                    ((case-lambda
                       ((g$count$13764$T@1Mj g$field$13765$T@1Mj)
                        (g$fxcopy-bit-field$13700$T@1Mj
                          g$n$13759$T@1Mj
                          g$start$13760$T@1Mj
                          g$end$13761$T@1Mj
                          ($fxior
                            (g$fxarithmetic-shift-left$13701$T@1Mj
                              g$field$13765$T@1Mj
                              g$count$13764$T@1Mj)
                            (g$fxarithmetic-shift-right$13702$T@1Mj
                              g$field$13765$T@1Mj
                              ($$fx-
                                g$width$13763$T@1Mj
                                g$count$13764$T@1Mj))))))
                     (g$fxmod$13683$T@1Mj
                       g$count$13762$T@1Mj
                       g$width$13763$T@1Mj)
                     (g$fxbit-field$13699$T@1Mj
                       g$n$13759$T@1Mj
                       g$start$13760$T@1Mj
                       g$end$13761$T@1Mj))
                    g$n$13759$T@1Mj)))
               ($$fx- g$end$13761$T@1Mj g$start$13760$T@1Mj))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$flmod$13787$T@1Mj
     g$flmod$13864$T@1Mj
     (case-lambda
       ((g$x1$13817$T@1Mj g$x2$13818$T@1Mj)
        (fl- g$x1$13817$T@1Mj
             (fl* (fldiv g$x1$13817$T@1Mj g$x2$13818$T@1Mj)
                  g$x2$13818$T@1Mj)))))
   (g$flmod0$13788$T@1Mj
     g$flmod0$13865$T@1Mj
     (case-lambda
       ((g$x1$13819$T@1Mj g$x2$13820$T@1Mj)
        (fl- g$x1$13819$T@1Mj
             (fl* (fldiv0 g$x1$13819$T@1Mj g$x2$13820$T@1Mj)
                  g$x2$13820$T@1Mj)))))
   (g$fldiv-and-mod$13789$T@1Mj
     g$fldiv-and-mod$13866$T@1Mj
     (case-lambda
       ((g$x1$13821$T@1Mj g$x2$13822$T@1Mj)
        ((case-lambda
           ((g$d$13823$T@1Mj)
            (values
              g$d$13823$T@1Mj
              (fl- g$x1$13821$T@1Mj
                   (fl* g$d$13823$T@1Mj g$x2$13822$T@1Mj)))))
         (fldiv g$x1$13821$T@1Mj g$x2$13822$T@1Mj)))))
   (g$fldiv0-and-mod0$13790$T@1Mj
     g$fldiv0-and-mod0$13867$T@1Mj
     (case-lambda
       ((g$x1$13824$T@1Mj g$x2$13825$T@1Mj)
        ((case-lambda
           ((g$d$13826$T@1Mj)
            (values
              g$d$13826$T@1Mj
              (fl- g$x1$13824$T@1Mj
                   (fl* g$d$13826$T@1Mj g$x2$13825$T@1Mj)))))
         (fldiv0 g$x1$13824$T@1Mj g$x2$13825$T@1Mj)))))
   (g$flinteger?$13791$T@1Mj
     g$flinteger?$13868$T@1Mj
     (case-lambda
       ((g$fl$13827$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13827$T@1Mj))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$13827$T@1Mj)
            (void))
          (fl=? '0.0 (g$flmod$13787$T@1Mj g$fl$13827$T@1Mj '1.0))))))
   (g$flfinite?$13792$T@1Mj
     g$flfinite?$13869$T@1Mj
     (case-lambda
       ((g$fl$13828$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13828$T@1Mj))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$13828$T@1Mj)
            (void))
          (not (g$flinfinite?$13793$T@1Mj g$fl$13828$T@1Mj))))))
   (g$flinfinite?$13793$T@1Mj
     g$flinfinite?$13870$T@1Mj
     (case-lambda
       ((g$fl$13829$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13829$T@1Mj))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$13829$T@1Mj)
            (void))
          (clr-call-internal
            'system.double
            'isinfinity
            '()
            g$fl$13829$T@1Mj)))))
   (g$flnan?$13794$T@1Mj
     g$flnan?$13871$T@1Mj
     (case-lambda
       ((g$fl$13830$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13830$T@1Mj))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$13830$T@1Mj)
            (void))
          (clr-call-internal
            'system.double
            'isnan
            '()
            g$fl$13830$T@1Mj)))))
   (g$flsin$13795$T@1Mj
     g$flsin$13872$T@1Mj
     (case-lambda
       ((g$fl$13831$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13831$T@1Mj))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$13831$T@1Mj)
            (void))
          (clr-call-internal 'system.math 'sin '() g$fl$13831$T@1Mj)))))
   (g$flcos$13796$T@1Mj
     g$flcos$13873$T@1Mj
     (case-lambda
       ((g$fl$13832$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13832$T@1Mj))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$13832$T@1Mj)
            (void))
          (clr-call-internal 'system.math 'cos '() g$fl$13832$T@1Mj)))))
   (g$fltan$13797$T@1Mj
     g$fltan$13874$T@1Mj
     (case-lambda
       ((g$fl$13833$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13833$T@1Mj))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$13833$T@1Mj)
            (void))
          (clr-call-internal 'system.math 'tan '() g$fl$13833$T@1Mj)))))
   (g$flasin$13798$T@1Mj
     g$flasin$13875$T@1Mj
     (case-lambda
       ((g$fl$13834$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13834$T@1Mj))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$13834$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            'asin
            '()
            g$fl$13834$T@1Mj)))))
   (g$flacos$13799$T@1Mj
     g$flacos$13876$T@1Mj
     (case-lambda
       ((g$fl$13835$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13835$T@1Mj))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$13835$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            'acos
            '()
            g$fl$13835$T@1Mj)))))
   (g$flatan$13800$T@1Mj
     g$flatan$13877$T@1Mj
     (case-lambda
       ((g$fl$13836$T@1Mj)
        (clr-call-internal 'system.math 'atan '() g$fl$13836$T@1Mj))
       ((g$fl1$13837$T@1Mj g$fl2$13838$T@1Mj)
        (clr-call-internal
          'system.math
          'atan2
          '()
          g$fl1$13837$T@1Mj
          g$fl2$13838$T@1Mj))))
   (g$fllog$13801$T@1Mj
     g$fllog$13878$T@1Mj
     (case-lambda
       ((g$fl$13839$T@1Mj)
        (clr-call-internal 'system.math 'log '() g$fl$13839$T@1Mj))
       ((g$fl1$13840$T@1Mj g$fl2$13841$T@1Mj)
        (clr-call-internal
          'system.math
          'log
          '()
          g$fl1$13840$T@1Mj
          g$fl2$13841$T@1Mj))))
   (g$flsqrt$13802$T@1Mj
     g$flsqrt$13879$T@1Mj
     (case-lambda
       ((g$fl$13842$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13842$T@1Mj))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$13842$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            'sqrt
            '()
            g$fl$13842$T@1Mj)))))
   (g$flexp$13803$T@1Mj
     g$flexp$13880$T@1Mj
     (case-lambda
       ((g$fl$13843$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13843$T@1Mj))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$13843$T@1Mj)
            (void))
          (clr-call-internal 'system.math 'exp '() g$fl$13843$T@1Mj)))))
   (g$flexpt$13804$T@1Mj
     g$flexpt$13881$T@1Mj
     (case-lambda
       ((g$fl$13844$T@1Mj g$n$13845$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13844$T@1Mj))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$13844$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            'pow
            '()
            g$fl$13844$T@1Mj
            g$n$13845$T@1Mj)))))
   (g$flceiling$13805$T@1Mj
     g$flceiling$13882$T@1Mj
     (case-lambda
       ((g$fl$13846$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13846$T@1Mj))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$13846$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            '"ceiling(double)"
            '()
            g$fl$13846$T@1Mj)))))
   (g$flfloor$13806$T@1Mj
     g$flfloor$13883$T@1Mj
     (case-lambda
       ((g$fl$13847$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13847$T@1Mj))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$13847$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            '"floor(double)"
            '()
            g$fl$13847$T@1Mj)))))
   (g$fltruncate$13807$T@1Mj
     g$fltruncate$13884$T@1Mj
     (case-lambda
       ((g$fl$13848$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13848$T@1Mj))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$13848$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            '"truncate(double)"
            '()
            g$fl$13848$T@1Mj)))))
   (g$flround$13808$T@1Mj
     g$flround$13885$T@1Mj
     (case-lambda
       ((g$fl$13849$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13849$T@1Mj))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$13849$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            '"round(double)"
            '()
            g$fl$13849$T@1Mj)))))
   (g$flabs$13809$T@1Mj
     g$flabs$13886$T@1Mj
     (case-lambda
       ((g$fl$13850$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$fl$13850$T@1Mj))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$13850$T@1Mj)
            (void))
          (clr-call-internal
            'system.math
            '"abs(double)"
            '()
            g$fl$13850$T@1Mj)))))
   (g$flpositive?$13810$T@1Mj
     g$flpositive?$13887$T@1Mj
     (case-lambda
       ((g$r$13851$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$r$13851$T@1Mj))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$13851$T@1Mj)
            (void))
          (fl<? '0.0 g$r$13851$T@1Mj)))))
   (g$flnegative?$13811$T@1Mj
     g$flnegative?$13888$T@1Mj
     (case-lambda
       ((g$r$13852$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$r$13852$T@1Mj))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$13852$T@1Mj)
            (void))
          (fl>? '0.0 g$r$13852$T@1Mj)))))
   (g$flzero?$13812$T@1Mj
     g$flzero?$13889$T@1Mj
     (case-lambda
       ((g$r$13853$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$r$13853$T@1Mj))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$13853$T@1Mj)
            (void))
          (fl=? '0.0 g$r$13853$T@1Mj)))))
   (g$fleven?$13813$T@1Mj
     g$fleven?$13890$T@1Mj
     (case-lambda
       ((g$n$13854$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$n$13854$T@1Mj))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$13854$T@1Mj)
            (void))
          (if (not (integer-valued? g$n$13854$T@1Mj))
            (assertion-violation
              'fleven?
              '"not integer valued"
              g$n$13854$T@1Mj)
            (void))
          (fl=? '0.0 (g$flmod$13787$T@1Mj g$n$13854$T@1Mj '2.0))))))
   (g$flodd?$13814$T@1Mj
     g$flodd?$13891$T@1Mj
     (case-lambda
       ((g$n$13855$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$n$13855$T@1Mj))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$13855$T@1Mj)
            (void))
          (if (not (integer-valued? g$n$13855$T@1Mj))
            (assertion-violation
              'flodd?
              '"not integer valued"
              g$n$13855$T@1Mj)
            (void))
          (fl=? '1.0 (g$flmod$13787$T@1Mj g$n$13855$T@1Mj '2.0))))))
   (g$flmax$13815$T@1Mj
     g$flmax$13892$T@1Mj
     (case-lambda
       ((g$a$13856$T@1Mj . g$rest$13857$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$a$13856$T@1Mj))
            (assertion-violation 'flmax '"not a flonum" g$a$13856$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$13858$T@1Mj g$b$13859$T@1Mj)
               (if (fl<? g$a$13858$T@1Mj g$b$13859$T@1Mj)
                 g$b$13859$T@1Mj
                 g$a$13858$T@1Mj)))
            g$a$13856$T@1Mj
            g$rest$13857$T@1Mj)))))
   (g$flmin$13816$T@1Mj
     g$flmin$13893$T@1Mj
     (case-lambda
       ((g$a$13860$T@1Mj . g$rest$13861$T@1Mj)
        (begin
          (if (not (g$flonum?$12471$T@1Mj g$a$13860$T@1Mj))
            (assertion-violation 'flmin '"not a flonum" g$a$13860$T@1Mj)
            (void))
          (g$fold-left$11727$T@1Mj
            (case-lambda
              ((g$a$13862$T@1Mj g$b$13863$T@1Mj)
               (if (fl>? g$a$13862$T@1Mj g$b$13863$T@1Mj)
                 g$b$13863$T@1Mj
                 g$a$13862$T@1Mj)))
            g$a$13860$T@1Mj
            g$rest$13861$T@1Mj))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$13895$T@1Mj
     g$using$13915$T@1Mj
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$13896$T@1Mj
     g$put-datum$13916$T@1Mj
     (case-lambda
       ((g$p$13904$T@1Mj g$datum$13905$T@1Mj)
        (write g$datum$13905$T@1Mj g$p$13904$T@1Mj))))
   (g$get-datum$13897$T@1Mj g$get-datum$13917$T@1Mj read)
   (g$get-output-string$13898$T@1Mj
     g$get-output-string$13918$T@1Mj
     (case-lambda
       ((g$port$13906$T@1Mj)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$13906$T@1Mj))))
   (g$open-output-string$13899$T@1Mj
     g$open-output-string$13919$T@1Mj
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$13900$T@1Mj
     g$open-string-output-port$13920$T@1Mj
     (case-lambda
       (()
        ((case-lambda
           ((g$p$13907$T@1Mj)
            (values
              g$p$13907$T@1Mj
              (case-lambda
                (()
                 (g$get-output-string$13898$T@1Mj g$p$13907$T@1Mj))))))
         (g$open-output-string$13899$T@1Mj)))))
   (g$port?$13901$T@1Mj
     g$port?$13921$T@1Mj
     (case-lambda
       ((g$obj$13908$T@1Mj)
        ((case-lambda
           ((g$t$13909$T@1Mj)
            (if g$t$13909$T@1Mj
              g$t$13909$T@1Mj
              (begin '#f (binary-port? g$obj$13908$T@1Mj)))))
         (textual-port? g$obj$13908$T@1Mj)))))
   (g$call-with-string-output-port$13902$T@1Mj
     g$call-with-string-output-port$13922$T@1Mj
     (case-lambda
       ((g$proc$13910$T@1Mj)
        ((case-lambda
           ((g$p$13911$T@1Mj)
            (begin
              (g$call-with-port$13903$T@1Mj
                g$p$13911$T@1Mj
                g$proc$13910$T@1Mj)
              (g$get-output-string$13898$T@1Mj g$p$13911$T@1Mj))))
         (g$open-output-string$13899$T@1Mj)))))
   (g$call-with-port$13903$T@1Mj
     g$call-with-port$13923$T@1Mj
     (case-lambda
       ((g$port$13912$T@1Mj g$proc$13913$T@1Mj)
        ((case-lambda
           ((g$r$13914$T@1Mj)
            (begin (close-port g$port$13912$T@1Mj) g$r$13914$T@1Mj)))
         (g$proc$13913$T@1Mj g$port$13912$T@1Mj))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$13924$T@1Mj
     g$peek-char$13979$T@1Mj
     (case-lambda
       (() (g$peek-char$13924$T@1Mj (current-input-port)))
       ((g$port$13951$T@1Mj) (lookahead-char g$port$13951$T@1Mj))))
   (g$read-char$13925$T@1Mj
     g$read-char$13980$T@1Mj
     (case-lambda
       (() (g$read-char$13925$T@1Mj (current-input-port)))
       ((g$port$13952$T@1Mj) (get-char g$port$13952$T@1Mj))))
   (g$write-char$13926$T@1Mj
     g$write-char$13981$T@1Mj
     (case-lambda
       ((g$chr$13953$T@1Mj)
        (g$write-char$13926$T@1Mj
          g$chr$13953$T@1Mj
          (current-output-port)))
       ((g$chr$13954$T@1Mj g$port$13955$T@1Mj)
        (put-char g$port$13955$T@1Mj g$chr$13954$T@1Mj))))
   (g$with-input-from-file$13946$T@1Mj
     g$with-input-from-file$13982$T@1Mj
     (case-lambda
       ((g$filename$13956$T@1Mj g$thunk$13957$T@1Mj)
        ((case-lambda
           ((g$current-input-port$13960$T@1Mj g$t$13961$T@1Mj)
            ((case-lambda
               ((g$swap$13962$T@1Mj)
                (dynamic-wind
                  g$swap$13962$T@1Mj
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$13957$T@1Mj)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$13962$T@1Mj)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$13963$T@1Mj)
                    (begin
                      (g$current-input-port$13960$T@1Mj g$t$13961$T@1Mj)
                      (set! g$t$13961$T@1Mj g$t$13963$T@1Mj))))
                 (g$current-input-port$13960$T@1Mj)))))))
         current-input-port
         (open-input-file g$filename$13956$T@1Mj)))))
   (g$with-output-to-file$13947$T@1Mj
     g$with-output-to-file$13983$T@1Mj
     (case-lambda
       ((g$filename$13964$T@1Mj g$thunk$13965$T@1Mj)
        ((case-lambda
           ((g$current-output-port$13968$T@1Mj g$t$13969$T@1Mj)
            ((case-lambda
               ((g$swap$13970$T@1Mj)
                (dynamic-wind
                  g$swap$13970$T@1Mj
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$13965$T@1Mj)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$13970$T@1Mj)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$13971$T@1Mj)
                    (begin
                      (g$current-output-port$13968$T@1Mj
                        g$t$13969$T@1Mj)
                      (set! g$t$13969$T@1Mj g$t$13971$T@1Mj))))
                 (g$current-output-port$13968$T@1Mj)))))))
         current-output-port
         (open-output-file g$filename$13964$T@1Mj)))))
   (g$call-with-input-file$13948$T@1Mj
     g$call-with-input-file$13984$T@1Mj
     (case-lambda
       ((g$filename$13972$T@1Mj g$proc$13973$T@1Mj)
        ((case-lambda
           ((g$p$13974$T@1Mj)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$13973$T@1Mj g$p$13974$T@1Mj)))
              (case-lambda (() (close-input-port g$p$13974$T@1Mj))))))
         (open-input-file g$filename$13972$T@1Mj)))))
   (g$call-with-output-file$13949$T@1Mj
     g$call-with-output-file$13985$T@1Mj
     (case-lambda
       ((g$filename$13975$T@1Mj g$proc$13976$T@1Mj)
        ((case-lambda
           ((g$p$13977$T@1Mj)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$13976$T@1Mj g$p$13977$T@1Mj)))
              (case-lambda (() (close-output-port g$p$13977$T@1Mj))))))
         (open-output-file g$filename$13975$T@1Mj)))))
   (g$newline$13950$T@1Mj
     g$newline$13986$T@1Mj
     (case-lambda
       (() (g$newline$13950$T@1Mj (current-output-port)))
       ((g$port$13978$T@1Mj) (display '"
" g$port$13978$T@1Mj)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$6652$13987$T@1Mj
     g$6652$14100$T@1Mj
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$6654$13988$T@1Mj g$6654$14101$T@1Mj '#f)
   (g$6653$13989$T@1Mj
     g$6653$14102$T@1Mj
     (make-record-constructor-descriptor
       g$6652$13987$T@1Mj
       '#f
       g$6654$13988$T@1Mj))
   (g$enum?$13992$T@1Mj
     g$enum?$14103$T@1Mj
     (record-predicate g$6652$13987$T@1Mj))
   (g$make-enum$13993$T@1Mj
     g$make-enum$14104$T@1Mj
     (record-constructor g$6653$13989$T@1Mj))
   (g$enum-value$13994$T@1Mj
     g$enum-value$14105$T@1Mj
     (record-accessor g$6652$13987$T@1Mj '0))
   (g$enum-info$13995$T@1Mj
     g$enum-info$14106$T@1Mj
     (record-accessor g$6652$13987$T@1Mj '1))
   (g$6663$13996$T@1Mj
     g$6663$14107$T@1Mj
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$6665$13997$T@1Mj g$6665$14108$T@1Mj '#f)
   (g$6664$13998$T@1Mj
     g$6664$14109$T@1Mj
     (make-record-constructor-descriptor
       g$6663$13996$T@1Mj
       '#f
       g$6665$13997$T@1Mj))
   (g$enum-universe?$14001$T@1Mj
     g$enum-universe?$14110$T@1Mj
     (record-predicate g$6663$13996$T@1Mj))
   (g$make-enum-universe$14002$T@1Mj
     g$make-enum-universe$14111$T@1Mj
     (record-constructor g$6664$13998$T@1Mj))
   (g$enum-universe-id$14003$T@1Mj
     g$enum-universe-id$14112$T@1Mj
     (record-accessor g$6663$13996$T@1Mj '0))
   (g$enum-universe-symbols$14004$T@1Mj
     g$enum-universe-symbols$14113$T@1Mj
     (record-accessor g$6663$13996$T@1Mj '1))
   (g$enum-universe-mapping$14005$T@1Mj
     g$enum-universe-mapping$14114$T@1Mj
     (record-accessor g$6663$13996$T@1Mj '2))
   (g$enum-universe-value$14006$T@1Mj
     g$enum-universe-value$14115$T@1Mj
     (record-accessor g$6663$13996$T@1Mj '3))
   (g$enum-type=?$14007$T@1Mj
     g$enum-type=?$14116$T@1Mj
     (case-lambda
       ((g$enumset1$14029$T@1Mj g$enumset2$14030$T@1Mj)
        (eq? (g$enum-universe-id$14003$T@1Mj
               (g$enum-info$13995$T@1Mj g$enumset1$14029$T@1Mj))
             (g$enum-universe-id$14003$T@1Mj
               (g$enum-info$13995$T@1Mj g$enumset2$14030$T@1Mj))))))
   (g$get-symbols$14008$T@1Mj
     g$get-symbols$14117$T@1Mj
     (case-lambda
       ((g$enumset$14031$T@1Mj)
        (g$enum-universe-symbols$14004$T@1Mj
          (g$enum-info$13995$T@1Mj g$enumset$14031$T@1Mj)))))
   (g$get-value$14009$T@1Mj
     g$get-value$14118$T@1Mj
     (case-lambda
       ((g$enumset$14032$T@1Mj g$s$14033$T@1Mj)
        (g$hashtable-ref$12571$T@1Mj
          (g$enum-universe-mapping$14005$T@1Mj
            (g$enum-info$13995$T@1Mj g$enumset$14032$T@1Mj))
          g$s$14033$T@1Mj
          '#f))))
   (g$assert-enum$14010$T@1Mj
     g$assert-enum$14119$T@1Mj
     (case-lambda
       ((g$who$14034$T@1Mj g$enumset$14035$T@1Mj)
        (if (not (g$enum?$13992$T@1Mj g$enumset$14035$T@1Mj))
          (assertion-violation
            g$who$14034$T@1Mj
            '"not an enumeration"
            g$enumset$14035$T@1Mj)
          (void)))))
   (g$make-info$14011$T@1Mj
     g$make-info$14120$T@1Mj
     (case-lambda
       ((g$symbols$14036$T@1Mj)
        ((case-lambda
           ((g$ht$14037$T@1Mj)
            ((letrec ((g$f$14038$T@1Mj
                        (case-lambda
                          ((g$s$14039$T@1Mj
                             g$a$14040$T@1Mj
                             g$mask$14041$T@1Mj)
                           (if (null? g$s$14039$T@1Mj)
                             (values
                               (reverse! g$a$14040$T@1Mj)
                               g$ht$14037$T@1Mj
                               (- g$mask$14041$T@1Mj '1))
                             ((case-lambda
                                ((g$n$14042$T@1Mj)
                                 (if (g$symbol?$12467$T@1Mj
                                       g$n$14042$T@1Mj)
                                   (if (g$hashtable-contains?$12574$T@1Mj
                                         g$ht$14037$T@1Mj
                                         g$n$14042$T@1Mj)
                                     (g$f$14038$T@1Mj
                                       (cdr g$s$14039$T@1Mj)
                                       g$a$14040$T@1Mj
                                       g$mask$14041$T@1Mj)
                                     (begin
                                       (g$hashtable-set!$12572$T@1Mj
                                         g$ht$14037$T@1Mj
                                         g$n$14042$T@1Mj
                                         g$mask$14041$T@1Mj)
                                       (g$f$14038$T@1Mj
                                         (cdr g$s$14039$T@1Mj)
                                         (cons
                                           g$n$14042$T@1Mj
                                           g$a$14040$T@1Mj)
                                         (g$bitwise-arithmetic-shift-left$13629$T@1Mj
                                           g$mask$14041$T@1Mj
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$14042$T@1Mj))))
                              (car g$s$14039$T@1Mj)))))))
               g$f$14038$T@1Mj)
             g$symbols$14036$T@1Mj
             '()
             '1)))
         (g$make-eq-hashtable$12568$T@1Mj)))))
   (g$make-name$14012$T@1Mj
     g$make-name$14121$T@1Mj
     (case-lambda
       ((g$symbols$14043$T@1Mj)
        (string->symbol
          (g$format$14160$T@1Mj '"~a" g$symbols$14043$T@1Mj)))))
   (g$make-enumeration$14013$T@1Mj
     g$make-enumeration$14122$T@1Mj
     (case-lambda
       ((g$symbols$14044$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$make-info$14011$T@1Mj g$symbols$14044$T@1Mj)))
          (case-lambda
            ((g$s$14048$T@1Mj g$mapping$14049$T@1Mj g$mask$14050$T@1Mj)
             ((case-lambda
                ((g$mask$14051$T@1Mj
                   g$mapping$14052$T@1Mj
                   g$s$14053$T@1Mj)
                 (g$make-enum$13993$T@1Mj
                   g$mask$14051$T@1Mj
                   (g$make-enum-universe$14002$T@1Mj
                     (g$make-name$14012$T@1Mj g$s$14053$T@1Mj)
                     g$s$14053$T@1Mj
                     g$mapping$14052$T@1Mj
                     g$mask$14051$T@1Mj))))
              g$mask$14050$T@1Mj
              g$mapping$14049$T@1Mj
              g$s$14048$T@1Mj)))))))
   (g$enum-set-universe$14014$T@1Mj
     g$enum-set-universe$14123$T@1Mj
     (case-lambda
       ((g$enumset$14054$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-universe
            g$enumset$14054$T@1Mj)
          ((case-lambda
             ((g$ei$14055$T@1Mj)
              (g$make-enum$13993$T@1Mj
                (g$enum-universe-value$14006$T@1Mj g$ei$14055$T@1Mj)
                g$ei$14055$T@1Mj)))
           (g$enum-info$13995$T@1Mj g$enumset$14054$T@1Mj))))))
   (g$enum-set-indexer$14015$T@1Mj
     g$enum-set-indexer$14124$T@1Mj
     (case-lambda
       ((g$enumset$14056$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-indexer
            g$enumset$14056$T@1Mj)
          (case-lambda
            ((g$symbol$14057$T@1Mj)
             (begin
               (if (not (g$symbol?$12467$T@1Mj g$symbol$14057$T@1Mj))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$14057$T@1Mj)
                 (void))
               ((case-lambda
                  ((g$v$14058$T@1Mj)
                   (if g$v$14058$T@1Mj
                     (- (bitwise-length g$v$14058$T@1Mj) '1)
                     '#f)))
                (g$get-value$14009$T@1Mj
                  g$enumset$14056$T@1Mj
                  g$symbol$14057$T@1Mj)))))))))
   (g$enum-set-constructor$14016$T@1Mj
     g$enum-set-constructor$14125$T@1Mj
     (case-lambda
       ((g$enumset$14059$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-constructor
            g$enumset$14059$T@1Mj)
          (case-lambda
            ((g$symbols$14060$T@1Mj)
             ((letrec ((g$f$14061$T@1Mj
                         (case-lambda
                           ((g$v$14062$T@1Mj g$s$14063$T@1Mj)
                            (if (null? g$s$14063$T@1Mj)
                              (g$make-enum$13993$T@1Mj
                                g$v$14062$T@1Mj
                                (g$enum-info$13995$T@1Mj
                                  g$enumset$14059$T@1Mj))
                              ((case-lambda
                                 ((g$n$14064$T@1Mj)
                                  (if (g$symbol?$12467$T@1Mj
                                        g$n$14064$T@1Mj)
                                    ((case-lambda
                                       ((g$v*$14065$T@1Mj)
                                        (if g$v*$14065$T@1Mj
                                          (g$f$14061$T@1Mj
                                            (bitwise-ior
                                              g$v$14062$T@1Mj
                                              g$v*$14065$T@1Mj)
                                            (cdr g$s$14063$T@1Mj))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$14064$T@1Mj))))
                                     (g$get-value$14009$T@1Mj
                                       g$enumset$14059$T@1Mj
                                       g$n$14064$T@1Mj))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$14064$T@1Mj))))
                               (car g$s$14063$T@1Mj)))))))
                g$f$14061$T@1Mj)
              '0
              g$symbols$14060$T@1Mj)))))))
   (g$enum-set->list$14017$T@1Mj
     g$enum-set->list$14126$T@1Mj
     (case-lambda
       ((g$enumset$14066$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set->list
            g$enumset$14066$T@1Mj)
          ((case-lambda
             ((g$value$14067$T@1Mj)
              ((letrec ((g$f$14068$T@1Mj
                          (case-lambda
                            ((g$s$14069$T@1Mj g$l$14070$T@1Mj)
                             (if (null? g$s$14069$T@1Mj)
                               (reverse! g$l$14070$T@1Mj)
                               (if (g$zero?$12506$T@1Mj
                                     (bitwise-and
                                       (g$get-value$14009$T@1Mj
                                         g$enumset$14066$T@1Mj
                                         (car g$s$14069$T@1Mj))
                                       g$value$14067$T@1Mj))
                                 (g$f$14068$T@1Mj
                                   (cdr g$s$14069$T@1Mj)
                                   g$l$14070$T@1Mj)
                                 (g$f$14068$T@1Mj
                                   (cdr g$s$14069$T@1Mj)
                                   (cons
                                     (car g$s$14069$T@1Mj)
                                     g$l$14070$T@1Mj))))))))
                 g$f$14068$T@1Mj)
               (g$get-symbols$14008$T@1Mj g$enumset$14066$T@1Mj)
               '())))
           (g$enum-value$13994$T@1Mj g$enumset$14066$T@1Mj))))))
   (g$enum-set-member?$14018$T@1Mj
     g$enum-set-member?$14127$T@1Mj
     (case-lambda
       ((g$symbol$14071$T@1Mj g$enumset$14072$T@1Mj)
        (begin
          (if (not (g$symbol?$12467$T@1Mj g$symbol$14071$T@1Mj))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$14071$T@1Mj)
            (void))
          (g$assert-enum$14010$T@1Mj
            'enum-set-member?
            g$enumset$14072$T@1Mj)
          ((case-lambda
             ((g$v$14073$T@1Mj)
              (if g$v$14073$T@1Mj
                (not (g$zero?$12506$T@1Mj
                       (bitwise-and
                         g$v$14073$T@1Mj
                         (g$enum-value$13994$T@1Mj
                           g$enumset$14072$T@1Mj))))
                '#f)))
           (g$get-value$14009$T@1Mj
             g$enumset$14072$T@1Mj
             g$symbol$14071$T@1Mj))))))
   (g$enum-set-subset?$14019$T@1Mj
     g$enum-set-subset?$14128$T@1Mj
     (case-lambda
       ((g$enumset1$14074$T@1Mj g$enumset2$14075$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-subset?
            g$enumset1$14074$T@1Mj)
          (g$assert-enum$14010$T@1Mj
            'enum-set-subset?
            g$enumset2$14075$T@1Mj)
          ((case-lambda
             ((g$v1$14076$T@1Mj g$v2$14077$T@1Mj)
              (if (g$enum-type=?$14007$T@1Mj
                    g$enumset1$14074$T@1Mj
                    g$enumset2$14075$T@1Mj)
                (= (bitwise-and g$v1$14076$T@1Mj g$v2$14077$T@1Mj)
                   g$v1$14076$T@1Mj)
                ((letrec ((g$f$14078$T@1Mj
                            (case-lambda
                              ((g$s$14079$T@1Mj)
                               (if (null? g$s$14079$T@1Mj)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$14080$T@1Mj
                                       g$v2*$14081$T@1Mj)
                                     (if g$v2*$14081$T@1Mj
                                       ((case-lambda
                                          ((g$has1$14082$T@1Mj
                                             g$has2$14083$T@1Mj)
                                           (if (if g$has1$14082$T@1Mj
                                                 (begin
                                                   '#f
                                                   (not g$has2$14083$T@1Mj))
                                                 '#f)
                                             '#f
                                             (g$f$14078$T@1Mj
                                               (cdr g$s$14079$T@1Mj)))))
                                        (not (g$zero?$12506$T@1Mj
                                               (bitwise-and
                                                 g$v1$14076$T@1Mj
                                                 g$v1*$14080$T@1Mj)))
                                        (not (g$zero?$12506$T@1Mj
                                               (bitwise-and
                                                 g$v2$14077$T@1Mj
                                                 g$v2*$14081$T@1Mj))))
                                       '#f)))
                                  (g$get-value$14009$T@1Mj
                                    g$enumset1$14074$T@1Mj
                                    (car g$s$14079$T@1Mj))
                                  (g$get-value$14009$T@1Mj
                                    g$enumset2$14075$T@1Mj
                                    (car g$s$14079$T@1Mj))))))))
                   g$f$14078$T@1Mj)
                 (g$get-symbols$14008$T@1Mj g$enumset1$14074$T@1Mj)))))
           (g$enum-value$13994$T@1Mj g$enumset1$14074$T@1Mj)
           (g$enum-value$13994$T@1Mj g$enumset2$14075$T@1Mj))))))
   (g$enum-set=?$14020$T@1Mj
     g$enum-set=?$14129$T@1Mj
     (case-lambda
       ((g$enumset1$14084$T@1Mj g$enumset2$14085$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj 'enum-set=? g$enumset1$14084$T@1Mj)
          (g$assert-enum$14010$T@1Mj 'enum-set=? g$enumset2$14085$T@1Mj)
          (if (g$enum-set-subset?$14019$T@1Mj
                g$enumset1$14084$T@1Mj
                g$enumset2$14085$T@1Mj)
            (begin
              '#f
              (g$enum-set-subset?$14019$T@1Mj
                g$enumset2$14085$T@1Mj
                g$enumset1$14084$T@1Mj))
            '#f)))))
   (g$enum-set-union$14021$T@1Mj
     g$enum-set-union$14130$T@1Mj
     (case-lambda
       ((g$enumset1$14086$T@1Mj g$enumset2$14087$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-union
            g$enumset1$14086$T@1Mj)
          (g$assert-enum$14010$T@1Mj
            'enum-set-union
            g$enumset2$14087$T@1Mj)
          (if (g$enum-type=?$14007$T@1Mj
                g$enumset1$14086$T@1Mj
                g$enumset2$14087$T@1Mj)
            (g$make-enum$13993$T@1Mj
              (bitwise-ior
                (g$enum-value$13994$T@1Mj g$enumset1$14086$T@1Mj)
                (g$enum-value$13994$T@1Mj g$enumset2$14087$T@1Mj))
              (g$enum-info$13995$T@1Mj g$enumset1$14086$T@1Mj))
            '#f)))))
   (g$enum-set-intersection$14022$T@1Mj
     g$enum-set-intersection$14131$T@1Mj
     (case-lambda
       ((g$enumset1$14088$T@1Mj g$enumset2$14089$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-intersection
            g$enumset1$14088$T@1Mj)
          (g$assert-enum$14010$T@1Mj
            'enum-set-intersection
            g$enumset2$14089$T@1Mj)
          (if (g$enum-type=?$14007$T@1Mj
                g$enumset1$14088$T@1Mj
                g$enumset2$14089$T@1Mj)
            (g$make-enum$13993$T@1Mj
              (bitwise-and
                (g$enum-value$13994$T@1Mj g$enumset1$14088$T@1Mj)
                (g$enum-value$13994$T@1Mj g$enumset2$14089$T@1Mj))
              (g$enum-info$13995$T@1Mj g$enumset1$14088$T@1Mj))
            '#f)))))
   (g$enum-set-difference$14023$T@1Mj
     g$enum-set-difference$14132$T@1Mj
     (case-lambda
       ((g$enumset1$14090$T@1Mj g$enumset2$14091$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-difference
            g$enumset1$14090$T@1Mj)
          (g$assert-enum$14010$T@1Mj
            'enum-set-difference
            g$enumset2$14091$T@1Mj)
          (if (g$enum-type=?$14007$T@1Mj
                g$enumset1$14090$T@1Mj
                g$enumset2$14091$T@1Mj)
            (g$make-enum$13993$T@1Mj
              (bitwise-and
                (g$enum-value$13994$T@1Mj g$enumset1$14090$T@1Mj)
                (bitwise-not
                  (g$enum-value$13994$T@1Mj g$enumset2$14091$T@1Mj)))
              (g$enum-info$13995$T@1Mj g$enumset1$14090$T@1Mj))
            '#f)))))
   (g$enum-set-complement$14024$T@1Mj
     g$enum-set-complement$14133$T@1Mj
     (case-lambda
       ((g$enumset$14092$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-complement
            g$enumset$14092$T@1Mj)
          (g$make-enum$13993$T@1Mj
            (bitwise-not
              (g$enum-value$13994$T@1Mj g$enumset$14092$T@1Mj))
            (g$enum-info$13995$T@1Mj g$enumset$14092$T@1Mj))))))
   (g$enum-set-projection$14025$T@1Mj
     g$enum-set-projection$14134$T@1Mj
     (case-lambda
       ((g$enumset1$14093$T@1Mj g$enumset2$14094$T@1Mj)
        (begin
          (g$assert-enum$14010$T@1Mj
            'enum-set-projection
            g$enumset1$14093$T@1Mj)
          (g$assert-enum$14010$T@1Mj
            'enum-set-projection
            g$enumset2$14094$T@1Mj)
          ((case-lambda
             ((g$v1$14095$T@1Mj)
              ((letrec ((g$f$14096$T@1Mj
                          (case-lambda
                            ((g$s$14097$T@1Mj g$v$14098$T@1Mj)
                             (if (null? g$s$14097$T@1Mj)
                               (g$make-enum$13993$T@1Mj
                                 g$v$14098$T@1Mj
                                 (g$enum-info$13995$T@1Mj
                                   g$enumset2$14094$T@1Mj))
                               (if (g$zero?$12506$T@1Mj
                                     (bitwise-and
                                       g$v1$14095$T@1Mj
                                       (g$get-value$14009$T@1Mj
                                         g$enumset1$14093$T@1Mj
                                         (car g$s$14097$T@1Mj))))
                                 (g$f$14096$T@1Mj
                                   (cdr g$s$14097$T@1Mj)
                                   g$v$14098$T@1Mj)
                                 ((case-lambda
                                    ((g$v2$14099$T@1Mj)
                                     (if g$v2$14099$T@1Mj
                                       (g$f$14096$T@1Mj
                                         (cdr g$s$14097$T@1Mj)
                                         (bitwise-ior
                                           g$v$14098$T@1Mj
                                           g$v2$14099$T@1Mj))
                                       (g$f$14096$T@1Mj
                                         (cdr g$s$14097$T@1Mj)
                                         g$v$14098$T@1Mj))))
                                  (g$get-value$14009$T@1Mj
                                    g$enumset2$14094$T@1Mj
                                    (car g$s$14097$T@1Mj)))))))))
                 g$f$14096$T@1Mj)
               (g$get-symbols$14008$T@1Mj g$enumset1$14093$T@1Mj)
               '0)))
           (g$enum-value$13994$T@1Mj g$enumset1$14093$T@1Mj)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$14026$T@1Mj g$p$14027$T@1Mj g$wr$14028$T@1Mj)
       (g$fprintf$14159$T@1Mj
         g$p$14027$T@1Mj
         '"#[enum-set ~a]"
         (g$enum-set->list$14017$T@1Mj g$x$14026$T@1Mj))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$14135$T@1Mj
     g$dofmt$14157$T@1Mj
     (case-lambda
       ((g$p$14139$T@1Mj g$cntl$14140$T@1Mj g$args$14141$T@1Mj)
        ((case-lambda
           ((g$nmax$14142$T@1Mj)
            ((letrec ((g$loop$14143$T@1Mj
                        (case-lambda
                          ((g$n$14144$T@1Mj g$a$14145$T@1Mj)
                           (if (fx<=?
                                 g$n$14144$T@1Mj
                                 g$nmax$14142$T@1Mj)
                             ((case-lambda
                                ((g$c$14146$T@1Mj)
                                 (if (if (g$char=?$12520$T@1Mj
                                           g$c$14146$T@1Mj
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$14144$T@1Mj
                                           g$nmax$14142$T@1Mj))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$14147$T@1Mj)
                                       (if (eqv? g$t$14147$T@1Mj '#\a)
                                         (begin
                                           (display
                                             (car g$a$14145$T@1Mj)
                                             g$p$14139$T@1Mj)
                                           (g$loop$14143$T@1Mj
                                             (fx+ g$n$14144$T@1Mj '2)
                                             (cdr g$a$14145$T@1Mj)))
                                         (if (eqv? g$t$14147$T@1Mj '#\s)
                                           (begin
                                             (write
                                               (car g$a$14145$T@1Mj)
                                               g$p$14139$T@1Mj)
                                             (g$loop$14143$T@1Mj
                                               (fx+ g$n$14144$T@1Mj '2)
                                               (cdr g$a$14145$T@1Mj)))
                                           (if (eqv?
                                                 g$t$14147$T@1Mj
                                                 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$14145$T@1Mj)
                                                   '2)
                                                 g$p$14139$T@1Mj)
                                               (g$loop$14143$T@1Mj
                                                 (fx+ g$n$14144$T@1Mj
                                                      '2)
                                                 (cdr g$a$14145$T@1Mj)))
                                             (if (eqv?
                                                   g$t$14147$T@1Mj
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$14145$T@1Mj)
                                                     '8)
                                                   g$p$14139$T@1Mj)
                                                 (g$loop$14143$T@1Mj
                                                   (fx+ g$n$14144$T@1Mj
                                                        '2)
                                                   (cdr g$a$14145$T@1Mj)))
                                               (if (eqv?
                                                     g$t$14147$T@1Mj
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$14145$T@1Mj)
                                                       '16)
                                                     g$p$14139$T@1Mj)
                                                   (g$loop$14143$T@1Mj
                                                     (fx+ g$n$14144$T@1Mj
                                                          '2)
                                                     (cdr g$a$14145$T@1Mj)))
                                                 (if (eqv?
                                                       g$t$14147$T@1Mj
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$14145$T@1Mj)
                                                         '10)
                                                       g$p$14139$T@1Mj)
                                                     (g$loop$14143$T@1Mj
                                                       (fx+ g$n$14144$T@1Mj
                                                            '2)
                                                       (cdr g$a$14145$T@1Mj)))
                                                   (if (eqv?
                                                         g$t$14147$T@1Mj
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$13981$T@1Mj
                                                         '#\~
                                                         g$p$14139$T@1Mj)
                                                       (g$loop$14143$T@1Mj
                                                         (fx+ g$n$14144$T@1Mj
                                                              '2)
                                                         g$a$14145$T@1Mj))
                                                     (begin
                                                       (g$write-char$13981$T@1Mj
                                                         g$c$14146$T@1Mj
                                                         g$p$14139$T@1Mj)
                                                       (g$loop$14143$T@1Mj
                                                         (fx+ g$n$14144$T@1Mj
                                                              '1)
                                                         g$a$14145$T@1Mj)))))))))))
                                    (string-ref
                                      g$cntl$14140$T@1Mj
                                      (fx+ g$n$14144$T@1Mj '1)))
                                   (begin
                                     (g$write-char$13981$T@1Mj
                                       g$c$14146$T@1Mj
                                       g$p$14139$T@1Mj)
                                     (g$loop$14143$T@1Mj
                                       (fx+ g$n$14144$T@1Mj '1)
                                       g$a$14145$T@1Mj)))))
                              (string-ref
                                g$cntl$14140$T@1Mj
                                g$n$14144$T@1Mj))
                             (void))))))
               g$loop$14143$T@1Mj)
             '0
             g$args$14141$T@1Mj)))
         (fx- (string-length g$cntl$14140$T@1Mj) '1)))))
   (g$printf$14136$T@1Mj
     g$printf$14158$T@1Mj
     (case-lambda
       ((g$control$14148$T@1Mj . g$args$14149$T@1Mj)
        (g$dofmt$14135$T@1Mj
          (current-output-port)
          g$control$14148$T@1Mj
          g$args$14149$T@1Mj))))
   (g$fprintf$14137$T@1Mj
     g$fprintf$14159$T@1Mj
     (case-lambda
       ((g$p$14150$T@1Mj g$control$14151$T@1Mj . g$args$14152$T@1Mj)
        (g$dofmt$14135$T@1Mj
          g$p$14150$T@1Mj
          g$control$14151$T@1Mj
          g$args$14152$T@1Mj))))
   (g$format$14138$T@1Mj
     g$format$14160$T@1Mj
     (case-lambda
       ((g$control$14153$T@1Mj . g$args$14154$T@1Mj)
        (call-with-values
          g$open-string-output-port$13920$T@1Mj
          (case-lambda
            ((g$p$14155$T@1Mj g$c$14156$T@1Mj)
             (begin
               (g$dofmt$14135$T@1Mj
                 g$p$14155$T@1Mj
                 g$control$14153$T@1Mj
                 g$args$14154$T@1Mj)
               (g$c$14156$T@1Mj)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$14161$T@1Mj
     g$make-traced-macro$14164$T@1Mj
     (case-lambda
       ((g$name$14162$T@1Mj g$x$14163$T@1Mj)
        (if (g$procedure?$12469$T@1Mj g$x$14163$T@1Mj)
          (make-traced-procedure
            g$name$14162$T@1Mj
            g$x$14163$T@1Mj
            g$syntax->datum$19717$T@1Mj)
          (if (g$variable-transformer?$19538$T@1Mj g$x$14163$T@1Mj)
            (g$make-variable-transformer$19536$T@1Mj
              (make-traced-procedure
                g$name$14162$T@1Mj
                (g$variable-transformer-procedure$19539$T@1Mj
                  g$x$14163$T@1Mj)
                g$syntax->datum$19717$T@1Mj))
            g$x$14163$T@1Mj))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$14165$T@1Mj
     g$library-version-mismatch-warning$14366$T@1Mj
     (case-lambda
       ((g$name$14338$T@1Mj
          g$depname$14339$T@1Mj
          g$filename$14340$T@1Mj)
        (g$fprintf$14159$T@1Mj
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$14338$T@1Mj
          g$depname$14339$T@1Mj
          g$filename$14340$T@1Mj))))
   (g$file-locator-resolution-error$14166$T@1Mj
     g$file-locator-resolution-error$14367$T@1Mj
     (case-lambda
       ((g$libname$14341$T@1Mj g$failed-list$14342$T@1Mj)
        (letrec* ((g$6841$14343$T@1Mj
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$13136$T@1Mj
                      'g$6844$T@1Mj
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$6843$14344$T@1Mj '#f)
                  (g$6842$14345$T@1Mj
                    (make-record-constructor-descriptor
                      g$6841$14343$T@1Mj
                      g$&condition-rcd$13137$T@1Mj
                      g$6843$14344$T@1Mj))
                  (g$6840$14348$T@1Mj
                    (record-predicate g$6841$14343$T@1Mj))
                  (g$make-library-resolution-condition$14349$T@1Mj
                    (record-constructor g$6842$14345$T@1Mj))
                  (g$6838$14350$T@1Mj
                    (record-accessor g$6841$14343$T@1Mj '0))
                  (g$6839$14351$T@1Mj
                    (record-accessor g$6841$14343$T@1Mj '1))
                  (g$library-resolution-condition?$14352$T@1Mj
                    (condition-predicate g$6841$14343$T@1Mj))
                  (g$condition-library$14353$T@1Mj
                    (condition-accessor
                      g$6841$14343$T@1Mj
                      g$6838$14350$T@1Mj))
                  (g$condition-files$14354$T@1Mj
                    (condition-accessor
                      g$6841$14343$T@1Mj
                      g$6839$14351$T@1Mj)))
          (raise
            (condition
              (g$make-error$13168$T@1Mj)
              (g$make-who-condition$13202$T@1Mj 'expander)
              (g$make-message-condition$13142$T@1Mj
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$14349$T@1Mj
                g$libname$14341$T@1Mj
                g$failed-list$14342$T@1Mj)))))))
   (g$read-library-source-file$14167$T@1Mj
     g$read-library-source-file$14368$T@1Mj
     (case-lambda
       ((g$file-name$14355$T@1Mj)
        (g$with-input-from-file$13982$T@1Mj
          g$file-name$14355$T@1Mj
          read-annotated))))
   (g$make-parameter$14168$T@1Mj
     g$make-parameter$14369$T@1Mj
     (case-lambda
       ((g$x$14356$T@1Mj)
        (g$make-parameter$14168$T@1Mj
          g$x$14356$T@1Mj
          (case-lambda ((g$x$14357$T@1Mj) g$x$14357$T@1Mj))))
       ((g$x$14358$T@1Mj g$fender$14359$T@1Mj)
        (begin
          (if (not (g$procedure?$12469$T@1Mj g$fender$14359$T@1Mj))
            (g$assertion-error$19710$T@1Mj
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$14360$T@1Mj)
              (case-lambda
                (() g$x$14360$T@1Mj)
                ((g$v$14361$T@1Mj)
                 (set! g$x$14360$T@1Mj
                   (g$fender$14359$T@1Mj g$v$14361$T@1Mj))))))
           (g$fender$14359$T@1Mj g$x$14358$T@1Mj))))))
   (g$file-options-constructor$14334$T@1Mj
     g$file-options-constructor$14370$T@1Mj
     (g$make-parameter$14168$T@1Mj '#f))
   (g$file-options-spec$14335$T@1Mj
     g$file-options-spec$14371$T@1Mj
     (case-lambda
       ((g$x$14362$T@1Mj)
        ((g$file-options-constructor$14334$T@1Mj) g$x$14362$T@1Mj))))
   (g$set-label-binding!$14336$T@1Mj
     g$set-label-binding!$14372$T@1Mj
     (case-lambda
       ((g$label$14363$T@1Mj g$binding$14364$T@1Mj)
        (set-symbol-value! g$label$14363$T@1Mj g$binding$14364$T@1Mj))))
   (g$label-binding$14337$T@1Mj
     g$label-binding$14373$T@1Mj
     (case-lambda
       ((g$label$14365$T@1Mj)
        (if (symbol-bound? g$label$14365$T@1Mj)
          (begin '#f (symbol-value g$label$14365$T@1Mj))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$14374$T@1Mj
     g$genwrite:newline-str$14567$T@1Mj
     (make-string '1 '#\newline))
   (g$symbol->string$14375$T@1Mj
     g$symbol->string$14568$T@1Mj
     (case-lambda
       ((g$s$14387$T@1Mj)
        (symbol->string
          (if (g$pretty-gensyms$14384$T@1Mj)
            (ungensym g$s$14387$T@1Mj)
            g$s$14387$T@1Mj)))))
   (g$read-macro-body$14376$T@1Mj
     g$read-macro-body$14569$T@1Mj
     (case-lambda
       ((g$l$14388$T@1Mj) (g$cadr$12477$T@1Mj g$l$14388$T@1Mj))))
   (g$read-macro-prefix$14377$T@1Mj
     g$read-macro-prefix$14570$T@1Mj
     (case-lambda
       ((g$l$14389$T@1Mj)
        ((case-lambda
           ((g$head$14390$T@1Mj g$tail$14391$T@1Mj)
            ((case-lambda
               ((g$t$14392$T@1Mj)
                (if (eqv? g$t$14392$T@1Mj 'syntax)
                  '"#'"
                  (if (eqv? g$t$14392$T@1Mj 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$14392$T@1Mj 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$14392$T@1Mj 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$14392$T@1Mj 'quote)
                          '"'"
                          (if (eqv? g$t$14392$T@1Mj 'quasiquote)
                            '"`"
                            (if (eqv? g$t$14392$T@1Mj 'unquote)
                              '","
                              (if (eqv?
                                    g$t$14392$T@1Mj
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$14390$T@1Mj)))
         (car g$l$14389$T@1Mj)
         (cdr g$l$14389$T@1Mj)))))
   (g$length1?$14378$T@1Mj
     g$length1?$14571$T@1Mj
     (case-lambda
       ((g$l$14393$T@1Mj)
        (if (pair? g$l$14393$T@1Mj)
          (begin '#f (null? (cdr g$l$14393$T@1Mj)))
          '#f))))
   (g$read-macro?$14379$T@1Mj
     g$read-macro?$14572$T@1Mj
     (case-lambda
       ((g$l$14394$T@1Mj)
        ((case-lambda
           ((g$head$14395$T@1Mj g$tail$14396$T@1Mj)
            ((case-lambda
               ((g$t$14397$T@1Mj)
                (if (g$memv$11717$T@1Mj
                      g$t$14397$T@1Mj
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$14378$T@1Mj g$tail$14396$T@1Mj)
                  '#f)))
             g$head$14395$T@1Mj)))
         (car g$l$14394$T@1Mj)
         (cdr g$l$14394$T@1Mj)))))
   (g$generic-write$14380$T@1Mj
     g$generic-write$14573$T@1Mj
     (case-lambda
       ((g$obj$14398$T@1Mj
          g$display?$14399$T@1Mj
          g$width$14400$T@1Mj
          g$output$14401$T@1Mj)
        (letrec* ((g$out$14402$T@1Mj
                    (case-lambda
                      ((g$str$14551$T@1Mj g$col$14552$T@1Mj)
                       (if g$col$14552$T@1Mj
                         (if (g$output$14401$T@1Mj g$str$14551$T@1Mj)
                           (begin
                             '#f
                             (fx+ g$col$14552$T@1Mj
                                  (string-length g$str$14551$T@1Mj)))
                           '#f)
                         '#f))))
                  (g$wr$14403$T@1Mj
                    (case-lambda
                      ((g$obj$14534$T@1Mj g$col$14535$T@1Mj)
                       (letrec* ((g$wr-expr$14536$T@1Mj
                                   (case-lambda
                                     ((g$expr$14549$T@1Mj
                                        g$col$14550$T@1Mj)
                                      (if (g$read-macro?$14379$T@1Mj
                                            g$expr$14549$T@1Mj)
                                        (g$wr$14403$T@1Mj
                                          (g$read-macro-body$14376$T@1Mj
                                            g$expr$14549$T@1Mj)
                                          (g$out$14402$T@1Mj
                                            (g$read-macro-prefix$14377$T@1Mj
                                              g$expr$14549$T@1Mj)
                                            g$col$14550$T@1Mj))
                                        (g$wr-lst$14537$T@1Mj
                                          g$expr$14549$T@1Mj
                                          g$col$14550$T@1Mj)))))
                                 (g$wr-lst$14537$T@1Mj
                                   (case-lambda
                                     ((g$l$14544$T@1Mj
                                        g$col$14545$T@1Mj)
                                      (if (pair? g$l$14544$T@1Mj)
                                        ((letrec ((g$loop$14546$T@1Mj
                                                    (case-lambda
                                                      ((g$l$14547$T@1Mj
                                                         g$col$14548$T@1Mj)
                                                       (if (not g$col$14548$T@1Mj)
                                                         g$col$14548$T@1Mj
                                                         (if (pair?
                                                               g$l$14547$T@1Mj)
                                                           (g$loop$14546$T@1Mj
                                                             (cdr g$l$14547$T@1Mj)
                                                             (g$wr$14403$T@1Mj
                                                               (car g$l$14547$T@1Mj)
                                                               (g$out$14402$T@1Mj
                                                                 '" "
                                                                 g$col$14548$T@1Mj)))
                                                           (if (null?
                                                                 g$l$14547$T@1Mj)
                                                             (g$out$14402$T@1Mj
                                                               '")"
                                                               g$col$14548$T@1Mj)
                                                             (g$out$14402$T@1Mj
                                                               '")"
                                                               (g$wr$14403$T@1Mj
                                                                 g$l$14547$T@1Mj
                                                                 (g$out$14402$T@1Mj
                                                                   '" . "
                                                                   g$col$14548$T@1Mj))))))))))
                                           g$loop$14546$T@1Mj)
                                         (cdr g$l$14544$T@1Mj)
                                         (if g$col$14545$T@1Mj
                                           (begin
                                             '#f
                                             (g$wr$14403$T@1Mj
                                               (car g$l$14544$T@1Mj)
                                               (g$out$14402$T@1Mj
                                                 '"("
                                                 g$col$14545$T@1Mj)))
                                           '#f))
                                        (g$out$14402$T@1Mj
                                          '"()"
                                          g$col$14545$T@1Mj))))))
                         (if (pair? g$obj$14534$T@1Mj)
                           (g$wr-expr$14536$T@1Mj
                             g$obj$14534$T@1Mj
                             g$col$14535$T@1Mj)
                           (if (null? g$obj$14534$T@1Mj)
                             (g$wr-lst$14537$T@1Mj
                               g$obj$14534$T@1Mj
                               g$col$14535$T@1Mj)
                             (if (g$vector?$12465$T@1Mj
                                   g$obj$14534$T@1Mj)
                               (g$wr-lst$14537$T@1Mj
                                 (vector->list g$obj$14534$T@1Mj)
                                 (g$out$14402$T@1Mj
                                   '"#"
                                   g$col$14535$T@1Mj))
                               (if (g$boolean?$12468$T@1Mj
                                     g$obj$14534$T@1Mj)
                                 (g$out$14402$T@1Mj
                                   (if g$obj$14534$T@1Mj '"#t" '"#f")
                                   g$col$14535$T@1Mj)
                                 (if (number? g$obj$14534$T@1Mj)
                                   (g$out$14402$T@1Mj
                                     (number->string g$obj$14534$T@1Mj)
                                     g$col$14535$T@1Mj)
                                   (if (g$symbol?$12467$T@1Mj
                                         g$obj$14534$T@1Mj)
                                     (g$out$14402$T@1Mj
                                       (g$symbol->string$14375$T@1Mj
                                         g$obj$14534$T@1Mj)
                                       g$col$14535$T@1Mj)
                                     (if (string? g$obj$14534$T@1Mj)
                                       (if g$display?$14399$T@1Mj
                                         (g$out$14402$T@1Mj
                                           g$obj$14534$T@1Mj
                                           g$col$14535$T@1Mj)
                                         ((letrec ((g$loop$14538$T@1Mj
                                                     (case-lambda
                                                       ((g$i$14539$T@1Mj
                                                          g$j$14540$T@1Mj
                                                          g$col$14541$T@1Mj)
                                                        (if (if g$col$14541$T@1Mj
                                                              (begin
                                                                '#f
                                                                (fx<?
                                                                  g$j$14540$T@1Mj
                                                                  (string-length
                                                                    g$obj$14534$T@1Mj)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$14542$T@1Mj)
                                                              (if ((case-lambda
                                                                     ((g$t$14543$T@1Mj)
                                                                      (if g$t$14543$T@1Mj
                                                                        g$t$14543$T@1Mj
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12520$T@1Mj
                                                                            g$c$14542$T@1Mj
                                                                            '#\")))))
                                                                   (g$char=?$12520$T@1Mj
                                                                     g$c$14542$T@1Mj
                                                                     '#\\))
                                                                (g$loop$14538$T@1Mj
                                                                  g$j$14540$T@1Mj
                                                                  (fx+ g$j$14540$T@1Mj
                                                                       '1)
                                                                  (g$out$14402$T@1Mj
                                                                    '"\\"
                                                                    (g$out$14402$T@1Mj
                                                                      (substring
                                                                        g$obj$14534$T@1Mj
                                                                        g$i$14539$T@1Mj
                                                                        g$j$14540$T@1Mj)
                                                                      g$col$14541$T@1Mj)))
                                                                (g$loop$14538$T@1Mj
                                                                  g$i$14539$T@1Mj
                                                                  (fx+ g$j$14540$T@1Mj
                                                                       '1)
                                                                  g$col$14541$T@1Mj))))
                                                           (string-ref
                                                             g$obj$14534$T@1Mj
                                                             g$j$14540$T@1Mj))
                                                          (g$out$14402$T@1Mj
                                                            '"\""
                                                            (g$out$14402$T@1Mj
                                                              (substring
                                                                g$obj$14534$T@1Mj
                                                                g$i$14539$T@1Mj
                                                                g$j$14540$T@1Mj)
                                                              g$col$14541$T@1Mj)))))))
                                            g$loop$14538$T@1Mj)
                                          '0
                                          '0
                                          (g$out$14402$T@1Mj
                                            '"\""
                                            g$col$14535$T@1Mj)))
                                       (g$out$14402$T@1Mj
                                         (g$format$14160$T@1Mj
                                           (if g$display?$14399$T@1Mj
                                             '"~a"
                                             '"~s")
                                           g$obj$14534$T@1Mj)
                                         g$col$14535$T@1Mj))))))))))))
                  (g$pp$14404$T@1Mj
                    (case-lambda
                      ((g$obj$14405$T@1Mj g$col$14406$T@1Mj)
                       (letrec* ((g$spaces$14407$T@1Mj
                                   (case-lambda
                                     ((g$n$14532$T@1Mj
                                        g$col$14533$T@1Mj)
                                      (if (fx>? g$n$14532$T@1Mj '0)
                                        (if (fx>? g$n$14532$T@1Mj '7)
                                          (g$spaces$14407$T@1Mj
                                            (fx- g$n$14532$T@1Mj '8)
                                            (g$out$14402$T@1Mj
                                              '"        "
                                              g$col$14533$T@1Mj))
                                          (g$out$14402$T@1Mj
                                            (substring
                                              '"        "
                                              '0
                                              g$n$14532$T@1Mj)
                                            g$col$14533$T@1Mj))
                                        g$col$14533$T@1Mj))))
                                 (g$indent$14408$T@1Mj
                                   (case-lambda
                                     ((g$to$14530$T@1Mj
                                        g$col$14531$T@1Mj)
                                      (if g$col$14531$T@1Mj
                                        (begin
                                          '#f
                                          (if (fx<?
                                                g$to$14530$T@1Mj
                                                g$col$14531$T@1Mj)
                                            (if (g$out$14402$T@1Mj
                                                  g$genwrite:newline-str$14374$T@1Mj
                                                  g$col$14531$T@1Mj)
                                              (begin
                                                '#f
                                                (g$spaces$14407$T@1Mj
                                                  g$to$14530$T@1Mj
                                                  '0))
                                              '#f)
                                            (g$spaces$14407$T@1Mj
                                              (fx- g$to$14530$T@1Mj
                                                   g$col$14531$T@1Mj)
                                              g$col$14531$T@1Mj)))
                                        '#f))))
                                 (g$pr$14409$T@1Mj
                                   (case-lambda
                                     ((g$obj$14522$T@1Mj
                                        g$col$14523$T@1Mj
                                        g$extra$14524$T@1Mj
                                        g$pp-pair$14525$T@1Mj)
                                      (if ((case-lambda
                                             ((g$t$14526$T@1Mj)
                                              (if g$t$14526$T@1Mj
                                                g$t$14526$T@1Mj
                                                (begin
                                                  '#f
                                                  (g$vector?$12465$T@1Mj
                                                    g$obj$14522$T@1Mj)))))
                                           (pair? g$obj$14522$T@1Mj))
                                        ((case-lambda
                                           ((g$result$14527$T@1Mj
                                              g$left$14528$T@1Mj)
                                            (begin
                                              (g$generic-write$14380$T@1Mj
                                                g$obj$14522$T@1Mj
                                                g$display?$14399$T@1Mj
                                                '#f
                                                (case-lambda
                                                  ((g$str$14529$T@1Mj)
                                                   (begin
                                                     (set! g$result$14527$T@1Mj
                                                       (cons
                                                         g$str$14529$T@1Mj
                                                         g$result$14527$T@1Mj))
                                                     (set! g$left$14528$T@1Mj
                                                       (fx- g$left$14528$T@1Mj
                                                            (string-length
                                                              g$str$14529$T@1Mj)))
                                                     (fx>?
                                                       g$left$14528$T@1Mj
                                                       '0)))))
                                              (if (fx>?
                                                    g$left$14528$T@1Mj
                                                    '0)
                                                (g$out$14402$T@1Mj
                                                  (g$reverse-string-append$14385$T@1Mj
                                                    g$result$14527$T@1Mj)
                                                  g$col$14523$T@1Mj)
                                                (if (pair?
                                                      g$obj$14522$T@1Mj)
                                                  (g$pp-pair$14525$T@1Mj
                                                    g$obj$14522$T@1Mj
                                                    g$col$14523$T@1Mj
                                                    g$extra$14524$T@1Mj)
                                                  (g$pp-list$14412$T@1Mj
                                                    (vector->list
                                                      g$obj$14522$T@1Mj)
                                                    (g$out$14402$T@1Mj
                                                      '"#"
                                                      g$col$14523$T@1Mj)
                                                    g$extra$14524$T@1Mj
                                                    g$pp-expr$14410$T@1Mj))))))
                                         '()
                                         (g$min$12510$T@1Mj
                                           (fx+ (fx- (fx- g$width$14400$T@1Mj
                                                          g$col$14523$T@1Mj)
                                                     g$extra$14524$T@1Mj)
                                                '1)
                                           (g$pretty-width$14381$T@1Mj)))
                                        (g$wr$14403$T@1Mj
                                          g$obj$14522$T@1Mj
                                          g$col$14523$T@1Mj)))))
                                 (g$pp-expr$14410$T@1Mj
                                   (case-lambda
                                     ((g$expr$14517$T@1Mj
                                        g$col$14518$T@1Mj
                                        g$extra$14519$T@1Mj)
                                      (if (g$read-macro?$14379$T@1Mj
                                            g$expr$14517$T@1Mj)
                                        (g$pr$14409$T@1Mj
                                          (g$read-macro-body$14376$T@1Mj
                                            g$expr$14517$T@1Mj)
                                          (g$out$14402$T@1Mj
                                            (g$read-macro-prefix$14377$T@1Mj
                                              g$expr$14517$T@1Mj)
                                            g$col$14518$T@1Mj)
                                          g$extra$14519$T@1Mj
                                          g$pp-expr$14410$T@1Mj)
                                        ((case-lambda
                                           ((g$head$14520$T@1Mj)
                                            (if (g$symbol?$12467$T@1Mj
                                                  g$head$14520$T@1Mj)
                                              ((case-lambda
                                                 ((g$proc$14521$T@1Mj)
                                                  (if g$proc$14521$T@1Mj
                                                    (g$proc$14521$T@1Mj
                                                      g$expr$14517$T@1Mj
                                                      g$col$14518$T@1Mj
                                                      g$extra$14519$T@1Mj)
                                                    (if (fx>?
                                                          (string-length
                                                            (g$symbol->string$14375$T@1Mj
                                                              g$head$14520$T@1Mj))
                                                          (g$max-call-head-width$14383$T@1Mj))
                                                      (g$pp-general$14414$T@1Mj
                                                        g$expr$14517$T@1Mj
                                                        g$col$14518$T@1Mj
                                                        g$extra$14519$T@1Mj
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$14410$T@1Mj)
                                                      (g$pp-call$14411$T@1Mj
                                                        g$expr$14517$T@1Mj
                                                        g$col$14518$T@1Mj
                                                        g$extra$14519$T@1Mj
                                                        g$pp-expr$14410$T@1Mj)))))
                                               (g$style$14426$T@1Mj
                                                 g$head$14520$T@1Mj))
                                              (g$pp-list$14412$T@1Mj
                                                g$expr$14517$T@1Mj
                                                g$col$14518$T@1Mj
                                                g$extra$14519$T@1Mj
                                                g$pp-expr$14410$T@1Mj))))
                                         (car g$expr$14517$T@1Mj))))))
                                 (g$pp-call$14411$T@1Mj
                                   (case-lambda
                                     ((g$expr$14512$T@1Mj
                                        g$col$14513$T@1Mj
                                        g$extra$14514$T@1Mj
                                        g$pp-item$14515$T@1Mj)
                                      ((case-lambda
                                         ((g$col*$14516$T@1Mj)
                                          (if g$col$14513$T@1Mj
                                            (begin
                                              '#f
                                              (g$pp-down$14413$T@1Mj
                                                (cdr g$expr$14512$T@1Mj)
                                                g$col*$14516$T@1Mj
                                                (fx+ g$col*$14516$T@1Mj
                                                     '1)
                                                g$extra$14514$T@1Mj
                                                g$pp-item$14515$T@1Mj))
                                            '#f)))
                                       (g$wr$14403$T@1Mj
                                         (car g$expr$14512$T@1Mj)
                                         (g$out$14402$T@1Mj
                                           '"("
                                           g$col$14513$T@1Mj))))))
                                 (g$pp-list$14412$T@1Mj
                                   (case-lambda
                                     ((g$l$14507$T@1Mj
                                        g$col$14508$T@1Mj
                                        g$extra$14509$T@1Mj
                                        g$pp-item$14510$T@1Mj)
                                      ((case-lambda
                                         ((g$col$14511$T@1Mj)
                                          (g$pp-down$14413$T@1Mj
                                            g$l$14507$T@1Mj
                                            g$col$14511$T@1Mj
                                            g$col$14511$T@1Mj
                                            g$extra$14509$T@1Mj
                                            g$pp-item$14510$T@1Mj)))
                                       (g$out$14402$T@1Mj
                                         '"("
                                         g$col$14508$T@1Mj)))))
                                 (g$pp-down$14413$T@1Mj
                                   (case-lambda
                                     ((g$l$14497$T@1Mj
                                        g$col1$14498$T@1Mj
                                        g$col2$14499$T@1Mj
                                        g$extra$14500$T@1Mj
                                        g$pp-item$14501$T@1Mj)
                                      ((letrec ((g$loop$14502$T@1Mj
                                                  (case-lambda
                                                    ((g$l$14503$T@1Mj
                                                       g$col$14504$T@1Mj)
                                                     (if g$col$14504$T@1Mj
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$14503$T@1Mj)
                                                           ((case-lambda
                                                              ((g$rest$14505$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$extra$14506$T@1Mj)
                                                                   (g$loop$14502$T@1Mj
                                                                     g$rest$14505$T@1Mj
                                                                     (g$pr$14409$T@1Mj
                                                                       (car g$l$14503$T@1Mj)
                                                                       (g$indent$14408$T@1Mj
                                                                         g$col2$14499$T@1Mj
                                                                         g$col$14504$T@1Mj)
                                                                       g$extra$14506$T@1Mj
                                                                       g$pp-item$14501$T@1Mj))))
                                                                (if (null?
                                                                      g$rest$14505$T@1Mj)
                                                                  (fx+ g$extra$14500$T@1Mj
                                                                       '1)
                                                                  '0))))
                                                            (cdr g$l$14503$T@1Mj))
                                                           (if (null?
                                                                 g$l$14503$T@1Mj)
                                                             (g$out$14402$T@1Mj
                                                               '")"
                                                               g$col$14504$T@1Mj)
                                                             (g$out$14402$T@1Mj
                                                               '")"
                                                               (g$pr$14409$T@1Mj
                                                                 g$l$14503$T@1Mj
                                                                 (g$indent$14408$T@1Mj
                                                                   g$col2$14499$T@1Mj
                                                                   (g$out$14402$T@1Mj
                                                                     '"."
                                                                     (g$indent$14408$T@1Mj
                                                                       g$col2$14499$T@1Mj
                                                                       g$col$14504$T@1Mj)))
                                                                 (fx+ g$extra$14500$T@1Mj
                                                                      '1)
                                                                 g$pp-item$14501$T@1Mj)))))
                                                       '#f)))))
                                         g$loop$14502$T@1Mj)
                                       g$l$14497$T@1Mj
                                       g$col1$14498$T@1Mj))))
                                 (g$pp-general$14414$T@1Mj
                                   (case-lambda
                                     ((g$expr$14464$T@1Mj
                                        g$col$14465$T@1Mj
                                        g$extra$14466$T@1Mj
                                        g$named?$14467$T@1Mj
                                        g$pp-1$14468$T@1Mj
                                        g$pp-2$14469$T@1Mj
                                        g$pp-3$14470$T@1Mj)
                                      (letrec* ((g$tail1$14471$T@1Mj
                                                  (case-lambda
                                                    ((g$rest$14490$T@1Mj
                                                       g$col1$14491$T@1Mj
                                                       g$col2$14492$T@1Mj
                                                       g$col3$14493$T@1Mj)
                                                     (if (if g$pp-1$14468$T@1Mj
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$14490$T@1Mj))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$14494$T@1Mj)
                                                           ((case-lambda
                                                              ((g$rest$14495$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$extra$14496$T@1Mj)
                                                                   (g$tail2$14472$T@1Mj
                                                                     g$rest$14495$T@1Mj
                                                                     g$col1$14491$T@1Mj
                                                                     (g$pr$14409$T@1Mj
                                                                       g$val1$14494$T@1Mj
                                                                       (g$indent$14408$T@1Mj
                                                                         g$col3$14493$T@1Mj
                                                                         g$col2$14492$T@1Mj)
                                                                       g$extra$14496$T@1Mj
                                                                       g$pp-1$14468$T@1Mj)
                                                                     g$col3$14493$T@1Mj)))
                                                                (if (null?
                                                                      g$rest$14495$T@1Mj)
                                                                  (fx+ g$extra$14466$T@1Mj
                                                                       '1)
                                                                  '0))))
                                                            (cdr g$rest$14490$T@1Mj))))
                                                        (car g$rest$14490$T@1Mj))
                                                       (g$tail2$14472$T@1Mj
                                                         g$rest$14490$T@1Mj
                                                         g$col1$14491$T@1Mj
                                                         g$col2$14492$T@1Mj
                                                         g$col3$14493$T@1Mj)))))
                                                (g$tail2$14472$T@1Mj
                                                  (case-lambda
                                                    ((g$rest$14483$T@1Mj
                                                       g$col1$14484$T@1Mj
                                                       g$col2$14485$T@1Mj
                                                       g$col3$14486$T@1Mj)
                                                     (if (if g$pp-2$14469$T@1Mj
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$14483$T@1Mj))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$14487$T@1Mj)
                                                           ((case-lambda
                                                              ((g$rest$14488$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$extra$14489$T@1Mj)
                                                                   (g$tail3$14473$T@1Mj
                                                                     g$rest$14488$T@1Mj
                                                                     g$col1$14484$T@1Mj
                                                                     (g$pr$14409$T@1Mj
                                                                       g$val1$14487$T@1Mj
                                                                       (g$indent$14408$T@1Mj
                                                                         g$col3$14486$T@1Mj
                                                                         g$col2$14485$T@1Mj)
                                                                       g$extra$14489$T@1Mj
                                                                       g$pp-2$14469$T@1Mj))))
                                                                (if (null?
                                                                      g$rest$14488$T@1Mj)
                                                                  (fx+ g$extra$14466$T@1Mj
                                                                       '1)
                                                                  '0))))
                                                            (cdr g$rest$14483$T@1Mj))))
                                                        (car g$rest$14483$T@1Mj))
                                                       (g$tail3$14473$T@1Mj
                                                         g$rest$14483$T@1Mj
                                                         g$col1$14484$T@1Mj
                                                         g$col2$14485$T@1Mj)))))
                                                (g$tail3$14473$T@1Mj
                                                  (case-lambda
                                                    ((g$rest$14480$T@1Mj
                                                       g$col1$14481$T@1Mj
                                                       g$col2$14482$T@1Mj)
                                                     (g$pp-down$14413$T@1Mj
                                                       g$rest$14480$T@1Mj
                                                       g$col2$14482$T@1Mj
                                                       g$col1$14481$T@1Mj
                                                       g$extra$14466$T@1Mj
                                                       g$pp-3$14470$T@1Mj)))))
                                        ((case-lambda
                                           ((g$head$14474$T@1Mj)
                                            ((case-lambda
                                               ((g$rest$14475$T@1Mj)
                                                ((case-lambda
                                                   ((g$col*$14476$T@1Mj)
                                                    (if (if g$named?$14467$T@1Mj
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$14475$T@1Mj))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$14477$T@1Mj)
                                                          ((case-lambda
                                                             ((g$rest$14478$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$col**$14479$T@1Mj)
                                                                  (g$tail1$14471$T@1Mj
                                                                    g$rest$14478$T@1Mj
                                                                    (fx+ g$col$14465$T@1Mj
                                                                         (g$indent-general$14382$T@1Mj))
                                                                    g$col**$14479$T@1Mj
                                                                    (fx+ g$col**$14479$T@1Mj
                                                                         '1))))
                                                               (g$wr$14403$T@1Mj
                                                                 g$name$14477$T@1Mj
                                                                 (g$out$14402$T@1Mj
                                                                   '" "
                                                                   g$col*$14476$T@1Mj)))))
                                                           (cdr g$rest$14475$T@1Mj))))
                                                       (car g$rest$14475$T@1Mj))
                                                      (g$tail1$14471$T@1Mj
                                                        g$rest$14475$T@1Mj
                                                        (fx+ g$col$14465$T@1Mj
                                                             (g$indent-general$14382$T@1Mj))
                                                        g$col*$14476$T@1Mj
                                                        (fx+ g$col*$14476$T@1Mj
                                                             '1)))))
                                                 (g$wr$14403$T@1Mj
                                                   g$head$14474$T@1Mj
                                                   (g$out$14402$T@1Mj
                                                     '"("
                                                     g$col$14465$T@1Mj)))))
                                             (cdr g$expr$14464$T@1Mj))))
                                         (car g$expr$14464$T@1Mj))))))
                                 (g$pp-expr-list$14415$T@1Mj
                                   (case-lambda
                                     ((g$l$14461$T@1Mj
                                        g$col$14462$T@1Mj
                                        g$extra$14463$T@1Mj)
                                      (g$pp-list$14412$T@1Mj
                                        g$l$14461$T@1Mj
                                        g$col$14462$T@1Mj
                                        g$extra$14463$T@1Mj
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-SYNTAX-CASE$14416$T@1Mj
                                   (case-lambda
                                     ((g$expr$14458$T@1Mj
                                        g$col$14459$T@1Mj
                                        g$extra$14460$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14458$T@1Mj
                                        g$col$14459$T@1Mj
                                        g$extra$14460$T@1Mj
                                        '#t
                                        g$pp-expr-list$14415$T@1Mj
                                        '#f
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-LAMBDA$14417$T@1Mj
                                   (case-lambda
                                     ((g$expr$14455$T@1Mj
                                        g$col$14456$T@1Mj
                                        g$extra$14457$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14455$T@1Mj
                                        g$col$14456$T@1Mj
                                        g$extra$14457$T@1Mj
                                        '#f
                                        g$pp-expr-list$14415$T@1Mj
                                        '#f
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-IF$14418$T@1Mj
                                   (case-lambda
                                     ((g$expr$14452$T@1Mj
                                        g$col$14453$T@1Mj
                                        g$extra$14454$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14452$T@1Mj
                                        g$col$14453$T@1Mj
                                        g$extra$14454$T@1Mj
                                        '#f
                                        g$pp-expr$14410$T@1Mj
                                        '#f
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-COND$14419$T@1Mj
                                   (case-lambda
                                     ((g$expr$14449$T@1Mj
                                        g$col$14450$T@1Mj
                                        g$extra$14451$T@1Mj)
                                      (g$pp-call$14411$T@1Mj
                                        g$expr$14449$T@1Mj
                                        g$col$14450$T@1Mj
                                        g$extra$14451$T@1Mj
                                        g$pp-expr-list$14415$T@1Mj))))
                                 (g$pp-CASE$14420$T@1Mj
                                   (case-lambda
                                     ((g$expr$14446$T@1Mj
                                        g$col$14447$T@1Mj
                                        g$extra$14448$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14446$T@1Mj
                                        g$col$14447$T@1Mj
                                        g$extra$14448$T@1Mj
                                        '#f
                                        g$pp-expr$14410$T@1Mj
                                        '#f
                                        g$pp-expr-list$14415$T@1Mj))))
                                 (g$pp-CASE-LAMBDA$14421$T@1Mj
                                   (case-lambda
                                     ((g$expr$14443$T@1Mj
                                        g$col$14444$T@1Mj
                                        g$extra$14445$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14443$T@1Mj
                                        g$col$14444$T@1Mj
                                        g$extra$14445$T@1Mj
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$14415$T@1Mj))))
                                 (g$pp-AND$14422$T@1Mj
                                   (case-lambda
                                     ((g$expr$14440$T@1Mj
                                        g$col$14441$T@1Mj
                                        g$extra$14442$T@1Mj)
                                      (g$pp-call$14411$T@1Mj
                                        g$expr$14440$T@1Mj
                                        g$col$14441$T@1Mj
                                        g$extra$14442$T@1Mj
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-LET$14423$T@1Mj
                                   (case-lambda
                                     ((g$expr$14435$T@1Mj
                                        g$col$14436$T@1Mj
                                        g$extra$14437$T@1Mj)
                                      ((case-lambda
                                         ((g$rest$14438$T@1Mj)
                                          ((case-lambda
                                             ((g$named?$14439$T@1Mj)
                                              (g$pp-general$14414$T@1Mj
                                                g$expr$14435$T@1Mj
                                                g$col$14436$T@1Mj
                                                g$extra$14437$T@1Mj
                                                g$named?$14439$T@1Mj
                                                g$pp-expr-list$14415$T@1Mj
                                                '#f
                                                g$pp-expr$14410$T@1Mj)))
                                           (if (pair?
                                                 g$rest$14438$T@1Mj)
                                             (begin
                                               '#f
                                               (g$symbol?$12467$T@1Mj
                                                 (car g$rest$14438$T@1Mj)))
                                             '#f))))
                                       (cdr g$expr$14435$T@1Mj)))))
                                 (g$pp-BEGIN$14424$T@1Mj
                                   (case-lambda
                                     ((g$expr$14432$T@1Mj
                                        g$col$14433$T@1Mj
                                        g$extra$14434$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14432$T@1Mj
                                        g$col$14433$T@1Mj
                                        g$extra$14434$T@1Mj
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$pp-DO$14425$T@1Mj
                                   (case-lambda
                                     ((g$expr$14429$T@1Mj
                                        g$col$14430$T@1Mj
                                        g$extra$14431$T@1Mj)
                                      (g$pp-general$14414$T@1Mj
                                        g$expr$14429$T@1Mj
                                        g$col$14430$T@1Mj
                                        g$extra$14431$T@1Mj
                                        '#f
                                        g$pp-expr-list$14415$T@1Mj
                                        g$pp-expr-list$14415$T@1Mj
                                        g$pp-expr$14410$T@1Mj))))
                                 (g$style$14426$T@1Mj
                                   (case-lambda
                                     ((g$head$14427$T@1Mj)
                                      ((case-lambda
                                         ((g$t$14428$T@1Mj)
                                          (if (g$memv$11717$T@1Mj
                                                g$t$14428$T@1Mj
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$14417$T@1Mj
                                            (if (eqv?
                                                  g$t$14428$T@1Mj
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$14416$T@1Mj
                                              (if (g$memv$11717$T@1Mj
                                                    g$t$14428$T@1Mj
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$14418$T@1Mj
                                                (if (eqv?
                                                      g$t$14428$T@1Mj
                                                      'cond)
                                                  g$pp-COND$14419$T@1Mj
                                                  (if (eqv?
                                                        g$t$14428$T@1Mj
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$14421$T@1Mj
                                                    (if (eqv?
                                                          g$t$14428$T@1Mj
                                                          'case)
                                                      g$pp-CASE$14420$T@1Mj
                                                      (if (g$memv$11717$T@1Mj
                                                            g$t$14428$T@1Mj
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$14422$T@1Mj
                                                        (if (eqv?
                                                              g$t$14428$T@1Mj
                                                              'let)
                                                          g$pp-LET$14423$T@1Mj
                                                          (if (eqv?
                                                                g$t$14428$T@1Mj
                                                                'begin)
                                                            g$pp-BEGIN$14424$T@1Mj
                                                            (if (eqv?
                                                                  g$t$14428$T@1Mj
                                                                  'do)
                                                              g$pp-DO$14425$T@1Mj
                                                              '#f))))))))))))
                                       g$head$14427$T@1Mj)))))
                         (g$pr$14409$T@1Mj
                           g$obj$14405$T@1Mj
                           g$col$14406$T@1Mj
                           '0
                           g$pp-expr$14410$T@1Mj))))))
          (if g$width$14400$T@1Mj
            (g$out$14402$T@1Mj
              g$genwrite:newline-str$14374$T@1Mj
              (g$pp$14404$T@1Mj g$obj$14398$T@1Mj '0))
            (g$wr$14403$T@1Mj g$obj$14398$T@1Mj '0))))))
   (g$pretty-width$14381$T@1Mj
     g$pretty-width$14574$T@1Mj
     (g$make-parameter$14369$T@1Mj '72))
   (g$indent-general$14382$T@1Mj
     g$indent-general$14575$T@1Mj
     (g$make-parameter$14369$T@1Mj '2))
   (g$max-call-head-width$14383$T@1Mj
     g$max-call-head-width$14576$T@1Mj
     (g$make-parameter$14369$T@1Mj '3))
   (g$pretty-gensyms$14384$T@1Mj
     g$pretty-gensyms$14577$T@1Mj
     (g$make-parameter$14369$T@1Mj '#f))
   (g$reverse-string-append$14385$T@1Mj
     g$reverse-string-append$14578$T@1Mj
     (case-lambda
       ((g$l$14553$T@1Mj)
        (letrec* ((g$rev-string-append$14554$T@1Mj
                    (case-lambda
                      ((g$l$14555$T@1Mj g$i$14556$T@1Mj)
                       (if (pair? g$l$14555$T@1Mj)
                         ((case-lambda
                            ((g$str$14557$T@1Mj)
                             ((case-lambda
                                ((g$len$14558$T@1Mj)
                                 ((case-lambda
                                    ((g$result$14559$T@1Mj)
                                     ((letrec ((g$loop$14560$T@1Mj
                                                 (case-lambda
                                                   ((g$j$14561$T@1Mj
                                                      g$k$14562$T@1Mj)
                                                    (if (fx<?
                                                          g$j$14561$T@1Mj
                                                          g$len$14558$T@1Mj)
                                                      (begin
                                                        (string-set!
                                                          g$result$14559$T@1Mj
                                                          g$k$14562$T@1Mj
                                                          (string-ref
                                                            g$str$14557$T@1Mj
                                                            g$j$14561$T@1Mj))
                                                        (g$loop$14560$T@1Mj
                                                          (fx+ g$j$14561$T@1Mj
                                                               '1)
                                                          (fx+ g$k$14562$T@1Mj
                                                               '1)))
                                                      g$result$14559$T@1Mj)))))
                                        g$loop$14560$T@1Mj)
                                      '0
                                      (fx- (fx- (string-length
                                                  g$result$14559$T@1Mj)
                                                g$i$14556$T@1Mj)
                                           g$len$14558$T@1Mj))))
                                  (g$rev-string-append$14554$T@1Mj
                                    (cdr g$l$14555$T@1Mj)
                                    (fx+ g$i$14556$T@1Mj
                                         g$len$14558$T@1Mj)))))
                              (string-length g$str$14557$T@1Mj))))
                          (car g$l$14555$T@1Mj))
                         (make-string g$i$14556$T@1Mj))))))
          (g$rev-string-append$14554$T@1Mj g$l$14553$T@1Mj '0)))))
   (g$pretty-print$14386$T@1Mj
     g$pretty-print$14579$T@1Mj
     (case-lambda
       ((g$obj$14563$T@1Mj . g$opt$14564$T@1Mj)
        ((case-lambda
           ((g$port$14565$T@1Mj)
            (g$generic-write$14380$T@1Mj
              g$obj$14563$T@1Mj
              '#f
              (g$pretty-width$14381$T@1Mj)
              (case-lambda
                ((g$s$14566$T@1Mj)
                 (begin
                   (display g$s$14566$T@1Mj g$port$14565$T@1Mj)
                   '#t))))))
         (if (pair? g$opt$14564$T@1Mj)
           (car g$opt$14564$T@1Mj)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$14580$T@1Mj
     g$cps/generate-reference$14845$T@1Mj
     (case-lambda
       ((g$variable$14633$T@1Mj)
        (g$cps/generate-operand$14584$T@1Mj
          (g$make-reference$14610$T@1Mj g$variable$14633$T@1Mj)))))
   (g$cps/generate-literal$14581$T@1Mj
     g$cps/generate-literal$14846$T@1Mj
     (case-lambda
       ((g$datum$14634$T@1Mj)
        (g$cps/generate-operand$14584$T@1Mj
          (g$make-literal$14609$T@1Mj g$datum$14634$T@1Mj)))))
   (g$cps/generate-abstraction$14582$T@1Mj
     g$cps/generate-abstraction$14847$T@1Mj
     (case-lambda
       ((g$bvl$14635$T@1Mj g$body-generator$14636$T@1Mj)
        (g$cps/generate-operand$14584$T@1Mj
          (g$make-user-abstraction$14611$T@1Mj
            g$bvl$14635$T@1Mj
            (case-lambda
              ((g$continuation-variable$14637$T@1Mj)
               (g$body-generator$14636$T@1Mj
                 (g$variable-continuator$14597$T@1Mj
                   g$continuation-variable$14637$T@1Mj)))))))))
   (g$cps/generate-abstractions$14583$T@1Mj
     g$cps/generate-abstractions$14848$T@1Mj
     (case-lambda
       ((g$bvls$14638$T@1Mj g$body-generators$14639$T@1Mj)
        (g$cps/generate-operand$14584$T@1Mj
          (g$make-user-abstractions$14612$T@1Mj
            g$bvls$14638$T@1Mj
            (g$map$11724$T@1Mj
              (case-lambda
                ((g$body-generator$14640$T@1Mj)
                 (case-lambda
                   ((g$continuation-variable$14641$T@1Mj)
                    (g$body-generator$14640$T@1Mj
                      (g$variable-continuator$14597$T@1Mj
                        g$continuation-variable$14641$T@1Mj))))))
              g$body-generators$14639$T@1Mj))))))
   (g$cps/generate-operand$14584$T@1Mj
     g$cps/generate-operand$14849$T@1Mj
     (case-lambda
       ((g$operand$14642$T@1Mj)
        (case-lambda
          ((g$continuator$14643$T@1Mj)
           (g$continue-with-operand$14600$T@1Mj
             g$continuator$14643$T@1Mj
             g$operand$14642$T@1Mj))))))
   (g$cps/generate-conditional$14585$T@1Mj
     g$cps/generate-conditional$14850$T@1Mj
     (case-lambda
       ((g$condition-generator$14644$T@1Mj
          g$consequent-generator$14645$T@1Mj
          g$alternative-generator$14646$T@1Mj)
        (case-lambda
          ((g$continuator$14647$T@1Mj)
           (letrec* ((g$if-variable$14648$T@1Mj
                       (case-lambda
                         ((g$continuation-variable$14650$T@1Mj)
                          ((case-lambda
                             ((g$continuator*$14651$T@1Mj)
                              (g$condition-generator$14644$T@1Mj
                                (g$conditional-continuator$14596$T@1Mj
                                  (case-lambda
                                    ((g$condition$14652$T@1Mj)
                                     (g$make-conditional$14619$T@1Mj
                                       g$condition$14652$T@1Mj
                                       (g$consequent-generator$14645$T@1Mj
                                         g$continuator*$14651$T@1Mj)
                                       (g$alternative-generator$14646$T@1Mj
                                         g$continuator*$14651$T@1Mj))))))))
                           (g$variable-continuator$14597$T@1Mj
                             g$continuation-variable$14650$T@1Mj))))))
             (g$reify-continuation*$14602$T@1Mj
               g$continuator$14647$T@1Mj
               g$if-variable$14648$T@1Mj
               (case-lambda
                 ((g$continuation-abstraction$14649$T@1Mj)
                  (g$make-conditional-join$14620$T@1Mj
                    g$continuation-abstraction$14649$T@1Mj
                    g$if-variable$14648$T@1Mj))))))))))
   (g$cps/generate-recursive-bind$14586$T@1Mj
     g$cps/generate-recursive-bind$14851$T@1Mj
     (case-lambda
       ((g$variables$14653$T@1Mj
          g$generators$14654$T@1Mj
          g$body-generator$14655$T@1Mj)
        (case-lambda
          ((g$continuator$14656$T@1Mj)
           (g$make-recursive-bind$14614$T@1Mj
             g$variables$14653$T@1Mj
             (g$map$11724$T@1Mj
               (case-lambda
                 ((g$generator$14657$T@1Mj)
                  (case-lambda
                    ((g$continuation-variable$14658$T@1Mj)
                     (g$generator$14657$T@1Mj
                       (g$variable-continuator$14597$T@1Mj
                         g$continuation-variable$14658$T@1Mj))))))
               g$generators$14654$T@1Mj)
             (g$body-generator$14655$T@1Mj
               (g$reified-continuator$14599$T@1Mj
                 g$continuator$14656$T@1Mj))))))))
   (g$cps/generate-recursive*-bind$14587$T@1Mj
     g$cps/generate-recursive*-bind$14852$T@1Mj
     (case-lambda
       ((g$variables$14659$T@1Mj
          g$generators$14660$T@1Mj
          g$body-generator$14661$T@1Mj)
        (case-lambda
          ((g$continuator$14662$T@1Mj)
           (g$make-recursive*-bind$14615$T@1Mj
             g$variables$14659$T@1Mj
             (g$map$11724$T@1Mj
               (case-lambda
                 ((g$generator$14663$T@1Mj)
                  (case-lambda
                    ((g$continuation-variable$14664$T@1Mj)
                     (g$generator$14663$T@1Mj
                       (g$variable-continuator$14597$T@1Mj
                         g$continuation-variable$14664$T@1Mj))))))
               g$generators$14660$T@1Mj)
             (g$body-generator$14661$T@1Mj
               (g$reified-continuator$14599$T@1Mj
                 g$continuator$14662$T@1Mj))))))))
   (g$cps/generate-recursive*-library-bind$14588$T@1Mj
     g$cps/generate-recursive*-library-bind$14853$T@1Mj
     (case-lambda
       ((g$name$14665$T@1Mj
          g$variables$14666$T@1Mj
          g$variables*$14667$T@1Mj
          g$generators$14668$T@1Mj
          g$body-generator$14669$T@1Mj)
        (case-lambda
          ((g$continuator$14670$T@1Mj)
           (g$make-recursive*-library-bind$14616$T@1Mj
             g$name$14665$T@1Mj
             g$variables$14666$T@1Mj
             g$variables*$14667$T@1Mj
             (g$map$11724$T@1Mj
               (case-lambda
                 ((g$generator$14671$T@1Mj)
                  (case-lambda
                    ((g$continuation-variable$14672$T@1Mj)
                     (g$generator$14671$T@1Mj
                       (g$variable-continuator$14597$T@1Mj
                         g$continuation-variable$14672$T@1Mj))))))
               g$generators$14668$T@1Mj)
             (g$body-generator$14669$T@1Mj
               (g$reified-continuator$14599$T@1Mj
                 g$continuator$14670$T@1Mj))))))))
   (g$cps/generate-sequence$14589$T@1Mj
     g$cps/generate-sequence$14854$T@1Mj
     (case-lambda
       ((g$generators$14673$T@1Mj)
        (case-lambda
          ((g$continuator$14674$T@1Mj)
           ((letrec ((g$recur$14675$T@1Mj
                       (case-lambda
                         ((g$generators$14676$T@1Mj)
                          ((car g$generators$14676$T@1Mj)
                           ((case-lambda
                              ((g$generators$14677$T@1Mj)
                               (if (pair? g$generators$14677$T@1Mj)
                                 (g$effect-continuator$14595$T@1Mj
                                   (case-lambda
                                     (()
                                      (g$recur$14675$T@1Mj
                                        g$generators$14677$T@1Mj))))
                                 g$continuator$14674$T@1Mj)))
                            (cdr g$generators$14676$T@1Mj)))))))
              g$recur$14675$T@1Mj)
            g$generators$14673$T@1Mj))))))
   (g$cps/generate-assignment$14590$T@1Mj
     g$cps/generate-assignment$14855$T@1Mj
     (case-lambda
       ((g$location$14678$T@1Mj g$expression-generator$14679$T@1Mj)
        (case-lambda
          ((g$continuator$14680$T@1Mj)
           (g$expression-generator$14679$T@1Mj
             (g$operand-continuator$14594$T@1Mj
               (case-lambda
                 ((g$operand$14681$T@1Mj)
                  (g$make-assignment$14622$T@1Mj
                    g$location$14678$T@1Mj
                    g$operand$14681$T@1Mj
                    (g$continue-with-operand$14600$T@1Mj
                      g$continuator$14680$T@1Mj
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$14591$T@1Mj
     g$cps/generate-declaration$14856$T@1Mj
     (case-lambda
       ((g$location$14682$T@1Mj g$expression-generator$14683$T@1Mj)
        (case-lambda
          ((g$continuator$14684$T@1Mj)
           (g$expression-generator$14683$T@1Mj
             (g$operand-continuator$14594$T@1Mj
               (case-lambda
                 ((g$operand$14685$T@1Mj)
                  (g$make-declaration$14623$T@1Mj
                    g$location$14682$T@1Mj
                    g$operand$14685$T@1Mj
                    (g$continue-with-operand$14600$T@1Mj
                      g$continuator$14684$T@1Mj
                      '(cps-void))))))))))))
   (g$cps/generate-combination$14592$T@1Mj
     g$cps/generate-combination$14857$T@1Mj
     (case-lambda
       ((g$operator-generator$14686$T@1Mj
          g$operand-generators$14687$T@1Mj)
        (g$cps/generate-subproblems$14593$T@1Mj
          (g$reverse$12475$T@1Mj
            (cons
              g$operator-generator$14686$T@1Mj
              g$operand-generators$14687$T@1Mj))
          (case-lambda
            ((g$operands$14688$T@1Mj g$continuator$14689$T@1Mj)
             (g$make-combination$14617$T@1Mj
               (car g$operands$14688$T@1Mj)
               (g$reify-continuation$14601$T@1Mj
                 g$continuator$14689$T@1Mj)
               (cdr g$operands$14688$T@1Mj))))))))
   (g$cps/generate-subproblems$14593$T@1Mj
     g$cps/generate-subproblems$14858$T@1Mj
     (case-lambda
       ((g$generators$14690$T@1Mj g$combiner$14691$T@1Mj)
        (case-lambda
          ((g$continuator$14692$T@1Mj)
           ((letrec ((g$recur$14693$T@1Mj
                       (case-lambda
                         ((g$generators$14694$T@1Mj
                            g$operands$14695$T@1Mj)
                          (if (pair? g$generators$14694$T@1Mj)
                            ((car g$generators$14694$T@1Mj)
                             ((case-lambda
                                ((g$generators$14696$T@1Mj)
                                 (g$operand-continuator$14594$T@1Mj
                                   (case-lambda
                                     ((g$operand$14697$T@1Mj)
                                      (g$recur$14693$T@1Mj
                                        g$generators$14696$T@1Mj
                                        (cons
                                          g$operand$14697$T@1Mj
                                          g$operands$14695$T@1Mj)))))))
                              (cdr g$generators$14694$T@1Mj)))
                            (g$combiner$14691$T@1Mj
                              g$operands$14695$T@1Mj
                              g$continuator$14692$T@1Mj))))))
              g$recur$14693$T@1Mj)
            g$generators$14690$T@1Mj
            '()))))))
   (g$operand-continuator$14594$T@1Mj
     g$operand-continuator$14859$T@1Mj
     (case-lambda
       ((g$generator$14698$T@1Mj)
        (case-lambda
          ((g$if-operand$14699$T@1Mj
             g$if-effect$14700$T@1Mj
             g$if-conditional$14701$T@1Mj
             g$if-variable$14702$T@1Mj
             g$if-inline$14703$T@1Mj)
           (begin
             g$if-effect$14700$T@1Mj
             g$if-conditional$14701$T@1Mj
             g$if-variable$14702$T@1Mj
             g$if-inline$14703$T@1Mj
             (g$if-operand$14699$T@1Mj g$generator$14698$T@1Mj)))))))
   (g$effect-continuator$14595$T@1Mj
     g$effect-continuator$14860$T@1Mj
     (case-lambda
       ((g$generator$14704$T@1Mj)
        (case-lambda
          ((g$if-operand$14705$T@1Mj
             g$if-effect$14706$T@1Mj
             g$if-conditional$14707$T@1Mj
             g$if-variable$14708$T@1Mj
             g$if-inline$14709$T@1Mj)
           (begin
             g$if-operand$14705$T@1Mj
             g$if-conditional$14707$T@1Mj
             g$if-variable$14708$T@1Mj
             g$if-inline$14709$T@1Mj
             (g$if-effect$14706$T@1Mj g$generator$14704$T@1Mj)))))))
   (g$conditional-continuator$14596$T@1Mj
     g$conditional-continuator$14861$T@1Mj
     (case-lambda
       ((g$generator$14710$T@1Mj)
        (case-lambda
          ((g$if-operand$14711$T@1Mj
             g$if-effect$14712$T@1Mj
             g$if-conditional$14713$T@1Mj
             g$if-variable$14714$T@1Mj
             g$if-inline$14715$T@1Mj)
           (begin
             g$if-operand$14711$T@1Mj
             g$if-effect$14712$T@1Mj
             g$if-variable$14714$T@1Mj
             g$if-inline$14715$T@1Mj
             (g$if-conditional$14713$T@1Mj
               g$generator$14710$T@1Mj)))))))
   (g$variable-continuator$14597$T@1Mj
     g$variable-continuator$14862$T@1Mj
     (case-lambda
       ((g$variable$14716$T@1Mj)
        (case-lambda
          ((g$if-operand$14717$T@1Mj
             g$if-effect$14718$T@1Mj
             g$if-conditional$14719$T@1Mj
             g$if-variable$14720$T@1Mj
             g$if-inline$14721$T@1Mj)
           (begin
             g$if-operand$14717$T@1Mj
             g$if-effect$14718$T@1Mj
             g$if-variable$14720$T@1Mj
             g$if-inline$14721$T@1Mj
             (g$if-variable$14720$T@1Mj g$variable$14716$T@1Mj)))))))
   (g$inline-continuator$14598$T@1Mj
     g$inline-continuator$14863$T@1Mj
     (case-lambda
       ((g$continuation$14722$T@1Mj)
        (case-lambda
          ((g$if-operand$14723$T@1Mj
             g$if-effect$14724$T@1Mj
             g$if-conditional$14725$T@1Mj
             g$if-variable$14726$T@1Mj
             g$if-inline$14727$T@1Mj)
           (begin
             g$if-operand$14723$T@1Mj
             g$if-effect$14724$T@1Mj
             g$if-conditional$14725$T@1Mj
             g$if-variable$14726$T@1Mj
             (g$if-inline$14727$T@1Mj g$continuation$14722$T@1Mj)))))))
   (g$reified-continuator$14599$T@1Mj
     g$reified-continuator$14864$T@1Mj
     (case-lambda
       ((g$continuator$14728$T@1Mj)
        (case-lambda
          ((g$if-operand$14729$T@1Mj
             g$if-effect$14730$T@1Mj
             g$if-conditional$14731$T@1Mj
             g$if-variable$14732$T@1Mj
             g$if-inline$14733$T@1Mj)
           (begin
             g$if-operand$14729$T@1Mj
             g$if-effect$14730$T@1Mj
             g$if-conditional$14731$T@1Mj
             (g$reify-continuation*$14602$T@1Mj
               g$continuator$14728$T@1Mj
               g$if-variable$14732$T@1Mj
               g$if-inline$14733$T@1Mj)))))))
   (g$continue-with-operand$14600$T@1Mj
     g$continue-with-operand$14865$T@1Mj
     (case-lambda
       ((g$continuator$14734$T@1Mj g$operand$14735$T@1Mj)
        (g$continuator$14734$T@1Mj
          (case-lambda
            ((g$generator$14736$T@1Mj)
             (g$generator$14736$T@1Mj g$operand$14735$T@1Mj)))
          (case-lambda
            ((g$generator$14737$T@1Mj) (g$generator$14737$T@1Mj)))
          (case-lambda
            ((g$generator$14738$T@1Mj)
             (g$generator$14738$T@1Mj
               (g$make-truth-test$14624$T@1Mj g$operand$14735$T@1Mj))))
          (case-lambda
            ((g$continuation-variable$14739$T@1Mj)
             (g$make-return$14618$T@1Mj
               (g$make-reference$14610$T@1Mj
                 g$continuation-variable$14739$T@1Mj)
               (list g$operand$14735$T@1Mj))))
          (case-lambda
            ((g$continuation-abstraction$14740$T@1Mj)
             (g$make-return$14618$T@1Mj
               g$continuation-abstraction$14740$T@1Mj
               (list g$operand$14735$T@1Mj))))))))
   (g$reify-continuation$14601$T@1Mj
     g$reify-continuation$14866$T@1Mj
     (case-lambda
       ((g$continuator$14741$T@1Mj)
        (g$continuator$14741$T@1Mj
          g$operand-continuation-reifier$14604$T@1Mj
          g$effect-continuation-reifier$14606$T@1Mj
          g$conditional-continuation-reifier$14608$T@1Mj
          (case-lambda
            ((g$variable$14742$T@1Mj)
             (g$make-reference$14610$T@1Mj g$variable$14742$T@1Mj)))
          (case-lambda
            ((g$continuation$14743$T@1Mj)
             g$continuation$14743$T@1Mj))))))
   (g$reify-continuation*$14602$T@1Mj
     g$reify-continuation*$14867$T@1Mj
     (case-lambda
       ((g$continuator$14744$T@1Mj
          g$if-variable$14745$T@1Mj
          g$if-inline$14746$T@1Mj)
        (g$continuator$14744$T@1Mj
          (g$operand-continuation-reifier*$14603$T@1Mj
            g$if-inline$14746$T@1Mj)
          (g$effect-continuation-reifier*$14605$T@1Mj
            g$if-inline$14746$T@1Mj)
          (g$conditional-continuation-reifier*$14607$T@1Mj
            g$if-inline$14746$T@1Mj)
          g$if-variable$14745$T@1Mj
          g$if-inline$14746$T@1Mj))))
   (g$operand-continuation-reifier*$14603$T@1Mj
     g$operand-continuation-reifier*$14868$T@1Mj
     (case-lambda
       ((g$receiver$14747$T@1Mj)
        (case-lambda
          ((g$generator$14748$T@1Mj)
           (g$receiver$14747$T@1Mj
             ((case-lambda
                ((g$variable$14749$T@1Mj)
                 (g$make-continuation-abstraction$14613$T@1Mj
                   (list g$variable$14749$T@1Mj)
                   (g$generator$14748$T@1Mj
                     (g$make-reference$14610$T@1Mj
                       g$variable$14749$T@1Mj)))))
              (g$generate-variable$14625$T@1Mj 'V))))))))
   (g$operand-continuation-reifier$14604$T@1Mj
     g$operand-continuation-reifier$14869$T@1Mj
     (g$operand-continuation-reifier*$14603$T@1Mj values))
   (g$effect-continuation-reifier*$14605$T@1Mj
     g$effect-continuation-reifier*$14870$T@1Mj
     (case-lambda
       ((g$receiver$14750$T@1Mj)
        (case-lambda
          ((g$generator$14751$T@1Mj)
           (g$receiver$14750$T@1Mj
             ((case-lambda
                ((g$variable$14752$T@1Mj)
                 (g$make-continuation-abstraction$14613$T@1Mj
                   g$variable$14752$T@1Mj
                   (g$generator$14751$T@1Mj))))
              (g$generate-variable$14625$T@1Mj 'IGNORE))))))))
   (g$effect-continuation-reifier$14606$T@1Mj
     g$effect-continuation-reifier$14871$T@1Mj
     (g$effect-continuation-reifier*$14605$T@1Mj values))
   (g$conditional-continuation-reifier*$14607$T@1Mj
     g$conditional-continuation-reifier*$14872$T@1Mj
     (case-lambda
       ((g$receiver$14753$T@1Mj)
        (case-lambda
          ((g$generator$14754$T@1Mj)
           (g$receiver$14753$T@1Mj
             ((case-lambda
                ((g$variable$14755$T@1Mj)
                 (g$make-continuation-abstraction$14613$T@1Mj
                   (list g$variable$14755$T@1Mj)
                   (g$generator$14754$T@1Mj
                     (g$make-truth-test$14624$T@1Mj
                       (g$make-reference$14610$T@1Mj
                         g$variable$14755$T@1Mj))))))
              (g$generate-variable$14625$T@1Mj 'T))))))))
   (g$conditional-continuation-reifier$14608$T@1Mj
     g$conditional-continuation-reifier$14873$T@1Mj
     (g$conditional-continuation-reifier*$14607$T@1Mj values))
   (g$make-literal$14609$T@1Mj
     g$make-literal$14874$T@1Mj
     (case-lambda
       ((g$datum$14756$T@1Mj) (list 'quote g$datum$14756$T@1Mj))))
   (g$make-reference$14610$T@1Mj
     g$make-reference$14875$T@1Mj
     (case-lambda ((g$variable$14757$T@1Mj) g$variable$14757$T@1Mj)))
   (g$make-user-abstraction$14611$T@1Mj
     g$make-user-abstraction$14876$T@1Mj
     (case-lambda
       ((g$bvl$14758$T@1Mj g$body-constructor$14759$T@1Mj)
        ((case-lambda
           ((g$continuation$14760$T@1Mj)
            (list
              'case-lambda
              (list
                (cons g$continuation$14760$T@1Mj g$bvl$14758$T@1Mj)
                (g$body-constructor$14759$T@1Mj
                  g$continuation$14760$T@1Mj)))))
         (g$generate-variable$14625$T@1Mj 'C)))))
   (g$make-user-abstractions$14612$T@1Mj
     g$make-user-abstractions$14877$T@1Mj
     (case-lambda
       ((g$bvls$14761$T@1Mj g$body-constructors$14762$T@1Mj)
        ((case-lambda
           ((g$continuation$14763$T@1Mj)
            (cons
              'case-lambda
              (g$map$11724$T@1Mj
                (case-lambda
                  ((g$bvl$14764$T@1Mj g$body-constructor$14765$T@1Mj)
                   (list
                     (cons g$continuation$14763$T@1Mj g$bvl$14764$T@1Mj)
                     (g$body-constructor$14765$T@1Mj
                       g$continuation$14763$T@1Mj))))
                g$bvls$14761$T@1Mj
                g$body-constructors$14762$T@1Mj))))
         (g$generate-variable$14625$T@1Mj 'C)))))
   (g$make-continuation-abstraction$14613$T@1Mj
     g$make-continuation-abstraction$14878$T@1Mj
     (case-lambda
       ((g$bvl$14766$T@1Mj g$body$14767$T@1Mj)
        (list
          'case-lambda
          (list g$bvl$14766$T@1Mj g$body$14767$T@1Mj)))))
   (g$make-recursive-bind$14614$T@1Mj
     g$make-recursive-bind$14879$T@1Mj
     (case-lambda
       ((g$variables$14768$T@1Mj
          g$constructors$14769$T@1Mj
          g$body$14770$T@1Mj)
        (list
          'letrec
          (g$map$11724$T@1Mj
            (case-lambda
              ((g$variable$14771$T@1Mj g$constructor$14772$T@1Mj)
               (list
                 g$variable$14771$T@1Mj
                 (list
                   (g$make-user-abstraction$14611$T@1Mj
                     '()
                     g$constructor$14772$T@1Mj)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$14771$T@1Mj))))))
            g$variables$14768$T@1Mj
            g$constructors$14769$T@1Mj)
          g$body$14770$T@1Mj))))
   (g$make-recursive*-bind$14615$T@1Mj
     g$make-recursive*-bind$14880$T@1Mj
     (case-lambda
       ((g$variables$14773$T@1Mj
          g$constructors$14774$T@1Mj
          g$body$14775$T@1Mj)
        (list
          'letrec*
          (g$map$11724$T@1Mj
            (case-lambda
              ((g$variable$14776$T@1Mj g$constructor$14777$T@1Mj)
               (list
                 g$variable$14776$T@1Mj
                 (list
                   (g$make-user-abstraction$14611$T@1Mj
                     '()
                     g$constructor$14777$T@1Mj)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$14776$T@1Mj))))))
            g$variables$14773$T@1Mj
            g$constructors$14774$T@1Mj)
          g$body$14775$T@1Mj))))
   (g$make-recursive*-library-bind$14616$T@1Mj
     g$make-recursive*-library-bind$14881$T@1Mj
     (case-lambda
       ((g$name$14778$T@1Mj
          g$variables$14779$T@1Mj
          g$variables*$14780$T@1Mj
          g$constructors$14781$T@1Mj
          g$body$14782$T@1Mj)
        (list
          'library-letrec*
          g$name$14778$T@1Mj
          (g$map$11724$T@1Mj
            (case-lambda
              ((g$variable$14783$T@1Mj
                 g$variable*$14784$T@1Mj
                 g$constructor$14785$T@1Mj)
               (list
                 g$variable$14783$T@1Mj
                 g$variable*$14784$T@1Mj
                 (list
                   (g$make-user-abstraction$14611$T@1Mj
                     '()
                     g$constructor$14785$T@1Mj)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$14783$T@1Mj))))))
            g$variables$14779$T@1Mj
            g$variables*$14780$T@1Mj
            g$constructors$14781$T@1Mj)
          g$body$14782$T@1Mj))))
   (g$make-combination$14617$T@1Mj
     g$make-combination$14882$T@1Mj
     (case-lambda
       ((g$operator$14786$T@1Mj
          g$continuation$14787$T@1Mj
          g$operands$14788$T@1Mj)
        (cons
          g$operator$14786$T@1Mj
          (cons g$continuation$14787$T@1Mj g$operands$14788$T@1Mj)))))
   (g$make-return$14618$T@1Mj
     g$make-return$14883$T@1Mj
     (case-lambda
       ((g$continuation$14789$T@1Mj g$operands$14790$T@1Mj)
        (cons g$continuation$14789$T@1Mj g$operands$14790$T@1Mj))))
   (g$make-conditional$14619$T@1Mj
     g$make-conditional$14884$T@1Mj
     (case-lambda
       ((g$condition$14791$T@1Mj
          g$consequent$14792$T@1Mj
          g$alternative$14793$T@1Mj)
        (list
          'if
          g$condition$14791$T@1Mj
          g$consequent$14792$T@1Mj
          g$alternative$14793$T@1Mj))))
   (g$make-conditional-join$14620$T@1Mj
     g$make-conditional-join$14885$T@1Mj
     (case-lambda
       ((g$continuation$14794$T@1Mj g$constructor$14795$T@1Mj)
        ((case-lambda
           ((g$variable$14796$T@1Mj)
            (g$make-let$14621$T@1Mj
              (list g$variable$14796$T@1Mj)
              (list g$continuation$14794$T@1Mj)
              (g$constructor$14795$T@1Mj g$variable$14796$T@1Mj))))
         (g$generate-variable$14625$T@1Mj 'J)))))
   (g$make-let$14621$T@1Mj
     g$make-let$14886$T@1Mj
     (case-lambda
       ((g$variables$14797$T@1Mj
          g$expressions$14798$T@1Mj
          g$body$14799$T@1Mj)
        (cons
          (list
            'case-lambda
            (list g$variables$14797$T@1Mj g$body$14799$T@1Mj))
          g$expressions$14798$T@1Mj))))
   (g$make-assignment$14622$T@1Mj
     g$make-assignment$14887$T@1Mj
     (case-lambda
       ((g$location$14800$T@1Mj
          g$operand$14801$T@1Mj
          g$expression$14802$T@1Mj)
        (list
          'begin
          (list 'set! g$location$14800$T@1Mj g$operand$14801$T@1Mj)
          g$expression$14802$T@1Mj))))
   (g$make-declaration$14623$T@1Mj
     g$make-declaration$14888$T@1Mj
     (case-lambda
       ((g$location$14803$T@1Mj
          g$operand$14804$T@1Mj
          g$expression$14805$T@1Mj)
        (list
          'begin
          (list 'define g$location$14803$T@1Mj g$operand$14804$T@1Mj)
          g$expression$14805$T@1Mj))))
   (g$make-truth-test$14624$T@1Mj
     g$make-truth-test$14889$T@1Mj
     (case-lambda ((g$operand$14806$T@1Mj) g$operand$14806$T@1Mj)))
   (g$generate-variable$14625$T@1Mj
     g$generate-variable$14890$T@1Mj
     (case-lambda ((g$name$14807$T@1Mj) (gensym g$name$14807$T@1Mj))))
   (g$parse$14626$T@1Mj
     g$parse$14891$T@1Mj
     (case-lambda
       ((g$x$14808$T@1Mj)
        (if (pair? g$x$14808$T@1Mj)
          ((case-lambda
             ((g$t$14809$T@1Mj)
              (if (eqv? g$t$14809$T@1Mj 'quote)
                (g$cps/generate-literal$14581$T@1Mj
                  (g$cadr$12477$T@1Mj g$x$14808$T@1Mj))
                (if (eqv? g$t$14809$T@1Mj 'if)
                  (g$cps/generate-conditional$14585$T@1Mj
                    (g$parse$14626$T@1Mj
                      (g$cadr$12477$T@1Mj g$x$14808$T@1Mj))
                    (g$parse$14626$T@1Mj
                      (g$caddr$12483$T@1Mj g$x$14808$T@1Mj))
                    (g$parse$14626$T@1Mj
                      (g$cadddr$12495$T@1Mj g$x$14808$T@1Mj)))
                  (if (eqv? g$t$14809$T@1Mj 'case-lambda)
                    ((case-lambda
                       ((g$d$14810$T@1Mj)
                        (g$cps/generate-abstractions$14583$T@1Mj
                          (g$map$11724$T@1Mj car g$d$14810$T@1Mj)
                          (g$map$11724$T@1Mj
                            (case-lambda
                              ((g$e$14811$T@1Mj)
                               (g$cps/generate-sequence$14589$T@1Mj
                                 (g$map$11724$T@1Mj
                                   g$parse$14626$T@1Mj
                                   (cdr g$e$14811$T@1Mj)))))
                            g$d$14810$T@1Mj))))
                     (cdr g$x$14808$T@1Mj))
                    (if (eqv? g$t$14809$T@1Mj 'letrec)
                      ((case-lambda
                         ((g$bindings$14812$T@1Mj g$body*$14813$T@1Mj)
                          ((case-lambda
                             ((g$lhs*$14814$T@1Mj g$rhs*$14815$T@1Mj)
                              ((case-lambda
                                 ((g$t*$14816$T@1Mj g$tmps$14817$T@1Mj)
                                  ((case-lambda
                                     ((g$s*$14818$T@1Mj)
                                      (g$parse$14626$T@1Mj
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$14814$T@1Mj
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$14816$T@1Mj
                                                    (append
                                                      g$s*$14818$T@1Mj
                                                      g$body*$14813$T@1Mj)))
                                                g$rhs*$14815$T@1Mj)))
                                          g$tmps$14817$T@1Mj))))
                                   (g$map$11724$T@1Mj
                                     (case-lambda
                                       ((g$i$14819$T@1Mj
                                          g$t$14820$T@1Mj)
                                        (list
                                          'set!
                                          g$i$14819$T@1Mj
                                          g$t$14820$T@1Mj)))
                                     g$lhs*$14814$T@1Mj
                                     g$t*$14816$T@1Mj))))
                               (g$map$11724$T@1Mj
                                 gensym
                                 g$lhs*$14814$T@1Mj)
                               (g$map$11724$T@1Mj
                                 (case-lambda
                                   ((g$x$14821$T@1Mj) 'uninitialized))
                                 g$lhs*$14814$T@1Mj))))
                           (g$map$11724$T@1Mj
                             car
                             g$bindings$14812$T@1Mj)
                           (g$map$11724$T@1Mj
                             g$cadr$12477$T@1Mj
                             g$bindings$14812$T@1Mj))))
                       (g$cadr$12477$T@1Mj g$x$14808$T@1Mj)
                       (g$cddr$12479$T@1Mj g$x$14808$T@1Mj))
                      (if (eqv? g$t$14809$T@1Mj 'letrec*)
                        ((case-lambda
                           ((g$bindings$14822$T@1Mj g$body*$14823$T@1Mj)
                            ((case-lambda
                               ((g$lhs*$14824$T@1Mj g$rhs*$14825$T@1Mj)
                                (g$cps/generate-recursive*-bind$14587$T@1Mj
                                  g$lhs*$14824$T@1Mj
                                  (g$map$11724$T@1Mj
                                    g$parse$14626$T@1Mj
                                    g$rhs*$14825$T@1Mj)
                                  (g$parse$14626$T@1Mj
                                    (cons
                                      'begin
                                      g$body*$14823$T@1Mj)))))
                             (g$map$11724$T@1Mj
                               car
                               g$bindings$14822$T@1Mj)
                             (g$map$11724$T@1Mj
                               g$cadr$12477$T@1Mj
                               g$bindings$14822$T@1Mj))))
                         (g$cadr$12477$T@1Mj g$x$14808$T@1Mj)
                         (g$cddr$12479$T@1Mj g$x$14808$T@1Mj))
                        (if (eqv? g$t$14809$T@1Mj 'library-letrec*)
                          ((case-lambda
                             ((g$name$14826$T@1Mj g$x$14827$T@1Mj)
                              ((case-lambda
                                 ((g$bindings$14828$T@1Mj
                                    g$body*$14829$T@1Mj)
                                  ((case-lambda
                                     ((g$lhs*$14830$T@1Mj
                                        g$lhs**$14831$T@1Mj
                                        g$rhs*$14832$T@1Mj)
                                      (g$cps/generate-recursive*-library-bind$14588$T@1Mj
                                        g$name$14826$T@1Mj
                                        g$lhs*$14830$T@1Mj
                                        g$lhs**$14831$T@1Mj
                                        (g$map$11724$T@1Mj
                                          g$parse$14626$T@1Mj
                                          g$rhs*$14832$T@1Mj)
                                        (g$parse$14626$T@1Mj
                                          (cons
                                            'begin
                                            g$body*$14829$T@1Mj)))))
                                   (g$map$11724$T@1Mj
                                     car
                                     g$bindings$14828$T@1Mj)
                                   (g$map$11724$T@1Mj
                                     g$cadr$12477$T@1Mj
                                     g$bindings$14828$T@1Mj)
                                   (g$map$11724$T@1Mj
                                     g$caddr$12483$T@1Mj
                                     g$bindings$14828$T@1Mj))))
                               (g$cadr$12477$T@1Mj g$x$14827$T@1Mj)
                               (g$cddr$12479$T@1Mj g$x$14827$T@1Mj))))
                           (g$cadr$12477$T@1Mj g$x$14808$T@1Mj)
                           (cdr g$x$14808$T@1Mj))
                          (if (eqv? g$t$14809$T@1Mj 'begin)
                            (g$cps/generate-sequence$14589$T@1Mj
                              (g$map$11724$T@1Mj
                                g$parse$14626$T@1Mj
                                (cdr g$x$14808$T@1Mj)))
                            (if (eqv? g$t$14809$T@1Mj 'set!)
                              (g$cps/generate-assignment$14590$T@1Mj
                                (g$cadr$12477$T@1Mj g$x$14808$T@1Mj)
                                (g$parse$14626$T@1Mj
                                  (g$caddr$12483$T@1Mj
                                    g$x$14808$T@1Mj)))
                              (if (eqv? g$t$14809$T@1Mj 'define)
                                (g$cps/generate-declaration$14591$T@1Mj
                                  (g$cadr$12477$T@1Mj g$x$14808$T@1Mj)
                                  (g$parse$14626$T@1Mj
                                    (g$caddr$12483$T@1Mj
                                      g$x$14808$T@1Mj)))
                                (if (list? g$x$14808$T@1Mj)
                                  (g$cps/generate-combination$14592$T@1Mj
                                    (g$parse$14626$T@1Mj
                                      (car g$x$14808$T@1Mj))
                                    (g$map$11724$T@1Mj
                                      g$parse$14626$T@1Mj
                                      (cdr g$x$14808$T@1Mj)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$14808$T@1Mj
                                    (list? g$x$14808$T@1Mj))))))))))))))
           (car g$x$14808$T@1Mj))
          (if (g$symbol?$12467$T@1Mj g$x$14808$T@1Mj)
            (g$cps/generate-reference$14580$T@1Mj g$x$14808$T@1Mj)
            (g$cps/generate-literal$14581$T@1Mj g$x$14808$T@1Mj))))))
   (g$starts-with?$14627$T@1Mj
     g$starts-with?$14892$T@1Mj
     (case-lambda
       ((g$str$14833$T@1Mj g$sub$14834$T@1Mj)
        (clr-call-internal
          'system.string
          'startswith
          g$str$14833$T@1Mj
          g$sub$14834$T@1Mj))))
   (g$ends-with?$14628$T@1Mj
     g$ends-with?$14893$T@1Mj
     (case-lambda
       ((g$str$14835$T@1Mj g$sub$14836$T@1Mj)
        (clr-call-internal
          'system.string
          'endswith
          g$str$14835$T@1Mj
          g$sub$14836$T@1Mj))))
   (g$clr-generator?$14629$T@1Mj
     g$clr-generator?$14894$T@1Mj
     (case-lambda
       ((g$o$14837$T@1Mj)
        (if (g$symbol?$12467$T@1Mj g$o$14837$T@1Mj)
          (begin
            '#f
            ((case-lambda
               ((g$o$14838$T@1Mj)
                (if (g$starts-with?$14627$T@1Mj g$o$14838$T@1Mj '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$14628$T@1Mj
                      g$o$14838$T@1Mj
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$14837$T@1Mj)))
          '#f))))
   (g$fix-primitives$14630$T@1Mj
     g$fix-primitives$14895$T@1Mj
     (case-lambda
       ((g$e$14839$T@1Mj)
        (if (if (pair? g$e$14839$T@1Mj)
              (begin '#f (list? g$e$14839$T@1Mj))
              '#f)
          ((case-lambda
             ((g$o$14840$T@1Mj)
              (if (eq? g$o$14840$T@1Mj 'quote)
                g$e$14839$T@1Mj
                (if (begin
                      '#f
                      (g$clr-generator?$14629$T@1Mj g$o$14840$T@1Mj))
                  (if (pair? (cdr g$e$14839$T@1Mj))
                    (list
                      (g$fix-primitives$14630$T@1Mj
                        (g$cadr$12477$T@1Mj g$e$14839$T@1Mj))
                      (cons
                        g$o$14840$T@1Mj
                        (g$map$11724$T@1Mj
                          g$fix-primitives$14630$T@1Mj
                          (g$cddr$12479$T@1Mj g$e$14839$T@1Mj))))
                    g$e$14839$T@1Mj)
                  (cons
                    (g$fix-primitives$14630$T@1Mj g$o$14840$T@1Mj)
                    (g$map$11724$T@1Mj
                      g$fix-primitives$14630$T@1Mj
                      (cdr g$e$14839$T@1Mj)))))))
           (car g$e$14839$T@1Mj))
          g$e$14839$T@1Mj))))
   (g$parse->cps$14631$T@1Mj
     g$parse->cps$14896$T@1Mj
     (case-lambda
       ((g$e$14841$T@1Mj g$var$14842$T@1Mj)
        ((g$parse$14626$T@1Mj g$e$14841$T@1Mj)
         (g$variable-continuator$14597$T@1Mj g$var$14842$T@1Mj)))))
   (g$convert->cps$14632$T@1Mj
     g$convert->cps$14897$T@1Mj
     (case-lambda
       ((g$e$14843$T@1Mj g$var$14844$T@1Mj)
        (g$fix-primitives$14630$T@1Mj
          (g$parse->cps$14631$T@1Mj
            g$e$14843$T@1Mj
            g$var$14844$T@1Mj))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$14898$T@1Mj
     g$current-primitive-locations$14943$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda ((g$x$14904$T@1Mj) '#f))
       (case-lambda
         ((g$p$14905$T@1Mj)
          (begin
            (if (not (g$procedure?$12469$T@1Mj g$p$14905$T@1Mj))
              (g$assertion-error$19710$T@1Mj
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$14905$T@1Mj)))))
   (g$mutable?$14899$T@1Mj
     g$mutable?$14944$T@1Mj
     (case-lambda
       ((g$x$14906$T@1Mj)
        (letrec* ((g$simple?$14907$T@1Mj
                    (case-lambda
                      ((g$x$14908$T@1Mj)
                       ((case-lambda
                          ((g$t$14909$T@1Mj)
                           (if g$t$14909$T@1Mj
                             g$t$14909$T@1Mj
                             ((case-lambda
                                ((g$t$14910$T@1Mj)
                                 (if g$t$14910$T@1Mj
                                   g$t$14910$T@1Mj
                                   ((case-lambda
                                      ((g$t$14911$T@1Mj)
                                       (if g$t$14911$T@1Mj
                                         g$t$14911$T@1Mj
                                         ((case-lambda
                                            ((g$t$14912$T@1Mj)
                                             (if g$t$14912$T@1Mj
                                               g$t$14912$T@1Mj
                                               ((case-lambda
                                                  ((g$t$14913$T@1Mj)
                                                   (if g$t$14913$T@1Mj
                                                     g$t$14913$T@1Mj
                                                     ((case-lambda
                                                        ((g$t$14914$T@1Mj)
                                                         (if g$t$14914$T@1Mj
                                                           g$t$14914$T@1Mj
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$14908$T@1Mj)))))
                                                      (g$bytevector?$12466$T@1Mj
                                                        g$x$14908$T@1Mj)))))
                                                (string?
                                                  g$x$14908$T@1Mj)))))
                                          (g$boolean?$12468$T@1Mj
                                            g$x$14908$T@1Mj)))))
                                    (g$symbol?$12467$T@1Mj
                                      g$x$14908$T@1Mj)))))
                              (g$char?$12464$T@1Mj g$x$14908$T@1Mj)))))
                        (null? g$x$14908$T@1Mj))))))
          (not (g$simple?$14907$T@1Mj g$x$14906$T@1Mj))))))
   (g$rewriter$14900$T@1Mj
     g$rewriter$14945$T@1Mj
     (case-lambda
       ((g$quote-hack?$14915$T@1Mj)
        (letrec* ((g$f$14916$T@1Mj
                    (case-lambda
                      ((g$x$14917$T@1Mj)
                       (if (pair? g$x$14917$T@1Mj)
                         ((case-lambda
                            ((g$t$14918$T@1Mj)
                             (if (eqv? g$t$14918$T@1Mj 'quote)
                               (if (if g$quote-hack?$14915$T@1Mj
                                     (begin
                                       '#f
                                       (g$mutable?$14899$T@1Mj
                                         (g$cadr$12477$T@1Mj
                                           g$x$14917$T@1Mj)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$14919$T@1Mj)
                                     (begin
                                       (set-symbol-value!
                                         g$g$14919$T@1Mj
                                         (g$cadr$12477$T@1Mj
                                           g$x$14917$T@1Mj))
                                       g$g$14919$T@1Mj)))
                                  (gensym 'weak-temp))
                                 g$x$14917$T@1Mj)
                               (if (eqv? g$t$14918$T@1Mj 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11724$T@1Mj
                                     (case-lambda
                                       ((g$x$14920$T@1Mj)
                                        (cons
                                          (car g$x$14920$T@1Mj)
                                          (g$map$11724$T@1Mj
                                            g$f$14916$T@1Mj
                                            (cdr g$x$14920$T@1Mj)))))
                                     (cdr g$x$14917$T@1Mj)))
                                 (if (eqv? g$t$14918$T@1Mj 'lambda)
                                   (g$cons*$11726$T@1Mj
                                     'lambda
                                     (g$cadr$12477$T@1Mj
                                       g$x$14917$T@1Mj)
                                     (g$map$11724$T@1Mj
                                       g$f$14916$T@1Mj
                                       (g$cddr$12479$T@1Mj
                                         g$x$14917$T@1Mj)))
                                   (if (eqv? g$t$14918$T@1Mj 'letrec)
                                     ((case-lambda
                                        ((g$bindings$14921$T@1Mj
                                           g$body*$14922$T@1Mj)
                                         ((case-lambda
                                            ((g$lhs*$14923$T@1Mj
                                               g$rhs*$14924$T@1Mj)
                                             (g$cons*$11726$T@1Mj
                                               'letrec
                                               (g$map$11724$T@1Mj
                                                 list
                                                 g$lhs*$14923$T@1Mj
                                                 (g$map$11724$T@1Mj
                                                   g$f$14916$T@1Mj
                                                   g$rhs*$14924$T@1Mj))
                                               (g$map$11724$T@1Mj
                                                 g$f$14916$T@1Mj
                                                 g$body*$14922$T@1Mj))))
                                          (g$map$11724$T@1Mj
                                            car
                                            g$bindings$14921$T@1Mj)
                                          (g$map$11724$T@1Mj
                                            g$cadr$12477$T@1Mj
                                            g$bindings$14921$T@1Mj))))
                                      (g$cadr$12477$T@1Mj
                                        g$x$14917$T@1Mj)
                                      (g$cddr$12479$T@1Mj
                                        g$x$14917$T@1Mj))
                                     (if (eqv? g$t$14918$T@1Mj 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$14925$T@1Mj
                                             g$body*$14926$T@1Mj)
                                           ((case-lambda
                                              ((g$lhs*$14927$T@1Mj
                                                 g$rhs*$14928$T@1Mj)
                                               (g$cons*$11726$T@1Mj
                                                 'letrec*
                                                 (g$map$11724$T@1Mj
                                                   list
                                                   g$lhs*$14927$T@1Mj
                                                   (g$map$11724$T@1Mj
                                                     g$f$14916$T@1Mj
                                                     g$rhs*$14928$T@1Mj))
                                                 (g$map$11724$T@1Mj
                                                   g$f$14916$T@1Mj
                                                   g$body*$14926$T@1Mj))))
                                            (g$map$11724$T@1Mj
                                              car
                                              g$bindings$14925$T@1Mj)
                                            (g$map$11724$T@1Mj
                                              g$cadr$12477$T@1Mj
                                              g$bindings$14925$T@1Mj))))
                                        (g$cadr$12477$T@1Mj
                                          g$x$14917$T@1Mj)
                                        (g$cddr$12479$T@1Mj
                                          g$x$14917$T@1Mj))
                                       (if (eqv?
                                             g$t$14918$T@1Mj
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$14929$T@1Mj
                                               g$x$14930$T@1Mj)
                                             ((case-lambda
                                                ((g$bindings$14931$T@1Mj
                                                   g$body*$14932$T@1Mj)
                                                 ((case-lambda
                                                    ((g$lhs*$14933$T@1Mj
                                                       g$lhs**$14934$T@1Mj
                                                       g$rhs*$14935$T@1Mj)
                                                     (g$cons*$11726$T@1Mj
                                                       'library-letrec*
                                                       g$name$14929$T@1Mj
                                                       (g$map$11724$T@1Mj
                                                         list
                                                         g$lhs*$14933$T@1Mj
                                                         g$lhs**$14934$T@1Mj
                                                         (g$map$11724$T@1Mj
                                                           g$f$14916$T@1Mj
                                                           g$rhs*$14935$T@1Mj))
                                                       (g$map$11724$T@1Mj
                                                         g$f$14916$T@1Mj
                                                         g$body*$14932$T@1Mj))))
                                                  (g$map$11724$T@1Mj
                                                    car
                                                    g$bindings$14931$T@1Mj)
                                                  (g$map$11724$T@1Mj
                                                    g$cadr$12477$T@1Mj
                                                    g$bindings$14931$T@1Mj)
                                                  (g$map$11724$T@1Mj
                                                    g$caddr$12483$T@1Mj
                                                    g$bindings$14931$T@1Mj))))
                                              (g$cadr$12477$T@1Mj
                                                g$x$14930$T@1Mj)
                                              (g$cddr$12479$T@1Mj
                                                g$x$14930$T@1Mj))))
                                          (g$cadr$12477$T@1Mj
                                            g$x$14917$T@1Mj)
                                          (cdr g$x$14917$T@1Mj))
                                         (if (eqv?
                                               g$t$14918$T@1Mj
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11724$T@1Mj
                                               g$f$14916$T@1Mj
                                               (cdr g$x$14917$T@1Mj)))
                                           (if (eqv?
                                                 g$t$14918$T@1Mj
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12477$T@1Mj
                                                 g$x$14917$T@1Mj)
                                               (g$f$14916$T@1Mj
                                                 (g$caddr$12483$T@1Mj
                                                   g$x$14917$T@1Mj)))
                                             (if (eqv?
                                                   g$t$14918$T@1Mj
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$14936$T@1Mj)
                                                   ((case-lambda
                                                      ((g$t$14937$T@1Mj)
                                                       (if g$t$14937$T@1Mj
                                                         ((case-lambda
                                                            ((g$loc$14938$T@1Mj)
                                                             g$loc$14938$T@1Mj))
                                                          g$t$14937$T@1Mj)
                                                         g$op$14936$T@1Mj)))
                                                    ((g$current-primitive-locations$14898$T@1Mj)
                                                     g$op$14936$T@1Mj))))
                                                (g$cadr$12477$T@1Mj
                                                  g$x$14917$T@1Mj))
                                               (if (eqv?
                                                     g$t$14918$T@1Mj
                                                     'define)
                                                 g$x$14917$T@1Mj
                                                 (if (list?
                                                       g$x$14917$T@1Mj)
                                                   (g$map$11724$T@1Mj
                                                     g$f$14916$T@1Mj
                                                     g$x$14917$T@1Mj)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$14917$T@1Mj
                                                     (list?
                                                       g$x$14917$T@1Mj)))))))))))))))
                          (car g$x$14917$T@1Mj))
                         g$x$14917$T@1Mj)))))
          g$f$14916$T@1Mj))))
   (g$expanded->core$14901$T@1Mj
     g$expanded->core$14946$T@1Mj
     (case-lambda
       ((g$x$14939$T@1Mj)
        ((g$rewriter$14900$T@1Mj '#t) g$x$14939$T@1Mj))))
   (g$compile-core-expr$14902$T@1Mj
     g$compile-core-expr$14947$T@1Mj
     (case-lambda
       ((g$x$14940$T@1Mj)
        ((g$rewriter$14900$T@1Mj '#f) g$x$14940$T@1Mj))))
   (g$compile-core-expr-to-port$14903$T@1Mj
     g$compile-core-expr-to-port$14948$T@1Mj
     (case-lambda
       ((g$x$14941$T@1Mj g$p$14942$T@1Mj)
        (g$pretty-print$14579$T@1Mj
          ((g$rewriter$14900$T@1Mj '#f) g$x$14941$T@1Mj)
          g$p$14942$T@1Mj)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$14949$T@1Mj
     g$make-collection$15157$T@1Mj
     (case-lambda
       (()
        ((case-lambda
           ((g$set$15012$T@1Mj)
            (letrec* ((g$set-cons$15013$T@1Mj
                        (case-lambda
                          ((g$x$15017$T@1Mj g$ls$15018$T@1Mj)
                           (if (g$memq$11716$T@1Mj
                                 g$x$15017$T@1Mj
                                 g$ls$15018$T@1Mj)
                             g$ls$15018$T@1Mj
                             (cons
                               g$x$15017$T@1Mj
                               g$ls$15018$T@1Mj))))))
              (case-lambda
                (() g$set$15012$T@1Mj)
                ((g$x$15014$T@1Mj)
                 (set! g$set$15012$T@1Mj
                   (g$set-cons$15013$T@1Mj
                     g$x$15014$T@1Mj
                     g$set$15012$T@1Mj)))
                ((g$x$15015$T@1Mj g$del?$15016$T@1Mj)
                 (if g$del?$15016$T@1Mj
                   (set! g$set$15012$T@1Mj
                     (g$remq$11731$T@1Mj
                       g$x$15015$T@1Mj
                       g$set$15012$T@1Mj))
                   (set! g$set$15012$T@1Mj
                     (g$set-cons$15013$T@1Mj
                       g$x$15015$T@1Mj
                       g$set$15012$T@1Mj))))))))
         '()))))
   (g$current-library-collection$14950$T@1Mj
     g$current-library-collection$15158$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (g$make-collection$14949$T@1Mj)
       (case-lambda
         ((g$x$15019$T@1Mj)
          (begin
            (if (not (g$procedure?$12469$T@1Mj g$x$15019$T@1Mj))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$15019$T@1Mj)
              (void))
            g$x$15019$T@1Mj)))))
   (g$7378$14951$T@1Mj
     g$7378$15159$T@1Mj
     (make-record-type-descriptor
       'library
       '#f
       'g$7381$T@1Mj
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7380$14952$T@1Mj g$7380$15160$T@1Mj '#f)
   (g$7379$14953$T@1Mj
     g$7379$15161$T@1Mj
     (make-record-constructor-descriptor
       g$7378$14951$T@1Mj
       '#f
       g$7380$14952$T@1Mj))
   (g$library?$14956$T@1Mj
     g$library?$15162$T@1Mj
     (record-predicate g$7378$14951$T@1Mj))
   (g$make-library$14957$T@1Mj
     g$make-library$15163$T@1Mj
     (record-constructor g$7379$14953$T@1Mj))
   (g$library-id$14958$T@1Mj
     g$library-id$15164$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '0))
   (g$library-name$14959$T@1Mj
     g$library-name$15165$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '1))
   (g$library-version$14960$T@1Mj
     g$library-version$15166$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '2))
   (g$library-imp*$14961$T@1Mj
     g$library-imp*$15167$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '3))
   (g$library-vis*$14962$T@1Mj
     g$library-vis*$15168$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '4))
   (g$library-inv*$14963$T@1Mj
     g$library-inv*$15169$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '5))
   (g$library-subst$14964$T@1Mj
     g$library-subst$15170$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '6))
   (g$library-env$14965$T@1Mj
     g$library-env$15171$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '7))
   (g$library-visit-state$14966$T@1Mj
     g$library-visit-state$15172$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '8))
   (g$library-invoke-state$14967$T@1Mj
     g$library-invoke-state$15173$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '9))
   (g$library-visit-code$14968$T@1Mj
     g$library-visit-code$15174$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '10))
   (g$library-invoke-code$14969$T@1Mj
     g$library-invoke-code$15175$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '11))
   (g$library-visible?$14970$T@1Mj
     g$library-visible?$15176$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '12))
   (g$library-source-file-name$14971$T@1Mj
     g$library-source-file-name$15177$T@1Mj
     (record-accessor g$7378$14951$T@1Mj '13))
   (g$set-library-id!$14972$T@1Mj
     g$set-library-id!$15178$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '0))
   (g$set-library-name!$14973$T@1Mj
     g$set-library-name!$15179$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '1))
   (g$set-library-version!$14974$T@1Mj
     g$set-library-version!$15180$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '2))
   (g$set-library-imp*!$14975$T@1Mj
     g$set-library-imp*!$15181$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '3))
   (g$set-library-vis*!$14976$T@1Mj
     g$set-library-vis*!$15182$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '4))
   (g$set-library-inv*!$14977$T@1Mj
     g$set-library-inv*!$15183$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '5))
   (g$set-library-subst!$14978$T@1Mj
     g$set-library-subst!$15184$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '6))
   (g$set-library-env!$14979$T@1Mj
     g$set-library-env!$15185$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '7))
   (g$set-library-visit-state!$14980$T@1Mj
     g$set-library-visit-state!$15186$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '8))
   (g$set-library-invoke-state!$14981$T@1Mj
     g$set-library-invoke-state!$15187$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '9))
   (g$set-library-visit-code!$14982$T@1Mj
     g$set-library-visit-code!$15188$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '10))
   (g$set-library-invoke-code!$14983$T@1Mj
     g$set-library-invoke-code!$15189$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '11))
   (g$set-library-visible?!$14984$T@1Mj
     g$set-library-visible?!$15190$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '12))
   (g$set-library-source-file-name!$14985$T@1Mj
     g$set-library-source-file-name!$15191$T@1Mj
     (record-mutator g$7378$14951$T@1Mj '13))
   (g$rp$14986$T@1Mj
     g$rp$15192$T@1Mj
     (make-record-printer
       'library
       (case-lambda
         ((g$x$15020$T@1Mj g$p$15021$T@1Mj g$wr$15022$T@1Mj)
          (begin
            (if (not (g$library?$14956$T@1Mj g$x$15020$T@1Mj))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$14160$T@1Mj
                '"#<library ~s>"
                (if (null?
                      (g$library-version$14960$T@1Mj g$x$15020$T@1Mj))
                  (g$library-name$14959$T@1Mj g$x$15020$T@1Mj)
                  (append
                    (g$library-name$14959$T@1Mj g$x$15020$T@1Mj)
                    (list
                      (g$library-version$14960$T@1Mj
                        g$x$15020$T@1Mj)))))
              g$p$15021$T@1Mj))))))
   (g$find-dependencies$14987$T@1Mj
     g$find-dependencies$15193$T@1Mj
     (case-lambda
       ((g$ls$15023$T@1Mj)
        (if (null? g$ls$15023$T@1Mj)
          '()
          (assertion-violation
            'find-dependencies
            '"cannot handle deps yet")))))
   (g$find-library-by$14988$T@1Mj
     g$find-library-by$15194$T@1Mj
     (case-lambda
       ((g$pred$15024$T@1Mj)
        ((letrec ((g$f$15025$T@1Mj
                    (case-lambda
                      ((g$ls$15026$T@1Mj)
                       (if (null? g$ls$15026$T@1Mj)
                         '#f
                         (if (g$pred$15024$T@1Mj (car g$ls$15026$T@1Mj))
                           (car g$ls$15026$T@1Mj)
                           (g$f$15025$T@1Mj
                             (cdr g$ls$15026$T@1Mj))))))))
           g$f$15025$T@1Mj)
         ((g$current-library-collection$14950$T@1Mj))))))
   (g$library-path$14989$T@1Mj
     g$library-path$15195$T@1Mj
     (g$make-parameter$14369$T@1Mj
       '(".")
       (case-lambda
         ((g$x$15027$T@1Mj)
          (if (if (list? g$x$15027$T@1Mj)
                (begin
                  '#f
                  (g$for-all$11722$T@1Mj string? g$x$15027$T@1Mj))
                '#f)
            (g$map$11724$T@1Mj
              (case-lambda ((g$x$15028$T@1Mj) g$x$15028$T@1Mj))
              g$x$15027$T@1Mj)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$15027$T@1Mj))))))
   (g$library-extensions$14990$T@1Mj
     g$library-extensions$15196$T@1Mj
     (g$make-parameter$14369$T@1Mj
       '(".sls" ".ss")
       (case-lambda
         ((g$x$15029$T@1Mj)
          (if (if (list? g$x$15029$T@1Mj)
                (begin
                  '#f
                  (g$for-all$11722$T@1Mj string? g$x$15029$T@1Mj))
                '#f)
            (g$map$11724$T@1Mj
              (case-lambda ((g$x$15030$T@1Mj) g$x$15030$T@1Mj))
              g$x$15029$T@1Mj)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$15029$T@1Mj))))))
   (g$library-name->file-name$14991$T@1Mj
     g$library-name->file-name$15197$T@1Mj
     (case-lambda
       ((g$x$15031$T@1Mj)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$13920$T@1Mj)))
          (case-lambda
            ((g$p$15034$T@1Mj g$extract$15035$T@1Mj)
             ((case-lambda
                ((g$extract$15036$T@1Mj g$p$15037$T@1Mj)
                 (letrec* ((g$display-hex$15038$T@1Mj
                             (case-lambda
                               ((g$n$15046$T@1Mj)
                                (if (<= '0 g$n$15046$T@1Mj '9)
                                  (display
                                    g$n$15046$T@1Mj
                                    g$p$15037$T@1Mj)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$15046$T@1Mj '10)))
                                    g$p$15037$T@1Mj))))))
                   (begin
                     ((letrec ((g$f$15039$T@1Mj
                                 (case-lambda
                                   ((g$ls$15040$T@1Mj)
                                    (if (not (null? g$ls$15040$T@1Mj))
                                      (begin
                                        (display '"/" g$p$15037$T@1Mj)
                                        (g$for-each$11725$T@1Mj
                                          (case-lambda
                                            ((g$c$15041$T@1Mj)
                                             (if ((case-lambda
                                                    ((g$t$15042$T@1Mj)
                                                     (if g$t$15042$T@1Mj
                                                       g$t$15042$T@1Mj
                                                       ((case-lambda
                                                          ((g$t$15043$T@1Mj)
                                                           (if g$t$15043$T@1Mj
                                                             g$t$15043$T@1Mj
                                                             ((case-lambda
                                                                ((g$t$15044$T@1Mj)
                                                                 (if g$t$15044$T@1Mj
                                                                   g$t$15044$T@1Mj
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11717$T@1Mj
                                                                       g$c$15041$T@1Mj
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12523$T@1Mj
                                                                '#\0
                                                                g$c$15041$T@1Mj
                                                                '#\9)))))
                                                        (g$char<=?$12523$T@1Mj
                                                          '#\A
                                                          g$c$15041$T@1Mj
                                                          '#\Z)))))
                                                  (g$char<=?$12523$T@1Mj
                                                    '#\a
                                                    g$c$15041$T@1Mj
                                                    '#\z))
                                               (display
                                                 g$c$15041$T@1Mj
                                                 g$p$15037$T@1Mj)
                                               (begin
                                                 (display
                                                   '"%"
                                                   g$p$15037$T@1Mj)
                                                 ((case-lambda
                                                    ((g$n$15045$T@1Mj)
                                                     (begin
                                                       (g$display-hex$15038$T@1Mj
                                                         (g$quotient$13402$T@1Mj
                                                           g$n$15045$T@1Mj
                                                           '16))
                                                       (g$display-hex$15038$T@1Mj
                                                         (g$remainder$13403$T@1Mj
                                                           g$n$15045$T@1Mj
                                                           '16)))))
                                                  (char->integer
                                                    g$c$15041$T@1Mj))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$15040$T@1Mj))))
                                        (g$f$15039$T@1Mj
                                          (cdr g$ls$15040$T@1Mj)))
                                      (void))))))
                        g$f$15039$T@1Mj)
                      g$x$15031$T@1Mj)
                     (g$extract$15036$T@1Mj)))))
              g$extract$15035$T@1Mj
              g$p$15034$T@1Mj)))))))
   (g$file-locator$14992$T@1Mj
     g$file-locator$15198$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         ((g$x$15047$T@1Mj)
          ((case-lambda
             ((g$str$15048$T@1Mj)
              ((letrec ((g$f$15049$T@1Mj
                          (case-lambda
                            ((g$ls$15050$T@1Mj
                               g$exts$15051$T@1Mj
                               g$failed-list$15052$T@1Mj)
                             (if (null? g$ls$15050$T@1Mj)
                               (g$file-locator-resolution-error$14367$T@1Mj
                                 g$x$15047$T@1Mj
                                 (g$reverse$12475$T@1Mj
                                   g$failed-list$15052$T@1Mj))
                               (if (null? g$exts$15051$T@1Mj)
                                 (g$f$15049$T@1Mj
                                   (cdr g$ls$15050$T@1Mj)
                                   (g$library-extensions$14990$T@1Mj)
                                   g$failed-list$15052$T@1Mj)
                                 ((case-lambda
                                    ((g$name$15053$T@1Mj)
                                     (if (g$file-exists?$12586$T@1Mj
                                           g$name$15053$T@1Mj)
                                       g$name$15053$T@1Mj
                                       (g$f$15049$T@1Mj
                                         g$ls$15050$T@1Mj
                                         (cdr g$exts$15051$T@1Mj)
                                         (cons
                                           g$name$15053$T@1Mj
                                           g$failed-list$15052$T@1Mj)))))
                                  (string-append
                                    (car g$ls$15050$T@1Mj)
                                    g$str$15048$T@1Mj
                                    (car g$exts$15051$T@1Mj)))))))))
                 g$f$15049$T@1Mj)
               (g$library-path$14989$T@1Mj)
               (g$library-extensions$14990$T@1Mj)
               '())))
           (g$library-name->file-name$14991$T@1Mj g$x$15047$T@1Mj))))
       (case-lambda
         ((g$f$15054$T@1Mj)
          (if (g$procedure?$12469$T@1Mj g$f$15054$T@1Mj)
            g$f$15054$T@1Mj
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$15054$T@1Mj))))))
   (g$serialize-all$14993$T@1Mj
     g$serialize-all$15199$T@1Mj
     (case-lambda
       ((g$serialize$15055$T@1Mj g$compile$15056$T@1Mj)
        (letrec* ((g$library-desc$15057$T@1Mj
                    (case-lambda
                      ((g$x$15059$T@1Mj)
                       (list
                         (g$library-id$14958$T@1Mj g$x$15059$T@1Mj)
                         (g$library-name$14959$T@1Mj
                           g$x$15059$T@1Mj))))))
          (g$for-each$11725$T@1Mj
            (case-lambda
              ((g$x$15058$T@1Mj)
               (if (g$library-source-file-name$14971$T@1Mj
                     g$x$15058$T@1Mj)
                 (g$serialize$15055$T@1Mj
                   (g$library-source-file-name$14971$T@1Mj
                     g$x$15058$T@1Mj)
                   (list
                     (g$library-id$14958$T@1Mj g$x$15058$T@1Mj)
                     (g$library-name$14959$T@1Mj g$x$15058$T@1Mj)
                     (g$library-version$14960$T@1Mj g$x$15058$T@1Mj)
                     (g$map$11724$T@1Mj
                       g$library-desc$15057$T@1Mj
                       (g$library-imp*$14961$T@1Mj g$x$15058$T@1Mj))
                     (g$map$11724$T@1Mj
                       g$library-desc$15057$T@1Mj
                       (g$library-vis*$14962$T@1Mj g$x$15058$T@1Mj))
                     (g$map$11724$T@1Mj
                       g$library-desc$15057$T@1Mj
                       (g$library-inv*$14963$T@1Mj g$x$15058$T@1Mj))
                     (g$library-subst$14964$T@1Mj g$x$15058$T@1Mj)
                     (g$library-env$14965$T@1Mj g$x$15058$T@1Mj)
                     (g$compile$15056$T@1Mj
                       (g$library-visit-code$14968$T@1Mj
                         g$x$15058$T@1Mj))
                     (g$compile$15056$T@1Mj
                       (g$library-invoke-code$14969$T@1Mj
                         g$x$15058$T@1Mj))
                     (g$library-visible?$14970$T@1Mj g$x$15058$T@1Mj)))
                 (void))))
            ((g$current-library-collection$14950$T@1Mj)))))))
   (g$current-precompiled-library-loader$14994$T@1Mj
     g$current-precompiled-library-loader$15200$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda ((g$filename$15060$T@1Mj g$sk$15061$T@1Mj) '#f))))
   (g$try-load-from-file$14995$T@1Mj
     g$try-load-from-file$15201$T@1Mj
     (case-lambda
       ((g$filename$15062$T@1Mj)
        ((g$current-precompiled-library-loader$14994$T@1Mj)
         g$filename$15062$T@1Mj
         (case-lambda
           ((g$id$15063$T@1Mj
              g$name$15064$T@1Mj
              g$ver$15065$T@1Mj
              g$imp*$15066$T@1Mj
              g$vis*$15067$T@1Mj
              g$inv*$15068$T@1Mj
              g$exp-subst$15069$T@1Mj
              g$exp-env$15070$T@1Mj
              g$visit-proc$15071$T@1Mj
              g$invoke-proc$15072$T@1Mj
              g$visible?$15073$T@1Mj)
            ((letrec ((g$f$15074$T@1Mj
                        (case-lambda
                          ((g$deps$15075$T@1Mj)
                           (if (null? g$deps$15075$T@1Mj)
                             (begin
                               (g$install-library$15005$T@1Mj
                                 g$id$15063$T@1Mj
                                 g$name$15064$T@1Mj
                                 g$ver$15065$T@1Mj
                                 g$imp*$15066$T@1Mj
                                 g$vis*$15067$T@1Mj
                                 g$inv*$15068$T@1Mj
                                 g$exp-subst$15069$T@1Mj
                                 g$exp-env$15070$T@1Mj
                                 g$visit-proc$15071$T@1Mj
                                 g$invoke-proc$15072$T@1Mj
                                 '#f
                                 '#f
                                 g$visible?$15073$T@1Mj
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$15076$T@1Mj)
                                 ((case-lambda
                                    ((g$label$15077$T@1Mj
                                       g$dname$15078$T@1Mj)
                                     ((case-lambda
                                        ((g$l$15079$T@1Mj)
                                         (if (if (g$library?$14956$T@1Mj
                                                   g$l$15079$T@1Mj)
                                               (begin
                                                 '#f
                                                 (eq? g$label$15077$T@1Mj
                                                      (g$library-id$14958$T@1Mj
                                                        g$l$15079$T@1Mj)))
                                               '#f)
                                           (g$f$15074$T@1Mj
                                             (cdr g$deps$15075$T@1Mj))
                                           (begin
                                             (g$library-version-mismatch-warning$14366$T@1Mj
                                               g$name$15064$T@1Mj
                                               g$dname$15078$T@1Mj
                                               g$filename$15062$T@1Mj)
                                             '#f))))
                                      (g$find-library-by-name$15000$T@1Mj
                                        g$dname$15078$T@1Mj))))
                                  (car g$d$15076$T@1Mj)
                                  (g$cadr$12477$T@1Mj
                                    g$d$15076$T@1Mj))))
                              (car g$deps$15075$T@1Mj)))))))
               g$f$15074$T@1Mj)
             (append
               g$imp*$15066$T@1Mj
               g$vis*$15067$T@1Mj
               g$inv*$15068$T@1Mj)))
           (g$others$15080$T@1Mj '#f))))))
   (g$library-loader$14996$T@1Mj
     g$library-loader$15202$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         ((g$x$15081$T@1Mj)
          ((case-lambda
             ((g$file-name$15082$T@1Mj)
              (if (not g$file-name$15082$T@1Mj)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$15081$T@1Mj)
                ((case-lambda
                   ((g$t$15083$T@1Mj)
                    (if g$t$15083$T@1Mj
                      g$t$15083$T@1Mj
                      (begin
                        '#f
                        ((g$current-library-expander$14997$T@1Mj)
                         (g$read-library-source-file$14368$T@1Mj
                           g$file-name$15082$T@1Mj)
                         g$file-name$15082$T@1Mj
                         (case-lambda
                           ((g$name$15084$T@1Mj)
                            (if (not (equal?
                                       g$name$15084$T@1Mj
                                       g$x$15081$T@1Mj))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$13920$T@1Mj)))
                                  (case-lambda
                                    ((g$p$15087$T@1Mj g$e$15088$T@1Mj)
                                     ((case-lambda
                                        ((g$e$15089$T@1Mj
                                           g$p$15090$T@1Mj)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$15090$T@1Mj)
                                           (write
                                             g$x$15081$T@1Mj
                                             g$p$15090$T@1Mj)
                                           (display
                                             '" in file "
                                             g$p$15090$T@1Mj)
                                           (display
                                             g$file-name$15082$T@1Mj
                                             g$p$15090$T@1Mj)
                                           (display
                                             '", found "
                                             g$p$15090$T@1Mj)
                                           (write
                                             g$name$15084$T@1Mj
                                             g$p$15090$T@1Mj)
                                           (display
                                             '" instead"
                                             g$p$15090$T@1Mj)
                                           (g$e$15089$T@1Mj))))
                                      g$e$15088$T@1Mj
                                      g$p$15087$T@1Mj)))))
                              (void)))))))))
                 (g$try-load-from-file$14995$T@1Mj
                   g$file-name$15082$T@1Mj)))))
           ((g$file-locator$14992$T@1Mj) g$x$15081$T@1Mj))))
       (case-lambda
         ((g$f$15091$T@1Mj)
          (if (g$procedure?$12469$T@1Mj g$f$15091$T@1Mj)
            g$f$15091$T@1Mj
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$15091$T@1Mj))))))
   (g$current-library-expander$14997$T@1Mj
     g$current-library-expander$15203$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         ((g$x$15092$T@1Mj)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$15093$T@1Mj)
          (if (g$procedure?$12469$T@1Mj g$f$15093$T@1Mj)
            g$f$15093$T@1Mj
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$15093$T@1Mj))))))
   (g$external-pending-libraries$14998$T@1Mj
     g$external-pending-libraries$15204$T@1Mj
     (g$make-parameter$14369$T@1Mj '()))
   (g$find-external-library$14999$T@1Mj
     g$find-external-library$15205$T@1Mj
     (case-lambda
       ((g$name$15094$T@1Mj)
        (begin
          (if (g$member$11718$T@1Mj
                g$name$15094$T@1Mj
                (g$external-pending-libraries$14998$T@1Mj))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$15094$T@1Mj)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$15097$T@1Mj
                g$external-pending-libraries$15098$T@1Mj)
              ((case-lambda
                 ((g$swap$15099$T@1Mj)
                  (dynamic-wind
                    g$swap$15099$T@1Mj
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$14996$T@1Mj)
                          g$name$15094$T@1Mj)
                         ((case-lambda
                            ((g$t$15100$T@1Mj)
                             (if g$t$15100$T@1Mj
                               g$t$15100$T@1Mj
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$15094$T@1Mj)))))
                          (g$find-library-by$14988$T@1Mj
                            (case-lambda
                              ((g$x$15101$T@1Mj)
                               (equal?
                                 (g$library-name$14959$T@1Mj
                                   g$x$15101$T@1Mj)
                                 g$name$15094$T@1Mj))))))))
                    g$swap$15099$T@1Mj)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$15102$T@1Mj)
                      (begin
                        (g$external-pending-libraries$15097$T@1Mj
                          g$external-pending-libraries$15098$T@1Mj)
                        (set! g$external-pending-libraries$15098$T@1Mj
                          g$t$15102$T@1Mj))))
                   (g$external-pending-libraries$15097$T@1Mj)))))))
           g$external-pending-libraries$14998$T@1Mj
           (cons
             g$name$15094$T@1Mj
             (g$external-pending-libraries$14998$T@1Mj)))))))
   (g$find-library-by-name$15000$T@1Mj
     g$find-library-by-name$15206$T@1Mj
     (case-lambda
       ((g$name$15103$T@1Mj)
        ((case-lambda
           ((g$t$15104$T@1Mj)
            (if g$t$15104$T@1Mj
              g$t$15104$T@1Mj
              (begin
                '#f
                (g$find-external-library$14999$T@1Mj
                  g$name$15103$T@1Mj)))))
         (g$find-library-by$14988$T@1Mj
           (case-lambda
             ((g$x$15105$T@1Mj)
              (equal?
                (g$library-name$14959$T@1Mj g$x$15105$T@1Mj)
                g$name$15103$T@1Mj))))))))
   (g$uninstall-library$15001$T@1Mj
     g$uninstall-library$15207$T@1Mj
     (case-lambda
       ((g$name$15106$T@1Mj g$err?$15107$T@1Mj)
        (letrec* ((g$who$15108$T@1Mj 'uninstall-library))
          ((case-lambda
             ((g$lib$15109$T@1Mj)
              (begin
                (if (if g$err?$15107$T@1Mj
                      (begin '#f (not g$lib$15109$T@1Mj))
                      '#f)
                  (assertion-violation
                    g$who$15108$T@1Mj
                    '"library not installed"
                    g$name$15106$T@1Mj)
                  (void))
                ((g$current-library-collection$14950$T@1Mj)
                 g$lib$15109$T@1Mj
                 '#t)
                (g$for-each$11725$T@1Mj
                  (case-lambda
                    ((g$x$15110$T@1Mj)
                     ((case-lambda
                        ((g$label$15111$T@1Mj g$binding$15112$T@1Mj)
                         (begin
                           (remove-location g$label$15111$T@1Mj)
                           (if (g$memq$11716$T@1Mj
                                 (car g$binding$15112$T@1Mj)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$15112$T@1Mj))
                             (void)))))
                      (car g$x$15110$T@1Mj)
                      (cdr g$x$15110$T@1Mj))))
                  (g$library-env$14965$T@1Mj g$lib$15109$T@1Mj)))))
           (g$find-library-by$14988$T@1Mj
             (case-lambda
               ((g$x$15113$T@1Mj)
                (equal?
                  (g$library-name$14959$T@1Mj g$x$15113$T@1Mj)
                  g$name$15106$T@1Mj)))))))
       ((g$name$15114$T@1Mj)
        (g$uninstall-library$15001$T@1Mj g$name$15114$T@1Mj '#t))))
   (g$library-exists?$15002$T@1Mj
     g$library-exists?$15208$T@1Mj
     (case-lambda
       ((g$name$15115$T@1Mj)
        (if (g$find-library-by$14988$T@1Mj
              (case-lambda
                ((g$x$15116$T@1Mj)
                 (equal?
                   (g$library-name$14959$T@1Mj g$x$15116$T@1Mj)
                   g$name$15115$T@1Mj))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$15003$T@1Mj
     g$find-library-by-spec/die$15209$T@1Mj
     (case-lambda
       ((g$spec$15117$T@1Mj)
        ((case-lambda
           ((g$id$15118$T@1Mj)
            ((case-lambda
               ((g$t$15119$T@1Mj)
                (if g$t$15119$T@1Mj
                  g$t$15119$T@1Mj
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$15117$T@1Mj)))))
             (g$find-library-by$14988$T@1Mj
               (case-lambda
                 ((g$x$15120$T@1Mj)
                  (eq? g$id$15118$T@1Mj
                       (g$library-id$14958$T@1Mj g$x$15120$T@1Mj))))))))
         (car g$spec$15117$T@1Mj)))))
   (g$install-library-record$15004$T@1Mj
     g$install-library-record$15210$T@1Mj
     (case-lambda
       ((g$lib$15121$T@1Mj)
        (begin
          ((case-lambda
             ((g$exp-env$15122$T@1Mj)
              (g$for-each$11725$T@1Mj
                (case-lambda
                  ((g$x$15123$T@1Mj)
                   ((case-lambda
                      ((g$label$15124$T@1Mj g$binding$15125$T@1Mj)
                       ((case-lambda
                          ((g$binding$15126$T@1Mj)
                           (g$set-label-binding!$14372$T@1Mj
                             g$label$15124$T@1Mj
                             g$binding$15126$T@1Mj)))
                        ((case-lambda
                           ((g$t$15127$T@1Mj)
                            (if (eqv? g$t$15127$T@1Mj 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$15121$T@1Mj
                                  (cdr g$binding$15125$T@1Mj)))
                              (if (eqv? g$t$15127$T@1Mj 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$15121$T@1Mj
                                    (cdr g$binding$15125$T@1Mj)))
                                (if (eqv?
                                      g$t$15127$T@1Mj
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$15121$T@1Mj
                                      (cdr g$binding$15125$T@1Mj)))
                                  (if (eqv? g$t$15127$T@1Mj 'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$15121$T@1Mj
                                        (cdr g$binding$15125$T@1Mj)))
                                    g$binding$15125$T@1Mj))))))
                         (car g$binding$15125$T@1Mj)))))
                    (car g$x$15123$T@1Mj)
                    (cdr g$x$15123$T@1Mj))))
                g$exp-env$15122$T@1Mj)))
           (g$library-env$14965$T@1Mj g$lib$15121$T@1Mj))
          ((g$current-library-collection$14950$T@1Mj)
           g$lib$15121$T@1Mj)))))
   (g$install-library$15005$T@1Mj
     g$install-library$15211$T@1Mj
     (case-lambda
       ((g$id$15128$T@1Mj
          g$name$15129$T@1Mj
          g$ver$15130$T@1Mj
          g$imp*$15131$T@1Mj
          g$vis*$15132$T@1Mj
          g$inv*$15133$T@1Mj
          g$exp-subst$15134$T@1Mj
          g$exp-env$15135$T@1Mj
          g$visit-proc$15136$T@1Mj
          g$invoke-proc$15137$T@1Mj
          g$visit-code$15138$T@1Mj
          g$invoke-code$15139$T@1Mj
          g$visible?$15140$T@1Mj
          g$source-file-name$15141$T@1Mj)
        ((case-lambda
           ((g$imp-lib*$15142$T@1Mj
              g$vis-lib*$15143$T@1Mj
              g$inv-lib*$15144$T@1Mj)
            (begin
              (if (not (if (g$symbol?$12467$T@1Mj g$id$15128$T@1Mj)
                         (if (list? g$name$15129$T@1Mj)
                           (begin '#f (list? g$ver$15130$T@1Mj))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$15128$T@1Mj
                  g$name$15129$T@1Mj
                  g$ver$15130$T@1Mj)
                (void))
              (if (g$library-exists?$15002$T@1Mj g$name$15129$T@1Mj)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$15129$T@1Mj)
                (void))
              ((case-lambda
                 ((g$lib$15145$T@1Mj)
                  (g$install-library-record$15004$T@1Mj
                    g$lib$15145$T@1Mj)))
               (g$make-library$14957$T@1Mj
                 g$id$15128$T@1Mj
                 g$name$15129$T@1Mj
                 g$ver$15130$T@1Mj
                 g$imp-lib*$15142$T@1Mj
                 g$vis-lib*$15143$T@1Mj
                 g$inv-lib*$15144$T@1Mj
                 g$exp-subst$15134$T@1Mj
                 g$exp-env$15135$T@1Mj
                 g$visit-proc$15136$T@1Mj
                 g$invoke-proc$15137$T@1Mj
                 g$visit-code$15138$T@1Mj
                 g$invoke-code$15139$T@1Mj
                 g$visible?$15140$T@1Mj
                 g$source-file-name$15141$T@1Mj)))))
         (g$map$11724$T@1Mj
           g$find-library-by-spec/die$15003$T@1Mj
           g$imp*$15131$T@1Mj)
         (g$map$11724$T@1Mj
           g$find-library-by-spec/die$15003$T@1Mj
           g$vis*$15132$T@1Mj)
         (g$map$11724$T@1Mj
           g$find-library-by-spec/die$15003$T@1Mj
           g$inv*$15133$T@1Mj)))))
   (g$imported-label->binding$15006$T@1Mj
     g$imported-label->binding$15212$T@1Mj
     (case-lambda
       ((g$lab$15146$T@1Mj)
        (g$label-binding$14373$T@1Mj g$lab$15146$T@1Mj))))
   (g$invoke-library$15007$T@1Mj
     g$invoke-library$15213$T@1Mj
     (case-lambda
       ((g$lib$15147$T@1Mj)
        ((case-lambda
           ((g$invoke$15148$T@1Mj)
            (if (g$procedure?$12469$T@1Mj g$invoke$15148$T@1Mj)
              (begin
                (g$set-library-invoke-state!$14981$T@1Mj
                  g$lib$15147$T@1Mj
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$15147$T@1Mj))))
                (g$for-each$11725$T@1Mj
                  g$invoke-library$15007$T@1Mj
                  (g$library-inv*$14963$T@1Mj g$lib$15147$T@1Mj))
                (g$set-library-invoke-state!$14981$T@1Mj
                  g$lib$15147$T@1Mj
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$15147$T@1Mj))))
                (g$invoke$15148$T@1Mj)
                (g$set-library-invoke-state!$14981$T@1Mj
                  g$lib$15147$T@1Mj
                  '#t))
              (void))))
         (g$library-invoke-state$14967$T@1Mj g$lib$15147$T@1Mj)))))
   (g$visit-library$15008$T@1Mj
     g$visit-library$15214$T@1Mj
     (case-lambda
       ((g$lib$15149$T@1Mj)
        ((case-lambda
           ((g$visit$15150$T@1Mj)
            (if (g$procedure?$12469$T@1Mj g$visit$15150$T@1Mj)
              (begin
                (g$set-library-visit-state!$14980$T@1Mj
                  g$lib$15149$T@1Mj
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$15149$T@1Mj))))
                (g$for-each$11725$T@1Mj
                  g$invoke-library$15007$T@1Mj
                  (g$library-vis*$14962$T@1Mj g$lib$15149$T@1Mj))
                (g$set-library-visit-state!$14980$T@1Mj
                  g$lib$15149$T@1Mj
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$15149$T@1Mj))))
                (g$visit$15150$T@1Mj)
                (g$set-library-visit-state!$14980$T@1Mj
                  g$lib$15149$T@1Mj
                  '#t))
              (void))))
         (g$library-visit-state$14966$T@1Mj g$lib$15149$T@1Mj)))))
   (g$invoke-library-by-spec$15009$T@1Mj
     g$invoke-library-by-spec$15215$T@1Mj
     (case-lambda
       ((g$spec$15151$T@1Mj)
        (g$invoke-library$15007$T@1Mj
          (g$find-library-by-spec/die$15003$T@1Mj
            g$spec$15151$T@1Mj)))))
   (g$installed-libraries$15010$T@1Mj
     g$installed-libraries$15216$T@1Mj
     (case-lambda
       ((g$all?$15152$T@1Mj)
        ((letrec ((g$f$15153$T@1Mj
                    (case-lambda
                      ((g$ls$15154$T@1Mj)
                       (if (null? g$ls$15154$T@1Mj)
                         '()
                         (if ((case-lambda
                                ((g$t$15155$T@1Mj)
                                 (if g$t$15155$T@1Mj
                                   g$t$15155$T@1Mj
                                   (begin
                                     '#f
                                     (g$library-visible?$14970$T@1Mj
                                       (car g$ls$15154$T@1Mj))))))
                              g$all?$15152$T@1Mj)
                           (cons
                             (g$library-name$14959$T@1Mj
                               (car g$ls$15154$T@1Mj))
                             (g$f$15153$T@1Mj (cdr g$ls$15154$T@1Mj)))
                           (g$f$15153$T@1Mj
                             (cdr g$ls$15154$T@1Mj))))))))
           g$f$15153$T@1Mj)
         ((g$current-library-collection$14950$T@1Mj))))
       (() (g$installed-libraries$15010$T@1Mj '#f))))
   (g$library-spec$15011$T@1Mj
     g$library-spec$15217$T@1Mj
     (case-lambda
       ((g$x$15156$T@1Mj)
        (begin
          (if (not (g$library?$14956$T@1Mj g$x$15156$T@1Mj))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$15156$T@1Mj)
            (void))
          (list
            (g$library-id$14958$T@1Mj g$x$15156$T@1Mj)
            (g$library-name$14959$T@1Mj g$x$15156$T@1Mj)
            (g$library-version$14960$T@1Mj g$x$15156$T@1Mj)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$15218$T@1Mj
     g$build-global-define$15428$T@1Mj
     (case-lambda ((g$x$15399$T@1Mj) (g$build-void$15395$T@1Mj))))
   (g$build-lambda$15329$T@1Mj
     g$build-lambda$15429$T@1Mj
     (case-lambda
       ((g$ae$15400$T@1Mj g$vars$15401$T@1Mj g$exp$15402$T@1Mj)
        (list
          'case-lambda
          (list g$vars$15401$T@1Mj g$exp$15402$T@1Mj)))))
   (g$build-case-lambda$15330$T@1Mj
     g$build-case-lambda$15430$T@1Mj
     (case-lambda
       ((g$ae$15403$T@1Mj g$vars*$15404$T@1Mj g$exp*$15405$T@1Mj)
        (cons
          'case-lambda
          (g$map$11724$T@1Mj
            list
            g$vars*$15404$T@1Mj
            g$exp*$15405$T@1Mj)))))
   (g$build-let$15331$T@1Mj
     g$build-let$15431$T@1Mj
     (case-lambda
       ((g$ae$15406$T@1Mj
          g$lhs*$15407$T@1Mj
          g$rhs*$15408$T@1Mj
          g$body$15409$T@1Mj)
        (cons
          (g$build-lambda$15329$T@1Mj
            g$ae$15406$T@1Mj
            g$lhs*$15407$T@1Mj
            g$body$15409$T@1Mj)
          g$rhs*$15408$T@1Mj))))
   (g$build-sequence$15394$T@1Mj
     g$build-sequence$15432$T@1Mj
     (case-lambda
       ((g$ae$15410$T@1Mj g$exps$15411$T@1Mj)
        ((letrec ((g$loop$15412$T@1Mj
                    (case-lambda
                      ((g$exps$15413$T@1Mj)
                       (if (null? (cdr g$exps$15413$T@1Mj))
                         (car g$exps$15413$T@1Mj)
                         (if (equal?
                               (car g$exps$15413$T@1Mj)
                               (g$build-void$15395$T@1Mj))
                           (g$loop$15412$T@1Mj (cdr g$exps$15413$T@1Mj))
                           (cons 'begin g$exps$15413$T@1Mj)))))))
           g$loop$15412$T@1Mj)
         g$exps$15411$T@1Mj))))
   (g$build-void$15395$T@1Mj
     g$build-void$15433$T@1Mj
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$15396$T@1Mj
     g$build-letrec$15434$T@1Mj
     (case-lambda
       ((g$ae$15414$T@1Mj
          g$vars$15415$T@1Mj
          g$val-exps$15416$T@1Mj
          g$body-exp$15417$T@1Mj)
        (if (null? g$vars$15415$T@1Mj)
          g$body-exp$15417$T@1Mj
          (list
            'letrec
            (g$map$11724$T@1Mj
              list
              g$vars$15415$T@1Mj
              g$val-exps$15416$T@1Mj)
            g$body-exp$15417$T@1Mj)))))
   (g$build-letrec*$15397$T@1Mj
     g$build-letrec*$15435$T@1Mj
     (case-lambda
       ((g$ae$15418$T@1Mj
          g$vars$15419$T@1Mj
          g$val-exps$15420$T@1Mj
          g$body-exp$15421$T@1Mj)
        (if (null? g$vars$15419$T@1Mj)
          g$body-exp$15421$T@1Mj
          (list
            'letrec*
            (g$map$11724$T@1Mj
              list
              g$vars$15419$T@1Mj
              g$val-exps$15420$T@1Mj)
            g$body-exp$15421$T@1Mj)))))
   (g$build-library-letrec*$15398$T@1Mj
     g$build-library-letrec*$15436$T@1Mj
     (case-lambda
       ((g$ae$15422$T@1Mj
          g$name$15423$T@1Mj
          g$vars$15424$T@1Mj
          g$locs$15425$T@1Mj
          g$val-exps$15426$T@1Mj
          g$body-exp$15427$T@1Mj)
        (list
          'library-letrec*
          g$name$15423$T@1Mj
          (g$map$11724$T@1Mj
            list
            g$vars$15424$T@1Mj
            g$locs$15425$T@1Mj
            g$val-exps$15426$T@1Mj)
          g$body-exp$15427$T@1Mj)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$15437$T@1Mj
     g$set-cons$19449$T@1Mj
     (case-lambda
       ((g$x$16133$T@1Mj g$ls$16134$T@1Mj)
        (if (g$memq$11716$T@1Mj g$x$16133$T@1Mj g$ls$16134$T@1Mj)
          g$ls$16134$T@1Mj
          (cons g$x$16133$T@1Mj g$ls$16134$T@1Mj)))))
   (g$set-union$15438$T@1Mj
     g$set-union$19450$T@1Mj
     (case-lambda
       ((g$ls1$16135$T@1Mj g$ls2$16136$T@1Mj)
        (if (null? g$ls1$16135$T@1Mj)
          g$ls2$16136$T@1Mj
          (if (g$memq$11716$T@1Mj
                (car g$ls1$16135$T@1Mj)
                g$ls2$16136$T@1Mj)
            (g$set-union$15438$T@1Mj
              (cdr g$ls1$16135$T@1Mj)
              g$ls2$16136$T@1Mj)
            (cons
              (car g$ls1$16135$T@1Mj)
              (g$set-union$15438$T@1Mj
                (cdr g$ls1$16135$T@1Mj)
                g$ls2$16136$T@1Mj)))))))
   (g$top-mark*$15440$T@1Mj g$top-mark*$19451$T@1Mj '(top))
   (g$top-marked?$15441$T@1Mj
     g$top-marked?$19452$T@1Mj
     (case-lambda
       ((g$m*$16137$T@1Mj) (g$memq$11716$T@1Mj 'top g$m*$16137$T@1Mj))))
   (g$gen-lexical$15442$T@1Mj
     g$gen-lexical$19453$T@1Mj
     (case-lambda
       ((g$sym$16138$T@1Mj)
        (if (g$symbol?$12467$T@1Mj g$sym$16138$T@1Mj)
          (gensym g$sym$16138$T@1Mj)
          (if (g$stx?$15479$T@1Mj g$sym$16138$T@1Mj)
            (g$gen-lexical$15442$T@1Mj
              (g$id->sym$15508$T@1Mj g$sym$16138$T@1Mj))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$16138$T@1Mj))))))
   (g$gen-global$15443$T@1Mj
     g$gen-global$19454$T@1Mj
     (case-lambda
       ((g$x$16139$T@1Mj) (g$gen-lexical$15442$T@1Mj g$x$16139$T@1Mj))))
   (g$gen-label$15444$T@1Mj
     g$gen-label$19455$T@1Mj
     (case-lambda ((g$_$16140$T@1Mj) (gensym))))
   (g$gen-top-level-label$15445$T@1Mj
     g$gen-top-level-label$19456$T@1Mj
     (case-lambda
       ((g$id$16141$T@1Mj g$rib$16142$T@1Mj)
        (letrec* ((g$find$16143$T@1Mj
                    (case-lambda
                      ((g$sym$16149$T@1Mj
                         g$mark*$16150$T@1Mj
                         g$sym*$16151$T@1Mj
                         g$mark**$16152$T@1Mj
                         g$label*$16153$T@1Mj)
                       (if (pair? g$sym*$16151$T@1Mj)
                         (begin
                           '#f
                           (if (if (eq? g$sym$16149$T@1Mj
                                        (car g$sym*$16151$T@1Mj))
                                 (begin
                                   '#f
                                   (g$same-marks?$15509$T@1Mj
                                     g$mark*$16150$T@1Mj
                                     (car g$mark**$16152$T@1Mj)))
                                 '#f)
                             (car g$label*$16153$T@1Mj)
                             (g$find$16143$T@1Mj
                               g$sym$16149$T@1Mj
                               g$mark*$16150$T@1Mj
                               (cdr g$sym*$16151$T@1Mj)
                               (cdr g$mark**$16152$T@1Mj)
                               (cdr g$label*$16153$T@1Mj))))
                         '#f)))))
          ((case-lambda
             ((g$sym$16144$T@1Mj g$mark*$16145$T@1Mj)
              ((case-lambda
                 ((g$sym*$16146$T@1Mj)
                  ((case-lambda
                     ((g$t$16147$T@1Mj)
                      (if g$t$16147$T@1Mj
                        ((case-lambda
                           ((g$label$16148$T@1Mj)
                            (if (g$imported-label->binding$15212$T@1Mj
                                  g$label$16148$T@1Mj)
                              (gensym)
                              g$label$16148$T@1Mj)))
                         g$t$16147$T@1Mj)
                        (gensym))))
                   (if (g$memq$11716$T@1Mj
                         g$sym$16144$T@1Mj
                         (g$rib-sym*$15455$T@1Mj g$rib$16142$T@1Mj))
                     (begin
                       '#f
                       (g$find$16143$T@1Mj
                         g$sym$16144$T@1Mj
                         g$mark*$16145$T@1Mj
                         g$sym*$16146$T@1Mj
                         (g$rib-mark**$15456$T@1Mj g$rib$16142$T@1Mj)
                         (g$rib-label*$15457$T@1Mj g$rib$16142$T@1Mj)))
                     '#f))))
               (g$rib-sym*$15455$T@1Mj g$rib$16142$T@1Mj))))
           (g$id->sym$15508$T@1Mj g$id$16141$T@1Mj)
           (g$stx-mark*$15482$T@1Mj g$id$16141$T@1Mj))))))
   (g$gen-define-label+loc$15446$T@1Mj
     g$gen-define-label+loc$19457$T@1Mj
     (case-lambda
       ((g$id$16154$T@1Mj g$rib$16155$T@1Mj g$sd?$16156$T@1Mj)
        (if g$sd?$16156$T@1Mj
          (values (gensym) (g$gen-lexical$15442$T@1Mj g$id$16154$T@1Mj))
          ((case-lambda
             ((g$env$16157$T@1Mj)
              ((case-lambda
                 ((g$label$16158$T@1Mj g$locs$16159$T@1Mj)
                  (values
                    g$label$16158$T@1Mj
                    ((case-lambda
                       ((g$t$16160$T@1Mj)
                        (if g$t$16160$T@1Mj
                          (cdr g$t$16160$T@1Mj)
                          ((case-lambda
                             ((g$loc$16161$T@1Mj)
                              (begin
                                (g$set-interaction-env-locs!$16095$T@1Mj
                                  g$env$16157$T@1Mj
                                  (cons
                                    (cons
                                      g$label$16158$T@1Mj
                                      g$loc$16161$T@1Mj)
                                    g$locs$16159$T@1Mj))
                                g$loc$16161$T@1Mj)))
                           (g$gen-lexical$15442$T@1Mj
                             g$id$16154$T@1Mj)))))
                     (g$assq$11712$T@1Mj
                       g$label$16158$T@1Mj
                       g$locs$16159$T@1Mj)))))
               (g$gen-top-level-label$15445$T@1Mj
                 g$id$16154$T@1Mj
                 g$rib$16155$T@1Mj)
               (g$interaction-env-locs$16092$T@1Mj g$env$16157$T@1Mj))))
           (g$top-level-context$16132$T@1Mj))))))
   (g$gen-define-label$15447$T@1Mj
     g$gen-define-label$19458$T@1Mj
     (case-lambda
       ((g$id$16162$T@1Mj g$rib$16163$T@1Mj g$sd?$16164$T@1Mj)
        (if g$sd?$16164$T@1Mj
          (gensym)
          (g$gen-top-level-label$15445$T@1Mj
            g$id$16162$T@1Mj
            g$rib$16163$T@1Mj)))))
   (g$7704$15448$T@1Mj
     g$7704$19459$T@1Mj
     (make-record-type-descriptor
       'rib
       '#f
       'g$7707$T@1Mj
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$7706$15449$T@1Mj g$7706$19460$T@1Mj '#f)
   (g$7705$15450$T@1Mj
     g$7705$19461$T@1Mj
     (make-record-constructor-descriptor
       g$7704$15448$T@1Mj
       '#f
       g$7706$15449$T@1Mj))
   (g$rib?$15453$T@1Mj
     g$rib?$19462$T@1Mj
     (record-predicate g$7704$15448$T@1Mj))
   (g$make-rib$15454$T@1Mj
     g$make-rib$19463$T@1Mj
     (record-constructor g$7705$15450$T@1Mj))
   (g$rib-sym*$15455$T@1Mj
     g$rib-sym*$19464$T@1Mj
     (record-accessor g$7704$15448$T@1Mj '0))
   (g$rib-mark**$15456$T@1Mj
     g$rib-mark**$19465$T@1Mj
     (record-accessor g$7704$15448$T@1Mj '1))
   (g$rib-label*$15457$T@1Mj
     g$rib-label*$19466$T@1Mj
     (record-accessor g$7704$15448$T@1Mj '2))
   (g$rib-sealed/freq$15458$T@1Mj
     g$rib-sealed/freq$19467$T@1Mj
     (record-accessor g$7704$15448$T@1Mj '3))
   (g$rib-cache$15459$T@1Mj
     g$rib-cache$19468$T@1Mj
     (record-accessor g$7704$15448$T@1Mj '4))
   (g$set-rib-sym*!$15460$T@1Mj
     g$set-rib-sym*!$19469$T@1Mj
     (record-mutator g$7704$15448$T@1Mj '0))
   (g$set-rib-mark**!$15461$T@1Mj
     g$set-rib-mark**!$19470$T@1Mj
     (record-mutator g$7704$15448$T@1Mj '1))
   (g$set-rib-label*!$15462$T@1Mj
     g$set-rib-label*!$19471$T@1Mj
     (record-mutator g$7704$15448$T@1Mj '2))
   (g$set-rib-sealed/freq!$15463$T@1Mj
     g$set-rib-sealed/freq!$19472$T@1Mj
     (record-mutator g$7704$15448$T@1Mj '3))
   (g$set-rib-cache!$15464$T@1Mj
     g$set-rib-cache!$19473$T@1Mj
     (record-mutator g$7704$15448$T@1Mj '4))
   (g$make-empty-rib$15465$T@1Mj
     g$make-empty-rib$19474$T@1Mj
     (case-lambda (() (g$make-rib$15454$T@1Mj '() '() '() '#f '#f))))
   (g$make-cache-rib$15466$T@1Mj
     g$make-cache-rib$19475$T@1Mj
     (case-lambda
       (()
        (g$make-rib$15454$T@1Mj
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12568$T@1Mj)))))
   (g$find-label$15467$T@1Mj
     g$find-label$19476$T@1Mj
     (case-lambda
       ((g$rib$16165$T@1Mj g$sym$16166$T@1Mj g$mark*$16167$T@1Mj)
        ((case-lambda
           ((g$ht$16168$T@1Mj)
            (if g$ht$16168$T@1Mj
              (begin
                '#f
                ((case-lambda
                   ((g$cv$16169$T@1Mj)
                    ((case-lambda
                       ((g$t$16170$T@1Mj)
                        (if g$t$16170$T@1Mj (cdr g$t$16170$T@1Mj) '#f)))
                     (if g$cv$16169$T@1Mj
                       (begin
                         '#f
                         (g$assp$11715$T@1Mj
                           (case-lambda
                             ((g$m$16171$T@1Mj)
                              (g$same-marks?$15509$T@1Mj
                                g$mark*$16167$T@1Mj
                                g$m$16171$T@1Mj)))
                           g$cv$16169$T@1Mj))
                       '#f))))
                 (g$hashtable-ref$12571$T@1Mj
                   g$ht$16168$T@1Mj
                   g$sym$16166$T@1Mj
                   '#f)))
              '#f)))
         (g$rib-cache$15459$T@1Mj g$rib$16165$T@1Mj)))))
   (g$extend-rib!$15468$T@1Mj
     g$extend-rib!$19477$T@1Mj
     (case-lambda
       ((g$rib$16172$T@1Mj
          g$id$16173$T@1Mj
          g$label$16174$T@1Mj
          g$sd?$16175$T@1Mj)
        (letrec* ((g$find$16176$T@1Mj
                    (case-lambda
                      ((g$sym$16185$T@1Mj
                         g$mark*$16186$T@1Mj
                         g$sym*$16187$T@1Mj
                         g$mark**$16188$T@1Mj
                         g$label*$16189$T@1Mj)
                       (if (pair? g$sym*$16187$T@1Mj)
                         (begin
                           '#f
                           (if (if (eq? g$sym$16185$T@1Mj
                                        (car g$sym*$16187$T@1Mj))
                                 (begin
                                   '#f
                                   (g$same-marks?$15509$T@1Mj
                                     g$mark*$16186$T@1Mj
                                     (car g$mark**$16188$T@1Mj)))
                                 '#f)
                             g$label*$16189$T@1Mj
                             (g$find$16176$T@1Mj
                               g$sym$16185$T@1Mj
                               g$mark*$16186$T@1Mj
                               (cdr g$sym*$16187$T@1Mj)
                               (cdr g$mark**$16188$T@1Mj)
                               (cdr g$label*$16189$T@1Mj))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$15458$T@1Mj g$rib$16172$T@1Mj)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$16172$T@1Mj)
              (void))
            ((case-lambda
               ((g$sym$16177$T@1Mj g$mark*$16178$T@1Mj)
                ((case-lambda
                   ((g$sym*$16179$T@1Mj)
                    ((case-lambda
                       ((g$t$16180$T@1Mj)
                        (if g$t$16180$T@1Mj
                          ((case-lambda
                             ((g$p$16181$T@1Mj)
                              (if (not (eq? g$label$16174$T@1Mj
                                            g$p$16181$T@1Mj))
                                (g$syntax-violation$16124$T@1Mj
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$16173$T@1Mj)
                                (void))))
                           g$t$16180$T@1Mj)
                          ((case-lambda
                             ((g$t$16182$T@1Mj)
                              (if g$t$16182$T@1Mj
                                ((case-lambda
                                   ((g$p$16183$T@1Mj)
                                    (if (not (eq? g$label$16174$T@1Mj
                                                  (car g$p$16183$T@1Mj)))
                                      (if (not g$sd?$16175$T@1Mj)
                                        (set-car!
                                          g$p$16183$T@1Mj
                                          g$label$16174$T@1Mj)
                                        (g$syntax-violation$16124$T@1Mj
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$16173$T@1Mj))
                                      (void))))
                                 g$t$16182$T@1Mj)
                                (begin
                                  (if (g$rib-cache$15459$T@1Mj
                                        g$rib$16172$T@1Mj)
                                    (g$hashtable-update!$12575$T@1Mj
                                      (g$rib-cache$15459$T@1Mj
                                        g$rib$16172$T@1Mj)
                                      g$sym$16177$T@1Mj
                                      (case-lambda
                                        ((g$e$16184$T@1Mj)
                                         (cons
                                           (cons
                                             g$mark*$16178$T@1Mj
                                             g$label$16174$T@1Mj)
                                           g$e$16184$T@1Mj)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$15460$T@1Mj
                                    g$rib$16172$T@1Mj
                                    (cons
                                      g$sym$16177$T@1Mj
                                      g$sym*$16179$T@1Mj))
                                  (g$set-rib-mark**!$15461$T@1Mj
                                    g$rib$16172$T@1Mj
                                    (cons
                                      g$mark*$16178$T@1Mj
                                      (g$rib-mark**$15456$T@1Mj
                                        g$rib$16172$T@1Mj)))
                                  (g$set-rib-label*!$15462$T@1Mj
                                    g$rib$16172$T@1Mj
                                    (cons
                                      g$label$16174$T@1Mj
                                      (g$rib-label*$15457$T@1Mj
                                        g$rib$16172$T@1Mj)))))))
                           (if (g$memq$11716$T@1Mj
                                 g$sym$16177$T@1Mj
                                 (g$rib-sym*$15455$T@1Mj
                                   g$rib$16172$T@1Mj))
                             (begin
                               '#f
                               (g$find$16176$T@1Mj
                                 g$sym$16177$T@1Mj
                                 g$mark*$16178$T@1Mj
                                 g$sym*$16179$T@1Mj
                                 (g$rib-mark**$15456$T@1Mj
                                   g$rib$16172$T@1Mj)
                                 (g$rib-label*$15457$T@1Mj
                                   g$rib$16172$T@1Mj)))
                             '#f)))))
                     (g$find-label$15467$T@1Mj
                       g$rib$16172$T@1Mj
                       g$sym$16177$T@1Mj
                       g$mark*$16178$T@1Mj))))
                 (g$rib-sym*$15455$T@1Mj g$rib$16172$T@1Mj))))
             (g$id->sym$15508$T@1Mj g$id$16173$T@1Mj)
             (g$stx-mark*$15482$T@1Mj g$id$16173$T@1Mj)))))))
   (g$extend-rib/nc!$15469$T@1Mj
     g$extend-rib/nc!$19478$T@1Mj
     (case-lambda
       ((g$rib$16190$T@1Mj g$id$16191$T@1Mj g$label$16192$T@1Mj)
        ((case-lambda
           ((g$sym$16193$T@1Mj g$mark*$16194$T@1Mj)
            ((case-lambda
               ((g$sym*$16195$T@1Mj)
                (begin
                  (if (g$rib-cache$15459$T@1Mj g$rib$16190$T@1Mj)
                    (g$hashtable-update!$12575$T@1Mj
                      (g$rib-cache$15459$T@1Mj g$rib$16190$T@1Mj)
                      g$sym$16193$T@1Mj
                      (case-lambda
                        ((g$e$16196$T@1Mj)
                         (cons
                           (cons
                             g$mark*$16194$T@1Mj
                             g$label$16192$T@1Mj)
                           g$e$16196$T@1Mj)))
                      '())
                    (void))
                  (g$set-rib-sym*!$15460$T@1Mj
                    g$rib$16190$T@1Mj
                    (cons g$sym$16193$T@1Mj g$sym*$16195$T@1Mj))
                  (g$set-rib-mark**!$15461$T@1Mj
                    g$rib$16190$T@1Mj
                    (cons
                      g$mark*$16194$T@1Mj
                      (g$rib-mark**$15456$T@1Mj g$rib$16190$T@1Mj)))
                  (g$set-rib-label*!$15462$T@1Mj
                    g$rib$16190$T@1Mj
                    (cons
                      g$label$16192$T@1Mj
                      (g$rib-label*$15457$T@1Mj g$rib$16190$T@1Mj))))))
             (g$rib-sym*$15455$T@1Mj g$rib$16190$T@1Mj))))
         (g$id->sym$15508$T@1Mj g$id$16191$T@1Mj)
         (g$stx-mark*$15482$T@1Mj g$id$16191$T@1Mj)))))
   (g$make-rib-map$15470$T@1Mj
     g$make-rib-map$19479$T@1Mj
     (case-lambda
       ((g$sym*$16197$T@1Mj)
        ((case-lambda
           ((g$ht$16198$T@1Mj)
            ((letrec ((g$f$16199$T@1Mj
                        (case-lambda
                          ((g$i$16200$T@1Mj g$sym*$16201$T@1Mj)
                           (if (null? g$sym*$16201$T@1Mj)
                             g$ht$16198$T@1Mj
                             (begin
                               (g$hashtable-update!$12575$T@1Mj
                                 g$ht$16198$T@1Mj
                                 (car g$sym*$16201$T@1Mj)
                                 (case-lambda
                                   ((g$x$16202$T@1Mj)
                                    (cons
                                      g$i$16200$T@1Mj
                                      g$x$16202$T@1Mj)))
                                 '())
                               (g$f$16199$T@1Mj
                                 (+ g$i$16200$T@1Mj '1)
                                 (cdr g$sym*$16201$T@1Mj))))))))
               g$f$16199$T@1Mj)
             '0
             g$sym*$16197$T@1Mj)))
         (g$make-eq-hashtable$12568$T@1Mj)))))
   (g$seal-rib!$15471$T@1Mj
     g$seal-rib!$19480$T@1Mj
     (case-lambda
       ((g$rib$16203$T@1Mj)
        ((case-lambda
           ((g$sym*$16204$T@1Mj)
            (if (not (null? g$sym*$16204$T@1Mj))
              (begin
                (g$set-rib-sym*!$15460$T@1Mj
                  g$rib$16203$T@1Mj
                  (g$list->vector$12462$T@1Mj g$sym*$16204$T@1Mj))
                (g$set-rib-mark**!$15461$T@1Mj
                  g$rib$16203$T@1Mj
                  (g$list->vector$12462$T@1Mj
                    (g$rib-mark**$15456$T@1Mj g$rib$16203$T@1Mj)))
                (g$set-rib-label*!$15462$T@1Mj
                  g$rib$16203$T@1Mj
                  (g$list->vector$12462$T@1Mj
                    (g$rib-label*$15457$T@1Mj g$rib$16203$T@1Mj)))
                (g$set-rib-sealed/freq!$15463$T@1Mj
                  g$rib$16203$T@1Mj
                  (g$make-rib-map$15470$T@1Mj g$sym*$16204$T@1Mj)))
              (void))))
         (g$rib-sym*$15455$T@1Mj g$rib$16203$T@1Mj)))))
   (g$unseal-rib!$15472$T@1Mj
     g$unseal-rib!$19481$T@1Mj
     (case-lambda
       ((g$rib$16205$T@1Mj)
        (if (g$rib-sealed/freq$15458$T@1Mj g$rib$16205$T@1Mj)
          (begin
            (g$set-rib-sealed/freq!$15463$T@1Mj g$rib$16205$T@1Mj '#f)
            (g$set-rib-sym*!$15460$T@1Mj
              g$rib$16205$T@1Mj
              (vector->list (g$rib-sym*$15455$T@1Mj g$rib$16205$T@1Mj)))
            (g$set-rib-mark**!$15461$T@1Mj
              g$rib$16205$T@1Mj
              (vector->list
                (g$rib-mark**$15456$T@1Mj g$rib$16205$T@1Mj)))
            (g$set-rib-label*!$15462$T@1Mj
              g$rib$16205$T@1Mj
              (vector->list
                (g$rib-label*$15457$T@1Mj g$rib$16205$T@1Mj))))
          (void)))))
   (g$make-full-rib$15473$T@1Mj
     g$make-full-rib$19482$T@1Mj
     (case-lambda
       ((g$id*$16206$T@1Mj g$label*$16207$T@1Mj)
        ((case-lambda
           ((g$r$16208$T@1Mj)
            (begin
              (g$seal-rib!$15471$T@1Mj g$r$16208$T@1Mj)
              g$r$16208$T@1Mj)))
         (g$make-rib$15454$T@1Mj
           (g$map$11724$T@1Mj g$id->sym$15508$T@1Mj g$id*$16206$T@1Mj)
           (g$map$11724$T@1Mj g$stx-mark*$15482$T@1Mj g$id*$16206$T@1Mj)
           g$label*$16207$T@1Mj
           '#f
           '#f)))))
   (g$7733$15474$T@1Mj
     g$7733$19483$T@1Mj
     (make-record-type-descriptor
       'stx
       '#f
       'g$7736$T@1Mj
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$7735$15475$T@1Mj g$7735$19484$T@1Mj '#f)
   (g$7734$15476$T@1Mj
     g$7734$19485$T@1Mj
     (make-record-constructor-descriptor
       g$7733$15474$T@1Mj
       '#f
       g$7735$15475$T@1Mj))
   (g$stx?$15479$T@1Mj
     g$stx?$19486$T@1Mj
     (record-predicate g$7733$15474$T@1Mj))
   (g$make-stx$15480$T@1Mj
     g$make-stx$19487$T@1Mj
     (record-constructor g$7734$15476$T@1Mj))
   (g$stx-expr$15481$T@1Mj
     g$stx-expr$19488$T@1Mj
     (record-accessor g$7733$15474$T@1Mj '0))
   (g$stx-mark*$15482$T@1Mj
     g$stx-mark*$19489$T@1Mj
     (record-accessor g$7733$15474$T@1Mj '1))
   (g$stx-subst*$15483$T@1Mj
     g$stx-subst*$19490$T@1Mj
     (record-accessor g$7733$15474$T@1Mj '2))
   (g$stx-ae*$15484$T@1Mj
     g$stx-ae*$19491$T@1Mj
     (record-accessor g$7733$15474$T@1Mj '3))
   (g$set-stx-expr!$15485$T@1Mj
     g$set-stx-expr!$19492$T@1Mj
     (record-mutator g$7733$15474$T@1Mj '0))
   (g$set-stx-mark*!$15486$T@1Mj
     g$set-stx-mark*!$19493$T@1Mj
     (record-mutator g$7733$15474$T@1Mj '1))
   (g$set-stx-subst*!$15487$T@1Mj
     g$set-stx-subst*!$19494$T@1Mj
     (record-mutator g$7733$15474$T@1Mj '2))
   (g$set-stx-ae*!$15488$T@1Mj
     g$set-stx-ae*!$19495$T@1Mj
     (record-mutator g$7733$15474$T@1Mj '3))
   (g$rp$15489$T@1Mj
     g$rp$19496$T@1Mj
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$16209$T@1Mj g$p$16210$T@1Mj g$wr$16211$T@1Mj)
          (begin
            (display '"#<syntax " g$p$16210$T@1Mj)
            (write
              (g$stx->datum$15518$T@1Mj g$x$16209$T@1Mj)
              g$p$16210$T@1Mj)
            ((case-lambda
               ((g$expr$16212$T@1Mj)
                (if (annotation? g$expr$16212$T@1Mj)
                  ((case-lambda
                     ((g$src$16213$T@1Mj)
                      (if (pair? g$src$16213$T@1Mj)
                        (begin
                          (display '" (" g$p$16210$T@1Mj)
                          (display
                            (cdr g$src$16213$T@1Mj)
                            g$p$16210$T@1Mj)
                          (display '" of " g$p$16210$T@1Mj)
                          (display
                            (car g$src$16213$T@1Mj)
                            g$p$16210$T@1Mj)
                          (display '")" g$p$16210$T@1Mj))
                        (void))))
                   (annotation-source g$expr$16212$T@1Mj))
                  (void))))
             (g$stx-expr$15481$T@1Mj g$x$16209$T@1Mj))
            (display '">" g$p$16210$T@1Mj))))))
   (g$datum->stx$15490$T@1Mj
     g$datum->stx$19497$T@1Mj
     (case-lambda
       ((g$id$16214$T@1Mj g$datum$16215$T@1Mj)
        (g$make-stx$15480$T@1Mj
          g$datum$16215$T@1Mj
          (g$stx-mark*$15482$T@1Mj g$id$16214$T@1Mj)
          (g$stx-subst*$15483$T@1Mj g$id$16214$T@1Mj)
          (g$stx-ae*$15484$T@1Mj g$id$16214$T@1Mj)))))
   (g$gen-mark$15491$T@1Mj
     g$gen-mark$19498$T@1Mj
     (case-lambda (() (string '#\m))))
   (g$anti-mark$15492$T@1Mj g$anti-mark$19499$T@1Mj '#f)
   (g$anti-mark?$15493$T@1Mj g$anti-mark?$19500$T@1Mj not)
   (g$join-wraps$15494$T@1Mj
     g$join-wraps$19501$T@1Mj
     (case-lambda
       ((g$m1*$16216$T@1Mj
          g$s1*$16217$T@1Mj
          g$ae1*$16218$T@1Mj
          g$e$16219$T@1Mj)
        (letrec* ((g$cancel$16220$T@1Mj
                    (case-lambda
                      ((g$ls1$16224$T@1Mj g$ls2$16225$T@1Mj)
                       ((letrec ((g$f$16226$T@1Mj
                                   (case-lambda
                                     ((g$x$16227$T@1Mj
                                        g$ls1$16228$T@1Mj)
                                      (if (null? g$ls1$16228$T@1Mj)
                                        (cdr g$ls2$16225$T@1Mj)
                                        (cons
                                          g$x$16227$T@1Mj
                                          (g$f$16226$T@1Mj
                                            (car g$ls1$16228$T@1Mj)
                                            (cdr g$ls1$16228$T@1Mj))))))))
                          g$f$16226$T@1Mj)
                        (car g$ls1$16224$T@1Mj)
                        (cdr g$ls1$16224$T@1Mj))))))
          ((case-lambda
             ((g$m2*$16221$T@1Mj g$s2*$16222$T@1Mj g$ae2*$16223$T@1Mj)
              (if (if (not (null? g$m1*$16216$T@1Mj))
                    (if (not (null? g$m2*$16221$T@1Mj))
                      (begin
                        '#f
                        (g$anti-mark?$15493$T@1Mj
                          (car g$m2*$16221$T@1Mj)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$16220$T@1Mj
                    g$m1*$16216$T@1Mj
                    g$m2*$16221$T@1Mj)
                  (g$cancel$16220$T@1Mj
                    g$s1*$16217$T@1Mj
                    g$s2*$16222$T@1Mj)
                  (g$cancel$16220$T@1Mj
                    g$ae1*$16218$T@1Mj
                    g$ae2*$16223$T@1Mj))
                (values
                  (append g$m1*$16216$T@1Mj g$m2*$16221$T@1Mj)
                  (append g$s1*$16217$T@1Mj g$s2*$16222$T@1Mj)
                  (append g$ae1*$16218$T@1Mj g$ae2*$16223$T@1Mj)))))
           (g$stx-mark*$15482$T@1Mj g$e$16219$T@1Mj)
           (g$stx-subst*$15483$T@1Mj g$e$16219$T@1Mj)
           (g$stx-ae*$15484$T@1Mj g$e$16219$T@1Mj))))))
   (g$mkstx$15495$T@1Mj
     g$mkstx$19502$T@1Mj
     (case-lambda
       ((g$e$16229$T@1Mj
          g$m*$16230$T@1Mj
          g$s*$16231$T@1Mj
          g$ae*$16232$T@1Mj)
        (if (if (g$stx?$15479$T@1Mj g$e$16229$T@1Mj)
              (begin
                '#f
                (not (g$top-marked?$15441$T@1Mj g$m*$16230$T@1Mj)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$15494$T@1Mj
                 g$m*$16230$T@1Mj
                 g$s*$16231$T@1Mj
                 g$ae*$16232$T@1Mj
                 g$e$16229$T@1Mj)))
            (case-lambda
              ((g$m*$16236$T@1Mj g$s*$16237$T@1Mj g$ae*$16238$T@1Mj)
               ((case-lambda
                  ((g$ae*$16239$T@1Mj g$s*$16240$T@1Mj g$m*$16241$T@1Mj)
                   (g$make-stx$15480$T@1Mj
                     (g$stx-expr$15481$T@1Mj g$e$16229$T@1Mj)
                     g$m*$16241$T@1Mj
                     g$s*$16240$T@1Mj
                     g$ae*$16239$T@1Mj)))
                g$ae*$16238$T@1Mj
                g$s*$16237$T@1Mj
                g$m*$16236$T@1Mj))))
          (g$make-stx$15480$T@1Mj
            g$e$16229$T@1Mj
            g$m*$16230$T@1Mj
            g$s*$16231$T@1Mj
            g$ae*$16232$T@1Mj)))))
   (g$add-mark$15496$T@1Mj
     g$add-mark$19503$T@1Mj
     (case-lambda
       ((g$m$16242$T@1Mj g$e$16243$T@1Mj g$ae$16244$T@1Mj)
        (g$mkstx$15495$T@1Mj
          g$e$16243$T@1Mj
          (list g$m$16242$T@1Mj)
          '(shift)
          (list g$ae$16244$T@1Mj)))))
   (g$add-subst$15497$T@1Mj
     g$add-subst$19504$T@1Mj
     (case-lambda
       ((g$subst$16245$T@1Mj g$e$16246$T@1Mj)
        (g$mkstx$15495$T@1Mj
          g$e$16246$T@1Mj
          '()
          (list g$subst$16245$T@1Mj)
          '()))))
   (g$syntax-kind?$15498$T@1Mj
     g$syntax-kind?$19505$T@1Mj
     (case-lambda
       ((g$x$16247$T@1Mj g$p?$16248$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$16247$T@1Mj)
          (g$syntax-kind?$15498$T@1Mj
            (g$stx-expr$15481$T@1Mj g$x$16247$T@1Mj)
            g$p?$16248$T@1Mj)
          (if (annotation? g$x$16247$T@1Mj)
            (g$syntax-kind?$15498$T@1Mj
              (annotation-expression g$x$16247$T@1Mj)
              g$p?$16248$T@1Mj)
            (g$p?$16248$T@1Mj g$x$16247$T@1Mj))))))
   (g$syntax-vector->list$15499$T@1Mj
     g$syntax-vector->list$19506$T@1Mj
     (case-lambda
       ((g$x$16249$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$16249$T@1Mj)
          ((case-lambda
             ((g$ls$16250$T@1Mj
                g$m*$16251$T@1Mj
                g$s*$16252$T@1Mj
                g$ae*$16253$T@1Mj)
              (g$map$11724$T@1Mj
                (case-lambda
                  ((g$x$16254$T@1Mj)
                   (g$mkstx$15495$T@1Mj
                     g$x$16254$T@1Mj
                     g$m*$16251$T@1Mj
                     g$s*$16252$T@1Mj
                     g$ae*$16253$T@1Mj)))
                g$ls$16250$T@1Mj)))
           (g$syntax-vector->list$15499$T@1Mj
             (g$stx-expr$15481$T@1Mj g$x$16249$T@1Mj))
           (g$stx-mark*$15482$T@1Mj g$x$16249$T@1Mj)
           (g$stx-subst*$15483$T@1Mj g$x$16249$T@1Mj)
           (g$stx-ae*$15484$T@1Mj g$x$16249$T@1Mj))
          (if (annotation? g$x$16249$T@1Mj)
            (g$syntax-vector->list$15499$T@1Mj
              (annotation-expression g$x$16249$T@1Mj))
            (if (g$vector?$12465$T@1Mj g$x$16249$T@1Mj)
              (vector->list g$x$16249$T@1Mj)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$16249$T@1Mj)))))))
   (g$syntax-pair?$15500$T@1Mj
     g$syntax-pair?$19507$T@1Mj
     (case-lambda
       ((g$x$16255$T@1Mj)
        (g$syntax-kind?$15498$T@1Mj g$x$16255$T@1Mj pair?))))
   (g$syntax-vector?$15501$T@1Mj
     g$syntax-vector?$19508$T@1Mj
     (case-lambda
       ((g$x$16256$T@1Mj)
        (g$syntax-kind?$15498$T@1Mj
          g$x$16256$T@1Mj
          g$vector?$12465$T@1Mj))))
   (g$syntax-null?$15502$T@1Mj
     g$syntax-null?$19509$T@1Mj
     (case-lambda
       ((g$x$16257$T@1Mj)
        (g$syntax-kind?$15498$T@1Mj g$x$16257$T@1Mj null?))))
   (g$syntax-list?$15503$T@1Mj
     g$syntax-list?$19510$T@1Mj
     (case-lambda
       ((g$x$16258$T@1Mj)
        ((case-lambda
           ((g$t$16259$T@1Mj)
            (if g$t$16259$T@1Mj
              g$t$16259$T@1Mj
              (begin
                '#f
                (if (g$syntax-pair?$15500$T@1Mj g$x$16258$T@1Mj)
                  (begin
                    '#f
                    (g$syntax-list?$15503$T@1Mj
                      (g$syntax-cdr$15505$T@1Mj g$x$16258$T@1Mj)))
                  '#f)))))
         (g$syntax-null?$15502$T@1Mj g$x$16258$T@1Mj)))))
   (g$syntax-car$15504$T@1Mj
     g$syntax-car$19511$T@1Mj
     (case-lambda
       ((g$x$16260$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$16260$T@1Mj)
          (g$mkstx$15495$T@1Mj
            (g$syntax-car$15504$T@1Mj
              (g$stx-expr$15481$T@1Mj g$x$16260$T@1Mj))
            (g$stx-mark*$15482$T@1Mj g$x$16260$T@1Mj)
            (g$stx-subst*$15483$T@1Mj g$x$16260$T@1Mj)
            (g$stx-ae*$15484$T@1Mj g$x$16260$T@1Mj))
          (if (annotation? g$x$16260$T@1Mj)
            (g$syntax-car$15504$T@1Mj
              (annotation-expression g$x$16260$T@1Mj))
            (if (pair? g$x$16260$T@1Mj)
              (car g$x$16260$T@1Mj)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$16260$T@1Mj)))))))
   (g$syntax-cdr$15505$T@1Mj
     g$syntax-cdr$19512$T@1Mj
     (case-lambda
       ((g$x$16261$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$16261$T@1Mj)
          (g$mkstx$15495$T@1Mj
            (g$syntax-cdr$15505$T@1Mj
              (g$stx-expr$15481$T@1Mj g$x$16261$T@1Mj))
            (g$stx-mark*$15482$T@1Mj g$x$16261$T@1Mj)
            (g$stx-subst*$15483$T@1Mj g$x$16261$T@1Mj)
            (g$stx-ae*$15484$T@1Mj g$x$16261$T@1Mj))
          (if (annotation? g$x$16261$T@1Mj)
            (g$syntax-cdr$15505$T@1Mj
              (annotation-expression g$x$16261$T@1Mj))
            (if (pair? g$x$16261$T@1Mj)
              (cdr g$x$16261$T@1Mj)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$16261$T@1Mj)))))))
   (g$syntax->list$15506$T@1Mj
     g$syntax->list$19513$T@1Mj
     (case-lambda
       ((g$x$16262$T@1Mj)
        (if (g$syntax-pair?$15500$T@1Mj g$x$16262$T@1Mj)
          (cons
            (g$syntax-car$15504$T@1Mj g$x$16262$T@1Mj)
            (g$syntax->list$15506$T@1Mj
              (g$syntax-cdr$15505$T@1Mj g$x$16262$T@1Mj)))
          (if (g$syntax-null?$15502$T@1Mj g$x$16262$T@1Mj)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$16262$T@1Mj))))))
   (g$id?$15507$T@1Mj
     g$id?$19514$T@1Mj
     (case-lambda
       ((g$x$16263$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$16263$T@1Mj)
          (begin
            '#f
            ((case-lambda
               ((g$expr$16264$T@1Mj)
                (g$symbol?$12467$T@1Mj
                  (if (annotation? g$expr$16264$T@1Mj)
                    (annotation-stripped g$expr$16264$T@1Mj)
                    g$expr$16264$T@1Mj))))
             (g$stx-expr$15481$T@1Mj g$x$16263$T@1Mj)))
          '#f))))
   (g$id->sym$15508$T@1Mj
     g$id->sym$19515$T@1Mj
     (case-lambda
       ((g$x$16265$T@1Mj)
        (begin
          (if (not (g$stx?$15479$T@1Mj g$x$16265$T@1Mj))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$16265$T@1Mj)
            (void))
          ((case-lambda
             ((g$expr$16266$T@1Mj)
              ((case-lambda
                 ((g$sym$16267$T@1Mj)
                  (if (g$symbol?$12467$T@1Mj g$sym$16267$T@1Mj)
                    g$sym$16267$T@1Mj
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$16265$T@1Mj))))
               (if (annotation? g$expr$16266$T@1Mj)
                 (annotation-stripped g$expr$16266$T@1Mj)
                 g$expr$16266$T@1Mj))))
           (g$stx-expr$15481$T@1Mj g$x$16265$T@1Mj))))))
   (g$same-marks?$15509$T@1Mj
     g$same-marks?$19516$T@1Mj
     (case-lambda
       ((g$x$16268$T@1Mj g$y$16269$T@1Mj)
        ((case-lambda
           ((g$t$16270$T@1Mj)
            (if g$t$16270$T@1Mj
              g$t$16270$T@1Mj
              (begin
                '#f
                (if (pair? g$x$16268$T@1Mj)
                  (if (pair? g$y$16269$T@1Mj)
                    (if (eq? (car g$x$16268$T@1Mj)
                             (car g$y$16269$T@1Mj))
                      (begin
                        '#f
                        (g$same-marks?$15509$T@1Mj
                          (cdr g$x$16268$T@1Mj)
                          (cdr g$y$16269$T@1Mj)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$16268$T@1Mj)
           (begin '#f (null? g$y$16269$T@1Mj))
           '#f)))))
   (g$bound-id=?$15510$T@1Mj
     g$bound-id=?$19517$T@1Mj
     (case-lambda
       ((g$x$16271$T@1Mj g$y$16272$T@1Mj)
        (if (eq? (g$id->sym$15508$T@1Mj g$x$16271$T@1Mj)
                 (g$id->sym$15508$T@1Mj g$y$16272$T@1Mj))
          (begin
            '#f
            (g$same-marks?$15509$T@1Mj
              (g$stx-mark*$15482$T@1Mj g$x$16271$T@1Mj)
              (g$stx-mark*$15482$T@1Mj g$y$16272$T@1Mj)))
          '#f))))
   (g$free-id=?$15511$T@1Mj
     g$free-id=?$19518$T@1Mj
     (case-lambda
       ((g$i$16273$T@1Mj g$j$16274$T@1Mj)
        ((case-lambda
           ((g$t0$16275$T@1Mj g$t1$16276$T@1Mj)
            (if ((case-lambda
                   ((g$t$16277$T@1Mj)
                    (if g$t$16277$T@1Mj
                      g$t$16277$T@1Mj
                      (begin '#f g$t1$16276$T@1Mj))))
                 g$t0$16275$T@1Mj)
              (eq? g$t0$16275$T@1Mj g$t1$16276$T@1Mj)
              (eq? (g$id->sym$15508$T@1Mj g$i$16273$T@1Mj)
                   (g$id->sym$15508$T@1Mj g$j$16274$T@1Mj)))))
         (g$id->real-label$15521$T@1Mj g$i$16273$T@1Mj)
         (g$id->real-label$15521$T@1Mj g$j$16274$T@1Mj)))))
   (g$valid-bound-ids?$15512$T@1Mj
     g$valid-bound-ids?$19519$T@1Mj
     (case-lambda
       ((g$id*$16278$T@1Mj)
        (if (g$for-all$11722$T@1Mj g$id?$15507$T@1Mj g$id*$16278$T@1Mj)
          (begin
            '#f
            (g$distinct-bound-ids?$15513$T@1Mj g$id*$16278$T@1Mj))
          '#f))))
   (g$distinct-bound-ids?$15513$T@1Mj
     g$distinct-bound-ids?$19520$T@1Mj
     (case-lambda
       ((g$id*$16279$T@1Mj)
        ((case-lambda
           ((g$t$16280$T@1Mj)
            (if g$t$16280$T@1Mj
              g$t$16280$T@1Mj
              (begin
                '#f
                (if (not (g$bound-id-member?$15514$T@1Mj
                           (car g$id*$16279$T@1Mj)
                           (cdr g$id*$16279$T@1Mj)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$15513$T@1Mj
                      (cdr g$id*$16279$T@1Mj)))
                  '#f)))))
         (null? g$id*$16279$T@1Mj)))))
   (g$bound-id-member?$15514$T@1Mj
     g$bound-id-member?$19521$T@1Mj
     (case-lambda
       ((g$id$16281$T@1Mj g$id*$16282$T@1Mj)
        (if (pair? g$id*$16282$T@1Mj)
          (begin
            '#f
            ((case-lambda
               ((g$t$16283$T@1Mj)
                (if g$t$16283$T@1Mj
                  g$t$16283$T@1Mj
                  (begin
                    '#f
                    (g$bound-id-member?$15514$T@1Mj
                      g$id$16281$T@1Mj
                      (cdr g$id*$16282$T@1Mj))))))
             (g$bound-id=?$15510$T@1Mj
               g$id$16281$T@1Mj
               (car g$id*$16282$T@1Mj))))
          '#f))))
   (g$self-evaluating?$15515$T@1Mj
     g$self-evaluating?$19522$T@1Mj
     (case-lambda
       ((g$x$16284$T@1Mj)
        ((case-lambda
           ((g$t$16285$T@1Mj)
            (if g$t$16285$T@1Mj
              g$t$16285$T@1Mj
              ((case-lambda
                 ((g$t$16286$T@1Mj)
                  (if g$t$16286$T@1Mj
                    g$t$16286$T@1Mj
                    ((case-lambda
                       ((g$t$16287$T@1Mj)
                        (if g$t$16287$T@1Mj
                          g$t$16287$T@1Mj
                          ((case-lambda
                             ((g$t$16288$T@1Mj)
                              (if g$t$16288$T@1Mj
                                g$t$16288$T@1Mj
                                (begin
                                  '#f
                                  (g$bytevector?$12466$T@1Mj
                                    g$x$16284$T@1Mj)))))
                           (g$boolean?$12468$T@1Mj g$x$16284$T@1Mj)))))
                     (g$char?$12464$T@1Mj g$x$16284$T@1Mj)))))
               (string? g$x$16284$T@1Mj)))))
         (number? g$x$16284$T@1Mj)))))
   (g$strip-annotations$15516$T@1Mj
     g$strip-annotations$19523$T@1Mj
     (case-lambda
       ((g$x$16289$T@1Mj)
        (if (pair? g$x$16289$T@1Mj)
          (cons
            (g$strip-annotations$15516$T@1Mj (car g$x$16289$T@1Mj))
            (g$strip-annotations$15516$T@1Mj (cdr g$x$16289$T@1Mj)))
          (if (g$vector?$12465$T@1Mj g$x$16289$T@1Mj)
            (g$vector-map$12528$T@1Mj
              g$strip-annotations$15516$T@1Mj
              g$x$16289$T@1Mj)
            (if (annotation? g$x$16289$T@1Mj)
              (annotation-stripped g$x$16289$T@1Mj)
              g$x$16289$T@1Mj))))))
   (g$strip$15517$T@1Mj
     g$strip$19524$T@1Mj
     (case-lambda
       ((g$x$16290$T@1Mj g$m*$16291$T@1Mj)
        (if (g$top-marked?$15441$T@1Mj g$m*$16291$T@1Mj)
          (if ((case-lambda
                 ((g$t$16292$T@1Mj)
                  (if g$t$16292$T@1Mj
                    g$t$16292$T@1Mj
                    ((case-lambda
                       ((g$t$16293$T@1Mj)
                        (if g$t$16293$T@1Mj
                          g$t$16293$T@1Mj
                          (begin
                            '#f
                            (if (g$vector?$12465$T@1Mj g$x$16290$T@1Mj)
                              (if (> (vector-length g$x$16290$T@1Mj) '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (vector-ref g$x$16290$T@1Mj '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$16290$T@1Mj)
                       (begin '#f (annotation? (car g$x$16290$T@1Mj)))
                       '#f)))))
               (annotation? g$x$16290$T@1Mj))
            (g$strip-annotations$15516$T@1Mj g$x$16290$T@1Mj)
            g$x$16290$T@1Mj)
          ((letrec ((g$f$16294$T@1Mj
                      (case-lambda
                        ((g$x$16295$T@1Mj)
                         (if (g$stx?$15479$T@1Mj g$x$16295$T@1Mj)
                           (g$strip$15517$T@1Mj
                             (g$stx-expr$15481$T@1Mj g$x$16295$T@1Mj)
                             (g$stx-mark*$15482$T@1Mj g$x$16295$T@1Mj))
                           (if (annotation? g$x$16295$T@1Mj)
                             (annotation-stripped g$x$16295$T@1Mj)
                             (if (pair? g$x$16295$T@1Mj)
                               ((case-lambda
                                  ((g$a$16296$T@1Mj g$d$16297$T@1Mj)
                                   (if (if (eq? g$a$16296$T@1Mj
                                                (car g$x$16295$T@1Mj))
                                         (begin
                                           '#f
                                           (eq? g$d$16297$T@1Mj
                                                (cdr g$x$16295$T@1Mj)))
                                         '#f)
                                     g$x$16295$T@1Mj
                                     (cons
                                       g$a$16296$T@1Mj
                                       g$d$16297$T@1Mj))))
                                (g$f$16294$T@1Mj (car g$x$16295$T@1Mj))
                                (g$f$16294$T@1Mj (cdr g$x$16295$T@1Mj)))
                               (if (g$vector?$12465$T@1Mj
                                     g$x$16295$T@1Mj)
                                 ((case-lambda
                                    ((g$old$16298$T@1Mj)
                                     ((case-lambda
                                        ((g$new$16299$T@1Mj)
                                         (if (g$for-all$11722$T@1Mj
                                               eq?
                                               g$old$16298$T@1Mj
                                               g$new$16299$T@1Mj)
                                           g$x$16295$T@1Mj
                                           (g$list->vector$12462$T@1Mj
                                             g$new$16299$T@1Mj))))
                                      (g$map$11724$T@1Mj
                                        g$f$16294$T@1Mj
                                        g$old$16298$T@1Mj))))
                                  (vector->list g$x$16295$T@1Mj))
                                 g$x$16295$T@1Mj))))))))
             g$f$16294$T@1Mj)
           g$x$16290$T@1Mj)))))
   (g$stx->datum$15518$T@1Mj
     g$stx->datum$19525$T@1Mj
     (case-lambda
       ((g$x$16300$T@1Mj) (g$strip$15517$T@1Mj g$x$16300$T@1Mj '()))))
   (g$same-marks*?$15519$T@1Mj
     g$same-marks*?$19526$T@1Mj
     (case-lambda
       ((g$mark*$16301$T@1Mj g$mark**$16302$T@1Mj g$si$16303$T@1Mj)
        (if (null? g$si$16303$T@1Mj)
          '#f
          (if (g$same-marks?$15509$T@1Mj
                g$mark*$16301$T@1Mj
                (vector-ref
                  g$mark**$16302$T@1Mj
                  (car g$si$16303$T@1Mj)))
            (car g$si$16303$T@1Mj)
            (g$same-marks*?$15519$T@1Mj
              g$mark*$16301$T@1Mj
              g$mark**$16302$T@1Mj
              (cdr g$si$16303$T@1Mj)))))))
   (g$id->label$15520$T@1Mj
     g$id->label$19527$T@1Mj
     (case-lambda
       ((g$id$16304$T@1Mj)
        ((case-lambda
           ((g$t$16305$T@1Mj)
            (if g$t$16305$T@1Mj
              g$t$16305$T@1Mj
              (begin
                '#f
                ((case-lambda
                   ((g$t$16306$T@1Mj)
                    (if g$t$16306$T@1Mj
                      ((case-lambda
                         ((g$env$16307$T@1Mj)
                          ((case-lambda
                             ((g$rib$16308$T@1Mj)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$15446$T@1Mj
                                     g$id$16304$T@1Mj
                                     g$rib$16308$T@1Mj
                                     '#f)))
                                (case-lambda
                                  ((g$lab$16311$T@1Mj
                                     g$_loc$16312$T@1Mj)
                                   ((case-lambda
                                      ((g$_loc$16313$T@1Mj
                                         g$lab$16314$T@1Mj)
                                       (begin
                                         (g$extend-rib!$15468$T@1Mj
                                           g$rib$16308$T@1Mj
                                           g$id$16304$T@1Mj
                                           g$lab$16314$T@1Mj
                                           '#t)
                                         g$lab$16314$T@1Mj)))
                                    g$_loc$16312$T@1Mj
                                    g$lab$16311$T@1Mj))))))
                           (g$interaction-env-rib$16090$T@1Mj
                             g$env$16307$T@1Mj))))
                       g$t$16306$T@1Mj)
                      '#f)))
                 (g$top-level-context$16132$T@1Mj))))))
         (g$id->real-label$15521$T@1Mj g$id$16304$T@1Mj)))))
   (g$id->real-label$15521$T@1Mj
     g$id->real-label$19528$T@1Mj
     (case-lambda
       ((g$id$16315$T@1Mj)
        ((case-lambda
           ((g$sym$16316$T@1Mj)
            ((letrec ((g$search$16317$T@1Mj
                        (case-lambda
                          ((g$subst*$16318$T@1Mj g$mark*$16319$T@1Mj)
                           (if (null? g$subst*$16318$T@1Mj)
                             '#f
                             (if (eq? (car g$subst*$16318$T@1Mj) 'shift)
                               (g$search$16317$T@1Mj
                                 (cdr g$subst*$16318$T@1Mj)
                                 (cdr g$mark*$16319$T@1Mj))
                               ((case-lambda
                                  ((g$rib$16320$T@1Mj)
                                   ((case-lambda
                                      ((g$t$16321$T@1Mj)
                                       (if g$t$16321$T@1Mj
                                         ((case-lambda
                                            ((g$ht$16322$T@1Mj)
                                             ((case-lambda
                                                ((g$si$16323$T@1Mj)
                                                 ((case-lambda
                                                    ((g$i$16324$T@1Mj)
                                                     (if g$i$16324$T@1Mj
                                                       (vector-ref
                                                         (g$rib-label*$15457$T@1Mj
                                                           g$rib$16320$T@1Mj)
                                                         g$i$16324$T@1Mj)
                                                       (g$search$16317$T@1Mj
                                                         (cdr g$subst*$16318$T@1Mj)
                                                         g$mark*$16319$T@1Mj))))
                                                  (if g$si$16323$T@1Mj
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$15519$T@1Mj
                                                        g$mark*$16319$T@1Mj
                                                        (g$rib-mark**$15456$T@1Mj
                                                          g$rib$16320$T@1Mj)
                                                        (g$reverse$12475$T@1Mj
                                                          g$si$16323$T@1Mj)))
                                                    '#f))))
                                              (g$hashtable-ref$12571$T@1Mj
                                                g$ht$16322$T@1Mj
                                                g$sym$16316$T@1Mj
                                                '#f))))
                                          g$t$16321$T@1Mj)
                                         ((case-lambda
                                            ((g$t$16325$T@1Mj)
                                             (if g$t$16325$T@1Mj
                                               g$t$16325$T@1Mj
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$16326$T@1Mj
                                                             (case-lambda
                                                               ((g$sym*$16327$T@1Mj
                                                                  g$mark**$16328$T@1Mj
                                                                  g$label*$16329$T@1Mj)
                                                                (if (null?
                                                                      g$sym*$16327$T@1Mj)
                                                                  (g$search$16317$T@1Mj
                                                                    (cdr g$subst*$16318$T@1Mj)
                                                                    g$mark*$16319$T@1Mj)
                                                                  (if (if (eq? (car g$sym*$16327$T@1Mj)
                                                                               g$sym$16316$T@1Mj)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$15509$T@1Mj
                                                                            (car g$mark**$16328$T@1Mj)
                                                                            g$mark*$16319$T@1Mj))
                                                                        '#f)
                                                                    (car g$label*$16329$T@1Mj)
                                                                    (g$f$16326$T@1Mj
                                                                      (cdr g$sym*$16327$T@1Mj)
                                                                      (cdr g$mark**$16328$T@1Mj)
                                                                      (cdr g$label*$16329$T@1Mj))))))))
                                                    g$f$16326$T@1Mj)
                                                  (g$rib-sym*$15455$T@1Mj
                                                    g$rib$16320$T@1Mj)
                                                  (g$rib-mark**$15456$T@1Mj
                                                    g$rib$16320$T@1Mj)
                                                  (g$rib-label*$15457$T@1Mj
                                                    g$rib$16320$T@1Mj))))))
                                          (g$find-label$15467$T@1Mj
                                            g$rib$16320$T@1Mj
                                            g$sym$16316$T@1Mj
                                            g$mark*$16319$T@1Mj)))))
                                    (g$rib-sealed/freq$15458$T@1Mj
                                      g$rib$16320$T@1Mj))))
                                (car g$subst*$16318$T@1Mj))))))))
               g$search$16317$T@1Mj)
             (g$stx-subst*$15483$T@1Mj g$id$16315$T@1Mj)
             (g$stx-mark*$15482$T@1Mj g$id$16315$T@1Mj))))
         (g$id->sym$15508$T@1Mj g$id$16315$T@1Mj)))))
   (g$label->binding$15522$T@1Mj
     g$label->binding$19529$T@1Mj
     (case-lambda
       ((g$x$16330$T@1Mj g$r$16331$T@1Mj)
        (if (not g$x$16330$T@1Mj)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$16332$T@1Mj)
              (if g$t$16332$T@1Mj
                ((case-lambda
                   ((g$b$16333$T@1Mj)
                    (if (if (pair? g$b$16333$T@1Mj)
                          (begin
                            '#f
                            (eq? (car g$b$16333$T@1Mj) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11724$T@1Mj
                          g$bless$15968$T@1Mj
                          (cdr g$b$16333$T@1Mj)))
                      (if (if (pair? g$b$16333$T@1Mj)
                            (begin
                              '#f
                              (eq? (car g$b$16333$T@1Mj) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$16334$T@1Mj g$loc$16335$T@1Mj)
                            (cons
                              '$rtd
                              (symbol-value g$loc$16335$T@1Mj))))
                         (g$cadr$12477$T@1Mj g$b$16333$T@1Mj)
                         (g$cddr$12479$T@1Mj g$b$16333$T@1Mj))
                        g$b$16333$T@1Mj))))
                 g$t$16332$T@1Mj)
                ((case-lambda
                   ((g$t$16336$T@1Mj)
                    (if g$t$16336$T@1Mj
                      (cdr g$t$16336$T@1Mj)
                      ((case-lambda
                         ((g$t$16337$T@1Mj)
                          (if g$t$16337$T@1Mj
                            ((case-lambda
                               ((g$env$16338$T@1Mj)
                                ((case-lambda
                                   ((g$t$16339$T@1Mj)
                                    (if g$t$16339$T@1Mj
                                      ((case-lambda
                                         ((g$p$16340$T@1Mj)
                                          (g$cons*$11726$T@1Mj
                                            'lexical
                                            (cdr g$p$16340$T@1Mj)
                                            '#f)))
                                       g$t$16339$T@1Mj)
                                      '(displaced-lexical . #f))))
                                 (g$assq$11712$T@1Mj
                                   g$x$16330$T@1Mj
                                   (g$interaction-env-locs$16092$T@1Mj
                                     g$env$16338$T@1Mj)))))
                             g$t$16337$T@1Mj)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$16132$T@1Mj)))))
                 (g$assq$11712$T@1Mj
                   g$x$16330$T@1Mj
                   g$r$16331$T@1Mj)))))
           (g$imported-label->binding$15212$T@1Mj g$x$16330$T@1Mj))))))
   (g$make-binding$15523$T@1Mj g$make-binding$19530$T@1Mj cons)
   (g$binding-type$15524$T@1Mj g$binding-type$19531$T@1Mj car)
   (g$binding-value$15525$T@1Mj g$binding-value$19532$T@1Mj cdr)
   (g$raise-unbound-error$15526$T@1Mj
     g$raise-unbound-error$19533$T@1Mj
     (case-lambda
       ((g$id$16341$T@1Mj)
        (g$syntax-violation*$16123$T@1Mj
          '#f
          '"unbound identifier"
          g$id$16341$T@1Mj
          (g$make-undefined-violation$13248$T@1Mj)))))
   (g$syntax-type$15527$T@1Mj
     g$syntax-type$19534$T@1Mj
     (case-lambda
       ((g$e$16342$T@1Mj g$r$16343$T@1Mj)
        (if (g$id?$15507$T@1Mj g$e$16342$T@1Mj)
          ((case-lambda
             ((g$id$16344$T@1Mj)
              ((case-lambda
                 ((g$label$16345$T@1Mj)
                  ((case-lambda
                     ((g$b$16346$T@1Mj)
                      ((case-lambda
                         ((g$type$16347$T@1Mj)
                          (begin
                            (if (not g$label$16345$T@1Mj)
                              (g$raise-unbound-error$15526$T@1Mj
                                g$id$16344$T@1Mj)
                              (void))
                            ((case-lambda
                               ((g$t$16348$T@1Mj)
                                (if (g$memv$11717$T@1Mj
                                      g$t$16348$T@1Mj
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$16347$T@1Mj
                                    (g$binding-value$15525$T@1Mj
                                      g$b$16346$T@1Mj)
                                    g$id$16344$T@1Mj)
                                  (values 'other '#f '#f))))
                             g$type$16347$T@1Mj))))
                       (g$binding-type$15524$T@1Mj g$b$16346$T@1Mj))))
                   (g$label->binding$15522$T@1Mj
                     g$label$16345$T@1Mj
                     g$r$16343$T@1Mj))))
               (g$id->label$15520$T@1Mj g$id$16344$T@1Mj))))
           g$e$16342$T@1Mj)
          (if (g$syntax-pair?$15500$T@1Mj g$e$16342$T@1Mj)
            ((case-lambda
               ((g$id$16349$T@1Mj)
                (if (g$id?$15507$T@1Mj g$id$16349$T@1Mj)
                  ((case-lambda
                     ((g$label$16350$T@1Mj)
                      ((case-lambda
                         ((g$b$16351$T@1Mj)
                          ((case-lambda
                             ((g$type$16352$T@1Mj)
                              (begin
                                (if (not g$label$16350$T@1Mj)
                                  (g$raise-unbound-error$15526$T@1Mj
                                    g$id$16349$T@1Mj)
                                  (void))
                                ((case-lambda
                                   ((g$t$16353$T@1Mj)
                                    (if (g$memv$11717$T@1Mj
                                          g$t$16353$T@1Mj
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$16352$T@1Mj
                                        (g$binding-value$15525$T@1Mj
                                          g$b$16351$T@1Mj)
                                        g$id$16349$T@1Mj)
                                      (values 'call '#f '#f))))
                                 g$type$16352$T@1Mj))))
                           (g$binding-type$15524$T@1Mj
                             g$b$16351$T@1Mj))))
                       (g$label->binding$15522$T@1Mj
                         g$label$16350$T@1Mj
                         g$r$16343$T@1Mj))))
                   (g$id->label$15520$T@1Mj g$id$16349$T@1Mj))
                  (values 'call '#f '#f))))
             (g$syntax-car$15504$T@1Mj g$e$16342$T@1Mj))
            ((case-lambda
               ((g$d$16354$T@1Mj)
                (if (g$self-evaluating?$15515$T@1Mj g$d$16354$T@1Mj)
                  (values 'constant g$d$16354$T@1Mj '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$15518$T@1Mj g$e$16342$T@1Mj)))))))
   (g$sanitize-binding$15550$T@1Mj
     g$sanitize-binding$19535$T@1Mj
     (case-lambda
       ((g$x$16355$T@1Mj g$src$16356$T@1Mj)
        (if (g$procedure?$12469$T@1Mj g$x$16355$T@1Mj)
          (g$cons*$11726$T@1Mj
            'local-macro
            g$x$16355$T@1Mj
            g$src$16356$T@1Mj)
          (if (if (pair? g$x$16355$T@1Mj)
                (if (eq? (car g$x$16355$T@1Mj) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12469$T@1Mj (cdr g$x$16355$T@1Mj)))
                  '#f)
                '#f)
            (g$cons*$11726$T@1Mj
              'local-macro!
              (cdr g$x$16355$T@1Mj)
              g$src$16356$T@1Mj)
            (if (if (pair? g$x$16355$T@1Mj)
                  (begin '#f (eq? (car g$x$16355$T@1Mj) '$rtd))
                  '#f)
              g$x$16355$T@1Mj
              (if (if (pair? g$x$16355$T@1Mj)
                    (begin '#f (eq? (car g$x$16355$T@1Mj) 'ctv))
                    '#f)
                (g$cons*$11726$T@1Mj
                  'local-ctv
                  (cdr g$x$16355$T@1Mj)
                  g$src$16356$T@1Mj)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$16355$T@1Mj))))))))
   (g$make-variable-transformer$15551$T@1Mj
     g$make-variable-transformer$19536$T@1Mj
     (case-lambda
       ((g$x$16357$T@1Mj)
        (if (g$procedure?$12469$T@1Mj g$x$16357$T@1Mj)
          (cons 'macro! g$x$16357$T@1Mj)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$16357$T@1Mj)))))
   (g$make-compile-time-value$15552$T@1Mj
     g$make-compile-time-value$19537$T@1Mj
     (case-lambda ((g$x$16358$T@1Mj) (cons 'ctv g$x$16358$T@1Mj))))
   (g$variable-transformer?$15553$T@1Mj
     g$variable-transformer?$19538$T@1Mj
     (case-lambda
       ((g$x$16359$T@1Mj)
        (if (pair? g$x$16359$T@1Mj)
          (if (eq? (car g$x$16359$T@1Mj) 'macro!)
            (begin '#f (g$procedure?$12469$T@1Mj (cdr g$x$16359$T@1Mj)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$15554$T@1Mj
     g$variable-transformer-procedure$19539$T@1Mj
     (case-lambda
       ((g$x$16360$T@1Mj)
        (if (g$variable-transformer?$15553$T@1Mj g$x$16360$T@1Mj)
          (cdr g$x$16360$T@1Mj)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$16360$T@1Mj)))))
   (g$make-eval-transformer$15555$T@1Mj
     g$make-eval-transformer$19540$T@1Mj
     (case-lambda
       ((g$x$16361$T@1Mj)
        (g$sanitize-binding$15550$T@1Mj
          (eval-core (g$expanded->core$14946$T@1Mj g$x$16361$T@1Mj))
          g$x$16361$T@1Mj))))
   (g$parse-define$15945$T@1Mj
     g$parse-define$19541$T@1Mj
     (case-lambda
       ((g$x$16362$T@1Mj)
        ((case-lambda
           ((g$t$16363$T@1Mj)
            ((case-lambda
               ((g$ls/false$16364$T@1Mj)
                (if (if g$ls/false$16364$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$16365$T@1Mj
                               g$fmls$16366$T@1Mj
                               g$b$16367$T@1Mj
                               g$b*$16368$T@1Mj)
                             (g$id?$15507$T@1Mj g$id$16365$T@1Mj)))
                          g$ls/false$16364$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$16369$T@1Mj
                         g$fmls$16370$T@1Mj
                         g$b$16371$T@1Mj
                         g$b*$16372$T@1Mj)
                       (begin
                         (g$verify-formals$16025$T@1Mj
                           g$fmls$16370$T@1Mj
                           g$x$16362$T@1Mj)
                         (values
                           g$id$16369$T@1Mj
                           (cons
                             'defun
                             (cons
                               g$fmls$16370$T@1Mj
                               (cons
                                 g$b$16371$T@1Mj
                                 g$b*$16372$T@1Mj)))))))
                    g$ls/false$16364$T@1Mj)
                  ((case-lambda
                     ((g$t$16373$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16374$T@1Mj)
                          (if (if g$ls/false$16374$T@1Mj
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$16375$T@1Mj
                                         g$val$16376$T@1Mj)
                                       (g$id?$15507$T@1Mj
                                         g$id$16375$T@1Mj)))
                                    g$ls/false$16374$T@1Mj))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$16377$T@1Mj g$val$16378$T@1Mj)
                                 (values
                                   g$id$16377$T@1Mj
                                   (cons 'expr g$val$16378$T@1Mj))))
                              g$ls/false$16374$T@1Mj)
                            ((case-lambda
                               ((g$t$16379$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$16380$T@1Mj)
                                    (if (if g$ls/false$16380$T@1Mj
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$16381$T@1Mj)
                                                 (g$id?$15507$T@1Mj
                                                   g$id$16381$T@1Mj)))
                                              g$ls/false$16380$T@1Mj))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$16382$T@1Mj)
                                           (values
                                             g$id$16382$T@1Mj
                                             (cons
                                               'expr
                                               (g$bless$15968$T@1Mj
                                                 '(void))))))
                                        g$ls/false$16380$T@1Mj)
                                      (g$syntax-violation$16124$T@1Mj
                                        '#f
                                        '"invalid syntax"
                                        g$t$16379$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$16379$T@1Mj
                                   '(_ any)))))
                             g$t$16373$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16373$T@1Mj
                         '(_ any any)))))
                   g$t$16363$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16363$T@1Mj
               '(_ (any . any) any . each-any)))))
         g$x$16362$T@1Mj))))
   (g$parse-define-syntax$15946$T@1Mj
     g$parse-define-syntax$19542$T@1Mj
     (case-lambda
       ((g$x$16383$T@1Mj)
        ((case-lambda
           ((g$t$16384$T@1Mj)
            ((case-lambda
               ((g$ls/false$16385$T@1Mj)
                (if (if g$ls/false$16385$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$16386$T@1Mj g$val$16387$T@1Mj)
                             (g$id?$15507$T@1Mj g$id$16386$T@1Mj)))
                          g$ls/false$16385$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$16388$T@1Mj g$val$16389$T@1Mj)
                       (values g$id$16388$T@1Mj g$val$16389$T@1Mj)))
                    g$ls/false$16385$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16384$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16384$T@1Mj
               '(_ any any)))))
         g$x$16383$T@1Mj))))
   (g$scheme-stx-hashtable$15947$T@1Mj
     g$scheme-stx-hashtable$19543$T@1Mj
     (g$make-eq-hashtable$12568$T@1Mj))
   (g$scheme-stx$15948$T@1Mj
     g$scheme-stx$19544$T@1Mj
     (case-lambda
       ((g$sym$16390$T@1Mj)
        ((case-lambda
           ((g$t$16391$T@1Mj)
            (if g$t$16391$T@1Mj
              g$t$16391$T@1Mj
              (begin
                '#f
                ((case-lambda
                   ((g$subst$16392$T@1Mj)
                    ((case-lambda
                       ((g$stx$16393$T@1Mj)
                        ((case-lambda
                           ((g$stx$16394$T@1Mj)
                            (begin
                              (g$hashtable-set!$12572$T@1Mj
                                g$scheme-stx-hashtable$15947$T@1Mj
                                g$sym$16390$T@1Mj
                                g$stx$16394$T@1Mj)
                              g$stx$16394$T@1Mj)))
                         ((case-lambda
                            ((g$t$16395$T@1Mj)
                             (if g$t$16395$T@1Mj
                               ((case-lambda
                                  ((g$x$16396$T@1Mj)
                                   ((case-lambda
                                      ((g$name$16397$T@1Mj
                                         g$label$16398$T@1Mj)
                                       (g$add-subst$15497$T@1Mj
                                         (g$make-rib$15454$T@1Mj
                                           (list g$name$16397$T@1Mj)
                                           (list
                                             g$top-mark*$15440$T@1Mj)
                                           (list g$label$16398$T@1Mj)
                                           '#f
                                           '#f)
                                         g$stx$16393$T@1Mj)))
                                    (car g$x$16396$T@1Mj)
                                    (cdr g$x$16396$T@1Mj))))
                                g$t$16395$T@1Mj)
                               g$stx$16393$T@1Mj)))
                          (g$assq$11712$T@1Mj
                            g$sym$16390$T@1Mj
                            g$subst$16392$T@1Mj)))))
                     (g$make-stx$15480$T@1Mj
                       g$sym$16390$T@1Mj
                       g$top-mark*$15440$T@1Mj
                       '()
                       '()))))
                 (g$library-subst$15170$T@1Mj
                   (g$find-library-by-name$15206$T@1Mj
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12571$T@1Mj
           g$scheme-stx-hashtable$15947$T@1Mj
           g$sym$16390$T@1Mj
           '#f)))))
   (g$lexical-var$15949$T@1Mj g$lexical-var$19545$T@1Mj car)
   (g$lexical-mutable?$15950$T@1Mj g$lexical-mutable?$19546$T@1Mj cdr)
   (g$set-lexical-mutable!$15951$T@1Mj
     g$set-lexical-mutable!$19547$T@1Mj
     set-cdr!)
   (g$add-lexical$15952$T@1Mj
     g$add-lexical$19548$T@1Mj
     (case-lambda
       ((g$lab$16399$T@1Mj g$lex$16400$T@1Mj g$r$16401$T@1Mj)
        (cons
          (g$cons*$11726$T@1Mj
            g$lab$16399$T@1Mj
            'lexical
            g$lex$16400$T@1Mj
            '#f)
          g$r$16401$T@1Mj))))
   (g$add-lexicals$15953$T@1Mj
     g$add-lexicals$19549$T@1Mj
     (case-lambda
       ((g$lab*$16402$T@1Mj g$lex*$16403$T@1Mj g$r$16404$T@1Mj)
        (if (null? g$lab*$16402$T@1Mj)
          g$r$16404$T@1Mj
          (g$add-lexicals$15953$T@1Mj
            (cdr g$lab*$16402$T@1Mj)
            (cdr g$lex*$16403$T@1Mj)
            (g$add-lexical$15952$T@1Mj
              (car g$lab*$16402$T@1Mj)
              (car g$lex*$16403$T@1Mj)
              g$r$16404$T@1Mj))))))
   (g$letrec-helper$15954$T@1Mj
     g$letrec-helper$19550$T@1Mj
     (case-lambda
       ((g$e$16405$T@1Mj
          g$r$16406$T@1Mj
          g$mr$16407$T@1Mj
          g$build$16408$T@1Mj)
        ((case-lambda
           ((g$t$16409$T@1Mj)
            ((case-lambda
               ((g$ls/false$16410$T@1Mj)
                (if g$ls/false$16410$T@1Mj
                  (apply
                    (case-lambda
                      ((g$lhs*$16411$T@1Mj
                         g$rhs*$16412$T@1Mj
                         g$b$16413$T@1Mj
                         g$b*$16414$T@1Mj)
                       (if (not (g$valid-bound-ids?$15512$T@1Mj
                                  g$lhs*$16411$T@1Mj))
                         (g$invalid-fmls-error$15970$T@1Mj
                           g$e$16405$T@1Mj
                           g$lhs*$16411$T@1Mj)
                         ((case-lambda
                            ((g$lex*$16415$T@1Mj g$lab*$16416$T@1Mj)
                             ((case-lambda
                                ((g$rib$16417$T@1Mj g$r$16418$T@1Mj)
                                 ((case-lambda
                                    ((g$body$16419$T@1Mj
                                       g$rhs*$16420$T@1Mj)
                                     (g$build$16408$T@1Mj
                                       '#f
                                       g$lex*$16415$T@1Mj
                                       g$rhs*$16420$T@1Mj
                                       g$body$16419$T@1Mj)))
                                  (g$chi-internal$16034$T@1Mj
                                    (g$add-subst$15497$T@1Mj
                                      g$rib$16417$T@1Mj
                                      (cons
                                        g$b$16413$T@1Mj
                                        g$b*$16414$T@1Mj))
                                    g$r$16418$T@1Mj
                                    g$mr$16407$T@1Mj)
                                  (g$chi-expr*$16021$T@1Mj
                                    (g$map$11724$T@1Mj
                                      (case-lambda
                                        ((g$x$16421$T@1Mj)
                                         (g$add-subst$15497$T@1Mj
                                           g$rib$16417$T@1Mj
                                           g$x$16421$T@1Mj)))
                                      g$rhs*$16412$T@1Mj)
                                    g$r$16418$T@1Mj
                                    g$mr$16407$T@1Mj))))
                              (g$make-full-rib$15473$T@1Mj
                                g$lhs*$16411$T@1Mj
                                g$lab*$16416$T@1Mj)
                              (g$add-lexicals$15953$T@1Mj
                                g$lab*$16416$T@1Mj
                                g$lex*$16415$T@1Mj
                                g$r$16406$T@1Mj))))
                          (g$map$11724$T@1Mj
                            g$gen-lexical$15442$T@1Mj
                            g$lhs*$16411$T@1Mj)
                          (g$map$11724$T@1Mj
                            g$gen-label$15444$T@1Mj
                            g$lhs*$16411$T@1Mj)))))
                    g$ls/false$16410$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16409$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16409$T@1Mj
               '(_ #(each (any any)) any . each-any)))))
         g$e$16405$T@1Mj))))
   (g$letrec-transformer$15955$T@1Mj
     g$letrec-transformer$19551$T@1Mj
     (case-lambda
       ((g$e$16422$T@1Mj g$r$16423$T@1Mj g$mr$16424$T@1Mj)
        (g$letrec-helper$15954$T@1Mj
          g$e$16422$T@1Mj
          g$r$16423$T@1Mj
          g$mr$16424$T@1Mj
          g$build-letrec$15434$T@1Mj))))
   (g$letrec*-transformer$15956$T@1Mj
     g$letrec*-transformer$19552$T@1Mj
     (case-lambda
       ((g$e$16425$T@1Mj g$r$16426$T@1Mj g$mr$16427$T@1Mj)
        (g$letrec-helper$15954$T@1Mj
          g$e$16425$T@1Mj
          g$r$16426$T@1Mj
          g$mr$16427$T@1Mj
          g$build-letrec*$15435$T@1Mj))))
   (g$fluid-let-syntax-transformer$15957$T@1Mj
     g$fluid-let-syntax-transformer$19553$T@1Mj
     (case-lambda
       ((g$e$16428$T@1Mj g$r$16429$T@1Mj g$mr$16430$T@1Mj)
        (letrec* ((g$lookup$16431$T@1Mj
                    (case-lambda
                      ((g$x$16441$T@1Mj)
                       ((case-lambda
                          ((g$t$16442$T@1Mj)
                           (if g$t$16442$T@1Mj
                             g$t$16442$T@1Mj
                             (begin
                               '#f
                               (g$syntax-violation$16124$T@1Mj
                                 '#f
                                 '"unbound identifier"
                                 g$e$16428$T@1Mj
                                 g$x$16441$T@1Mj)))))
                        (g$id->label$15520$T@1Mj g$x$16441$T@1Mj))))))
          ((case-lambda
             ((g$t$16432$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16433$T@1Mj)
                  (if g$ls/false$16433$T@1Mj
                    (apply
                      (case-lambda
                        ((g$lhs*$16434$T@1Mj
                           g$rhs*$16435$T@1Mj
                           g$b$16436$T@1Mj
                           g$b*$16437$T@1Mj)
                         (if (not (g$valid-bound-ids?$15512$T@1Mj
                                    g$lhs*$16434$T@1Mj))
                           (g$invalid-fmls-error$15970$T@1Mj
                             g$e$16428$T@1Mj
                             g$lhs*$16434$T@1Mj)
                           ((case-lambda
                              ((g$lab*$16438$T@1Mj g$rhs*$16439$T@1Mj)
                               (g$chi-internal$16034$T@1Mj
                                 (cons g$b$16436$T@1Mj g$b*$16437$T@1Mj)
                                 (append
                                   (g$map$11724$T@1Mj
                                     cons
                                     g$lab*$16438$T@1Mj
                                     g$rhs*$16439$T@1Mj)
                                   g$r$16429$T@1Mj)
                                 (append
                                   (g$map$11724$T@1Mj
                                     cons
                                     g$lab*$16438$T@1Mj
                                     g$rhs*$16439$T@1Mj)
                                   g$mr$16430$T@1Mj))))
                            (g$map$11724$T@1Mj
                              g$lookup$16431$T@1Mj
                              g$lhs*$16434$T@1Mj)
                            (g$map$11724$T@1Mj
                              (case-lambda
                                ((g$x$16440$T@1Mj)
                                 (g$make-eval-transformer$15555$T@1Mj
                                   (g$expand-transformer$16053$T@1Mj
                                     g$x$16440$T@1Mj
                                     g$mr$16430$T@1Mj))))
                              g$rhs*$16435$T@1Mj)))))
                      g$ls/false$16433$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$16432$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16432$T@1Mj
                 '(_ #(each (any any)) any . each-any)))))
           g$e$16428$T@1Mj)))))
   (g$type-descriptor-transformer$15958$T@1Mj
     g$type-descriptor-transformer$19554$T@1Mj
     (case-lambda
       ((g$e$16443$T@1Mj g$r$16444$T@1Mj g$mr$16445$T@1Mj)
        ((case-lambda
           ((g$t$16446$T@1Mj)
            ((case-lambda
               ((g$ls/false$16447$T@1Mj)
                (if (if g$ls/false$16447$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$16448$T@1Mj)
                             (g$id?$15507$T@1Mj g$id$16448$T@1Mj)))
                          g$ls/false$16447$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$16449$T@1Mj)
                       ((case-lambda
                          ((g$lab$16450$T@1Mj)
                           ((case-lambda
                              ((g$b$16451$T@1Mj)
                               ((case-lambda
                                  ((g$type$16452$T@1Mj)
                                   (begin
                                     (if (not g$lab$16450$T@1Mj)
                                       (g$raise-unbound-error$15526$T@1Mj
                                         g$id$16449$T@1Mj)
                                       (void))
                                     (if (not (if (eq? g$type$16452$T@1Mj
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$15525$T@1Mj
                                                           g$b$16451$T@1Mj))))
                                                '#f))
                                       (g$syntax-violation$16124$T@1Mj
                                         '#f
                                         '"not a record type"
                                         g$e$16443$T@1Mj)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$15525$T@1Mj
                                         g$b$16451$T@1Mj)))))
                                (g$binding-type$15524$T@1Mj
                                  g$b$16451$T@1Mj))))
                            (g$label->binding$15522$T@1Mj
                              g$lab$16450$T@1Mj
                              g$r$16444$T@1Mj))))
                        (g$id->label$15520$T@1Mj g$id$16449$T@1Mj))))
                    g$ls/false$16447$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16446$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16446$T@1Mj '(_ any)))))
         g$e$16443$T@1Mj))))
   (g$record-type-descriptor-transformer$15959$T@1Mj
     g$record-type-descriptor-transformer$19555$T@1Mj
     (case-lambda
       ((g$e$16453$T@1Mj g$r$16454$T@1Mj g$mr$16455$T@1Mj)
        ((case-lambda
           ((g$t$16456$T@1Mj)
            ((case-lambda
               ((g$ls/false$16457$T@1Mj)
                (if (if g$ls/false$16457$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$16458$T@1Mj)
                             (g$id?$15507$T@1Mj g$id$16458$T@1Mj)))
                          g$ls/false$16457$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$16459$T@1Mj)
                       ((case-lambda
                          ((g$lab$16460$T@1Mj)
                           ((case-lambda
                              ((g$b$16461$T@1Mj)
                               ((case-lambda
                                  ((g$type$16462$T@1Mj)
                                   (begin
                                     (if (not g$lab$16460$T@1Mj)
                                       (g$raise-unbound-error$15526$T@1Mj
                                         g$id$16459$T@1Mj)
                                       (void))
                                     (if (not (if (eq? g$type$16462$T@1Mj
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$15525$T@1Mj
                                                      g$b$16461$T@1Mj)))
                                                '#f))
                                       (g$syntax-violation$16124$T@1Mj
                                         '#f
                                         '"not a record type"
                                         g$e$16453$T@1Mj)
                                       (void))
                                     (g$chi-expr$16023$T@1Mj
                                       (car (g$binding-value$15525$T@1Mj
                                              g$b$16461$T@1Mj))
                                       g$r$16454$T@1Mj
                                       g$mr$16455$T@1Mj))))
                                (g$binding-type$15524$T@1Mj
                                  g$b$16461$T@1Mj))))
                            (g$label->binding$15522$T@1Mj
                              g$lab$16460$T@1Mj
                              g$r$16454$T@1Mj))))
                        (g$id->label$15520$T@1Mj g$id$16459$T@1Mj))))
                    g$ls/false$16457$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16456$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16456$T@1Mj '(_ any)))))
         g$e$16453$T@1Mj))))
   (g$record-constructor-descriptor-transformer$15960$T@1Mj
     g$record-constructor-descriptor-transformer$19556$T@1Mj
     (case-lambda
       ((g$e$16463$T@1Mj g$r$16464$T@1Mj g$mr$16465$T@1Mj)
        ((case-lambda
           ((g$t$16466$T@1Mj)
            ((case-lambda
               ((g$ls/false$16467$T@1Mj)
                (if (if g$ls/false$16467$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$16468$T@1Mj)
                             (g$id?$15507$T@1Mj g$id$16468$T@1Mj)))
                          g$ls/false$16467$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$16469$T@1Mj)
                       ((case-lambda
                          ((g$lab$16470$T@1Mj)
                           ((case-lambda
                              ((g$b$16471$T@1Mj)
                               ((case-lambda
                                  ((g$type$16472$T@1Mj)
                                   (begin
                                     (if (not g$lab$16470$T@1Mj)
                                       (g$raise-unbound-error$15526$T@1Mj
                                         g$id$16469$T@1Mj)
                                       (void))
                                     (if (not (if (eq? g$type$16472$T@1Mj
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$15525$T@1Mj
                                                      g$b$16471$T@1Mj)))
                                                '#f))
                                       (g$syntax-violation$16124$T@1Mj
                                         '#f
                                         '"invalid type"
                                         g$e$16463$T@1Mj)
                                       (void))
                                     (g$chi-expr$16023$T@1Mj
                                       (g$cadr$12477$T@1Mj
                                         (g$binding-value$15525$T@1Mj
                                           g$b$16471$T@1Mj))
                                       g$r$16464$T@1Mj
                                       g$mr$16465$T@1Mj))))
                                (g$binding-type$15524$T@1Mj
                                  g$b$16471$T@1Mj))))
                            (g$label->binding$15522$T@1Mj
                              g$lab$16470$T@1Mj
                              g$r$16464$T@1Mj))))
                        (g$id->label$15520$T@1Mj g$id$16469$T@1Mj))))
                    g$ls/false$16467$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16466$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16466$T@1Mj '(_ any)))))
         g$e$16463$T@1Mj))))
   (g$when-macro$15961$T@1Mj
     g$when-macro$19557$T@1Mj
     (case-lambda
       ((g$e$16473$T@1Mj)
        ((case-lambda
           ((g$t$16474$T@1Mj)
            ((case-lambda
               ((g$ls/false$16475$T@1Mj)
                (if g$ls/false$16475$T@1Mj
                  (apply
                    (case-lambda
                      ((g$test$16476$T@1Mj
                         g$e$16477$T@1Mj
                         g$e*$16478$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (list
                           'if
                           g$test$16476$T@1Mj
                           (cons
                             'begin
                             (cons
                               g$e$16477$T@1Mj
                               g$e*$16478$T@1Mj))))))
                    g$ls/false$16475$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16474$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16474$T@1Mj
               '(_ any any . each-any)))))
         g$e$16473$T@1Mj))))
   (g$unless-macro$15962$T@1Mj
     g$unless-macro$19558$T@1Mj
     (case-lambda
       ((g$e$16479$T@1Mj)
        ((case-lambda
           ((g$t$16480$T@1Mj)
            ((case-lambda
               ((g$ls/false$16481$T@1Mj)
                (if g$ls/false$16481$T@1Mj
                  (apply
                    (case-lambda
                      ((g$test$16482$T@1Mj
                         g$e$16483$T@1Mj
                         g$e*$16484$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (list
                           'if
                           (list 'not g$test$16482$T@1Mj)
                           (cons
                             'begin
                             (cons
                               g$e$16483$T@1Mj
                               g$e*$16484$T@1Mj))))))
                    g$ls/false$16481$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16480$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16480$T@1Mj
               '(_ any any . each-any)))))
         g$e$16479$T@1Mj))))
   (g$if-transformer$15963$T@1Mj
     g$if-transformer$19559$T@1Mj
     (case-lambda
       ((g$e$16485$T@1Mj g$r$16486$T@1Mj g$mr$16487$T@1Mj)
        ((case-lambda
           ((g$t$16488$T@1Mj)
            ((case-lambda
               ((g$ls/false$16489$T@1Mj)
                (if g$ls/false$16489$T@1Mj
                  (apply
                    (case-lambda
                      ((g$e0$16490$T@1Mj
                         g$e1$16491$T@1Mj
                         g$e2$16492$T@1Mj)
                       (list
                         'if
                         (g$chi-expr$16023$T@1Mj
                           g$e0$16490$T@1Mj
                           g$r$16486$T@1Mj
                           g$mr$16487$T@1Mj)
                         (g$chi-expr$16023$T@1Mj
                           g$e1$16491$T@1Mj
                           g$r$16486$T@1Mj
                           g$mr$16487$T@1Mj)
                         (g$chi-expr$16023$T@1Mj
                           g$e2$16492$T@1Mj
                           g$r$16486$T@1Mj
                           g$mr$16487$T@1Mj))))
                    g$ls/false$16489$T@1Mj)
                  ((case-lambda
                     ((g$t$16493$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16494$T@1Mj)
                          (if g$ls/false$16494$T@1Mj
                            (apply
                              (case-lambda
                                ((g$e0$16495$T@1Mj g$e1$16496$T@1Mj)
                                 (list
                                   'if
                                   (g$chi-expr$16023$T@1Mj
                                     g$e0$16495$T@1Mj
                                     g$r$16486$T@1Mj
                                     g$mr$16487$T@1Mj)
                                   (g$chi-expr$16023$T@1Mj
                                     g$e1$16496$T@1Mj
                                     g$r$16486$T@1Mj
                                     g$mr$16487$T@1Mj)
                                   (g$build-void$15433$T@1Mj))))
                              g$ls/false$16494$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16493$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16493$T@1Mj
                         '(_ any any)))))
                   g$t$16488$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16488$T@1Mj
               '(_ any any any)))))
         g$e$16485$T@1Mj))))
   (g$case-macro$15964$T@1Mj
     g$case-macro$19560$T@1Mj
     (case-lambda
       ((g$e$16497$T@1Mj)
        (letrec* ((g$build-last$16498$T@1Mj
                    (case-lambda
                      ((g$cls$16518$T@1Mj)
                       ((case-lambda
                          ((g$t$16519$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$16520$T@1Mj)
                               (if g$ls/false$16520$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$e$16521$T@1Mj g$e*$16522$T@1Mj)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$16521$T@1Mj
                                          g$e*$16522$T@1Mj))))
                                   g$ls/false$16520$T@1Mj)
                                 ((case-lambda
                                    ((g$t$16523$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$16524$T@1Mj)
                                         (if g$ls/false$16524$T@1Mj
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$16499$T@1Mj
                                                  g$cls$16518$T@1Mj
                                                  '(if #f #f))))
                                             g$ls/false$16524$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$16523$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$16523$T@1Mj
                                        '_))))
                                  g$t$16519$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$16519$T@1Mj
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$16518$T@1Mj))))
                  (g$build-one$16499$T@1Mj
                    (case-lambda
                      ((g$cls$16511$T@1Mj g$k$16512$T@1Mj)
                       ((case-lambda
                          ((g$t$16513$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$16514$T@1Mj)
                               (if g$ls/false$16514$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$d*$16515$T@1Mj
                                        g$e$16516$T@1Mj
                                        g$e*$16517$T@1Mj)
                                      (if (= '1
                                             (length g$d*$16515$T@1Mj))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$16515$T@1Mj)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$16516$T@1Mj
                                              g$e*$16517$T@1Mj))
                                          g$k$16512$T@1Mj)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$16515$T@1Mj))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$16516$T@1Mj
                                              g$e*$16517$T@1Mj))
                                          g$k$16512$T@1Mj))))
                                   g$ls/false$16514$T@1Mj)
                                 (g$syntax-violation$16124$T@1Mj
                                   '#f
                                   '"invalid syntax"
                                   g$t$16513$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$16513$T@1Mj
                              '(each-any any . each-any)))))
                        g$cls$16511$T@1Mj)))))
          ((case-lambda
             ((g$t$16500$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16501$T@1Mj)
                  (if g$ls/false$16501$T@1Mj
                    (apply
                      (case-lambda
                        ((g$expr$16502$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$16502$T@1Mj))
                               '((if #f #f)))))))
                      g$ls/false$16501$T@1Mj)
                    ((case-lambda
                       ((g$t$16503$T@1Mj)
                        ((case-lambda
                           ((g$ls/false$16504$T@1Mj)
                            (if g$ls/false$16504$T@1Mj
                              (apply
                                (case-lambda
                                  ((g$expr$16505$T@1Mj
                                     g$cls$16506$T@1Mj
                                     g$cls*$16507$T@1Mj)
                                   (g$bless$15968$T@1Mj
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$16505$T@1Mj))
                                       ((letrec ((g$f$16508$T@1Mj
                                                   (case-lambda
                                                     ((g$cls$16509$T@1Mj
                                                        g$cls*$16510$T@1Mj)
                                                      (if (null?
                                                            g$cls*$16510$T@1Mj)
                                                        (g$build-last$16498$T@1Mj
                                                          g$cls$16509$T@1Mj)
                                                        (g$build-one$16499$T@1Mj
                                                          g$cls$16509$T@1Mj
                                                          (g$f$16508$T@1Mj
                                                            (car g$cls*$16510$T@1Mj)
                                                            (cdr g$cls*$16510$T@1Mj))))))))
                                          g$f$16508$T@1Mj)
                                        g$cls$16506$T@1Mj
                                        g$cls*$16507$T@1Mj)))))
                                g$ls/false$16504$T@1Mj)
                              (g$syntax-violation$16124$T@1Mj
                                '#f
                                '"invalid syntax"
                                g$t$16503$T@1Mj))))
                         (g$syntax-dispatch$16005$T@1Mj
                           g$t$16503$T@1Mj
                           '(_ any any . each-any)))))
                     g$t$16500$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16500$T@1Mj
                 '(_ any)))))
           g$e$16497$T@1Mj)))))
   (g$quote-transformer$15965$T@1Mj
     g$quote-transformer$19561$T@1Mj
     (case-lambda
       ((g$e$16525$T@1Mj g$r$16526$T@1Mj g$mr$16527$T@1Mj)
        ((case-lambda
           ((g$t$16528$T@1Mj)
            ((case-lambda
               ((g$ls/false$16529$T@1Mj)
                (if g$ls/false$16529$T@1Mj
                  (apply
                    (case-lambda
                      ((g$datum$16530$T@1Mj)
                       (list
                         'quote
                         (g$stx->datum$15518$T@1Mj
                           g$datum$16530$T@1Mj))))
                    g$ls/false$16529$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16528$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16528$T@1Mj '(_ any)))))
         g$e$16525$T@1Mj))))
   (g$case-lambda-transformer$15966$T@1Mj
     g$case-lambda-transformer$19562$T@1Mj
     (case-lambda
       ((g$e$16531$T@1Mj g$r$16532$T@1Mj g$mr$16533$T@1Mj)
        ((case-lambda
           ((g$t$16534$T@1Mj)
            ((case-lambda
               ((g$ls/false$16535$T@1Mj)
                (if g$ls/false$16535$T@1Mj
                  (apply
                    (case-lambda
                      ((g$fmls*$16536$T@1Mj
                         g$b*$16537$T@1Mj
                         g$b**$16538$T@1Mj)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$16027$T@1Mj
                              g$e$16531$T@1Mj
                              g$fmls*$16536$T@1Mj
                              (g$map$11724$T@1Mj
                                cons
                                g$b*$16537$T@1Mj
                                g$b**$16538$T@1Mj)
                              g$r$16532$T@1Mj
                              g$mr$16533$T@1Mj)))
                         (case-lambda
                           ((g$fmls*$16541$T@1Mj g$body*$16542$T@1Mj)
                            ((case-lambda
                               ((g$body*$16543$T@1Mj
                                  g$fmls*$16544$T@1Mj)
                                (g$build-case-lambda$15430$T@1Mj
                                  '#f
                                  g$fmls*$16544$T@1Mj
                                  g$body*$16543$T@1Mj)))
                             g$body*$16542$T@1Mj
                             g$fmls*$16541$T@1Mj))))))
                    g$ls/false$16535$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16534$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16534$T@1Mj
               '(_ . #(each (any any . each-any)))))))
         g$e$16531$T@1Mj))))
   (g$lambda-transformer$15967$T@1Mj
     g$lambda-transformer$19563$T@1Mj
     (case-lambda
       ((g$e$16545$T@1Mj g$r$16546$T@1Mj g$mr$16547$T@1Mj)
        ((case-lambda
           ((g$t$16548$T@1Mj)
            ((case-lambda
               ((g$ls/false$16549$T@1Mj)
                (if g$ls/false$16549$T@1Mj
                  (apply
                    (case-lambda
                      ((g$fmls$16550$T@1Mj
                         g$b$16551$T@1Mj
                         g$b*$16552$T@1Mj)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$16026$T@1Mj
                              g$e$16545$T@1Mj
                              g$fmls$16550$T@1Mj
                              (cons g$b$16551$T@1Mj g$b*$16552$T@1Mj)
                              g$r$16546$T@1Mj
                              g$mr$16547$T@1Mj)))
                         (case-lambda
                           ((g$fmls$16555$T@1Mj g$body$16556$T@1Mj)
                            ((case-lambda
                               ((g$body$16557$T@1Mj g$fmls$16558$T@1Mj)
                                (g$build-lambda$15429$T@1Mj
                                  '#f
                                  g$fmls$16558$T@1Mj
                                  g$body$16557$T@1Mj)))
                             g$body$16556$T@1Mj
                             g$fmls$16555$T@1Mj))))))
                    g$ls/false$16549$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16548$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16548$T@1Mj
               '(_ any any . each-any)))))
         g$e$16545$T@1Mj))))
   (g$bless$15968$T@1Mj
     g$bless$19564$T@1Mj
     (case-lambda
       ((g$x$16559$T@1Mj)
        (g$mkstx$15495$T@1Mj
          ((letrec ((g$f$16560$T@1Mj
                      (case-lambda
                        ((g$x$16561$T@1Mj)
                         (if (g$stx?$15479$T@1Mj g$x$16561$T@1Mj)
                           g$x$16561$T@1Mj
                           (if (pair? g$x$16561$T@1Mj)
                             (cons
                               (g$f$16560$T@1Mj (car g$x$16561$T@1Mj))
                               (g$f$16560$T@1Mj (cdr g$x$16561$T@1Mj)))
                             (if (g$symbol?$12467$T@1Mj g$x$16561$T@1Mj)
                               (g$scheme-stx$15948$T@1Mj
                                 g$x$16561$T@1Mj)
                               (if (g$vector?$12465$T@1Mj
                                     g$x$16561$T@1Mj)
                                 (g$vector-map$12528$T@1Mj
                                   g$f$16560$T@1Mj
                                   g$x$16561$T@1Mj)
                                 g$x$16561$T@1Mj))))))))
             g$f$16560$T@1Mj)
           g$x$16559$T@1Mj)
          '()
          '()
          '()))))
   (g$with-syntax-macro$15969$T@1Mj
     g$with-syntax-macro$19565$T@1Mj
     (case-lambda
       ((g$e$16562$T@1Mj)
        ((case-lambda
           ((g$t$16563$T@1Mj)
            ((case-lambda
               ((g$ls/false$16564$T@1Mj)
                (if g$ls/false$16564$T@1Mj
                  (apply
                    (case-lambda
                      ((g$pat*$16565$T@1Mj
                         g$expr*$16566$T@1Mj
                         g$b$16567$T@1Mj
                         g$b*$16568$T@1Mj)
                       ((case-lambda
                          ((g$idn*$16569$T@1Mj)
                           (begin
                             (g$verify-formals$16025$T@1Mj
                               (g$map$11724$T@1Mj
                                 car
                                 g$idn*$16569$T@1Mj)
                               g$e$16562$T@1Mj)
                             ((case-lambda
                                ((g$t*$16570$T@1Mj)
                                 (g$bless$15968$T@1Mj
                                   (list
                                     'let
                                     (g$map$11724$T@1Mj
                                       list
                                       g$t*$16570$T@1Mj
                                       g$expr*$16566$T@1Mj)
                                     ((letrec ((g$f$16571$T@1Mj
                                                 (case-lambda
                                                   ((g$pat*$16572$T@1Mj
                                                      g$t*$16573$T@1Mj)
                                                    (if (null?
                                                          g$pat*$16572$T@1Mj)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$16567$T@1Mj
                                                            g$b*$16568$T@1Mj)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$16573$T@1Mj)
                                                        '()
                                                        (list
                                                          (car g$pat*$16572$T@1Mj)
                                                          (g$f$16571$T@1Mj
                                                            (cdr g$pat*$16572$T@1Mj)
                                                            (cdr g$t*$16573$T@1Mj)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$16572$T@1Mj))
                                                            (car g$t*$16573$T@1Mj)))))))))
                                        g$f$16571$T@1Mj)
                                      g$pat*$16565$T@1Mj
                                      g$t*$16570$T@1Mj)))))
                              (g$generate-temporaries$16114$T@1Mj
                                g$expr*$16566$T@1Mj)))))
                        ((letrec ((g$f$16574$T@1Mj
                                    (case-lambda
                                      ((g$pat*$16575$T@1Mj)
                                       (if (null? g$pat*$16575$T@1Mj)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$16004$T@1Mj
                                                (car g$pat*$16575$T@1Mj)
                                                '())))
                                           (case-lambda
                                             ((g$pat$16578$T@1Mj
                                                g$idn*$16579$T@1Mj)
                                              ((case-lambda
                                                 ((g$idn*$16580$T@1Mj
                                                    g$pat$16581$T@1Mj)
                                                  (append
                                                    g$idn*$16580$T@1Mj
                                                    (g$f$16574$T@1Mj
                                                      (cdr g$pat*$16575$T@1Mj)))))
                                               g$idn*$16579$T@1Mj
                                               g$pat$16578$T@1Mj)))))))))
                           g$f$16574$T@1Mj)
                         g$pat*$16565$T@1Mj))))
                    g$ls/false$16564$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16563$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16563$T@1Mj
               '(_ #(each (any any)) any . each-any)))))
         g$e$16562$T@1Mj))))
   (g$invalid-fmls-error$15970$T@1Mj
     g$invalid-fmls-error$19566$T@1Mj
     (case-lambda
       ((g$stx$16582$T@1Mj g$fmls$16583$T@1Mj)
        ((case-lambda
           ((g$t$16584$T@1Mj)
            ((case-lambda
               ((g$ls/false$16585$T@1Mj)
                (if g$ls/false$16585$T@1Mj
                  (apply
                    (case-lambda
                      ((g$id*$16586$T@1Mj g$last$16587$T@1Mj)
                       ((letrec ((g$f$16588$T@1Mj
                                   (case-lambda
                                     ((g$id*$16589$T@1Mj)
                                      (if (null? g$id*$16589$T@1Mj)
                                        (values)
                                        (if (not (g$id?$15507$T@1Mj
                                                   (car g$id*$16589$T@1Mj)))
                                          (g$syntax-violation$16124$T@1Mj
                                            '#f
                                            '"not an identifier"
                                            g$stx$16582$T@1Mj
                                            (car g$id*$16589$T@1Mj))
                                          (begin
                                            (g$f$16588$T@1Mj
                                              (cdr g$id*$16589$T@1Mj))
                                            (if (g$bound-id-member?$15514$T@1Mj
                                                  (car g$id*$16589$T@1Mj)
                                                  (cdr g$id*$16589$T@1Mj))
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"duplicate binding"
                                                g$stx$16582$T@1Mj
                                                (car g$id*$16589$T@1Mj))
                                              (void)))))))))
                          g$f$16588$T@1Mj)
                        (if (g$id?$15507$T@1Mj g$last$16587$T@1Mj)
                          (cons g$last$16587$T@1Mj g$id*$16586$T@1Mj)
                          (if (g$syntax-null?$15502$T@1Mj
                                g$last$16587$T@1Mj)
                            g$id*$16586$T@1Mj
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"not an identifier"
                              g$stx$16582$T@1Mj
                              g$last$16587$T@1Mj))))))
                    g$ls/false$16585$T@1Mj)
                  ((case-lambda
                     ((g$t$16590$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16591$T@1Mj)
                          (if g$ls/false$16591$T@1Mj
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$16124$T@1Mj
                                   '#f
                                   '"malformed binding form"
                                   g$stx$16582$T@1Mj
                                   g$fmls$16583$T@1Mj)))
                              g$ls/false$16591$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16590$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16590$T@1Mj
                         '_))))
                   g$t$16584$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16584$T@1Mj
               '#(each+ any () any)))))
         g$fmls$16583$T@1Mj))))
   (g$let-macro$15971$T@1Mj
     g$let-macro$19567$T@1Mj
     (case-lambda
       ((g$stx$16592$T@1Mj)
        ((case-lambda
           ((g$t$16593$T@1Mj)
            ((case-lambda
               ((g$ls/false$16594$T@1Mj)
                (if g$ls/false$16594$T@1Mj
                  (apply
                    (case-lambda
                      ((g$lhs*$16595$T@1Mj
                         g$rhs*$16596$T@1Mj
                         g$b$16597$T@1Mj
                         g$b*$16598$T@1Mj)
                       (if (g$valid-bound-ids?$15512$T@1Mj
                             g$lhs*$16595$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$16595$T@1Mj
                                 (cons
                                   g$b$16597$T@1Mj
                                   g$b*$16598$T@1Mj)))
                             g$rhs*$16596$T@1Mj))
                         (g$invalid-fmls-error$15970$T@1Mj
                           g$stx$16592$T@1Mj
                           g$lhs*$16595$T@1Mj))))
                    g$ls/false$16594$T@1Mj)
                  ((case-lambda
                     ((g$t$16599$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16600$T@1Mj)
                          (if (if g$ls/false$16600$T@1Mj
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$16601$T@1Mj
                                         g$lhs*$16602$T@1Mj
                                         g$rhs*$16603$T@1Mj
                                         g$b$16604$T@1Mj
                                         g$b*$16605$T@1Mj)
                                       (g$id?$15507$T@1Mj
                                         g$f$16601$T@1Mj)))
                                    g$ls/false$16600$T@1Mj))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$16606$T@1Mj
                                   g$lhs*$16607$T@1Mj
                                   g$rhs*$16608$T@1Mj
                                   g$b$16609$T@1Mj
                                   g$b*$16610$T@1Mj)
                                 (if (g$valid-bound-ids?$15512$T@1Mj
                                       g$lhs*$16607$T@1Mj)
                                   (g$bless$15968$T@1Mj
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$16606$T@1Mj
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$16607$T@1Mj
                                                 (cons
                                                   g$b$16609$T@1Mj
                                                   g$b*$16610$T@1Mj)))))
                                         g$f$16606$T@1Mj)
                                       g$rhs*$16608$T@1Mj))
                                   (g$invalid-fmls-error$15970$T@1Mj
                                     g$stx$16592$T@1Mj
                                     g$lhs*$16607$T@1Mj))))
                              g$ls/false$16600$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16599$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16599$T@1Mj
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$16593$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16593$T@1Mj
               '(_ #(each (any any)) any . each-any)))))
         g$stx$16592$T@1Mj))))
   (g$let-values-macro$15972$T@1Mj
     g$let-values-macro$19568$T@1Mj
     (case-lambda
       ((g$stx$16611$T@1Mj)
        (letrec* ((g$rename$16612$T@1Mj
                    (case-lambda
                      ((g$x$16663$T@1Mj
                         g$old*$16664$T@1Mj
                         g$new*$16665$T@1Mj)
                       (begin
                         (if (not (g$id?$15507$T@1Mj g$x$16663$T@1Mj))
                           (g$syntax-violation$16124$T@1Mj
                             '#f
                             '"not an indentifier"
                             g$stx$16611$T@1Mj
                             g$x$16663$T@1Mj)
                           (void))
                         (if (g$bound-id-member?$15514$T@1Mj
                               g$x$16663$T@1Mj
                               g$old*$16664$T@1Mj)
                           (g$syntax-violation$16124$T@1Mj
                             '#f
                             '"duplicate binding"
                             g$stx$16611$T@1Mj
                             g$x$16663$T@1Mj)
                           (void))
                         ((case-lambda
                            ((g$y$16666$T@1Mj)
                             (values
                               g$y$16666$T@1Mj
                               (cons g$x$16663$T@1Mj g$old*$16664$T@1Mj)
                               (cons
                                 g$y$16666$T@1Mj
                                 g$new*$16665$T@1Mj))))
                          (gensym
                            (g$syntax->datum$16127$T@1Mj
                              g$x$16663$T@1Mj)))))))
                  (g$rename*$16613$T@1Mj
                    (case-lambda
                      ((g$x*$16654$T@1Mj
                         g$old*$16655$T@1Mj
                         g$new*$16656$T@1Mj)
                       (if (null? g$x*$16654$T@1Mj)
                         (values
                           '()
                           g$old*$16655$T@1Mj
                           g$new*$16656$T@1Mj)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$16612$T@1Mj
                                (car g$x*$16654$T@1Mj)
                                g$old*$16655$T@1Mj
                                g$new*$16656$T@1Mj)))
                           (case-lambda
                             ((g$x$16657$T@1Mj
                                g$old*$16658$T@1Mj
                                g$new*$16659$T@1Mj)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$16613$T@1Mj
                                     (cdr g$x*$16654$T@1Mj)
                                     g$old*$16658$T@1Mj
                                     g$new*$16659$T@1Mj)))
                                (case-lambda
                                  ((g$x*$16660$T@1Mj
                                     g$old*$16661$T@1Mj
                                     g$new*$16662$T@1Mj)
                                   (values
                                     (cons
                                       g$x$16657$T@1Mj
                                       g$x*$16660$T@1Mj)
                                     g$old*$16661$T@1Mj
                                     g$new*$16662$T@1Mj))))))))))))
          ((case-lambda
             ((g$t$16614$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16615$T@1Mj)
                  (if g$ls/false$16615$T@1Mj
                    (apply
                      (case-lambda
                        ((g$b$16616$T@1Mj g$b*$16617$T@1Mj)
                         (g$cons*$11726$T@1Mj
                           (g$bless$15968$T@1Mj 'let)
                           '()
                           g$b$16616$T@1Mj
                           g$b*$16617$T@1Mj)))
                      g$ls/false$16615$T@1Mj)
                    ((case-lambda
                       ((g$t$16618$T@1Mj)
                        ((case-lambda
                           ((g$ls/false$16619$T@1Mj)
                            (if g$ls/false$16619$T@1Mj
                              (apply
                                (case-lambda
                                  ((g$lhs*$16620$T@1Mj
                                     g$rhs*$16621$T@1Mj
                                     g$b$16622$T@1Mj
                                     g$b*$16623$T@1Mj)
                                   (g$bless$15968$T@1Mj
                                     ((letrec ((g$f$16624$T@1Mj
                                                 (case-lambda
                                                   ((g$lhs*$16625$T@1Mj
                                                      g$rhs*$16626$T@1Mj
                                                      g$old*$16627$T@1Mj
                                                      g$new*$16628$T@1Mj)
                                                    (if (null?
                                                          g$lhs*$16625$T@1Mj)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11724$T@1Mj
                                                            list
                                                            g$old*$16627$T@1Mj
                                                            g$new*$16628$T@1Mj)
                                                          (cons
                                                            g$b$16622$T@1Mj
                                                            g$b*$16623$T@1Mj)))
                                                      ((case-lambda
                                                         ((g$t$16629$T@1Mj)
                                                          ((case-lambda
                                                             ((g$ls/false$16630$T@1Mj)
                                                              (if g$ls/false$16630$T@1Mj
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$16631$T@1Mj)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$16613$T@1Mj
                                                                            g$x*$16631$T@1Mj
                                                                            g$old*$16627$T@1Mj
                                                                            g$new*$16628$T@1Mj)))
                                                                       (case-lambda
                                                                         ((g$y*$16635$T@1Mj
                                                                            g$old*$16636$T@1Mj
                                                                            g$new*$16637$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$new*$16638$T@1Mj
                                                                                g$old*$16639$T@1Mj
                                                                                g$y*$16640$T@1Mj)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$16626$T@1Mj))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$16640$T@1Mj
                                                                                  (g$f$16624$T@1Mj
                                                                                    (cdr g$lhs*$16625$T@1Mj)
                                                                                    (cdr g$rhs*$16626$T@1Mj)
                                                                                    g$old*$16639$T@1Mj
                                                                                    g$new*$16638$T@1Mj)))))
                                                                           g$new*$16637$T@1Mj
                                                                           g$old*$16636$T@1Mj
                                                                           g$y*$16635$T@1Mj))))))
                                                                  g$ls/false$16630$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$t$16641$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$16642$T@1Mj)
                                                                        (if g$ls/false$16642$T@1Mj
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$16643$T@1Mj
                                                                                 g$x$16644$T@1Mj)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$16612$T@1Mj
                                                                                      g$x$16644$T@1Mj
                                                                                      g$old*$16627$T@1Mj
                                                                                      g$new*$16628$T@1Mj)))
                                                                                 (case-lambda
                                                                                   ((g$y$16645$T@1Mj
                                                                                      g$old*$16646$T@1Mj
                                                                                      g$new*$16647$T@1Mj)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$16613$T@1Mj
                                                                                           g$x*$16643$T@1Mj
                                                                                           g$old*$16646$T@1Mj
                                                                                           g$new*$16647$T@1Mj)))
                                                                                      (case-lambda
                                                                                        ((g$y*$16648$T@1Mj
                                                                                           g$old*$16649$T@1Mj
                                                                                           g$new*$16650$T@1Mj)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$16626$T@1Mj))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$16648$T@1Mj
                                                                                               g$y$16645$T@1Mj)
                                                                                             (g$f$16624$T@1Mj
                                                                                               (cdr g$lhs*$16625$T@1Mj)
                                                                                               (cdr g$rhs*$16626$T@1Mj)
                                                                                               g$old*$16649$T@1Mj
                                                                                               g$new*$16650$T@1Mj)))))))))))
                                                                            g$ls/false$16642$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$16651$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$16652$T@1Mj)
                                                                                  (if g$ls/false$16652$T@1Mj
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$16653$T@1Mj)
                                                                                         (g$syntax-violation$16124$T@1Mj
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$16611$T@1Mj
                                                                                           g$others$16653$T@1Mj)))
                                                                                      g$ls/false$16652$T@1Mj)
                                                                                    (g$syntax-violation$16124$T@1Mj
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$16651$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$16651$T@1Mj
                                                                                 'any))))
                                                                           g$t$16641$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$16641$T@1Mj
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$16629$T@1Mj))))
                                                           (g$syntax-dispatch$16005$T@1Mj
                                                             g$t$16629$T@1Mj
                                                             'each-any))))
                                                       (car g$lhs*$16625$T@1Mj)))))))
                                        g$f$16624$T@1Mj)
                                      g$lhs*$16620$T@1Mj
                                      g$rhs*$16621$T@1Mj
                                      '()
                                      '()))))
                                g$ls/false$16619$T@1Mj)
                              (g$syntax-violation$16124$T@1Mj
                                '#f
                                '"invalid syntax"
                                g$t$16618$T@1Mj))))
                         (g$syntax-dispatch$16005$T@1Mj
                           g$t$16618$T@1Mj
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$16614$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16614$T@1Mj
                 '(_ () any . each-any)))))
           g$stx$16611$T@1Mj)))))
   (g$let*-values-macro$15973$T@1Mj
     g$let*-values-macro$19569$T@1Mj
     (case-lambda
       ((g$stx$16667$T@1Mj)
        (letrec* ((g$check$16668$T@1Mj
                    (case-lambda
                      ((g$x*$16692$T@1Mj)
                       (if (not (null? g$x*$16692$T@1Mj))
                         ((case-lambda
                            ((g$x$16693$T@1Mj)
                             (begin
                               (if (not (g$id?$15507$T@1Mj
                                          g$x$16693$T@1Mj))
                                 (g$syntax-violation$16124$T@1Mj
                                   '#f
                                   '"not an identifier"
                                   g$stx$16667$T@1Mj
                                   g$x$16693$T@1Mj)
                                 (void))
                               (g$check$16668$T@1Mj
                                 (cdr g$x*$16692$T@1Mj))
                               (if (g$bound-id-member?$15514$T@1Mj
                                     g$x$16693$T@1Mj
                                     (cdr g$x*$16692$T@1Mj))
                                 (g$syntax-violation$16124$T@1Mj
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$16667$T@1Mj
                                   g$x$16693$T@1Mj)
                                 (void)))))
                          (car g$x*$16692$T@1Mj))
                         (void))))))
          ((case-lambda
             ((g$t$16669$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16670$T@1Mj)
                  (if g$ls/false$16670$T@1Mj
                    (apply
                      (case-lambda
                        ((g$b$16671$T@1Mj g$b*$16672$T@1Mj)
                         (g$cons*$11726$T@1Mj
                           (g$bless$15968$T@1Mj 'let)
                           '()
                           g$b$16671$T@1Mj
                           g$b*$16672$T@1Mj)))
                      g$ls/false$16670$T@1Mj)
                    ((case-lambda
                       ((g$t$16673$T@1Mj)
                        ((case-lambda
                           ((g$ls/false$16674$T@1Mj)
                            (if g$ls/false$16674$T@1Mj
                              (apply
                                (case-lambda
                                  ((g$lhs*$16675$T@1Mj
                                     g$rhs*$16676$T@1Mj
                                     g$b$16677$T@1Mj
                                     g$b*$16678$T@1Mj)
                                   (g$bless$15968$T@1Mj
                                     ((letrec ((g$f$16679$T@1Mj
                                                 (case-lambda
                                                   ((g$lhs*$16680$T@1Mj
                                                      g$rhs*$16681$T@1Mj)
                                                    (if (null?
                                                          g$lhs*$16680$T@1Mj)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$16677$T@1Mj
                                                          g$b*$16678$T@1Mj))
                                                      ((case-lambda
                                                         ((g$t$16682$T@1Mj)
                                                          ((case-lambda
                                                             ((g$ls/false$16683$T@1Mj)
                                                              (if g$ls/false$16683$T@1Mj
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$16684$T@1Mj)
                                                                     (begin
                                                                       (g$check$16668$T@1Mj
                                                                         g$x*$16684$T@1Mj)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$16681$T@1Mj))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$16684$T@1Mj
                                                                           (g$f$16679$T@1Mj
                                                                             (cdr g$lhs*$16680$T@1Mj)
                                                                             (cdr g$rhs*$16681$T@1Mj)))))))
                                                                  g$ls/false$16683$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$t$16685$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$16686$T@1Mj)
                                                                        (if g$ls/false$16686$T@1Mj
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$16687$T@1Mj
                                                                                 g$x$16688$T@1Mj)
                                                                               (begin
                                                                                 (g$check$16668$T@1Mj
                                                                                   (cons
                                                                                     g$x$16688$T@1Mj
                                                                                     g$x*$16687$T@1Mj))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$16681$T@1Mj))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$16687$T@1Mj
                                                                                       g$x$16688$T@1Mj)
                                                                                     (g$f$16679$T@1Mj
                                                                                       (cdr g$lhs*$16680$T@1Mj)
                                                                                       (cdr g$rhs*$16681$T@1Mj)))))))
                                                                            g$ls/false$16686$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$16689$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$16690$T@1Mj)
                                                                                  (if g$ls/false$16690$T@1Mj
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$16691$T@1Mj)
                                                                                         (g$syntax-violation$16124$T@1Mj
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$16667$T@1Mj
                                                                                           g$others$16691$T@1Mj)))
                                                                                      g$ls/false$16690$T@1Mj)
                                                                                    (g$syntax-violation$16124$T@1Mj
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$16689$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$16689$T@1Mj
                                                                                 'any))))
                                                                           g$t$16685$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$16685$T@1Mj
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$16682$T@1Mj))))
                                                           (g$syntax-dispatch$16005$T@1Mj
                                                             g$t$16682$T@1Mj
                                                             'each-any))))
                                                       (car g$lhs*$16680$T@1Mj)))))))
                                        g$f$16679$T@1Mj)
                                      g$lhs*$16675$T@1Mj
                                      g$rhs*$16676$T@1Mj))))
                                g$ls/false$16674$T@1Mj)
                              (g$syntax-violation$16124$T@1Mj
                                '#f
                                '"invalid syntax"
                                g$t$16673$T@1Mj))))
                         (g$syntax-dispatch$16005$T@1Mj
                           g$t$16673$T@1Mj
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$16669$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16669$T@1Mj
                 '(_ () any . each-any)))))
           g$stx$16667$T@1Mj)))))
   (g$trace-lambda-macro$15974$T@1Mj
     g$trace-lambda-macro$19570$T@1Mj
     (case-lambda
       ((g$stx$16694$T@1Mj)
        ((case-lambda
           ((g$t$16695$T@1Mj)
            ((case-lambda
               ((g$ls/false$16696$T@1Mj)
                (if g$ls/false$16696$T@1Mj
                  (apply
                    (case-lambda
                      ((g$who$16697$T@1Mj
                         g$fmls$16698$T@1Mj
                         g$b$16699$T@1Mj
                         g$b*$16700$T@1Mj)
                       (if (g$valid-bound-ids?$15512$T@1Mj
                             g$fmls$16698$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$16697$T@1Mj)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$16698$T@1Mj
                                 (cons
                                   g$b$16699$T@1Mj
                                   g$b*$16700$T@1Mj)))))
                         (g$invalid-fmls-error$15970$T@1Mj
                           g$stx$16694$T@1Mj
                           g$fmls$16698$T@1Mj))))
                    g$ls/false$16696$T@1Mj)
                  ((case-lambda
                     ((g$t$16701$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16702$T@1Mj)
                          (if g$ls/false$16702$T@1Mj
                            (apply
                              (case-lambda
                                ((g$who$16703$T@1Mj
                                   g$fmls$16704$T@1Mj
                                   g$last$16705$T@1Mj
                                   g$b$16706$T@1Mj
                                   g$b*$16707$T@1Mj)
                                 (if (g$valid-bound-ids?$15512$T@1Mj
                                       (cons
                                         g$last$16705$T@1Mj
                                         g$fmls$16704$T@1Mj))
                                   (g$bless$15968$T@1Mj
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$16703$T@1Mj)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$16704$T@1Mj
                                             g$last$16705$T@1Mj)
                                           (cons
                                             g$b$16706$T@1Mj
                                             g$b*$16707$T@1Mj)))))
                                   (g$invalid-fmls-error$15970$T@1Mj
                                     g$stx$16694$T@1Mj
                                     (append
                                       g$fmls$16704$T@1Mj
                                       g$last$16705$T@1Mj)))))
                              g$ls/false$16702$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16701$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16701$T@1Mj
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$16695$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16695$T@1Mj
               '(_ any each-any any . each-any)))))
         g$stx$16694$T@1Mj))))
   (g$trace-define-macro$15975$T@1Mj
     g$trace-define-macro$19571$T@1Mj
     (case-lambda
       ((g$stx$16708$T@1Mj)
        ((case-lambda
           ((g$t$16709$T@1Mj)
            ((case-lambda
               ((g$ls/false$16710$T@1Mj)
                (if g$ls/false$16710$T@1Mj
                  (apply
                    (case-lambda
                      ((g$who$16711$T@1Mj
                         g$fmls$16712$T@1Mj
                         g$b$16713$T@1Mj
                         g$b*$16714$T@1Mj)
                       (if (g$valid-bound-ids?$15512$T@1Mj
                             g$fmls$16712$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (list
                             'define
                             g$who$16711$T@1Mj
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$16711$T@1Mj)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$16712$T@1Mj
                                   (cons
                                     g$b$16713$T@1Mj
                                     g$b*$16714$T@1Mj))))))
                         (g$invalid-fmls-error$15970$T@1Mj
                           g$stx$16708$T@1Mj
                           g$fmls$16712$T@1Mj))))
                    g$ls/false$16710$T@1Mj)
                  ((case-lambda
                     ((g$t$16715$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16716$T@1Mj)
                          (if g$ls/false$16716$T@1Mj
                            (apply
                              (case-lambda
                                ((g$who$16717$T@1Mj
                                   g$fmls$16718$T@1Mj
                                   g$last$16719$T@1Mj
                                   g$b$16720$T@1Mj
                                   g$b*$16721$T@1Mj)
                                 (if (g$valid-bound-ids?$15512$T@1Mj
                                       (cons
                                         g$last$16719$T@1Mj
                                         g$fmls$16718$T@1Mj))
                                   (g$bless$15968$T@1Mj
                                     (list
                                       'define
                                       g$who$16717$T@1Mj
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$16717$T@1Mj)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$16718$T@1Mj
                                               g$last$16719$T@1Mj)
                                             (cons
                                               g$b$16720$T@1Mj
                                               g$b*$16721$T@1Mj))))))
                                   (g$invalid-fmls-error$15970$T@1Mj
                                     g$stx$16708$T@1Mj
                                     (append
                                       g$fmls$16718$T@1Mj
                                       g$last$16719$T@1Mj)))))
                              g$ls/false$16716$T@1Mj)
                            ((case-lambda
                               ((g$t$16722$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$16723$T@1Mj)
                                    (if g$ls/false$16723$T@1Mj
                                      (apply
                                        (case-lambda
                                          ((g$who$16724$T@1Mj
                                             g$expr$16725$T@1Mj)
                                           (if (g$id?$15507$T@1Mj
                                                 g$who$16724$T@1Mj)
                                             (g$bless$15968$T@1Mj
                                               (list
                                                 'define
                                                 g$who$16724$T@1Mj
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$16725$T@1Mj))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$16724$T@1Mj)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$16124$T@1Mj
                                               '#f
                                               '"invalid name"
                                               g$stx$16708$T@1Mj))))
                                        g$ls/false$16723$T@1Mj)
                                      (g$syntax-violation$16124$T@1Mj
                                        '#f
                                        '"invalid syntax"
                                        g$t$16722$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$16722$T@1Mj
                                   '(_ any any)))))
                             g$t$16715$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16715$T@1Mj
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$16709$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16709$T@1Mj
               '(_ (any . each-any) any . each-any)))))
         g$stx$16708$T@1Mj))))
   (g$trace-define-syntax-macro$15976$T@1Mj
     g$trace-define-syntax-macro$19572$T@1Mj
     (case-lambda
       ((g$stx$16726$T@1Mj)
        ((case-lambda
           ((g$t$16727$T@1Mj)
            ((case-lambda
               ((g$ls/false$16728$T@1Mj)
                (if g$ls/false$16728$T@1Mj
                  (apply
                    (case-lambda
                      ((g$who$16729$T@1Mj g$expr$16730$T@1Mj)
                       (if (g$id?$15507$T@1Mj g$who$16729$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (list
                             'define-syntax
                             g$who$16729$T@1Mj
                             (list
                               'make-traced-macro
                               (list 'quote g$who$16729$T@1Mj)
                               g$expr$16730$T@1Mj)))
                         (g$syntax-violation$16124$T@1Mj
                           '#f
                           '"invalid name"
                           g$stx$16726$T@1Mj))))
                    g$ls/false$16728$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16727$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16727$T@1Mj
               '(_ any any)))))
         g$stx$16726$T@1Mj))))
   (g$trace-let/rec-syntax$15977$T@1Mj
     g$trace-let/rec-syntax$19573$T@1Mj
     (case-lambda
       ((g$who$16731$T@1Mj)
        (case-lambda
          ((g$stx$16732$T@1Mj)
           ((case-lambda
              ((g$t$16733$T@1Mj)
               ((case-lambda
                  ((g$ls/false$16734$T@1Mj)
                   (if g$ls/false$16734$T@1Mj
                     (apply
                       (case-lambda
                         ((g$lhs*$16735$T@1Mj
                            g$rhs*$16736$T@1Mj
                            g$b$16737$T@1Mj
                            g$b*$16738$T@1Mj)
                          (if (g$valid-bound-ids?$15512$T@1Mj
                                g$lhs*$16735$T@1Mj)
                            ((case-lambda
                               ((g$rhs*$16739$T@1Mj)
                                (g$bless$15968$T@1Mj
                                  (cons
                                    g$who$16731$T@1Mj
                                    (cons
                                      (g$map$11724$T@1Mj
                                        list
                                        g$lhs*$16735$T@1Mj
                                        g$rhs*$16739$T@1Mj)
                                      (cons
                                        g$b$16737$T@1Mj
                                        g$b*$16738$T@1Mj))))))
                             (g$map$11724$T@1Mj
                               (case-lambda
                                 ((g$lhs$16740$T@1Mj g$rhs$16741$T@1Mj)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$16740$T@1Mj)
                                    g$rhs$16741$T@1Mj)))
                               g$lhs*$16735$T@1Mj
                               g$rhs*$16736$T@1Mj))
                            (g$invalid-fmls-error$15970$T@1Mj
                              g$stx$16732$T@1Mj
                              g$lhs*$16735$T@1Mj))))
                       g$ls/false$16734$T@1Mj)
                     (g$syntax-violation$16124$T@1Mj
                       '#f
                       '"invalid syntax"
                       g$t$16733$T@1Mj))))
                (g$syntax-dispatch$16005$T@1Mj
                  g$t$16733$T@1Mj
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$16732$T@1Mj))))))
   (g$trace-let-syntax-macro$15978$T@1Mj
     g$trace-let-syntax-macro$19574$T@1Mj
     (g$trace-let/rec-syntax$15977$T@1Mj 'let-syntax))
   (g$trace-letrec-syntax-macro$15979$T@1Mj
     g$trace-letrec-syntax-macro$19575$T@1Mj
     (g$trace-let/rec-syntax$15977$T@1Mj 'letrec-syntax))
   (g$guard-macro$15980$T@1Mj
     g$guard-macro$19576$T@1Mj
     (case-lambda
       ((g$x$16742$T@1Mj)
        (letrec* ((g$gen-clauses$16743$T@1Mj
                    (case-lambda
                      ((g$con$16755$T@1Mj
                         g$outerk$16756$T@1Mj
                         g$clause*$16757$T@1Mj)
                       (letrec* ((g$f$16758$T@1Mj
                                   (case-lambda
                                     ((g$x$16786$T@1Mj g$k$16787$T@1Mj)
                                      ((case-lambda
                                         ((g$t$16788$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$16789$T@1Mj)
                                              (if g$ls/false$16789$T@1Mj
                                                (apply
                                                  (case-lambda
                                                    ((g$e$16790$T@1Mj
                                                       g$p$16791$T@1Mj)
                                                     ((case-lambda
                                                        ((g$t$16792$T@1Mj)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$16792$T@1Mj
                                                               g$e$16790$T@1Mj))
                                                           (list
                                                             'if
                                                             g$t$16792$T@1Mj
                                                             (list
                                                               g$p$16791$T@1Mj
                                                               g$t$16792$T@1Mj)
                                                             g$k$16787$T@1Mj))))
                                                      (gensym))))
                                                  g$ls/false$16789$T@1Mj)
                                                ((case-lambda
                                                   ((g$t$16793$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$16794$T@1Mj)
                                                        (if g$ls/false$16794$T@1Mj
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$16795$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$t$16796$T@1Mj)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$16796$T@1Mj
                                                                         g$e$16795$T@1Mj))
                                                                     (list
                                                                       'if
                                                                       g$t$16796$T@1Mj
                                                                       g$t$16796$T@1Mj
                                                                       g$k$16787$T@1Mj))))
                                                                (gensym))))
                                                            g$ls/false$16794$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$16797$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$16798$T@1Mj)
                                                                  (if g$ls/false$16798$T@1Mj
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$16799$T@1Mj
                                                                           g$v$16800$T@1Mj
                                                                           g$v*$16801$T@1Mj)
                                                                         (list
                                                                           'if
                                                                           g$e$16799$T@1Mj
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$16800$T@1Mj
                                                                               g$v*$16801$T@1Mj))
                                                                           g$k$16787$T@1Mj)))
                                                                      g$ls/false$16798$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$t$16802$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ls/false$16803$T@1Mj)
                                                                            (if g$ls/false$16803$T@1Mj
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$16124$T@1Mj
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$16786$T@1Mj)))
                                                                                g$ls/false$16803$T@1Mj)
                                                                              (g$syntax-violation$16124$T@1Mj
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$16802$T@1Mj))))
                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                           g$t$16802$T@1Mj
                                                                           '_))))
                                                                     g$t$16797$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$16797$T@1Mj
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$16793$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$16793$T@1Mj
                                                       '(any)))))
                                                 g$t$16788$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$16788$T@1Mj
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$16786$T@1Mj))))
                                 (g$f*$16759$T@1Mj
                                   (case-lambda
                                     ((g$x*$16766$T@1Mj)
                                      ((case-lambda
                                         ((g$t$16767$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$16768$T@1Mj)
                                              (if g$ls/false$16768$T@1Mj
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$16755$T@1Mj)
                                                       '#t)))
                                                  g$ls/false$16768$T@1Mj)
                                                ((case-lambda
                                                   ((g$t$16769$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$16770$T@1Mj)
                                                        (if g$ls/false$16770$T@1Mj
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$16771$T@1Mj
                                                                 g$e*$16772$T@1Mj)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$16771$T@1Mj
                                                                     g$e*$16772$T@1Mj))
                                                                 '#f)))
                                                            g$ls/false$16770$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$16773$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$16774$T@1Mj)
                                                                  (if g$ls/false$16774$T@1Mj
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$16775$T@1Mj
                                                                           g$cls*$16776$T@1Mj)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$16759$T@1Mj
                                                                                g$cls*$16776$T@1Mj)))
                                                                           (case-lambda
                                                                             ((g$e$16779$T@1Mj
                                                                                g$g$16780$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$g$16781$T@1Mj
                                                                                    g$e$16782$T@1Mj)
                                                                                  (values
                                                                                    (g$f$16758$T@1Mj
                                                                                      g$cls$16775$T@1Mj
                                                                                      g$e$16782$T@1Mj)
                                                                                    g$g$16781$T@1Mj)))
                                                                               g$g$16780$T@1Mj
                                                                               g$e$16779$T@1Mj))))))
                                                                      g$ls/false$16774$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$t$16783$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ls/false$16784$T@1Mj)
                                                                            (if g$ls/false$16784$T@1Mj
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$16785$T@1Mj)
                                                                                   (g$syntax-violation$16124$T@1Mj
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$16785$T@1Mj)))
                                                                                g$ls/false$16784$T@1Mj)
                                                                              (g$syntax-violation$16124$T@1Mj
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$16783$T@1Mj))))
                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                           g$t$16783$T@1Mj
                                                                           'any))))
                                                                     g$t$16773$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$16773$T@1Mj
                                                                 '(any .
                                                                       any)))))
                                                           g$t$16769$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$16769$T@1Mj
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$16767$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$16767$T@1Mj
                                             '()))))
                                       g$x*$16766$T@1Mj)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$16759$T@1Mj g$clause*$16757$T@1Mj)))
                           (case-lambda
                             ((g$code$16762$T@1Mj g$raisek$16763$T@1Mj)
                              ((case-lambda
                                 ((g$raisek$16764$T@1Mj
                                    g$code$16765$T@1Mj)
                                  (if g$raisek$16764$T@1Mj
                                    (list
                                      g$outerk$16756$T@1Mj
                                      g$code$16765$T@1Mj)
                                    g$code$16765$T@1Mj)))
                               g$raisek$16763$T@1Mj
                               g$code$16762$T@1Mj)))))))))
          ((case-lambda
             ((g$t$16744$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16745$T@1Mj)
                  (if (if g$ls/false$16745$T@1Mj
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$16746$T@1Mj
                                 g$clause*$16747$T@1Mj
                                 g$b$16748$T@1Mj
                                 g$b*$16749$T@1Mj)
                               (g$id?$15507$T@1Mj g$con$16746$T@1Mj)))
                            g$ls/false$16745$T@1Mj))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$16750$T@1Mj
                           g$clause*$16751$T@1Mj
                           g$b$16752$T@1Mj
                           g$b*$16753$T@1Mj)
                         ((case-lambda
                            ((g$outerk$16754$T@1Mj)
                             (g$bless$15968$T@1Mj
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$16754$T@1Mj)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$16750$T@1Mj)
                                           (g$gen-clauses$16743$T@1Mj
                                             g$con$16750$T@1Mj
                                             g$outerk$16754$T@1Mj
                                             g$clause*$16751$T@1Mj))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$16752$T@1Mj
                                                 g$b*$16753$T@1Mj))))))))))))
                          (gensym))))
                      g$ls/false$16745$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$16744$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16744$T@1Mj
                 '(_ (any . each-any) any . each-any)))))
           g$x$16742$T@1Mj)))))
   (g$define-enumeration-macro$15981$T@1Mj
     g$define-enumeration-macro$19577$T@1Mj
     (case-lambda
       ((g$stx$16804$T@1Mj)
        (letrec* ((g$set?$16805$T@1Mj
                    (case-lambda
                      ((g$x$16818$T@1Mj)
                       ((case-lambda
                          ((g$t$16819$T@1Mj)
                           (if g$t$16819$T@1Mj
                             g$t$16819$T@1Mj
                             (begin
                               '#f
                               (if (not (g$memq$11716$T@1Mj
                                          (car g$x$16818$T@1Mj)
                                          (cdr g$x$16818$T@1Mj)))
                                 (begin
                                   '#f
                                   (g$set?$16805$T@1Mj
                                     (cdr g$x$16818$T@1Mj)))
                                 '#f)))))
                        (null? g$x$16818$T@1Mj)))))
                  (g$remove-dups$16806$T@1Mj
                    (case-lambda
                      ((g$ls$16817$T@1Mj)
                       (if (null? g$ls$16817$T@1Mj)
                         '()
                         (cons
                           (car g$ls$16817$T@1Mj)
                           (g$remove-dups$16806$T@1Mj
                             (g$remq$11731$T@1Mj
                               (car g$ls$16817$T@1Mj)
                               (cdr g$ls$16817$T@1Mj)))))))))
          ((case-lambda
             ((g$t$16807$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16808$T@1Mj)
                  (if (if g$ls/false$16808$T@1Mj
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$16809$T@1Mj
                                 g$id*$16810$T@1Mj
                                 g$maker$16811$T@1Mj)
                               (if (g$id?$15507$T@1Mj
                                     g$name$16809$T@1Mj)
                                 (if (g$id?$15507$T@1Mj
                                       g$maker$16811$T@1Mj)
                                   (begin
                                     '#f
                                     (g$for-all$11722$T@1Mj
                                       g$id?$15507$T@1Mj
                                       g$id*$16810$T@1Mj))
                                   '#f)
                                 '#f)))
                            g$ls/false$16808$T@1Mj))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$16812$T@1Mj
                           g$id*$16813$T@1Mj
                           g$maker$16814$T@1Mj)
                         ((case-lambda
                            ((g$name*$16815$T@1Mj g$mk$16816$T@1Mj)
                             (g$bless$15968$T@1Mj
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$16816$T@1Mj
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$16815$T@1Mj))))
                                 (list
                                   'define-syntax
                                   g$name$16812$T@1Mj
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$16815$T@1Mj))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$16812$T@1Mj)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$16814$T@1Mj
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$16814$T@1Mj)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$16815$T@1Mj))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$16814$T@1Mj)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$16816$T@1Mj
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$16806$T@1Mj
                            (g$syntax->datum$16127$T@1Mj
                              g$id*$16813$T@1Mj))
                          (gensym))))
                      g$ls/false$16808$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$16807$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16807$T@1Mj
                 '(_ any each-any any)))))
           g$stx$16804$T@1Mj)))))
   (g$time-macro$15982$T@1Mj
     g$time-macro$19578$T@1Mj
     (case-lambda
       ((g$stx$16820$T@1Mj)
        ((case-lambda
           ((g$t$16821$T@1Mj)
            ((case-lambda
               ((g$ls/false$16822$T@1Mj)
                (if g$ls/false$16822$T@1Mj
                  (apply
                    (case-lambda
                      ((g$expr$16823$T@1Mj)
                       ((case-lambda
                          ((g$str$16824$T@1Mj)
                           (g$bless$15968$T@1Mj
                             (list
                               'time-it
                               g$str$16824$T@1Mj
                               (list 'lambda '() g$expr$16823$T@1Mj)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$13920$T@1Mj)))
                          (case-lambda
                            ((g$p$16827$T@1Mj g$e$16828$T@1Mj)
                             ((case-lambda
                                ((g$e$16829$T@1Mj g$p$16830$T@1Mj)
                                 (begin
                                   (write
                                     (g$syntax->datum$16127$T@1Mj
                                       g$expr$16823$T@1Mj)
                                     g$p$16830$T@1Mj)
                                   (g$e$16829$T@1Mj))))
                              g$e$16828$T@1Mj
                              g$p$16827$T@1Mj)))))))
                    g$ls/false$16822$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16821$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16821$T@1Mj '(_ any)))))
         g$stx$16820$T@1Mj))))
   (g$delay-macro$15983$T@1Mj
     g$delay-macro$19579$T@1Mj
     (case-lambda
       ((g$stx$16831$T@1Mj)
        ((case-lambda
           ((g$t$16832$T@1Mj)
            ((case-lambda
               ((g$ls/false$16833$T@1Mj)
                (if g$ls/false$16833$T@1Mj
                  (apply
                    (case-lambda
                      ((g$expr$16834$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$16834$T@1Mj)))))
                    g$ls/false$16833$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16832$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16832$T@1Mj '(_ any)))))
         g$stx$16831$T@1Mj))))
   (g$assert-macro$15984$T@1Mj
     g$assert-macro$19580$T@1Mj
     (case-lambda
       ((g$stx$16835$T@1Mj)
        ((case-lambda
           ((g$t$16836$T@1Mj)
            ((case-lambda
               ((g$ls/false$16837$T@1Mj)
                (if g$ls/false$16837$T@1Mj
                  (apply
                    (case-lambda
                      ((g$expr$16838$T@1Mj)
                       ((case-lambda
                          ((g$pos$16839$T@1Mj)
                           (g$bless$15968$T@1Mj
                             (list
                               'unless
                               g$expr$16838$T@1Mj
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$16838$T@1Mj)
                                 (list 'quote g$pos$16839$T@1Mj))))))
                        ((case-lambda
                           ((g$t$16840$T@1Mj)
                            (if g$t$16840$T@1Mj
                              g$t$16840$T@1Mj
                              (begin
                                '#f
                                (g$expression-position$16119$T@1Mj
                                  g$expr$16838$T@1Mj)))))
                         (g$expression-position$16119$T@1Mj
                           g$stx$16835$T@1Mj)))))
                    g$ls/false$16837$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16836$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16836$T@1Mj '(_ any)))))
         g$stx$16835$T@1Mj))))
   (g$endianness-macro$15985$T@1Mj
     g$endianness-macro$19581$T@1Mj
     (case-lambda
       ((g$stx$16841$T@1Mj)
        ((case-lambda
           ((g$t$16842$T@1Mj)
            ((case-lambda
               ((g$ls/false$16843$T@1Mj)
                (if g$ls/false$16843$T@1Mj
                  (apply
                    (case-lambda
                      ((g$e$16844$T@1Mj)
                       ((case-lambda
                          ((g$t$16845$T@1Mj)
                           (if (eqv? g$t$16845$T@1Mj 'little)
                             (g$bless$15968$T@1Mj ''little)
                             (if (eqv? g$t$16845$T@1Mj 'big)
                               (g$bless$15968$T@1Mj ''big)
                               (g$syntax-violation$16124$T@1Mj
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$16841$T@1Mj)))))
                        (g$syntax->datum$16127$T@1Mj g$e$16844$T@1Mj))))
                    g$ls/false$16843$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16842$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16842$T@1Mj '(_ any)))))
         g$stx$16841$T@1Mj))))
   (g$identifier-syntax-macro$15986$T@1Mj
     g$identifier-syntax-macro$19582$T@1Mj
     (case-lambda
       ((g$stx$16846$T@1Mj)
        ((case-lambda
           ((g$t$16847$T@1Mj)
            ((case-lambda
               ((g$ls/false$16848$T@1Mj)
                (if g$ls/false$16848$T@1Mj
                  (apply
                    (case-lambda
                      ((g$expr$16849$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$16849$T@1Mj))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$16849$T@1Mj)
                                   '(#'(e* ...))))))))))
                    g$ls/false$16848$T@1Mj)
                  ((case-lambda
                     ((g$t$16850$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16851$T@1Mj)
                          (if (if g$ls/false$16851$T@1Mj
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$16852$T@1Mj
                                         g$expr1$16853$T@1Mj
                                         g$id2$16854$T@1Mj
                                         g$expr2$16855$T@1Mj
                                         g$expr3$16856$T@1Mj)
                                       (if (g$id?$15507$T@1Mj
                                             g$id1$16852$T@1Mj)
                                         (if (g$id?$15507$T@1Mj
                                               g$id2$16854$T@1Mj)
                                           (begin
                                             '#f
                                             (g$id?$15507$T@1Mj
                                               g$expr2$16855$T@1Mj))
                                           '#f)
                                         '#f)))
                                    g$ls/false$16851$T@1Mj))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$16857$T@1Mj
                                   g$expr1$16858$T@1Mj
                                   g$id2$16859$T@1Mj
                                   g$expr2$16860$T@1Mj
                                   g$expr3$16861$T@1Mj)
                                 (g$bless$15968$T@1Mj
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$16858$T@1Mj))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$16860$T@1Mj)
                                           (list
                                             'syntax
                                             g$expr3$16861$T@1Mj))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$16858$T@1Mj
                                               '(e* ...))))))))))
                              g$ls/false$16851$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16850$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16850$T@1Mj
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$16847$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16847$T@1Mj '(_ any)))))
         g$stx$16846$T@1Mj))))
   (g$do-macro$15987$T@1Mj
     g$do-macro$19583$T@1Mj
     (case-lambda
       ((g$stx$16862$T@1Mj)
        (letrec* ((g$bind$16863$T@1Mj
                    (case-lambda
                      ((g$x$16875$T@1Mj)
                       ((case-lambda
                          ((g$t$16876$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$16877$T@1Mj)
                               (if g$ls/false$16877$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$x$16878$T@1Mj
                                        g$init$16879$T@1Mj)
                                      (list
                                        g$x$16878$T@1Mj
                                        g$init$16879$T@1Mj
                                        g$x$16878$T@1Mj)))
                                   g$ls/false$16877$T@1Mj)
                                 ((case-lambda
                                    ((g$t$16880$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$16881$T@1Mj)
                                         (if g$ls/false$16881$T@1Mj
                                           (apply
                                             (case-lambda
                                               ((g$x$16882$T@1Mj
                                                  g$init$16883$T@1Mj
                                                  g$step$16884$T@1Mj)
                                                (list
                                                  g$x$16882$T@1Mj
                                                  g$init$16883$T@1Mj
                                                  g$step$16884$T@1Mj)))
                                             g$ls/false$16881$T@1Mj)
                                           ((case-lambda
                                              ((g$t$16885$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$16886$T@1Mj)
                                                   (if g$ls/false$16886$T@1Mj
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$16124$T@1Mj
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$16862$T@1Mj)))
                                                       g$ls/false$16886$T@1Mj)
                                                     (g$syntax-violation$16124$T@1Mj
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$16885$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$16885$T@1Mj
                                                  '_))))
                                            g$t$16880$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$16880$T@1Mj
                                        '(any any any)))))
                                  g$t$16876$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$16876$T@1Mj
                              '(any any)))))
                        g$x$16875$T@1Mj)))))
          ((case-lambda
             ((g$t$16864$T@1Mj)
              ((case-lambda
                 ((g$ls/false$16865$T@1Mj)
                  (if g$ls/false$16865$T@1Mj
                    (apply
                      (case-lambda
                        ((g$binding*$16866$T@1Mj
                           g$test$16867$T@1Mj
                           g$expr*$16868$T@1Mj
                           g$command*$16869$T@1Mj)
                         ((case-lambda
                            ((g$t$16870$T@1Mj)
                             ((case-lambda
                                ((g$ls/false$16871$T@1Mj)
                                 (if g$ls/false$16871$T@1Mj
                                   (apply
                                     (case-lambda
                                       ((g$x*$16872$T@1Mj
                                          g$init*$16873$T@1Mj
                                          g$step*$16874$T@1Mj)
                                        (if (g$valid-bound-ids?$15512$T@1Mj
                                              g$x*$16872$T@1Mj)
                                          (g$bless$15968$T@1Mj
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$16872$T@1Mj
                                                    (list
                                                      'if
                                                      g$test$16867$T@1Mj
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$16868$T@1Mj))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$16869$T@1Mj
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$16874$T@1Mj))))))))
                                              (cons
                                                'loop
                                                g$init*$16873$T@1Mj)))
                                          (g$syntax-violation$16124$T@1Mj
                                            '#f
                                            '"invalid bindings"
                                            g$stx$16862$T@1Mj))))
                                     g$ls/false$16871$T@1Mj)
                                   (g$syntax-violation$16124$T@1Mj
                                     '#f
                                     '"invalid syntax"
                                     g$t$16870$T@1Mj))))
                              (g$syntax-dispatch$16005$T@1Mj
                                g$t$16870$T@1Mj
                                '#(each (any any any))))))
                          (g$map$11724$T@1Mj
                            g$bind$16863$T@1Mj
                            g$binding*$16866$T@1Mj))))
                      g$ls/false$16865$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$16864$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$16864$T@1Mj
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$16862$T@1Mj)))))
   (g$let*-macro$15988$T@1Mj
     g$let*-macro$19584$T@1Mj
     (case-lambda
       ((g$stx$16887$T@1Mj)
        ((case-lambda
           ((g$t$16888$T@1Mj)
            ((case-lambda
               ((g$ls/false$16889$T@1Mj)
                (if (if g$ls/false$16889$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$16890$T@1Mj
                               g$rhs*$16891$T@1Mj
                               g$b$16892$T@1Mj
                               g$b*$16893$T@1Mj)
                             (g$for-all$11722$T@1Mj
                               g$id?$15507$T@1Mj
                               g$lhs*$16890$T@1Mj)))
                          g$ls/false$16889$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$16894$T@1Mj
                         g$rhs*$16895$T@1Mj
                         g$b$16896$T@1Mj
                         g$b*$16897$T@1Mj)
                       (g$bless$15968$T@1Mj
                         ((letrec ((g$f$16898$T@1Mj
                                     (case-lambda
                                       ((g$x*$16899$T@1Mj)
                                        (if (null? g$x*$16899$T@1Mj)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$16896$T@1Mj
                                                g$b*$16897$T@1Mj)))
                                          (if (null?
                                                (cdr g$x*$16899$T@1Mj))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$16899$T@1Mj))
                                                (cons
                                                  g$b$16896$T@1Mj
                                                  g$b*$16897$T@1Mj)))
                                            (list
                                              'let
                                              (list
                                                (car g$x*$16899$T@1Mj))
                                              (g$f$16898$T@1Mj
                                                (cdr g$x*$16899$T@1Mj)))))))))
                            g$f$16898$T@1Mj)
                          (g$map$11724$T@1Mj
                            list
                            g$lhs*$16894$T@1Mj
                            g$rhs*$16895$T@1Mj)))))
                    g$ls/false$16889$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16888$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16888$T@1Mj
               '(_ #(each (any any)) any . each-any)))))
         g$stx$16887$T@1Mj))))
   (g$or-macro$15989$T@1Mj
     g$or-macro$19585$T@1Mj
     (case-lambda
       ((g$stx$16900$T@1Mj)
        ((case-lambda
           ((g$t$16901$T@1Mj)
            ((case-lambda
               ((g$ls/false$16902$T@1Mj)
                (if g$ls/false$16902$T@1Mj
                  (apply (case-lambda (() '#f)) g$ls/false$16902$T@1Mj)
                  ((case-lambda
                     ((g$t$16903$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16904$T@1Mj)
                          (if g$ls/false$16904$T@1Mj
                            (apply
                              (case-lambda
                                ((g$e$16905$T@1Mj g$e*$16906$T@1Mj)
                                 (g$bless$15968$T@1Mj
                                   ((letrec ((g$f$16907$T@1Mj
                                               (case-lambda
                                                 ((g$e$16908$T@1Mj
                                                    g$e*$16909$T@1Mj)
                                                  (if (null?
                                                        g$e*$16909$T@1Mj)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$16908$T@1Mj)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$16908$T@1Mj))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$16907$T@1Mj
                                                          (car g$e*$16909$T@1Mj)
                                                          (cdr g$e*$16909$T@1Mj)))))))))
                                      g$f$16907$T@1Mj)
                                    g$e$16905$T@1Mj
                                    g$e*$16906$T@1Mj))))
                              g$ls/false$16904$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16903$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16903$T@1Mj
                         '(_ any . each-any)))))
                   g$t$16901$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16901$T@1Mj '(_)))))
         g$stx$16900$T@1Mj))))
   (g$and-macro$15990$T@1Mj
     g$and-macro$19586$T@1Mj
     (case-lambda
       ((g$stx$16910$T@1Mj)
        ((case-lambda
           ((g$t$16911$T@1Mj)
            ((case-lambda
               ((g$ls/false$16912$T@1Mj)
                (if g$ls/false$16912$T@1Mj
                  (apply (case-lambda (() '#t)) g$ls/false$16912$T@1Mj)
                  ((case-lambda
                     ((g$t$16913$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$16914$T@1Mj)
                          (if g$ls/false$16914$T@1Mj
                            (apply
                              (case-lambda
                                ((g$e$16915$T@1Mj g$e*$16916$T@1Mj)
                                 (g$bless$15968$T@1Mj
                                   ((letrec ((g$f$16917$T@1Mj
                                               (case-lambda
                                                 ((g$e$16918$T@1Mj
                                                    g$e*$16919$T@1Mj)
                                                  (if (null?
                                                        g$e*$16919$T@1Mj)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$16918$T@1Mj)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$16918$T@1Mj
                                                        (cons
                                                          (g$f$16917$T@1Mj
                                                            (car g$e*$16919$T@1Mj)
                                                            (cdr g$e*$16919$T@1Mj))
                                                          '(#f)))))))))
                                      g$f$16917$T@1Mj)
                                    g$e$16915$T@1Mj
                                    g$e*$16916$T@1Mj))))
                              g$ls/false$16914$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$16913$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$16913$T@1Mj
                         '(_ any . each-any)))))
                   g$t$16911$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$16911$T@1Mj '(_)))))
         g$stx$16910$T@1Mj))))
   (g$cond-macro$15991$T@1Mj
     g$cond-macro$19587$T@1Mj
     (case-lambda
       ((g$stx$16920$T@1Mj)
        ((case-lambda
           ((g$t$16921$T@1Mj)
            ((case-lambda
               ((g$ls/false$16922$T@1Mj)
                (if g$ls/false$16922$T@1Mj
                  (apply
                    (case-lambda
                      ((g$cls$16923$T@1Mj g$cls*$16924$T@1Mj)
                       (g$bless$15968$T@1Mj
                         ((letrec ((g$f$16925$T@1Mj
                                     (case-lambda
                                       ((g$cls$16926$T@1Mj
                                          g$cls*$16927$T@1Mj)
                                        (if (null? g$cls*$16927$T@1Mj)
                                          ((case-lambda
                                             ((g$t$16928$T@1Mj)
                                              ((case-lambda
                                                 ((g$ls/false$16929$T@1Mj)
                                                  (if g$ls/false$16929$T@1Mj
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$16930$T@1Mj
                                                           g$e*$16931$T@1Mj)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$16930$T@1Mj
                                                             g$e*$16931$T@1Mj))))
                                                      g$ls/false$16929$T@1Mj)
                                                    ((case-lambda
                                                       ((g$t$16932$T@1Mj)
                                                        ((case-lambda
                                                           ((g$ls/false$16933$T@1Mj)
                                                            (if g$ls/false$16933$T@1Mj
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$16934$T@1Mj
                                                                     g$p$16935$T@1Mj)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$16934$T@1Mj))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$16935$T@1Mj
                                                                         '(t))))))
                                                                g$ls/false$16933$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$t$16936$T@1Mj)
                                                                  ((case-lambda
                                                                     ((g$ls/false$16937$T@1Mj)
                                                                      (if g$ls/false$16937$T@1Mj
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$16938$T@1Mj)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$16938$T@1Mj
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$16937$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$t$16939$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$ls/false$16940$T@1Mj)
                                                                                (if g$ls/false$16940$T@1Mj
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$16941$T@1Mj
                                                                                         g$e*$16942$T@1Mj)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$16941$T@1Mj
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$16942$T@1Mj))))
                                                                                    g$ls/false$16940$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$t$16943$T@1Mj)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$16944$T@1Mj)
                                                                                          (if g$ls/false$16944$T@1Mj
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$16124$T@1Mj
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$16920$T@1Mj)))
                                                                                              g$ls/false$16944$T@1Mj)
                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$16943$T@1Mj))))
                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                         g$t$16943$T@1Mj
                                                                                         '_))))
                                                                                   g$t$16939$T@1Mj))))
                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                               g$t$16939$T@1Mj
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$16936$T@1Mj))))
                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                     g$t$16936$T@1Mj
                                                                     '(any)))))
                                                               g$t$16932$T@1Mj))))
                                                         (g$syntax-dispatch$16005$T@1Mj
                                                           g$t$16932$T@1Mj
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$16928$T@1Mj))))
                                               (g$syntax-dispatch$16005$T@1Mj
                                                 g$t$16928$T@1Mj
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$16926$T@1Mj)
                                          ((case-lambda
                                             ((g$t$16945$T@1Mj)
                                              ((case-lambda
                                                 ((g$ls/false$16946$T@1Mj)
                                                  (if g$ls/false$16946$T@1Mj
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$16947$T@1Mj
                                                           g$e*$16948$T@1Mj)
                                                         (g$syntax-violation$16124$T@1Mj
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$16920$T@1Mj)))
                                                      g$ls/false$16946$T@1Mj)
                                                    ((case-lambda
                                                       ((g$t$16949$T@1Mj)
                                                        ((case-lambda
                                                           ((g$ls/false$16950$T@1Mj)
                                                            (if g$ls/false$16950$T@1Mj
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$16951$T@1Mj
                                                                     g$p$16952$T@1Mj)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$16951$T@1Mj))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$16952$T@1Mj
                                                                         '(t))
                                                                       (g$f$16925$T@1Mj
                                                                         (car g$cls*$16927$T@1Mj)
                                                                         (cdr g$cls*$16927$T@1Mj))))))
                                                                g$ls/false$16950$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$t$16953$T@1Mj)
                                                                  ((case-lambda
                                                                     ((g$ls/false$16954$T@1Mj)
                                                                      (if g$ls/false$16954$T@1Mj
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$16955$T@1Mj)
                                                                             (list
                                                                               'or
                                                                               g$e$16955$T@1Mj
                                                                               (g$f$16925$T@1Mj
                                                                                 (car g$cls*$16927$T@1Mj)
                                                                                 (cdr g$cls*$16927$T@1Mj)))))
                                                                          g$ls/false$16954$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$t$16956$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$ls/false$16957$T@1Mj)
                                                                                (if g$ls/false$16957$T@1Mj
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$16958$T@1Mj
                                                                                         g$e*$16959$T@1Mj)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$16958$T@1Mj
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$16959$T@1Mj)
                                                                                         (g$f$16925$T@1Mj
                                                                                           (car g$cls*$16927$T@1Mj)
                                                                                           (cdr g$cls*$16927$T@1Mj)))))
                                                                                    g$ls/false$16957$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$t$16960$T@1Mj)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$16961$T@1Mj)
                                                                                          (if g$ls/false$16961$T@1Mj
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$16124$T@1Mj
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$16920$T@1Mj)))
                                                                                              g$ls/false$16961$T@1Mj)
                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$16960$T@1Mj))))
                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                         g$t$16960$T@1Mj
                                                                                         '_))))
                                                                                   g$t$16956$T@1Mj))))
                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                               g$t$16956$T@1Mj
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$16953$T@1Mj))))
                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                     g$t$16953$T@1Mj
                                                                     '(any)))))
                                                               g$t$16949$T@1Mj))))
                                                         (g$syntax-dispatch$16005$T@1Mj
                                                           g$t$16949$T@1Mj
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$16945$T@1Mj))))
                                               (g$syntax-dispatch$16005$T@1Mj
                                                 g$t$16945$T@1Mj
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$16926$T@1Mj))))))
                            g$f$16925$T@1Mj)
                          g$cls$16923$T@1Mj
                          g$cls*$16924$T@1Mj))))
                    g$ls/false$16922$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16921$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16921$T@1Mj
               '(_ any . each-any)))))
         g$stx$16920$T@1Mj))))
   (g$do-include$15992$T@1Mj
     g$do-include$19588$T@1Mj
     (case-lambda
       ((g$stx$16962$T@1Mj g$id$16963$T@1Mj g$filename$16964$T@1Mj)
        ((case-lambda
           ((g$filename$16965$T@1Mj)
            (begin
              (if (not (if (string? g$filename$16965$T@1Mj)
                         (begin
                           '#f
                           (g$id?$15507$T@1Mj g$id$16963$T@1Mj))
                         '#f))
                (g$syntax-violation$16124$T@1Mj
                  '#f
                  '"invalid syntax"
                  g$stx$16962$T@1Mj)
                (void))
              (cons
                (g$bless$15968$T@1Mj 'begin)
                (g$with-input-from-file$13982$T@1Mj
                  g$filename$16965$T@1Mj
                  (case-lambda
                    (()
                     ((letrec ((g$f$16966$T@1Mj
                                 (case-lambda
                                   ((g$ls$16967$T@1Mj)
                                    ((case-lambda
                                       ((g$x$16968$T@1Mj)
                                        (if (eof-object?
                                              g$x$16968$T@1Mj)
                                          (g$reverse$12475$T@1Mj
                                            g$ls$16967$T@1Mj)
                                          (g$f$16966$T@1Mj
                                            (cons
                                              (g$datum->stx$15490$T@1Mj
                                                g$id$16963$T@1Mj
                                                g$x$16968$T@1Mj)
                                              g$ls$16967$T@1Mj)))))
                                     (read-annotated))))))
                        g$f$16966$T@1Mj)
                      '()))))))))
         (g$stx->datum$15518$T@1Mj g$filename$16964$T@1Mj)))))
   (g$include-macro$15993$T@1Mj
     g$include-macro$19589$T@1Mj
     (case-lambda
       ((g$e$16969$T@1Mj)
        ((case-lambda
           ((g$t$16970$T@1Mj)
            ((case-lambda
               ((g$ls/false$16971$T@1Mj)
                (if g$ls/false$16971$T@1Mj
                  (apply
                    (case-lambda
                      ((g$id$16972$T@1Mj g$filename$16973$T@1Mj)
                       (g$do-include$15992$T@1Mj
                         g$e$16969$T@1Mj
                         g$id$16972$T@1Mj
                         g$filename$16973$T@1Mj)))
                    g$ls/false$16971$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16970$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16970$T@1Mj
               '(any any)))))
         g$e$16969$T@1Mj))))
   (g$include-into-macro$15994$T@1Mj
     g$include-into-macro$19590$T@1Mj
     (case-lambda
       ((g$e$16974$T@1Mj)
        ((case-lambda
           ((g$t$16975$T@1Mj)
            ((case-lambda
               ((g$ls/false$16976$T@1Mj)
                (if g$ls/false$16976$T@1Mj
                  (apply
                    (case-lambda
                      ((g$id$16977$T@1Mj g$filename$16978$T@1Mj)
                       (g$do-include$15992$T@1Mj
                         g$e$16974$T@1Mj
                         g$id$16977$T@1Mj
                         g$filename$16978$T@1Mj)))
                    g$ls/false$16976$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16975$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16975$T@1Mj
               '(_ any any)))))
         g$e$16974$T@1Mj))))
   (g$syntax-rules-macro$15995$T@1Mj
     g$syntax-rules-macro$19591$T@1Mj
     (case-lambda
       ((g$e$16979$T@1Mj)
        ((case-lambda
           ((g$t$16980$T@1Mj)
            ((case-lambda
               ((g$ls/false$16981$T@1Mj)
                (if g$ls/false$16981$T@1Mj
                  (apply
                    (case-lambda
                      ((g$lits$16982$T@1Mj
                         g$pat*$16983$T@1Mj
                         g$tmp*$16984$T@1Mj)
                       (begin
                         (g$verify-literals$16008$T@1Mj
                           g$lits$16982$T@1Mj
                           g$e$16979$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$16982$T@1Mj
                                   (g$map$11724$T@1Mj
                                     (case-lambda
                                       ((g$pat$16985$T@1Mj
                                          g$tmp$16986$T@1Mj)
                                        ((case-lambda
                                           ((g$t$16987$T@1Mj)
                                            ((case-lambda
                                               ((g$ls/false$16988$T@1Mj)
                                                (if g$ls/false$16988$T@1Mj
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$16989$T@1Mj)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$16989$T@1Mj)
                                                         (list
                                                           'syntax
                                                           g$tmp$16986$T@1Mj))))
                                                    g$ls/false$16988$T@1Mj)
                                                  ((case-lambda
                                                     ((g$t$16990$T@1Mj)
                                                      ((case-lambda
                                                         ((g$ls/false$16991$T@1Mj)
                                                          (if g$ls/false$16991$T@1Mj
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$16124$T@1Mj
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$16979$T@1Mj
                                                                   g$pat$16985$T@1Mj)))
                                                              g$ls/false$16991$T@1Mj)
                                                            (g$syntax-violation$16124$T@1Mj
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$16990$T@1Mj))))
                                                       (g$syntax-dispatch$16005$T@1Mj
                                                         g$t$16990$T@1Mj
                                                         '_))))
                                                   g$t$16987$T@1Mj))))
                                             (g$syntax-dispatch$16005$T@1Mj
                                               g$t$16987$T@1Mj
                                               '(_ . any)))))
                                         g$pat$16985$T@1Mj)))
                                     g$pat*$16983$T@1Mj
                                     g$tmp*$16984$T@1Mj)))))))))
                    g$ls/false$16981$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$16980$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$16980$T@1Mj
               '(_ each-any . #(each (any any)))))))
         g$e$16979$T@1Mj))))
   (g$quasiquote-macro$15996$T@1Mj
     g$quasiquote-macro$19592$T@1Mj
     ((case-lambda
        (()
         (letrec* ((g$datum$16992$T@1Mj
                     (case-lambda
                       ((g$x$17142$T@1Mj)
                        (list
                          (g$scheme-stx$15948$T@1Mj 'quote)
                          (g$mkstx$15495$T@1Mj
                            g$x$17142$T@1Mj
                            '()
                            '()
                            '())))))
                   (g$quasicons*$17027$T@1Mj
                     (case-lambda
                       ((g$x$17138$T@1Mj g$y$17139$T@1Mj)
                        ((letrec ((g$f$17140$T@1Mj
                                    (case-lambda
                                      ((g$x$17141$T@1Mj)
                                       (if (null? g$x$17141$T@1Mj)
                                         g$y$17139$T@1Mj
                                         (g$quasicons$17028$T@1Mj
                                           (car g$x$17141$T@1Mj)
                                           (g$f$17140$T@1Mj
                                             (cdr g$x$17141$T@1Mj))))))))
                           g$f$17140$T@1Mj)
                         g$x$17138$T@1Mj))))
                   (g$quasicons$17028$T@1Mj
                     (case-lambda
                       ((g$x$17119$T@1Mj g$y$17120$T@1Mj)
                        ((case-lambda
                           ((g$t$17121$T@1Mj)
                            ((case-lambda
                               ((g$ls/false$17122$T@1Mj)
                                (if g$ls/false$17122$T@1Mj
                                  (apply
                                    (case-lambda
                                      ((g$dy$17123$T@1Mj)
                                       ((case-lambda
                                          ((g$t$17124$T@1Mj)
                                           ((case-lambda
                                              ((g$ls/false$17125$T@1Mj)
                                               (if g$ls/false$17125$T@1Mj
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$17126$T@1Mj)
                                                      (list
                                                        (g$scheme-stx$15948$T@1Mj
                                                          'quote)
                                                        (cons
                                                          g$dx$17126$T@1Mj
                                                          g$dy$17123$T@1Mj))))
                                                   g$ls/false$17125$T@1Mj)
                                                 ((case-lambda
                                                    ((g$t$17127$T@1Mj)
                                                     ((case-lambda
                                                        ((g$ls/false$17128$T@1Mj)
                                                         (if g$ls/false$17128$T@1Mj
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$17129$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$17130$T@1Mj)
                                                                        (if g$ls/false$17130$T@1Mj
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$15948$T@1Mj
                                                                                   'list)
                                                                                 g$x$17119$T@1Mj)))
                                                                            g$ls/false$17130$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$17131$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$17132$T@1Mj)
                                                                                  (if g$ls/false$17132$T@1Mj
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$15948$T@1Mj
                                                                                             'cons)
                                                                                           g$x$17119$T@1Mj
                                                                                           g$y$17120$T@1Mj)))
                                                                                      g$ls/false$17132$T@1Mj)
                                                                                    (g$syntax-violation$16124$T@1Mj
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$17131$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$17131$T@1Mj
                                                                                 '_))))
                                                                           g$t$17129$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$17129$T@1Mj
                                                                       '()))))
                                                                 g$dy$17123$T@1Mj)))
                                                             g$ls/false$17128$T@1Mj)
                                                           (g$syntax-violation$16124$T@1Mj
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$17127$T@1Mj))))
                                                      (g$syntax-dispatch$16005$T@1Mj
                                                        g$t$17127$T@1Mj
                                                        '_))))
                                                  g$t$17124$T@1Mj))))
                                            (g$syntax-dispatch$16005$T@1Mj
                                              g$t$17124$T@1Mj
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$17119$T@1Mj)))
                                    g$ls/false$17122$T@1Mj)
                                  ((case-lambda
                                     ((g$t$17133$T@1Mj)
                                      ((case-lambda
                                         ((g$ls/false$17134$T@1Mj)
                                          (if g$ls/false$17134$T@1Mj
                                            (apply
                                              (case-lambda
                                                ((g$stuff$17135$T@1Mj)
                                                 (g$cons*$11726$T@1Mj
                                                   (g$scheme-stx$15948$T@1Mj
                                                     'list)
                                                   g$x$17119$T@1Mj
                                                   g$stuff$17135$T@1Mj)))
                                              g$ls/false$17134$T@1Mj)
                                            ((case-lambda
                                               ((g$t$17136$T@1Mj)
                                                ((case-lambda
                                                   ((g$ls/false$17137$T@1Mj)
                                                    (if g$ls/false$17137$T@1Mj
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$15948$T@1Mj
                                                               'cons)
                                                             g$x$17119$T@1Mj
                                                             g$y$17120$T@1Mj)))
                                                        g$ls/false$17137$T@1Mj)
                                                      (g$syntax-violation$16124$T@1Mj
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$17136$T@1Mj))))
                                                 (g$syntax-dispatch$16005$T@1Mj
                                                   g$t$17136$T@1Mj
                                                   '_))))
                                             g$t$17133$T@1Mj))))
                                       (g$syntax-dispatch$16005$T@1Mj
                                         g$t$17133$T@1Mj
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$17121$T@1Mj))))
                             (g$syntax-dispatch$16005$T@1Mj
                               g$t$17121$T@1Mj
                               '(#(scheme-id quote) any)))))
                         g$y$17120$T@1Mj))))
                   (g$quasiappend$17029$T@1Mj
                     (case-lambda
                       ((g$x$17106$T@1Mj g$y$17107$T@1Mj)
                        ((case-lambda
                           ((g$ls$17108$T@1Mj)
                            (if (null? g$ls$17108$T@1Mj)
                              (list
                                (g$scheme-stx$15948$T@1Mj 'quote)
                                '())
                              (if (null? (cdr g$ls$17108$T@1Mj))
                                (car g$ls$17108$T@1Mj)
                                (g$cons*$11726$T@1Mj
                                  (g$scheme-stx$15948$T@1Mj 'append)
                                  g$ls$17108$T@1Mj)))))
                         ((letrec ((g$f$17109$T@1Mj
                                     (case-lambda
                                       ((g$x$17110$T@1Mj)
                                        (if (null? g$x$17110$T@1Mj)
                                          ((case-lambda
                                             ((g$t$17111$T@1Mj)
                                              ((case-lambda
                                                 ((g$ls/false$17112$T@1Mj)
                                                  (if g$ls/false$17112$T@1Mj
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$17112$T@1Mj)
                                                    ((case-lambda
                                                       ((g$t$17113$T@1Mj)
                                                        ((case-lambda
                                                           ((g$ls/false$17114$T@1Mj)
                                                            (if g$ls/false$17114$T@1Mj
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$17107$T@1Mj)))
                                                                g$ls/false$17114$T@1Mj)
                                                              (g$syntax-violation$16124$T@1Mj
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$17113$T@1Mj))))
                                                         (g$syntax-dispatch$16005$T@1Mj
                                                           g$t$17113$T@1Mj
                                                           '_))))
                                                     g$t$17111$T@1Mj))))
                                               (g$syntax-dispatch$16005$T@1Mj
                                                 g$t$17111$T@1Mj
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$17107$T@1Mj)
                                          ((case-lambda
                                             ((g$t$17115$T@1Mj)
                                              ((case-lambda
                                                 ((g$ls/false$17116$T@1Mj)
                                                  (if g$ls/false$17116$T@1Mj
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$17109$T@1Mj
                                                           (cdr g$x$17110$T@1Mj))))
                                                      g$ls/false$17116$T@1Mj)
                                                    ((case-lambda
                                                       ((g$t$17117$T@1Mj)
                                                        ((case-lambda
                                                           ((g$ls/false$17118$T@1Mj)
                                                            (if g$ls/false$17118$T@1Mj
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$17110$T@1Mj)
                                                                     (g$f$17109$T@1Mj
                                                                       (cdr g$x$17110$T@1Mj)))))
                                                                g$ls/false$17118$T@1Mj)
                                                              (g$syntax-violation$16124$T@1Mj
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$17117$T@1Mj))))
                                                         (g$syntax-dispatch$16005$T@1Mj
                                                           g$t$17117$T@1Mj
                                                           '_))))
                                                     g$t$17115$T@1Mj))))
                                               (g$syntax-dispatch$16005$T@1Mj
                                                 g$t$17115$T@1Mj
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$17110$T@1Mj)))))))
                            g$f$17109$T@1Mj)
                          g$x$17106$T@1Mj)))))
                   (g$quasivector$17030$T@1Mj
                     (case-lambda
                       ((g$x$17081$T@1Mj)
                        ((case-lambda
                           ((g$pat-x$17082$T@1Mj)
                            ((case-lambda
                               ((g$t$17083$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$17084$T@1Mj)
                                    (if g$ls/false$17084$T@1Mj
                                      (apply
                                        (case-lambda
                                          ((g$x*$17085$T@1Mj)
                                           (list
                                             (g$scheme-stx$15948$T@1Mj
                                               'quote)
                                             (g$list->vector$12462$T@1Mj
                                               g$x*$17085$T@1Mj))))
                                        g$ls/false$17084$T@1Mj)
                                      ((case-lambda
                                         ((g$t$17086$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$17087$T@1Mj)
                                              (if g$ls/false$17087$T@1Mj
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$17088$T@1Mj
                                                                 (case-lambda
                                                                   ((g$x$17089$T@1Mj
                                                                      g$k$17090$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$t$17091$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ls/false$17092$T@1Mj)
                                                                            (if g$ls/false$17092$T@1Mj
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$17093$T@1Mj)
                                                                                   (g$k$17090$T@1Mj
                                                                                     (g$map$11724$T@1Mj
                                                                                       (case-lambda
                                                                                         ((g$x$17094$T@1Mj)
                                                                                          (list
                                                                                            (g$scheme-stx$15948$T@1Mj
                                                                                              'quote)
                                                                                            g$x$17094$T@1Mj)))
                                                                                       g$x*$17093$T@1Mj))))
                                                                                g$ls/false$17092$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$t$17095$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$17096$T@1Mj)
                                                                                      (if g$ls/false$17096$T@1Mj
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$17097$T@1Mj)
                                                                                             (g$k$17090$T@1Mj
                                                                                               g$x*$17097$T@1Mj)))
                                                                                          g$ls/false$17096$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$t$17098$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$17099$T@1Mj)
                                                                                                (if g$ls/false$17099$T@1Mj
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$17100$T@1Mj
                                                                                                         g$y$17101$T@1Mj)
                                                                                                       (g$f$17088$T@1Mj
                                                                                                         g$y$17101$T@1Mj
                                                                                                         (case-lambda
                                                                                                           ((g$ls$17102$T@1Mj)
                                                                                                            (g$k$17090$T@1Mj
                                                                                                              (cons
                                                                                                                g$x$17100$T@1Mj
                                                                                                                g$ls$17102$T@1Mj)))))))
                                                                                                    g$ls/false$17099$T@1Mj)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$17103$T@1Mj)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$17104$T@1Mj)
                                                                                                          (if g$ls/false$17104$T@1Mj
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$15948$T@1Mj
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$17082$T@1Mj)))
                                                                                                              g$ls/false$17104$T@1Mj)
                                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$17103$T@1Mj))))
                                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                                         g$t$17103$T@1Mj
                                                                                                         '_))))
                                                                                                   g$t$17098$T@1Mj))))
                                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                                               g$t$17098$T@1Mj
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$17095$T@1Mj))))
                                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                                     g$t$17095$T@1Mj
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$17091$T@1Mj))))
                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                           g$t$17091$T@1Mj
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$17089$T@1Mj)))))
                                                        g$f$17088$T@1Mj)
                                                      g$x$17081$T@1Mj
                                                      (case-lambda
                                                        ((g$ls$17105$T@1Mj)
                                                         (g$cons*$11726$T@1Mj
                                                           (g$scheme-stx$15948$T@1Mj
                                                             'vector)
                                                           g$ls$17105$T@1Mj))))))
                                                  g$ls/false$17087$T@1Mj)
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$17086$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$17086$T@1Mj
                                             '_))))
                                       g$t$17083$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$17083$T@1Mj
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$17082$T@1Mj)))
                         g$x$17081$T@1Mj))))
                   (g$vquasi$17031$T@1Mj
                     (case-lambda
                       ((g$p$17064$T@1Mj g$lev$17065$T@1Mj)
                        ((case-lambda
                           ((g$t$17066$T@1Mj)
                            ((case-lambda
                               ((g$ls/false$17067$T@1Mj)
                                (if g$ls/false$17067$T@1Mj
                                  (apply
                                    (case-lambda
                                      ((g$p$17068$T@1Mj g$q$17069$T@1Mj)
                                       ((case-lambda
                                          ((g$t$17070$T@1Mj)
                                           ((case-lambda
                                              ((g$ls/false$17071$T@1Mj)
                                               (if g$ls/false$17071$T@1Mj
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$17072$T@1Mj)
                                                      (if (= g$lev$17065$T@1Mj
                                                             '0)
                                                        (g$quasicons*$17027$T@1Mj
                                                          g$p$17072$T@1Mj
                                                          (g$vquasi$17031$T@1Mj
                                                            g$q$17069$T@1Mj
                                                            g$lev$17065$T@1Mj))
                                                        (g$quasicons$17028$T@1Mj
                                                          (g$quasicons$17028$T@1Mj
                                                            (g$datum$16992$T@1Mj
                                                              'unquote)
                                                            (g$quasi$17032$T@1Mj
                                                              g$p$17072$T@1Mj
                                                              (- g$lev$17065$T@1Mj
                                                                 '1)))
                                                          (g$vquasi$17031$T@1Mj
                                                            g$q$17069$T@1Mj
                                                            g$lev$17065$T@1Mj)))))
                                                   g$ls/false$17071$T@1Mj)
                                                 ((case-lambda
                                                    ((g$t$17073$T@1Mj)
                                                     ((case-lambda
                                                        ((g$ls/false$17074$T@1Mj)
                                                         (if g$ls/false$17074$T@1Mj
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$17075$T@1Mj)
                                                                (if (= g$lev$17065$T@1Mj
                                                                       '0)
                                                                  (g$quasiappend$17029$T@1Mj
                                                                    g$p$17075$T@1Mj
                                                                    (g$vquasi$17031$T@1Mj
                                                                      g$q$17069$T@1Mj
                                                                      g$lev$17065$T@1Mj))
                                                                  (g$quasicons$17028$T@1Mj
                                                                    (g$quasicons$17028$T@1Mj
                                                                      (g$datum$16992$T@1Mj
                                                                        'unquote-splicing)
                                                                      (g$quasi$17032$T@1Mj
                                                                        g$p$17075$T@1Mj
                                                                        (- g$lev$17065$T@1Mj
                                                                           '1)))
                                                                    (g$vquasi$17031$T@1Mj
                                                                      g$q$17069$T@1Mj
                                                                      g$lev$17065$T@1Mj)))))
                                                             g$ls/false$17074$T@1Mj)
                                                           ((case-lambda
                                                              ((g$t$17076$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$ls/false$17077$T@1Mj)
                                                                   (if g$ls/false$17077$T@1Mj
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$17078$T@1Mj)
                                                                          (g$quasicons$17028$T@1Mj
                                                                            (g$quasi$17032$T@1Mj
                                                                              g$p$17078$T@1Mj
                                                                              g$lev$17065$T@1Mj)
                                                                            (g$vquasi$17031$T@1Mj
                                                                              g$q$17069$T@1Mj
                                                                              g$lev$17065$T@1Mj))))
                                                                       g$ls/false$17077$T@1Mj)
                                                                     (g$syntax-violation$16124$T@1Mj
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$17076$T@1Mj))))
                                                                (g$syntax-dispatch$16005$T@1Mj
                                                                  g$t$17076$T@1Mj
                                                                  'any))))
                                                            g$t$17073$T@1Mj))))
                                                      (g$syntax-dispatch$16005$T@1Mj
                                                        g$t$17073$T@1Mj
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$17070$T@1Mj))))
                                            (g$syntax-dispatch$16005$T@1Mj
                                              g$t$17070$T@1Mj
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$17068$T@1Mj)))
                                    g$ls/false$17067$T@1Mj)
                                  ((case-lambda
                                     ((g$t$17079$T@1Mj)
                                      ((case-lambda
                                         ((g$ls/false$17080$T@1Mj)
                                          (if g$ls/false$17080$T@1Mj
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$15948$T@1Mj
                                                     'quote)
                                                   '())))
                                              g$ls/false$17080$T@1Mj)
                                            (g$syntax-violation$16124$T@1Mj
                                              '#f
                                              '"invalid syntax"
                                              g$t$17079$T@1Mj))))
                                       (g$syntax-dispatch$16005$T@1Mj
                                         g$t$17079$T@1Mj
                                         '()))))
                                   g$t$17066$T@1Mj))))
                             (g$syntax-dispatch$16005$T@1Mj
                               g$t$17066$T@1Mj
                               '(any . any)))))
                         g$p$17064$T@1Mj))))
                   (g$quasi$17032$T@1Mj
                     (case-lambda
                       ((g$p$17037$T@1Mj g$lev$17038$T@1Mj)
                        ((case-lambda
                           ((g$t$17039$T@1Mj)
                            ((case-lambda
                               ((g$ls/false$17040$T@1Mj)
                                (if g$ls/false$17040$T@1Mj
                                  (apply
                                    (case-lambda
                                      ((g$p$17041$T@1Mj)
                                       (if (= g$lev$17038$T@1Mj '0)
                                         g$p$17041$T@1Mj
                                         (g$quasicons$17028$T@1Mj
                                           (g$datum$16992$T@1Mj
                                             'unquote)
                                           (g$quasi$17032$T@1Mj
                                             (list g$p$17041$T@1Mj)
                                             (- g$lev$17038$T@1Mj
                                                '1))))))
                                    g$ls/false$17040$T@1Mj)
                                  ((case-lambda
                                     ((g$t$17042$T@1Mj)
                                      ((case-lambda
                                         ((g$ls/false$17043$T@1Mj)
                                          (if g$ls/false$17043$T@1Mj
                                            (apply
                                              (case-lambda
                                                ((g$p$17044$T@1Mj
                                                   g$q$17045$T@1Mj)
                                                 (if (= g$lev$17038$T@1Mj
                                                        '0)
                                                   (g$quasicons*$17027$T@1Mj
                                                     g$p$17044$T@1Mj
                                                     (g$quasi$17032$T@1Mj
                                                       g$q$17045$T@1Mj
                                                       g$lev$17038$T@1Mj))
                                                   (g$quasicons$17028$T@1Mj
                                                     (g$quasicons$17028$T@1Mj
                                                       (g$datum$16992$T@1Mj
                                                         'unquote)
                                                       (g$quasi$17032$T@1Mj
                                                         g$p$17044$T@1Mj
                                                         (- g$lev$17038$T@1Mj
                                                            '1)))
                                                     (g$quasi$17032$T@1Mj
                                                       g$q$17045$T@1Mj
                                                       g$lev$17038$T@1Mj)))))
                                              g$ls/false$17043$T@1Mj)
                                            ((case-lambda
                                               ((g$t$17046$T@1Mj)
                                                ((case-lambda
                                                   ((g$ls/false$17047$T@1Mj)
                                                    (if g$ls/false$17047$T@1Mj
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$17048$T@1Mj
                                                             g$q$17049$T@1Mj)
                                                           (if (= g$lev$17038$T@1Mj
                                                                  '0)
                                                             (g$quasiappend$17029$T@1Mj
                                                               g$p$17048$T@1Mj
                                                               (g$quasi$17032$T@1Mj
                                                                 g$q$17049$T@1Mj
                                                                 g$lev$17038$T@1Mj))
                                                             (g$quasicons$17028$T@1Mj
                                                               (g$quasicons$17028$T@1Mj
                                                                 (g$datum$16992$T@1Mj
                                                                   'unquote-splicing)
                                                                 (g$quasi$17032$T@1Mj
                                                                   g$p$17048$T@1Mj
                                                                   (- g$lev$17038$T@1Mj
                                                                      '1)))
                                                               (g$quasi$17032$T@1Mj
                                                                 g$q$17049$T@1Mj
                                                                 g$lev$17038$T@1Mj)))))
                                                        g$ls/false$17047$T@1Mj)
                                                      ((case-lambda
                                                         ((g$t$17050$T@1Mj)
                                                          ((case-lambda
                                                             ((g$ls/false$17051$T@1Mj)
                                                              (if g$ls/false$17051$T@1Mj
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$17052$T@1Mj)
                                                                     (g$quasicons$17028$T@1Mj
                                                                       (g$datum$16992$T@1Mj
                                                                         'quasiquote)
                                                                       (g$quasi$17032$T@1Mj
                                                                         (list
                                                                           g$p$17052$T@1Mj)
                                                                         (+ g$lev$17038$T@1Mj
                                                                            '1)))))
                                                                  g$ls/false$17051$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$t$17053$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$17054$T@1Mj)
                                                                        (if g$ls/false$17054$T@1Mj
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$17055$T@1Mj
                                                                                 g$q$17056$T@1Mj)
                                                                               (g$quasicons$17028$T@1Mj
                                                                                 (g$quasi$17032$T@1Mj
                                                                                   g$p$17055$T@1Mj
                                                                                   g$lev$17038$T@1Mj)
                                                                                 (g$quasi$17032$T@1Mj
                                                                                   g$q$17056$T@1Mj
                                                                                   g$lev$17038$T@1Mj))))
                                                                            g$ls/false$17054$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$17057$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$17058$T@1Mj)
                                                                                  (if (if g$ls/false$17058$T@1Mj
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$17059$T@1Mj)
                                                                                               (not (g$stx?$15479$T@1Mj
                                                                                                      g$x$17059$T@1Mj))))
                                                                                            g$ls/false$17058$T@1Mj))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$17060$T@1Mj)
                                                                                         (g$quasivector$17030$T@1Mj
                                                                                           (g$vquasi$17031$T@1Mj
                                                                                             g$x$17060$T@1Mj
                                                                                             g$lev$17038$T@1Mj))))
                                                                                      g$ls/false$17058$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$t$17061$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$17062$T@1Mj)
                                                                                            (if g$ls/false$17062$T@1Mj
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$17063$T@1Mj)
                                                                                                   (list
                                                                                                     (g$scheme-stx$15948$T@1Mj
                                                                                                       'quote)
                                                                                                     g$p$17063$T@1Mj)))
                                                                                                g$ls/false$17062$T@1Mj)
                                                                                              (g$syntax-violation$16124$T@1Mj
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$17061$T@1Mj))))
                                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                                           g$t$17061$T@1Mj
                                                                                           'any))))
                                                                                     g$t$17057$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$17057$T@1Mj
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$17053$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$17053$T@1Mj
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$17050$T@1Mj))))
                                                           (g$syntax-dispatch$16005$T@1Mj
                                                             g$t$17050$T@1Mj
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$17046$T@1Mj))))
                                                 (g$syntax-dispatch$16005$T@1Mj
                                                   g$t$17046$T@1Mj
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$17042$T@1Mj))))
                                       (g$syntax-dispatch$16005$T@1Mj
                                         g$t$17042$T@1Mj
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$17039$T@1Mj))))
                             (g$syntax-dispatch$16005$T@1Mj
                               g$t$17039$T@1Mj
                               '(#(scheme-id unquote) any)))))
                         g$p$17037$T@1Mj)))))
           (case-lambda
             ((g$x$17033$T@1Mj)
              ((case-lambda
                 ((g$t$17034$T@1Mj)
                  ((case-lambda
                     ((g$ls/false$17035$T@1Mj)
                      (if g$ls/false$17035$T@1Mj
                        (apply
                          (case-lambda
                            ((g$e$17036$T@1Mj)
                             (g$quasi$17032$T@1Mj g$e$17036$T@1Mj '0)))
                          g$ls/false$17035$T@1Mj)
                        (g$syntax-violation$16124$T@1Mj
                          '#f
                          '"invalid syntax"
                          g$t$17034$T@1Mj))))
                   (g$syntax-dispatch$16005$T@1Mj
                     g$t$17034$T@1Mj
                     '(_ any)))))
               g$x$17033$T@1Mj))))))))
   (g$quasisyntax-macro$15997$T@1Mj
     g$quasisyntax-macro$19593$T@1Mj
     ((case-lambda
        (()
         (letrec* ((g$quasi$17143$T@1Mj
                     (case-lambda
                       ((g$p$17157$T@1Mj g$lev$17158$T@1Mj)
                        ((case-lambda
                           ((g$t$17159$T@1Mj)
                            ((case-lambda
                               ((g$ls/false$17160$T@1Mj)
                                (if g$ls/false$17160$T@1Mj
                                  (apply
                                    (case-lambda
                                      ((g$p$17161$T@1Mj)
                                       (if (= g$lev$17158$T@1Mj '0)
                                         ((case-lambda
                                            ((g$g$17162$T@1Mj)
                                             (values
                                               (list g$g$17162$T@1Mj)
                                               (list g$p$17161$T@1Mj)
                                               g$g$17162$T@1Mj)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$17143$T@1Mj
                                                g$p$17161$T@1Mj
                                                (- g$lev$17158$T@1Mj
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$17166$T@1Mj
                                                g$rhs*$17167$T@1Mj
                                                g$p$17168$T@1Mj)
                                              ((case-lambda
                                                 ((g$p$17169$T@1Mj
                                                    g$rhs*$17170$T@1Mj
                                                    g$lhs*$17171$T@1Mj)
                                                  (values
                                                    g$lhs*$17171$T@1Mj
                                                    g$rhs*$17170$T@1Mj
                                                    (list
                                                      'unsyntax
                                                      g$p$17169$T@1Mj))))
                                               g$p$17168$T@1Mj
                                               g$rhs*$17167$T@1Mj
                                               g$lhs*$17166$T@1Mj)))))))
                                    g$ls/false$17160$T@1Mj)
                                  ((case-lambda
                                     ((g$t$17172$T@1Mj)
                                      ((case-lambda
                                         ((g$ls/false$17173$T@1Mj)
                                          (if (if g$ls/false$17173$T@1Mj
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$17158$T@1Mj
                                                          '0)))
                                                    g$ls/false$17173$T@1Mj))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$16124$T@1Mj
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$17157$T@1Mj)))
                                              g$ls/false$17173$T@1Mj)
                                            ((case-lambda
                                               ((g$t$17174$T@1Mj)
                                                ((case-lambda
                                                   ((g$ls/false$17175$T@1Mj)
                                                    (if g$ls/false$17175$T@1Mj
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$17176$T@1Mj
                                                             g$q$17177$T@1Mj)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$17143$T@1Mj
                                                                  g$q$17177$T@1Mj
                                                                  g$lev$17158$T@1Mj)))
                                                             (case-lambda
                                                               ((g$lhs*$17181$T@1Mj
                                                                  g$rhs*$17182$T@1Mj
                                                                  g$q$17183$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$q$17184$T@1Mj
                                                                      g$rhs*$17185$T@1Mj
                                                                      g$lhs*$17186$T@1Mj)
                                                                    (if (= g$lev$17158$T@1Mj
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$17187$T@1Mj)
                                                                          (values
                                                                            (append
                                                                              g$g*$17187$T@1Mj
                                                                              g$lhs*$17186$T@1Mj)
                                                                            (append
                                                                              g$p*$17176$T@1Mj
                                                                              g$rhs*$17185$T@1Mj)
                                                                            (append
                                                                              g$g*$17187$T@1Mj
                                                                              g$q$17184$T@1Mj))))
                                                                       (g$map$11724$T@1Mj
                                                                         (case-lambda
                                                                           ((g$x$17188$T@1Mj)
                                                                            (gensym)))
                                                                         g$p*$17176$T@1Mj))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$17143$T@1Mj
                                                                             g$p*$17176$T@1Mj
                                                                             (- g$lev$17158$T@1Mj
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$17192$T@1Mj
                                                                             g$rhs2*$17193$T@1Mj
                                                                             g$p*$17194$T@1Mj)
                                                                           ((case-lambda
                                                                              ((g$p*$17195$T@1Mj
                                                                                 g$rhs2*$17196$T@1Mj
                                                                                 g$lhs2*$17197$T@1Mj)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$17197$T@1Mj
                                                                                   g$lhs*$17186$T@1Mj)
                                                                                 (append
                                                                                   g$rhs2*$17196$T@1Mj
                                                                                   g$rhs*$17185$T@1Mj)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$17195$T@1Mj)
                                                                                   g$q$17184$T@1Mj))))
                                                                            g$p*$17194$T@1Mj
                                                                            g$rhs2*$17193$T@1Mj
                                                                            g$lhs2*$17192$T@1Mj)))))))
                                                                 g$q$17183$T@1Mj
                                                                 g$rhs*$17182$T@1Mj
                                                                 g$lhs*$17181$T@1Mj))))))
                                                        g$ls/false$17175$T@1Mj)
                                                      ((case-lambda
                                                         ((g$t$17198$T@1Mj)
                                                          ((case-lambda
                                                             ((g$ls/false$17199$T@1Mj)
                                                              (if g$ls/false$17199$T@1Mj
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$17200$T@1Mj
                                                                       g$q$17201$T@1Mj)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$17143$T@1Mj
                                                                            g$q$17201$T@1Mj
                                                                            g$lev$17158$T@1Mj)))
                                                                       (case-lambda
                                                                         ((g$lhs*$17205$T@1Mj
                                                                            g$rhs*$17206$T@1Mj
                                                                            g$q$17207$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$q$17208$T@1Mj
                                                                                g$rhs*$17209$T@1Mj
                                                                                g$lhs*$17210$T@1Mj)
                                                                              (if (= g$lev$17158$T@1Mj
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$17211$T@1Mj)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11724$T@1Mj
                                                                                          (case-lambda
                                                                                            ((g$g$17212$T@1Mj)
                                                                                             (cons
                                                                                               g$g$17212$T@1Mj
                                                                                               '(...))))
                                                                                          g$g*$17211$T@1Mj)
                                                                                        g$lhs*$17210$T@1Mj)
                                                                                      (append
                                                                                        g$p*$17200$T@1Mj
                                                                                        g$rhs*$17209$T@1Mj)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11724$T@1Mj
                                                                                            (case-lambda
                                                                                              ((g$g$17213$T@1Mj)
                                                                                               (cons
                                                                                                 g$g$17213$T@1Mj
                                                                                                 '(...))))
                                                                                            g$g*$17211$T@1Mj))
                                                                                        g$q$17208$T@1Mj))))
                                                                                 (g$map$11724$T@1Mj
                                                                                   (case-lambda
                                                                                     ((g$x$17214$T@1Mj)
                                                                                      (gensym)))
                                                                                   g$p*$17200$T@1Mj))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$17143$T@1Mj
                                                                                       g$p*$17200$T@1Mj
                                                                                       (- g$lev$17158$T@1Mj
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$17218$T@1Mj
                                                                                       g$rhs2*$17219$T@1Mj
                                                                                       g$p*$17220$T@1Mj)
                                                                                     ((case-lambda
                                                                                        ((g$p*$17221$T@1Mj
                                                                                           g$rhs2*$17222$T@1Mj
                                                                                           g$lhs2*$17223$T@1Mj)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$17223$T@1Mj
                                                                                             g$lhs*$17210$T@1Mj)
                                                                                           (append
                                                                                             g$rhs2*$17222$T@1Mj
                                                                                             g$rhs*$17209$T@1Mj)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$17221$T@1Mj)
                                                                                             g$q$17208$T@1Mj))))
                                                                                      g$p*$17220$T@1Mj
                                                                                      g$rhs2*$17219$T@1Mj
                                                                                      g$lhs2*$17218$T@1Mj)))))))
                                                                           g$q$17207$T@1Mj
                                                                           g$rhs*$17206$T@1Mj
                                                                           g$lhs*$17205$T@1Mj))))))
                                                                  g$ls/false$17199$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$t$17224$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$17225$T@1Mj)
                                                                        (if (if g$ls/false$17225$T@1Mj
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$17158$T@1Mj
                                                                                        '0)))
                                                                                  g$ls/false$17225$T@1Mj))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$16124$T@1Mj
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$17157$T@1Mj)))
                                                                            g$ls/false$17225$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$17226$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$17227$T@1Mj)
                                                                                  (if g$ls/false$17227$T@1Mj
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$17228$T@1Mj)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$17143$T@1Mj
                                                                                                g$p$17228$T@1Mj
                                                                                                (+ g$lev$17158$T@1Mj
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$17232$T@1Mj
                                                                                                g$rhs*$17233$T@1Mj
                                                                                                g$p$17234$T@1Mj)
                                                                                              ((case-lambda
                                                                                                 ((g$p$17235$T@1Mj
                                                                                                    g$rhs*$17236$T@1Mj
                                                                                                    g$lhs*$17237$T@1Mj)
                                                                                                  (values
                                                                                                    g$lhs*$17237$T@1Mj
                                                                                                    g$rhs*$17236$T@1Mj
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$17235$T@1Mj))))
                                                                                               g$p$17234$T@1Mj
                                                                                               g$rhs*$17233$T@1Mj
                                                                                               g$lhs*$17232$T@1Mj))))))
                                                                                      g$ls/false$17227$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$t$17238$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$17239$T@1Mj)
                                                                                            (if g$ls/false$17239$T@1Mj
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$17240$T@1Mj
                                                                                                     g$q$17241$T@1Mj)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$17143$T@1Mj
                                                                                                          g$p$17240$T@1Mj
                                                                                                          g$lev$17158$T@1Mj)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$17248$T@1Mj
                                                                                                          g$rhs*$17249$T@1Mj
                                                                                                          g$p$17250$T@1Mj)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$17143$T@1Mj
                                                                                                               g$q$17241$T@1Mj
                                                                                                               g$lev$17158$T@1Mj)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$17251$T@1Mj
                                                                                                               g$rhs2*$17252$T@1Mj
                                                                                                               g$q$17253$T@1Mj)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$17254$T@1Mj
                                                                                                                   g$rhs2*$17255$T@1Mj
                                                                                                                   g$lhs2*$17256$T@1Mj
                                                                                                                   g$p$17257$T@1Mj
                                                                                                                   g$rhs*$17258$T@1Mj
                                                                                                                   g$lhs*$17259$T@1Mj)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$17256$T@1Mj
                                                                                                                     g$lhs*$17259$T@1Mj)
                                                                                                                   (append
                                                                                                                     g$rhs2*$17255$T@1Mj
                                                                                                                     g$rhs*$17258$T@1Mj)
                                                                                                                   (cons
                                                                                                                     g$p$17257$T@1Mj
                                                                                                                     g$q$17254$T@1Mj))))
                                                                                                              g$q$17253$T@1Mj
                                                                                                              g$rhs2*$17252$T@1Mj
                                                                                                              g$lhs2*$17251$T@1Mj
                                                                                                              g$p$17250$T@1Mj
                                                                                                              g$rhs*$17249$T@1Mj
                                                                                                              g$lhs*$17248$T@1Mj)))))))))
                                                                                                g$ls/false$17239$T@1Mj)
                                                                                              ((case-lambda
                                                                                                 ((g$t$17260$T@1Mj)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$17261$T@1Mj)
                                                                                                      (if g$ls/false$17261$T@1Mj
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$17262$T@1Mj)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$17143$T@1Mj
                                                                                                                    g$x*$17262$T@1Mj
                                                                                                                    g$lev$17158$T@1Mj)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$17266$T@1Mj
                                                                                                                    g$rhs*$17267$T@1Mj
                                                                                                                    g$x*$17268$T@1Mj)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$17269$T@1Mj
                                                                                                                        g$rhs*$17270$T@1Mj
                                                                                                                        g$lhs*$17271$T@1Mj)
                                                                                                                      (values
                                                                                                                        g$lhs*$17271$T@1Mj
                                                                                                                        g$rhs*$17270$T@1Mj
                                                                                                                        (g$list->vector$12462$T@1Mj
                                                                                                                          g$x*$17269$T@1Mj))))
                                                                                                                   g$x*$17268$T@1Mj
                                                                                                                   g$rhs*$17267$T@1Mj
                                                                                                                   g$lhs*$17266$T@1Mj))))))
                                                                                                          g$ls/false$17261$T@1Mj)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$17272$T@1Mj)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$17273$T@1Mj)
                                                                                                                (if g$ls/false$17273$T@1Mj
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$17157$T@1Mj)))
                                                                                                                    g$ls/false$17273$T@1Mj)
                                                                                                                  (g$syntax-violation$16124$T@1Mj
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$17272$T@1Mj))))
                                                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                                                               g$t$17272$T@1Mj
                                                                                                               '_))))
                                                                                                         g$t$17260$T@1Mj))))
                                                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                                                     g$t$17260$T@1Mj
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$17238$T@1Mj))))
                                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                                           g$t$17238$T@1Mj
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$17226$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$17226$T@1Mj
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$17224$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$17224$T@1Mj
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$17198$T@1Mj))))
                                                           (g$syntax-dispatch$16005$T@1Mj
                                                             g$t$17198$T@1Mj
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$17174$T@1Mj))))
                                                 (g$syntax-dispatch$16005$T@1Mj
                                                   g$t$17174$T@1Mj
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$17172$T@1Mj))))
                                       (g$syntax-dispatch$16005$T@1Mj
                                         g$t$17172$T@1Mj
                                         '#(scheme-id unsyntax)))))
                                   g$t$17159$T@1Mj))))
                             (g$syntax-dispatch$16005$T@1Mj
                               g$t$17159$T@1Mj
                               '(#(scheme-id unsyntax) any)))))
                         g$p$17157$T@1Mj)))))
           (case-lambda
             ((g$x$17144$T@1Mj)
              ((case-lambda
                 ((g$t$17145$T@1Mj)
                  ((case-lambda
                     ((g$ls/false$17146$T@1Mj)
                      (if g$ls/false$17146$T@1Mj
                        (apply
                          (case-lambda
                            ((g$e$17147$T@1Mj)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$17143$T@1Mj
                                    g$e$17147$T@1Mj
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$17151$T@1Mj
                                    g$rhs*$17152$T@1Mj
                                    g$v$17153$T@1Mj)
                                  ((case-lambda
                                     ((g$v$17154$T@1Mj
                                        g$rhs*$17155$T@1Mj
                                        g$lhs*$17156$T@1Mj)
                                      (g$bless$15968$T@1Mj
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$17155$T@1Mj)
                                          '()
                                          (list
                                            g$lhs*$17156$T@1Mj
                                            (list
                                              'syntax
                                              g$v$17154$T@1Mj))))))
                                   g$v$17153$T@1Mj
                                   g$rhs*$17152$T@1Mj
                                   g$lhs*$17151$T@1Mj))))))
                          g$ls/false$17146$T@1Mj)
                        (g$syntax-violation$16124$T@1Mj
                          '#f
                          '"invalid syntax"
                          g$t$17145$T@1Mj))))
                   (g$syntax-dispatch$16005$T@1Mj
                     g$t$17145$T@1Mj
                     '(_ any)))))
               g$x$17144$T@1Mj))))))))
   (g$define-struct-macro$15998$T@1Mj
     g$define-struct-macro$19594$T@1Mj
     (case-lambda
       ((g$stx$17274$T@1Mj)
        (g$syntax-violation$16124$T@1Mj
          '#f
          '"define-struct not supported"
          g$stx$17274$T@1Mj))))
   (g$define-record-type-macro$15999$T@1Mj
     g$define-record-type-macro$19595$T@1Mj
     (case-lambda
       ((g$x$17275$T@1Mj)
        (letrec* ((g$id$17276$T@1Mj
                    (case-lambda
                      ((g$ctxt$17528$T@1Mj . g$str*$17529$T@1Mj)
                       (g$datum->syntax$16126$T@1Mj
                         g$ctxt$17528$T@1Mj
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11724$T@1Mj
                               (case-lambda
                                 ((g$x$17530$T@1Mj)
                                  (if (g$symbol?$12467$T@1Mj
                                        g$x$17530$T@1Mj)
                                    (symbol->string g$x$17530$T@1Mj)
                                    (if (string? g$x$17530$T@1Mj)
                                      g$x$17530$T@1Mj
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$17529$T@1Mj)))))))
                  (g$get-record-name$17277$T@1Mj
                    (case-lambda
                      ((g$spec$17519$T@1Mj)
                       ((case-lambda
                          ((g$t$17520$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17521$T@1Mj)
                               (if g$ls/false$17521$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$foo$17522$T@1Mj
                                        g$make-foo$17523$T@1Mj
                                        g$foo?$17524$T@1Mj)
                                      g$foo$17522$T@1Mj))
                                   g$ls/false$17521$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17525$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17526$T@1Mj)
                                         (if g$ls/false$17526$T@1Mj
                                           (apply
                                             (case-lambda
                                               ((g$foo$17527$T@1Mj)
                                                g$foo$17527$T@1Mj))
                                             g$ls/false$17526$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17525$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17525$T@1Mj
                                        'any))))
                                  g$t$17520$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17520$T@1Mj
                              '(any any any)))))
                        g$spec$17519$T@1Mj))))
                  (g$get-record-constructor-name$17278$T@1Mj
                    (case-lambda
                      ((g$spec$17509$T@1Mj)
                       ((case-lambda
                          ((g$t$17510$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17511$T@1Mj)
                               (if g$ls/false$17511$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$foo$17512$T@1Mj
                                        g$make-foo$17513$T@1Mj
                                        g$foo?$17514$T@1Mj)
                                      g$make-foo$17513$T@1Mj))
                                   g$ls/false$17511$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17515$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17516$T@1Mj)
                                         (if (if g$ls/false$17516$T@1Mj
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$17517$T@1Mj)
                                                      (g$id?$15507$T@1Mj
                                                        g$foo$17517$T@1Mj)))
                                                   g$ls/false$17516$T@1Mj))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$17518$T@1Mj)
                                                (g$id$17276$T@1Mj
                                                  g$foo$17518$T@1Mj
                                                  '"make-"
                                                  (g$stx->datum$15518$T@1Mj
                                                    g$foo$17518$T@1Mj))))
                                             g$ls/false$17516$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17515$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17515$T@1Mj
                                        'any))))
                                  g$t$17510$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17510$T@1Mj
                              '(any any any)))))
                        g$spec$17509$T@1Mj))))
                  (g$get-record-predicate-name$17279$T@1Mj
                    (case-lambda
                      ((g$spec$17499$T@1Mj)
                       ((case-lambda
                          ((g$t$17500$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17501$T@1Mj)
                               (if g$ls/false$17501$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$foo$17502$T@1Mj
                                        g$make-foo$17503$T@1Mj
                                        g$foo?$17504$T@1Mj)
                                      g$foo?$17504$T@1Mj))
                                   g$ls/false$17501$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17505$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17506$T@1Mj)
                                         (if (if g$ls/false$17506$T@1Mj
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$17507$T@1Mj)
                                                      (g$id?$15507$T@1Mj
                                                        g$foo$17507$T@1Mj)))
                                                   g$ls/false$17506$T@1Mj))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$17508$T@1Mj)
                                                (g$id$17276$T@1Mj
                                                  g$foo$17508$T@1Mj
                                                  (g$stx->datum$15518$T@1Mj
                                                    g$foo$17508$T@1Mj)
                                                  '"?")))
                                             g$ls/false$17506$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17505$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17505$T@1Mj
                                        'any))))
                                  g$t$17500$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17500$T@1Mj
                              '(any any any)))))
                        g$spec$17499$T@1Mj))))
                  (g$get-clause$17280$T@1Mj
                    (case-lambda
                      ((g$id$17490$T@1Mj g$ls$17491$T@1Mj)
                       ((case-lambda
                          ((g$t$17492$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17493$T@1Mj)
                               (if g$ls/false$17493$T@1Mj
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$17493$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17494$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17495$T@1Mj)
                                         (if g$ls/false$17495$T@1Mj
                                           (apply
                                             (case-lambda
                                               ((g$x$17496$T@1Mj
                                                  g$rest$17497$T@1Mj
                                                  g$ls$17498$T@1Mj)
                                                (if (g$free-id=?$15511$T@1Mj
                                                      (g$bless$15968$T@1Mj
                                                        g$id$17490$T@1Mj)
                                                      g$x$17496$T@1Mj)
                                                  (cons
                                                    g$x$17496$T@1Mj
                                                    g$rest$17497$T@1Mj)
                                                  (g$get-clause$17280$T@1Mj
                                                    g$id$17490$T@1Mj
                                                    g$ls$17498$T@1Mj))))
                                             g$ls/false$17495$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17494$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17494$T@1Mj
                                        '((any . any) . any)))))
                                  g$t$17492$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17492$T@1Mj
                              '()))))
                        g$ls$17491$T@1Mj))))
                  (g$foo-rtd-code$17281$T@1Mj
                    (case-lambda
                      ((g$name$17449$T@1Mj
                         g$clause*$17450$T@1Mj
                         g$parent-rtd-code$17451$T@1Mj)
                       (letrec* ((g$convert-field-spec*$17452$T@1Mj
                                   (case-lambda
                                     ((g$ls$17477$T@1Mj)
                                      (g$list->vector$12462$T@1Mj
                                        (g$map$11724$T@1Mj
                                          (case-lambda
                                            ((g$x$17478$T@1Mj)
                                             ((case-lambda
                                                ((g$t$17479$T@1Mj)
                                                 ((case-lambda
                                                    ((g$ls/false$17480$T@1Mj)
                                                     (if g$ls/false$17480$T@1Mj
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$17481$T@1Mj
                                                              g$rest$17482$T@1Mj)
                                                            (list
                                                              'mutable
                                                              g$name$17481$T@1Mj)))
                                                         g$ls/false$17480$T@1Mj)
                                                       ((case-lambda
                                                          ((g$t$17483$T@1Mj)
                                                           ((case-lambda
                                                              ((g$ls/false$17484$T@1Mj)
                                                               (if g$ls/false$17484$T@1Mj
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$17485$T@1Mj
                                                                        g$rest$17486$T@1Mj)
                                                                      (list
                                                                        'immutable
                                                                        g$name$17485$T@1Mj)))
                                                                   g$ls/false$17484$T@1Mj)
                                                                 ((case-lambda
                                                                    ((g$t$17487$T@1Mj)
                                                                     ((case-lambda
                                                                        ((g$ls/false$17488$T@1Mj)
                                                                         (if g$ls/false$17488$T@1Mj
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$17489$T@1Mj)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$17489$T@1Mj)))
                                                                             g$ls/false$17488$T@1Mj)
                                                                           (g$syntax-violation$16124$T@1Mj
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$17487$T@1Mj))))
                                                                      (g$syntax-dispatch$16005$T@1Mj
                                                                        g$t$17487$T@1Mj
                                                                        'any))))
                                                                  g$t$17483$T@1Mj))))
                                                            (g$syntax-dispatch$16005$T@1Mj
                                                              g$t$17483$T@1Mj
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$17479$T@1Mj))))
                                                  (g$syntax-dispatch$16005$T@1Mj
                                                    g$t$17479$T@1Mj
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$17478$T@1Mj)))
                                          g$ls$17477$T@1Mj))))))
                         ((case-lambda
                            ((g$uid-code$17453$T@1Mj
                               g$sealed?$17454$T@1Mj
                               g$opaque?$17455$T@1Mj
                               g$fields$17456$T@1Mj)
                             (g$bless$15968$T@1Mj
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$17449$T@1Mj)
                                 g$parent-rtd-code$17451$T@1Mj
                                 g$uid-code$17453$T@1Mj
                                 g$sealed?$17454$T@1Mj
                                 g$opaque?$17455$T@1Mj
                                 g$fields$17456$T@1Mj))))
                          ((case-lambda
                             ((g$t$17457$T@1Mj)
                              ((case-lambda
                                 ((g$ls/false$17458$T@1Mj)
                                  (if g$ls/false$17458$T@1Mj
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$17458$T@1Mj)
                                    ((case-lambda
                                       ((g$t$17459$T@1Mj)
                                        ((case-lambda
                                           ((g$ls/false$17460$T@1Mj)
                                            (if g$ls/false$17460$T@1Mj
                                              (apply
                                                (case-lambda
                                                  ((g$uid$17461$T@1Mj)
                                                   (list
                                                     'quote
                                                     g$uid$17461$T@1Mj)))
                                                g$ls/false$17460$T@1Mj)
                                              ((case-lambda
                                                 ((g$t$17462$T@1Mj)
                                                  ((case-lambda
                                                     ((g$ls/false$17463$T@1Mj)
                                                      (if g$ls/false$17463$T@1Mj
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$17463$T@1Mj)
                                                        (g$syntax-violation$16124$T@1Mj
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$17462$T@1Mj))))
                                                   (g$syntax-dispatch$16005$T@1Mj
                                                     g$t$17462$T@1Mj
                                                     '_))))
                                               g$t$17459$T@1Mj))))
                                         (g$syntax-dispatch$16005$T@1Mj
                                           g$t$17459$T@1Mj
                                           '(_ any)))))
                                     g$t$17457$T@1Mj))))
                               (g$syntax-dispatch$16005$T@1Mj
                                 g$t$17457$T@1Mj
                                 '(_)))))
                           (g$get-clause$17280$T@1Mj
                             'nongenerative
                             g$clause*$17450$T@1Mj))
                          ((case-lambda
                             ((g$t$17464$T@1Mj)
                              ((case-lambda
                                 ((g$ls/false$17465$T@1Mj)
                                  (if g$ls/false$17465$T@1Mj
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$17465$T@1Mj)
                                    ((case-lambda
                                       ((g$t$17466$T@1Mj)
                                        ((case-lambda
                                           ((g$ls/false$17467$T@1Mj)
                                            (if g$ls/false$17467$T@1Mj
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$17467$T@1Mj)
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"invalid syntax"
                                                g$t$17466$T@1Mj))))
                                         (g$syntax-dispatch$16005$T@1Mj
                                           g$t$17466$T@1Mj
                                           '_))))
                                     g$t$17464$T@1Mj))))
                               (g$syntax-dispatch$16005$T@1Mj
                                 g$t$17464$T@1Mj
                                 '(_ #(atom #t))))))
                           (g$get-clause$17280$T@1Mj
                             'sealed
                             g$clause*$17450$T@1Mj))
                          ((case-lambda
                             ((g$t$17468$T@1Mj)
                              ((case-lambda
                                 ((g$ls/false$17469$T@1Mj)
                                  (if g$ls/false$17469$T@1Mj
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$17469$T@1Mj)
                                    ((case-lambda
                                       ((g$t$17470$T@1Mj)
                                        ((case-lambda
                                           ((g$ls/false$17471$T@1Mj)
                                            (if g$ls/false$17471$T@1Mj
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$17471$T@1Mj)
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"invalid syntax"
                                                g$t$17470$T@1Mj))))
                                         (g$syntax-dispatch$16005$T@1Mj
                                           g$t$17470$T@1Mj
                                           '_))))
                                     g$t$17468$T@1Mj))))
                               (g$syntax-dispatch$16005$T@1Mj
                                 g$t$17468$T@1Mj
                                 '(_ #(atom #t))))))
                           (g$get-clause$17280$T@1Mj
                             'opaque
                             g$clause*$17450$T@1Mj))
                          ((case-lambda
                             ((g$t$17472$T@1Mj)
                              ((case-lambda
                                 ((g$ls/false$17473$T@1Mj)
                                  (if g$ls/false$17473$T@1Mj
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$17474$T@1Mj)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$17452$T@1Mj
                                             g$field-spec*$17474$T@1Mj))))
                                      g$ls/false$17473$T@1Mj)
                                    ((case-lambda
                                       ((g$t$17475$T@1Mj)
                                        ((case-lambda
                                           ((g$ls/false$17476$T@1Mj)
                                            (if g$ls/false$17476$T@1Mj
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$17476$T@1Mj)
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"invalid syntax"
                                                g$t$17475$T@1Mj))))
                                         (g$syntax-dispatch$16005$T@1Mj
                                           g$t$17475$T@1Mj
                                           '_))))
                                     g$t$17472$T@1Mj))))
                               (g$syntax-dispatch$16005$T@1Mj
                                 g$t$17472$T@1Mj
                                 '(_ . each-any)))))
                           (g$get-clause$17280$T@1Mj
                             'fields
                             g$clause*$17450$T@1Mj)))))))
                  (g$parent-rtd-code$17282$T@1Mj
                    (case-lambda
                      ((g$clause*$17437$T@1Mj)
                       ((case-lambda
                          ((g$t$17438$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17439$T@1Mj)
                               (if g$ls/false$17439$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$name$17440$T@1Mj)
                                      (list
                                        'record-type-descriptor
                                        g$name$17440$T@1Mj)))
                                   g$ls/false$17439$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17441$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17442$T@1Mj)
                                         (if g$ls/false$17442$T@1Mj
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$17443$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$17444$T@1Mj)
                                                        (if g$ls/false$17444$T@1Mj
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$17445$T@1Mj
                                                                 g$rcd$17446$T@1Mj)
                                                               g$rtd$17445$T@1Mj))
                                                            g$ls/false$17444$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$17447$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$17448$T@1Mj)
                                                                  (if g$ls/false$17448$T@1Mj
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$17448$T@1Mj)
                                                                    (g$syntax-violation$16124$T@1Mj
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$17447$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$17447$T@1Mj
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$17443$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$17443$T@1Mj
                                                       '(_ any any)))))
                                                 (g$get-clause$17280$T@1Mj
                                                   'parent-rtd
                                                   g$clause*$17437$T@1Mj))))
                                             g$ls/false$17442$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17441$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17441$T@1Mj
                                        '#(atom #f)))))
                                  g$t$17438$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17438$T@1Mj
                              '(_ any)))))
                        (g$get-clause$17280$T@1Mj
                          'parent
                          g$clause*$17437$T@1Mj)))))
                  (g$parent-rcd-code$17283$T@1Mj
                    (case-lambda
                      ((g$clause*$17425$T@1Mj)
                       ((case-lambda
                          ((g$t$17426$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17427$T@1Mj)
                               (if g$ls/false$17427$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$name$17428$T@1Mj)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$17428$T@1Mj)))
                                   g$ls/false$17427$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17429$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17430$T@1Mj)
                                         (if g$ls/false$17430$T@1Mj
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$17431$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$17432$T@1Mj)
                                                        (if g$ls/false$17432$T@1Mj
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$17433$T@1Mj
                                                                 g$rcd$17434$T@1Mj)
                                                               g$rcd$17434$T@1Mj))
                                                            g$ls/false$17432$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$17435$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$17436$T@1Mj)
                                                                  (if g$ls/false$17436$T@1Mj
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$17436$T@1Mj)
                                                                    (g$syntax-violation$16124$T@1Mj
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$17435$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$17435$T@1Mj
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$17431$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$17431$T@1Mj
                                                       '(_ any any)))))
                                                 (g$get-clause$17280$T@1Mj
                                                   'parent-rtd
                                                   g$clause*$17425$T@1Mj))))
                                             g$ls/false$17430$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17429$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17429$T@1Mj
                                        '#(atom #f)))))
                                  g$t$17426$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17426$T@1Mj
                              '(_ any)))))
                        (g$get-clause$17280$T@1Mj
                          'parent
                          g$clause*$17425$T@1Mj)))))
                  (g$foo-rcd-code$17284$T@1Mj
                    (case-lambda
                      ((g$clause*$17421$T@1Mj
                         g$foo-rtd$17422$T@1Mj
                         g$protocol$17423$T@1Mj
                         g$parent-rcd-code$17424$T@1Mj)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$17422$T@1Mj
                         g$parent-rcd-code$17424$T@1Mj
                         g$protocol$17423$T@1Mj))))
                  (g$get-protocol-code$17285$T@1Mj
                    (case-lambda
                      ((g$clause*$17415$T@1Mj)
                       ((case-lambda
                          ((g$t$17416$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17417$T@1Mj)
                               (if g$ls/false$17417$T@1Mj
                                 (apply
                                   (case-lambda
                                     ((g$expr$17418$T@1Mj)
                                      g$expr$17418$T@1Mj))
                                   g$ls/false$17417$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17419$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17420$T@1Mj)
                                         (if g$ls/false$17420$T@1Mj
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$17420$T@1Mj)
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$t$17419$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17419$T@1Mj
                                        '_))))
                                  g$t$17416$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17416$T@1Mj
                              '(_ any)))))
                        (g$get-clause$17280$T@1Mj
                          'protocol
                          g$clause*$17415$T@1Mj)))))
                  (g$get-fields$17286$T@1Mj
                    (case-lambda
                      ((g$clause*$17406$T@1Mj)
                       ((case-lambda
                          ((g$t$17407$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17408$T@1Mj)
                               (if g$ls/false$17408$T@1Mj
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$17408$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17409$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17410$T@1Mj)
                                         (if g$ls/false$17410$T@1Mj
                                           (apply
                                             (case-lambda
                                               ((g$f*$17411$T@1Mj)
                                                g$f*$17411$T@1Mj))
                                             g$ls/false$17410$T@1Mj)
                                           ((case-lambda
                                              ((g$t$17412$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$17413$T@1Mj)
                                                   (if g$ls/false$17413$T@1Mj
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$17414$T@1Mj)
                                                          (g$get-fields$17286$T@1Mj
                                                            g$rest$17414$T@1Mj)))
                                                       g$ls/false$17413$T@1Mj)
                                                     (g$syntax-violation$16124$T@1Mj
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$17412$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$17412$T@1Mj
                                                  '(_ . any)))))
                                            g$t$17409$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17409$T@1Mj
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$17407$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17407$T@1Mj
                              '()))))
                        g$clause*$17406$T@1Mj))))
                  (g$get-mutator-indices$17287$T@1Mj
                    (case-lambda
                      ((g$fields$17394$T@1Mj)
                       ((letrec ((g$f$17395$T@1Mj
                                   (case-lambda
                                     ((g$fields$17396$T@1Mj
                                        g$i$17397$T@1Mj)
                                      ((case-lambda
                                         ((g$t$17398$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$17399$T@1Mj)
                                              (if g$ls/false$17399$T@1Mj
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$17399$T@1Mj)
                                                ((case-lambda
                                                   ((g$t$17400$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$17401$T@1Mj)
                                                        (if g$ls/false$17401$T@1Mj
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$17402$T@1Mj)
                                                               (cons
                                                                 g$i$17397$T@1Mj
                                                                 (g$f$17395$T@1Mj
                                                                   g$rest$17402$T@1Mj
                                                                   (+ g$i$17397$T@1Mj
                                                                      '1)))))
                                                            g$ls/false$17401$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$17403$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$17404$T@1Mj)
                                                                  (if g$ls/false$17404$T@1Mj
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$17405$T@1Mj)
                                                                         (g$f$17395$T@1Mj
                                                                           g$rest$17405$T@1Mj
                                                                           (+ g$i$17397$T@1Mj
                                                                              '1))))
                                                                      g$ls/false$17404$T@1Mj)
                                                                    (g$syntax-violation$16124$T@1Mj
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$17403$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$17403$T@1Mj
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$17400$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$17400$T@1Mj
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$17398$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$17398$T@1Mj
                                             '()))))
                                       g$fields$17396$T@1Mj)))))
                          g$f$17395$T@1Mj)
                        g$fields$17394$T@1Mj
                        '0))))
                  (g$get-mutators$17288$T@1Mj
                    (case-lambda
                      ((g$foo$17373$T@1Mj g$fields$17374$T@1Mj)
                       (letrec* ((g$gen-name$17375$T@1Mj
                                   (case-lambda
                                     ((g$x$17393$T@1Mj)
                                      (g$datum->syntax$16126$T@1Mj
                                        g$foo$17373$T@1Mj
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$16127$T@1Mj
                                                g$foo$17373$T@1Mj))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$16127$T@1Mj
                                                g$x$17393$T@1Mj))
                                            '"-set!")))))))
                         ((letrec ((g$f$17376$T@1Mj
                                     (case-lambda
                                       ((g$fields$17377$T@1Mj)
                                        ((case-lambda
                                           ((g$t$17378$T@1Mj)
                                            ((case-lambda
                                               ((g$ls/false$17379$T@1Mj)
                                                (if g$ls/false$17379$T@1Mj
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$17379$T@1Mj)
                                                  ((case-lambda
                                                     ((g$t$17380$T@1Mj)
                                                      ((case-lambda
                                                         ((g$ls/false$17381$T@1Mj)
                                                          (if g$ls/false$17381$T@1Mj
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$17382$T@1Mj
                                                                   g$accessor$17383$T@1Mj
                                                                   g$mutator$17384$T@1Mj
                                                                   g$rest$17385$T@1Mj)
                                                                 (cons
                                                                   g$mutator$17384$T@1Mj
                                                                   (g$f$17376$T@1Mj
                                                                     g$rest$17385$T@1Mj))))
                                                              g$ls/false$17381$T@1Mj)
                                                            ((case-lambda
                                                               ((g$t$17386$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$ls/false$17387$T@1Mj)
                                                                    (if g$ls/false$17387$T@1Mj
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$17388$T@1Mj
                                                                             g$rest$17389$T@1Mj)
                                                                           (cons
                                                                             (g$gen-name$17375$T@1Mj
                                                                               g$name$17388$T@1Mj)
                                                                             (g$f$17376$T@1Mj
                                                                               g$rest$17389$T@1Mj))))
                                                                        g$ls/false$17387$T@1Mj)
                                                                      ((case-lambda
                                                                         ((g$t$17390$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$ls/false$17391$T@1Mj)
                                                                              (if g$ls/false$17391$T@1Mj
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$17392$T@1Mj)
                                                                                     (g$f$17376$T@1Mj
                                                                                       g$rest$17392$T@1Mj)))
                                                                                  g$ls/false$17391$T@1Mj)
                                                                                (g$syntax-violation$16124$T@1Mj
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$17390$T@1Mj))))
                                                                           (g$syntax-dispatch$16005$T@1Mj
                                                                             g$t$17390$T@1Mj
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$17386$T@1Mj))))
                                                                 (g$syntax-dispatch$16005$T@1Mj
                                                                   g$t$17386$T@1Mj
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$17380$T@1Mj))))
                                                       (g$syntax-dispatch$16005$T@1Mj
                                                         g$t$17380$T@1Mj
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$17378$T@1Mj))))
                                             (g$syntax-dispatch$16005$T@1Mj
                                               g$t$17378$T@1Mj
                                               '()))))
                                         g$fields$17377$T@1Mj)))))
                            g$f$17376$T@1Mj)
                          g$fields$17374$T@1Mj)))))
                  (g$get-accessors$17289$T@1Mj
                    (case-lambda
                      ((g$foo$17339$T@1Mj g$fields$17340$T@1Mj)
                       (letrec* ((g$gen-name$17341$T@1Mj
                                   (case-lambda
                                     ((g$x$17372$T@1Mj)
                                      (g$datum->syntax$16126$T@1Mj
                                        g$foo$17339$T@1Mj
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$16127$T@1Mj
                                                g$foo$17339$T@1Mj))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$16127$T@1Mj
                                                g$x$17372$T@1Mj)))))))))
                         (g$map$11724$T@1Mj
                           (case-lambda
                             ((g$field$17342$T@1Mj)
                              ((case-lambda
                                 ((g$t$17343$T@1Mj)
                                  ((case-lambda
                                     ((g$ls/false$17344$T@1Mj)
                                      (if (if g$ls/false$17344$T@1Mj
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$17345$T@1Mj
                                                     g$accessor$17346$T@1Mj
                                                     g$mutator$17347$T@1Mj)
                                                   (g$id?$15507$T@1Mj
                                                     g$accessor$17346$T@1Mj)))
                                                g$ls/false$17344$T@1Mj))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$17348$T@1Mj
                                               g$accessor$17349$T@1Mj
                                               g$mutator$17350$T@1Mj)
                                             g$accessor$17349$T@1Mj))
                                          g$ls/false$17344$T@1Mj)
                                        ((case-lambda
                                           ((g$t$17351$T@1Mj)
                                            ((case-lambda
                                               ((g$ls/false$17352$T@1Mj)
                                                (if (if g$ls/false$17352$T@1Mj
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$17353$T@1Mj
                                                               g$accessor$17354$T@1Mj)
                                                             (g$id?$15507$T@1Mj
                                                               g$accessor$17354$T@1Mj)))
                                                          g$ls/false$17352$T@1Mj))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$17355$T@1Mj
                                                         g$accessor$17356$T@1Mj)
                                                       g$accessor$17356$T@1Mj))
                                                    g$ls/false$17352$T@1Mj)
                                                  ((case-lambda
                                                     ((g$t$17357$T@1Mj)
                                                      ((case-lambda
                                                         ((g$ls/false$17358$T@1Mj)
                                                          (if (if g$ls/false$17358$T@1Mj
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$17359$T@1Mj)
                                                                       (g$id?$15507$T@1Mj
                                                                         g$name$17359$T@1Mj)))
                                                                    g$ls/false$17358$T@1Mj))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$17360$T@1Mj)
                                                                 (g$gen-name$17341$T@1Mj
                                                                   g$name$17360$T@1Mj)))
                                                              g$ls/false$17358$T@1Mj)
                                                            ((case-lambda
                                                               ((g$t$17361$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$ls/false$17362$T@1Mj)
                                                                    (if (if g$ls/false$17362$T@1Mj
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$17363$T@1Mj)
                                                                                 (g$id?$15507$T@1Mj
                                                                                   g$name$17363$T@1Mj)))
                                                                              g$ls/false$17362$T@1Mj))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$17364$T@1Mj)
                                                                           (g$gen-name$17341$T@1Mj
                                                                             g$name$17364$T@1Mj)))
                                                                        g$ls/false$17362$T@1Mj)
                                                                      ((case-lambda
                                                                         ((g$t$17365$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$ls/false$17366$T@1Mj)
                                                                              (if (if g$ls/false$17366$T@1Mj
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$17367$T@1Mj)
                                                                                           (g$id?$15507$T@1Mj
                                                                                             g$name$17367$T@1Mj)))
                                                                                        g$ls/false$17366$T@1Mj))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$17368$T@1Mj)
                                                                                     (g$gen-name$17341$T@1Mj
                                                                                       g$name$17368$T@1Mj)))
                                                                                  g$ls/false$17366$T@1Mj)
                                                                                ((case-lambda
                                                                                   ((g$t$17369$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$17370$T@1Mj)
                                                                                        (if g$ls/false$17370$T@1Mj
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$17371$T@1Mj)
                                                                                               (g$syntax-violation$16124$T@1Mj
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$17342$T@1Mj)))
                                                                                            g$ls/false$17370$T@1Mj)
                                                                                          (g$syntax-violation$16124$T@1Mj
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$17369$T@1Mj))))
                                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                                       g$t$17369$T@1Mj
                                                                                       'any))))
                                                                                 g$t$17365$T@1Mj))))
                                                                           (g$syntax-dispatch$16005$T@1Mj
                                                                             g$t$17365$T@1Mj
                                                                             'any))))
                                                                       g$t$17361$T@1Mj))))
                                                                 (g$syntax-dispatch$16005$T@1Mj
                                                                   g$t$17361$T@1Mj
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$17357$T@1Mj))))
                                                       (g$syntax-dispatch$16005$T@1Mj
                                                         g$t$17357$T@1Mj
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$17351$T@1Mj))))
                                             (g$syntax-dispatch$16005$T@1Mj
                                               g$t$17351$T@1Mj
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$17343$T@1Mj))))
                                   (g$syntax-dispatch$16005$T@1Mj
                                     g$t$17343$T@1Mj
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$17342$T@1Mj)))
                           g$fields$17340$T@1Mj)))))
                  (g$enumerate$17290$T@1Mj
                    (case-lambda
                      ((g$ls$17335$T@1Mj)
                       ((letrec ((g$f$17336$T@1Mj
                                   (case-lambda
                                     ((g$ls$17337$T@1Mj g$i$17338$T@1Mj)
                                      (if (null? g$ls$17337$T@1Mj)
                                        '()
                                        (cons
                                          g$i$17338$T@1Mj
                                          (g$f$17336$T@1Mj
                                            (cdr g$ls$17337$T@1Mj)
                                            (+ g$i$17338$T@1Mj
                                               '1))))))))
                          g$f$17336$T@1Mj)
                        g$ls$17335$T@1Mj
                        '0))))
                  (g$do-define-record$17291$T@1Mj
                    (case-lambda
                      ((g$namespec$17315$T@1Mj g$clause*$17316$T@1Mj)
                       ((case-lambda
                          ((g$foo$17317$T@1Mj)
                           ((case-lambda
                              ((g$foo-rtd$17318$T@1Mj)
                               ((case-lambda
                                  ((g$foo-rcd$17319$T@1Mj)
                                   ((case-lambda
                                      ((g$protocol$17320$T@1Mj)
                                       ((case-lambda
                                          ((g$make-foo$17321$T@1Mj)
                                           ((case-lambda
                                              ((g$fields$17322$T@1Mj)
                                               ((case-lambda
                                                  ((g$idx*$17323$T@1Mj)
                                                   ((case-lambda
                                                      ((g$foo-x*$17324$T@1Mj)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$17325$T@1Mj)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$17326$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$foo?$17327$T@1Mj)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$17328$T@1Mj)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$17329$T@1Mj)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$17330$T@1Mj)
                                                                               (g$bless$15968$T@1Mj
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$17318$T@1Mj
                                                                                       g$foo-rtd-code$17328$T@1Mj)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$17320$T@1Mj
                                                                                         g$protocol-code$17330$T@1Mj)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$17319$T@1Mj
                                                                                           g$foo-rcd-code$17329$T@1Mj)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$17317$T@1Mj
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$17318$T@1Mj)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$17319$T@1Mj)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$17327$T@1Mj
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$17318$T@1Mj))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$17321$T@1Mj
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$17319$T@1Mj))
                                                                                               (append
                                                                                                 (g$map$11724$T@1Mj
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$17331$T@1Mj
                                                                                                        g$idx$17332$T@1Mj)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$17331$T@1Mj
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$17318$T@1Mj
                                                                                                          g$idx$17332$T@1Mj))))
                                                                                                   g$foo-x*$17324$T@1Mj
                                                                                                   g$idx*$17323$T@1Mj)
                                                                                                 (g$map$11724$T@1Mj
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$17333$T@1Mj
                                                                                                        g$idx$17334$T@1Mj)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$17333$T@1Mj
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$17318$T@1Mj
                                                                                                          g$idx$17334$T@1Mj))))
                                                                                                   g$set-foo-x!*$17325$T@1Mj
                                                                                                   g$set-foo-idx*$17326$T@1Mj))))))))))))
                                                                            (g$get-protocol-code$17285$T@1Mj
                                                                              g$clause*$17316$T@1Mj))))
                                                                        (g$foo-rcd-code$17284$T@1Mj
                                                                          g$clause*$17316$T@1Mj
                                                                          g$foo-rtd$17318$T@1Mj
                                                                          g$protocol$17320$T@1Mj
                                                                          (g$parent-rcd-code$17283$T@1Mj
                                                                            g$clause*$17316$T@1Mj)))))
                                                                    (g$foo-rtd-code$17281$T@1Mj
                                                                      g$foo$17317$T@1Mj
                                                                      g$clause*$17316$T@1Mj
                                                                      (g$parent-rtd-code$17282$T@1Mj
                                                                        g$clause*$17316$T@1Mj)))))
                                                                (g$get-record-predicate-name$17279$T@1Mj
                                                                  g$namespec$17315$T@1Mj))))
                                                            (g$get-mutator-indices$17287$T@1Mj
                                                              g$fields$17322$T@1Mj))))
                                                        (g$get-mutators$17288$T@1Mj
                                                          g$foo$17317$T@1Mj
                                                          g$fields$17322$T@1Mj))))
                                                    (g$get-accessors$17289$T@1Mj
                                                      g$foo$17317$T@1Mj
                                                      g$fields$17322$T@1Mj))))
                                                (g$enumerate$17290$T@1Mj
                                                  g$fields$17322$T@1Mj))))
                                            (g$get-fields$17286$T@1Mj
                                              g$clause*$17316$T@1Mj))))
                                        (g$get-record-constructor-name$17278$T@1Mj
                                          g$namespec$17315$T@1Mj))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$17277$T@1Mj
                          g$namespec$17315$T@1Mj)))))
                  (g$verify-clauses$17292$T@1Mj
                    (case-lambda
                      ((g$x$17297$T@1Mj g$cls*$17298$T@1Mj)
                       (letrec* ((g$valid-kwds$17299$T@1Mj
                                   (g$map$11724$T@1Mj
                                     g$bless$15968$T@1Mj
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$17300$T@1Mj
                                   (case-lambda
                                     ((g$x$17312$T@1Mj g$ls$17313$T@1Mj)
                                      (if (pair? g$ls$17313$T@1Mj)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$17314$T@1Mj)
                                              (if g$t$17314$T@1Mj
                                                g$t$17314$T@1Mj
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$17300$T@1Mj
                                                    g$x$17312$T@1Mj
                                                    (cdr g$ls$17313$T@1Mj))))))
                                           (g$free-id=?$15511$T@1Mj
                                             g$x$17312$T@1Mj
                                             (car g$ls$17313$T@1Mj))))
                                        '#f)))))
                         ((letrec ((g$f$17301$T@1Mj
                                     (case-lambda
                                       ((g$cls*$17302$T@1Mj
                                          g$seen*$17303$T@1Mj)
                                        (if (not (null?
                                                   g$cls*$17302$T@1Mj))
                                          ((case-lambda
                                             ((g$t$17304$T@1Mj)
                                              ((case-lambda
                                                 ((g$ls/false$17305$T@1Mj)
                                                  (if g$ls/false$17305$T@1Mj
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$17306$T@1Mj
                                                           g$rest$17307$T@1Mj)
                                                         (if ((case-lambda
                                                                ((g$t$17308$T@1Mj)
                                                                 (if g$t$17308$T@1Mj
                                                                   g$t$17308$T@1Mj
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$17300$T@1Mj
                                                                            g$kwd$17306$T@1Mj
                                                                            g$valid-kwds$17299$T@1Mj))))))
                                                              (not (g$id?$15507$T@1Mj
                                                                     g$kwd$17306$T@1Mj)))
                                                           (g$syntax-violation$16124$T@1Mj
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$17306$T@1Mj)
                                                           (if (g$bound-id-member?$15514$T@1Mj
                                                                 g$kwd$17306$T@1Mj
                                                                 g$seen*$17303$T@1Mj)
                                                             (g$syntax-violation$16124$T@1Mj
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$17297$T@1Mj
                                                               g$kwd$17306$T@1Mj)
                                                             (g$f$17301$T@1Mj
                                                               (cdr g$cls*$17302$T@1Mj)
                                                               (cons
                                                                 g$kwd$17306$T@1Mj
                                                                 g$seen*$17303$T@1Mj))))))
                                                      g$ls/false$17305$T@1Mj)
                                                    ((case-lambda
                                                       ((g$t$17309$T@1Mj)
                                                        ((case-lambda
                                                           ((g$ls/false$17310$T@1Mj)
                                                            (if g$ls/false$17310$T@1Mj
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$17311$T@1Mj)
                                                                   (g$syntax-violation$16124$T@1Mj
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$17311$T@1Mj)))
                                                                g$ls/false$17310$T@1Mj)
                                                              (g$syntax-violation$16124$T@1Mj
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$17309$T@1Mj))))
                                                         (g$syntax-dispatch$16005$T@1Mj
                                                           g$t$17309$T@1Mj
                                                           'any))))
                                                     g$t$17304$T@1Mj))))
                                               (g$syntax-dispatch$16005$T@1Mj
                                                 g$t$17304$T@1Mj
                                                 '(any . any)))))
                                           (car g$cls*$17302$T@1Mj))
                                          (void))))))
                            g$f$17301$T@1Mj)
                          g$cls*$17298$T@1Mj
                          '()))))))
          ((case-lambda
             ((g$t$17293$T@1Mj)
              ((case-lambda
                 ((g$ls/false$17294$T@1Mj)
                  (if g$ls/false$17294$T@1Mj
                    (apply
                      (case-lambda
                        ((g$namespec$17295$T@1Mj g$clause*$17296$T@1Mj)
                         (begin
                           (g$verify-clauses$17292$T@1Mj
                             g$x$17275$T@1Mj
                             g$clause*$17296$T@1Mj)
                           (g$do-define-record$17291$T@1Mj
                             g$namespec$17295$T@1Mj
                             g$clause*$17296$T@1Mj))))
                      g$ls/false$17294$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$17293$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$17293$T@1Mj
                 '(_ any . each-any)))))
           g$x$17275$T@1Mj)))))
   (g$define-condition-type-macro$16000$T@1Mj
     g$define-condition-type-macro$19596$T@1Mj
     (case-lambda
       ((g$x$17531$T@1Mj)
        (letrec* ((g$mkname$17532$T@1Mj
                    (case-lambda
                      ((g$name$17555$T@1Mj g$suffix$17556$T@1Mj)
                       (g$datum->syntax$16126$T@1Mj
                         g$name$17555$T@1Mj
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$16127$T@1Mj
                                 g$name$17555$T@1Mj))
                             g$suffix$17556$T@1Mj)))))))
          ((case-lambda
             ((g$t$17533$T@1Mj)
              ((case-lambda
                 ((g$ls/false$17534$T@1Mj)
                  (if (if g$ls/false$17534$T@1Mj
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$17535$T@1Mj
                                 g$name$17536$T@1Mj
                                 g$super$17537$T@1Mj
                                 g$constructor$17538$T@1Mj
                                 g$predicate$17539$T@1Mj
                                 g$field*$17540$T@1Mj
                                 g$accessor*$17541$T@1Mj)
                               (if (g$id?$15507$T@1Mj
                                     g$name$17536$T@1Mj)
                                 (if (g$id?$15507$T@1Mj
                                       g$super$17537$T@1Mj)
                                   (if (g$id?$15507$T@1Mj
                                         g$constructor$17538$T@1Mj)
                                     (if (g$id?$15507$T@1Mj
                                           g$predicate$17539$T@1Mj)
                                       (if (g$for-all$11722$T@1Mj
                                             g$id?$15507$T@1Mj
                                             g$field*$17540$T@1Mj)
                                         (begin
                                           '#f
                                           (g$for-all$11722$T@1Mj
                                             g$id?$15507$T@1Mj
                                             g$accessor*$17541$T@1Mj))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$17534$T@1Mj))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$17542$T@1Mj
                           g$name$17543$T@1Mj
                           g$super$17544$T@1Mj
                           g$constructor$17545$T@1Mj
                           g$predicate$17546$T@1Mj
                           g$field*$17547$T@1Mj
                           g$accessor*$17548$T@1Mj)
                         ((case-lambda
                            ((g$aux-accessor*$17549$T@1Mj)
                             (g$bless$15968$T@1Mj
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$17543$T@1Mj
                                         g$constructor$17545$T@1Mj
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$17544$T@1Mj)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11724$T@1Mj
                                               (case-lambda
                                                 ((g$field$17550$T@1Mj
                                                    g$aux$17551$T@1Mj)
                                                  (list
                                                    'immutable
                                                    g$field$17550$T@1Mj
                                                    g$aux$17551$T@1Mj)))
                                               g$field*$17547$T@1Mj
                                               g$aux-accessor*$17549$T@1Mj))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$17546$T@1Mj
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$17543$T@1Mj)))
                                     (g$map$11724$T@1Mj
                                       (case-lambda
                                         ((g$accessor$17552$T@1Mj
                                            g$aux$17553$T@1Mj)
                                          (list
                                            'define
                                            g$accessor$17552$T@1Mj
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$17543$T@1Mj)
                                              g$aux$17553$T@1Mj))))
                                       g$accessor*$17548$T@1Mj
                                       g$aux-accessor*$17549$T@1Mj)))))))
                          (g$map$11724$T@1Mj
                            (case-lambda ((g$x$17554$T@1Mj) (gensym)))
                            g$accessor*$17548$T@1Mj))))
                      g$ls/false$17534$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$17533$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$17533$T@1Mj
                 '(any any any any any . #(each (any any)))))))
           g$x$17531$T@1Mj)))))
   (g$incorrect-usage-macro$16001$T@1Mj
     g$incorrect-usage-macro$19597$T@1Mj
     (case-lambda
       ((g$e$17557$T@1Mj)
        (g$syntax-violation$16124$T@1Mj
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$17557$T@1Mj))))
   (g$parameterize-macro$16002$T@1Mj
     g$parameterize-macro$19598$T@1Mj
     (case-lambda
       ((g$e$17558$T@1Mj)
        ((case-lambda
           ((g$t$17559$T@1Mj)
            ((case-lambda
               ((g$ls/false$17560$T@1Mj)
                (if g$ls/false$17560$T@1Mj
                  (apply
                    (case-lambda
                      ((g$b$17561$T@1Mj g$b*$17562$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$17561$T@1Mj
                               g$b*$17562$T@1Mj))))))
                    g$ls/false$17560$T@1Mj)
                  ((case-lambda
                     ((g$t$17563$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$17564$T@1Mj)
                          (if g$ls/false$17564$T@1Mj
                            (apply
                              (case-lambda
                                ((g$olhs*$17565$T@1Mj
                                   g$orhs*$17566$T@1Mj
                                   g$b$17567$T@1Mj
                                   g$b*$17568$T@1Mj)
                                 ((case-lambda
                                    ((g$lhs*$17569$T@1Mj
                                       g$rhs*$17570$T@1Mj)
                                     (g$bless$15968$T@1Mj
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$17569$T@1Mj
                                             g$rhs*$17570$T@1Mj)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11724$T@1Mj
                                                       (case-lambda
                                                         ((g$lhs$17571$T@1Mj
                                                            g$rhs$17572$T@1Mj)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$17571$T@1Mj)))
                                                            (list
                                                              g$lhs$17571$T@1Mj
                                                              g$rhs$17572$T@1Mj)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$17572$T@1Mj
                                                                '(t))))))
                                                       g$lhs*$17569$T@1Mj
                                                       g$rhs*$17570$T@1Mj)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$17567$T@1Mj
                                                         g$b*$17568$T@1Mj)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$17565$T@1Mj
                                           g$orhs*$17566$T@1Mj)))))
                                  (g$generate-temporaries$16114$T@1Mj
                                    g$olhs*$17565$T@1Mj)
                                  (g$generate-temporaries$16114$T@1Mj
                                    g$orhs*$17566$T@1Mj))))
                              g$ls/false$17564$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$17563$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$17563$T@1Mj
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$17559$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$17559$T@1Mj
               '(_ () any . each-any)))))
         g$e$17558$T@1Mj))))
   (g$foreign-call-transformer$16003$T@1Mj
     g$foreign-call-transformer$19599$T@1Mj
     (case-lambda
       ((g$e$17573$T@1Mj g$r$17574$T@1Mj g$mr$17575$T@1Mj)
        ((case-lambda
           ((g$t$17576$T@1Mj)
            ((case-lambda
               ((g$ls/false$17577$T@1Mj)
                (if g$ls/false$17577$T@1Mj
                  (apply
                    (case-lambda
                      ((g$name$17578$T@1Mj g$arg*$17579$T@1Mj)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$16023$T@1Mj
                             g$name$17578$T@1Mj
                             g$r$17574$T@1Mj
                             g$mr$17575$T@1Mj)
                           (g$chi-expr*$16021$T@1Mj
                             g$arg*$17579$T@1Mj
                             g$r$17574$T@1Mj
                             g$mr$17575$T@1Mj)))))
                    g$ls/false$17577$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$17576$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$17576$T@1Mj
               '(_ any . each-any)))))
         g$e$17573$T@1Mj))))
   (g$convert-pattern$16004$T@1Mj
     g$convert-pattern$19600$T@1Mj
     (case-lambda
       ((g$pattern$17580$T@1Mj g$keys$17581$T@1Mj)
        (letrec* ((g$cvt*$17582$T@1Mj
                    (case-lambda
                      ((g$p*$17662$T@1Mj
                         g$n$17663$T@1Mj
                         g$ids$17664$T@1Mj)
                       (if (null? g$p*$17662$T@1Mj)
                         (values '() g$ids$17664$T@1Mj)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$17582$T@1Mj
                                (cdr g$p*$17662$T@1Mj)
                                g$n$17663$T@1Mj
                                g$ids$17664$T@1Mj)))
                           (case-lambda
                             ((g$y$17667$T@1Mj g$ids$17668$T@1Mj)
                              ((case-lambda
                                 ((g$ids$17669$T@1Mj g$y$17670$T@1Mj)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$17583$T@1Mj
                                         (car g$p*$17662$T@1Mj)
                                         g$n$17663$T@1Mj
                                         g$ids$17669$T@1Mj)))
                                    (case-lambda
                                      ((g$x$17673$T@1Mj
                                         g$ids$17674$T@1Mj)
                                       ((case-lambda
                                          ((g$ids$17675$T@1Mj
                                             g$x$17676$T@1Mj)
                                           (values
                                             (cons
                                               g$x$17676$T@1Mj
                                               g$y$17670$T@1Mj)
                                             g$ids$17675$T@1Mj)))
                                        g$ids$17674$T@1Mj
                                        g$x$17673$T@1Mj))))))
                               g$ids$17668$T@1Mj
                               g$y$17667$T@1Mj))))))))
                  (g$cvt$17583$T@1Mj
                    (case-lambda
                      ((g$p$17584$T@1Mj
                         g$n$17585$T@1Mj
                         g$ids$17586$T@1Mj)
                       ((case-lambda
                          ((g$t$17587$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$17588$T@1Mj)
                               (if (if g$ls/false$17588$T@1Mj
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$17589$T@1Mj)
                                            (g$id?$15507$T@1Mj
                                              g$id$17589$T@1Mj)))
                                         g$ls/false$17588$T@1Mj))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$17590$T@1Mj)
                                      (if (g$bound-id-member?$15514$T@1Mj
                                            g$p$17584$T@1Mj
                                            g$keys$17581$T@1Mj)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$17584$T@1Mj)
                                          g$ids$17586$T@1Mj)
                                        (if (g$free-id=?$15511$T@1Mj
                                              g$p$17584$T@1Mj
                                              (g$scheme-stx$15948$T@1Mj
                                                '_))
                                          (values '_ g$ids$17586$T@1Mj)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$17584$T@1Mj
                                                g$n$17585$T@1Mj)
                                              g$ids$17586$T@1Mj))))))
                                   g$ls/false$17588$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17591$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$17592$T@1Mj)
                                         (if (if g$ls/false$17592$T@1Mj
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$17593$T@1Mj
                                                        g$dots$17594$T@1Mj)
                                                      (g$ellipsis?$16006$T@1Mj
                                                        g$dots$17594$T@1Mj)))
                                                   g$ls/false$17592$T@1Mj))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$17595$T@1Mj
                                                  g$dots$17596$T@1Mj)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$17583$T@1Mj
                                                       g$p$17595$T@1Mj
                                                       (+ g$n$17585$T@1Mj
                                                          '1)
                                                       g$ids$17586$T@1Mj)))
                                                  (case-lambda
                                                    ((g$p$17599$T@1Mj
                                                       g$ids$17600$T@1Mj)
                                                     ((case-lambda
                                                        ((g$ids$17601$T@1Mj
                                                           g$p$17602$T@1Mj)
                                                         (values
                                                           (if (eq? g$p$17602$T@1Mj
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$17602$T@1Mj))
                                                           g$ids$17601$T@1Mj)))
                                                      g$ids$17600$T@1Mj
                                                      g$p$17599$T@1Mj))))))
                                             g$ls/false$17592$T@1Mj)
                                           ((case-lambda
                                              ((g$t$17603$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$17604$T@1Mj)
                                                   (if (if g$ls/false$17604$T@1Mj
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$17605$T@1Mj
                                                                  g$dots$17606$T@1Mj
                                                                  g$ys$17607$T@1Mj
                                                                  g$z$17608$T@1Mj)
                                                                (g$ellipsis?$16006$T@1Mj
                                                                  g$dots$17606$T@1Mj)))
                                                             g$ls/false$17604$T@1Mj))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$17609$T@1Mj
                                                            g$dots$17610$T@1Mj
                                                            g$ys$17611$T@1Mj
                                                            g$z$17612$T@1Mj)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$17583$T@1Mj
                                                                 g$z$17612$T@1Mj
                                                                 g$n$17585$T@1Mj
                                                                 g$ids$17586$T@1Mj)))
                                                            (case-lambda
                                                              ((g$z$17615$T@1Mj
                                                                 g$ids$17616$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$ids$17617$T@1Mj
                                                                     g$z$17618$T@1Mj)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$17582$T@1Mj
                                                                          g$ys$17611$T@1Mj
                                                                          g$n$17585$T@1Mj
                                                                          g$ids$17617$T@1Mj)))
                                                                     (case-lambda
                                                                       ((g$ys$17621$T@1Mj
                                                                          g$ids$17622$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ids$17623$T@1Mj
                                                                              g$ys$17624$T@1Mj)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$17583$T@1Mj
                                                                                   g$x$17609$T@1Mj
                                                                                   (+ g$n$17585$T@1Mj
                                                                                      '1)
                                                                                   g$ids$17623$T@1Mj)))
                                                                              (case-lambda
                                                                                ((g$x$17627$T@1Mj
                                                                                   g$ids$17628$T@1Mj)
                                                                                 ((case-lambda
                                                                                    ((g$ids$17629$T@1Mj
                                                                                       g$x$17630$T@1Mj)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$17630$T@1Mj
                                                                                         (g$reverse$12475$T@1Mj
                                                                                           g$ys$17624$T@1Mj)
                                                                                         g$z$17618$T@1Mj)
                                                                                       g$ids$17629$T@1Mj)))
                                                                                  g$ids$17628$T@1Mj
                                                                                  g$x$17627$T@1Mj))))))
                                                                         g$ids$17622$T@1Mj
                                                                         g$ys$17621$T@1Mj))))))
                                                                g$ids$17616$T@1Mj
                                                                g$z$17615$T@1Mj))))))
                                                       g$ls/false$17604$T@1Mj)
                                                     ((case-lambda
                                                        ((g$t$17631$T@1Mj)
                                                         ((case-lambda
                                                            ((g$ls/false$17632$T@1Mj)
                                                             (if g$ls/false$17632$T@1Mj
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$17633$T@1Mj
                                                                      g$y$17634$T@1Mj)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$17583$T@1Mj
                                                                           g$y$17634$T@1Mj
                                                                           g$n$17585$T@1Mj
                                                                           g$ids$17586$T@1Mj)))
                                                                      (case-lambda
                                                                        ((g$y$17637$T@1Mj
                                                                           g$ids$17638$T@1Mj)
                                                                         ((case-lambda
                                                                            ((g$ids$17639$T@1Mj
                                                                               g$y$17640$T@1Mj)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$17583$T@1Mj
                                                                                    g$x$17633$T@1Mj
                                                                                    g$n$17585$T@1Mj
                                                                                    g$ids$17639$T@1Mj)))
                                                                               (case-lambda
                                                                                 ((g$x$17643$T@1Mj
                                                                                    g$ids$17644$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$ids$17645$T@1Mj
                                                                                        g$x$17646$T@1Mj)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$17646$T@1Mj
                                                                                          g$y$17640$T@1Mj)
                                                                                        g$ids$17645$T@1Mj)))
                                                                                   g$ids$17644$T@1Mj
                                                                                   g$x$17643$T@1Mj))))))
                                                                          g$ids$17638$T@1Mj
                                                                          g$y$17637$T@1Mj))))))
                                                                 g$ls/false$17632$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$t$17647$T@1Mj)
                                                                   ((case-lambda
                                                                      ((g$ls/false$17648$T@1Mj)
                                                                       (if g$ls/false$17648$T@1Mj
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$17586$T@1Mj)))
                                                                           g$ls/false$17648$T@1Mj)
                                                                         ((case-lambda
                                                                            ((g$t$17649$T@1Mj)
                                                                             ((case-lambda
                                                                                ((g$ls/false$17650$T@1Mj)
                                                                                 (if (if g$ls/false$17650$T@1Mj
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$17651$T@1Mj)
                                                                                              (not (g$stx?$15479$T@1Mj
                                                                                                     g$p$17651$T@1Mj))))
                                                                                           g$ls/false$17650$T@1Mj))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$17652$T@1Mj)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$17583$T@1Mj
                                                                                               g$p$17652$T@1Mj
                                                                                               g$n$17585$T@1Mj
                                                                                               g$ids$17586$T@1Mj)))
                                                                                          (case-lambda
                                                                                            ((g$p$17655$T@1Mj
                                                                                               g$ids$17656$T@1Mj)
                                                                                             ((case-lambda
                                                                                                ((g$ids$17657$T@1Mj
                                                                                                   g$p$17658$T@1Mj)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$17658$T@1Mj)
                                                                                                   g$ids$17657$T@1Mj)))
                                                                                              g$ids$17656$T@1Mj
                                                                                              g$p$17655$T@1Mj))))))
                                                                                     g$ls/false$17650$T@1Mj)
                                                                                   ((case-lambda
                                                                                      ((g$t$17659$T@1Mj)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$17660$T@1Mj)
                                                                                           (if g$ls/false$17660$T@1Mj
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$17661$T@1Mj)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$15518$T@1Mj
                                                                                                        g$datum$17661$T@1Mj))
                                                                                                    g$ids$17586$T@1Mj)))
                                                                                               g$ls/false$17660$T@1Mj)
                                                                                             (g$syntax-violation$16124$T@1Mj
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$17659$T@1Mj))))
                                                                                        (g$syntax-dispatch$16005$T@1Mj
                                                                                          g$t$17659$T@1Mj
                                                                                          'any))))
                                                                                    g$t$17649$T@1Mj))))
                                                                              (g$syntax-dispatch$16005$T@1Mj
                                                                                g$t$17649$T@1Mj
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$17647$T@1Mj))))
                                                                    (g$syntax-dispatch$16005$T@1Mj
                                                                      g$t$17647$T@1Mj
                                                                      '()))))
                                                                g$t$17631$T@1Mj))))
                                                          (g$syntax-dispatch$16005$T@1Mj
                                                            g$t$17631$T@1Mj
                                                            '(any .
                                                                  any)))))
                                                      g$t$17603$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$17603$T@1Mj
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$17591$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$17591$T@1Mj
                                        '(any any)))))
                                  g$t$17587$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$17587$T@1Mj
                              'any))))
                        g$p$17584$T@1Mj)))))
          (g$cvt$17583$T@1Mj g$pattern$17580$T@1Mj '0 '())))))
   (g$syntax-dispatch$16005$T@1Mj
     g$syntax-dispatch$19601$T@1Mj
     (case-lambda
       ((g$e$17677$T@1Mj g$p$17678$T@1Mj)
        (letrec* ((g$stx^$17679$T@1Mj
                    (case-lambda
                      ((g$e$17787$T@1Mj
                         g$m*$17788$T@1Mj
                         g$s*$17789$T@1Mj
                         g$ae*$17790$T@1Mj)
                       (if (if (null? g$m*$17788$T@1Mj)
                             (if (null? g$s*$17789$T@1Mj)
                               (begin '#f (null? g$ae*$17790$T@1Mj))
                               '#f)
                             '#f)
                         g$e$17787$T@1Mj
                         (g$mkstx$15495$T@1Mj
                           g$e$17787$T@1Mj
                           g$m*$17788$T@1Mj
                           g$s*$17789$T@1Mj
                           g$ae*$17790$T@1Mj)))))
                  (g$match-each$17680$T@1Mj
                    (case-lambda
                      ((g$e$17771$T@1Mj
                         g$p$17772$T@1Mj
                         g$m*$17773$T@1Mj
                         g$s*$17774$T@1Mj
                         g$ae*$17775$T@1Mj)
                       (if (pair? g$e$17771$T@1Mj)
                         ((case-lambda
                            ((g$first$17776$T@1Mj)
                             (if g$first$17776$T@1Mj
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$17777$T@1Mj)
                                     (if g$rest$17777$T@1Mj
                                       (begin
                                         '#f
                                         (cons
                                           g$first$17776$T@1Mj
                                           g$rest$17777$T@1Mj))
                                       '#f)))
                                  (g$match-each$17680$T@1Mj
                                    (cdr g$e$17771$T@1Mj)
                                    g$p$17772$T@1Mj
                                    g$m*$17773$T@1Mj
                                    g$s*$17774$T@1Mj
                                    g$ae*$17775$T@1Mj)))
                               '#f)))
                          (g$match$17686$T@1Mj
                            (car g$e$17771$T@1Mj)
                            g$p$17772$T@1Mj
                            g$m*$17773$T@1Mj
                            g$s*$17774$T@1Mj
                            g$ae*$17775$T@1Mj
                            '()))
                         (if (null? g$e$17771$T@1Mj)
                           '()
                           (if (g$stx?$15479$T@1Mj g$e$17771$T@1Mj)
                             (if (not (g$top-marked?$15441$T@1Mj
                                        g$m*$17773$T@1Mj))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$15494$T@1Mj
                                        g$m*$17773$T@1Mj
                                        g$s*$17774$T@1Mj
                                        g$ae*$17775$T@1Mj
                                        g$e$17771$T@1Mj)))
                                   (case-lambda
                                     ((g$m*$17781$T@1Mj
                                        g$s*$17782$T@1Mj
                                        g$ae*$17783$T@1Mj)
                                      ((case-lambda
                                         ((g$ae*$17784$T@1Mj
                                            g$s*$17785$T@1Mj
                                            g$m*$17786$T@1Mj)
                                          (g$match-each$17680$T@1Mj
                                            (g$stx-expr$15481$T@1Mj
                                              g$e$17771$T@1Mj)
                                            g$p$17772$T@1Mj
                                            g$m*$17786$T@1Mj
                                            g$s*$17785$T@1Mj
                                            g$ae*$17784$T@1Mj)))
                                       g$ae*$17783$T@1Mj
                                       g$s*$17782$T@1Mj
                                       g$m*$17781$T@1Mj)))))
                               '#f)
                             (if (annotation? g$e$17771$T@1Mj)
                               (g$match-each$17680$T@1Mj
                                 (annotation-expression g$e$17771$T@1Mj)
                                 g$p$17772$T@1Mj
                                 g$m*$17773$T@1Mj
                                 g$s*$17774$T@1Mj
                                 g$ae*$17775$T@1Mj)
                               '#f)))))))
                  (g$match-each+$17681$T@1Mj
                    (case-lambda
                      ((g$e$17739$T@1Mj
                         g$x-pat$17740$T@1Mj
                         g$y-pat$17741$T@1Mj
                         g$z-pat$17742$T@1Mj
                         g$m*$17743$T@1Mj
                         g$s*$17744$T@1Mj
                         g$ae*$17745$T@1Mj
                         g$r$17746$T@1Mj)
                       ((letrec ((g$f$17747$T@1Mj
                                   (case-lambda
                                     ((g$e$17748$T@1Mj
                                        g$m*$17749$T@1Mj
                                        g$s*$17750$T@1Mj
                                        g$ae*$17751$T@1Mj)
                                      (if (pair? g$e$17748$T@1Mj)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$17747$T@1Mj
                                               (cdr g$e$17748$T@1Mj)
                                               g$m*$17749$T@1Mj
                                               g$s*$17750$T@1Mj
                                               g$ae*$17751$T@1Mj)))
                                          (case-lambda
                                            ((g$xr*$17755$T@1Mj
                                               g$y-pat$17756$T@1Mj
                                               g$r$17757$T@1Mj)
                                             ((case-lambda
                                                ((g$r$17758$T@1Mj
                                                   g$y-pat$17759$T@1Mj
                                                   g$xr*$17760$T@1Mj)
                                                 (if g$r$17758$T@1Mj
                                                   (if (null?
                                                         g$y-pat$17759$T@1Mj)
                                                     ((case-lambda
                                                        ((g$xr$17761$T@1Mj)
                                                         (if g$xr$17761$T@1Mj
                                                           (values
                                                             (cons
                                                               g$xr$17761$T@1Mj
                                                               g$xr*$17760$T@1Mj)
                                                             g$y-pat$17759$T@1Mj
                                                             g$r$17758$T@1Mj)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$17686$T@1Mj
                                                        (car g$e$17748$T@1Mj)
                                                        g$x-pat$17740$T@1Mj
                                                        g$m*$17749$T@1Mj
                                                        g$s*$17750$T@1Mj
                                                        g$ae*$17751$T@1Mj
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$17759$T@1Mj)
                                                       (g$match$17686$T@1Mj
                                                         (car g$e$17748$T@1Mj)
                                                         (car g$y-pat$17759$T@1Mj)
                                                         g$m*$17749$T@1Mj
                                                         g$s*$17750$T@1Mj
                                                         g$ae*$17751$T@1Mj
                                                         g$r$17758$T@1Mj)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$17757$T@1Mj
                                              g$y-pat$17756$T@1Mj
                                              g$xr*$17755$T@1Mj))))
                                        (if (g$stx?$15479$T@1Mj
                                              g$e$17748$T@1Mj)
                                          (if (g$top-marked?$15441$T@1Mj
                                                g$m*$17749$T@1Mj)
                                            (values
                                              '()
                                              g$y-pat$17741$T@1Mj
                                              (g$match$17686$T@1Mj
                                                g$e$17748$T@1Mj
                                                g$z-pat$17742$T@1Mj
                                                g$m*$17749$T@1Mj
                                                g$s*$17750$T@1Mj
                                                g$ae*$17751$T@1Mj
                                                g$r$17746$T@1Mj))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$15494$T@1Mj
                                                   g$m*$17749$T@1Mj
                                                   g$s*$17750$T@1Mj
                                                   g$ae*$17751$T@1Mj
                                                   g$e$17748$T@1Mj)))
                                              (case-lambda
                                                ((g$m*$17765$T@1Mj
                                                   g$s*$17766$T@1Mj
                                                   g$ae*$17767$T@1Mj)
                                                 ((case-lambda
                                                    ((g$ae*$17768$T@1Mj
                                                       g$s*$17769$T@1Mj
                                                       g$m*$17770$T@1Mj)
                                                     (g$f$17747$T@1Mj
                                                       (g$stx-expr$15481$T@1Mj
                                                         g$e$17748$T@1Mj)
                                                       g$m*$17770$T@1Mj
                                                       g$s*$17769$T@1Mj
                                                       g$ae*$17768$T@1Mj)))
                                                  g$ae*$17767$T@1Mj
                                                  g$s*$17766$T@1Mj
                                                  g$m*$17765$T@1Mj)))))
                                          (if (annotation?
                                                g$e$17748$T@1Mj)
                                            (g$f$17747$T@1Mj
                                              (annotation-expression
                                                g$e$17748$T@1Mj)
                                              g$m*$17749$T@1Mj
                                              g$s*$17750$T@1Mj
                                              g$ae*$17751$T@1Mj)
                                            (values
                                              '()
                                              g$y-pat$17741$T@1Mj
                                              (g$match$17686$T@1Mj
                                                g$e$17748$T@1Mj
                                                g$z-pat$17742$T@1Mj
                                                g$m*$17749$T@1Mj
                                                g$s*$17750$T@1Mj
                                                g$ae*$17751$T@1Mj
                                                g$r$17746$T@1Mj)))))))))
                          g$f$17747$T@1Mj)
                        g$e$17739$T@1Mj
                        g$m*$17743$T@1Mj
                        g$s*$17744$T@1Mj
                        g$ae*$17745$T@1Mj))))
                  (g$match-each-any$17682$T@1Mj
                    (case-lambda
                      ((g$e$17725$T@1Mj
                         g$m*$17726$T@1Mj
                         g$s*$17727$T@1Mj
                         g$ae*$17728$T@1Mj)
                       (if (pair? g$e$17725$T@1Mj)
                         ((case-lambda
                            ((g$l$17729$T@1Mj)
                             (if g$l$17729$T@1Mj
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$17679$T@1Mj
                                     (car g$e$17725$T@1Mj)
                                     g$m*$17726$T@1Mj
                                     g$s*$17727$T@1Mj
                                     g$ae*$17728$T@1Mj)
                                   g$l$17729$T@1Mj))
                               '#f)))
                          (g$match-each-any$17682$T@1Mj
                            (cdr g$e$17725$T@1Mj)
                            g$m*$17726$T@1Mj
                            g$s*$17727$T@1Mj
                            g$ae*$17728$T@1Mj))
                         (if (null? g$e$17725$T@1Mj)
                           '()
                           (if (g$stx?$15479$T@1Mj g$e$17725$T@1Mj)
                             (if (not (g$top-marked?$15441$T@1Mj
                                        g$m*$17726$T@1Mj))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$15494$T@1Mj
                                        g$m*$17726$T@1Mj
                                        g$s*$17727$T@1Mj
                                        g$ae*$17728$T@1Mj
                                        g$e$17725$T@1Mj)))
                                   (case-lambda
                                     ((g$m*$17733$T@1Mj
                                        g$s*$17734$T@1Mj
                                        g$ae*$17735$T@1Mj)
                                      ((case-lambda
                                         ((g$ae*$17736$T@1Mj
                                            g$s*$17737$T@1Mj
                                            g$m*$17738$T@1Mj)
                                          (g$match-each-any$17682$T@1Mj
                                            (g$stx-expr$15481$T@1Mj
                                              g$e$17725$T@1Mj)
                                            g$m*$17738$T@1Mj
                                            g$s*$17737$T@1Mj
                                            g$ae*$17736$T@1Mj)))
                                       g$ae*$17735$T@1Mj
                                       g$s*$17734$T@1Mj
                                       g$m*$17733$T@1Mj)))))
                               '#f)
                             (if (annotation? g$e$17725$T@1Mj)
                               (g$match-each-any$17682$T@1Mj
                                 (annotation-expression g$e$17725$T@1Mj)
                                 g$m*$17726$T@1Mj
                                 g$s*$17727$T@1Mj
                                 g$ae*$17728$T@1Mj)
                               '#f)))))))
                  (g$match-empty$17683$T@1Mj
                    (case-lambda
                      ((g$p$17722$T@1Mj g$r$17723$T@1Mj)
                       (if (null? g$p$17722$T@1Mj)
                         g$r$17723$T@1Mj
                         (if (eq? g$p$17722$T@1Mj '_)
                           g$r$17723$T@1Mj
                           (if (eq? g$p$17722$T@1Mj 'any)
                             (cons '() g$r$17723$T@1Mj)
                             (if (pair? g$p$17722$T@1Mj)
                               (g$match-empty$17683$T@1Mj
                                 (car g$p$17722$T@1Mj)
                                 (g$match-empty$17683$T@1Mj
                                   (cdr g$p$17722$T@1Mj)
                                   g$r$17723$T@1Mj))
                               (if (eq? g$p$17722$T@1Mj 'each-any)
                                 (cons '() g$r$17723$T@1Mj)
                                 ((case-lambda
                                    ((g$t$17724$T@1Mj)
                                     (if (eqv? g$t$17724$T@1Mj 'each)
                                       (g$match-empty$17683$T@1Mj
                                         (vector-ref g$p$17722$T@1Mj '1)
                                         g$r$17723$T@1Mj)
                                       (if (eqv? g$t$17724$T@1Mj 'each+)
                                         (g$match-empty$17683$T@1Mj
                                           (vector-ref
                                             g$p$17722$T@1Mj
                                             '1)
                                           (g$match-empty$17683$T@1Mj
                                             (g$reverse$12475$T@1Mj
                                               (vector-ref
                                                 g$p$17722$T@1Mj
                                                 '2))
                                             (g$match-empty$17683$T@1Mj
                                               (vector-ref
                                                 g$p$17722$T@1Mj
                                                 '3)
                                               g$r$17723$T@1Mj)))
                                         (if (g$memv$11717$T@1Mj
                                               g$t$17724$T@1Mj
                                               '(free-id atom))
                                           g$r$17723$T@1Mj
                                           (if (g$memv$11717$T@1Mj
                                                 g$t$17724$T@1Mj
                                                 '(scheme-id atom))
                                             g$r$17723$T@1Mj
                                             (if (eqv?
                                                   g$t$17724$T@1Mj
                                                   'vector)
                                               (g$match-empty$17683$T@1Mj
                                                 (vector-ref
                                                   g$p$17722$T@1Mj
                                                   '1)
                                                 g$r$17723$T@1Mj)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$17722$T@1Mj))))))))
                                  (vector-ref
                                    g$p$17722$T@1Mj
                                    '0))))))))))
                  (g$combine$17684$T@1Mj
                    (case-lambda
                      ((g$r*$17720$T@1Mj g$r$17721$T@1Mj)
                       (if (null? (car g$r*$17720$T@1Mj))
                         g$r$17721$T@1Mj
                         (cons
                           (g$map$11724$T@1Mj car g$r*$17720$T@1Mj)
                           (g$combine$17684$T@1Mj
                             (g$map$11724$T@1Mj cdr g$r*$17720$T@1Mj)
                             g$r$17721$T@1Mj))))))
                  (g$match*$17685$T@1Mj
                    (case-lambda
                      ((g$e$17702$T@1Mj
                         g$p$17703$T@1Mj
                         g$m*$17704$T@1Mj
                         g$s*$17705$T@1Mj
                         g$ae*$17706$T@1Mj
                         g$r$17707$T@1Mj)
                       (if (null? g$p$17703$T@1Mj)
                         (if (null? g$e$17702$T@1Mj)
                           (begin '#f g$r$17707$T@1Mj)
                           '#f)
                         (if (pair? g$p$17703$T@1Mj)
                           (if (pair? g$e$17702$T@1Mj)
                             (begin
                               '#f
                               (g$match$17686$T@1Mj
                                 (car g$e$17702$T@1Mj)
                                 (car g$p$17703$T@1Mj)
                                 g$m*$17704$T@1Mj
                                 g$s*$17705$T@1Mj
                                 g$ae*$17706$T@1Mj
                                 (g$match$17686$T@1Mj
                                   (cdr g$e$17702$T@1Mj)
                                   (cdr g$p$17703$T@1Mj)
                                   g$m*$17704$T@1Mj
                                   g$s*$17705$T@1Mj
                                   g$ae*$17706$T@1Mj
                                   g$r$17707$T@1Mj)))
                             '#f)
                           (if (eq? g$p$17703$T@1Mj 'each-any)
                             ((case-lambda
                                ((g$l$17708$T@1Mj)
                                 (if g$l$17708$T@1Mj
                                   (begin
                                     '#f
                                     (cons
                                       g$l$17708$T@1Mj
                                       g$r$17707$T@1Mj))
                                   '#f)))
                              (g$match-each-any$17682$T@1Mj
                                g$e$17702$T@1Mj
                                g$m*$17704$T@1Mj
                                g$s*$17705$T@1Mj
                                g$ae*$17706$T@1Mj))
                             ((case-lambda
                                ((g$t$17709$T@1Mj)
                                 (if (eqv? g$t$17709$T@1Mj 'each)
                                   (if (null? g$e$17702$T@1Mj)
                                     (g$match-empty$17683$T@1Mj
                                       (vector-ref g$p$17703$T@1Mj '1)
                                       g$r$17707$T@1Mj)
                                     ((case-lambda
                                        ((g$r*$17710$T@1Mj)
                                         (if g$r*$17710$T@1Mj
                                           (begin
                                             '#f
                                             (g$combine$17684$T@1Mj
                                               g$r*$17710$T@1Mj
                                               g$r$17707$T@1Mj))
                                           '#f)))
                                      (g$match-each$17680$T@1Mj
                                        g$e$17702$T@1Mj
                                        (vector-ref g$p$17703$T@1Mj '1)
                                        g$m*$17704$T@1Mj
                                        g$s*$17705$T@1Mj
                                        g$ae*$17706$T@1Mj)))
                                   (if (eqv? g$t$17709$T@1Mj 'free-id)
                                     (if (g$symbol?$12467$T@1Mj
                                           g$e$17702$T@1Mj)
                                       (if (g$top-marked?$15441$T@1Mj
                                             g$m*$17704$T@1Mj)
                                         (if (g$free-id=?$15511$T@1Mj
                                               (g$stx^$17679$T@1Mj
                                                 g$e$17702$T@1Mj
                                                 g$m*$17704$T@1Mj
                                                 g$s*$17705$T@1Mj
                                                 g$ae*$17706$T@1Mj)
                                               (vector-ref
                                                 g$p$17703$T@1Mj
                                                 '1))
                                           (begin '#f g$r$17707$T@1Mj)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv?
                                           g$t$17709$T@1Mj
                                           'scheme-id)
                                       (if (g$symbol?$12467$T@1Mj
                                             g$e$17702$T@1Mj)
                                         (if (g$top-marked?$15441$T@1Mj
                                               g$m*$17704$T@1Mj)
                                           (if (g$free-id=?$15511$T@1Mj
                                                 (g$stx^$17679$T@1Mj
                                                   g$e$17702$T@1Mj
                                                   g$m*$17704$T@1Mj
                                                   g$s*$17705$T@1Mj
                                                   g$ae*$17706$T@1Mj)
                                                 (g$scheme-stx$15948$T@1Mj
                                                   (vector-ref
                                                     g$p$17703$T@1Mj
                                                     '1)))
                                             (begin '#f g$r$17707$T@1Mj)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$17709$T@1Mj 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$17681$T@1Mj
                                                g$e$17702$T@1Mj
                                                (vector-ref
                                                  g$p$17703$T@1Mj
                                                  '1)
                                                (vector-ref
                                                  g$p$17703$T@1Mj
                                                  '2)
                                                (vector-ref
                                                  g$p$17703$T@1Mj
                                                  '3)
                                                g$m*$17704$T@1Mj
                                                g$s*$17705$T@1Mj
                                                g$ae*$17706$T@1Mj
                                                g$r$17707$T@1Mj)))
                                           (case-lambda
                                             ((g$xr*$17714$T@1Mj
                                                g$y-pat$17715$T@1Mj
                                                g$r$17716$T@1Mj)
                                              ((case-lambda
                                                 ((g$r$17717$T@1Mj
                                                    g$y-pat$17718$T@1Mj
                                                    g$xr*$17719$T@1Mj)
                                                  (if g$r$17717$T@1Mj
                                                    (if (null?
                                                          g$y-pat$17718$T@1Mj)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$17719$T@1Mj)
                                                          (g$match-empty$17683$T@1Mj
                                                            (vector-ref
                                                              g$p$17703$T@1Mj
                                                              '1)
                                                            g$r$17717$T@1Mj)
                                                          (g$combine$17684$T@1Mj
                                                            g$xr*$17719$T@1Mj
                                                            g$r$17717$T@1Mj)))
                                                      '#f)
                                                    '#f)))
                                               g$r$17716$T@1Mj
                                               g$y-pat$17715$T@1Mj
                                               g$xr*$17714$T@1Mj))))
                                         (if (eqv?
                                               g$t$17709$T@1Mj
                                               'atom)
                                           (if (equal?
                                                 (vector-ref
                                                   g$p$17703$T@1Mj
                                                   '1)
                                                 (g$strip$15517$T@1Mj
                                                   g$e$17702$T@1Mj
                                                   g$m*$17704$T@1Mj))
                                             (begin '#f g$r$17707$T@1Mj)
                                             '#f)
                                           (if (eqv?
                                                 g$t$17709$T@1Mj
                                                 'vector)
                                             (if (g$vector?$12465$T@1Mj
                                                   g$e$17702$T@1Mj)
                                               (begin
                                                 '#f
                                                 (g$match$17686$T@1Mj
                                                   (vector->list
                                                     g$e$17702$T@1Mj)
                                                   (vector-ref
                                                     g$p$17703$T@1Mj
                                                     '1)
                                                   g$m*$17704$T@1Mj
                                                   g$s*$17705$T@1Mj
                                                   g$ae*$17706$T@1Mj
                                                   g$r$17707$T@1Mj))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$17703$T@1Mj)))))))))
                              (vector-ref g$p$17703$T@1Mj '0))))))))
                  (g$match$17686$T@1Mj
                    (case-lambda
                      ((g$e$17687$T@1Mj
                         g$p$17688$T@1Mj
                         g$m*$17689$T@1Mj
                         g$s*$17690$T@1Mj
                         g$ae*$17691$T@1Mj
                         g$r$17692$T@1Mj)
                       (if (not g$r$17692$T@1Mj)
                         '#f
                         (if (eq? g$p$17688$T@1Mj '_)
                           g$r$17692$T@1Mj
                           (if (eq? g$p$17688$T@1Mj 'any)
                             (cons
                               (g$stx^$17679$T@1Mj
                                 g$e$17687$T@1Mj
                                 g$m*$17689$T@1Mj
                                 g$s*$17690$T@1Mj
                                 g$ae*$17691$T@1Mj)
                               g$r$17692$T@1Mj)
                             (if (g$stx?$15479$T@1Mj g$e$17687$T@1Mj)
                               (if (not (g$top-marked?$15441$T@1Mj
                                          g$m*$17689$T@1Mj))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$15494$T@1Mj
                                          g$m*$17689$T@1Mj
                                          g$s*$17690$T@1Mj
                                          g$ae*$17691$T@1Mj
                                          g$e$17687$T@1Mj)))
                                     (case-lambda
                                       ((g$m*$17696$T@1Mj
                                          g$s*$17697$T@1Mj
                                          g$ae*$17698$T@1Mj)
                                        ((case-lambda
                                           ((g$ae*$17699$T@1Mj
                                              g$s*$17700$T@1Mj
                                              g$m*$17701$T@1Mj)
                                            (g$match$17686$T@1Mj
                                              (g$stx-expr$15481$T@1Mj
                                                g$e$17687$T@1Mj)
                                              g$p$17688$T@1Mj
                                              g$m*$17701$T@1Mj
                                              g$s*$17700$T@1Mj
                                              g$ae*$17699$T@1Mj
                                              g$r$17692$T@1Mj)))
                                         g$ae*$17698$T@1Mj
                                         g$s*$17697$T@1Mj
                                         g$m*$17696$T@1Mj)))))
                                 '#f)
                               (if (annotation? g$e$17687$T@1Mj)
                                 (g$match$17686$T@1Mj
                                   (annotation-expression
                                     g$e$17687$T@1Mj)
                                   g$p$17688$T@1Mj
                                   g$m*$17689$T@1Mj
                                   g$s*$17690$T@1Mj
                                   g$ae*$17691$T@1Mj
                                   g$r$17692$T@1Mj)
                                 (g$match*$17685$T@1Mj
                                   g$e$17687$T@1Mj
                                   g$p$17688$T@1Mj
                                   g$m*$17689$T@1Mj
                                   g$s*$17690$T@1Mj
                                   g$ae*$17691$T@1Mj
                                   g$r$17692$T@1Mj))))))))))
          (g$match$17686$T@1Mj
            g$e$17677$T@1Mj
            g$p$17678$T@1Mj
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$16006$T@1Mj
     g$ellipsis?$19602$T@1Mj
     (case-lambda
       ((g$x$17791$T@1Mj)
        (if (g$id?$15507$T@1Mj g$x$17791$T@1Mj)
          (begin
            '#f
            (g$free-id=?$15511$T@1Mj
              g$x$17791$T@1Mj
              (g$scheme-stx$15948$T@1Mj '...)))
          '#f))))
   (g$underscore?$16007$T@1Mj
     g$underscore?$19603$T@1Mj
     (case-lambda
       ((g$x$17792$T@1Mj)
        (if (g$id?$15507$T@1Mj g$x$17792$T@1Mj)
          (begin
            '#f
            (g$free-id=?$15511$T@1Mj
              g$x$17792$T@1Mj
              (g$scheme-stx$15948$T@1Mj '_)))
          '#f))))
   (g$verify-literals$16008$T@1Mj
     g$verify-literals$19604$T@1Mj
     (case-lambda
       ((g$lits$17793$T@1Mj g$expr$17794$T@1Mj)
        (g$for-each$11725$T@1Mj
          (case-lambda
            ((g$x$17795$T@1Mj)
             (if ((case-lambda
                    ((g$t$17796$T@1Mj)
                     (if g$t$17796$T@1Mj
                       g$t$17796$T@1Mj
                       ((case-lambda
                          ((g$t$17797$T@1Mj)
                           (if g$t$17797$T@1Mj
                             g$t$17797$T@1Mj
                             (begin
                               '#f
                               (g$underscore?$16007$T@1Mj
                                 g$x$17795$T@1Mj)))))
                        (g$ellipsis?$16006$T@1Mj g$x$17795$T@1Mj)))))
                  (not (g$id?$15507$T@1Mj g$x$17795$T@1Mj)))
               (g$syntax-violation$16124$T@1Mj
                 '#f
                 '"invalid literal"
                 g$expr$17794$T@1Mj
                 g$x$17795$T@1Mj)
               (void))))
          g$lits$17793$T@1Mj))))
   (g$syntax-case-transformer$16009$T@1Mj
     g$syntax-case-transformer$19605$T@1Mj
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$17798$T@1Mj
                     (case-lambda
                       ((g$pvars$17855$T@1Mj
                          g$expr$17856$T@1Mj
                          g$y$17857$T@1Mj
                          g$r$17858$T@1Mj
                          g$mr$17859$T@1Mj)
                        ((case-lambda
                           ((g$ids$17860$T@1Mj g$levels$17861$T@1Mj)
                            ((case-lambda
                               ((g$labels$17862$T@1Mj
                                  g$new-vars$17863$T@1Mj)
                                ((case-lambda
                                   ((g$body$17864$T@1Mj)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$15429$T@1Mj
                                        '#f
                                        g$new-vars$17863$T@1Mj
                                        g$body$17864$T@1Mj)
                                      g$y$17857$T@1Mj)))
                                 (g$chi-expr$16023$T@1Mj
                                   (g$add-subst$15497$T@1Mj
                                     (g$make-full-rib$15473$T@1Mj
                                       g$ids$17860$T@1Mj
                                       g$labels$17862$T@1Mj)
                                     g$expr$17856$T@1Mj)
                                   (append
                                     (g$map$11724$T@1Mj
                                       (case-lambda
                                         ((g$label$17865$T@1Mj
                                            g$var$17866$T@1Mj
                                            g$level$17867$T@1Mj)
                                          (cons
                                            g$label$17865$T@1Mj
                                            (g$make-binding$15523$T@1Mj
                                              'syntax
                                              (cons
                                                g$var$17866$T@1Mj
                                                g$level$17867$T@1Mj)))))
                                       g$labels$17862$T@1Mj
                                       g$new-vars$17863$T@1Mj
                                       (g$map$11724$T@1Mj
                                         cdr
                                         g$pvars$17855$T@1Mj))
                                     g$r$17858$T@1Mj)
                                   g$mr$17859$T@1Mj))))
                             (g$map$11724$T@1Mj
                               g$gen-label$15444$T@1Mj
                               g$ids$17860$T@1Mj)
                             (g$map$11724$T@1Mj
                               g$gen-lexical$15442$T@1Mj
                               g$ids$17860$T@1Mj))))
                         (g$map$11724$T@1Mj car g$pvars$17855$T@1Mj)
                         (g$map$11724$T@1Mj cdr g$pvars$17855$T@1Mj)))))
                   (g$invalid-ids-error$17799$T@1Mj
                     (case-lambda
                       ((g$id*$17849$T@1Mj
                          g$e$17850$T@1Mj
                          g$class$17851$T@1Mj)
                        ((letrec ((g$find$17852$T@1Mj
                                    (case-lambda
                                      ((g$id*$17853$T@1Mj
                                         g$ok*$17854$T@1Mj)
                                       (if (null? g$id*$17853$T@1Mj)
                                         (g$syntax-violation$16124$T@1Mj
                                           '#f
                                           '"invalid syntax"
                                           g$e$17850$T@1Mj)
                                         (if (g$id?$15507$T@1Mj
                                               (car g$id*$17853$T@1Mj))
                                           (if (g$bound-id-member?$15514$T@1Mj
                                                 (car g$id*$17853$T@1Mj)
                                                 g$ok*$17854$T@1Mj)
                                             (g$syntax-error$16121$T@1Mj
                                               (car g$id*$17853$T@1Mj)
                                               '"duplicate "
                                               g$class$17851$T@1Mj)
                                             (g$find$17852$T@1Mj
                                               (cdr g$id*$17853$T@1Mj)
                                               (cons
                                                 (car g$id*$17853$T@1Mj)
                                                 g$ok*$17854$T@1Mj)))
                                           (g$syntax-error$16121$T@1Mj
                                             (car g$id*$17853$T@1Mj)
                                             '"invalid "
                                             g$class$17851$T@1Mj)))))))
                           g$find$17852$T@1Mj)
                         g$id*$17849$T@1Mj
                         '()))))
                   (g$gen-clause$17800$T@1Mj
                     (case-lambda
                       ((g$x$17829$T@1Mj
                          g$keys$17830$T@1Mj
                          g$clauses$17831$T@1Mj
                          g$r$17832$T@1Mj
                          g$mr$17833$T@1Mj
                          g$pat$17834$T@1Mj
                          g$fender$17835$T@1Mj
                          g$expr$17836$T@1Mj)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$16004$T@1Mj
                               g$pat$17834$T@1Mj
                               g$keys$17830$T@1Mj)))
                          (case-lambda
                            ((g$p$17839$T@1Mj g$pvars$17840$T@1Mj)
                             ((case-lambda
                                ((g$pvars$17841$T@1Mj g$p$17842$T@1Mj)
                                 (if (not (g$distinct-bound-ids?$15513$T@1Mj
                                            (g$map$11724$T@1Mj
                                              car
                                              g$pvars$17841$T@1Mj)))
                                   (g$invalid-ids-error$17799$T@1Mj
                                     (g$map$11724$T@1Mj
                                       car
                                       g$pvars$17841$T@1Mj)
                                     g$pat$17834$T@1Mj
                                     '"pattern variable")
                                   (if (not (g$for-all$11722$T@1Mj
                                              (case-lambda
                                                ((g$x$17843$T@1Mj)
                                                 (not (g$ellipsis?$16006$T@1Mj
                                                        (car g$x$17843$T@1Mj)))))
                                              g$pvars$17841$T@1Mj))
                                     (g$syntax-violation$16124$T@1Mj
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$17834$T@1Mj)
                                     ((case-lambda
                                        ((g$y$17844$T@1Mj)
                                         ((case-lambda
                                            ((g$test$17845$T@1Mj)
                                             ((case-lambda
                                                ((g$conseq$17846$T@1Mj)
                                                 ((case-lambda
                                                    ((g$altern$17847$T@1Mj)
                                                     (list
                                                       (g$build-lambda$15429$T@1Mj
                                                         '#f
                                                         (list
                                                           g$y$17844$T@1Mj)
                                                         (list
                                                           'if
                                                           g$test$17845$T@1Mj
                                                           g$conseq$17846$T@1Mj
                                                           g$altern$17847$T@1Mj))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$17829$T@1Mj
                                                         (list
                                                           'quote
                                                           g$p$17842$T@1Mj)))))
                                                  (g$gen-syntax-case$17801$T@1Mj
                                                    g$x$17829$T@1Mj
                                                    g$keys$17830$T@1Mj
                                                    g$clauses$17831$T@1Mj
                                                    g$r$17832$T@1Mj
                                                    g$mr$17833$T@1Mj))))
                                              (g$build-dispatch-call$17798$T@1Mj
                                                g$pvars$17841$T@1Mj
                                                g$expr$17836$T@1Mj
                                                g$y$17844$T@1Mj
                                                g$r$17832$T@1Mj
                                                g$mr$17833$T@1Mj))))
                                          (if (eq? g$fender$17835$T@1Mj
                                                   '#t)
                                            g$y$17844$T@1Mj
                                            ((case-lambda
                                               ((g$call$17848$T@1Mj)
                                                (list
                                                  'if
                                                  g$y$17844$T@1Mj
                                                  g$call$17848$T@1Mj
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$17798$T@1Mj
                                               g$pvars$17841$T@1Mj
                                               g$fender$17835$T@1Mj
                                               g$y$17844$T@1Mj
                                               g$r$17832$T@1Mj
                                               g$mr$17833$T@1Mj))))))
                                      (g$gen-lexical$15442$T@1Mj
                                        'tmp))))))
                              g$pvars$17840$T@1Mj
                              g$p$17839$T@1Mj)))))))
                   (g$gen-syntax-case$17801$T@1Mj
                     (case-lambda
                       ((g$x$17812$T@1Mj
                          g$keys$17813$T@1Mj
                          g$clauses$17814$T@1Mj
                          g$r$17815$T@1Mj
                          g$mr$17816$T@1Mj)
                        (if (null? g$clauses$17814$T@1Mj)
                          (list
                            '(primitive syntax-error)
                            g$x$17812$T@1Mj)
                          ((case-lambda
                             ((g$t$17817$T@1Mj)
                              ((case-lambda
                                 ((g$ls/false$17818$T@1Mj)
                                  (if g$ls/false$17818$T@1Mj
                                    (apply
                                      (case-lambda
                                        ((g$pat$17819$T@1Mj
                                           g$expr$17820$T@1Mj)
                                         (if (if (g$id?$15507$T@1Mj
                                                   g$pat$17819$T@1Mj)
                                               (if (not (g$bound-id-member?$15514$T@1Mj
                                                          g$pat$17819$T@1Mj
                                                          g$keys$17813$T@1Mj))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$16006$T@1Mj
                                                          g$pat$17819$T@1Mj)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$15511$T@1Mj
                                                 g$pat$17819$T@1Mj
                                                 (g$scheme-stx$15948$T@1Mj
                                                   '_))
                                             (g$chi-expr$16023$T@1Mj
                                               g$expr$17820$T@1Mj
                                               g$r$17815$T@1Mj
                                               g$mr$17816$T@1Mj)
                                             ((case-lambda
                                                ((g$lab$17821$T@1Mj
                                                   g$lex$17822$T@1Mj)
                                                 ((case-lambda
                                                    ((g$body$17823$T@1Mj)
                                                     (list
                                                       (g$build-lambda$15429$T@1Mj
                                                         '#f
                                                         (list
                                                           g$lex$17822$T@1Mj)
                                                         g$body$17823$T@1Mj)
                                                       g$x$17812$T@1Mj)))
                                                  (g$chi-expr$16023$T@1Mj
                                                    (g$add-subst$15497$T@1Mj
                                                      (g$make-full-rib$15473$T@1Mj
                                                        (list
                                                          g$pat$17819$T@1Mj)
                                                        (list
                                                          g$lab$17821$T@1Mj))
                                                      g$expr$17820$T@1Mj)
                                                    (cons
                                                      (cons
                                                        g$lab$17821$T@1Mj
                                                        (g$make-binding$15523$T@1Mj
                                                          'syntax
                                                          (cons
                                                            g$lex$17822$T@1Mj
                                                            '0)))
                                                      g$r$17815$T@1Mj)
                                                    g$mr$17816$T@1Mj))))
                                              (g$gen-label$15444$T@1Mj
                                                g$pat$17819$T@1Mj)
                                              (g$gen-lexical$15442$T@1Mj
                                                g$pat$17819$T@1Mj)))
                                           (g$gen-clause$17800$T@1Mj
                                             g$x$17812$T@1Mj
                                             g$keys$17813$T@1Mj
                                             (cdr g$clauses$17814$T@1Mj)
                                             g$r$17815$T@1Mj
                                             g$mr$17816$T@1Mj
                                             g$pat$17819$T@1Mj
                                             '#t
                                             g$expr$17820$T@1Mj))))
                                      g$ls/false$17818$T@1Mj)
                                    ((case-lambda
                                       ((g$t$17824$T@1Mj)
                                        ((case-lambda
                                           ((g$ls/false$17825$T@1Mj)
                                            (if g$ls/false$17825$T@1Mj
                                              (apply
                                                (case-lambda
                                                  ((g$pat$17826$T@1Mj
                                                     g$fender$17827$T@1Mj
                                                     g$expr$17828$T@1Mj)
                                                   (g$gen-clause$17800$T@1Mj
                                                     g$x$17812$T@1Mj
                                                     g$keys$17813$T@1Mj
                                                     (cdr g$clauses$17814$T@1Mj)
                                                     g$r$17815$T@1Mj
                                                     g$mr$17816$T@1Mj
                                                     g$pat$17826$T@1Mj
                                                     g$fender$17827$T@1Mj
                                                     g$expr$17828$T@1Mj)))
                                                g$ls/false$17825$T@1Mj)
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"invalid syntax"
                                                g$t$17824$T@1Mj))))
                                         (g$syntax-dispatch$16005$T@1Mj
                                           g$t$17824$T@1Mj
                                           '(any any any)))))
                                     g$t$17817$T@1Mj))))
                               (g$syntax-dispatch$16005$T@1Mj
                                 g$t$17817$T@1Mj
                                 '(any any)))))
                           (car g$clauses$17814$T@1Mj)))))))
           (case-lambda
             ((g$e$17802$T@1Mj g$r$17803$T@1Mj g$mr$17804$T@1Mj)
              ((case-lambda
                 ((g$t$17805$T@1Mj)
                  ((case-lambda
                     ((g$ls/false$17806$T@1Mj)
                      (if g$ls/false$17806$T@1Mj
                        (apply
                          (case-lambda
                            ((g$expr$17807$T@1Mj
                               g$keys$17808$T@1Mj
                               g$clauses$17809$T@1Mj)
                             (begin
                               (g$verify-literals$16008$T@1Mj
                                 g$keys$17808$T@1Mj
                                 g$e$17802$T@1Mj)
                               ((case-lambda
                                  ((g$x$17810$T@1Mj)
                                   ((case-lambda
                                      ((g$body$17811$T@1Mj)
                                       (list
                                         (g$build-lambda$15429$T@1Mj
                                           '#f
                                           (list g$x$17810$T@1Mj)
                                           g$body$17811$T@1Mj)
                                         (g$chi-expr$16023$T@1Mj
                                           g$expr$17807$T@1Mj
                                           g$r$17803$T@1Mj
                                           g$mr$17804$T@1Mj))))
                                    (g$gen-syntax-case$17801$T@1Mj
                                      g$x$17810$T@1Mj
                                      g$keys$17808$T@1Mj
                                      g$clauses$17809$T@1Mj
                                      g$r$17803$T@1Mj
                                      g$mr$17804$T@1Mj))))
                                (g$gen-lexical$15442$T@1Mj 'tmp)))))
                          g$ls/false$17806$T@1Mj)
                        (g$syntax-violation$16124$T@1Mj
                          '#f
                          '"invalid syntax"
                          g$t$17805$T@1Mj))))
                   (g$syntax-dispatch$16005$T@1Mj
                     g$t$17805$T@1Mj
                     '(_ any each-any . each-any)))))
               g$e$17802$T@1Mj))))))))
   (g$ellipsis-map$16010$T@1Mj
     g$ellipsis-map$19606$T@1Mj
     (case-lambda
       ((g$proc$17868$T@1Mj g$ls$17869$T@1Mj . g$ls*$17870$T@1Mj)
        (letrec* ((g$who$17871$T@1Mj '...))
          (begin
            (if (not (list? g$ls$17869$T@1Mj))
              (assertion-violation
                g$who$17871$T@1Mj
                '"not a list"
                g$ls$17869$T@1Mj)
              (void))
            (if (not (null? g$ls*$17870$T@1Mj))
              ((case-lambda
                 ((g$n$17872$T@1Mj)
                  (g$for-each$11725$T@1Mj
                    (case-lambda
                      ((g$x$17873$T@1Mj)
                       (begin
                         (if (not (list? g$x$17873$T@1Mj))
                           (assertion-violation
                             g$who$17871$T@1Mj
                             '"not a list"
                             g$x$17873$T@1Mj)
                           (void))
                         (if (not (= (length g$x$17873$T@1Mj)
                                     g$n$17872$T@1Mj))
                           (assertion-violation
                             g$who$17871$T@1Mj
                             '"length mismatch"
                             g$ls$17869$T@1Mj
                             g$x$17873$T@1Mj)
                           (void)))))
                    g$ls*$17870$T@1Mj)))
               (length g$ls$17869$T@1Mj))
              (void))
            (apply
              g$map$11724$T@1Mj
              g$proc$17868$T@1Mj
              g$ls$17869$T@1Mj
              g$ls*$17870$T@1Mj))))))
   (g$syntax-transformer$16011$T@1Mj
     g$syntax-transformer$19607$T@1Mj
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$17874$T@1Mj
                     (case-lambda
                       ((g$src$17934$T@1Mj
                          g$e$17935$T@1Mj
                          g$r$17936$T@1Mj
                          g$maps$17937$T@1Mj
                          g$ellipsis?$17938$T@1Mj
                          g$vec?$17939$T@1Mj)
                        ((case-lambda
                           ((g$t$17940$T@1Mj)
                            ((case-lambda
                               ((g$ls/false$17941$T@1Mj)
                                (if (if g$ls/false$17941$T@1Mj
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$17942$T@1Mj)
                                             (g$ellipsis?$17938$T@1Mj
                                               g$dots$17942$T@1Mj)))
                                          g$ls/false$17941$T@1Mj))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$17943$T@1Mj)
                                       (g$syntax-violation$16124$T@1Mj
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$17934$T@1Mj)))
                                    g$ls/false$17941$T@1Mj)
                                  ((case-lambda
                                     ((g$t$17944$T@1Mj)
                                      ((case-lambda
                                         ((g$ls/false$17945$T@1Mj)
                                          (if (if g$ls/false$17945$T@1Mj
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$17946$T@1Mj)
                                                       (g$id?$15507$T@1Mj
                                                         g$id$17946$T@1Mj)))
                                                    g$ls/false$17945$T@1Mj))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$17947$T@1Mj)
                                                 ((case-lambda
                                                    ((g$label$17948$T@1Mj)
                                                     ((case-lambda
                                                        ((g$b$17949$T@1Mj)
                                                         (if (eq? (g$binding-type$15524$T@1Mj
                                                                    g$b$17949$T@1Mj)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$17952$T@1Mj)
                                                                    (g$gen-ref$17875$T@1Mj
                                                                      g$src$17934$T@1Mj
                                                                      (car g$var.lev$17952$T@1Mj)
                                                                      (cdr g$var.lev$17952$T@1Mj)
                                                                      g$maps$17937$T@1Mj)))
                                                                 (g$binding-value$15525$T@1Mj
                                                                   g$b$17949$T@1Mj))))
                                                             (case-lambda
                                                               ((g$var$17953$T@1Mj
                                                                  g$maps$17954$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$maps$17955$T@1Mj
                                                                      g$var$17956$T@1Mj)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$17956$T@1Mj)
                                                                      g$maps$17955$T@1Mj)))
                                                                 g$maps$17954$T@1Mj
                                                                 g$var$17953$T@1Mj))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$17935$T@1Mj)
                                                             g$maps$17937$T@1Mj))))
                                                      (g$label->binding$15522$T@1Mj
                                                        g$label$17948$T@1Mj
                                                        g$r$17936$T@1Mj))))
                                                  (g$id->label$15520$T@1Mj
                                                    g$e$17935$T@1Mj))))
                                              g$ls/false$17945$T@1Mj)
                                            ((case-lambda
                                               ((g$t$17957$T@1Mj)
                                                ((case-lambda
                                                   ((g$ls/false$17958$T@1Mj)
                                                    (if (if g$ls/false$17958$T@1Mj
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$17959$T@1Mj
                                                                   g$e$17960$T@1Mj)
                                                                 (g$ellipsis?$17938$T@1Mj
                                                                   g$dots$17959$T@1Mj)))
                                                              g$ls/false$17958$T@1Mj))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$17961$T@1Mj
                                                             g$e$17962$T@1Mj)
                                                           (if g$vec?$17939$T@1Mj
                                                             (g$syntax-violation$16124$T@1Mj
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$17934$T@1Mj)
                                                             (g$gen-syntax$17874$T@1Mj
                                                               g$src$17934$T@1Mj
                                                               g$e$17962$T@1Mj
                                                               g$r$17936$T@1Mj
                                                               g$maps$17937$T@1Mj
                                                               (case-lambda
                                                                 ((g$x$17963$T@1Mj)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$17958$T@1Mj)
                                                      ((case-lambda
                                                         ((g$t$17964$T@1Mj)
                                                          ((case-lambda
                                                             ((g$ls/false$17965$T@1Mj)
                                                              (if (if g$ls/false$17965$T@1Mj
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$17966$T@1Mj
                                                                             g$dots$17967$T@1Mj
                                                                             g$y$17968$T@1Mj)
                                                                           (g$ellipsis?$17938$T@1Mj
                                                                             g$dots$17967$T@1Mj)))
                                                                        g$ls/false$17965$T@1Mj))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$17969$T@1Mj
                                                                       g$dots$17970$T@1Mj
                                                                       g$y$17971$T@1Mj)
                                                                     ((letrec ((g$f$17972$T@1Mj
                                                                                 (case-lambda
                                                                                   ((g$y$17973$T@1Mj
                                                                                      g$k$17974$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$t$17975$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$17976$T@1Mj)
                                                                                            (if g$ls/false$17976$T@1Mj
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$17974$T@1Mj
                                                                                                     g$maps$17937$T@1Mj)))
                                                                                                g$ls/false$17976$T@1Mj)
                                                                                              ((case-lambda
                                                                                                 ((g$t$17977$T@1Mj)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$17978$T@1Mj)
                                                                                                      (if (if g$ls/false$17978$T@1Mj
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$17979$T@1Mj
                                                                                                                     g$y$17980$T@1Mj)
                                                                                                                   (g$ellipsis?$17938$T@1Mj
                                                                                                                     g$dots$17979$T@1Mj)))
                                                                                                                g$ls/false$17978$T@1Mj))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$17981$T@1Mj
                                                                                                               g$y$17982$T@1Mj)
                                                                                                             (g$f$17972$T@1Mj
                                                                                                               g$y$17982$T@1Mj
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$17983$T@1Mj)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$17974$T@1Mj
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$17983$T@1Mj))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$17986$T@1Mj
                                                                                                                         g$maps$17987$T@1Mj)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$17988$T@1Mj
                                                                                                                             g$x$17989$T@1Mj)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$17988$T@1Mj))
                                                                                                                             (g$syntax-violation$16124$T@1Mj
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$17934$T@1Mj)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$17877$T@1Mj
                                                                                                                                 g$x$17989$T@1Mj
                                                                                                                                 (car g$maps$17988$T@1Mj))
                                                                                                                               (cdr g$maps$17988$T@1Mj)))))
                                                                                                                        g$maps$17987$T@1Mj
                                                                                                                        g$x$17986$T@1Mj)))))))))
                                                                                                          g$ls/false$17978$T@1Mj)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$17990$T@1Mj)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$17991$T@1Mj)
                                                                                                                (if g$ls/false$17991$T@1Mj
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$17874$T@1Mj
                                                                                                                              g$src$17934$T@1Mj
                                                                                                                              g$y$17973$T@1Mj
                                                                                                                              g$r$17936$T@1Mj
                                                                                                                              g$maps$17937$T@1Mj
                                                                                                                              g$ellipsis?$17938$T@1Mj
                                                                                                                              g$vec?$17939$T@1Mj)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$17994$T@1Mj
                                                                                                                              g$maps$17995$T@1Mj)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$17996$T@1Mj
                                                                                                                                  g$y$17997$T@1Mj)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$17974$T@1Mj
                                                                                                                                       g$maps$17996$T@1Mj)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$18000$T@1Mj
                                                                                                                                       g$maps$18001$T@1Mj)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$18002$T@1Mj
                                                                                                                                           g$x$18003$T@1Mj)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$17876$T@1Mj
                                                                                                                                             g$x$18003$T@1Mj
                                                                                                                                             g$y$17997$T@1Mj)
                                                                                                                                           g$maps$18002$T@1Mj)))
                                                                                                                                      g$maps$18001$T@1Mj
                                                                                                                                      g$x$18000$T@1Mj))))))
                                                                                                                             g$maps$17995$T@1Mj
                                                                                                                             g$y$17994$T@1Mj))))))
                                                                                                                    g$ls/false$17991$T@1Mj)
                                                                                                                  (g$syntax-violation$16124$T@1Mj
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$17990$T@1Mj))))
                                                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                                                               g$t$17990$T@1Mj
                                                                                                               '_))))
                                                                                                         g$t$17977$T@1Mj))))
                                                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                                                     g$t$17977$T@1Mj
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$17975$T@1Mj))))
                                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                                           g$t$17975$T@1Mj
                                                                                           '()))))
                                                                                     g$y$17973$T@1Mj)))))
                                                                        g$f$17972$T@1Mj)
                                                                      g$y$17971$T@1Mj
                                                                      (case-lambda
                                                                        ((g$maps$18004$T@1Mj)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$17874$T@1Mj
                                                                                g$src$17934$T@1Mj
                                                                                g$x$17969$T@1Mj
                                                                                g$r$17936$T@1Mj
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$18004$T@1Mj)
                                                                                g$ellipsis?$17938$T@1Mj
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$18007$T@1Mj
                                                                                g$maps$18008$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$maps$18009$T@1Mj
                                                                                    g$x$18010$T@1Mj)
                                                                                  (if (null?
                                                                                        (car g$maps$18009$T@1Mj))
                                                                                    (g$syntax-violation$16124$T@1Mj
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$17934$T@1Mj)
                                                                                    (values
                                                                                      (g$gen-map$17878$T@1Mj
                                                                                        g$x$18010$T@1Mj
                                                                                        (car g$maps$18009$T@1Mj))
                                                                                      (cdr g$maps$18009$T@1Mj)))))
                                                                               g$maps$18008$T@1Mj
                                                                               g$x$18007$T@1Mj)))))))))
                                                                  g$ls/false$17965$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$t$18011$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$ls/false$18012$T@1Mj)
                                                                        (if g$ls/false$18012$T@1Mj
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$18013$T@1Mj
                                                                                 g$y$18014$T@1Mj)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$17874$T@1Mj
                                                                                      g$src$17934$T@1Mj
                                                                                      g$x$18013$T@1Mj
                                                                                      g$r$17936$T@1Mj
                                                                                      g$maps$17937$T@1Mj
                                                                                      g$ellipsis?$17938$T@1Mj
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$18017$T@1Mj
                                                                                      g$maps$18018$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$maps$18019$T@1Mj
                                                                                          g$xnew$18020$T@1Mj)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$17874$T@1Mj
                                                                                               g$src$17934$T@1Mj
                                                                                               g$y$18014$T@1Mj
                                                                                               g$r$17936$T@1Mj
                                                                                               g$maps$18019$T@1Mj
                                                                                               g$ellipsis?$17938$T@1Mj
                                                                                               g$vec?$17939$T@1Mj)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$18023$T@1Mj
                                                                                               g$maps$18024$T@1Mj)
                                                                                             ((case-lambda
                                                                                                ((g$maps$18025$T@1Mj
                                                                                                   g$ynew$18026$T@1Mj)
                                                                                                 (values
                                                                                                   (g$gen-cons$17879$T@1Mj
                                                                                                     g$e$17935$T@1Mj
                                                                                                     g$x$18013$T@1Mj
                                                                                                     g$y$18014$T@1Mj
                                                                                                     g$xnew$18020$T@1Mj
                                                                                                     g$ynew$18026$T@1Mj)
                                                                                                   g$maps$18025$T@1Mj)))
                                                                                              g$maps$18024$T@1Mj
                                                                                              g$ynew$18023$T@1Mj))))))
                                                                                     g$maps$18018$T@1Mj
                                                                                     g$xnew$18017$T@1Mj))))))
                                                                            g$ls/false$18012$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$t$18027$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$18028$T@1Mj)
                                                                                  (if g$ls/false$18028$T@1Mj
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$18029$T@1Mj)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$17874$T@1Mj
                                                                                                g$src$17934$T@1Mj
                                                                                                g$ls$18029$T@1Mj
                                                                                                g$r$17936$T@1Mj
                                                                                                g$maps$17937$T@1Mj
                                                                                                g$ellipsis?$17938$T@1Mj
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$18032$T@1Mj
                                                                                                g$maps$18033$T@1Mj)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$18034$T@1Mj
                                                                                                    g$lsnew$18035$T@1Mj)
                                                                                                  (values
                                                                                                    (g$gen-vector$17880$T@1Mj
                                                                                                      g$e$17935$T@1Mj
                                                                                                      g$ls$18029$T@1Mj
                                                                                                      g$lsnew$18035$T@1Mj)
                                                                                                    g$maps$18034$T@1Mj)))
                                                                                               g$maps$18033$T@1Mj
                                                                                               g$lsnew$18032$T@1Mj))))))
                                                                                      g$ls/false$18028$T@1Mj)
                                                                                    ((case-lambda
                                                                                       ((g$t$18036$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$18037$T@1Mj)
                                                                                            (if g$ls/false$18037$T@1Mj
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$17935$T@1Mj)
                                                                                                     g$maps$17937$T@1Mj)))
                                                                                                g$ls/false$18037$T@1Mj)
                                                                                              (g$syntax-violation$16124$T@1Mj
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$18036$T@1Mj))))
                                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                                           g$t$18036$T@1Mj
                                                                                           '_))))
                                                                                     g$t$18027$T@1Mj))))
                                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                                 g$t$18027$T@1Mj
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$18011$T@1Mj))))
                                                                     (g$syntax-dispatch$16005$T@1Mj
                                                                       g$t$18011$T@1Mj
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$17964$T@1Mj))))
                                                           (g$syntax-dispatch$16005$T@1Mj
                                                             g$t$17964$T@1Mj
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$17957$T@1Mj))))
                                                 (g$syntax-dispatch$16005$T@1Mj
                                                   g$t$17957$T@1Mj
                                                   '(any any)))))
                                             g$t$17944$T@1Mj))))
                                       (g$syntax-dispatch$16005$T@1Mj
                                         g$t$17944$T@1Mj
                                         'any))))
                                   g$t$17940$T@1Mj))))
                             (g$syntax-dispatch$16005$T@1Mj
                               g$t$17940$T@1Mj
                               'any))))
                         g$e$17935$T@1Mj))))
                   (g$gen-ref$17875$T@1Mj
                     (case-lambda
                       ((g$src$17921$T@1Mj
                          g$var$17922$T@1Mj
                          g$level$17923$T@1Mj
                          g$maps$17924$T@1Mj)
                        (if (= g$level$17923$T@1Mj '0)
                          (values g$var$17922$T@1Mj g$maps$17924$T@1Mj)
                          (if (null? g$maps$17924$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$17921$T@1Mj)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$17875$T@1Mj
                                   g$src$17921$T@1Mj
                                   g$var$17922$T@1Mj
                                   (- g$level$17923$T@1Mj '1)
                                   (cdr g$maps$17924$T@1Mj))))
                              (case-lambda
                                ((g$outer-var$17927$T@1Mj
                                   g$outer-maps$17928$T@1Mj)
                                 ((case-lambda
                                    ((g$outer-maps$17929$T@1Mj
                                       g$outer-var$17930$T@1Mj)
                                     ((case-lambda
                                        ((g$t$17931$T@1Mj)
                                         (if g$t$17931$T@1Mj
                                           ((case-lambda
                                              ((g$b$17932$T@1Mj)
                                               (values
                                                 (cdr g$b$17932$T@1Mj)
                                                 g$maps$17924$T@1Mj)))
                                            g$t$17931$T@1Mj)
                                           ((case-lambda
                                              ((g$inner-var$17933$T@1Mj)
                                               (values
                                                 g$inner-var$17933$T@1Mj
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$17930$T@1Mj
                                                       g$inner-var$17933$T@1Mj)
                                                     (car g$maps$17924$T@1Mj))
                                                   g$outer-maps$17929$T@1Mj))))
                                            (g$gen-lexical$15442$T@1Mj
                                              'tmp)))))
                                      (g$assq$11712$T@1Mj
                                        g$outer-var$17930$T@1Mj
                                        (car g$maps$17924$T@1Mj)))))
                                  g$outer-maps$17928$T@1Mj
                                  g$outer-var$17927$T@1Mj)))))))))
                   (g$gen-append$17876$T@1Mj
                     (case-lambda
                       ((g$x$17919$T@1Mj g$y$17920$T@1Mj)
                        (if (equal? g$y$17920$T@1Mj ''())
                          g$x$17919$T@1Mj
                          (list
                            'append
                            g$x$17919$T@1Mj
                            g$y$17920$T@1Mj)))))
                   (g$gen-mappend$17877$T@1Mj
                     (case-lambda
                       ((g$e$17917$T@1Mj g$map-env$17918$T@1Mj)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$17878$T@1Mj
                            g$e$17917$T@1Mj
                            g$map-env$17918$T@1Mj)))))
                   (g$gen-map$17878$T@1Mj
                     (case-lambda
                       ((g$e$17908$T@1Mj g$map-env$17909$T@1Mj)
                        ((case-lambda
                           ((g$formals$17910$T@1Mj
                              g$actuals$17911$T@1Mj)
                            (if (eq? (car g$e$17908$T@1Mj) 'ref)
                              (car g$actuals$17911$T@1Mj)
                              (if (g$for-all$11722$T@1Mj
                                    (case-lambda
                                      ((g$x$17912$T@1Mj)
                                       (if (eq? (car g$x$17912$T@1Mj)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11716$T@1Mj
                                             (g$cadr$12477$T@1Mj
                                               g$x$17912$T@1Mj)
                                             g$formals$17910$T@1Mj))
                                         '#f)))
                                    (cdr g$e$17908$T@1Mj))
                                ((case-lambda
                                   ((g$args$17913$T@1Mj)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$17908$T@1Mj))
                                        g$args$17913$T@1Mj))))
                                 (g$map$11724$T@1Mj
                                   ((case-lambda
                                      ((g$r$17914$T@1Mj)
                                       (case-lambda
                                         ((g$x$17915$T@1Mj)
                                          (cdr (g$assq$11712$T@1Mj
                                                 (g$cadr$12477$T@1Mj
                                                   g$x$17915$T@1Mj)
                                                 g$r$17914$T@1Mj))))))
                                    (g$map$11724$T@1Mj
                                      cons
                                      g$formals$17910$T@1Mj
                                      g$actuals$17911$T@1Mj))
                                   (cdr g$e$17908$T@1Mj)))
                                (g$cons*$11726$T@1Mj
                                  'map
                                  (list
                                    'lambda
                                    g$formals$17910$T@1Mj
                                    g$e$17908$T@1Mj)
                                  g$actuals$17911$T@1Mj)))))
                         (g$map$11724$T@1Mj cdr g$map-env$17909$T@1Mj)
                         (g$map$11724$T@1Mj
                           (case-lambda
                             ((g$x$17916$T@1Mj)
                              (list 'ref (car g$x$17916$T@1Mj))))
                           g$map-env$17909$T@1Mj)))))
                   (g$gen-cons$17879$T@1Mj
                     (case-lambda
                       ((g$e$17900$T@1Mj
                          g$x$17901$T@1Mj
                          g$y$17902$T@1Mj
                          g$xnew$17903$T@1Mj
                          g$ynew$17904$T@1Mj)
                        ((case-lambda
                           ((g$t$17905$T@1Mj)
                            (if (eqv? g$t$17905$T@1Mj 'quote)
                              (if (eq? (car g$xnew$17903$T@1Mj) 'quote)
                                ((case-lambda
                                   ((g$xnew$17906$T@1Mj
                                      g$ynew$17907$T@1Mj)
                                    (if (if (eq? g$xnew$17906$T@1Mj
                                                 g$x$17901$T@1Mj)
                                          (begin
                                            '#f
                                            (eq? g$ynew$17907$T@1Mj
                                                 g$y$17902$T@1Mj))
                                          '#f)
                                      (list 'quote g$e$17900$T@1Mj)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$17906$T@1Mj
                                          g$ynew$17907$T@1Mj)))))
                                 (g$cadr$12477$T@1Mj g$xnew$17903$T@1Mj)
                                 (g$cadr$12477$T@1Mj
                                   g$ynew$17904$T@1Mj))
                                (if (null?
                                      (g$cadr$12477$T@1Mj
                                        g$ynew$17904$T@1Mj))
                                  (list 'list g$xnew$17903$T@1Mj)
                                  (list
                                    'cons
                                    g$xnew$17903$T@1Mj
                                    g$ynew$17904$T@1Mj)))
                              (if (eqv? g$t$17905$T@1Mj 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$17903$T@1Mj
                                    (cdr g$ynew$17904$T@1Mj)))
                                (list
                                  'cons
                                  g$xnew$17903$T@1Mj
                                  g$ynew$17904$T@1Mj)))))
                         (car g$ynew$17904$T@1Mj)))))
                   (g$gen-vector$17880$T@1Mj
                     (case-lambda
                       ((g$e$17897$T@1Mj
                          g$ls$17898$T@1Mj
                          g$lsnew$17899$T@1Mj)
                        (if (eq? (car g$lsnew$17899$T@1Mj) 'quote)
                          (if (eq? (g$cadr$12477$T@1Mj
                                     g$lsnew$17899$T@1Mj)
                                   g$ls$17898$T@1Mj)
                            (list 'quote g$e$17897$T@1Mj)
                            (list
                              'quote
                              (g$list->vector$12462$T@1Mj
                                (g$cadr$12477$T@1Mj
                                  g$lsnew$17899$T@1Mj))))
                          (if (eq? (car g$lsnew$17899$T@1Mj) 'list)
                            (cons 'vector (cdr g$lsnew$17899$T@1Mj))
                            (list
                              'list->vector
                              g$lsnew$17899$T@1Mj))))))
                   (g$regen$17881$T@1Mj
                     (case-lambda
                       ((g$x$17894$T@1Mj)
                        ((case-lambda
                           ((g$t$17895$T@1Mj)
                            (if (eqv? g$t$17895$T@1Mj 'ref)
                              (g$cadr$12477$T@1Mj g$x$17894$T@1Mj)
                              (if (eqv? g$t$17895$T@1Mj 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12477$T@1Mj g$x$17894$T@1Mj))
                                (if (eqv? g$t$17895$T@1Mj 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12477$T@1Mj
                                      g$x$17894$T@1Mj))
                                  (if (eqv? g$t$17895$T@1Mj 'lambda)
                                    (g$build-lambda$15429$T@1Mj
                                      '#f
                                      (g$cadr$12477$T@1Mj
                                        g$x$17894$T@1Mj)
                                      (g$regen$17881$T@1Mj
                                        (g$caddr$12483$T@1Mj
                                          g$x$17894$T@1Mj)))
                                    (if (eqv? g$t$17895$T@1Mj 'map)
                                      ((case-lambda
                                         ((g$ls$17896$T@1Mj)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$17896$T@1Mj)))
                                       (g$map$11724$T@1Mj
                                         g$regen$17881$T@1Mj
                                         (cdr g$x$17894$T@1Mj)))
                                      (cons
                                        (list
                                          'primitive
                                          (car g$x$17894$T@1Mj))
                                        (g$map$11724$T@1Mj
                                          g$regen$17881$T@1Mj
                                          (cdr g$x$17894$T@1Mj))))))))))
                         (car g$x$17894$T@1Mj))))))
           (case-lambda
             ((g$e$17882$T@1Mj g$r$17883$T@1Mj g$mr$17884$T@1Mj)
              ((case-lambda
                 ((g$t$17885$T@1Mj)
                  ((case-lambda
                     ((g$ls/false$17886$T@1Mj)
                      (if g$ls/false$17886$T@1Mj
                        (apply
                          (case-lambda
                            ((g$x$17887$T@1Mj)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$17874$T@1Mj
                                    g$e$17882$T@1Mj
                                    g$x$17887$T@1Mj
                                    g$r$17883$T@1Mj
                                    '()
                                    g$ellipsis?$16006$T@1Mj
                                    '#f)))
                               (case-lambda
                                 ((g$e$17890$T@1Mj g$maps$17891$T@1Mj)
                                  ((case-lambda
                                     ((g$maps$17892$T@1Mj
                                        g$e$17893$T@1Mj)
                                      (g$regen$17881$T@1Mj
                                        g$e$17893$T@1Mj)))
                                   g$maps$17891$T@1Mj
                                   g$e$17890$T@1Mj))))))
                          g$ls/false$17886$T@1Mj)
                        (g$syntax-violation$16124$T@1Mj
                          '#f
                          '"invalid syntax"
                          g$t$17885$T@1Mj))))
                   (g$syntax-dispatch$16005$T@1Mj
                     g$t$17885$T@1Mj
                     '(_ any)))))
               g$e$17882$T@1Mj))))))))
   (g$core-macro-transformer$16012$T@1Mj
     g$core-macro-transformer$19608$T@1Mj
     (case-lambda
       ((g$name$18038$T@1Mj)
        ((case-lambda
           ((g$t$18039$T@1Mj)
            (if (eqv? g$t$18039$T@1Mj 'quote)
              g$quote-transformer$15965$T@1Mj
              (if (eqv? g$t$18039$T@1Mj 'lambda)
                g$lambda-transformer$15967$T@1Mj
                (if (eqv? g$t$18039$T@1Mj 'case-lambda)
                  g$case-lambda-transformer$15966$T@1Mj
                  (if (eqv? g$t$18039$T@1Mj 'letrec)
                    g$letrec-transformer$15955$T@1Mj
                    (if (eqv? g$t$18039$T@1Mj 'letrec*)
                      g$letrec*-transformer$15956$T@1Mj
                      (if (eqv? g$t$18039$T@1Mj 'if)
                        g$if-transformer$15963$T@1Mj
                        (if (eqv? g$t$18039$T@1Mj 'foreign-call)
                          g$foreign-call-transformer$16003$T@1Mj
                          (if (eqv? g$t$18039$T@1Mj 'syntax-case)
                            g$syntax-case-transformer$16009$T@1Mj
                            (if (eqv? g$t$18039$T@1Mj 'syntax)
                              g$syntax-transformer$16011$T@1Mj
                              (if (eqv?
                                    g$t$18039$T@1Mj
                                    'type-descriptor)
                                g$type-descriptor-transformer$15958$T@1Mj
                                (if (eqv?
                                      g$t$18039$T@1Mj
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$15959$T@1Mj
                                  (if (eqv?
                                        g$t$18039$T@1Mj
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$15960$T@1Mj
                                    (if (eqv?
                                          g$t$18039$T@1Mj
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$15957$T@1Mj
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$18038$T@1Mj))))))))))))))))
         g$name$18038$T@1Mj))))
   (g$file-options-macro$16013$T@1Mj
     g$file-options-macro$19609$T@1Mj
     (case-lambda
       ((g$x$18040$T@1Mj)
        (letrec* ((g$valid-option?$18041$T@1Mj
                    (case-lambda
                      ((g$x$18046$T@1Mj)
                       (if (g$id?$15507$T@1Mj g$x$18046$T@1Mj)
                         (begin
                           '#f
                           (g$memq$11716$T@1Mj
                             (g$id->sym$15508$T@1Mj g$x$18046$T@1Mj)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$18042$T@1Mj)
              ((case-lambda
                 ((g$ls/false$18043$T@1Mj)
                  (if (if g$ls/false$18043$T@1Mj
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$18044$T@1Mj)
                               (if (g$for-all$11722$T@1Mj
                                     g$valid-option?$18041$T@1Mj
                                     g$opt*$18044$T@1Mj)
                                 (begin
                                   '#f
                                   (g$file-options-spec$14371$T@1Mj
                                     (g$map$11724$T@1Mj
                                       g$id->sym$15508$T@1Mj
                                       g$opt*$18044$T@1Mj)))
                                 '#f)))
                            g$ls/false$18043$T@1Mj))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$18045$T@1Mj)
                         (g$bless$15968$T@1Mj
                           (list
                             'quote
                             (g$file-options-spec$14371$T@1Mj
                               (g$map$11724$T@1Mj
                                 g$id->sym$15508$T@1Mj
                                 g$opt*$18045$T@1Mj))))))
                      g$ls/false$18043$T@1Mj)
                    (g$syntax-violation$16124$T@1Mj
                      '#f
                      '"invalid syntax"
                      g$t$18042$T@1Mj))))
               (g$syntax-dispatch$16005$T@1Mj
                 g$t$18042$T@1Mj
                 '(_ . each-any)))))
           g$x$18040$T@1Mj)))))
   (g$symbol-macro$16014$T@1Mj
     g$symbol-macro$19610$T@1Mj
     (case-lambda
       ((g$x$18047$T@1Mj g$set$18048$T@1Mj)
        ((case-lambda
           ((g$t$18049$T@1Mj)
            ((case-lambda
               ((g$ls/false$18050$T@1Mj)
                (if (if g$ls/false$18050$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$18051$T@1Mj)
                             (if (g$id?$15507$T@1Mj g$name$18051$T@1Mj)
                               (begin
                                 '#f
                                 (g$memq$11716$T@1Mj
                                   (g$id->sym$15508$T@1Mj
                                     g$name$18051$T@1Mj)
                                   g$set$18048$T@1Mj))
                               '#f)))
                          g$ls/false$18050$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$18052$T@1Mj)
                       (g$bless$15968$T@1Mj
                         (list 'quote g$name$18052$T@1Mj))))
                    g$ls/false$18050$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$18049$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj g$t$18049$T@1Mj '(_ any)))))
         g$x$18047$T@1Mj))))
   (g$macro-transformer$16015$T@1Mj
     g$macro-transformer$19611$T@1Mj
     (case-lambda
       ((g$x$18053$T@1Mj)
        (if (g$procedure?$12469$T@1Mj g$x$18053$T@1Mj)
          g$x$18053$T@1Mj
          (if (g$symbol?$12467$T@1Mj g$x$18053$T@1Mj)
            ((case-lambda
               ((g$t$18054$T@1Mj)
                (if (eqv? g$t$18054$T@1Mj 'define-record-type)
                  g$define-record-type-macro$15999$T@1Mj
                  (if (eqv? g$t$18054$T@1Mj 'define-struct)
                    g$define-struct-macro$15998$T@1Mj
                    (if (eqv? g$t$18054$T@1Mj 'include)
                      g$include-macro$15993$T@1Mj
                      (if (eqv? g$t$18054$T@1Mj 'cond)
                        g$cond-macro$15991$T@1Mj
                        (if (eqv? g$t$18054$T@1Mj 'let)
                          g$let-macro$15971$T@1Mj
                          (if (eqv? g$t$18054$T@1Mj 'do)
                            g$do-macro$15987$T@1Mj
                            (if (eqv? g$t$18054$T@1Mj 'or)
                              g$or-macro$15989$T@1Mj
                              (if (eqv? g$t$18054$T@1Mj 'and)
                                g$and-macro$15990$T@1Mj
                                (if (eqv? g$t$18054$T@1Mj 'let*)
                                  g$let*-macro$15988$T@1Mj
                                  (if (eqv? g$t$18054$T@1Mj 'let-values)
                                    g$let-values-macro$15972$T@1Mj
                                    (if (eqv?
                                          g$t$18054$T@1Mj
                                          'let*-values)
                                      g$let*-values-macro$15973$T@1Mj
                                      (if (eqv?
                                            g$t$18054$T@1Mj
                                            'syntax-rules)
                                        g$syntax-rules-macro$15995$T@1Mj
                                        (if (eqv?
                                              g$t$18054$T@1Mj
                                              'quasiquote)
                                          g$quasiquote-macro$15996$T@1Mj
                                          (if (eqv?
                                                g$t$18054$T@1Mj
                                                'quasisyntax)
                                            g$quasisyntax-macro$15997$T@1Mj
                                            (if (eqv?
                                                  g$t$18054$T@1Mj
                                                  'with-syntax)
                                              g$with-syntax-macro$15969$T@1Mj
                                              (if (eqv?
                                                    g$t$18054$T@1Mj
                                                    'when)
                                                g$when-macro$15961$T@1Mj
                                                (if (eqv?
                                                      g$t$18054$T@1Mj
                                                      'unless)
                                                  g$unless-macro$15962$T@1Mj
                                                  (if (eqv?
                                                        g$t$18054$T@1Mj
                                                        'case)
                                                    g$case-macro$15964$T@1Mj
                                                    (if (eqv?
                                                          g$t$18054$T@1Mj
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$15986$T@1Mj
                                                      (if (eqv?
                                                            g$t$18054$T@1Mj
                                                            'time)
                                                        g$time-macro$15982$T@1Mj
                                                        (if (eqv?
                                                              g$t$18054$T@1Mj
                                                              'delay)
                                                          g$delay-macro$15983$T@1Mj
                                                          (if (eqv?
                                                                g$t$18054$T@1Mj
                                                                'assert)
                                                            g$assert-macro$15984$T@1Mj
                                                            (if (eqv?
                                                                  g$t$18054$T@1Mj
                                                                  'endianness)
                                                              g$endianness-macro$15985$T@1Mj
                                                              (if (eqv?
                                                                    g$t$18054$T@1Mj
                                                                    'guard)
                                                                g$guard-macro$15980$T@1Mj
                                                                (if (eqv?
                                                                      g$t$18054$T@1Mj
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$15981$T@1Mj
                                                                  (if (eqv?
                                                                        g$t$18054$T@1Mj
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$15974$T@1Mj
                                                                    (if (eqv?
                                                                          g$t$18054$T@1Mj
                                                                          'trace-define)
                                                                      g$trace-define-macro$15975$T@1Mj
                                                                      (if (eqv?
                                                                            g$t$18054$T@1Mj
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$15976$T@1Mj
                                                                        (if (eqv?
                                                                              g$t$18054$T@1Mj
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$15978$T@1Mj
                                                                          (if (eqv?
                                                                                g$t$18054$T@1Mj
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$15979$T@1Mj
                                                                            (if (eqv?
                                                                                  g$t$18054$T@1Mj
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$16000$T@1Mj
                                                                              (if (eqv?
                                                                                    g$t$18054$T@1Mj
                                                                                    'parameterize)
                                                                                g$parameterize-macro$16002$T@1Mj
                                                                                (if (eqv?
                                                                                      g$t$18054$T@1Mj
                                                                                      'include-into)
                                                                                  g$include-into-macro$15994$T@1Mj
                                                                                  (if (eqv?
                                                                                        g$t$18054$T@1Mj
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$18055$T@1Mj)
                                                                                       (g$symbol-macro$16014$T@1Mj
                                                                                         g$x$18055$T@1Mj
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$18054$T@1Mj
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$18056$T@1Mj)
                                                                                         (g$symbol-macro$16014$T@1Mj
                                                                                           g$x$18056$T@1Mj
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$18054$T@1Mj
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$18057$T@1Mj)
                                                                                           (g$symbol-macro$16014$T@1Mj
                                                                                             g$x$18057$T@1Mj
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$18054$T@1Mj
                                                                                              'file-options)
                                                                                          g$file-options-macro$16013$T@1Mj
                                                                                          (if (g$memv$11717$T@1Mj
                                                                                                g$t$18054$T@1Mj
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$16001$T@1Mj
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$18053$T@1Mj)))))))))))))))))))))))))))))))))))))))))
             g$x$18053$T@1Mj)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$18053$T@1Mj))))))
   (g$local-macro-transformer$16016$T@1Mj
     g$local-macro-transformer$19612$T@1Mj
     (case-lambda ((g$x$18058$T@1Mj) (car g$x$18058$T@1Mj))))
   (g$do-macro-call$16017$T@1Mj
     g$do-macro-call$19613$T@1Mj
     (case-lambda
       ((g$transformer$18059$T@1Mj g$expr$18060$T@1Mj g$r$18061$T@1Mj)
        (letrec* ((g$return$18062$T@1Mj
                    (case-lambda
                      ((g$x$18070$T@1Mj)
                       (begin
                         ((letrec ((g$f$18071$T@1Mj
                                     (case-lambda
                                       ((g$x$18072$T@1Mj)
                                        (if (not (g$stx?$15479$T@1Mj
                                                   g$x$18072$T@1Mj))
                                          (if (pair? g$x$18072$T@1Mj)
                                            (begin
                                              (g$f$18071$T@1Mj
                                                (car g$x$18072$T@1Mj))
                                              (g$f$18071$T@1Mj
                                                (cdr g$x$18072$T@1Mj)))
                                            (if (g$vector?$12465$T@1Mj
                                                  g$x$18072$T@1Mj)
                                              (g$vector-for-each$12529$T@1Mj
                                                g$f$18071$T@1Mj
                                                g$x$18072$T@1Mj)
                                              (if (g$symbol?$12467$T@1Mj
                                                    g$x$18072$T@1Mj)
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$18060$T@1Mj
                                                  g$x$18072$T@1Mj)
                                                (void))))
                                          (void))))))
                            g$f$18071$T@1Mj)
                          g$x$18070$T@1Mj)
                         (g$add-mark$15496$T@1Mj
                           (g$gen-mark$15491$T@1Mj)
                           g$x$18070$T@1Mj
                           g$expr$18060$T@1Mj))))))
          ((case-lambda
             ((g$x$18063$T@1Mj)
              (if (g$procedure?$12469$T@1Mj g$x$18063$T@1Mj)
                (g$return$18062$T@1Mj
                  (g$x$18063$T@1Mj
                    (case-lambda
                      ((g$id$18064$T@1Mj)
                       (begin
                         (if (not (g$id?$15507$T@1Mj g$id$18064$T@1Mj))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$18064$T@1Mj)
                           (void))
                         ((case-lambda
                            ((g$label$18065$T@1Mj)
                             ((case-lambda
                                ((g$binding$18066$T@1Mj)
                                 ((case-lambda
                                    ((g$t$18067$T@1Mj)
                                     (if (eqv?
                                           g$t$18067$T@1Mj
                                           'local-ctv)
                                       (g$cadr$12477$T@1Mj
                                         g$binding$18066$T@1Mj)
                                       (if (eqv?
                                             g$t$18067$T@1Mj
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$18068$T@1Mj
                                               g$loc$18069$T@1Mj)
                                             (begin
                                               (g$visit-library$15214$T@1Mj
                                                 g$lib$18068$T@1Mj)
                                               (symbol-value
                                                 g$loc$18069$T@1Mj))))
                                          (g$cadr$12477$T@1Mj
                                            g$binding$18066$T@1Mj)
                                          (g$cddr$12479$T@1Mj
                                            g$binding$18066$T@1Mj))
                                         '#f))))
                                  (car g$binding$18066$T@1Mj))))
                              (g$label->binding$15522$T@1Mj
                                g$label$18065$T@1Mj
                                g$r$18061$T@1Mj))))
                          (g$id->label$15520$T@1Mj
                            g$id$18064$T@1Mj)))))))
                (g$return$18062$T@1Mj g$x$18063$T@1Mj))))
           (g$transformer$18059$T@1Mj
             (g$add-mark$15496$T@1Mj
               g$anti-mark$15492$T@1Mj
               g$expr$18060$T@1Mj
               '#f)))))))
   (g$chi-macro$16018$T@1Mj
     g$chi-macro$19614$T@1Mj
     (case-lambda
       ((g$p$18073$T@1Mj g$e$18074$T@1Mj g$r$18075$T@1Mj)
        (g$do-macro-call$16017$T@1Mj
          (g$macro-transformer$16015$T@1Mj g$p$18073$T@1Mj)
          g$e$18074$T@1Mj
          g$r$18075$T@1Mj))))
   (g$chi-local-macro$16019$T@1Mj
     g$chi-local-macro$19615$T@1Mj
     (case-lambda
       ((g$p$18076$T@1Mj g$e$18077$T@1Mj g$r$18078$T@1Mj)
        (g$do-macro-call$16017$T@1Mj
          (g$local-macro-transformer$16016$T@1Mj g$p$18076$T@1Mj)
          g$e$18077$T@1Mj
          g$r$18078$T@1Mj))))
   (g$chi-global-macro$16020$T@1Mj
     g$chi-global-macro$19616$T@1Mj
     (case-lambda
       ((g$p$18079$T@1Mj g$e$18080$T@1Mj g$r$18081$T@1Mj)
        ((case-lambda
           ((g$lib$18082$T@1Mj g$loc$18083$T@1Mj)
            (begin
              (g$visit-library$15214$T@1Mj g$lib$18082$T@1Mj)
              ((case-lambda
                 ((g$x$18084$T@1Mj)
                  ((case-lambda
                     ((g$transformer$18085$T@1Mj)
                      (g$do-macro-call$16017$T@1Mj
                        g$transformer$18085$T@1Mj
                        g$e$18080$T@1Mj
                        g$r$18081$T@1Mj)))
                   (if (g$procedure?$12469$T@1Mj g$x$18084$T@1Mj)
                     g$x$18084$T@1Mj
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$18084$T@1Mj)))))
               (symbol-value g$loc$18083$T@1Mj)))))
         (car g$p$18079$T@1Mj)
         (cdr g$p$18079$T@1Mj)))))
   (g$chi-expr*$16021$T@1Mj
     g$chi-expr*$19617$T@1Mj
     (case-lambda
       ((g$e*$18086$T@1Mj g$r$18087$T@1Mj g$mr$18088$T@1Mj)
        (if (null? g$e*$18086$T@1Mj)
          '()
          ((case-lambda
             ((g$e$18089$T@1Mj)
              (cons
                g$e$18089$T@1Mj
                (g$chi-expr*$16021$T@1Mj
                  (cdr g$e*$18086$T@1Mj)
                  g$r$18087$T@1Mj
                  g$mr$18088$T@1Mj))))
           (g$chi-expr$16023$T@1Mj
             (car g$e*$18086$T@1Mj)
             g$r$18087$T@1Mj
             g$mr$18088$T@1Mj))))))
   (g$chi-application$16022$T@1Mj
     g$chi-application$19618$T@1Mj
     (case-lambda
       ((g$e$18090$T@1Mj g$r$18091$T@1Mj g$mr$18092$T@1Mj)
        ((case-lambda
           ((g$t$18093$T@1Mj)
            ((case-lambda
               ((g$ls/false$18094$T@1Mj)
                (if g$ls/false$18094$T@1Mj
                  (apply
                    (case-lambda
                      ((g$rator$18095$T@1Mj g$rands$18096$T@1Mj)
                       ((case-lambda
                          ((g$rator$18097$T@1Mj)
                           (cons
                             g$rator$18097$T@1Mj
                             (g$chi-expr*$16021$T@1Mj
                               g$rands$18096$T@1Mj
                               g$r$18091$T@1Mj
                               g$mr$18092$T@1Mj))))
                        (g$chi-expr$16023$T@1Mj
                          g$rator$18095$T@1Mj
                          g$r$18091$T@1Mj
                          g$mr$18092$T@1Mj))))
                    g$ls/false$18094$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$18093$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18093$T@1Mj
               '(any . each-any)))))
         g$e$18090$T@1Mj))))
   (g$chi-expr$16023$T@1Mj
     g$chi-expr$19619$T@1Mj
     (case-lambda
       ((g$e$18098$T@1Mj g$r$18099$T@1Mj g$mr$18100$T@1Mj)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$15527$T@1Mj
               g$e$18098$T@1Mj
               g$r$18099$T@1Mj)))
          (case-lambda
            ((g$type$18104$T@1Mj g$value$18105$T@1Mj g$kwd$18106$T@1Mj)
             ((case-lambda
                ((g$kwd$18107$T@1Mj
                   g$value$18108$T@1Mj
                   g$type$18109$T@1Mj)
                 ((case-lambda
                    ((g$t$18110$T@1Mj)
                     (if (eqv? g$t$18110$T@1Mj 'core-macro)
                       ((case-lambda
                          ((g$transformer$18111$T@1Mj)
                           (g$transformer$18111$T@1Mj
                             g$e$18098$T@1Mj
                             g$r$18099$T@1Mj
                             g$mr$18100$T@1Mj)))
                        (g$core-macro-transformer$16012$T@1Mj
                          g$value$18108$T@1Mj))
                       (if (eqv? g$t$18110$T@1Mj 'global)
                         ((case-lambda
                            ((g$lib$18112$T@1Mj)
                             ((case-lambda
                                ((g$loc$18113$T@1Mj)
                                 (begin
                                   ((g$inv-collector$16060$T@1Mj)
                                    g$lib$18112$T@1Mj)
                                   g$loc$18113$T@1Mj)))
                              (cdr g$value$18108$T@1Mj))))
                          (car g$value$18108$T@1Mj))
                         (if (eqv? g$t$18110$T@1Mj 'core-prim)
                           ((case-lambda
                              ((g$name$18114$T@1Mj)
                               (list 'primitive g$name$18114$T@1Mj)))
                            g$value$18108$T@1Mj)
                           (if (eqv? g$t$18110$T@1Mj 'call)
                             (g$chi-application$16022$T@1Mj
                               g$e$18098$T@1Mj
                               g$r$18099$T@1Mj
                               g$mr$18100$T@1Mj)
                             (if (eqv? g$t$18110$T@1Mj 'lexical)
                               ((case-lambda
                                  ((g$lex$18115$T@1Mj)
                                   g$lex$18115$T@1Mj))
                                (g$lexical-var$15949$T@1Mj
                                  g$value$18108$T@1Mj))
                               (if (g$memv$11717$T@1Mj
                                     g$t$18110$T@1Mj
                                     '(global-macro global-macro!))
                                 (g$chi-expr$16023$T@1Mj
                                   (g$chi-global-macro$16020$T@1Mj
                                     g$value$18108$T@1Mj
                                     g$e$18098$T@1Mj
                                     g$r$18099$T@1Mj)
                                   g$r$18099$T@1Mj
                                   g$mr$18100$T@1Mj)
                                 (if (g$memv$11717$T@1Mj
                                       g$t$18110$T@1Mj
                                       '(local-macro local-macro!))
                                   (g$chi-expr$16023$T@1Mj
                                     (g$chi-local-macro$16019$T@1Mj
                                       g$value$18108$T@1Mj
                                       g$e$18098$T@1Mj
                                       g$r$18099$T@1Mj)
                                     g$r$18099$T@1Mj
                                     g$mr$18100$T@1Mj)
                                   (if (g$memv$11717$T@1Mj
                                         g$t$18110$T@1Mj
                                         '(macro macro!))
                                     (g$chi-expr$16023$T@1Mj
                                       (g$chi-macro$16018$T@1Mj
                                         g$value$18108$T@1Mj
                                         g$e$18098$T@1Mj
                                         g$r$18099$T@1Mj)
                                       g$r$18099$T@1Mj
                                       g$mr$18100$T@1Mj)
                                     (if (eqv?
                                           g$t$18110$T@1Mj
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$18116$T@1Mj)
                                           (list
                                             'quote
                                             g$datum$18116$T@1Mj)))
                                        g$value$18108$T@1Mj)
                                       (if (eqv? g$t$18110$T@1Mj 'set!)
                                         (g$chi-set!$16024$T@1Mj
                                           g$e$18098$T@1Mj
                                           g$r$18099$T@1Mj
                                           g$mr$18100$T@1Mj)
                                         (if (eqv?
                                               g$t$18110$T@1Mj
                                               'begin)
                                           ((case-lambda
                                              ((g$t$18117$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$18118$T@1Mj)
                                                   (if g$ls/false$18118$T@1Mj
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$18119$T@1Mj
                                                            g$x*$18120$T@1Mj)
                                                          (g$build-sequence$15432$T@1Mj
                                                            '#f
                                                            (g$chi-expr*$16021$T@1Mj
                                                              (cons
                                                                g$x$18119$T@1Mj
                                                                g$x*$18120$T@1Mj)
                                                              g$r$18099$T@1Mj
                                                              g$mr$18100$T@1Mj))))
                                                       g$ls/false$18118$T@1Mj)
                                                     (g$syntax-violation$16124$T@1Mj
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$18117$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$18117$T@1Mj
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$18098$T@1Mj)
                                           (if (g$memv$11717$T@1Mj
                                                 g$t$18110$T@1Mj
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$18121$T@1Mj)
                                                 ((case-lambda
                                                    ((g$ls/false$18122$T@1Mj)
                                                     (if (if g$ls/false$18122$T@1Mj
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$18123$T@1Mj
                                                                    g$xrhs*$18124$T@1Mj
                                                                    g$xbody$18125$T@1Mj
                                                                    g$xbody*$18126$T@1Mj)
                                                                  (if (not (g$valid-bound-ids?$15512$T@1Mj
                                                                             g$xlhs*$18123$T@1Mj))
                                                                    (g$syntax-violation$16124$T@1Mj
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$18098$T@1Mj)
                                                                    (void))))
                                                               g$ls/false$18122$T@1Mj))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$18127$T@1Mj
                                                              g$xrhs*$18128$T@1Mj
                                                              g$xbody$18129$T@1Mj
                                                              g$xbody*$18130$T@1Mj)
                                                            ((case-lambda
                                                               ((g$xlab*$18131$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$xrib$18132$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$xb*$18133$T@1Mj)
                                                                        (g$build-sequence$15432$T@1Mj
                                                                          '#f
                                                                          (g$chi-expr*$16021$T@1Mj
                                                                            (g$map$11724$T@1Mj
                                                                              (case-lambda
                                                                                ((g$x$18134$T@1Mj)
                                                                                 (g$add-subst$15497$T@1Mj
                                                                                   g$xrib$18132$T@1Mj
                                                                                   g$x$18134$T@1Mj)))
                                                                              (cons
                                                                                g$xbody$18129$T@1Mj
                                                                                g$xbody*$18130$T@1Mj))
                                                                            (append
                                                                              (g$map$11724$T@1Mj
                                                                                cons
                                                                                g$xlab*$18131$T@1Mj
                                                                                g$xb*$18133$T@1Mj)
                                                                              g$r$18099$T@1Mj)
                                                                            (append
                                                                              (g$map$11724$T@1Mj
                                                                                cons
                                                                                g$xlab*$18131$T@1Mj
                                                                                g$xb*$18133$T@1Mj)
                                                                              g$mr$18100$T@1Mj)))))
                                                                     (g$map$11724$T@1Mj
                                                                       (case-lambda
                                                                         ((g$x$18135$T@1Mj)
                                                                          (g$make-eval-transformer$15555$T@1Mj
                                                                            (g$expand-transformer$16053$T@1Mj
                                                                              (if (eq? g$type$18109$T@1Mj
                                                                                       'let-syntax)
                                                                                g$x$18135$T@1Mj
                                                                                (g$add-subst$15497$T@1Mj
                                                                                  g$xrib$18132$T@1Mj
                                                                                  g$x$18135$T@1Mj))
                                                                              g$mr$18100$T@1Mj))))
                                                                       g$xrhs*$18128$T@1Mj))))
                                                                 (g$make-full-rib$15473$T@1Mj
                                                                   g$xlhs*$18127$T@1Mj
                                                                   g$xlab*$18131$T@1Mj))))
                                                             (g$map$11724$T@1Mj
                                                               g$gen-label$15444$T@1Mj
                                                               g$xlhs*$18127$T@1Mj))))
                                                         g$ls/false$18122$T@1Mj)
                                                       (g$syntax-violation$16124$T@1Mj
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$18121$T@1Mj))))
                                                  (g$syntax-dispatch$16005$T@1Mj
                                                    g$t$18121$T@1Mj
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$18098$T@1Mj)
                                             (if (eqv?
                                                   g$t$18110$T@1Mj
                                                   'displaced-lexical)
                                               (g$syntax-violation$16124$T@1Mj
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$18098$T@1Mj)
                                               (if (eqv?
                                                     g$t$18110$T@1Mj
                                                     'syntax)
                                                 (g$syntax-violation$16124$T@1Mj
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$18098$T@1Mj)
                                                 (if (g$memv$11717$T@1Mj
                                                       g$t$18110$T@1Mj
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$16124$T@1Mj
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$18136$T@1Mj)
                                                           (if (eqv?
                                                                 g$t$18136$T@1Mj
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$18136$T@1Mj
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$18136$T@1Mj
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$18136$T@1Mj
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$18136$T@1Mj
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$18136$T@1Mj
                                                                           'export)
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$18109$T@1Mj)
                                                       '" was found where an expression was expected")
                                                     g$e$18098$T@1Mj)
                                                   (if (eqv?
                                                         g$t$18110$T@1Mj
                                                         'mutable)
                                                     (g$syntax-violation$16124$T@1Mj
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$18098$T@1Mj)
                                                     (g$syntax-violation$16124$T@1Mj
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$18098$T@1Mj)))))))))))))))))))
                  g$type$18109$T@1Mj)))
              g$kwd$18106$T@1Mj
              g$value$18105$T@1Mj
              g$type$18104$T@1Mj)))))))
   (g$chi-set!$16024$T@1Mj
     g$chi-set!$19620$T@1Mj
     (case-lambda
       ((g$e$18137$T@1Mj g$r$18138$T@1Mj g$mr$18139$T@1Mj)
        ((case-lambda
           ((g$t$18140$T@1Mj)
            ((case-lambda
               ((g$ls/false$18141$T@1Mj)
                (if (if g$ls/false$18141$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$18142$T@1Mj g$v$18143$T@1Mj)
                             (g$id?$15507$T@1Mj g$x$18142$T@1Mj)))
                          g$ls/false$18141$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$18144$T@1Mj g$v$18145$T@1Mj)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$15527$T@1Mj
                              g$x$18144$T@1Mj
                              g$r$18138$T@1Mj)))
                         (case-lambda
                           ((g$type$18149$T@1Mj
                              g$value$18150$T@1Mj
                              g$kwd$18151$T@1Mj)
                            ((case-lambda
                               ((g$kwd$18152$T@1Mj
                                  g$value$18153$T@1Mj
                                  g$type$18154$T@1Mj)
                                ((case-lambda
                                   ((g$t$18155$T@1Mj)
                                    (if (eqv? g$t$18155$T@1Mj 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$15951$T@1Mj
                                          g$value$18153$T@1Mj
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$15949$T@1Mj
                                            g$value$18153$T@1Mj)
                                          (g$chi-expr$16023$T@1Mj
                                            g$v$18145$T@1Mj
                                            g$r$18138$T@1Mj
                                            g$mr$18139$T@1Mj)))
                                      (if (eqv?
                                            g$t$18155$T@1Mj
                                            'core-prim)
                                        (g$syntax-violation$16124$T@1Mj
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$18137$T@1Mj)
                                        (if (eqv?
                                              g$t$18155$T@1Mj
                                              'global)
                                          (g$syntax-violation$16124$T@1Mj
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$18137$T@1Mj)
                                          (if (eqv?
                                                g$t$18155$T@1Mj
                                                'global-macro!)
                                            (g$chi-expr$16023$T@1Mj
                                              (g$chi-global-macro$16020$T@1Mj
                                                g$value$18153$T@1Mj
                                                g$e$18137$T@1Mj
                                                g$r$18138$T@1Mj)
                                              g$r$18138$T@1Mj
                                              g$mr$18139$T@1Mj)
                                            (if (eqv?
                                                  g$t$18155$T@1Mj
                                                  'local-macro!)
                                              (g$chi-expr$16023$T@1Mj
                                                (g$chi-local-macro$16019$T@1Mj
                                                  g$value$18153$T@1Mj
                                                  g$e$18137$T@1Mj
                                                  g$r$18138$T@1Mj)
                                                g$r$18138$T@1Mj
                                                g$mr$18139$T@1Mj)
                                              (if (eqv?
                                                    g$t$18155$T@1Mj
                                                    'mutable)
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$18137$T@1Mj)
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$18137$T@1Mj)))))))))
                                 g$type$18154$T@1Mj)))
                             g$kwd$18151$T@1Mj
                             g$value$18150$T@1Mj
                             g$type$18149$T@1Mj))))))
                    g$ls/false$18141$T@1Mj)
                  (g$syntax-violation$16124$T@1Mj
                    '#f
                    '"invalid syntax"
                    g$t$18140$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18140$T@1Mj
               '(_ any any)))))
         g$e$18137$T@1Mj))))
   (g$verify-formals$16025$T@1Mj
     g$verify-formals$19621$T@1Mj
     (case-lambda
       ((g$fmls$18156$T@1Mj g$stx$18157$T@1Mj)
        ((case-lambda
           ((g$t$18158$T@1Mj)
            ((case-lambda
               ((g$ls/false$18159$T@1Mj)
                (if g$ls/false$18159$T@1Mj
                  (apply
                    (case-lambda
                      ((g$x*$18160$T@1Mj)
                       (if (not (g$valid-bound-ids?$15512$T@1Mj
                                  g$x*$18160$T@1Mj))
                         (g$invalid-fmls-error$15970$T@1Mj
                           g$stx$18157$T@1Mj
                           g$fmls$18156$T@1Mj)
                         (void))))
                    g$ls/false$18159$T@1Mj)
                  ((case-lambda
                     ((g$t$18161$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$18162$T@1Mj)
                          (if g$ls/false$18162$T@1Mj
                            (apply
                              (case-lambda
                                ((g$x*$18163$T@1Mj g$x$18164$T@1Mj)
                                 (if (not (g$valid-bound-ids?$15512$T@1Mj
                                            (cons
                                              g$x$18164$T@1Mj
                                              g$x*$18163$T@1Mj)))
                                   (g$invalid-fmls-error$15970$T@1Mj
                                     g$stx$18157$T@1Mj
                                     g$fmls$18156$T@1Mj)
                                   (void))))
                              g$ls/false$18162$T@1Mj)
                            ((case-lambda
                               ((g$t$18165$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$18166$T@1Mj)
                                    (if g$ls/false$18166$T@1Mj
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$stx$18157$T@1Mj)))
                                        g$ls/false$18166$T@1Mj)
                                      (g$syntax-violation$16124$T@1Mj
                                        '#f
                                        '"invalid syntax"
                                        g$t$18165$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$18165$T@1Mj
                                   '_))))
                             g$t$18161$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$18161$T@1Mj
                         '#(each+ any () any)))))
                   g$t$18158$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18158$T@1Mj
               'each-any))))
         g$fmls$18156$T@1Mj))))
   (g$chi-lambda-clause$16026$T@1Mj
     g$chi-lambda-clause$19622$T@1Mj
     (case-lambda
       ((g$stx$18167$T@1Mj
          g$fmls$18168$T@1Mj
          g$body*$18169$T@1Mj
          g$r$18170$T@1Mj
          g$mr$18171$T@1Mj)
        ((case-lambda
           ((g$t$18172$T@1Mj)
            ((case-lambda
               ((g$ls/false$18173$T@1Mj)
                (if g$ls/false$18173$T@1Mj
                  (apply
                    (case-lambda
                      ((g$x*$18174$T@1Mj)
                       (begin
                         (g$verify-formals$16025$T@1Mj
                           g$fmls$18168$T@1Mj
                           g$stx$18167$T@1Mj)
                         ((case-lambda
                            ((g$lex*$18175$T@1Mj g$lab*$18176$T@1Mj)
                             (values
                               g$lex*$18175$T@1Mj
                               (g$chi-internal$16034$T@1Mj
                                 (g$add-subst$15497$T@1Mj
                                   (g$make-full-rib$15473$T@1Mj
                                     g$x*$18174$T@1Mj
                                     g$lab*$18176$T@1Mj)
                                   g$body*$18169$T@1Mj)
                                 (g$add-lexicals$15953$T@1Mj
                                   g$lab*$18176$T@1Mj
                                   g$lex*$18175$T@1Mj
                                   g$r$18170$T@1Mj)
                                 g$mr$18171$T@1Mj))))
                          (g$map$11724$T@1Mj
                            g$gen-lexical$15442$T@1Mj
                            g$x*$18174$T@1Mj)
                          (g$map$11724$T@1Mj
                            g$gen-label$15444$T@1Mj
                            g$x*$18174$T@1Mj)))))
                    g$ls/false$18173$T@1Mj)
                  ((case-lambda
                     ((g$t$18177$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$18178$T@1Mj)
                          (if g$ls/false$18178$T@1Mj
                            (apply
                              (case-lambda
                                ((g$x*$18179$T@1Mj g$x$18180$T@1Mj)
                                 (begin
                                   (g$verify-formals$16025$T@1Mj
                                     g$fmls$18168$T@1Mj
                                     g$stx$18167$T@1Mj)
                                   ((case-lambda
                                      ((g$lex*$18181$T@1Mj
                                         g$lab*$18182$T@1Mj
                                         g$lex$18183$T@1Mj
                                         g$lab$18184$T@1Mj)
                                       (values
                                         (append
                                           g$lex*$18181$T@1Mj
                                           g$lex$18183$T@1Mj)
                                         (g$chi-internal$16034$T@1Mj
                                           (g$add-subst$15497$T@1Mj
                                             (g$make-full-rib$15473$T@1Mj
                                               (cons
                                                 g$x$18180$T@1Mj
                                                 g$x*$18179$T@1Mj)
                                               (cons
                                                 g$lab$18184$T@1Mj
                                                 g$lab*$18182$T@1Mj))
                                             g$body*$18169$T@1Mj)
                                           (g$add-lexicals$15953$T@1Mj
                                             (cons
                                               g$lab$18184$T@1Mj
                                               g$lab*$18182$T@1Mj)
                                             (cons
                                               g$lex$18183$T@1Mj
                                               g$lex*$18181$T@1Mj)
                                             g$r$18170$T@1Mj)
                                           g$mr$18171$T@1Mj))))
                                    (g$map$11724$T@1Mj
                                      g$gen-lexical$15442$T@1Mj
                                      g$x*$18179$T@1Mj)
                                    (g$map$11724$T@1Mj
                                      g$gen-label$15444$T@1Mj
                                      g$x*$18179$T@1Mj)
                                    (g$gen-lexical$15442$T@1Mj
                                      g$x$18180$T@1Mj)
                                    (g$gen-label$15444$T@1Mj
                                      g$x$18180$T@1Mj)))))
                              g$ls/false$18178$T@1Mj)
                            ((case-lambda
                               ((g$t$18185$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$18186$T@1Mj)
                                    (if g$ls/false$18186$T@1Mj
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$16124$T@1Mj
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$18168$T@1Mj)))
                                        g$ls/false$18186$T@1Mj)
                                      (g$syntax-violation$16124$T@1Mj
                                        '#f
                                        '"invalid syntax"
                                        g$t$18185$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$18185$T@1Mj
                                   '_))))
                             g$t$18177$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$18177$T@1Mj
                         '#(each+ any () any)))))
                   g$t$18172$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18172$T@1Mj
               'each-any))))
         g$fmls$18168$T@1Mj))))
   (g$chi-lambda-clause*$16027$T@1Mj
     g$chi-lambda-clause*$19623$T@1Mj
     (case-lambda
       ((g$stx$18187$T@1Mj
          g$fmls*$18188$T@1Mj
          g$body**$18189$T@1Mj
          g$r$18190$T@1Mj
          g$mr$18191$T@1Mj)
        (if (null? g$fmls*$18188$T@1Mj)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$16026$T@1Mj
                 g$stx$18187$T@1Mj
                 (car g$fmls*$18188$T@1Mj)
                 (car g$body**$18189$T@1Mj)
                 g$r$18190$T@1Mj
                 g$mr$18191$T@1Mj)))
            (case-lambda
              ((g$a$18194$T@1Mj g$b$18195$T@1Mj)
               ((case-lambda
                  ((g$b$18196$T@1Mj g$a$18197$T@1Mj)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$16027$T@1Mj
                          g$stx$18187$T@1Mj
                          (cdr g$fmls*$18188$T@1Mj)
                          (cdr g$body**$18189$T@1Mj)
                          g$r$18190$T@1Mj
                          g$mr$18191$T@1Mj)))
                     (case-lambda
                       ((g$a*$18200$T@1Mj g$b*$18201$T@1Mj)
                        ((case-lambda
                           ((g$b*$18202$T@1Mj g$a*$18203$T@1Mj)
                            (values
                              (cons g$a$18197$T@1Mj g$a*$18203$T@1Mj)
                              (cons g$b$18196$T@1Mj g$b*$18202$T@1Mj))))
                         g$b*$18201$T@1Mj
                         g$a*$18200$T@1Mj))))))
                g$b$18195$T@1Mj
                g$a$18194$T@1Mj))))))))
   (g$chi-defun$16028$T@1Mj
     g$chi-defun$19624$T@1Mj
     (case-lambda
       ((g$x$18204$T@1Mj g$r$18205$T@1Mj g$mr$18206$T@1Mj)
        ((case-lambda
           ((g$fmls$18207$T@1Mj g$body*$18208$T@1Mj)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$16026$T@1Mj
                   g$fmls$18207$T@1Mj
                   g$fmls$18207$T@1Mj
                   g$body*$18208$T@1Mj
                   g$r$18205$T@1Mj
                   g$mr$18206$T@1Mj)))
              (case-lambda
                ((g$fmls$18211$T@1Mj g$body$18212$T@1Mj)
                 ((case-lambda
                    ((g$body$18213$T@1Mj g$fmls$18214$T@1Mj)
                     (g$build-lambda$15429$T@1Mj
                       '#f
                       g$fmls$18214$T@1Mj
                       g$body$18213$T@1Mj)))
                  g$body$18212$T@1Mj
                  g$fmls$18211$T@1Mj))))))
         (car g$x$18204$T@1Mj)
         (cdr g$x$18204$T@1Mj)))))
   (g$chi-rhs$16029$T@1Mj
     g$chi-rhs$19625$T@1Mj
     (case-lambda
       ((g$rhs$18215$T@1Mj g$r$18216$T@1Mj g$mr$18217$T@1Mj)
        ((case-lambda
           ((g$t$18218$T@1Mj)
            (if (eqv? g$t$18218$T@1Mj 'defun)
              (g$chi-defun$16028$T@1Mj
                (cdr g$rhs$18215$T@1Mj)
                g$r$18216$T@1Mj
                g$mr$18217$T@1Mj)
              (if (eqv? g$t$18218$T@1Mj 'expr)
                ((case-lambda
                   ((g$expr$18219$T@1Mj)
                    (g$chi-expr$16023$T@1Mj
                      g$expr$18219$T@1Mj
                      g$r$18216$T@1Mj
                      g$mr$18217$T@1Mj)))
                 (cdr g$rhs$18215$T@1Mj))
                (if (eqv? g$t$18218$T@1Mj 'top-expr)
                  ((case-lambda
                     ((g$expr$18220$T@1Mj)
                      (g$build-sequence$15432$T@1Mj
                        '#f
                        (list
                          (g$chi-expr$16023$T@1Mj
                            g$expr$18220$T@1Mj
                            g$r$18216$T@1Mj
                            g$mr$18217$T@1Mj)
                          (g$build-void$15433$T@1Mj)))))
                   (cdr g$rhs$18215$T@1Mj))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$18215$T@1Mj))))))
         (car g$rhs$18215$T@1Mj)))))
   (g$expand-interaction-rhs*/init*$16030$T@1Mj
     g$expand-interaction-rhs*/init*$19626$T@1Mj
     (case-lambda
       ((g$lhs*$18221$T@1Mj
          g$rhs*$18222$T@1Mj
          g$init*$18223$T@1Mj
          g$r$18224$T@1Mj
          g$mr$18225$T@1Mj)
        ((letrec ((g$f$18226$T@1Mj
                    (case-lambda
                      ((g$lhs*$18227$T@1Mj g$rhs*$18228$T@1Mj)
                       (if (null? g$lhs*$18227$T@1Mj)
                         (g$map$11724$T@1Mj
                           (case-lambda
                             ((g$x$18229$T@1Mj)
                              (g$chi-expr$16023$T@1Mj
                                g$x$18229$T@1Mj
                                g$r$18224$T@1Mj
                                g$mr$18225$T@1Mj)))
                           g$init*$18223$T@1Mj)
                         ((case-lambda
                            ((g$lhs$18230$T@1Mj g$rhs$18231$T@1Mj)
                             ((case-lambda
                                ((g$t$18232$T@1Mj)
                                 (if (eqv? g$t$18232$T@1Mj 'defun)
                                   ((case-lambda
                                      ((g$rhs$18233$T@1Mj)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$18230$T@1Mj
                                           g$rhs$18233$T@1Mj)
                                         (g$f$18226$T@1Mj
                                           (cdr g$lhs*$18227$T@1Mj)
                                           (cdr g$rhs*$18228$T@1Mj)))))
                                    (g$chi-defun$16028$T@1Mj
                                      (cdr g$rhs$18231$T@1Mj)
                                      g$r$18224$T@1Mj
                                      g$mr$18225$T@1Mj))
                                   (if (eqv? g$t$18232$T@1Mj 'expr)
                                     ((case-lambda
                                        ((g$rhs$18234$T@1Mj)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$18230$T@1Mj
                                             g$rhs$18234$T@1Mj)
                                           (g$f$18226$T@1Mj
                                             (cdr g$lhs*$18227$T@1Mj)
                                             (cdr g$rhs*$18228$T@1Mj)))))
                                      (g$chi-expr$16023$T@1Mj
                                        (cdr g$rhs$18231$T@1Mj)
                                        g$r$18224$T@1Mj
                                        g$mr$18225$T@1Mj))
                                     (if (eqv?
                                           g$t$18232$T@1Mj
                                           'top-expr)
                                       ((case-lambda
                                          ((g$e$18235$T@1Mj)
                                           (cons
                                             g$e$18235$T@1Mj
                                             (g$f$18226$T@1Mj
                                               (cdr g$lhs*$18227$T@1Mj)
                                               (cdr g$rhs*$18228$T@1Mj)))))
                                        (g$chi-expr$16023$T@1Mj
                                          (cdr g$rhs$18231$T@1Mj)
                                          g$r$18224$T@1Mj
                                          g$mr$18225$T@1Mj))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$18231$T@1Mj))))))
                              (car g$rhs$18231$T@1Mj))))
                          (car g$lhs*$18227$T@1Mj)
                          (car g$rhs*$18228$T@1Mj)))))))
           g$f$18226$T@1Mj)
         g$lhs*$18221$T@1Mj
         g$rhs*$18222$T@1Mj))))
   (g$chi-rhs*$16031$T@1Mj
     g$chi-rhs*$19627$T@1Mj
     (case-lambda
       ((g$rhs*$18236$T@1Mj g$r$18237$T@1Mj g$mr$18238$T@1Mj)
        ((letrec ((g$f$18239$T@1Mj
                    (case-lambda
                      ((g$ls$18240$T@1Mj)
                       (if (null? g$ls$18240$T@1Mj)
                         '()
                         ((case-lambda
                            ((g$a$18241$T@1Mj)
                             (cons
                               g$a$18241$T@1Mj
                               (g$f$18239$T@1Mj
                                 (cdr g$ls$18240$T@1Mj)))))
                          (g$chi-rhs$16029$T@1Mj
                            (car g$ls$18240$T@1Mj)
                            g$r$18237$T@1Mj
                            g$mr$18238$T@1Mj)))))))
           g$f$18239$T@1Mj)
         g$rhs*$18236$T@1Mj))))
   (g$find-bound=?$16032$T@1Mj
     g$find-bound=?$19628$T@1Mj
     (case-lambda
       ((g$x$18242$T@1Mj g$lhs*$18243$T@1Mj g$rhs*$18244$T@1Mj)
        (if (null? g$lhs*$18243$T@1Mj)
          '#f
          (if (g$bound-id=?$15510$T@1Mj
                g$x$18242$T@1Mj
                (car g$lhs*$18243$T@1Mj))
            (car g$rhs*$18244$T@1Mj)
            (g$find-bound=?$16032$T@1Mj
              g$x$18242$T@1Mj
              (cdr g$lhs*$18243$T@1Mj)
              (cdr g$rhs*$18244$T@1Mj)))))))
   (g$find-dups$16033$T@1Mj
     g$find-dups$19629$T@1Mj
     (case-lambda
       ((g$ls$18245$T@1Mj)
        ((letrec ((g$f$18246$T@1Mj
                    (case-lambda
                      ((g$ls$18247$T@1Mj g$dups$18248$T@1Mj)
                       (if (null? g$ls$18247$T@1Mj)
                         g$dups$18248$T@1Mj
                         ((case-lambda
                            ((g$t$18249$T@1Mj)
                             (if g$t$18249$T@1Mj
                               ((case-lambda
                                  ((g$x$18250$T@1Mj)
                                   (g$f$18246$T@1Mj
                                     (cdr g$ls$18247$T@1Mj)
                                     (cons
                                       (list
                                         (car g$ls$18247$T@1Mj)
                                         g$x$18250$T@1Mj)
                                       g$dups$18248$T@1Mj))))
                                g$t$18249$T@1Mj)
                               (g$f$18246$T@1Mj
                                 (cdr g$ls$18247$T@1Mj)
                                 g$dups$18248$T@1Mj))))
                          (g$find-bound=?$16032$T@1Mj
                            (car g$ls$18247$T@1Mj)
                            (cdr g$ls$18247$T@1Mj)
                            (cdr g$ls$18247$T@1Mj))))))))
           g$f$18246$T@1Mj)
         g$ls$18245$T@1Mj
         '()))))
   (g$chi-internal$16034$T@1Mj
     g$chi-internal$19630$T@1Mj
     (case-lambda
       ((g$e*$18251$T@1Mj g$r$18252$T@1Mj g$mr$18253$T@1Mj)
        ((case-lambda
           ((g$rib$18254$T@1Mj)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$16052$T@1Mj
                   (g$map$11724$T@1Mj
                     (case-lambda
                       ((g$x$18263$T@1Mj)
                        (g$add-subst$15497$T@1Mj
                          g$rib$18254$T@1Mj
                          g$x$18263$T@1Mj)))
                     (g$syntax->list$15506$T@1Mj g$e*$18251$T@1Mj))
                   g$r$18252$T@1Mj
                   g$mr$18253$T@1Mj
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$18254$T@1Mj
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$18264$T@1Mj
                   g$r$18265$T@1Mj
                   g$mr$18266$T@1Mj
                   g$lex*$18267$T@1Mj
                   g$rhs*$18268$T@1Mj
                   g$mod**$18269$T@1Mj
                   g$kwd*$18270$T@1Mj
                   g$_exp*$18271$T@1Mj)
                 ((case-lambda
                    ((g$_exp*$18272$T@1Mj
                       g$kwd*$18273$T@1Mj
                       g$mod**$18274$T@1Mj
                       g$rhs*$18275$T@1Mj
                       g$lex*$18276$T@1Mj
                       g$mr$18277$T@1Mj
                       g$r$18278$T@1Mj
                       g$e*$18279$T@1Mj)
                     (begin
                       (if (null? g$e*$18279$T@1Mj)
                         (g$syntax-violation$16124$T@1Mj
                           '#f
                           '"no expression in body"
                           g$e*$18279$T@1Mj)
                         (void))
                       ((case-lambda
                          ((g$init*$18280$T@1Mj)
                           ((case-lambda
                              ((g$rhs*$18281$T@1Mj)
                               (g$build-letrec*$15435$T@1Mj
                                 '#f
                                 (g$reverse$12475$T@1Mj
                                   g$lex*$18276$T@1Mj)
                                 (g$reverse$12475$T@1Mj
                                   g$rhs*$18281$T@1Mj)
                                 (g$build-sequence$15432$T@1Mj
                                   '#f
                                   g$init*$18280$T@1Mj))))
                            (g$chi-rhs*$16031$T@1Mj
                              g$rhs*$18275$T@1Mj
                              g$r$18278$T@1Mj
                              g$mr$18277$T@1Mj))))
                        (g$chi-expr*$16021$T@1Mj
                          (append
                            (apply
                              append
                              (g$reverse$12475$T@1Mj
                                g$mod**$18274$T@1Mj))
                            g$e*$18279$T@1Mj)
                          g$r$18278$T@1Mj
                          g$mr$18277$T@1Mj)))))
                  g$_exp*$18271$T@1Mj
                  g$kwd*$18270$T@1Mj
                  g$mod**$18269$T@1Mj
                  g$rhs*$18268$T@1Mj
                  g$lex*$18267$T@1Mj
                  g$mr$18266$T@1Mj
                  g$r$18265$T@1Mj
                  g$e*$18264$T@1Mj))))))
         (g$make-empty-rib$15465$T@1Mj)))))
   (g$parse-module$16035$T@1Mj
     g$parse-module$19631$T@1Mj
     (case-lambda
       ((g$e$18282$T@1Mj)
        ((case-lambda
           ((g$t$18283$T@1Mj)
            ((case-lambda
               ((g$ls/false$18284$T@1Mj)
                (if g$ls/false$18284$T@1Mj
                  (apply
                    (case-lambda
                      ((g$export*$18285$T@1Mj g$b*$18286$T@1Mj)
                       (begin
                         (if (not (g$for-all$11722$T@1Mj
                                    g$id?$15507$T@1Mj
                                    g$export*$18285$T@1Mj))
                           (g$syntax-violation$16124$T@1Mj
                             '#f
                             '"module exports must be identifiers"
                             g$e$18282$T@1Mj)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12462$T@1Mj
                             g$export*$18285$T@1Mj)
                           g$b*$18286$T@1Mj))))
                    g$ls/false$18284$T@1Mj)
                  ((case-lambda
                     ((g$t$18287$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$18288$T@1Mj)
                          (if g$ls/false$18288$T@1Mj
                            (apply
                              (case-lambda
                                ((g$name$18289$T@1Mj
                                   g$export*$18290$T@1Mj
                                   g$b*$18291$T@1Mj)
                                 (begin
                                   (if (not (g$id?$15507$T@1Mj
                                              g$name$18289$T@1Mj))
                                     (g$syntax-violation$16124$T@1Mj
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$18282$T@1Mj)
                                     (void))
                                   (if (not (g$for-all$11722$T@1Mj
                                              g$id?$15507$T@1Mj
                                              g$export*$18290$T@1Mj))
                                     (g$syntax-violation$16124$T@1Mj
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$18282$T@1Mj)
                                     (void))
                                   (values
                                     g$name$18289$T@1Mj
                                     (g$list->vector$12462$T@1Mj
                                       g$export*$18290$T@1Mj)
                                     g$b*$18291$T@1Mj))))
                              g$ls/false$18288$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$18287$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$18287$T@1Mj
                         '(_ any each-any . each-any)))))
                   g$t$18283$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18283$T@1Mj
               '(_ each-any . each-any)))))
         g$e$18282$T@1Mj))))
   (g$8018$16036$T@1Mj
     g$8018$19632$T@1Mj
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8021$T@1Mj
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$8020$16037$T@1Mj g$8020$19633$T@1Mj '#f)
   (g$8019$16038$T@1Mj
     g$8019$19634$T@1Mj
     (make-record-constructor-descriptor
       g$8018$16036$T@1Mj
       '#f
       g$8020$16037$T@1Mj))
   (g$module-interface?$16041$T@1Mj
     g$module-interface?$19635$T@1Mj
     (record-predicate g$8018$16036$T@1Mj))
   (g$make-module-interface$16042$T@1Mj
     g$make-module-interface$19636$T@1Mj
     (record-constructor g$8019$16038$T@1Mj))
   (g$module-interface-first-mark$16043$T@1Mj
     g$module-interface-first-mark$19637$T@1Mj
     (record-accessor g$8018$16036$T@1Mj '0))
   (g$module-interface-exp-id-vec$16044$T@1Mj
     g$module-interface-exp-id-vec$19638$T@1Mj
     (record-accessor g$8018$16036$T@1Mj '1))
   (g$module-interface-exp-lab-vec$16045$T@1Mj
     g$module-interface-exp-lab-vec$19639$T@1Mj
     (record-accessor g$8018$16036$T@1Mj '2))
   (g$set-module-interface-first-mark!$16046$T@1Mj
     g$set-module-interface-first-mark!$19640$T@1Mj
     (record-mutator g$8018$16036$T@1Mj '0))
   (g$set-module-interface-exp-id-vec!$16047$T@1Mj
     g$set-module-interface-exp-id-vec!$19641$T@1Mj
     (record-mutator g$8018$16036$T@1Mj '1))
   (g$set-module-interface-exp-lab-vec!$16048$T@1Mj
     g$set-module-interface-exp-lab-vec!$19642$T@1Mj
     (record-mutator g$8018$16036$T@1Mj '2))
   (g$module-interface-exp-id*$16049$T@1Mj
     g$module-interface-exp-id*$19643$T@1Mj
     (case-lambda
       ((g$iface$18292$T@1Mj g$id$18293$T@1Mj)
        (letrec* ((g$diff-marks$18294$T@1Mj
                    (case-lambda
                      ((g$ls$18298$T@1Mj g$x$18299$T@1Mj)
                       (begin
                         (if (null? g$ls$18298$T@1Mj)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$18300$T@1Mj)
                             (if (eq? g$a$18300$T@1Mj g$x$18299$T@1Mj)
                               '()
                               (cons
                                 g$a$18300$T@1Mj
                                 (g$diff-marks$18294$T@1Mj
                                   (cdr g$ls$18298$T@1Mj)
                                   g$x$18299$T@1Mj)))))
                          (car g$ls$18298$T@1Mj)))))))
          ((case-lambda
             ((g$diff$18295$T@1Mj g$id-vec$18296$T@1Mj)
              (if (null? g$diff$18295$T@1Mj)
                g$id-vec$18296$T@1Mj
                (g$vector-map$12528$T@1Mj
                  (case-lambda
                    ((g$x$18297$T@1Mj)
                     (g$make-stx$15480$T@1Mj
                       (g$stx-expr$15481$T@1Mj g$x$18297$T@1Mj)
                       (append
                         g$diff$18295$T@1Mj
                         (g$stx-mark*$15482$T@1Mj g$x$18297$T@1Mj))
                       '()
                       '())))
                  g$id-vec$18296$T@1Mj))))
           (g$diff-marks$18294$T@1Mj
             (g$stx-mark*$15482$T@1Mj g$id$18293$T@1Mj)
             (g$module-interface-first-mark$16043$T@1Mj
               g$iface$18292$T@1Mj))
           (g$module-interface-exp-id-vec$16044$T@1Mj
             g$iface$18292$T@1Mj))))))
   (g$syntax-transpose$16050$T@1Mj
     g$syntax-transpose$19644$T@1Mj
     (case-lambda
       ((g$object$18301$T@1Mj
          g$base-id$18302$T@1Mj
          g$new-id$18303$T@1Mj)
        (letrec* ((g$who$18304$T@1Mj 'syntax-transpose)
                  (g$err$18305$T@1Mj
                    (case-lambda
                      ((g$msg$18347$T@1Mj . g$args$18348$T@1Mj)
                       (apply
                         assertion-violation
                         g$who$18304$T@1Mj
                         g$msg$18347$T@1Mj
                         g$args$18348$T@1Mj))))
                  (g$split$18306$T@1Mj
                    (case-lambda
                      ((g$s*$18340$T@1Mj)
                       (if (eq? (car g$s*$18340$T@1Mj) 'shift)
                         (values (list 'shift) (cdr g$s*$18340$T@1Mj))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$18306$T@1Mj
                                (cdr g$s*$18340$T@1Mj))))
                           (case-lambda
                             ((g$s1*$18343$T@1Mj g$s2*$18344$T@1Mj)
                              ((case-lambda
                                 ((g$s2*$18345$T@1Mj g$s1*$18346$T@1Mj)
                                  (values
                                    (cons
                                      (car g$s*$18340$T@1Mj)
                                      g$s1*$18346$T@1Mj)
                                    g$s2*$18345$T@1Mj)))
                               g$s2*$18344$T@1Mj
                               g$s1*$18343$T@1Mj))))))))
                  (g$final$18307$T@1Mj
                    (case-lambda
                      ((g$s*$18338$T@1Mj)
                       (if ((case-lambda
                              ((g$t$18339$T@1Mj)
                               (if g$t$18339$T@1Mj
                                 g$t$18339$T@1Mj
                                 (begin
                                   '#f
                                   (eq? (car g$s*$18338$T@1Mj)
                                        'shift)))))
                            (null? g$s*$18338$T@1Mj))
                         '()
                         (cons
                           (car g$s*$18338$T@1Mj)
                           (g$final$18307$T@1Mj
                             (cdr g$s*$18338$T@1Mj)))))))
                  (g$diff$18308$T@1Mj
                    (case-lambda
                      ((g$m$18318$T@1Mj
                         g$m*$18319$T@1Mj
                         g$s*$18320$T@1Mj
                         g$ae*$18321$T@1Mj)
                       (if (null? g$m*$18319$T@1Mj)
                         (g$err$18305$T@1Mj
                           '"unmatched identifiers"
                           g$base-id$18302$T@1Mj
                           g$new-id$18303$T@1Mj)
                         ((case-lambda
                            ((g$m1$18322$T@1Mj)
                             (if (eq? g$m$18318$T@1Mj g$m1$18322$T@1Mj)
                               (values
                                 '()
                                 (g$final$18307$T@1Mj g$s*$18320$T@1Mj)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$18306$T@1Mj
                                      g$s*$18320$T@1Mj)))
                                 (case-lambda
                                   ((g$s1*$18325$T@1Mj
                                      g$s2*$18326$T@1Mj)
                                    ((case-lambda
                                       ((g$s2*$18327$T@1Mj
                                          g$s1*$18328$T@1Mj)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$18308$T@1Mj
                                               g$m$18318$T@1Mj
                                               (cdr g$m*$18319$T@1Mj)
                                               g$s2*$18327$T@1Mj
                                               (cdr g$ae*$18321$T@1Mj))))
                                          (case-lambda
                                            ((g$nm*$18332$T@1Mj
                                               g$ns*$18333$T@1Mj
                                               g$nae*$18334$T@1Mj)
                                             ((case-lambda
                                                ((g$nae*$18335$T@1Mj
                                                   g$ns*$18336$T@1Mj
                                                   g$nm*$18337$T@1Mj)
                                                 (values
                                                   (cons
                                                     g$m1$18322$T@1Mj
                                                     g$nm*$18337$T@1Mj)
                                                   (append
                                                     g$s1*$18328$T@1Mj
                                                     g$ns*$18336$T@1Mj)
                                                   (cons
                                                     (car g$ae*$18321$T@1Mj)
                                                     g$nae*$18335$T@1Mj))))
                                              g$nae*$18334$T@1Mj
                                              g$ns*$18333$T@1Mj
                                              g$nm*$18332$T@1Mj))))))
                                     g$s2*$18326$T@1Mj
                                     g$s1*$18325$T@1Mj)))))))
                          (car g$m*$18319$T@1Mj)))))))
          (begin
            (if (not (g$id?$15507$T@1Mj g$base-id$18302$T@1Mj))
              (g$err$18305$T@1Mj
                '"not an identifier"
                g$base-id$18302$T@1Mj)
              (void))
            (if (not (g$id?$15507$T@1Mj g$new-id$18303$T@1Mj))
              (g$err$18305$T@1Mj
                '"not an identifier"
                g$new-id$18303$T@1Mj)
              (void))
            (if (not (g$free-identifier=?$16115$T@1Mj
                       g$base-id$18302$T@1Mj
                       g$new-id$18303$T@1Mj))
              (g$err$18305$T@1Mj
                '"not the same identifier"
                g$base-id$18302$T@1Mj
                g$new-id$18303$T@1Mj)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$18308$T@1Mj
                   (car (g$stx-mark*$15482$T@1Mj g$base-id$18302$T@1Mj))
                   (g$stx-mark*$15482$T@1Mj g$new-id$18303$T@1Mj)
                   (g$stx-subst*$15483$T@1Mj g$new-id$18303$T@1Mj)
                   (g$stx-ae*$15484$T@1Mj g$new-id$18303$T@1Mj))))
              (case-lambda
                ((g$m*$18312$T@1Mj g$s*$18313$T@1Mj g$ae*$18314$T@1Mj)
                 ((case-lambda
                    ((g$ae*$18315$T@1Mj
                       g$s*$18316$T@1Mj
                       g$m*$18317$T@1Mj)
                     (if (if (null? g$m*$18317$T@1Mj)
                           (begin '#f (null? g$s*$18316$T@1Mj))
                           '#f)
                       g$object$18301$T@1Mj
                       (g$mkstx$15495$T@1Mj
                         g$object$18301$T@1Mj
                         g$m*$18317$T@1Mj
                         g$s*$18316$T@1Mj
                         g$ae*$18315$T@1Mj))))
                  g$ae*$18314$T@1Mj
                  g$s*$18313$T@1Mj
                  g$m*$18312$T@1Mj)))))))))
   (g$chi-internal-module$16051$T@1Mj
     g$chi-internal-module$19645$T@1Mj
     (case-lambda
       ((g$e$18349$T@1Mj
          g$r$18350$T@1Mj
          g$mr$18351$T@1Mj
          g$lex*$18352$T@1Mj
          g$rhs*$18353$T@1Mj
          g$mod**$18354$T@1Mj
          g$kwd*$18355$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$parse-module$16035$T@1Mj g$e$18349$T@1Mj)))
          (case-lambda
            ((g$name$18359$T@1Mj g$exp-id*$18360$T@1Mj g$e*$18361$T@1Mj)
             ((case-lambda
                ((g$e*$18362$T@1Mj
                   g$exp-id*$18363$T@1Mj
                   g$name$18364$T@1Mj)
                 ((case-lambda
                    ((g$rib$18365$T@1Mj)
                     ((case-lambda
                        ((g$e*$18366$T@1Mj)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$16052$T@1Mj
                                g$e*$18366$T@1Mj
                                g$r$18350$T@1Mj
                                g$mr$18351$T@1Mj
                                g$lex*$18352$T@1Mj
                                g$rhs*$18353$T@1Mj
                                g$mod**$18354$T@1Mj
                                g$kwd*$18355$T@1Mj
                                '()
                                g$rib$18365$T@1Mj
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$18375$T@1Mj
                                g$r$18376$T@1Mj
                                g$mr$18377$T@1Mj
                                g$lex*$18378$T@1Mj
                                g$rhs*$18379$T@1Mj
                                g$mod**$18380$T@1Mj
                                g$kwd*$18381$T@1Mj
                                g$_exp*$18382$T@1Mj)
                              ((case-lambda
                                 ((g$_exp*$18383$T@1Mj
                                    g$kwd*$18384$T@1Mj
                                    g$mod**$18385$T@1Mj
                                    g$rhs*$18386$T@1Mj
                                    g$lex*$18387$T@1Mj
                                    g$mr$18388$T@1Mj
                                    g$r$18389$T@1Mj
                                    g$e*$18390$T@1Mj)
                                  ((case-lambda
                                     ((g$exp-lab*$18391$T@1Mj
                                        g$mod**$18392$T@1Mj)
                                      (if (not g$name$18364$T@1Mj)
                                        (values
                                          g$lex*$18387$T@1Mj
                                          g$rhs*$18386$T@1Mj
                                          g$exp-id*$18363$T@1Mj
                                          g$exp-lab*$18391$T@1Mj
                                          g$r$18389$T@1Mj
                                          g$mr$18388$T@1Mj
                                          g$mod**$18392$T@1Mj
                                          g$kwd*$18384$T@1Mj)
                                        ((case-lambda
                                           ((g$lab$18393$T@1Mj
                                              g$iface$18394$T@1Mj)
                                            (values
                                              g$lex*$18387$T@1Mj
                                              g$rhs*$18386$T@1Mj
                                              (vector
                                                g$name$18364$T@1Mj)
                                              (vector g$lab$18393$T@1Mj)
                                              (cons
                                                (cons
                                                  g$lab$18393$T@1Mj
                                                  (cons
                                                    '$module
                                                    g$iface$18394$T@1Mj))
                                                g$r$18389$T@1Mj)
                                              (cons
                                                (cons
                                                  g$lab$18393$T@1Mj
                                                  (cons
                                                    '$module
                                                    g$iface$18394$T@1Mj))
                                                g$mr$18388$T@1Mj)
                                              g$mod**$18392$T@1Mj
                                              g$kwd*$18384$T@1Mj)))
                                         (g$gen-label$15444$T@1Mj
                                           'module)
                                         (g$make-module-interface$16042$T@1Mj
                                           (car (g$stx-mark*$15482$T@1Mj
                                                  g$name$18364$T@1Mj))
                                           (g$vector-map$12528$T@1Mj
                                             (case-lambda
                                               ((g$x$18395$T@1Mj)
                                                (g$make-stx$15480$T@1Mj
                                                  (g$stx-expr$15481$T@1Mj
                                                    g$x$18395$T@1Mj)
                                                  (g$stx-mark*$15482$T@1Mj
                                                    g$x$18395$T@1Mj)
                                                  '()
                                                  '())))
                                             g$exp-id*$18363$T@1Mj)
                                           g$exp-lab*$18391$T@1Mj)))))
                                   (g$vector-map$12528$T@1Mj
                                     (case-lambda
                                       ((g$x$18396$T@1Mj)
                                        ((case-lambda
                                           ((g$t$18397$T@1Mj)
                                            (if g$t$18397$T@1Mj
                                              g$t$18397$T@1Mj
                                              (begin
                                                '#f
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$18396$T@1Mj)))))
                                         (g$id->label$15520$T@1Mj
                                           (g$make-stx$15480$T@1Mj
                                             (g$id->sym$15508$T@1Mj
                                               g$x$18396$T@1Mj)
                                             (g$stx-mark*$15482$T@1Mj
                                               g$x$18396$T@1Mj)
                                             (list g$rib$18365$T@1Mj)
                                             '())))))
                                     g$exp-id*$18363$T@1Mj)
                                   (cons
                                     g$e*$18390$T@1Mj
                                     g$mod**$18385$T@1Mj))))
                               g$_exp*$18382$T@1Mj
                               g$kwd*$18381$T@1Mj
                               g$mod**$18380$T@1Mj
                               g$rhs*$18379$T@1Mj
                               g$lex*$18378$T@1Mj
                               g$mr$18377$T@1Mj
                               g$r$18376$T@1Mj
                               g$e*$18375$T@1Mj))))))
                      (g$map$11724$T@1Mj
                        (case-lambda
                          ((g$x$18398$T@1Mj)
                           (g$add-subst$15497$T@1Mj
                             g$rib$18365$T@1Mj
                             g$x$18398$T@1Mj)))
                        (g$syntax->list$15506$T@1Mj
                          g$e*$18362$T@1Mj)))))
                  (g$make-empty-rib$15465$T@1Mj))))
              g$e*$18361$T@1Mj
              g$exp-id*$18360$T@1Mj
              g$name$18359$T@1Mj)))))))
   (g$chi-body*$16052$T@1Mj
     g$chi-body*$19646$T@1Mj
     (case-lambda
       ((g$e*$18399$T@1Mj
          g$r$18400$T@1Mj
          g$mr$18401$T@1Mj
          g$lex*$18402$T@1Mj
          g$rhs*$18403$T@1Mj
          g$mod**$18404$T@1Mj
          g$kwd*$18405$T@1Mj
          g$exp*$18406$T@1Mj
          g$rib$18407$T@1Mj
          g$mix?$18408$T@1Mj
          g$sd?$18409$T@1Mj)
        (if (null? g$e*$18399$T@1Mj)
          (values
            g$e*$18399$T@1Mj
            g$r$18400$T@1Mj
            g$mr$18401$T@1Mj
            g$lex*$18402$T@1Mj
            g$rhs*$18403$T@1Mj
            g$mod**$18404$T@1Mj
            g$kwd*$18405$T@1Mj
            g$exp*$18406$T@1Mj)
          ((case-lambda
             ((g$e$18410$T@1Mj)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$15527$T@1Mj
                     g$e$18410$T@1Mj
                     g$r$18400$T@1Mj)))
                (case-lambda
                  ((g$type$18414$T@1Mj
                     g$value$18415$T@1Mj
                     g$kwd$18416$T@1Mj)
                   ((case-lambda
                      ((g$kwd$18417$T@1Mj
                         g$value$18418$T@1Mj
                         g$type$18419$T@1Mj)
                       ((case-lambda
                          ((g$kwd*$18420$T@1Mj)
                           ((case-lambda
                              ((g$t$18421$T@1Mj)
                               (if (eqv? g$t$18421$T@1Mj 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$15945$T@1Mj
                                        g$e$18410$T@1Mj)))
                                   (case-lambda
                                     ((g$id$18424$T@1Mj
                                        g$rhs$18425$T@1Mj)
                                      ((case-lambda
                                         ((g$rhs$18426$T@1Mj
                                            g$id$18427$T@1Mj)
                                          (begin
                                            (if (g$bound-id-member?$15514$T@1Mj
                                                  g$id$18427$T@1Mj
                                                  g$kwd*$18420$T@1Mj)
                                              (g$syntax-violation$16124$T@1Mj
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$18410$T@1Mj)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$15446$T@1Mj
                                                   g$id$18427$T@1Mj
                                                   g$rib$18407$T@1Mj
                                                   g$sd?$18409$T@1Mj)))
                                              (case-lambda
                                                ((g$lab$18430$T@1Mj
                                                   g$lex$18431$T@1Mj)
                                                 ((case-lambda
                                                    ((g$lex$18432$T@1Mj
                                                       g$lab$18433$T@1Mj)
                                                     (begin
                                                       (g$extend-rib!$15468$T@1Mj
                                                         g$rib$18407$T@1Mj
                                                         g$id$18427$T@1Mj
                                                         g$lab$18433$T@1Mj
                                                         g$sd?$18409$T@1Mj)
                                                       (g$chi-body*$16052$T@1Mj
                                                         (cdr g$e*$18399$T@1Mj)
                                                         (g$add-lexical$15952$T@1Mj
                                                           g$lab$18433$T@1Mj
                                                           g$lex$18432$T@1Mj
                                                           g$r$18400$T@1Mj)
                                                         g$mr$18401$T@1Mj
                                                         (cons
                                                           g$lex$18432$T@1Mj
                                                           g$lex*$18402$T@1Mj)
                                                         (cons
                                                           g$rhs$18426$T@1Mj
                                                           g$rhs*$18403$T@1Mj)
                                                         g$mod**$18404$T@1Mj
                                                         g$kwd*$18420$T@1Mj
                                                         g$exp*$18406$T@1Mj
                                                         g$rib$18407$T@1Mj
                                                         g$mix?$18408$T@1Mj
                                                         g$sd?$18409$T@1Mj))))
                                                  g$lex$18431$T@1Mj
                                                  g$lab$18430$T@1Mj)))))))
                                       g$rhs$18425$T@1Mj
                                       g$id$18424$T@1Mj))))
                                 (if (eqv?
                                       g$t$18421$T@1Mj
                                       'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$15946$T@1Mj
                                          g$e$18410$T@1Mj)))
                                     (case-lambda
                                       ((g$id$18436$T@1Mj
                                          g$rhs$18437$T@1Mj)
                                        ((case-lambda
                                           ((g$rhs$18438$T@1Mj
                                              g$id$18439$T@1Mj)
                                            (begin
                                              (if (g$bound-id-member?$15514$T@1Mj
                                                    g$id$18439$T@1Mj
                                                    g$kwd*$18420$T@1Mj)
                                                (g$syntax-violation$16124$T@1Mj
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$18410$T@1Mj)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$18440$T@1Mj)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$18441$T@1Mj)
                                                      (begin
                                                        (g$extend-rib!$15468$T@1Mj
                                                          g$rib$18407$T@1Mj
                                                          g$id$18439$T@1Mj
                                                          g$lab$18440$T@1Mj
                                                          g$sd?$18409$T@1Mj)
                                                        ((case-lambda
                                                           ((g$b$18442$T@1Mj)
                                                            (g$chi-body*$16052$T@1Mj
                                                              (cdr g$e*$18399$T@1Mj)
                                                              (cons
                                                                (cons
                                                                  g$lab$18440$T@1Mj
                                                                  g$b$18442$T@1Mj)
                                                                g$r$18400$T@1Mj)
                                                              (cons
                                                                (cons
                                                                  g$lab$18440$T@1Mj
                                                                  g$b$18442$T@1Mj)
                                                                g$mr$18401$T@1Mj)
                                                              g$lex*$18402$T@1Mj
                                                              g$rhs*$18403$T@1Mj
                                                              g$mod**$18404$T@1Mj
                                                              g$kwd*$18420$T@1Mj
                                                              g$exp*$18406$T@1Mj
                                                              g$rib$18407$T@1Mj
                                                              g$mix?$18408$T@1Mj
                                                              g$sd?$18409$T@1Mj)))
                                                         (g$make-eval-transformer$15555$T@1Mj
                                                           g$expanded-rhs$18441$T@1Mj)))))
                                                   (g$expand-transformer$16053$T@1Mj
                                                     g$rhs$18438$T@1Mj
                                                     g$mr$18401$T@1Mj))))
                                               (g$gen-define-label$15447$T@1Mj
                                                 g$id$18439$T@1Mj
                                                 g$rib$18407$T@1Mj
                                                 g$sd?$18409$T@1Mj)))))
                                         g$rhs$18437$T@1Mj
                                         g$id$18436$T@1Mj))))
                                   (if (g$memv$11717$T@1Mj
                                         g$t$18421$T@1Mj
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$18443$T@1Mj)
                                         ((case-lambda
                                            ((g$ls/false$18444$T@1Mj)
                                             (if (if g$ls/false$18444$T@1Mj
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$18445$T@1Mj
                                                            g$xrhs*$18446$T@1Mj
                                                            g$xbody*$18447$T@1Mj)
                                                          (if (not (g$valid-bound-ids?$15512$T@1Mj
                                                                     g$xlhs*$18445$T@1Mj))
                                                            (g$syntax-violation$16124$T@1Mj
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$18410$T@1Mj)
                                                            (void))))
                                                       g$ls/false$18444$T@1Mj))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$18448$T@1Mj
                                                      g$xrhs*$18449$T@1Mj
                                                      g$xbody*$18450$T@1Mj)
                                                    ((case-lambda
                                                       ((g$xlab*$18451$T@1Mj)
                                                        ((case-lambda
                                                           ((g$xrib$18452$T@1Mj)
                                                            ((case-lambda
                                                               ((g$xb*$18453$T@1Mj)
                                                                (g$chi-body*$16052$T@1Mj
                                                                  (append
                                                                    (g$map$11724$T@1Mj
                                                                      (case-lambda
                                                                        ((g$x$18454$T@1Mj)
                                                                         (g$add-subst$15497$T@1Mj
                                                                           g$xrib$18452$T@1Mj
                                                                           g$x$18454$T@1Mj)))
                                                                      g$xbody*$18450$T@1Mj)
                                                                    (cdr g$e*$18399$T@1Mj))
                                                                  (append
                                                                    (g$map$11724$T@1Mj
                                                                      cons
                                                                      g$xlab*$18451$T@1Mj
                                                                      g$xb*$18453$T@1Mj)
                                                                    g$r$18400$T@1Mj)
                                                                  (append
                                                                    (g$map$11724$T@1Mj
                                                                      cons
                                                                      g$xlab*$18451$T@1Mj
                                                                      g$xb*$18453$T@1Mj)
                                                                    g$mr$18401$T@1Mj)
                                                                  g$lex*$18402$T@1Mj
                                                                  g$rhs*$18403$T@1Mj
                                                                  g$mod**$18404$T@1Mj
                                                                  g$kwd*$18420$T@1Mj
                                                                  g$exp*$18406$T@1Mj
                                                                  g$rib$18407$T@1Mj
                                                                  g$mix?$18408$T@1Mj
                                                                  g$sd?$18409$T@1Mj)))
                                                             (g$map$11724$T@1Mj
                                                               (case-lambda
                                                                 ((g$x$18455$T@1Mj)
                                                                  (g$make-eval-transformer$15555$T@1Mj
                                                                    (g$expand-transformer$16053$T@1Mj
                                                                      (if (eq? g$type$18419$T@1Mj
                                                                               'let-syntax)
                                                                        g$x$18455$T@1Mj
                                                                        (g$add-subst$15497$T@1Mj
                                                                          g$xrib$18452$T@1Mj
                                                                          g$x$18455$T@1Mj))
                                                                      g$mr$18401$T@1Mj))))
                                                               g$xrhs*$18449$T@1Mj))))
                                                         (g$make-full-rib$15473$T@1Mj
                                                           g$xlhs*$18448$T@1Mj
                                                           g$xlab*$18451$T@1Mj))))
                                                     (g$map$11724$T@1Mj
                                                       g$gen-label$15444$T@1Mj
                                                       g$xlhs*$18448$T@1Mj))))
                                                 g$ls/false$18444$T@1Mj)
                                               (g$syntax-violation$16124$T@1Mj
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$18443$T@1Mj))))
                                          (g$syntax-dispatch$16005$T@1Mj
                                            g$t$18443$T@1Mj
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$18410$T@1Mj)
                                     (if (eqv? g$t$18421$T@1Mj 'begin)
                                       ((case-lambda
                                          ((g$t$18456$T@1Mj)
                                           ((case-lambda
                                              ((g$ls/false$18457$T@1Mj)
                                               (if g$ls/false$18457$T@1Mj
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$18458$T@1Mj)
                                                      (g$chi-body*$16052$T@1Mj
                                                        (append
                                                          g$x*$18458$T@1Mj
                                                          (cdr g$e*$18399$T@1Mj))
                                                        g$r$18400$T@1Mj
                                                        g$mr$18401$T@1Mj
                                                        g$lex*$18402$T@1Mj
                                                        g$rhs*$18403$T@1Mj
                                                        g$mod**$18404$T@1Mj
                                                        g$kwd*$18420$T@1Mj
                                                        g$exp*$18406$T@1Mj
                                                        g$rib$18407$T@1Mj
                                                        g$mix?$18408$T@1Mj
                                                        g$sd?$18409$T@1Mj)))
                                                   g$ls/false$18457$T@1Mj)
                                                 (g$syntax-violation$16124$T@1Mj
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$18456$T@1Mj))))
                                            (g$syntax-dispatch$16005$T@1Mj
                                              g$t$18456$T@1Mj
                                              '(_ . each-any)))))
                                        g$e$18410$T@1Mj)
                                       (if (g$memv$11717$T@1Mj
                                             g$t$18421$T@1Mj
                                             '(global-macro
                                                global-macro!))
                                         (g$chi-body*$16052$T@1Mj
                                           (cons
                                             (g$add-subst$15497$T@1Mj
                                               g$rib$18407$T@1Mj
                                               (g$chi-global-macro$16020$T@1Mj
                                                 g$value$18418$T@1Mj
                                                 g$e$18410$T@1Mj
                                                 g$r$18400$T@1Mj))
                                             (cdr g$e*$18399$T@1Mj))
                                           g$r$18400$T@1Mj
                                           g$mr$18401$T@1Mj
                                           g$lex*$18402$T@1Mj
                                           g$rhs*$18403$T@1Mj
                                           g$mod**$18404$T@1Mj
                                           g$kwd*$18420$T@1Mj
                                           g$exp*$18406$T@1Mj
                                           g$rib$18407$T@1Mj
                                           g$mix?$18408$T@1Mj
                                           g$sd?$18409$T@1Mj)
                                         (if (g$memv$11717$T@1Mj
                                               g$t$18421$T@1Mj
                                               '(local-macro
                                                  local-macro!))
                                           (g$chi-body*$16052$T@1Mj
                                             (cons
                                               (g$add-subst$15497$T@1Mj
                                                 g$rib$18407$T@1Mj
                                                 (g$chi-local-macro$16019$T@1Mj
                                                   g$value$18418$T@1Mj
                                                   g$e$18410$T@1Mj
                                                   g$r$18400$T@1Mj))
                                               (cdr g$e*$18399$T@1Mj))
                                             g$r$18400$T@1Mj
                                             g$mr$18401$T@1Mj
                                             g$lex*$18402$T@1Mj
                                             g$rhs*$18403$T@1Mj
                                             g$mod**$18404$T@1Mj
                                             g$kwd*$18420$T@1Mj
                                             g$exp*$18406$T@1Mj
                                             g$rib$18407$T@1Mj
                                             g$mix?$18408$T@1Mj
                                             g$sd?$18409$T@1Mj)
                                           (if (g$memv$11717$T@1Mj
                                                 g$t$18421$T@1Mj
                                                 '(macro macro!))
                                             (g$chi-body*$16052$T@1Mj
                                               (cons
                                                 (g$add-subst$15497$T@1Mj
                                                   g$rib$18407$T@1Mj
                                                   (g$chi-macro$16018$T@1Mj
                                                     g$value$18418$T@1Mj
                                                     g$e$18410$T@1Mj
                                                     g$r$18400$T@1Mj))
                                                 (cdr g$e*$18399$T@1Mj))
                                               g$r$18400$T@1Mj
                                               g$mr$18401$T@1Mj
                                               g$lex*$18402$T@1Mj
                                               g$rhs*$18403$T@1Mj
                                               g$mod**$18404$T@1Mj
                                               g$kwd*$18420$T@1Mj
                                               g$exp*$18406$T@1Mj
                                               g$rib$18407$T@1Mj
                                               g$mix?$18408$T@1Mj
                                               g$sd?$18409$T@1Mj)
                                             (if (eqv?
                                                   g$t$18421$T@1Mj
                                                   'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$16051$T@1Mj
                                                      g$e$18410$T@1Mj
                                                      g$r$18400$T@1Mj
                                                      g$mr$18401$T@1Mj
                                                      g$lex*$18402$T@1Mj
                                                      g$rhs*$18403$T@1Mj
                                                      g$mod**$18404$T@1Mj
                                                      g$kwd*$18420$T@1Mj)))
                                                 (case-lambda
                                                   ((g$lex*$18467$T@1Mj
                                                      g$rhs*$18468$T@1Mj
                                                      g$m-exp-id*$18469$T@1Mj
                                                      g$m-exp-lab*$18470$T@1Mj
                                                      g$r$18471$T@1Mj
                                                      g$mr$18472$T@1Mj
                                                      g$mod**$18473$T@1Mj
                                                      g$kwd*$18474$T@1Mj)
                                                    ((case-lambda
                                                       ((g$kwd*$18475$T@1Mj
                                                          g$mod**$18476$T@1Mj
                                                          g$mr$18477$T@1Mj
                                                          g$r$18478$T@1Mj
                                                          g$m-exp-lab*$18479$T@1Mj
                                                          g$m-exp-id*$18480$T@1Mj
                                                          g$rhs*$18481$T@1Mj
                                                          g$lex*$18482$T@1Mj)
                                                        (begin
                                                          (g$vector-for-each$12529$T@1Mj
                                                            (case-lambda
                                                              ((g$id$18483$T@1Mj
                                                                 g$lab$18484$T@1Mj)
                                                               (g$extend-rib!$15468$T@1Mj
                                                                 g$rib$18407$T@1Mj
                                                                 g$id$18483$T@1Mj
                                                                 g$lab$18484$T@1Mj
                                                                 g$sd?$18409$T@1Mj)))
                                                            g$m-exp-id*$18480$T@1Mj
                                                            g$m-exp-lab*$18479$T@1Mj)
                                                          (g$chi-body*$16052$T@1Mj
                                                            (cdr g$e*$18399$T@1Mj)
                                                            g$r$18478$T@1Mj
                                                            g$mr$18477$T@1Mj
                                                            g$lex*$18482$T@1Mj
                                                            g$rhs*$18481$T@1Mj
                                                            g$mod**$18476$T@1Mj
                                                            g$kwd*$18475$T@1Mj
                                                            g$exp*$18406$T@1Mj
                                                            g$rib$18407$T@1Mj
                                                            g$mix?$18408$T@1Mj
                                                            g$sd?$18409$T@1Mj))))
                                                     g$kwd*$18474$T@1Mj
                                                     g$mod**$18473$T@1Mj
                                                     g$mr$18472$T@1Mj
                                                     g$r$18471$T@1Mj
                                                     g$m-exp-lab*$18470$T@1Mj
                                                     g$m-exp-id*$18469$T@1Mj
                                                     g$rhs*$18468$T@1Mj
                                                     g$lex*$18467$T@1Mj))))
                                               (if (eqv?
                                                     g$t$18421$T@1Mj
                                                     'library)
                                                 (begin
                                                   (g$library-expander$16108$T@1Mj
                                                     (g$stx->datum$15518$T@1Mj
                                                       g$e$18410$T@1Mj))
                                                   (g$chi-body*$16052$T@1Mj
                                                     (cdr g$e*$18399$T@1Mj)
                                                     g$r$18400$T@1Mj
                                                     g$mr$18401$T@1Mj
                                                     g$lex*$18402$T@1Mj
                                                     g$rhs*$18403$T@1Mj
                                                     g$mod**$18404$T@1Mj
                                                     g$kwd*$18420$T@1Mj
                                                     g$exp*$18406$T@1Mj
                                                     g$rib$18407$T@1Mj
                                                     g$mix?$18408$T@1Mj
                                                     g$sd?$18409$T@1Mj))
                                                 (if (eqv?
                                                       g$t$18421$T@1Mj
                                                       'export)
                                                   ((case-lambda
                                                      ((g$t$18485$T@1Mj)
                                                       ((case-lambda
                                                          ((g$ls/false$18486$T@1Mj)
                                                           (if g$ls/false$18486$T@1Mj
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$18487$T@1Mj)
                                                                  (g$chi-body*$16052$T@1Mj
                                                                    (cdr g$e*$18399$T@1Mj)
                                                                    g$r$18400$T@1Mj
                                                                    g$mr$18401$T@1Mj
                                                                    g$lex*$18402$T@1Mj
                                                                    g$rhs*$18403$T@1Mj
                                                                    g$mod**$18404$T@1Mj
                                                                    g$kwd*$18420$T@1Mj
                                                                    (append
                                                                      g$exp-decl*$18487$T@1Mj
                                                                      g$exp*$18406$T@1Mj)
                                                                    g$rib$18407$T@1Mj
                                                                    g$mix?$18408$T@1Mj
                                                                    g$sd?$18409$T@1Mj)))
                                                               g$ls/false$18486$T@1Mj)
                                                             (g$syntax-violation$16124$T@1Mj
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$18485$T@1Mj))))
                                                        (g$syntax-dispatch$16005$T@1Mj
                                                          g$t$18485$T@1Mj
                                                          '(_ .
                                                              each-any)))))
                                                    g$e$18410$T@1Mj)
                                                   (if (eqv?
                                                         g$t$18421$T@1Mj
                                                         'import)
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$18488$T@1Mj
                                                                     (case-lambda
                                                                       ((g$e$18530$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$t$18531$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$ls/false$18532$T@1Mj)
                                                                                (if (if g$ls/false$18532$T@1Mj
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$18533$T@1Mj)
                                                                                             (g$id?$15507$T@1Mj
                                                                                               g$id$18533$T@1Mj)))
                                                                                          g$ls/false$18532$T@1Mj))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$18534$T@1Mj)
                                                                                       '#t))
                                                                                    g$ls/false$18532$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$t$18535$T@1Mj)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$18536$T@1Mj)
                                                                                          (if g$ls/false$18536$T@1Mj
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$18537$T@1Mj)
                                                                                                 '#f))
                                                                                              g$ls/false$18536$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$t$18538$T@1Mj)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$18539$T@1Mj)
                                                                                                    (if g$ls/false$18539$T@1Mj
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$16124$T@1Mj
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$18530$T@1Mj)))
                                                                                                        g$ls/false$18539$T@1Mj)
                                                                                                      (g$syntax-violation$16124$T@1Mj
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$18538$T@1Mj))))
                                                                                                 (g$syntax-dispatch$16005$T@1Mj
                                                                                                   g$t$18538$T@1Mj
                                                                                                   '_))))
                                                                                             g$t$18535$T@1Mj))))
                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                         g$t$18535$T@1Mj
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$18531$T@1Mj))))
                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                               g$t$18531$T@1Mj
                                                                               '(_ any)))))
                                                                         g$e$18530$T@1Mj))))
                                                                   (g$module-import$18489$T@1Mj
                                                                     (case-lambda
                                                                       ((g$e$18513$T@1Mj
                                                                          g$r$18514$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$t$18515$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$ls/false$18516$T@1Mj)
                                                                                (if (if g$ls/false$18516$T@1Mj
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$18517$T@1Mj)
                                                                                             (g$id?$15507$T@1Mj
                                                                                               g$id$18517$T@1Mj)))
                                                                                          g$ls/false$18516$T@1Mj))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$18518$T@1Mj)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$15527$T@1Mj
                                                                                              g$id$18518$T@1Mj
                                                                                              g$r$18514$T@1Mj)))
                                                                                         (case-lambda
                                                                                           ((g$type$18522$T@1Mj
                                                                                              g$value$18523$T@1Mj
                                                                                              g$kwd$18524$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$18525$T@1Mj
                                                                                                  g$value$18526$T@1Mj
                                                                                                  g$type$18527$T@1Mj)
                                                                                                ((case-lambda
                                                                                                   ((g$t$18528$T@1Mj)
                                                                                                    (if (eqv?
                                                                                                          g$t$18528$T@1Mj
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$18529$T@1Mj)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$16049$T@1Mj
                                                                                                              g$iface$18529$T@1Mj
                                                                                                              g$id$18518$T@1Mj)
                                                                                                            (g$module-interface-exp-lab-vec$16045$T@1Mj
                                                                                                              g$iface$18529$T@1Mj))))
                                                                                                       g$value$18526$T@1Mj)
                                                                                                      (g$syntax-violation$16124$T@1Mj
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$18513$T@1Mj))))
                                                                                                 g$type$18527$T@1Mj)))
                                                                                             g$kwd$18524$T@1Mj
                                                                                             g$value$18523$T@1Mj
                                                                                             g$type$18522$T@1Mj))))))
                                                                                    g$ls/false$18516$T@1Mj)
                                                                                  (g$syntax-violation$16124$T@1Mj
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$18515$T@1Mj))))
                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                               g$t$18515$T@1Mj
                                                                               '(_ any)))))
                                                                         g$e$18513$T@1Mj))))
                                                                   (g$library-import$18490$T@1Mj
                                                                     (case-lambda
                                                                       ((g$e$18499$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$t$18500$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$ls/false$18501$T@1Mj)
                                                                                (if g$ls/false$18501$T@1Mj
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$18502$T@1Mj
                                                                                         g$imp*$18503$T@1Mj)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$16057$T@1Mj
                                                                                              (g$syntax->datum$16127$T@1Mj
                                                                                                g$imp*$18503$T@1Mj))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$18506$T@1Mj
                                                                                              g$subst-labels$18507$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$18508$T@1Mj
                                                                                                  g$subst-names$18509$T@1Mj)
                                                                                                (values
                                                                                                  (g$vector-map$12528$T@1Mj
                                                                                                    (case-lambda
                                                                                                      ((g$name$18510$T@1Mj)
                                                                                                       (g$datum->stx$15490$T@1Mj
                                                                                                         g$ctxt$18502$T@1Mj
                                                                                                         g$name$18510$T@1Mj)))
                                                                                                    g$subst-names$18509$T@1Mj)
                                                                                                  g$subst-labels$18508$T@1Mj)))
                                                                                             g$subst-labels$18507$T@1Mj
                                                                                             g$subst-names$18506$T@1Mj))))))
                                                                                    g$ls/false$18501$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$t$18511$T@1Mj)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$18512$T@1Mj)
                                                                                          (if g$ls/false$18512$T@1Mj
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$16124$T@1Mj
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$18499$T@1Mj)))
                                                                                              g$ls/false$18512$T@1Mj)
                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$18511$T@1Mj))))
                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                         g$t$18511$T@1Mj
                                                                                         '_))))
                                                                                   g$t$18500$T@1Mj))))
                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                               g$t$18500$T@1Mj
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$18499$T@1Mj)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$18488$T@1Mj
                                                                        g$e$18410$T@1Mj)
                                                                    (g$module-import$18489$T@1Mj
                                                                      g$e$18410$T@1Mj
                                                                      g$r$18400$T@1Mj)
                                                                    (g$library-import$18490$T@1Mj
                                                                      g$e$18410$T@1Mj))))
                                                               (case-lambda
                                                                 ((g$id*$18493$T@1Mj
                                                                    g$lab*$18494$T@1Mj)
                                                                  ((case-lambda
                                                                     ((g$lab*$18495$T@1Mj
                                                                        g$id*$18496$T@1Mj)
                                                                      (g$vector-for-each$12529$T@1Mj
                                                                        (case-lambda
                                                                          ((g$id$18497$T@1Mj
                                                                             g$lab$18498$T@1Mj)
                                                                           (g$extend-rib!$15468$T@1Mj
                                                                             g$rib$18407$T@1Mj
                                                                             g$id$18497$T@1Mj
                                                                             g$lab$18498$T@1Mj
                                                                             g$sd?$18409$T@1Mj)))
                                                                        g$id*$18496$T@1Mj
                                                                        g$lab*$18495$T@1Mj)))
                                                                   g$lab*$18494$T@1Mj
                                                                   g$id*$18493$T@1Mj))))
                                                             (g$chi-body*$16052$T@1Mj
                                                               (cdr g$e*$18399$T@1Mj)
                                                               g$r$18400$T@1Mj
                                                               g$mr$18401$T@1Mj
                                                               g$lex*$18402$T@1Mj
                                                               g$rhs*$18403$T@1Mj
                                                               g$mod**$18404$T@1Mj
                                                               g$kwd*$18420$T@1Mj
                                                               g$exp*$18406$T@1Mj
                                                               g$rib$18407$T@1Mj
                                                               g$mix?$18408$T@1Mj
                                                               g$sd?$18409$T@1Mj))))))
                                                     (if g$mix?$18408$T@1Mj
                                                       (g$chi-body*$16052$T@1Mj
                                                         (cdr g$e*$18399$T@1Mj)
                                                         g$r$18400$T@1Mj
                                                         g$mr$18401$T@1Mj
                                                         (cons
                                                           (g$gen-lexical$15442$T@1Mj
                                                             'dummy)
                                                           g$lex*$18402$T@1Mj)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$18410$T@1Mj)
                                                           g$rhs*$18403$T@1Mj)
                                                         g$mod**$18404$T@1Mj
                                                         g$kwd*$18420$T@1Mj
                                                         g$exp*$18406$T@1Mj
                                                         g$rib$18407$T@1Mj
                                                         '#t
                                                         g$sd?$18409$T@1Mj)
                                                       (values
                                                         g$e*$18399$T@1Mj
                                                         g$r$18400$T@1Mj
                                                         g$mr$18401$T@1Mj
                                                         g$lex*$18402$T@1Mj
                                                         g$rhs*$18403$T@1Mj
                                                         g$mod**$18404$T@1Mj
                                                         g$kwd*$18420$T@1Mj
                                                         g$exp*$18406$T@1Mj)))))))))))))))
                            g$type$18419$T@1Mj)))
                        (if (g$id?$15507$T@1Mj g$kwd$18417$T@1Mj)
                          (cons g$kwd$18417$T@1Mj g$kwd*$18405$T@1Mj)
                          g$kwd*$18405$T@1Mj))))
                    g$kwd$18416$T@1Mj
                    g$value$18415$T@1Mj
                    g$type$18414$T@1Mj))))))
           (car g$e*$18399$T@1Mj))))))
   (g$expand-transformer$16053$T@1Mj
     g$expand-transformer$19647$T@1Mj
     (case-lambda
       ((g$expr$18540$T@1Mj g$r$18541$T@1Mj)
        ((case-lambda
           ((g$rtc$18542$T@1Mj)
            ((case-lambda
               ((g$expanded-rhs$18543$T@1Mj)
                (begin
                  (g$for-each$11725$T@1Mj
                    ((case-lambda
                       ((g$mark-visit$18544$T@1Mj)
                        (case-lambda
                          ((g$x$18545$T@1Mj)
                           (begin
                             (g$invoke-library$15213$T@1Mj
                               g$x$18545$T@1Mj)
                             (g$mark-visit$18544$T@1Mj
                               g$x$18545$T@1Mj))))))
                     (g$vis-collector$16061$T@1Mj))
                    (g$rtc$18542$T@1Mj))
                  g$expanded-rhs$18543$T@1Mj)))
             ((case-lambda
                ((g$inv-collector$18550$T@1Mj
                   g$vis-collector$18551$T@1Mj
                   g$inv-collector$18552$T@1Mj
                   g$vis-collector$18553$T@1Mj)
                 ((case-lambda
                    ((g$swap$18554$T@1Mj)
                     (dynamic-wind
                       g$swap$18554$T@1Mj
                       (case-lambda
                         (()
                          (g$chi-expr$16023$T@1Mj
                            g$expr$18540$T@1Mj
                            g$r$18541$T@1Mj
                            g$r$18541$T@1Mj)))
                       g$swap$18554$T@1Mj)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$18555$T@1Mj)
                           (begin
                             (g$inv-collector$18550$T@1Mj
                               g$inv-collector$18552$T@1Mj)
                             (set! g$inv-collector$18552$T@1Mj
                               g$t$18555$T@1Mj))))
                        (g$inv-collector$18550$T@1Mj))
                       ((case-lambda
                          ((g$t$18556$T@1Mj)
                           (begin
                             (g$vis-collector$18551$T@1Mj
                               g$vis-collector$18553$T@1Mj)
                             (set! g$vis-collector$18553$T@1Mj
                               g$t$18556$T@1Mj))))
                        (g$vis-collector$18551$T@1Mj))))))))
              g$inv-collector$16060$T@1Mj
              g$vis-collector$16061$T@1Mj
              g$rtc$18542$T@1Mj
              (case-lambda ((g$x$18557$T@1Mj) (values)))))))
         (g$make-collector$16059$T@1Mj)))))
   (g$parse-exports$16054$T@1Mj
     g$parse-exports$19648$T@1Mj
     (case-lambda
       ((g$exp*$18558$T@1Mj)
        ((letrec ((g$f$18559$T@1Mj
                    (case-lambda
                      ((g$exp*$18560$T@1Mj
                         g$int*$18561$T@1Mj
                         g$ext*$18562$T@1Mj)
                       (if (null? g$exp*$18560$T@1Mj)
                         (begin
                           (if (not (g$valid-bound-ids?$15512$T@1Mj
                                      g$ext*$18562$T@1Mj))
                             (g$syntax-violation$16124$T@1Mj
                               'export
                               '"invalid exports"
                               (g$find-dups$16033$T@1Mj
                                 g$ext*$18562$T@1Mj))
                             (void))
                           (values
                             (g$map$11724$T@1Mj
                               g$syntax->datum$16127$T@1Mj
                               g$ext*$18562$T@1Mj)
                             g$int*$18561$T@1Mj))
                         ((case-lambda
                            ((g$t$18563$T@1Mj)
                             ((case-lambda
                                ((g$ls/false$18564$T@1Mj)
                                 (if g$ls/false$18564$T@1Mj
                                   (apply
                                     (case-lambda
                                       ((g$rename$18565$T@1Mj
                                          g$i*$18566$T@1Mj
                                          g$e*$18567$T@1Mj)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$16127$T@1Mj
                                                              g$rename$18565$T@1Mj)
                                                            'rename)
                                                     (if (g$for-all$11722$T@1Mj
                                                           g$id?$15507$T@1Mj
                                                           g$i*$18566$T@1Mj)
                                                       (begin
                                                         '#f
                                                         (g$for-all$11722$T@1Mj
                                                           g$id?$15507$T@1Mj
                                                           g$e*$18567$T@1Mj))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$16124$T@1Mj
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$18560$T@1Mj))
                                            (void))
                                          (g$f$18559$T@1Mj
                                            (cdr g$exp*$18560$T@1Mj)
                                            (append
                                              g$i*$18566$T@1Mj
                                              g$int*$18561$T@1Mj)
                                            (append
                                              g$e*$18567$T@1Mj
                                              g$ext*$18562$T@1Mj)))))
                                     g$ls/false$18564$T@1Mj)
                                   ((case-lambda
                                      ((g$t$18568$T@1Mj)
                                       ((case-lambda
                                          ((g$ls/false$18569$T@1Mj)
                                           (if g$ls/false$18569$T@1Mj
                                             (apply
                                               (case-lambda
                                                 ((g$ie$18570$T@1Mj)
                                                  (begin
                                                    (if (not (g$id?$15507$T@1Mj
                                                               g$ie$18570$T@1Mj))
                                                      (g$syntax-violation$16124$T@1Mj
                                                        'export
                                                        '"invalid export"
                                                        g$ie$18570$T@1Mj)
                                                      (void))
                                                    (g$f$18559$T@1Mj
                                                      (cdr g$exp*$18560$T@1Mj)
                                                      (cons
                                                        g$ie$18570$T@1Mj
                                                        g$int*$18561$T@1Mj)
                                                      (cons
                                                        g$ie$18570$T@1Mj
                                                        g$ext*$18562$T@1Mj)))))
                                               g$ls/false$18569$T@1Mj)
                                             (g$syntax-violation$16124$T@1Mj
                                               '#f
                                               '"invalid syntax"
                                               g$t$18568$T@1Mj))))
                                        (g$syntax-dispatch$16005$T@1Mj
                                          g$t$18568$T@1Mj
                                          'any))))
                                    g$t$18563$T@1Mj))))
                              (g$syntax-dispatch$16005$T@1Mj
                                g$t$18563$T@1Mj
                                '(any . #(each (any any)))))))
                          (car g$exp*$18560$T@1Mj)))))))
           g$f$18559$T@1Mj)
         g$exp*$18558$T@1Mj
         '()
         '()))))
   (g$parse-library-name$16055$T@1Mj
     g$parse-library-name$19649$T@1Mj
     (case-lambda
       ((g$spec$18571$T@1Mj)
        (letrec* ((g$parse$18572$T@1Mj
                    (case-lambda
                      ((g$x$18579$T@1Mj)
                       ((case-lambda
                          ((g$t$18580$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$18581$T@1Mj)
                               (if (if g$ls/false$18581$T@1Mj
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$18582$T@1Mj)
                                            (g$for-all$11722$T@1Mj
                                              (case-lambda
                                                ((g$x$18583$T@1Mj)
                                                 ((case-lambda
                                                    ((g$x$18584$T@1Mj)
                                                     (if (integer?
                                                           g$x$18584$T@1Mj)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$18584$T@1Mj))
                                                       '#f)))
                                                  (g$syntax->datum$16127$T@1Mj
                                                    g$x$18583$T@1Mj))))
                                              g$v*$18582$T@1Mj)))
                                         g$ls/false$18581$T@1Mj))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$18585$T@1Mj)
                                      (values
                                        '()
                                        (g$map$11724$T@1Mj
                                          g$syntax->datum$16127$T@1Mj
                                          g$v*$18585$T@1Mj))))
                                   g$ls/false$18581$T@1Mj)
                                 ((case-lambda
                                    ((g$t$18586$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$18587$T@1Mj)
                                         (if (if g$ls/false$18587$T@1Mj
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$18588$T@1Mj
                                                        g$rest$18589$T@1Mj)
                                                      (g$symbol?$12467$T@1Mj
                                                        (g$syntax->datum$16127$T@1Mj
                                                          g$x$18588$T@1Mj))))
                                                   g$ls/false$18587$T@1Mj))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$18590$T@1Mj
                                                  g$rest$18591$T@1Mj)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$18572$T@1Mj
                                                       g$rest$18591$T@1Mj)))
                                                  (case-lambda
                                                    ((g$x*$18594$T@1Mj
                                                       g$v*$18595$T@1Mj)
                                                     ((case-lambda
                                                        ((g$v*$18596$T@1Mj
                                                           g$x*$18597$T@1Mj)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$16127$T@1Mj
                                                               g$x$18590$T@1Mj)
                                                             g$x*$18597$T@1Mj)
                                                           g$v*$18596$T@1Mj)))
                                                      g$v*$18595$T@1Mj
                                                      g$x*$18594$T@1Mj))))))
                                             g$ls/false$18587$T@1Mj)
                                           ((case-lambda
                                              ((g$t$18598$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$18599$T@1Mj)
                                                   (if g$ls/false$18599$T@1Mj
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$18599$T@1Mj)
                                                     ((case-lambda
                                                        ((g$t$18600$T@1Mj)
                                                         ((case-lambda
                                                            ((g$ls/false$18601$T@1Mj)
                                                             (if g$ls/false$18601$T@1Mj
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$16124$T@1Mj
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$18571$T@1Mj)))
                                                                 g$ls/false$18601$T@1Mj)
                                                               (g$syntax-violation$16124$T@1Mj
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$18600$T@1Mj))))
                                                          (g$syntax-dispatch$16005$T@1Mj
                                                            g$t$18600$T@1Mj
                                                            '_))))
                                                      g$t$18598$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$18598$T@1Mj
                                                  '()))))
                                            g$t$18586$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$18586$T@1Mj
                                        '(any . any)))))
                                  g$t$18580$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$18580$T@1Mj
                              '(each-any)))))
                        g$x$18579$T@1Mj)))))
          (call-with-values
            (case-lambda (() (g$parse$18572$T@1Mj g$spec$18571$T@1Mj)))
            (case-lambda
              ((g$name*$18575$T@1Mj g$ver*$18576$T@1Mj)
               ((case-lambda
                  ((g$ver*$18577$T@1Mj g$name*$18578$T@1Mj)
                   (begin
                     (if (null? g$name*$18578$T@1Mj)
                       (g$syntax-violation$16124$T@1Mj
                         '#f
                         '"empty library name"
                         g$spec$18571$T@1Mj)
                       (void))
                     (values g$name*$18578$T@1Mj g$ver*$18577$T@1Mj))))
                g$ver*$18576$T@1Mj
                g$name*$18575$T@1Mj))))))))
   (g$parse-library$16056$T@1Mj
     g$parse-library$19650$T@1Mj
     (case-lambda
       ((g$e$18602$T@1Mj)
        ((case-lambda
           ((g$t$18603$T@1Mj)
            ((case-lambda
               ((g$ls/false$18604$T@1Mj)
                (if (if g$ls/false$18604$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$18605$T@1Mj
                               g$name*$18606$T@1Mj
                               g$export$18607$T@1Mj
                               g$exp*$18608$T@1Mj
                               g$import$18609$T@1Mj
                               g$imp*$18610$T@1Mj
                               g$b*$18611$T@1Mj)
                             (if (eq? (g$syntax->datum$16127$T@1Mj
                                        g$export$18607$T@1Mj)
                                      'export)
                               (if (eq? (g$syntax->datum$16127$T@1Mj
                                          g$import$18609$T@1Mj)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$16127$T@1Mj
                                          g$library$18605$T@1Mj)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$18604$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$18612$T@1Mj
                         g$name*$18613$T@1Mj
                         g$export$18614$T@1Mj
                         g$exp*$18615$T@1Mj
                         g$import$18616$T@1Mj
                         g$imp*$18617$T@1Mj
                         g$b*$18618$T@1Mj)
                       (values
                         g$name*$18613$T@1Mj
                         g$exp*$18615$T@1Mj
                         g$imp*$18617$T@1Mj
                         g$b*$18618$T@1Mj)))
                    g$ls/false$18604$T@1Mj)
                  ((case-lambda
                     ((g$t$18619$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$18620$T@1Mj)
                          (if g$ls/false$18620$T@1Mj
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$16124$T@1Mj
                                   '#f
                                   '"malformed library"
                                   g$e$18602$T@1Mj)))
                              g$ls/false$18620$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$18619$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$18619$T@1Mj
                         '_))))
                   g$t$18603$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$18603$T@1Mj
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$18602$T@1Mj))))
   (g$parse-import-spec*$16057$T@1Mj
     g$parse-import-spec*$19651$T@1Mj
     (case-lambda
       ((g$imp*$18621$T@1Mj)
        (letrec* ((g$idsyn?$18622$T@1Mj
                    (case-lambda
                      ((g$x$18882$T@1Mj)
                       (g$symbol?$12467$T@1Mj
                         (g$syntax->datum$16127$T@1Mj
                           g$x$18882$T@1Mj)))))
                  (g$dup-error$18623$T@1Mj
                    (case-lambda
                      ((g$name$18881$T@1Mj)
                       (g$syntax-violation$16124$T@1Mj
                         'import
                         '"two imports with different bindings"
                         g$name$18881$T@1Mj))))
                  (g$merge-substs$18624$T@1Mj
                    (case-lambda
                      ((g$s$18872$T@1Mj g$subst$18873$T@1Mj)
                       (letrec* ((g$insert-to-subst$18874$T@1Mj
                                   (case-lambda
                                     ((g$a$18875$T@1Mj
                                        g$subst$18876$T@1Mj)
                                      ((case-lambda
                                         ((g$name$18877$T@1Mj
                                            g$label$18878$T@1Mj)
                                          ((case-lambda
                                             ((g$t$18879$T@1Mj)
                                              (if g$t$18879$T@1Mj
                                                ((case-lambda
                                                   ((g$x$18880$T@1Mj)
                                                    (if (eq? (cdr g$x$18880$T@1Mj)
                                                             g$label$18878$T@1Mj)
                                                      g$subst$18876$T@1Mj
                                                      (g$dup-error$18623$T@1Mj
                                                        g$name$18877$T@1Mj))))
                                                 g$t$18879$T@1Mj)
                                                (cons
                                                  g$a$18875$T@1Mj
                                                  g$subst$18876$T@1Mj))))
                                           (g$assq$11712$T@1Mj
                                             g$name$18877$T@1Mj
                                             g$subst$18876$T@1Mj))))
                                       (car g$a$18875$T@1Mj)
                                       (cdr g$a$18875$T@1Mj))))))
                         (if (null? g$s$18872$T@1Mj)
                           g$subst$18873$T@1Mj
                           (g$insert-to-subst$18874$T@1Mj
                             (car g$s$18872$T@1Mj)
                             (g$merge-substs$18624$T@1Mj
                               (cdr g$s$18872$T@1Mj)
                               g$subst$18873$T@1Mj)))))))
                  (g$exclude*$18625$T@1Mj
                    (case-lambda
                      ((g$sym*$18848$T@1Mj g$subst$18849$T@1Mj)
                       (letrec* ((g$exclude$18850$T@1Mj
                                   (case-lambda
                                     ((g$sym$18863$T@1Mj
                                        g$subst$18864$T@1Mj)
                                      (if (null? g$subst$18864$T@1Mj)
                                        (g$syntax-violation$16124$T@1Mj
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$18863$T@1Mj)
                                        (if (eq? g$sym$18863$T@1Mj
                                                 (g$caar$12476$T@1Mj
                                                   g$subst$18864$T@1Mj))
                                          (values
                                            (g$cdar$12478$T@1Mj
                                              g$subst$18864$T@1Mj)
                                            (cdr g$subst$18864$T@1Mj))
                                          ((case-lambda
                                             ((g$a$18865$T@1Mj)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$18850$T@1Mj
                                                     g$sym$18863$T@1Mj
                                                     (cdr g$subst$18864$T@1Mj))))
                                                (case-lambda
                                                  ((g$old$18868$T@1Mj
                                                     g$subst$18869$T@1Mj)
                                                   ((case-lambda
                                                      ((g$subst$18870$T@1Mj
                                                         g$old$18871$T@1Mj)
                                                       (values
                                                         g$old$18871$T@1Mj
                                                         (cons
                                                           g$a$18865$T@1Mj
                                                           g$subst$18870$T@1Mj))))
                                                    g$subst$18869$T@1Mj
                                                    g$old$18868$T@1Mj))))))
                                           (car g$subst$18864$T@1Mj))))))))
                         (if (null? g$sym*$18848$T@1Mj)
                           (values '() g$subst$18849$T@1Mj)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$18850$T@1Mj
                                  (car g$sym*$18848$T@1Mj)
                                  g$subst$18849$T@1Mj)))
                             (case-lambda
                               ((g$old$18853$T@1Mj g$subst$18854$T@1Mj)
                                ((case-lambda
                                   ((g$subst$18855$T@1Mj
                                      g$old$18856$T@1Mj)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$18625$T@1Mj
                                           (cdr g$sym*$18848$T@1Mj)
                                           g$subst$18855$T@1Mj)))
                                      (case-lambda
                                        ((g$old*$18859$T@1Mj
                                           g$subst$18860$T@1Mj)
                                         ((case-lambda
                                            ((g$subst$18861$T@1Mj
                                               g$old*$18862$T@1Mj)
                                             (values
                                               (cons
                                                 g$old$18856$T@1Mj
                                                 g$old*$18862$T@1Mj)
                                               g$subst$18861$T@1Mj)))
                                          g$subst$18860$T@1Mj
                                          g$old*$18859$T@1Mj))))))
                                 g$subst$18854$T@1Mj
                                 g$old$18853$T@1Mj)))))))))
                  (g$find*$18626$T@1Mj
                    (case-lambda
                      ((g$sym*$18844$T@1Mj g$subst$18845$T@1Mj)
                       (g$map$11724$T@1Mj
                         (case-lambda
                           ((g$x$18846$T@1Mj)
                            ((case-lambda
                               ((g$t$18847$T@1Mj)
                                (if g$t$18847$T@1Mj
                                  (cdr g$t$18847$T@1Mj)
                                  (g$syntax-violation$16124$T@1Mj
                                    'import
                                    '"cannot find identifier"
                                    g$x$18846$T@1Mj))))
                             (g$assq$11712$T@1Mj
                               g$x$18846$T@1Mj
                               g$subst$18845$T@1Mj))))
                         g$sym*$18844$T@1Mj))))
                  (g$rem*$18627$T@1Mj
                    (case-lambda
                      ((g$sym*$18840$T@1Mj g$subst$18841$T@1Mj)
                       ((letrec ((g$f$18842$T@1Mj
                                   (case-lambda
                                     ((g$subst$18843$T@1Mj)
                                      (if (null? g$subst$18843$T@1Mj)
                                        '()
                                        (if (g$memq$11716$T@1Mj
                                              (g$caar$12476$T@1Mj
                                                g$subst$18843$T@1Mj)
                                              g$sym*$18840$T@1Mj)
                                          (g$f$18842$T@1Mj
                                            (cdr g$subst$18843$T@1Mj))
                                          (cons
                                            (car g$subst$18843$T@1Mj)
                                            (g$f$18842$T@1Mj
                                              (cdr g$subst$18843$T@1Mj)))))))))
                          g$f$18842$T@1Mj)
                        g$subst$18841$T@1Mj))))
                  (g$remove-dups$18628$T@1Mj
                    (case-lambda
                      ((g$ls$18839$T@1Mj)
                       (if (null? g$ls$18839$T@1Mj)
                         '()
                         (if (g$memq$11716$T@1Mj
                               (car g$ls$18839$T@1Mj)
                               (cdr g$ls$18839$T@1Mj))
                           (g$remove-dups$18628$T@1Mj
                             (cdr g$ls$18839$T@1Mj))
                           (cons
                             (car g$ls$18839$T@1Mj)
                             (g$remove-dups$18628$T@1Mj
                               (cdr g$ls$18839$T@1Mj))))))))
                  (g$parse-library-name$18629$T@1Mj
                    (case-lambda
                      ((g$spec$18723$T@1Mj)
                       (letrec* ((g$subversion?$18724$T@1Mj
                                   (case-lambda
                                     ((g$x$18837$T@1Mj)
                                      ((case-lambda
                                         ((g$x$18838$T@1Mj)
                                          (if (integer? g$x$18838$T@1Mj)
                                            (if (exact? g$x$18838$T@1Mj)
                                              (begin
                                                '#f
                                                (>= g$x$18838$T@1Mj '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$16127$T@1Mj
                                         g$x$18837$T@1Mj)))))
                                 (g$subversion-pred$18725$T@1Mj
                                   (case-lambda
                                     ((g$x*$18789$T@1Mj)
                                      ((case-lambda
                                         ((g$t$18790$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$18791$T@1Mj)
                                              (if (if g$ls/false$18791$T@1Mj
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$18792$T@1Mj)
                                                           (g$subversion?$18724$T@1Mj
                                                             g$n$18792$T@1Mj)))
                                                        g$ls/false$18791$T@1Mj))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$18793$T@1Mj)
                                                     (case-lambda
                                                       ((g$x$18794$T@1Mj)
                                                        (= g$x$18794$T@1Mj
                                                           (g$syntax->datum$16127$T@1Mj
                                                             g$n$18793$T@1Mj))))))
                                                  g$ls/false$18791$T@1Mj)
                                                ((case-lambda
                                                   ((g$t$18795$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$18796$T@1Mj)
                                                        (if (if g$ls/false$18796$T@1Mj
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$18797$T@1Mj
                                                                       g$sub*$18798$T@1Mj)
                                                                     (eq? (g$syntax->datum$16127$T@1Mj
                                                                            g$p?$18797$T@1Mj)
                                                                          'and)))
                                                                  g$ls/false$18796$T@1Mj))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$18799$T@1Mj
                                                                 g$sub*$18800$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$p*$18801$T@1Mj)
                                                                   (case-lambda
                                                                     ((g$x$18802$T@1Mj)
                                                                      (g$for-all$11722$T@1Mj
                                                                        (case-lambda
                                                                          ((g$p$18803$T@1Mj)
                                                                           (g$p$18803$T@1Mj
                                                                             g$x$18802$T@1Mj)))
                                                                        g$p*$18801$T@1Mj)))))
                                                                (g$map$11724$T@1Mj
                                                                  g$subversion-pred$18725$T@1Mj
                                                                  g$sub*$18800$T@1Mj))))
                                                            g$ls/false$18796$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$18804$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$18805$T@1Mj)
                                                                  (if (if g$ls/false$18805$T@1Mj
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$18806$T@1Mj
                                                                                 g$sub*$18807$T@1Mj)
                                                                               (eq? (g$syntax->datum$16127$T@1Mj
                                                                                      g$p?$18806$T@1Mj)
                                                                                    'or)))
                                                                            g$ls/false$18805$T@1Mj))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$18808$T@1Mj
                                                                           g$sub*$18809$T@1Mj)
                                                                         ((case-lambda
                                                                            ((g$p*$18810$T@1Mj)
                                                                             (case-lambda
                                                                               ((g$x$18811$T@1Mj)
                                                                                (g$exists$11723$T@1Mj
                                                                                  (case-lambda
                                                                                    ((g$p$18812$T@1Mj)
                                                                                     (g$p$18812$T@1Mj
                                                                                       g$x$18811$T@1Mj)))
                                                                                  g$p*$18810$T@1Mj)))))
                                                                          (g$map$11724$T@1Mj
                                                                            g$subversion-pred$18725$T@1Mj
                                                                            g$sub*$18809$T@1Mj))))
                                                                      g$ls/false$18805$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$t$18813$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ls/false$18814$T@1Mj)
                                                                            (if (if g$ls/false$18814$T@1Mj
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$18815$T@1Mj
                                                                                           g$sub$18816$T@1Mj)
                                                                                         (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                g$p?$18815$T@1Mj)
                                                                                              'not)))
                                                                                      g$ls/false$18814$T@1Mj))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$18817$T@1Mj
                                                                                     g$sub$18818$T@1Mj)
                                                                                   ((case-lambda
                                                                                      ((g$p$18819$T@1Mj)
                                                                                       (case-lambda
                                                                                         ((g$x$18820$T@1Mj)
                                                                                          (not (g$p$18819$T@1Mj
                                                                                                 g$x$18820$T@1Mj))))))
                                                                                    (g$subversion-pred$18725$T@1Mj
                                                                                      g$sub$18818$T@1Mj))))
                                                                                g$ls/false$18814$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$t$18821$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$18822$T@1Mj)
                                                                                      (if (if g$ls/false$18822$T@1Mj
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$18823$T@1Mj
                                                                                                     g$n$18824$T@1Mj)
                                                                                                   (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                              g$p?$18823$T@1Mj)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$18724$T@1Mj
                                                                                                         g$n$18824$T@1Mj))
                                                                                                     '#f)))
                                                                                                g$ls/false$18822$T@1Mj))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$18825$T@1Mj
                                                                                               g$n$18826$T@1Mj)
                                                                                             (case-lambda
                                                                                               ((g$x$18827$T@1Mj)
                                                                                                (<= g$x$18827$T@1Mj
                                                                                                    (g$syntax->datum$16127$T@1Mj
                                                                                                      g$n$18826$T@1Mj))))))
                                                                                          g$ls/false$18822$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$t$18828$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$18829$T@1Mj)
                                                                                                (if (if g$ls/false$18829$T@1Mj
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$18830$T@1Mj
                                                                                                               g$n$18831$T@1Mj)
                                                                                                             (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                                        g$p?$18830$T@1Mj)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$18724$T@1Mj
                                                                                                                   g$n$18831$T@1Mj))
                                                                                                               '#f)))
                                                                                                          g$ls/false$18829$T@1Mj))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$18832$T@1Mj
                                                                                                         g$n$18833$T@1Mj)
                                                                                                       (case-lambda
                                                                                                         ((g$x$18834$T@1Mj)
                                                                                                          (>= g$x$18834$T@1Mj
                                                                                                              (g$syntax->datum$16127$T@1Mj
                                                                                                                g$n$18833$T@1Mj))))))
                                                                                                    g$ls/false$18829$T@1Mj)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$18835$T@1Mj)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$18836$T@1Mj)
                                                                                                          (if g$ls/false$18836$T@1Mj
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$16124$T@1Mj
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$18723$T@1Mj
                                                                                                                   g$x*$18789$T@1Mj)))
                                                                                                              g$ls/false$18836$T@1Mj)
                                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$18835$T@1Mj))))
                                                                                                       (g$syntax-dispatch$16005$T@1Mj
                                                                                                         g$t$18835$T@1Mj
                                                                                                         '_))))
                                                                                                   g$t$18828$T@1Mj))))
                                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                                               g$t$18828$T@1Mj
                                                                                               '(any any)))))
                                                                                         g$t$18821$T@1Mj))))
                                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                                     g$t$18821$T@1Mj
                                                                                     '(any any)))))
                                                                               g$t$18813$T@1Mj))))
                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                           g$t$18813$T@1Mj
                                                                           '(any any)))))
                                                                     g$t$18804$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$18804$T@1Mj
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$18795$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$18795$T@1Mj
                                                       '(any .
                                                             each-any)))))
                                                 g$t$18790$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$18790$T@1Mj
                                             'any))))
                                       g$x*$18789$T@1Mj))))
                                 (g$version-pred$18726$T@1Mj
                                   (case-lambda
                                     ((g$x*$18749$T@1Mj)
                                      ((case-lambda
                                         ((g$t$18750$T@1Mj)
                                          ((case-lambda
                                             ((g$ls/false$18751$T@1Mj)
                                              (if g$ls/false$18751$T@1Mj
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$18752$T@1Mj)
                                                        '#t))))
                                                  g$ls/false$18751$T@1Mj)
                                                ((case-lambda
                                                   ((g$t$18753$T@1Mj)
                                                    ((case-lambda
                                                       ((g$ls/false$18754$T@1Mj)
                                                        (if (if g$ls/false$18754$T@1Mj
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$18755$T@1Mj
                                                                       g$ver*$18756$T@1Mj)
                                                                     (eq? (g$syntax->datum$16127$T@1Mj
                                                                            g$c$18755$T@1Mj)
                                                                          'and)))
                                                                  g$ls/false$18754$T@1Mj))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$18757$T@1Mj
                                                                 g$ver*$18758$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$p*$18759$T@1Mj)
                                                                   (case-lambda
                                                                     ((g$x$18760$T@1Mj)
                                                                      (g$for-all$11722$T@1Mj
                                                                        (case-lambda
                                                                          ((g$p$18761$T@1Mj)
                                                                           (g$p$18761$T@1Mj
                                                                             g$x$18760$T@1Mj)))
                                                                        g$p*$18759$T@1Mj)))))
                                                                (g$map$11724$T@1Mj
                                                                  g$version-pred$18726$T@1Mj
                                                                  g$ver*$18758$T@1Mj))))
                                                            g$ls/false$18754$T@1Mj)
                                                          ((case-lambda
                                                             ((g$t$18762$T@1Mj)
                                                              ((case-lambda
                                                                 ((g$ls/false$18763$T@1Mj)
                                                                  (if (if g$ls/false$18763$T@1Mj
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$18764$T@1Mj
                                                                                 g$ver*$18765$T@1Mj)
                                                                               (eq? (g$syntax->datum$16127$T@1Mj
                                                                                      g$c$18764$T@1Mj)
                                                                                    'or)))
                                                                            g$ls/false$18763$T@1Mj))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$18766$T@1Mj
                                                                           g$ver*$18767$T@1Mj)
                                                                         ((case-lambda
                                                                            ((g$p*$18768$T@1Mj)
                                                                             (case-lambda
                                                                               ((g$x$18769$T@1Mj)
                                                                                (g$exists$11723$T@1Mj
                                                                                  (case-lambda
                                                                                    ((g$p$18770$T@1Mj)
                                                                                     (g$p$18770$T@1Mj
                                                                                       g$x$18769$T@1Mj)))
                                                                                  g$p*$18768$T@1Mj)))))
                                                                          (g$map$11724$T@1Mj
                                                                            g$version-pred$18726$T@1Mj
                                                                            g$ver*$18767$T@1Mj))))
                                                                      g$ls/false$18763$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$t$18771$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$ls/false$18772$T@1Mj)
                                                                            (if (if g$ls/false$18772$T@1Mj
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$18773$T@1Mj
                                                                                           g$ver$18774$T@1Mj)
                                                                                         (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                g$c$18773$T@1Mj)
                                                                                              'not)))
                                                                                      g$ls/false$18772$T@1Mj))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$18775$T@1Mj
                                                                                     g$ver$18776$T@1Mj)
                                                                                   ((case-lambda
                                                                                      ((g$p$18777$T@1Mj)
                                                                                       (case-lambda
                                                                                         ((g$x$18778$T@1Mj)
                                                                                          (not (g$p$18777$T@1Mj
                                                                                                 g$x$18778$T@1Mj))))))
                                                                                    (g$version-pred$18726$T@1Mj
                                                                                      g$ver$18776$T@1Mj))))
                                                                                g$ls/false$18772$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$t$18779$T@1Mj)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$18780$T@1Mj)
                                                                                      (if g$ls/false$18780$T@1Mj
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$18781$T@1Mj)
                                                                                             ((case-lambda
                                                                                                ((g$p*$18782$T@1Mj)
                                                                                                 (case-lambda
                                                                                                   ((g$x$18783$T@1Mj)
                                                                                                    ((letrec ((g$f$18784$T@1Mj
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$18785$T@1Mj
                                                                                                                     g$x$18786$T@1Mj)
                                                                                                                   (if (null?
                                                                                                                         g$p*$18785$T@1Mj)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$18786$T@1Mj)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$18785$T@1Mj)
                                                                                                                            (car g$x$18786$T@1Mj))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$18784$T@1Mj
                                                                                                                             (cdr g$p*$18785$T@1Mj)
                                                                                                                             (cdr g$x$18786$T@1Mj)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$18784$T@1Mj)
                                                                                                     g$p*$18782$T@1Mj
                                                                                                     g$x$18783$T@1Mj)))))
                                                                                              (g$map$11724$T@1Mj
                                                                                                g$subversion-pred$18725$T@1Mj
                                                                                                g$sub*$18781$T@1Mj))))
                                                                                          g$ls/false$18780$T@1Mj)
                                                                                        ((case-lambda
                                                                                           ((g$t$18787$T@1Mj)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$18788$T@1Mj)
                                                                                                (if g$ls/false$18788$T@1Mj
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$16124$T@1Mj
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$18723$T@1Mj
                                                                                                         g$x*$18749$T@1Mj)))
                                                                                                    g$ls/false$18788$T@1Mj)
                                                                                                  (g$syntax-violation$16124$T@1Mj
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$18787$T@1Mj))))
                                                                                             (g$syntax-dispatch$16005$T@1Mj
                                                                                               g$t$18787$T@1Mj
                                                                                               '_))))
                                                                                         g$t$18779$T@1Mj))))
                                                                                   (g$syntax-dispatch$16005$T@1Mj
                                                                                     g$t$18779$T@1Mj
                                                                                     'each-any))))
                                                                               g$t$18771$T@1Mj))))
                                                                         (g$syntax-dispatch$16005$T@1Mj
                                                                           g$t$18771$T@1Mj
                                                                           '(any any)))))
                                                                     g$t$18762$T@1Mj))))
                                                               (g$syntax-dispatch$16005$T@1Mj
                                                                 g$t$18762$T@1Mj
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$18753$T@1Mj))))
                                                     (g$syntax-dispatch$16005$T@1Mj
                                                       g$t$18753$T@1Mj
                                                       '(any .
                                                             each-any)))))
                                                 g$t$18750$T@1Mj))))
                                           (g$syntax-dispatch$16005$T@1Mj
                                             g$t$18750$T@1Mj
                                             '()))))
                                       g$x*$18749$T@1Mj)))))
                         ((letrec ((g$f$18727$T@1Mj
                                     (case-lambda
                                       ((g$x$18728$T@1Mj)
                                        ((case-lambda
                                           ((g$t$18729$T@1Mj)
                                            ((case-lambda
                                               ((g$ls/false$18730$T@1Mj)
                                                (if g$ls/false$18730$T@1Mj
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$18731$T@1Mj)
                                                       (values
                                                         '()
                                                         (g$version-pred$18726$T@1Mj
                                                           g$version-spec*$18731$T@1Mj))))
                                                    g$ls/false$18730$T@1Mj)
                                                  ((case-lambda
                                                     ((g$t$18732$T@1Mj)
                                                      ((case-lambda
                                                         ((g$ls/false$18733$T@1Mj)
                                                          (if (if g$ls/false$18733$T@1Mj
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$18734$T@1Mj
                                                                         g$x*$18735$T@1Mj)
                                                                       (g$idsyn?$18622$T@1Mj
                                                                         g$x$18734$T@1Mj)))
                                                                    g$ls/false$18733$T@1Mj))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$18736$T@1Mj
                                                                   g$x*$18737$T@1Mj)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$18727$T@1Mj
                                                                        g$x*$18737$T@1Mj)))
                                                                   (case-lambda
                                                                     ((g$name$18740$T@1Mj
                                                                        g$pred$18741$T@1Mj)
                                                                      ((case-lambda
                                                                         ((g$pred$18742$T@1Mj
                                                                            g$name$18743$T@1Mj)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$16127$T@1Mj
                                                                                g$x$18736$T@1Mj)
                                                                              g$name$18743$T@1Mj)
                                                                            g$pred$18742$T@1Mj)))
                                                                       g$pred$18741$T@1Mj
                                                                       g$name$18740$T@1Mj))))))
                                                              g$ls/false$18733$T@1Mj)
                                                            ((case-lambda
                                                               ((g$t$18744$T@1Mj)
                                                                ((case-lambda
                                                                   ((g$ls/false$18745$T@1Mj)
                                                                    (if g$ls/false$18745$T@1Mj
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$18746$T@1Mj)
                                                                                '#t)))))
                                                                        g$ls/false$18745$T@1Mj)
                                                                      ((case-lambda
                                                                         ((g$t$18747$T@1Mj)
                                                                          ((case-lambda
                                                                             ((g$ls/false$18748$T@1Mj)
                                                                              (if g$ls/false$18748$T@1Mj
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$16124$T@1Mj
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$18723$T@1Mj)))
                                                                                  g$ls/false$18748$T@1Mj)
                                                                                (g$syntax-violation$16124$T@1Mj
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$18747$T@1Mj))))
                                                                           (g$syntax-dispatch$16005$T@1Mj
                                                                             g$t$18747$T@1Mj
                                                                             '_))))
                                                                       g$t$18744$T@1Mj))))
                                                                 (g$syntax-dispatch$16005$T@1Mj
                                                                   g$t$18744$T@1Mj
                                                                   '()))))
                                                             g$t$18732$T@1Mj))))
                                                       (g$syntax-dispatch$16005$T@1Mj
                                                         g$t$18732$T@1Mj
                                                         '(any .
                                                               any)))))
                                                   g$t$18729$T@1Mj))))
                                             (g$syntax-dispatch$16005$T@1Mj
                                               g$t$18729$T@1Mj
                                               '(each-any)))))
                                         g$x$18728$T@1Mj)))))
                            g$f$18727$T@1Mj)
                          g$spec$18723$T@1Mj)))))
                  (g$import-library$18630$T@1Mj
                    (case-lambda
                      ((g$spec*$18715$T@1Mj)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$18629$T@1Mj
                              g$spec*$18715$T@1Mj)))
                         (case-lambda
                           ((g$name$18718$T@1Mj g$pred$18719$T@1Mj)
                            ((case-lambda
                               ((g$pred$18720$T@1Mj g$name$18721$T@1Mj)
                                (begin
                                  (if (null? g$name$18721$T@1Mj)
                                    (g$syntax-violation$16124$T@1Mj
                                      'import
                                      '"empty library name"
                                      g$spec*$18715$T@1Mj)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$18722$T@1Mj)
                                      (begin
                                        (if (not g$lib$18722$T@1Mj)
                                          (g$syntax-violation$16124$T@1Mj
                                            'import
                                            '"cannot find library with required name"
                                            g$name$18721$T@1Mj)
                                          (void))
                                        (if (not (g$pred$18720$T@1Mj
                                                   (g$library-version$15166$T@1Mj
                                                     g$lib$18722$T@1Mj)))
                                          (g$syntax-violation$16124$T@1Mj
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$18715$T@1Mj
                                            g$lib$18722$T@1Mj)
                                          (void))
                                        ((g$imp-collector$16062$T@1Mj)
                                         g$lib$18722$T@1Mj)
                                        (g$library-subst$15170$T@1Mj
                                          g$lib$18722$T@1Mj))))
                                   (g$find-library-by-name$15206$T@1Mj
                                     g$name$18721$T@1Mj)))))
                             g$pred$18719$T@1Mj
                             g$name$18718$T@1Mj)))))))
                  (g$get-import$18631$T@1Mj
                    (case-lambda
                      ((g$spec$18644$T@1Mj)
                       ((case-lambda
                          ((g$t$18645$T@1Mj)
                           ((case-lambda
                              ((g$ls/false$18646$T@1Mj)
                               (if (if g$ls/false$18646$T@1Mj
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$18647$T@1Mj
                                              g$x*$18648$T@1Mj)
                                            (not (g$memq$11716$T@1Mj
                                                   (g$syntax->datum$16127$T@1Mj
                                                     g$x$18647$T@1Mj)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$18646$T@1Mj))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$18649$T@1Mj g$x*$18650$T@1Mj)
                                      (g$import-library$18630$T@1Mj
                                        (cons
                                          g$x$18649$T@1Mj
                                          g$x*$18650$T@1Mj))))
                                   g$ls/false$18646$T@1Mj)
                                 ((case-lambda
                                    ((g$t$18651$T@1Mj)
                                     ((case-lambda
                                        ((g$ls/false$18652$T@1Mj)
                                         (if (if g$ls/false$18652$T@1Mj
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$18653$T@1Mj
                                                        g$isp$18654$T@1Mj
                                                        g$old*$18655$T@1Mj
                                                        g$new*$18656$T@1Mj)
                                                      (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                 g$rename$18653$T@1Mj)
                                                               'rename)
                                                        (if (g$for-all$11722$T@1Mj
                                                              g$idsyn?$18622$T@1Mj
                                                              g$old*$18655$T@1Mj)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11722$T@1Mj
                                                              g$idsyn?$18622$T@1Mj
                                                              g$new*$18656$T@1Mj))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$18652$T@1Mj))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$18657$T@1Mj
                                                  g$isp$18658$T@1Mj
                                                  g$old*$18659$T@1Mj
                                                  g$new*$18660$T@1Mj)
                                                ((case-lambda
                                                   ((g$subst$18661$T@1Mj
                                                      g$old*$18662$T@1Mj
                                                      g$new*$18663$T@1Mj)
                                                    ((case-lambda
                                                       ((g$old-label*$18664$T@1Mj)
                                                        ((case-lambda
                                                           ((g$subst$18665$T@1Mj)
                                                            (g$merge-substs$18624$T@1Mj
                                                              (g$map$11724$T@1Mj
                                                                cons
                                                                g$new*$18663$T@1Mj
                                                                g$old-label*$18664$T@1Mj)
                                                              g$subst$18665$T@1Mj)))
                                                         (g$rem*$18627$T@1Mj
                                                           g$old*$18662$T@1Mj
                                                           g$subst$18661$T@1Mj))))
                                                     (g$find*$18626$T@1Mj
                                                       g$old*$18662$T@1Mj
                                                       g$subst$18661$T@1Mj))))
                                                 (g$get-import$18631$T@1Mj
                                                   g$isp$18658$T@1Mj)
                                                 (g$map$11724$T@1Mj
                                                   g$syntax->datum$16127$T@1Mj
                                                   g$old*$18659$T@1Mj)
                                                 (g$map$11724$T@1Mj
                                                   g$syntax->datum$16127$T@1Mj
                                                   g$new*$18660$T@1Mj))))
                                             g$ls/false$18652$T@1Mj)
                                           ((case-lambda
                                              ((g$t$18666$T@1Mj)
                                               ((case-lambda
                                                  ((g$ls/false$18667$T@1Mj)
                                                   (if (if g$ls/false$18667$T@1Mj
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$18668$T@1Mj
                                                                  g$isp$18669$T@1Mj
                                                                  g$sym*$18670$T@1Mj)
                                                                (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                           g$except$18668$T@1Mj)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11722$T@1Mj
                                                                      g$idsyn?$18622$T@1Mj
                                                                      g$sym*$18670$T@1Mj))
                                                                  '#f)))
                                                             g$ls/false$18667$T@1Mj))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$18671$T@1Mj
                                                            g$isp$18672$T@1Mj
                                                            g$sym*$18673$T@1Mj)
                                                          ((case-lambda
                                                             ((g$subst$18674$T@1Mj)
                                                              (g$rem*$18627$T@1Mj
                                                                (g$map$11724$T@1Mj
                                                                  g$syntax->datum$16127$T@1Mj
                                                                  g$sym*$18673$T@1Mj)
                                                                g$subst$18674$T@1Mj)))
                                                           (g$get-import$18631$T@1Mj
                                                             g$isp$18672$T@1Mj))))
                                                       g$ls/false$18667$T@1Mj)
                                                     ((case-lambda
                                                        ((g$t$18675$T@1Mj)
                                                         ((case-lambda
                                                            ((g$ls/false$18676$T@1Mj)
                                                             (if (if g$ls/false$18676$T@1Mj
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$18677$T@1Mj
                                                                            g$isp$18678$T@1Mj
                                                                            g$sym*$18679$T@1Mj)
                                                                          (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                                     g$only$18677$T@1Mj)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11722$T@1Mj
                                                                                g$idsyn?$18622$T@1Mj
                                                                                g$sym*$18679$T@1Mj))
                                                                            '#f)))
                                                                       g$ls/false$18676$T@1Mj))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$18680$T@1Mj
                                                                      g$isp$18681$T@1Mj
                                                                      g$sym*$18682$T@1Mj)
                                                                    ((case-lambda
                                                                       ((g$subst$18683$T@1Mj
                                                                          g$sym*$18684$T@1Mj)
                                                                        ((case-lambda
                                                                           ((g$sym*$18685$T@1Mj)
                                                                            ((case-lambda
                                                                               ((g$lab*$18686$T@1Mj)
                                                                                (g$map$11724$T@1Mj
                                                                                  cons
                                                                                  g$sym*$18685$T@1Mj
                                                                                  g$lab*$18686$T@1Mj)))
                                                                             (g$find*$18626$T@1Mj
                                                                               g$sym*$18685$T@1Mj
                                                                               g$subst$18683$T@1Mj))))
                                                                         (g$remove-dups$18628$T@1Mj
                                                                           g$sym*$18684$T@1Mj))))
                                                                     (g$get-import$18631$T@1Mj
                                                                       g$isp$18681$T@1Mj)
                                                                     (g$map$11724$T@1Mj
                                                                       g$syntax->datum$16127$T@1Mj
                                                                       g$sym*$18682$T@1Mj))))
                                                                 g$ls/false$18676$T@1Mj)
                                                               ((case-lambda
                                                                  ((g$t$18687$T@1Mj)
                                                                   ((case-lambda
                                                                      ((g$ls/false$18688$T@1Mj)
                                                                       (if (if g$ls/false$18688$T@1Mj
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$18689$T@1Mj
                                                                                      g$isp$18690$T@1Mj
                                                                                      g$p$18691$T@1Mj)
                                                                                    (if (eq? (g$syntax->datum$16127$T@1Mj
                                                                                               g$prefix$18689$T@1Mj)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$18622$T@1Mj
                                                                                          g$p$18691$T@1Mj))
                                                                                      '#f)))
                                                                                 g$ls/false$18688$T@1Mj))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$18692$T@1Mj
                                                                                g$isp$18693$T@1Mj
                                                                                g$p$18694$T@1Mj)
                                                                              ((case-lambda
                                                                                 ((g$subst$18695$T@1Mj
                                                                                    g$prefix$18696$T@1Mj)
                                                                                  (g$map$11724$T@1Mj
                                                                                    (case-lambda
                                                                                      ((g$x$18697$T@1Mj)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$18696$T@1Mj
                                                                                             (symbol->string
                                                                                               (car g$x$18697$T@1Mj))))
                                                                                         (cdr g$x$18697$T@1Mj))))
                                                                                    g$subst$18695$T@1Mj)))
                                                                               (g$get-import$18631$T@1Mj
                                                                                 g$isp$18693$T@1Mj)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$16127$T@1Mj
                                                                                   g$p$18694$T@1Mj)))))
                                                                           g$ls/false$18688$T@1Mj)
                                                                         ((case-lambda
                                                                            ((g$t$18698$T@1Mj)
                                                                             ((case-lambda
                                                                                ((g$ls/false$18699$T@1Mj)
                                                                                 (if (if g$ls/false$18699$T@1Mj
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$18700$T@1Mj
                                                                                                g$spec*$18701$T@1Mj)
                                                                                              (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                     g$library$18700$T@1Mj)
                                                                                                   'library)))
                                                                                           g$ls/false$18699$T@1Mj))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$18702$T@1Mj
                                                                                          g$spec*$18703$T@1Mj)
                                                                                        (g$import-library$18630$T@1Mj
                                                                                          g$spec*$18703$T@1Mj)))
                                                                                     g$ls/false$18699$T@1Mj)
                                                                                   ((case-lambda
                                                                                      ((g$t$18704$T@1Mj)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$18705$T@1Mj)
                                                                                           (if (if g$ls/false$18705$T@1Mj
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$18706$T@1Mj
                                                                                                          g$isp$18707$T@1Mj
                                                                                                          g$rest$18708$T@1Mj)
                                                                                                        (eq? (g$syntax->datum$16127$T@1Mj
                                                                                                               g$for$18706$T@1Mj)
                                                                                                             'for)))
                                                                                                     g$ls/false$18705$T@1Mj))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$18709$T@1Mj
                                                                                                    g$isp$18710$T@1Mj
                                                                                                    g$rest$18711$T@1Mj)
                                                                                                  (g$get-import$18631$T@1Mj
                                                                                                    g$isp$18710$T@1Mj)))
                                                                                               g$ls/false$18705$T@1Mj)
                                                                                             ((case-lambda
                                                                                                ((g$t$18712$T@1Mj)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$18713$T@1Mj)
                                                                                                     (if g$ls/false$18713$T@1Mj
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$18714$T@1Mj)
                                                                                                            (g$syntax-violation$16124$T@1Mj
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$18714$T@1Mj)))
                                                                                                         g$ls/false$18713$T@1Mj)
                                                                                                       (g$syntax-violation$16124$T@1Mj
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$18712$T@1Mj))))
                                                                                                  (g$syntax-dispatch$16005$T@1Mj
                                                                                                    g$t$18712$T@1Mj
                                                                                                    'any))))
                                                                                              g$t$18704$T@1Mj))))
                                                                                        (g$syntax-dispatch$16005$T@1Mj
                                                                                          g$t$18704$T@1Mj
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$18698$T@1Mj))))
                                                                              (g$syntax-dispatch$16005$T@1Mj
                                                                                g$t$18698$T@1Mj
                                                                                '(any each-any)))))
                                                                          g$t$18687$T@1Mj))))
                                                                    (g$syntax-dispatch$16005$T@1Mj
                                                                      g$t$18687$T@1Mj
                                                                      '(any any
                                                                            any)))))
                                                                g$t$18675$T@1Mj))))
                                                          (g$syntax-dispatch$16005$T@1Mj
                                                            g$t$18675$T@1Mj
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$18666$T@1Mj))))
                                                (g$syntax-dispatch$16005$T@1Mj
                                                  g$t$18666$T@1Mj
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$18651$T@1Mj))))
                                      (g$syntax-dispatch$16005$T@1Mj
                                        g$t$18651$T@1Mj
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$18645$T@1Mj))))
                            (g$syntax-dispatch$16005$T@1Mj
                              g$t$18645$T@1Mj
                              '(any . each-any)))))
                        g$spec$18644$T@1Mj))))
                  (g$add-imports!$18632$T@1Mj
                    (case-lambda
                      ((g$imp$18636$T@1Mj g$h$18637$T@1Mj)
                       ((case-lambda
                          ((g$subst$18638$T@1Mj)
                           (g$for-each$11725$T@1Mj
                             (case-lambda
                               ((g$x$18639$T@1Mj)
                                ((case-lambda
                                   ((g$name$18640$T@1Mj
                                      g$label$18641$T@1Mj)
                                    ((case-lambda
                                       ((g$t$18642$T@1Mj)
                                        (if g$t$18642$T@1Mj
                                          ((case-lambda
                                             ((g$l$18643$T@1Mj)
                                              (if (not (eq? g$l$18643$T@1Mj
                                                            g$label$18641$T@1Mj))
                                                (g$dup-error$18623$T@1Mj
                                                  g$name$18640$T@1Mj)
                                                (void))))
                                           g$t$18642$T@1Mj)
                                          (g$hashtable-set!$12572$T@1Mj
                                            g$h$18637$T@1Mj
                                            g$name$18640$T@1Mj
                                            g$label$18641$T@1Mj))))
                                     (g$hashtable-ref$12571$T@1Mj
                                       g$h$18637$T@1Mj
                                       g$name$18640$T@1Mj
                                       '#f))))
                                 (car g$x$18639$T@1Mj)
                                 (cdr g$x$18639$T@1Mj))))
                             g$subst$18638$T@1Mj)))
                        (g$get-import$18631$T@1Mj
                          g$imp$18636$T@1Mj))))))
          ((letrec ((g$f$18633$T@1Mj
                      (case-lambda
                        ((g$imp*$18634$T@1Mj g$h$18635$T@1Mj)
                         (if (null? g$imp*$18634$T@1Mj)
                           (hashtable-entries g$h$18635$T@1Mj)
                           (begin
                             (g$add-imports!$18632$T@1Mj
                               (car g$imp*$18634$T@1Mj)
                               g$h$18635$T@1Mj)
                             (g$f$18633$T@1Mj
                               (cdr g$imp*$18634$T@1Mj)
                               g$h$18635$T@1Mj)))))))
             g$f$18633$T@1Mj)
           g$imp*$18621$T@1Mj
           (g$make-eq-hashtable$12568$T@1Mj))))))
   (g$make-top-rib$16058$T@1Mj
     g$make-top-rib$19652$T@1Mj
     (case-lambda
       ((g$names$18883$T@1Mj g$labels$18884$T@1Mj)
        ((case-lambda
           ((g$rib$18885$T@1Mj)
            (begin
              (g$vector-for-each$12529$T@1Mj
                (case-lambda
                  ((g$name$18886$T@1Mj g$label$18887$T@1Mj)
                   (begin
                     (if (not (g$symbol?$12467$T@1Mj
                                g$name$18886$T@1Mj))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$18886$T@1Mj)
                       (void))
                     (g$extend-rib/nc!$15469$T@1Mj
                       g$rib$18885$T@1Mj
                       (g$make-stx$15480$T@1Mj
                         g$name$18886$T@1Mj
                         g$top-mark*$15440$T@1Mj
                         '()
                         '())
                       g$label$18887$T@1Mj))))
                g$names$18883$T@1Mj
                g$labels$18884$T@1Mj)
              g$rib$18885$T@1Mj)))
         (g$make-cache-rib$15466$T@1Mj)))))
   (g$make-collector$16059$T@1Mj
     g$make-collector$19653$T@1Mj
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$18888$T@1Mj)
            (case-lambda
              (() g$ls$18888$T@1Mj)
              ((g$x$18889$T@1Mj)
               (set! g$ls$18888$T@1Mj
                 (g$set-cons$15437$T@1Mj
                   g$x$18889$T@1Mj
                   g$ls$18888$T@1Mj))))))
         '()))))
   (g$inv-collector$16060$T@1Mj
     g$inv-collector$19654$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         (g$args$18890$T@1Mj
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$18891$T@1Mj)
          (begin
            (if (not (g$procedure?$12469$T@1Mj g$x$18891$T@1Mj))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$18891$T@1Mj)
              (void))
            g$x$18891$T@1Mj)))))
   (g$vis-collector$16061$T@1Mj
     g$vis-collector$19655$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         (g$args$18892$T@1Mj
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$18893$T@1Mj)
          (begin
            (if (not (g$procedure?$12469$T@1Mj g$x$18893$T@1Mj))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$18893$T@1Mj)
              (void))
            g$x$18893$T@1Mj)))))
   (g$imp-collector$16062$T@1Mj
     g$imp-collector$19656$T@1Mj
     (g$make-parameter$14369$T@1Mj
       (case-lambda
         (g$args$18894$T@1Mj
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$18895$T@1Mj)
          (begin
            (if (not (g$procedure?$12469$T@1Mj g$x$18895$T@1Mj))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$18895$T@1Mj)
              (void))
            g$x$18895$T@1Mj)))))
   (g$chi-library-internal$16063$T@1Mj
     g$chi-library-internal$19657$T@1Mj
     (case-lambda
       ((g$e*$18896$T@1Mj g$rib$18897$T@1Mj g$mix?$18898$T@1Mj)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$16052$T@1Mj
               g$e*$18896$T@1Mj
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$18897$T@1Mj
               g$mix?$18898$T@1Mj
               '#t)))
          (case-lambda
            ((g$e*$18907$T@1Mj
               g$r$18908$T@1Mj
               g$mr$18909$T@1Mj
               g$lex*$18910$T@1Mj
               g$rhs*$18911$T@1Mj
               g$mod**$18912$T@1Mj
               g$_kwd*$18913$T@1Mj
               g$exp*$18914$T@1Mj)
             ((case-lambda
                ((g$exp*$18915$T@1Mj
                   g$_kwd*$18916$T@1Mj
                   g$mod**$18917$T@1Mj
                   g$rhs*$18918$T@1Mj
                   g$lex*$18919$T@1Mj
                   g$mr$18920$T@1Mj
                   g$r$18921$T@1Mj
                   g$e*$18922$T@1Mj)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12475$T@1Mj g$mod**$18917$T@1Mj))
                     g$e*$18922$T@1Mj)
                   g$r$18921$T@1Mj
                   g$mr$18920$T@1Mj
                   (g$reverse$12475$T@1Mj g$lex*$18919$T@1Mj)
                   (g$reverse$12475$T@1Mj g$rhs*$18918$T@1Mj)
                   g$exp*$18915$T@1Mj)))
              g$exp*$18914$T@1Mj
              g$_kwd*$18913$T@1Mj
              g$mod**$18912$T@1Mj
              g$rhs*$18911$T@1Mj
              g$lex*$18910$T@1Mj
              g$mr$18909$T@1Mj
              g$r$18908$T@1Mj
              g$e*$18907$T@1Mj)))))))
   (g$chi-interaction-expr$16064$T@1Mj
     g$chi-interaction-expr$19658$T@1Mj
     (case-lambda
       ((g$e$18923$T@1Mj g$rib$18924$T@1Mj g$r$18925$T@1Mj)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$16052$T@1Mj
               (list g$e$18923$T@1Mj)
               g$r$18925$T@1Mj
               g$r$18925$T@1Mj
               '()
               '()
               '()
               '()
               '()
               g$rib$18924$T@1Mj
               '#t
               '#f)))
          (case-lambda
            ((g$e*$18934$T@1Mj
               g$r$18935$T@1Mj
               g$mr$18936$T@1Mj
               g$lex*$18937$T@1Mj
               g$rhs*$18938$T@1Mj
               g$mod**$18939$T@1Mj
               g$_kwd*$18940$T@1Mj
               g$_exp*$18941$T@1Mj)
             ((case-lambda
                ((g$_exp*$18942$T@1Mj
                   g$_kwd*$18943$T@1Mj
                   g$mod**$18944$T@1Mj
                   g$rhs*$18945$T@1Mj
                   g$lex*$18946$T@1Mj
                   g$mr$18947$T@1Mj
                   g$r$18948$T@1Mj
                   g$e*$18949$T@1Mj)
                 ((case-lambda
                    ((g$e*$18950$T@1Mj)
                     ((case-lambda
                        ((g$e$18951$T@1Mj)
                         (values g$e$18951$T@1Mj g$r$18948$T@1Mj)))
                      (if (null? g$e*$18950$T@1Mj)
                        (g$build-void$15433$T@1Mj)
                        (if (null? (cdr g$e*$18950$T@1Mj))
                          (car g$e*$18950$T@1Mj)
                          (g$build-sequence$15432$T@1Mj
                            '#f
                            g$e*$18950$T@1Mj))))))
                  (g$expand-interaction-rhs*/init*$16030$T@1Mj
                    (g$reverse$12475$T@1Mj g$lex*$18946$T@1Mj)
                    (g$reverse$12475$T@1Mj g$rhs*$18945$T@1Mj)
                    (append
                      (apply
                        append
                        (g$reverse$12475$T@1Mj g$mod**$18944$T@1Mj))
                      g$e*$18949$T@1Mj)
                    g$r$18948$T@1Mj
                    g$mr$18947$T@1Mj))))
              g$_exp*$18941$T@1Mj
              g$_kwd*$18940$T@1Mj
              g$mod**$18939$T@1Mj
              g$rhs*$18938$T@1Mj
              g$lex*$18937$T@1Mj
              g$mr$18936$T@1Mj
              g$r$18935$T@1Mj
              g$e*$18934$T@1Mj)))))))
   (g$library-body-expander$16065$T@1Mj
     g$library-body-expander$19659$T@1Mj
     (case-lambda
       ((g$name$18952$T@1Mj
          g$main-exp*$18953$T@1Mj
          g$imp*$18954$T@1Mj
          g$b*$18955$T@1Mj
          g$mix?$18956$T@1Mj)
        (letrec* ((g$itc$18957$T@1Mj (g$make-collector$16059$T@1Mj)))
          ((case-lambda
             ((g$imp-collector$18962$T@1Mj
                g$top-level-context$18963$T@1Mj
                g$imp-collector$18964$T@1Mj
                g$top-level-context$18965$T@1Mj)
              ((case-lambda
                 ((g$swap$18966$T@1Mj)
                  (dynamic-wind
                    g$swap$18966$T@1Mj
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$16057$T@1Mj
                              g$imp*$18954$T@1Mj)))
                         (case-lambda
                           ((g$subst-names$18969$T@1Mj
                              g$subst-labels$18970$T@1Mj)
                            ((case-lambda
                               ((g$subst-labels$18971$T@1Mj
                                  g$subst-names$18972$T@1Mj)
                                ((case-lambda
                                   ((g$rib$18973$T@1Mj)
                                    (letrec* ((g$wrap$18974$T@1Mj
                                                (case-lambda
                                                  ((g$x$19036$T@1Mj)
                                                   (g$make-stx$15480$T@1Mj
                                                     g$x$19036$T@1Mj
                                                     g$top-mark*$15440$T@1Mj
                                                     (list
                                                       g$rib$18973$T@1Mj)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$18975$T@1Mj
                                            g$main-exp*$18976$T@1Mj
                                            g$rtc$18977$T@1Mj
                                            g$vtc$18978$T@1Mj)
                                          ((case-lambda
                                             ((g$inv-collector$18983$T@1Mj
                                                g$vis-collector$18984$T@1Mj
                                                g$inv-collector$18985$T@1Mj
                                                g$vis-collector$18986$T@1Mj)
                                              ((case-lambda
                                                 ((g$swap$18987$T@1Mj)
                                                  (dynamic-wind
                                                    g$swap$18987$T@1Mj
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$16063$T@1Mj
                                                              g$b*$18975$T@1Mj
                                                              g$rib$18973$T@1Mj
                                                              g$mix?$18956$T@1Mj)))
                                                         (case-lambda
                                                           ((g$init*$18994$T@1Mj
                                                              g$r$18995$T@1Mj
                                                              g$mr$18996$T@1Mj
                                                              g$lex*$18997$T@1Mj
                                                              g$rhs*$18998$T@1Mj
                                                              g$internal-exp*$18999$T@1Mj)
                                                            ((case-lambda
                                                               ((g$internal-exp*$19000$T@1Mj
                                                                  g$rhs*$19001$T@1Mj
                                                                  g$lex*$19002$T@1Mj
                                                                  g$mr$19003$T@1Mj
                                                                  g$r$19004$T@1Mj
                                                                  g$init*$19005$T@1Mj)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$16054$T@1Mj
                                                                       (append
                                                                         g$main-exp*$18976$T@1Mj
                                                                         g$internal-exp*$19000$T@1Mj))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$19008$T@1Mj
                                                                       g$exp-id*$19009$T@1Mj)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$19010$T@1Mj
                                                                           g$exp-name*$19011$T@1Mj)
                                                                         (begin
                                                                           (g$seal-rib!$15471$T@1Mj
                                                                             g$rib$18973$T@1Mj)
                                                                           ((case-lambda
                                                                              ((g$init*$19012$T@1Mj)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$19013$T@1Mj)
                                                                                   (begin
                                                                                     (g$unseal-rib!$15472$T@1Mj
                                                                                       g$rib$18973$T@1Mj)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$19014$T@1Mj
                                                                                           g$export-subst$19015$T@1Mj)
                                                                                         (letrec* ((g$errstr$19016$T@1Mj
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$16113$T@1Mj
                                                                                                  g$lex*$19002$T@1Mj
                                                                                                  g$loc*$19014$T@1Mj
                                                                                                  g$r$19004$T@1Mj)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$19020$T@1Mj
                                                                                                  g$global*$19021$T@1Mj
                                                                                                  g$macro*$19022$T@1Mj)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$19023$T@1Mj
                                                                                                      g$global*$19024$T@1Mj
                                                                                                      g$export-env$19025$T@1Mj)
                                                                                                    (begin
                                                                                                      (g$for-each$11725$T@1Mj
                                                                                                        (case-lambda
                                                                                                          ((g$s$19026$T@1Mj)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$19027$T@1Mj
                                                                                                                 g$label$19028$T@1Mj)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$19029$T@1Mj)
                                                                                                                   (if g$p$19029$T@1Mj
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$19030$T@1Mj)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$19031$T@1Mj)
                                                                                                                             (if (eq? g$type$19031$T@1Mj
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$16124$T@1Mj
                                                                                                                                 'export
                                                                                                                                 g$errstr$19016$T@1Mj
                                                                                                                                 g$name$19027$T@1Mj)
                                                                                                                               (void))))
                                                                                                                          (car g$b$19030$T@1Mj))))
                                                                                                                      (cdr g$p$19029$T@1Mj))
                                                                                                                     (void))))
                                                                                                                (g$assq$11712$T@1Mj
                                                                                                                  g$label$19028$T@1Mj
                                                                                                                  g$export-env$19025$T@1Mj))))
                                                                                                            (car g$s$19026$T@1Mj)
                                                                                                            (cdr g$s$19026$T@1Mj))))
                                                                                                        g$export-subst$19015$T@1Mj)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$19032$T@1Mj
                                                                                                            g$invoke-definitions$19033$T@1Mj)
                                                                                                          (values
                                                                                                            (g$itc$18957$T@1Mj)
                                                                                                            (g$rtc$18977$T@1Mj)
                                                                                                            (g$vtc$18978$T@1Mj)
                                                                                                            (g$build-sequence$15432$T@1Mj
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$19033$T@1Mj
                                                                                                                (list
                                                                                                                  g$invoke-body$19032$T@1Mj)))
                                                                                                            g$macro*$19023$T@1Mj
                                                                                                            g$export-subst$19015$T@1Mj
                                                                                                            g$export-env$19025$T@1Mj)))
                                                                                                       (g$build-library-letrec*$15436$T@1Mj
                                                                                                         '#f
                                                                                                         g$name$18952$T@1Mj
                                                                                                         g$lex*$19002$T@1Mj
                                                                                                         g$loc*$19014$T@1Mj
                                                                                                         g$rhs*$19013$T@1Mj
                                                                                                         (if (null?
                                                                                                               g$init*$19012$T@1Mj)
                                                                                                           (g$build-void$15433$T@1Mj)
                                                                                                           (g$build-sequence$15432$T@1Mj
                                                                                                             '#f
                                                                                                             g$init*$19012$T@1Mj)))
                                                                                                       (g$map$11724$T@1Mj
                                                                                                         g$build-global-define$15428$T@1Mj
                                                                                                         (g$map$11724$T@1Mj
                                                                                                           cdr
                                                                                                           g$global*$19024$T@1Mj))))))
                                                                                                 g$macro*$19022$T@1Mj
                                                                                                 g$global*$19021$T@1Mj
                                                                                                 g$export-env$19020$T@1Mj)))))))
                                                                                      (g$map$11724$T@1Mj
                                                                                        g$gen-global$15443$T@1Mj
                                                                                        g$lex*$19002$T@1Mj)
                                                                                      (g$make-export-subst$16112$T@1Mj
                                                                                        g$exp-name*$19011$T@1Mj
                                                                                        g$exp-id*$19010$T@1Mj)))))
                                                                                (g$chi-rhs*$16031$T@1Mj
                                                                                  g$rhs*$19001$T@1Mj
                                                                                  g$r$19004$T@1Mj
                                                                                  g$mr$19003$T@1Mj))))
                                                                            (g$chi-expr*$16021$T@1Mj
                                                                              g$init*$19005$T@1Mj
                                                                              g$r$19004$T@1Mj
                                                                              g$mr$19003$T@1Mj)))))
                                                                      g$exp-id*$19009$T@1Mj
                                                                      g$exp-name*$19008$T@1Mj))))))
                                                             g$internal-exp*$18999$T@1Mj
                                                             g$rhs*$18998$T@1Mj
                                                             g$lex*$18997$T@1Mj
                                                             g$mr$18996$T@1Mj
                                                             g$r$18995$T@1Mj
                                                             g$init*$18994$T@1Mj))))))
                                                    g$swap$18987$T@1Mj)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$19034$T@1Mj)
                                                        (begin
                                                          (g$inv-collector$18983$T@1Mj
                                                            g$inv-collector$18985$T@1Mj)
                                                          (set! g$inv-collector$18985$T@1Mj
                                                            g$t$19034$T@1Mj))))
                                                     (g$inv-collector$18983$T@1Mj))
                                                    ((case-lambda
                                                       ((g$t$19035$T@1Mj)
                                                        (begin
                                                          (g$vis-collector$18984$T@1Mj
                                                            g$vis-collector$18986$T@1Mj)
                                                          (set! g$vis-collector$18986$T@1Mj
                                                            g$t$19035$T@1Mj))))
                                                     (g$vis-collector$18984$T@1Mj))))))))
                                           g$inv-collector$16060$T@1Mj
                                           g$vis-collector$16061$T@1Mj
                                           g$rtc$18977$T@1Mj
                                           g$vtc$18978$T@1Mj)))
                                       (g$map$11724$T@1Mj
                                         g$wrap$18974$T@1Mj
                                         g$b*$18955$T@1Mj)
                                       (g$map$11724$T@1Mj
                                         g$wrap$18974$T@1Mj
                                         g$main-exp*$18953$T@1Mj)
                                       (g$make-collector$16059$T@1Mj)
                                       (g$make-collector$16059$T@1Mj)))))
                                 (g$make-top-rib$16058$T@1Mj
                                   g$subst-names$18972$T@1Mj
                                   g$subst-labels$18971$T@1Mj))))
                             g$subst-labels$18970$T@1Mj
                             g$subst-names$18969$T@1Mj))))))
                    g$swap$18966$T@1Mj)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$19037$T@1Mj)
                        (begin
                          (g$imp-collector$18962$T@1Mj
                            g$imp-collector$18964$T@1Mj)
                          (set! g$imp-collector$18964$T@1Mj
                            g$t$19037$T@1Mj))))
                     (g$imp-collector$18962$T@1Mj))
                    ((case-lambda
                       ((g$t$19038$T@1Mj)
                        (begin
                          (g$top-level-context$18963$T@1Mj
                            g$top-level-context$18965$T@1Mj)
                          (set! g$top-level-context$18965$T@1Mj
                            g$t$19038$T@1Mj))))
                     (g$top-level-context$18963$T@1Mj))))))))
           g$imp-collector$16062$T@1Mj
           g$top-level-context$16132$T@1Mj
           g$itc$18957$T@1Mj
           '#f)))))
   (g$core-library-expander$16066$T@1Mj
     g$core-library-expander$19660$T@1Mj
     (case-lambda
       ((g$e$19039$T@1Mj g$verify-name$19040$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$parse-library$16056$T@1Mj g$e$19039$T@1Mj)))
          (case-lambda
            ((g$name*$19045$T@1Mj
               g$exp*$19046$T@1Mj
               g$imp*$19047$T@1Mj
               g$b*$19048$T@1Mj)
             ((case-lambda
                ((g$b*$19049$T@1Mj
                   g$imp*$19050$T@1Mj
                   g$exp*$19051$T@1Mj
                   g$name*$19052$T@1Mj)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$16055$T@1Mj
                        g$name*$19052$T@1Mj)))
                   (case-lambda
                     ((g$name$19055$T@1Mj g$ver$19056$T@1Mj)
                      ((case-lambda
                         ((g$ver$19057$T@1Mj g$name$19058$T@1Mj)
                          (begin
                            (g$verify-name$19040$T@1Mj
                              g$name$19058$T@1Mj)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$16065$T@1Mj
                                   g$name$19058$T@1Mj
                                   g$exp*$19051$T@1Mj
                                   g$imp*$19050$T@1Mj
                                   g$b*$19049$T@1Mj
                                   '#f)))
                              (case-lambda
                                ((g$imp*$19066$T@1Mj
                                   g$invoke-req*$19067$T@1Mj
                                   g$visit-req*$19068$T@1Mj
                                   g$invoke-code$19069$T@1Mj
                                   g$visit-code$19070$T@1Mj
                                   g$export-subst$19071$T@1Mj
                                   g$export-env$19072$T@1Mj)
                                 ((case-lambda
                                    ((g$export-env$19073$T@1Mj
                                       g$export-subst$19074$T@1Mj
                                       g$visit-code$19075$T@1Mj
                                       g$invoke-code$19076$T@1Mj
                                       g$visit-req*$19077$T@1Mj
                                       g$invoke-req*$19078$T@1Mj
                                       g$imp*$19079$T@1Mj)
                                     (values
                                       g$name$19058$T@1Mj
                                       g$ver$19057$T@1Mj
                                       g$imp*$19079$T@1Mj
                                       g$invoke-req*$19078$T@1Mj
                                       g$visit-req*$19077$T@1Mj
                                       g$invoke-code$19076$T@1Mj
                                       g$visit-code$19075$T@1Mj
                                       g$export-subst$19074$T@1Mj
                                       g$export-env$19073$T@1Mj)))
                                  g$export-env$19072$T@1Mj
                                  g$export-subst$19071$T@1Mj
                                  g$visit-code$19070$T@1Mj
                                  g$invoke-code$19069$T@1Mj
                                  g$visit-req*$19068$T@1Mj
                                  g$invoke-req*$19067$T@1Mj
                                  g$imp*$19066$T@1Mj)))))))
                       g$ver$19056$T@1Mj
                       g$name$19055$T@1Mj))))))
              g$b*$19048$T@1Mj
              g$imp*$19047$T@1Mj
              g$exp*$19046$T@1Mj
              g$name*$19045$T@1Mj)))))))
   (g$parse-top-level-program$16067$T@1Mj
     g$parse-top-level-program$19661$T@1Mj
     (case-lambda
       ((g$e*$19080$T@1Mj)
        ((case-lambda
           ((g$t$19081$T@1Mj)
            ((case-lambda
               ((g$ls/false$19082$T@1Mj)
                (if (if g$ls/false$19082$T@1Mj
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$19083$T@1Mj
                               g$imp*$19084$T@1Mj
                               g$b*$19085$T@1Mj)
                             (eq? (g$syntax->datum$16127$T@1Mj
                                    g$import$19083$T@1Mj)
                                  'import)))
                          g$ls/false$19082$T@1Mj))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$19086$T@1Mj
                         g$imp*$19087$T@1Mj
                         g$b*$19088$T@1Mj)
                       (values g$imp*$19087$T@1Mj g$b*$19088$T@1Mj)))
                    g$ls/false$19082$T@1Mj)
                  ((case-lambda
                     ((g$t$19089$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$19090$T@1Mj)
                          (if (if g$ls/false$19090$T@1Mj
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$19091$T@1Mj
                                         g$x$19092$T@1Mj
                                         g$y$19093$T@1Mj)
                                       (eq? (g$syntax->datum$16127$T@1Mj
                                              g$import$19091$T@1Mj)
                                            'import)))
                                    g$ls/false$19090$T@1Mj))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$19094$T@1Mj
                                   g$x$19095$T@1Mj
                                   g$y$19096$T@1Mj)
                                 (g$syntax-violation$16124$T@1Mj
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$15504$T@1Mj
                                     g$e*$19080$T@1Mj))))
                              g$ls/false$19090$T@1Mj)
                            ((case-lambda
                               ((g$t$19097$T@1Mj)
                                ((case-lambda
                                   ((g$ls/false$19098$T@1Mj)
                                    (if g$ls/false$19098$T@1Mj
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$19098$T@1Mj)
                                      (g$syntax-violation$16124$T@1Mj
                                        '#f
                                        '"invalid syntax"
                                        g$t$19097$T@1Mj))))
                                 (g$syntax-dispatch$16005$T@1Mj
                                   g$t$19097$T@1Mj
                                   '_))))
                             g$t$19089$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$19089$T@1Mj
                         '((any . any) . any)))))
                   g$t$19081$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$19081$T@1Mj
               '((any . each-any) . each-any)))))
         g$e*$19080$T@1Mj))))
   (g$top-level-expander$16068$T@1Mj
     g$top-level-expander$19662$T@1Mj
     (case-lambda
       ((g$e*$19099$T@1Mj)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$16067$T@1Mj g$e*$19099$T@1Mj)))
          (case-lambda
            ((g$imp*$19102$T@1Mj g$b*$19103$T@1Mj)
             ((case-lambda
                ((g$b*$19104$T@1Mj g$imp*$19105$T@1Mj)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$16065$T@1Mj
                        '()
                        '()
                        g$imp*$19105$T@1Mj
                        g$b*$19104$T@1Mj
                        '#t)))
                   (case-lambda
                     ((g$imp*$19113$T@1Mj
                        g$invoke-req*$19114$T@1Mj
                        g$visit-req*$19115$T@1Mj
                        g$invoke-code$19116$T@1Mj
                        g$visit-code$19117$T@1Mj
                        g$export-subst$19118$T@1Mj
                        g$export-env$19119$T@1Mj)
                      ((case-lambda
                         ((g$export-env$19120$T@1Mj
                            g$export-subst$19121$T@1Mj
                            g$visit-code$19122$T@1Mj
                            g$invoke-code$19123$T@1Mj
                            g$visit-req*$19124$T@1Mj
                            g$invoke-req*$19125$T@1Mj
                            g$imp*$19126$T@1Mj)
                          (values
                            g$invoke-req*$19125$T@1Mj
                            g$invoke-code$19123$T@1Mj)))
                       g$export-env$19119$T@1Mj
                       g$export-subst$19118$T@1Mj
                       g$visit-code$19117$T@1Mj
                       g$invoke-code$19116$T@1Mj
                       g$visit-req*$19115$T@1Mj
                       g$invoke-req*$19114$T@1Mj
                       g$imp*$19113$T@1Mj))))))
              g$b*$19103$T@1Mj
              g$imp*$19102$T@1Mj)))))))
   (g$8054$16069$T@1Mj
     g$8054$19663$T@1Mj
     (make-record-type-descriptor
       'env
       '#f
       'g$8057$T@1Mj
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8056$16070$T@1Mj g$8056$19664$T@1Mj '#f)
   (g$8055$16071$T@1Mj
     g$8055$19665$T@1Mj
     (make-record-constructor-descriptor
       g$8054$16069$T@1Mj
       '#f
       g$8056$16070$T@1Mj))
   (g$env?$16074$T@1Mj
     g$env?$19666$T@1Mj
     (record-predicate g$8054$16069$T@1Mj))
   (g$make-env$16075$T@1Mj
     g$make-env$19667$T@1Mj
     (record-constructor g$8055$16071$T@1Mj))
   (g$env-names$16076$T@1Mj
     g$env-names$19668$T@1Mj
     (record-accessor g$8054$16069$T@1Mj '0))
   (g$env-labels$16077$T@1Mj
     g$env-labels$19669$T@1Mj
     (record-accessor g$8054$16069$T@1Mj '1))
   (g$env-itc$16078$T@1Mj
     g$env-itc$19670$T@1Mj
     (record-accessor g$8054$16069$T@1Mj '2))
   (g$set-env-names!$16079$T@1Mj
     g$set-env-names!$19671$T@1Mj
     (record-mutator g$8054$16069$T@1Mj '0))
   (g$set-env-labels!$16080$T@1Mj
     g$set-env-labels!$19672$T@1Mj
     (record-mutator g$8054$16069$T@1Mj '1))
   (g$set-env-itc!$16081$T@1Mj
     g$set-env-itc!$19673$T@1Mj
     (record-mutator g$8054$16069$T@1Mj '2))
   (g$rp$16082$T@1Mj
     g$rp$19674$T@1Mj
     (make-record-printer
       'env
       (case-lambda
         ((g$x$19127$T@1Mj g$p$19128$T@1Mj g$wr$19129$T@1Mj)
          (display '"#<environment>" g$p$19128$T@1Mj)))))
   (g$8071$16083$T@1Mj
     g$8071$19675$T@1Mj
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8074$T@1Mj
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8073$16084$T@1Mj g$8073$19676$T@1Mj '#f)
   (g$8072$16085$T@1Mj
     g$8072$19677$T@1Mj
     (make-record-constructor-descriptor
       g$8071$16083$T@1Mj
       '#f
       g$8073$16084$T@1Mj))
   (g$interaction-env?$16088$T@1Mj
     g$interaction-env?$19678$T@1Mj
     (record-predicate g$8071$16083$T@1Mj))
   (g$make-interaction-env$16089$T@1Mj
     g$make-interaction-env$19679$T@1Mj
     (record-constructor g$8072$16085$T@1Mj))
   (g$interaction-env-rib$16090$T@1Mj
     g$interaction-env-rib$19680$T@1Mj
     (record-accessor g$8071$16083$T@1Mj '0))
   (g$interaction-env-r$16091$T@1Mj
     g$interaction-env-r$19681$T@1Mj
     (record-accessor g$8071$16083$T@1Mj '1))
   (g$interaction-env-locs$16092$T@1Mj
     g$interaction-env-locs$19682$T@1Mj
     (record-accessor g$8071$16083$T@1Mj '2))
   (g$set-interaction-env-rib!$16093$T@1Mj
     g$set-interaction-env-rib!$19683$T@1Mj
     (record-mutator g$8071$16083$T@1Mj '0))
   (g$set-interaction-env-r!$16094$T@1Mj
     g$set-interaction-env-r!$19684$T@1Mj
     (record-mutator g$8071$16083$T@1Mj '1))
   (g$set-interaction-env-locs!$16095$T@1Mj
     g$set-interaction-env-locs!$19685$T@1Mj
     (record-mutator g$8071$16083$T@1Mj '2))
   (g$rp$16096$T@1Mj
     g$rp$19686$T@1Mj
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$19130$T@1Mj g$p$19131$T@1Mj g$wr$19132$T@1Mj)
          (display '"#<environment>" g$p$19131$T@1Mj)))))
   (g$interaction-environment-symbols$16097$T@1Mj
     g$interaction-environment-symbols$19687$T@1Mj
     (case-lambda
       (()
        (g$environment-symbols$16101$T@1Mj
          (g$interaction-environment$16131$T@1Mj)))))
   (g$environment-bindings$16098$T@1Mj
     g$environment-bindings$19688$T@1Mj
     (case-lambda
       ((g$e$19133$T@1Mj)
        (vector->list
          (g$vector-map$12528$T@1Mj
            (case-lambda
              ((g$name$19134$T@1Mj g$label$19135$T@1Mj)
               (g$parse-binding$16099$T@1Mj
                 (cons
                   g$name$19134$T@1Mj
                   (g$imported-label->binding$15212$T@1Mj
                     g$label$19135$T@1Mj)))))
            (g$env-names$16076$T@1Mj g$e$19133$T@1Mj)
            (g$env-labels$16077$T@1Mj g$e$19133$T@1Mj))))))
   (g$parse-binding$16099$T@1Mj
     g$parse-binding$19689$T@1Mj
     (case-lambda
       ((g$b$19136$T@1Mj)
        (cons
          (car g$b$19136$T@1Mj)
          ((case-lambda
             ((g$t$19137$T@1Mj)
              (if (g$memv$11717$T@1Mj
                    g$t$19137$T@1Mj
                    '(core-prim global))
                'procedure
                (if (g$memv$11717$T@1Mj
                      g$t$19137$T@1Mj
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$19137$T@1Mj '$core-rtd)
                    'record
                    (if (eq? (car g$b$19136$T@1Mj)
                             (g$cadr$12477$T@1Mj g$b$19136$T@1Mj))
                      'syntax
                      'unknown))))))
           (g$cadr$12477$T@1Mj g$b$19136$T@1Mj))))))
   (g$environment?$16100$T@1Mj
     g$environment?$19690$T@1Mj
     (case-lambda
       ((g$x$19138$T@1Mj)
        ((case-lambda
           ((g$t$19139$T@1Mj)
            (if g$t$19139$T@1Mj
              g$t$19139$T@1Mj
              (begin
                '#f
                (g$interaction-env?$16088$T@1Mj g$x$19138$T@1Mj)))))
         (g$env?$16074$T@1Mj g$x$19138$T@1Mj)))))
   (g$environment-symbols$16101$T@1Mj
     g$environment-symbols$19691$T@1Mj
     (case-lambda
       ((g$x$19140$T@1Mj)
        (if (g$env?$16074$T@1Mj g$x$19140$T@1Mj)
          (vector->list (g$env-names$16076$T@1Mj g$x$19140$T@1Mj))
          (if (g$interaction-env?$16088$T@1Mj g$x$19140$T@1Mj)
            (g$map$11724$T@1Mj
              values
              (g$rib-sym*$15455$T@1Mj
                (g$interaction-env-rib$16090$T@1Mj g$x$19140$T@1Mj)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$19140$T@1Mj))))))
   (g$environment$16102$T@1Mj
     g$environment$19692$T@1Mj
     (case-lambda
       (g$imp*$19141$T@1Mj
        ((case-lambda
           ((g$itc$19142$T@1Mj)
            ((case-lambda
               ((g$imp-collector$19145$T@1Mj
                  g$imp-collector$19146$T@1Mj)
                ((case-lambda
                   ((g$swap$19147$T@1Mj)
                    (dynamic-wind
                      g$swap$19147$T@1Mj
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$16057$T@1Mj
                                g$imp*$19141$T@1Mj)))
                           (case-lambda
                             ((g$subst-names$19150$T@1Mj
                                g$subst-labels$19151$T@1Mj)
                              ((case-lambda
                                 ((g$subst-labels$19152$T@1Mj
                                    g$subst-names$19153$T@1Mj)
                                  (g$make-env$16075$T@1Mj
                                    g$subst-names$19153$T@1Mj
                                    g$subst-labels$19152$T@1Mj
                                    g$itc$19142$T@1Mj)))
                               g$subst-labels$19151$T@1Mj
                               g$subst-names$19150$T@1Mj))))))
                      g$swap$19147$T@1Mj)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$19154$T@1Mj)
                        (begin
                          (g$imp-collector$19145$T@1Mj
                            g$imp-collector$19146$T@1Mj)
                          (set! g$imp-collector$19146$T@1Mj
                            g$t$19154$T@1Mj))))
                     (g$imp-collector$19145$T@1Mj)))))))
             g$imp-collector$16062$T@1Mj
             g$itc$19142$T@1Mj)))
         (g$make-collector$16059$T@1Mj)))))
   (g$null-environment$16103$T@1Mj
     g$null-environment$19693$T@1Mj
     (case-lambda
       ((g$n$19155$T@1Mj)
        (begin
          (if (not (eqv? g$n$19155$T@1Mj '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$19155$T@1Mj)
            (void))
          (g$environment$16102$T@1Mj '(psyntax null-environment-5))))))
   (g$scheme-report-environment$16104$T@1Mj
     g$scheme-report-environment$19694$T@1Mj
     (case-lambda
       ((g$n$19156$T@1Mj)
        (begin
          (if (not (eqv? g$n$19156$T@1Mj '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$19156$T@1Mj)
            (void))
          (g$environment$16102$T@1Mj
            '(psyntax scheme-report-environment-5))))))
   (g$expand$16105$T@1Mj
     g$expand$19695$T@1Mj
     (case-lambda
       ((g$x$19157$T@1Mj g$env$19158$T@1Mj)
        (if (g$env?$16074$T@1Mj g$env$19158$T@1Mj)
          ((case-lambda
             ((g$rib$19159$T@1Mj)
              ((case-lambda
                 ((g$x$19160$T@1Mj
                    g$itc$19161$T@1Mj
                    g$rtc$19162$T@1Mj
                    g$vtc$19163$T@1Mj)
                  ((case-lambda
                     ((g$x$19164$T@1Mj)
                      (begin
                        (g$seal-rib!$15471$T@1Mj g$rib$19159$T@1Mj)
                        (values g$x$19164$T@1Mj (g$rtc$19162$T@1Mj)))))
                   ((case-lambda
                      ((g$top-level-context$19173$T@1Mj
                         g$inv-collector$19174$T@1Mj
                         g$vis-collector$19175$T@1Mj
                         g$imp-collector$19176$T@1Mj
                         g$top-level-context$19177$T@1Mj
                         g$inv-collector$19178$T@1Mj
                         g$vis-collector$19179$T@1Mj
                         g$imp-collector$19180$T@1Mj)
                       ((case-lambda
                          ((g$swap$19181$T@1Mj)
                           (dynamic-wind
                             g$swap$19181$T@1Mj
                             (case-lambda
                               (()
                                (g$chi-expr$16023$T@1Mj
                                  g$x$19160$T@1Mj
                                  '()
                                  '())))
                             g$swap$19181$T@1Mj)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$19182$T@1Mj)
                                 (begin
                                   (g$top-level-context$19173$T@1Mj
                                     g$top-level-context$19177$T@1Mj)
                                   (set! g$top-level-context$19177$T@1Mj
                                     g$t$19182$T@1Mj))))
                              (g$top-level-context$19173$T@1Mj))
                             ((case-lambda
                                ((g$t$19183$T@1Mj)
                                 (begin
                                   (g$inv-collector$19174$T@1Mj
                                     g$inv-collector$19178$T@1Mj)
                                   (set! g$inv-collector$19178$T@1Mj
                                     g$t$19183$T@1Mj))))
                              (g$inv-collector$19174$T@1Mj))
                             ((case-lambda
                                ((g$t$19184$T@1Mj)
                                 (begin
                                   (g$vis-collector$19175$T@1Mj
                                     g$vis-collector$19179$T@1Mj)
                                   (set! g$vis-collector$19179$T@1Mj
                                     g$t$19184$T@1Mj))))
                              (g$vis-collector$19175$T@1Mj))
                             ((case-lambda
                                ((g$t$19185$T@1Mj)
                                 (begin
                                   (g$imp-collector$19176$T@1Mj
                                     g$imp-collector$19180$T@1Mj)
                                   (set! g$imp-collector$19180$T@1Mj
                                     g$t$19185$T@1Mj))))
                              (g$imp-collector$19176$T@1Mj))))))))
                    g$top-level-context$16132$T@1Mj
                    g$inv-collector$16060$T@1Mj
                    g$vis-collector$16061$T@1Mj
                    g$imp-collector$16062$T@1Mj
                    '#f
                    g$rtc$19162$T@1Mj
                    g$vtc$19163$T@1Mj
                    g$itc$19161$T@1Mj))))
               (g$make-stx$15480$T@1Mj
                 g$x$19157$T@1Mj
                 g$top-mark*$15440$T@1Mj
                 (list g$rib$19159$T@1Mj)
                 '())
               (g$env-itc$16078$T@1Mj g$env$19158$T@1Mj)
               (g$make-collector$16059$T@1Mj)
               (g$make-collector$16059$T@1Mj))))
           (g$make-top-rib$16058$T@1Mj
             (g$env-names$16076$T@1Mj g$env$19158$T@1Mj)
             (g$env-labels$16077$T@1Mj g$env$19158$T@1Mj)))
          (if (g$interaction-env?$16088$T@1Mj g$env$19158$T@1Mj)
            ((case-lambda
               ((g$rib$19186$T@1Mj g$r$19187$T@1Mj g$rtc$19188$T@1Mj)
                ((case-lambda
                   ((g$x$19189$T@1Mj)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$19200$T@1Mj
                               g$inv-collector$19201$T@1Mj
                               g$vis-collector$19202$T@1Mj
                               g$imp-collector$19203$T@1Mj
                               g$top-level-context$19204$T@1Mj
                               g$inv-collector$19205$T@1Mj
                               g$vis-collector$19206$T@1Mj
                               g$imp-collector$19207$T@1Mj)
                             ((case-lambda
                                ((g$swap$19208$T@1Mj)
                                 (dynamic-wind
                                   g$swap$19208$T@1Mj
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$16064$T@1Mj
                                        g$x$19189$T@1Mj
                                        g$rib$19186$T@1Mj
                                        g$r$19187$T@1Mj)))
                                   g$swap$19208$T@1Mj)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$19209$T@1Mj)
                                       (begin
                                         (g$top-level-context$19200$T@1Mj
                                           g$top-level-context$19204$T@1Mj)
                                         (set! g$top-level-context$19204$T@1Mj
                                           g$t$19209$T@1Mj))))
                                    (g$top-level-context$19200$T@1Mj))
                                   ((case-lambda
                                      ((g$t$19210$T@1Mj)
                                       (begin
                                         (g$inv-collector$19201$T@1Mj
                                           g$inv-collector$19205$T@1Mj)
                                         (set! g$inv-collector$19205$T@1Mj
                                           g$t$19210$T@1Mj))))
                                    (g$inv-collector$19201$T@1Mj))
                                   ((case-lambda
                                      ((g$t$19211$T@1Mj)
                                       (begin
                                         (g$vis-collector$19202$T@1Mj
                                           g$vis-collector$19206$T@1Mj)
                                         (set! g$vis-collector$19206$T@1Mj
                                           g$t$19211$T@1Mj))))
                                    (g$vis-collector$19202$T@1Mj))
                                   ((case-lambda
                                      ((g$t$19212$T@1Mj)
                                       (begin
                                         (g$imp-collector$19203$T@1Mj
                                           g$imp-collector$19207$T@1Mj)
                                         (set! g$imp-collector$19207$T@1Mj
                                           g$t$19212$T@1Mj))))
                                    (g$imp-collector$19203$T@1Mj))))))))
                          g$top-level-context$16132$T@1Mj
                          g$inv-collector$16060$T@1Mj
                          g$vis-collector$16061$T@1Mj
                          g$imp-collector$16062$T@1Mj
                          g$env$19158$T@1Mj
                          g$rtc$19188$T@1Mj
                          (g$make-collector$16059$T@1Mj)
                          (g$make-collector$16059$T@1Mj))))
                      (case-lambda
                        ((g$e$19213$T@1Mj g$r^$19214$T@1Mj)
                         ((case-lambda
                            ((g$r^$19215$T@1Mj g$e$19216$T@1Mj)
                             (begin
                               (g$set-interaction-env-r!$16094$T@1Mj
                                 g$env$19158$T@1Mj
                                 g$r^$19215$T@1Mj)
                               (values
                                 g$e$19216$T@1Mj
                                 (g$rtc$19188$T@1Mj)))))
                          g$r^$19214$T@1Mj
                          g$e$19213$T@1Mj))))))
                 (g$make-stx$15480$T@1Mj
                   g$x$19157$T@1Mj
                   g$top-mark*$15440$T@1Mj
                   (list g$rib$19186$T@1Mj)
                   '()))))
             (g$interaction-env-rib$16090$T@1Mj g$env$19158$T@1Mj)
             (g$interaction-env-r$16091$T@1Mj g$env$19158$T@1Mj)
             (g$make-collector$16059$T@1Mj))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$19158$T@1Mj))))))
   (g$eval$16106$T@1Mj
     g$eval$19696$T@1Mj
     (case-lambda
       ((g$x$19217$T@1Mj g$env$19218$T@1Mj)
        (begin
          (if (not (g$environment?$16100$T@1Mj g$env$19218$T@1Mj))
            (error 'eval '"not an environment" g$env$19218$T@1Mj)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$16105$T@1Mj
                 g$x$19217$T@1Mj
                 g$env$19218$T@1Mj)))
            (case-lambda
              ((g$x$19221$T@1Mj g$invoke-req*$19222$T@1Mj)
               ((case-lambda
                  ((g$invoke-req*$19223$T@1Mj g$x$19224$T@1Mj)
                   (begin
                     (g$for-each$11725$T@1Mj
                       g$invoke-library$15213$T@1Mj
                       g$invoke-req*$19223$T@1Mj)
                     (eval-core
                       (g$expanded->core$14946$T@1Mj
                         g$x$19224$T@1Mj)))))
                g$invoke-req*$19222$T@1Mj
                g$x$19221$T@1Mj))))))))
   (g$expand->core$16107$T@1Mj
     g$expand->core$19697$T@1Mj
     (case-lambda
       ((g$x$19225$T@1Mj g$env$19226$T@1Mj)
        (begin
          (if (not (g$environment?$16100$T@1Mj g$env$19226$T@1Mj))
            (error 'eval '"not an environment" g$env$19226$T@1Mj)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$16105$T@1Mj
                 g$x$19225$T@1Mj
                 g$env$19226$T@1Mj)))
            (case-lambda
              ((g$x$19229$T@1Mj g$invoke-req*$19230$T@1Mj)
               ((case-lambda
                  ((g$invoke-req*$19231$T@1Mj g$x$19232$T@1Mj)
                   (begin
                     (g$for-each$11725$T@1Mj
                       g$invoke-library$15213$T@1Mj
                       g$invoke-req*$19231$T@1Mj)
                     (g$expanded->core$14946$T@1Mj g$x$19232$T@1Mj))))
                g$invoke-req*$19230$T@1Mj
                g$x$19229$T@1Mj))))))))
   (g$library-expander$16108$T@1Mj
     g$library-expander$19698$T@1Mj
     (case-lambda
       ((g$x$19233$T@1Mj
          g$filename$19234$T@1Mj
          g$verify-name$19235$T@1Mj)
        (letrec* ((g$build-visit-code$19236$T@1Mj
                    (case-lambda
                      ((g$macro*$19279$T@1Mj)
                       (if (null? g$macro*$19279$T@1Mj)
                         (g$build-void$15433$T@1Mj)
                         (g$build-sequence$15432$T@1Mj
                           '#f
                           (g$map$11724$T@1Mj
                             (case-lambda
                               ((g$x$19280$T@1Mj)
                                ((case-lambda
                                   ((g$loc$19281$T@1Mj
                                      g$src$19282$T@1Mj)
                                    (list
                                      'set!
                                      g$loc$19281$T@1Mj
                                      g$src$19282$T@1Mj)))
                                 (car g$x$19280$T@1Mj)
                                 (g$cddr$12479$T@1Mj g$x$19280$T@1Mj))))
                             g$macro*$19279$T@1Mj))))))
                  (g$visit!$19237$T@1Mj
                    (case-lambda
                      ((g$macro*$19275$T@1Mj)
                       (g$for-each$11725$T@1Mj
                         (case-lambda
                           ((g$x$19276$T@1Mj)
                            ((case-lambda
                               ((g$loc$19277$T@1Mj g$proc$19278$T@1Mj)
                                (set-symbol-value!
                                  g$loc$19277$T@1Mj
                                  g$proc$19278$T@1Mj)))
                             (car g$x$19276$T@1Mj)
                             (g$cadr$12477$T@1Mj g$x$19276$T@1Mj))))
                         g$macro*$19275$T@1Mj)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$16066$T@1Mj
                 g$x$19233$T@1Mj
                 g$verify-name$19235$T@1Mj)))
            (case-lambda
              ((g$name$19247$T@1Mj
                 g$ver$19248$T@1Mj
                 g$imp*$19249$T@1Mj
                 g$inv*$19250$T@1Mj
                 g$vis*$19251$T@1Mj
                 g$invoke-code$19252$T@1Mj
                 g$macro*$19253$T@1Mj
                 g$export-subst$19254$T@1Mj
                 g$export-env$19255$T@1Mj)
               ((case-lambda
                  ((g$export-env$19256$T@1Mj
                     g$export-subst$19257$T@1Mj
                     g$macro*$19258$T@1Mj
                     g$invoke-code$19259$T@1Mj
                     g$vis*$19260$T@1Mj
                     g$inv*$19261$T@1Mj
                     g$imp*$19262$T@1Mj
                     g$ver$19263$T@1Mj
                     g$name$19264$T@1Mj)
                   ((case-lambda
                      ((g$id$19265$T@1Mj
                         g$name$19266$T@1Mj
                         g$ver$19267$T@1Mj
                         g$imp*$19268$T@1Mj
                         g$vis*$19269$T@1Mj
                         g$inv*$19270$T@1Mj
                         g$visit-proc$19271$T@1Mj
                         g$invoke-proc$19272$T@1Mj
                         g$visit-code$19273$T@1Mj
                         g$invoke-code$19274$T@1Mj)
                       (begin
                         (g$install-library$15211$T@1Mj
                           g$id$19265$T@1Mj
                           g$name$19266$T@1Mj
                           g$ver$19267$T@1Mj
                           g$imp*$19268$T@1Mj
                           g$vis*$19269$T@1Mj
                           g$inv*$19270$T@1Mj
                           g$export-subst$19257$T@1Mj
                           g$export-env$19256$T@1Mj
                           g$visit-proc$19271$T@1Mj
                           g$invoke-proc$19272$T@1Mj
                           g$visit-code$19273$T@1Mj
                           g$invoke-code$19274$T@1Mj
                           '#t
                           g$filename$19234$T@1Mj)
                         (values
                           g$id$19265$T@1Mj
                           g$name$19266$T@1Mj
                           g$ver$19267$T@1Mj
                           g$imp*$19268$T@1Mj
                           g$vis*$19269$T@1Mj
                           g$inv*$19270$T@1Mj
                           g$invoke-code$19274$T@1Mj
                           g$visit-code$19273$T@1Mj
                           g$export-subst$19257$T@1Mj
                           g$export-env$19256$T@1Mj))))
                    (gensym)
                    g$name$19264$T@1Mj
                    g$ver$19263$T@1Mj
                    (g$map$11724$T@1Mj
                      g$library-spec$15217$T@1Mj
                      g$imp*$19262$T@1Mj)
                    (g$map$11724$T@1Mj
                      g$library-spec$15217$T@1Mj
                      g$vis*$19260$T@1Mj)
                    (g$map$11724$T@1Mj
                      g$library-spec$15217$T@1Mj
                      g$inv*$19261$T@1Mj)
                    (case-lambda
                      (() (g$visit!$19237$T@1Mj g$macro*$19258$T@1Mj)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$14946$T@1Mj
                           g$invoke-code$19259$T@1Mj))))
                    (g$build-visit-code$19236$T@1Mj
                      g$macro*$19258$T@1Mj)
                    g$invoke-code$19259$T@1Mj)))
                g$export-env$19255$T@1Mj
                g$export-subst$19254$T@1Mj
                g$macro*$19253$T@1Mj
                g$invoke-code$19252$T@1Mj
                g$vis*$19251$T@1Mj
                g$inv*$19250$T@1Mj
                g$imp*$19249$T@1Mj
                g$ver$19248$T@1Mj
                g$name$19247$T@1Mj))))))
       ((g$x$19283$T@1Mj g$filename$19284$T@1Mj)
        (g$library-expander$16108$T@1Mj
          g$x$19283$T@1Mj
          g$filename$19284$T@1Mj
          (case-lambda ((g$x$19285$T@1Mj) (values)))))
       ((g$x$19286$T@1Mj)
        (g$library-expander$16108$T@1Mj
          g$x$19286$T@1Mj
          '#f
          (case-lambda ((g$x$19287$T@1Mj) (values)))))))
   (g$boot-library-expand$16109$T@1Mj
     g$boot-library-expand$19699$T@1Mj
     (case-lambda
       ((g$x$19288$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$library-expander$16108$T@1Mj g$x$19288$T@1Mj)))
          (case-lambda
            ((g$id$19299$T@1Mj
               g$name$19300$T@1Mj
               g$ver$19301$T@1Mj
               g$imp*$19302$T@1Mj
               g$vis*$19303$T@1Mj
               g$inv*$19304$T@1Mj
               g$invoke-code$19305$T@1Mj
               g$visit-code$19306$T@1Mj
               g$export-subst$19307$T@1Mj
               g$export-env$19308$T@1Mj)
             ((case-lambda
                ((g$export-env$19309$T@1Mj
                   g$export-subst$19310$T@1Mj
                   g$visit-code$19311$T@1Mj
                   g$invoke-code$19312$T@1Mj
                   g$inv*$19313$T@1Mj
                   g$vis*$19314$T@1Mj
                   g$imp*$19315$T@1Mj
                   g$ver$19316$T@1Mj
                   g$name$19317$T@1Mj
                   g$id$19318$T@1Mj)
                 (values
                   g$name$19317$T@1Mj
                   g$invoke-code$19312$T@1Mj
                   g$export-subst$19310$T@1Mj
                   g$export-env$19309$T@1Mj)))
              g$export-env$19308$T@1Mj
              g$export-subst$19307$T@1Mj
              g$visit-code$19306$T@1Mj
              g$invoke-code$19305$T@1Mj
              g$inv*$19304$T@1Mj
              g$vis*$19303$T@1Mj
              g$imp*$19302$T@1Mj
              g$ver$19301$T@1Mj
              g$name$19300$T@1Mj
              g$id$19299$T@1Mj)))))))
   (g$rev-map-append$16110$T@1Mj
     g$rev-map-append$19700$T@1Mj
     (case-lambda
       ((g$f$19319$T@1Mj g$ls$19320$T@1Mj g$ac$19321$T@1Mj)
        (if (null? g$ls$19320$T@1Mj)
          g$ac$19321$T@1Mj
          (g$rev-map-append$16110$T@1Mj
            g$f$19319$T@1Mj
            (cdr g$ls$19320$T@1Mj)
            (cons
              (g$f$19319$T@1Mj (car g$ls$19320$T@1Mj))
              g$ac$19321$T@1Mj))))))
   (g$build-exports$16111$T@1Mj
     g$build-exports$19701$T@1Mj
     (case-lambda
       ((g$lex*+loc*$19322$T@1Mj g$init*$19323$T@1Mj)
        (g$build-sequence$15432$T@1Mj
          '#f
          (cons
            (g$build-void$15433$T@1Mj)
            (g$rev-map-append$16110$T@1Mj
              (case-lambda
                ((g$x$19324$T@1Mj)
                 (list
                   'set!
                   (cdr g$x$19324$T@1Mj)
                   (car g$x$19324$T@1Mj))))
              g$lex*+loc*$19322$T@1Mj
              g$init*$19323$T@1Mj))))))
   (g$make-export-subst$16112$T@1Mj
     g$make-export-subst$19702$T@1Mj
     (case-lambda
       ((g$name*$19325$T@1Mj g$id*$19326$T@1Mj)
        (g$map$11724$T@1Mj
          (case-lambda
            ((g$name$19327$T@1Mj g$id$19328$T@1Mj)
             ((case-lambda
                ((g$label$19329$T@1Mj)
                 (begin
                   (if (not g$label$19329$T@1Mj)
                     (g$syntax-violation$16124$T@1Mj
                       '#f
                       '"cannot export unbound identifier"
                       g$id$19328$T@1Mj)
                     (void))
                   (cons g$name$19327$T@1Mj g$label$19329$T@1Mj))))
              (g$id->label$15520$T@1Mj g$id$19328$T@1Mj))))
          g$name*$19325$T@1Mj
          g$id*$19326$T@1Mj))))
   (g$make-export-env/macros$16113$T@1Mj
     g$make-export-env/macros$19703$T@1Mj
     (case-lambda
       ((g$lex*$19330$T@1Mj g$loc*$19331$T@1Mj g$r$19332$T@1Mj)
        (letrec* ((g$lookup$19333$T@1Mj
                    (case-lambda
                      ((g$x$19349$T@1Mj)
                       ((letrec ((g$f$19350$T@1Mj
                                   (case-lambda
                                     ((g$x$19351$T@1Mj
                                        g$lex*$19352$T@1Mj
                                        g$loc*$19353$T@1Mj)
                                      (if (pair? g$lex*$19352$T@1Mj)
                                        (if (eq? g$x$19351$T@1Mj
                                                 (car g$lex*$19352$T@1Mj))
                                          (car g$loc*$19353$T@1Mj)
                                          (g$f$19350$T@1Mj
                                            g$x$19351$T@1Mj
                                            (cdr g$lex*$19352$T@1Mj)
                                            (cdr g$loc*$19353$T@1Mj)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$19350$T@1Mj)
                        g$x$19349$T@1Mj
                        g$lex*$19330$T@1Mj
                        g$loc*$19331$T@1Mj)))))
          ((letrec ((g$f$19334$T@1Mj
                      (case-lambda
                        ((g$r$19335$T@1Mj
                           g$env$19336$T@1Mj
                           g$global*$19337$T@1Mj
                           g$macro*$19338$T@1Mj)
                         (if (null? g$r$19335$T@1Mj)
                           (values
                             g$env$19336$T@1Mj
                             g$global*$19337$T@1Mj
                             g$macro*$19338$T@1Mj)
                           ((case-lambda
                              ((g$x$19339$T@1Mj)
                               ((case-lambda
                                  ((g$label$19340$T@1Mj g$b$19341$T@1Mj)
                                   ((case-lambda
                                      ((g$t$19342$T@1Mj)
                                       (if (eqv?
                                             g$t$19342$T@1Mj
                                             'lexical)
                                         ((case-lambda
                                            ((g$v$19343$T@1Mj)
                                             ((case-lambda
                                                ((g$loc$19344$T@1Mj
                                                   g$type$19345$T@1Mj)
                                                 (g$f$19334$T@1Mj
                                                   (cdr g$r$19335$T@1Mj)
                                                   (cons
                                                     (g$cons*$11726$T@1Mj
                                                       g$label$19340$T@1Mj
                                                       g$type$19345$T@1Mj
                                                       g$loc$19344$T@1Mj)
                                                     g$env$19336$T@1Mj)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$15949$T@1Mj
                                                         g$v$19343$T@1Mj)
                                                       g$loc$19344$T@1Mj)
                                                     g$global*$19337$T@1Mj)
                                                   g$macro*$19338$T@1Mj)))
                                              (g$lookup$19333$T@1Mj
                                                (g$lexical-var$15949$T@1Mj
                                                  g$v$19343$T@1Mj))
                                              (if (g$lexical-mutable?$15950$T@1Mj
                                                    g$v$19343$T@1Mj)
                                                'mutable
                                                'global))))
                                          (g$binding-value$15525$T@1Mj
                                            g$b$19341$T@1Mj))
                                         (if (eqv?
                                               g$t$19342$T@1Mj
                                               'local-macro)
                                           ((case-lambda
                                              ((g$loc$19346$T@1Mj)
                                               (g$f$19334$T@1Mj
                                                 (cdr g$r$19335$T@1Mj)
                                                 (cons
                                                   (g$cons*$11726$T@1Mj
                                                     g$label$19340$T@1Mj
                                                     'global-macro
                                                     g$loc$19346$T@1Mj)
                                                   g$env$19336$T@1Mj)
                                                 g$global*$19337$T@1Mj
                                                 (cons
                                                   (cons
                                                     g$loc$19346$T@1Mj
                                                     (g$binding-value$15525$T@1Mj
                                                       g$b$19341$T@1Mj))
                                                   g$macro*$19338$T@1Mj))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$19342$T@1Mj
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$19347$T@1Mj)
                                                 (g$f$19334$T@1Mj
                                                   (cdr g$r$19335$T@1Mj)
                                                   (cons
                                                     (g$cons*$11726$T@1Mj
                                                       g$label$19340$T@1Mj
                                                       'global-macro!
                                                       g$loc$19347$T@1Mj)
                                                     g$env$19336$T@1Mj)
                                                   g$global*$19337$T@1Mj
                                                   (cons
                                                     (cons
                                                       g$loc$19347$T@1Mj
                                                       (g$binding-value$15525$T@1Mj
                                                         g$b$19341$T@1Mj))
                                                     g$macro*$19338$T@1Mj))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$19342$T@1Mj
                                                   'local-ctv)
                                               ((case-lambda
                                                  ((g$loc$19348$T@1Mj)
                                                   (g$f$19334$T@1Mj
                                                     (cdr g$r$19335$T@1Mj)
                                                     (cons
                                                       (g$cons*$11726$T@1Mj
                                                         g$label$19340$T@1Mj
                                                         'global-ctv
                                                         g$loc$19348$T@1Mj)
                                                       g$env$19336$T@1Mj)
                                                     g$global*$19337$T@1Mj
                                                     (cons
                                                       (cons
                                                         g$loc$19348$T@1Mj
                                                         (g$binding-value$15525$T@1Mj
                                                           g$b$19341$T@1Mj))
                                                       g$macro*$19338$T@1Mj))))
                                                (gensym))
                                               (if (g$memv$11717$T@1Mj
                                                     g$t$19342$T@1Mj
                                                     '($rtd $module))
                                                 (g$f$19334$T@1Mj
                                                   (cdr g$r$19335$T@1Mj)
                                                   (cons
                                                     g$x$19339$T@1Mj
                                                     g$env$19336$T@1Mj)
                                                   g$global*$19337$T@1Mj
                                                   g$macro*$19338$T@1Mj)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$15524$T@1Mj
                                                     g$b$19341$T@1Mj)
                                                   (g$binding-value$15525$T@1Mj
                                                     g$b$19341$T@1Mj)))))))))
                                    (g$binding-type$15524$T@1Mj
                                      g$b$19341$T@1Mj))))
                                (car g$x$19339$T@1Mj)
                                (cdr g$x$19339$T@1Mj))))
                            (car g$r$19335$T@1Mj)))))))
             g$f$19334$T@1Mj)
           g$r$19332$T@1Mj
           '()
           '()
           '())))))
   (g$generate-temporaries$16114$T@1Mj
     g$generate-temporaries$19704$T@1Mj
     (case-lambda
       ((g$ls$19354$T@1Mj)
        ((case-lambda
           ((g$t$19355$T@1Mj)
            ((case-lambda
               ((g$ls/false$19356$T@1Mj)
                (if g$ls/false$19356$T@1Mj
                  (apply
                    (case-lambda
                      ((g$ls$19357$T@1Mj)
                       (g$map$11724$T@1Mj
                         (case-lambda
                           ((g$x$19358$T@1Mj)
                            (g$make-stx$15480$T@1Mj
                              ((case-lambda
                                 ((g$x$19359$T@1Mj)
                                  (if ((case-lambda
                                         ((g$t$19360$T@1Mj)
                                          (if g$t$19360$T@1Mj
                                            g$t$19360$T@1Mj
                                            (begin
                                              '#f
                                              (string?
                                                g$x$19359$T@1Mj)))))
                                       (g$symbol?$12467$T@1Mj
                                         g$x$19359$T@1Mj))
                                    (gensym g$x$19359$T@1Mj)
                                    (gensym 't))))
                               (g$syntax->datum$16127$T@1Mj
                                 g$x$19358$T@1Mj))
                              g$top-mark*$15440$T@1Mj
                              '()
                              '())))
                         g$ls$19357$T@1Mj)))
                    g$ls/false$19356$T@1Mj)
                  ((case-lambda
                     ((g$t$19361$T@1Mj)
                      ((case-lambda
                         ((g$ls/false$19362$T@1Mj)
                          (if g$ls/false$19362$T@1Mj
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$19362$T@1Mj)
                            (g$syntax-violation$16124$T@1Mj
                              '#f
                              '"invalid syntax"
                              g$t$19361$T@1Mj))))
                       (g$syntax-dispatch$16005$T@1Mj
                         g$t$19361$T@1Mj
                         '_))))
                   g$t$19355$T@1Mj))))
             (g$syntax-dispatch$16005$T@1Mj
               g$t$19355$T@1Mj
               'each-any))))
         g$ls$19354$T@1Mj))))
   (g$free-identifier=?$16115$T@1Mj
     g$free-identifier=?$19705$T@1Mj
     (case-lambda
       ((g$x$19363$T@1Mj g$y$19364$T@1Mj)
        (if (g$id?$15507$T@1Mj g$x$19363$T@1Mj)
          (if (g$id?$15507$T@1Mj g$y$19364$T@1Mj)
            (g$free-id=?$15511$T@1Mj g$x$19363$T@1Mj g$y$19364$T@1Mj)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$19364$T@1Mj))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$19363$T@1Mj)))))
   (g$bound-identifier=?$16116$T@1Mj
     g$bound-identifier=?$19706$T@1Mj
     (case-lambda
       ((g$x$19365$T@1Mj g$y$19366$T@1Mj)
        (if (g$id?$15507$T@1Mj g$x$19365$T@1Mj)
          (if (g$id?$15507$T@1Mj g$y$19366$T@1Mj)
            (g$bound-id=?$15510$T@1Mj g$x$19365$T@1Mj g$y$19366$T@1Mj)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$19366$T@1Mj))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$19365$T@1Mj)))))
   (g$make-source-condition$16117$T@1Mj
     g$make-source-condition$19707$T@1Mj
     (case-lambda
       ((g$x$19367$T@1Mj)
        (letrec* ((g$11044$19368$T@1Mj
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$13136$T@1Mj
                      'g$11047$T@1Mj
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11046$19369$T@1Mj '#f)
                  (g$11045$19370$T@1Mj
                    (make-record-constructor-descriptor
                      g$11044$19368$T@1Mj
                      g$&condition-rcd$13137$T@1Mj
                      g$11046$19369$T@1Mj))
                  (g$11043$19373$T@1Mj
                    (record-predicate g$11044$19368$T@1Mj))
                  (g$make-source-condition$19374$T@1Mj
                    (record-constructor g$11045$19370$T@1Mj))
                  (g$11041$19375$T@1Mj
                    (record-accessor g$11044$19368$T@1Mj '0))
                  (g$11042$19376$T@1Mj
                    (record-accessor g$11044$19368$T@1Mj '1))
                  (g$source-condition?$19377$T@1Mj
                    (condition-predicate g$11044$19368$T@1Mj))
                  (g$source-filename$19378$T@1Mj
                    (condition-accessor
                      g$11044$19368$T@1Mj
                      g$11041$19375$T@1Mj))
                  (g$source-character$19379$T@1Mj
                    (condition-accessor
                      g$11044$19368$T@1Mj
                      g$11042$19376$T@1Mj)))
          (if (pair? g$x$19367$T@1Mj)
            (g$make-source-condition$19374$T@1Mj
              (car g$x$19367$T@1Mj)
              (cdr g$x$19367$T@1Mj))
            (condition))))))
   (g$extract-position-condition$16118$T@1Mj
     g$extract-position-condition$19708$T@1Mj
     (case-lambda
       ((g$x$19380$T@1Mj)
        (g$make-source-condition$16117$T@1Mj
          (g$expression-position$16119$T@1Mj g$x$19380$T@1Mj)))))
   (g$expression-position$16119$T@1Mj
     g$expression-position$19709$T@1Mj
     (case-lambda
       ((g$x$19381$T@1Mj)
        (if (g$stx?$15479$T@1Mj g$x$19381$T@1Mj)
          (begin
            '#f
            ((case-lambda
               ((g$x$19382$T@1Mj)
                (if (annotation? g$x$19382$T@1Mj)
                  (begin '#f (annotation-source g$x$19382$T@1Mj))
                  '#f)))
             (g$stx-expr$15481$T@1Mj g$x$19381$T@1Mj)))
          '#f))))
   (g$assertion-error$16120$T@1Mj
     g$assertion-error$19710$T@1Mj
     (case-lambda
       ((g$expr$19383$T@1Mj g$pos$19384$T@1Mj)
        (raise
          (condition
            (g$make-assertion-violation$13184$T@1Mj)
            (g$make-who-condition$13202$T@1Mj 'assert)
            (g$make-message-condition$13142$T@1Mj '"assertion failed")
            (g$make-irritants-condition$13192$T@1Mj
              (list g$expr$19383$T@1Mj))
            (g$make-source-condition$16117$T@1Mj g$pos$19384$T@1Mj))))))
   (g$syntax-error$16121$T@1Mj
     g$syntax-error$19711$T@1Mj
     (case-lambda
       ((g$x$19385$T@1Mj . g$args$19386$T@1Mj)
        (begin
          (if (not (g$for-all$11722$T@1Mj string? g$args$19386$T@1Mj))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$19386$T@1Mj)
            (void))
          (raise
            (condition
              (g$make-message-condition$13142$T@1Mj
                (if (null? g$args$19386$T@1Mj)
                  '"invalid syntax"
                  (apply string-append g$args$19386$T@1Mj)))
              (g$make-syntax-violation$13236$T@1Mj
                (g$syntax->datum$16127$T@1Mj g$x$19385$T@1Mj)
                '#f)
              (g$extract-position-condition$16118$T@1Mj g$x$19385$T@1Mj)
              (g$extract-trace$16122$T@1Mj g$x$19385$T@1Mj)))))))
   (g$extract-trace$16122$T@1Mj
     g$extract-trace$19712$T@1Mj
     (case-lambda
       ((g$x$19387$T@1Mj)
        (letrec* ((g$11069$19388$T@1Mj
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$13136$T@1Mj
                      'g$11072$T@1Mj
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11071$19389$T@1Mj '#f)
                  (g$11070$19390$T@1Mj
                    (make-record-constructor-descriptor
                      g$11069$19388$T@1Mj
                      g$&condition-rcd$13137$T@1Mj
                      g$11071$19389$T@1Mj))
                  (g$11068$19393$T@1Mj
                    (record-predicate g$11069$19388$T@1Mj))
                  (g$make-trace$19394$T@1Mj
                    (record-constructor g$11070$19390$T@1Mj))
                  (g$11067$19395$T@1Mj
                    (record-accessor g$11069$19388$T@1Mj '0))
                  (g$trace?$19396$T@1Mj
                    (condition-predicate g$11069$19388$T@1Mj))
                  (g$trace-form$19397$T@1Mj
                    (condition-accessor
                      g$11069$19388$T@1Mj
                      g$11067$19395$T@1Mj)))
          ((letrec ((g$f$19398$T@1Mj
                      (case-lambda
                        ((g$x$19399$T@1Mj)
                         (if (g$stx?$15479$T@1Mj g$x$19399$T@1Mj)
                           (apply
                             condition
                             (g$make-trace$19394$T@1Mj g$x$19399$T@1Mj)
                             (g$map$11724$T@1Mj
                               g$f$19398$T@1Mj
                               (g$stx-ae*$15484$T@1Mj g$x$19399$T@1Mj)))
                           (if (annotation? g$x$19399$T@1Mj)
                             (g$make-trace$19394$T@1Mj
                               (g$make-stx$15480$T@1Mj
                                 g$x$19399$T@1Mj
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$19398$T@1Mj)
           g$x$19387$T@1Mj)))))
   (g$syntax-violation*$16123$T@1Mj
     g$syntax-violation*$19713$T@1Mj
     (case-lambda
       ((g$who$19400$T@1Mj
          g$msg$19401$T@1Mj
          g$form$19402$T@1Mj
          g$condition-object$19403$T@1Mj)
        (begin
          (if (not (string? g$msg$19401$T@1Mj))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$19401$T@1Mj)
            (void))
          ((case-lambda
             ((g$who$19404$T@1Mj)
              (raise
                (condition
                  (if g$who$19404$T@1Mj
                    (g$make-who-condition$13202$T@1Mj g$who$19404$T@1Mj)
                    (condition))
                  (g$make-message-condition$13142$T@1Mj
                    g$msg$19401$T@1Mj)
                  g$condition-object$19403$T@1Mj
                  (g$extract-position-condition$16118$T@1Mj
                    g$form$19402$T@1Mj)
                  (g$extract-trace$16122$T@1Mj g$form$19402$T@1Mj)))))
           (if ((case-lambda
                  ((g$t$19405$T@1Mj)
                   (if g$t$19405$T@1Mj
                     g$t$19405$T@1Mj
                     (begin
                       '#f
                       (g$symbol?$12467$T@1Mj g$who$19400$T@1Mj)))))
                (string? g$who$19400$T@1Mj))
             g$who$19400$T@1Mj
             (if (not g$who$19400$T@1Mj)
               ((case-lambda
                  ((g$t$19406$T@1Mj)
                   ((case-lambda
                      ((g$ls/false$19407$T@1Mj)
                       (if (if g$ls/false$19407$T@1Mj
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$19408$T@1Mj)
                                    (g$id?$15507$T@1Mj
                                      g$id$19408$T@1Mj)))
                                 g$ls/false$19407$T@1Mj))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$19409$T@1Mj)
                              (g$syntax->datum$16127$T@1Mj
                                g$id$19409$T@1Mj)))
                           g$ls/false$19407$T@1Mj)
                         ((case-lambda
                            ((g$t$19410$T@1Mj)
                             ((case-lambda
                                ((g$ls/false$19411$T@1Mj)
                                 (if (if g$ls/false$19411$T@1Mj
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$19412$T@1Mj
                                                g$rest$19413$T@1Mj)
                                              (g$id?$15507$T@1Mj
                                                g$id$19412$T@1Mj)))
                                           g$ls/false$19411$T@1Mj))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$19414$T@1Mj
                                          g$rest$19415$T@1Mj)
                                        (g$syntax->datum$16127$T@1Mj
                                          g$id$19414$T@1Mj)))
                                     g$ls/false$19411$T@1Mj)
                                   ((case-lambda
                                      ((g$t$19416$T@1Mj)
                                       ((case-lambda
                                          ((g$ls/false$19417$T@1Mj)
                                           (if g$ls/false$19417$T@1Mj
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$19417$T@1Mj)
                                             (g$syntax-violation$16124$T@1Mj
                                               '#f
                                               '"invalid syntax"
                                               g$t$19416$T@1Mj))))
                                        (g$syntax-dispatch$16005$T@1Mj
                                          g$t$19416$T@1Mj
                                          '_))))
                                    g$t$19410$T@1Mj))))
                              (g$syntax-dispatch$16005$T@1Mj
                                g$t$19410$T@1Mj
                                '(any . any)))))
                          g$t$19406$T@1Mj))))
                    (g$syntax-dispatch$16005$T@1Mj
                      g$t$19406$T@1Mj
                      'any))))
                g$form$19402$T@1Mj)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$19400$T@1Mj))))))))
   (g$syntax-violation$16124$T@1Mj
     g$syntax-violation$19714$T@1Mj
     (case-lambda
       ((g$who$19418$T@1Mj g$msg$19419$T@1Mj g$form$19420$T@1Mj)
        (g$syntax-violation$16124$T@1Mj
          g$who$19418$T@1Mj
          g$msg$19419$T@1Mj
          g$form$19420$T@1Mj
          '#f))
       ((g$who$19421$T@1Mj
          g$msg$19422$T@1Mj
          g$form$19423$T@1Mj
          g$subform$19424$T@1Mj)
        (g$syntax-violation*$16123$T@1Mj
          g$who$19421$T@1Mj
          g$msg$19422$T@1Mj
          g$form$19423$T@1Mj
          (g$make-syntax-violation$13236$T@1Mj
            (g$syntax->datum$16127$T@1Mj g$form$19423$T@1Mj)
            (g$syntax->datum$16127$T@1Mj g$subform$19424$T@1Mj))))))
   (g$identifier?$16125$T@1Mj
     g$identifier?$19715$T@1Mj
     (case-lambda
       ((g$x$19425$T@1Mj) (g$id?$15507$T@1Mj g$x$19425$T@1Mj))))
   (g$datum->syntax$16126$T@1Mj
     g$datum->syntax$19716$T@1Mj
     (case-lambda
       ((g$id$19426$T@1Mj g$datum$19427$T@1Mj)
        (if (g$id?$15507$T@1Mj g$id$19426$T@1Mj)
          (g$datum->stx$15490$T@1Mj
            g$id$19426$T@1Mj
            g$datum$19427$T@1Mj)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$19426$T@1Mj)))))
   (g$syntax->datum$16127$T@1Mj
     g$syntax->datum$19717$T@1Mj
     (case-lambda
       ((g$x$19428$T@1Mj) (g$stx->datum$15518$T@1Mj g$x$19428$T@1Mj))))
   (g$compile-r6rs-top-level$16128$T@1Mj
     g$compile-r6rs-top-level$19718$T@1Mj
     (case-lambda
       ((g$x*$19429$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$16068$T@1Mj g$x*$19429$T@1Mj)))
          (case-lambda
            ((g$lib*$19432$T@1Mj g$invoke-code$19433$T@1Mj)
             ((case-lambda
                ((g$invoke-code$19434$T@1Mj g$lib*$19435$T@1Mj)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11725$T@1Mj
                        g$invoke-library$15213$T@1Mj
                        g$lib*$19435$T@1Mj)
                      (eval-core
                        (g$expanded->core$14946$T@1Mj
                          g$invoke-code$19434$T@1Mj)))))))
              g$invoke-code$19433$T@1Mj
              g$lib*$19432$T@1Mj)))))))
   (g$pre-compile-r6rs-top-level$16129$T@1Mj
     g$pre-compile-r6rs-top-level$19719$T@1Mj
     (case-lambda
       ((g$x*$19436$T@1Mj)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$16068$T@1Mj g$x*$19436$T@1Mj)))
          (case-lambda
            ((g$lib*$19439$T@1Mj g$invoke-code$19440$T@1Mj)
             ((case-lambda
                ((g$invoke-code$19441$T@1Mj g$lib*$19442$T@1Mj)
                 (begin
                   (g$for-each$11725$T@1Mj
                     g$invoke-library$15213$T@1Mj
                     g$lib*$19442$T@1Mj)
                   (compile-core
                     (g$expanded->core$14946$T@1Mj
                       g$invoke-code$19441$T@1Mj)))))
              g$invoke-code$19440$T@1Mj
              g$lib*$19439$T@1Mj)))))))
   (g$new-interaction-environment$16130$T@1Mj
     g$new-interaction-environment$19720$T@1Mj
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$19443$T@1Mj g$rib$19444$T@1Mj)
            (begin
              ((case-lambda
                 ((g$subst$19445$T@1Mj)
                  (begin
                    (g$set-rib-sym*!$15460$T@1Mj
                      g$rib$19444$T@1Mj
                      (g$map$11724$T@1Mj car g$subst$19445$T@1Mj))
                    (g$set-rib-mark**!$15461$T@1Mj
                      g$rib$19444$T@1Mj
                      (g$map$11724$T@1Mj
                        (case-lambda
                          ((g$x$19446$T@1Mj) g$top-mark*$15440$T@1Mj))
                        g$subst$19445$T@1Mj))
                    (g$set-rib-label*!$15462$T@1Mj
                      g$rib$19444$T@1Mj
                      (g$map$11724$T@1Mj cdr g$subst$19445$T@1Mj)))))
               (g$library-subst$15170$T@1Mj g$lib$19443$T@1Mj))
              (g$make-interaction-env$16089$T@1Mj
                g$rib$19444$T@1Mj
                '()
                '()))))
         (g$find-library-by-name$15206$T@1Mj '(ironscheme))
         (g$make-empty-rib$15465$T@1Mj)))))
   (g$interaction-environment$16131$T@1Mj
     g$interaction-environment$19721$T@1Mj
     ((case-lambda
        ((g$e$19447$T@1Mj)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$19448$T@1Mj)
                (if g$t$19448$T@1Mj
                  g$t$19448$T@1Mj
                  (begin
                    '#f
                    (begin
                      (set! g$e$19447$T@1Mj
                        (g$new-interaction-environment$16130$T@1Mj))
                      g$e$19447$T@1Mj)))))
             g$e$19447$T@1Mj)))))
      '#f))
   (g$top-level-context$16132$T@1Mj
     g$top-level-context$19722$T@1Mj
     (g$make-parameter$14369$T@1Mj '#f)))
  (g$current-library-expander$15203$T@1Mj
    g$library-expander$16108$T@1Mj))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$14943$T@1Mj
      (case-lambda
        ((g$x$19803$T@1Mj)
         ((case-lambda
            ((g$t$19804$T@1Mj)
             (if g$t$19804$T@1Mj (cdr g$t$19804$T@1Mj) '#f)))
          (g$assq$11712$T@1Mj
            g$x$19803$T@1Mj
            '((ellipsis-map . g$ellipsis-map$19606$T@1Mj)
              (&no-nans-rcd . g$&no-nans-rcd$13371$T@1Mj)
              (&no-nans-rtd . g$&no-nans-rtd$13370$T@1Mj)
              (&no-infinities-rcd . g$&no-infinities-rcd$13363$T@1Mj)
              (&no-infinities-rtd . g$&no-infinities-rtd$13362$T@1Mj)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$13355$T@1Mj)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$13354$T@1Mj)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$13345$T@1Mj)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$13344$T@1Mj)
              (&i/o-port-rcd . g$&i/o-port-rcd$13337$T@1Mj)
              (&i/o-port-rtd . g$&i/o-port-rtd$13336$T@1Mj)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$13327$T@1Mj)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$13326$T@1Mj)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$13319$T@1Mj)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$13318$T@1Mj)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$13311$T@1Mj)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$13310$T@1Mj)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$13303$T@1Mj)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$13302$T@1Mj)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$13295$T@1Mj)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$13294$T@1Mj)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$13285$T@1Mj)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$13284$T@1Mj)
              (&i/o-write-rcd . g$&i/o-write-rcd$13275$T@1Mj)
              (&i/o-write-rtd . g$&i/o-write-rtd$13274$T@1Mj)
              (&i/o-read-rcd . g$&i/o-read-rcd$13267$T@1Mj)
              (&i/o-read-rtd . g$&i/o-read-rtd$13266$T@1Mj)
              (&i/o-rcd . g$&i/o-rcd$13259$T@1Mj)
              (&i/o-rtd . g$&i/o-rtd$13258$T@1Mj)
              (&undefined-rcd . g$&undefined-rcd$13251$T@1Mj)
              (&undefined-rtd . g$&undefined-rtd$13250$T@1Mj)
              (&syntax-rcd . g$&syntax-rcd$13243$T@1Mj)
              (&syntax-rtd . g$&syntax-rtd$13242$T@1Mj)
              (&lexical-rcd . g$&lexical-rcd$13231$T@1Mj)
              (&lexical-rtd . g$&lexical-rtd$13230$T@1Mj)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$13223$T@1Mj)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$13222$T@1Mj)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$13215$T@1Mj)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$13214$T@1Mj)
              (&who-rcd . g$&who-rcd$13207$T@1Mj)
              (&who-rtd . g$&who-rtd$13206$T@1Mj)
              (&irritants-rcd . g$&irritants-rcd$13197$T@1Mj)
              (&irritants-rtd . g$&irritants-rtd$13196$T@1Mj)
              (&assertion-rcd . g$&assertion-rcd$13187$T@1Mj)
              (&assertion-rtd . g$&assertion-rtd$13186$T@1Mj)
              (&violation-rcd . g$&violation-rcd$13179$T@1Mj)
              (&violation-rtd . g$&violation-rtd$13178$T@1Mj)
              (&error-rcd . g$&error-rcd$13171$T@1Mj)
              (&error-rtd . g$&error-rtd$13170$T@1Mj)
              (&serious-rcd . g$&serious-rcd$13163$T@1Mj)
              (&serious-rtd . g$&serious-rtd$13162$T@1Mj)
              (&warning-rcd . g$&warning-rcd$13155$T@1Mj)
              (&warning-rtd . g$&warning-rtd$13154$T@1Mj)
              (&message-rcd . g$&message-rcd$13147$T@1Mj)
              (&message-rtd . g$&message-rtd$13146$T@1Mj)
              (&condition-rcd . g$&condition-rcd$13137$T@1Mj)
              (&condition-rtd . g$&condition-rtd$13136$T@1Mj)
              (make-list . g$make-list$11707$T@1Mj)
              (last-pair . g$last-pair$11706$T@1Mj)
              (ironscheme-build . g$ironscheme-build$19794$T@1Mj)
              (syntax-error . g$syntax-error$19711$T@1Mj)
              (syntax-dispatch . g$syntax-dispatch$19601$T@1Mj)
              (compile-system-libraries
                .
                g$compile-system-libraries$19798$T@1Mj)
              (compile->closure . g$compile->closure$19800$T@1Mj)
              (compile . g$compile$19799$T@1Mj)
              (load . g$load$19793$T@1Mj)
              (interaction-environment
                .
                g$interaction-environment$19721$T@1Mj)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$13593$T@1Mj)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$13592$T@1Mj)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$13591$T@1Mj)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$13590$T@1Mj)
              (string-ci>? . g$string-ci>?$13582$T@1Mj)
              (string-ci>=? . g$string-ci>=?$13584$T@1Mj)
              (string-ci=? . g$string-ci=?$13580$T@1Mj)
              (string-ci<? . g$string-ci<?$13581$T@1Mj)
              (string-ci<=? . g$string-ci<=?$13583$T@1Mj)
              (char-ci>? . g$char-ci>?$13587$T@1Mj)
              (char-ci>=? . g$char-ci>=?$13589$T@1Mj)
              (char-ci=? . g$char-ci=?$13585$T@1Mj)
              (char-ci<? . g$char-ci<?$13586$T@1Mj)
              (char-ci<=? . g$char-ci<=?$13588$T@1Mj)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$19539$T@1Mj)
              (variable-transformer?
                .
                g$variable-transformer?$19538$T@1Mj)
              (make-variable-transformer
                .
                g$make-variable-transformer$19536$T@1Mj)
              (identifier? . g$identifier?$19715$T@1Mj)
              (generate-temporaries
                .
                g$generate-temporaries$19704$T@1Mj)
              (free-identifier=? . g$free-identifier=?$19705$T@1Mj)
              (syntax->datum . g$syntax->datum$19717$T@1Mj)
              (datum->syntax . g$datum->syntax$19716$T@1Mj)
              (bound-identifier=? . g$bound-identifier=?$19706$T@1Mj)
              (delete-file . g$delete-file$12587$T@1Mj)
              (file-exists? . g$file-exists?$12586$T@1Mj)
              (list-sort . g$list-sort$13435$T@1Mj)
              (make-eqv-hashtable . g$make-eqv-hashtable$12569$T@1Mj)
              (make-eq-hashtable . g$make-eq-hashtable$12568$T@1Mj)
              (hashtable-update! . g$hashtable-update!$12575$T@1Mj)
              (hashtable-size . g$hashtable-size$12570$T@1Mj)
              (hashtable-set! . g$hashtable-set!$12572$T@1Mj)
              (hashtable-ref . g$hashtable-ref$12571$T@1Mj)
              (hashtable-delete! . g$hashtable-delete!$12573$T@1Mj)
              (hashtable-contains? . g$hashtable-contains?$12574$T@1Mj)
              (hashtable-clear! . g$hashtable-clear!$12576$T@1Mj)
              (call-with-output-file
                .
                g$call-with-output-file$13985$T@1Mj)
              (call-with-input-file
                .
                g$call-with-input-file$13984$T@1Mj)
              (write-char . g$write-char$13981$T@1Mj)
              (with-output-to-file . g$with-output-to-file$13983$T@1Mj)
              (with-input-from-file
                .
                g$with-input-from-file$13982$T@1Mj)
              (read-char . g$read-char$13980$T@1Mj)
              (peek-char . g$peek-char$13979$T@1Mj)
              (newline . g$newline$13986$T@1Mj)
              (put-datum . g$put-datum$13916$T@1Mj)
              (port? . g$port?$13921$T@1Mj)
              (open-string-output-port
                .
                g$open-string-output-port$13920$T@1Mj)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$13272$T@1Mj)
              (make-i/o-read-error . g$make-i/o-read-error$13264$T@1Mj)
              (make-i/o-port-error . g$make-i/o-port-error$13332$T@1Mj)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$13280$T@1Mj)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$13290$T@1Mj)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$13300$T@1Mj)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$13308$T@1Mj)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$13324$T@1Mj)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$13316$T@1Mj)
              (make-i/o-error . g$make-i/o-error$13256$T@1Mj)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$13350$T@1Mj)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$13342$T@1Mj)
              (i/o-write-error? . g$i/o-write-error?$13273$T@1Mj)
              (i/o-read-error? . g$i/o-read-error?$13265$T@1Mj)
              (i/o-port-error? . g$i/o-port-error?$13334$T@1Mj)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$13282$T@1Mj)
              (i/o-error-position . g$i/o-error-position$13283$T@1Mj)
              (i/o-filename-error? . g$i/o-filename-error?$13292$T@1Mj)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$13301$T@1Mj)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$13309$T@1Mj)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$13325$T@1Mj)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$13317$T@1Mj)
              (i/o-error? . g$i/o-error?$13257$T@1Mj)
              (i/o-error-port . g$i/o-error-port$13335$T@1Mj)
              (i/o-error-filename . g$i/o-error-filename$13293$T@1Mj)
              (i/o-encoding-error? . g$i/o-encoding-error?$13352$T@1Mj)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$13353$T@1Mj)
              (i/o-decoding-error? . g$i/o-decoding-error?$13343$T@1Mj)
              (get-datum . g$get-datum$13917$T@1Mj)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$13922$T@1Mj)
              (call-with-port . g$call-with-port$13923$T@1Mj)
              (scheme-report-environment
                .
                g$scheme-report-environment$19694$T@1Mj)
              (quotient . g$quotient$13402$T@1Mj)
              (null-environment . g$null-environment$19693$T@1Mj)
              (remainder . g$remainder$13403$T@1Mj)
              (modulo . g$modulo$13404$T@1Mj)
              (inexact->exact . g$inexact->exact$13399$T@1Mj)
              (force . g$force$13406$T@1Mj)
              (exact->inexact . g$exact->inexact$13400$T@1Mj)
              (command-line . g$command-line$19789$T@1Mj)
              (remove . g$remove$11729$T@1Mj)
              (remv . g$remv$11730$T@1Mj)
              (remp . g$remp$11710$T@1Mj)
              (remq . g$remq$11731$T@1Mj)
              (partition . g$partition$11709$T@1Mj)
              (memv . g$memv$11717$T@1Mj)
              (memq . g$memq$11716$T@1Mj)
              (memp . g$memp$11719$T@1Mj)
              (member . g$member$11718$T@1Mj)
              (exists . g$exists$11723$T@1Mj)
              (for-all . g$for-all$11722$T@1Mj)
              (fold-right . g$fold-right$11728$T@1Mj)
              (fold-left . g$fold-left$11727$T@1Mj)
              (find . g$find$11708$T@1Mj)
              (filter . g$filter$11711$T@1Mj)
              (cons* . g$cons*$11726$T@1Mj)
              (assv . g$assv$11713$T@1Mj)
              (assq . g$assq$11712$T@1Mj)
              (assp . g$assp$11715$T@1Mj)
              (assoc . g$assoc$11714$T@1Mj)
              (eval . g$eval$19696$T@1Mj)
              (environment . g$environment$19692$T@1Mj)
              (make-enumeration . g$make-enumeration$14122$T@1Mj)
              (enum-set=? . g$enum-set=?$14129$T@1Mj)
              (enum-set-universe . g$enum-set-universe$14123$T@1Mj)
              (enum-set-union . g$enum-set-union$14130$T@1Mj)
              (enum-set-subset? . g$enum-set-subset?$14128$T@1Mj)
              (enum-set-projection . g$enum-set-projection$14134$T@1Mj)
              (enum-set-member? . g$enum-set-member?$14127$T@1Mj)
              (enum-set-intersection
                .
                g$enum-set-intersection$14131$T@1Mj)
              (enum-set-indexer . g$enum-set-indexer$14124$T@1Mj)
              (enum-set-difference . g$enum-set-difference$14132$T@1Mj)
              (enum-set-constructor
                .
                g$enum-set-constructor$14125$T@1Mj)
              (enum-set-complement . g$enum-set-complement$14133$T@1Mj)
              (enum-set->list . g$enum-set->list$14126$T@1Mj)
              (who-condition? . g$who-condition?$13204$T@1Mj)
              (warning? . g$warning?$13153$T@1Mj)
              (violation? . g$violation?$13177$T@1Mj)
              (undefined-violation?
                .
                g$undefined-violation?$13249$T@1Mj)
              (syntax-violation? . g$syntax-violation?$13239$T@1Mj)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$13241$T@1Mj)
              (syntax-violation-form
                .
                g$syntax-violation-form$13240$T@1Mj)
              (syntax-violation . g$syntax-violation$19714$T@1Mj)
              (serious-condition? . g$serious-condition?$13161$T@1Mj)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$13213$T@1Mj)
              (message-condition? . g$message-condition?$13144$T@1Mj)
              (make-who-condition . g$make-who-condition$13202$T@1Mj)
              (make-warning . g$make-warning$13152$T@1Mj)
              (make-violation . g$make-violation$13176$T@1Mj)
              (make-undefined-violation
                .
                g$make-undefined-violation$13248$T@1Mj)
              (make-syntax-violation
                .
                g$make-syntax-violation$13236$T@1Mj)
              (make-serious-condition
                .
                g$make-serious-condition$13160$T@1Mj)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$13212$T@1Mj)
              (make-message-condition
                .
                g$make-message-condition$13142$T@1Mj)
              (make-lexical-violation
                .
                g$make-lexical-violation$13228$T@1Mj)
              (make-irritants-condition
                .
                g$make-irritants-condition$13192$T@1Mj)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$13220$T@1Mj)
              (make-error . g$make-error$13168$T@1Mj)
              (make-assertion-violation
                .
                g$make-assertion-violation$13184$T@1Mj)
              (lexical-violation? . g$lexical-violation?$13229$T@1Mj)
              (irritants-condition?
                .
                g$irritants-condition?$13194$T@1Mj)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$13221$T@1Mj)
              (error? . g$error?$13169$T@1Mj)
              (condition-who . g$condition-who$13205$T@1Mj)
              (condition-message . g$condition-message$13145$T@1Mj)
              (condition-irritants . g$condition-irritants$13195$T@1Mj)
              (assertion-violation?
                .
                g$assertion-violation?$13185$T@1Mj)
              (native-endianness . g$native-endianness$12700$T@1Mj)
              (bytevector? . g$bytevector?$12466$T@1Mj)
              (bytevector-u64-set! . g$bytevector-u64-set!$12721$T@1Mj)
              (bytevector-u64-ref . g$bytevector-u64-ref$12717$T@1Mj)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$12723$T@1Mj)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$12719$T@1Mj)
              (bytevector-u32-set! . g$bytevector-u32-set!$12713$T@1Mj)
              (bytevector-u32-ref . g$bytevector-u32-ref$12709$T@1Mj)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$12715$T@1Mj)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$12711$T@1Mj)
              (bytevector-u16-set! . g$bytevector-u16-set!$12705$T@1Mj)
              (bytevector-u16-ref . g$bytevector-u16-ref$12701$T@1Mj)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$12707$T@1Mj)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$12703$T@1Mj)
              (bytevector-s64-set! . g$bytevector-s64-set!$12722$T@1Mj)
              (bytevector-s64-ref . g$bytevector-s64-ref$12718$T@1Mj)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$12724$T@1Mj)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$12720$T@1Mj)
              (bytevector-s32-set! . g$bytevector-s32-set!$12714$T@1Mj)
              (bytevector-s32-ref . g$bytevector-s32-ref$12710$T@1Mj)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$12716$T@1Mj)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$12712$T@1Mj)
              (bytevector-s16-set! . g$bytevector-s16-set!$12706$T@1Mj)
              (bytevector-s16-ref . g$bytevector-s16-ref$12702$T@1Mj)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$12708$T@1Mj)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$12704$T@1Mj)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$12727$T@1Mj)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$12725$T@1Mj)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$12728$T@1Mj)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$12726$T@1Mj)
              (no-nans-violation? . g$no-nans-violation?$13369$T@1Mj)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$13361$T@1Mj)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$13368$T@1Mj)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$13360$T@1Mj)
              (flzero? . g$flzero?$13889$T@1Mj)
              (fltruncate . g$fltruncate$13884$T@1Mj)
              (fltan . g$fltan$13874$T@1Mj)
              (flsqrt . g$flsqrt$13879$T@1Mj)
              (flsin . g$flsin$13872$T@1Mj)
              (flround . g$flround$13885$T@1Mj)
              (flpositive? . g$flpositive?$13887$T@1Mj)
              (flonum? . g$flonum?$12471$T@1Mj)
              (flodd? . g$flodd?$13891$T@1Mj)
              (flnegative? . g$flnegative?$13888$T@1Mj)
              (flnan? . g$flnan?$13871$T@1Mj)
              (flmod0 . g$flmod0$13865$T@1Mj)
              (flmod . g$flmod$13864$T@1Mj)
              (flmin . g$flmin$13893$T@1Mj)
              (flmax . g$flmax$13892$T@1Mj)
              (fllog . g$fllog$13878$T@1Mj)
              (flinteger? . g$flinteger?$13868$T@1Mj)
              (flinfinite? . g$flinfinite?$13870$T@1Mj)
              (flfloor . g$flfloor$13883$T@1Mj)
              (flfinite? . g$flfinite?$13869$T@1Mj)
              (flexpt . g$flexpt$13881$T@1Mj)
              (flexp . g$flexp$13880$T@1Mj)
              (fleven? . g$fleven?$13890$T@1Mj)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$13867$T@1Mj)
              (fldiv-and-mod . g$fldiv-and-mod$13866$T@1Mj)
              (flcos . g$flcos$13873$T@1Mj)
              (flceiling . g$flceiling$13882$T@1Mj)
              (flatan . g$flatan$13877$T@1Mj)
              (flasin . g$flasin$13875$T@1Mj)
              (flacos . g$flacos$13876$T@1Mj)
              (flabs . g$flabs$13886$T@1Mj)
              (fxzero? . g$fxzero?$13772$T@1Mj)
              (fxrotate-bit-field . g$fxrotate-bit-field$13786$T@1Mj)
              (fxpositive? . g$fxpositive?$13770$T@1Mj)
              (fxodd? . g$fxodd?$13774$T@1Mj)
              (fxnegative? . g$fxnegative?$13771$T@1Mj)
              (fxmod0 . g$fxmod0$13767$T@1Mj)
              (fxmod . g$fxmod$13766$T@1Mj)
              (fxmin . g$fxmin$13776$T@1Mj)
              (fxmax . g$fxmax$13775$T@1Mj)
              (fxif . g$fxif$13780$T@1Mj)
              (fxeven? . g$fxeven?$13773$T@1Mj)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$13769$T@1Mj)
              (fxdiv-and-mod . g$fxdiv-and-mod$13768$T@1Mj)
              (fxcopy-bit-field . g$fxcopy-bit-field$13783$T@1Mj)
              (fxcopy-bit . g$fxcopy-bit$13781$T@1Mj)
              (fxbit-field . g$fxbit-field$13782$T@1Mj)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$13785$T@1Mj)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$13784$T@1Mj)
              (fx-/carry . g$fx-/carry$13778$T@1Mj)
              (fx+/carry . g$fx+/carry$13779$T@1Mj)
              (fx*/carry . g$fx*/carry$13777$T@1Mj)
              (fixnum-width . g$fixnum-width$12472$T@1Mj)
              (fixnum? . g$fixnum?$12470$T@1Mj)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$13631$T@1Mj)
              (bitwise-if . g$bitwise-if$13625$T@1Mj)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$13628$T@1Mj)
              (bitwise-copy-bit . g$bitwise-copy-bit$13626$T@1Mj)
              (bitwise-bit-field . g$bitwise-bit-field$13627$T@1Mj)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$13630$T@1Mj)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$13629$T@1Mj)
              (zero? . g$zero?$12506$T@1Mj)
              (vector? . g$vector?$12465$T@1Mj)
              (vector-map . g$vector-map$12528$T@1Mj)
              (vector-for-each . g$vector-for-each$12529$T@1Mj)
              (vector-fill! . g$vector-fill!$12473$T@1Mj)
              (symbol? . g$symbol?$12467$T@1Mj)
              (symbol=? . g$symbol=?$12518$T@1Mj)
              (string>? . g$string>?$12515$T@1Mj)
              (string>=? . g$string>=?$12517$T@1Mj)
              (string=? . g$string=?$12513$T@1Mj)
              (string<? . g$string<?$12514$T@1Mj)
              (string<=? . g$string<=?$12516$T@1Mj)
              (string-for-each . g$string-for-each$12530$T@1Mj)
              (reverse . g$reverse$12475$T@1Mj)
              (rationalize . g$rationalize$12525$T@1Mj)
              (procedure? . g$procedure?$12469$T@1Mj)
              (positive? . g$positive?$12504$T@1Mj)
              (odd? . g$odd?$12508$T@1Mj)
              (negative? . g$negative?$12505$T@1Mj)
              (min . g$min$12510$T@1Mj)
              (max . g$max$12509$T@1Mj)
              (map . g$map$11724$T@1Mj)
              (list-tail . g$list-tail$11704$T@1Mj)
              (list-ref . g$list-ref$11705$T@1Mj)
              (list->vector . g$list->vector$12462$T@1Mj)
              (list->string . g$list->string$12463$T@1Mj)
              (lcm . g$lcm$12512$T@1Mj)
              (gcd . g$gcd$12511$T@1Mj)
              (for-each . g$for-each$11725$T@1Mj)
              (even? . g$even?$12507$T@1Mj)
              (div0-and-mod0 . g$div0-and-mod0$12461$T@1Mj)
              (mod0 . g$mod0$12459$T@1Mj)
              (div-and-mod . g$div-and-mod$12460$T@1Mj)
              (mod . g$mod$12458$T@1Mj)
              (char? . g$char?$12464$T@1Mj)
              (char>? . g$char>?$12522$T@1Mj)
              (char>=? . g$char>=?$12524$T@1Mj)
              (char=? . g$char=?$12520$T@1Mj)
              (char<? . g$char<?$12521$T@1Mj)
              (char<=? . g$char<=?$12523$T@1Mj)
              (cddddr . g$cddddr$12503$T@1Mj)
              (cdddar . g$cdddar$12502$T@1Mj)
              (cddadr . g$cddadr$12501$T@1Mj)
              (cddaar . g$cddaar$12500$T@1Mj)
              (cdaddr . g$cdaddr$12499$T@1Mj)
              (cdadar . g$cdadar$12498$T@1Mj)
              (cdaadr . g$cdaadr$12497$T@1Mj)
              (cdaaar . g$cdaaar$12496$T@1Mj)
              (cadddr . g$cadddr$12495$T@1Mj)
              (caddar . g$caddar$12494$T@1Mj)
              (cadadr . g$cadadr$12493$T@1Mj)
              (cadaar . g$cadaar$12492$T@1Mj)
              (caaddr . g$caaddr$12491$T@1Mj)
              (caadar . g$caadar$12490$T@1Mj)
              (caaadr . g$caaadr$12489$T@1Mj)
              (caaaar . g$caaaar$12488$T@1Mj)
              (cdddr . g$cdddr$12487$T@1Mj)
              (cddar . g$cddar$12486$T@1Mj)
              (cdadr . g$cdadr$12485$T@1Mj)
              (cdaar . g$cdaar$12484$T@1Mj)
              (caddr . g$caddr$12483$T@1Mj)
              (cadar . g$cadar$12482$T@1Mj)
              (caadr . g$caadr$12481$T@1Mj)
              (caaar . g$caaar$12480$T@1Mj)
              (cddr . g$cddr$12479$T@1Mj)
              (cdar . g$cdar$12478$T@1Mj)
              (cadr . g$cadr$12477$T@1Mj)
              (caar . g$caar$12476$T@1Mj)
              (boolean? . g$boolean?$12468$T@1Mj)
              (boolean=? . g$boolean=?$12519$T@1Mj)
              (enum-set? . g$enum?$14103$T@1Mj)
              (make-promise . g$make-promise$13405$T@1Mj)
              (load/unload . g$load/unload$19792$T@1Mj)
              (load/args . g$load/args$19791$T@1Mj)
              (printf . g$printf$14158$T@1Mj)
              (fprintf . g$fprintf$14159$T@1Mj)
              (format . g$format$14160$T@1Mj)
              (trace-printer . g$trace-printer$19788$T@1Mj)
              (make-traced-macro . g$make-traced-macro$14164$T@1Mj)
              (assertion-error . g$assertion-error$19710$T@1Mj)
              (make-parameter . g$make-parameter$14369$T@1Mj)
              (environment-bindings
                .
                g$environment-bindings$19688$T@1Mj)
              (environment-symbols . g$environment-symbols$19691$T@1Mj)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$19687$T@1Mj)
              (library-path . g$library-path$15195$T@1Mj)
              (make-compile-time-value
                .
                g$make-compile-time-value$19537$T@1Mj)
              (expand->core . g$expand->core$19697$T@1Mj)
              (expand . g$expand$19695$T@1Mj)
              (syntax-transpose . g$syntax-transpose$19644$T@1Mj)
              (convert->cps . g$convert->cps$14897$T@1Mj)
              (installed-libraries . g$installed-libraries$15216$T@1Mj)
              (uninstall-library . g$uninstall-library$15207$T@1Mj)
              (pretty-gensyms . g$pretty-gensyms$14577$T@1Mj)
              (pretty-width . g$pretty-width$14574$T@1Mj)
              (pretty-print . g$pretty-print$14579$T@1Mj)))))))
    (g$install-library$15211$T@1Mj
      'g$11682$T@1Mj
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11675$T@1Mj)
        (cosh . g$11674$T@1Mj)
        (sinh . g$11673$T@1Mj)
        (make-guid . g$11672$T@1Mj)
        (unspecified? . g$11671$T@1Mj)
        (make-list . g$5103$T@1Mj)
        (last-pair . g$5102$T@1Mj)
        (load-r5rs . g$11670$T@1Mj)
        (license . g$11669$T@1Mj)
        (stacktrace . g$11668$T@1Mj)
        (ironscheme-build . g$11139$T@1Mj)
        (remove-location . g$11655$T@1Mj)
        (set-symbol-value! . g$11654$T@1Mj)
        (symbol-value . g$11653$T@1Mj)
        (symbol-bound? . g$11652$T@1Mj)
        (ungensym . g$11651$T@1Mj)
        (gensym . g$11650$T@1Mj)
        (void . g$11649$T@1Mj)
        (compile-system-libraries . g$11143$T@1Mj)
        (compile->closure . g$11145$T@1Mj)
        (compile . g$11144$T@1Mj)
        (load . g$11138$T@1Mj)
        (interaction-environment . g$8122$T@1Mj)
        (string-upcase . g$11644$T@1Mj)
        (string-titlecase . g$11643$T@1Mj)
        (string-normalize-nfkd . g$6325$T@1Mj)
        (string-normalize-nfkc . g$6324$T@1Mj)
        (string-normalize-nfd . g$6323$T@1Mj)
        (string-normalize-nfc . g$6322$T@1Mj)
        (string-foldcase . g$11642$T@1Mj)
        (string-downcase . g$11641$T@1Mj)
        (string-ci>? . g$6309$T@1Mj)
        (string-ci>=? . g$6311$T@1Mj)
        (string-ci=? . g$6307$T@1Mj)
        (string-ci<? . g$6308$T@1Mj)
        (string-ci<=? . g$6310$T@1Mj)
        (char-whitespace? . g$11640$T@1Mj)
        (char-upper-case? . g$11639$T@1Mj)
        (char-title-case? . g$11638$T@1Mj)
        (char-numeric? . g$11637$T@1Mj)
        (char-lower-case? . g$11636$T@1Mj)
        (char-general-category . g$11635$T@1Mj)
        (char-upcase . g$11634$T@1Mj)
        (char-titlecase . g$11633$T@1Mj)
        (char-foldcase . g$11632$T@1Mj)
        (char-downcase . g$11631$T@1Mj)
        (char-ci>? . g$6319$T@1Mj)
        (char-ci>=? . g$6321$T@1Mj)
        (char-ci=? . g$6317$T@1Mj)
        (char-ci<? . g$6318$T@1Mj)
        (char-ci<=? . g$6320$T@1Mj)
        (char-alphabetic? . g$11630$T@1Mj)
        (make-variable-transformer . g$7796$T@1Mj)
        (identifier? . g$8116$T@1Mj)
        (generate-temporaries . g$8105$T@1Mj)
        (free-identifier=? . g$8106$T@1Mj)
        (syntax->datum . g$8118$T@1Mj)
        (datum->syntax . g$8117$T@1Mj)
        (bound-identifier=? . g$8107$T@1Mj)
        (record-type-descriptor? . g$11629$T@1Mj)
        (record-predicate . g$11628$T@1Mj)
        (record-mutator . g$11627$T@1Mj)
        (record-constructor . g$11626$T@1Mj)
        (record-accessor . g$11625$T@1Mj)
        (make-record-type-descriptor . g$11624$T@1Mj)
        (make-record-constructor-descriptor . g$11623$T@1Mj)
        (record? . g$11622$T@1Mj)
        (record-type-uid . g$11621$T@1Mj)
        (record-type-sealed? . g$11620$T@1Mj)
        (record-type-parent . g$11619$T@1Mj)
        (record-type-opaque? . g$11618$T@1Mj)
        (record-type-name . g$11617$T@1Mj)
        (record-type-generative? . g$11616$T@1Mj)
        (record-type-field-names . g$11615$T@1Mj)
        (record-rtd . g$11614$T@1Mj)
        (record-field-mutable? . g$11613$T@1Mj)
        (delete-file . g$5716$T@1Mj)
        (file-exists? . g$5715$T@1Mj)
        (vector-sort! . g$11612$T@1Mj)
        (vector-sort . g$11611$T@1Mj)
        (list-sort . g$6278$T@1Mj)
        (symbol-hash . g$11610$T@1Mj)
        (string-ci-hash . g$11609$T@1Mj)
        (string-hash . g$11608$T@1Mj)
        (equal-hash . g$11607$T@1Mj)
        (hashtable-equivalence-function . g$11606$T@1Mj)
        (make-hashtable . g$11605$T@1Mj)
        (hashtable-hash-function . g$11604$T@1Mj)
        (make-eqv-hashtable . g$5683$T@1Mj)
        (make-eq-hashtable . g$5682$T@1Mj)
        (hashtable? . g$11603$T@1Mj)
        (hashtable-update! . g$5689$T@1Mj)
        (hashtable-size . g$5684$T@1Mj)
        (hashtable-set! . g$5686$T@1Mj)
        (hashtable-ref . g$5685$T@1Mj)
        (hashtable-mutable? . g$11602$T@1Mj)
        (hashtable-keys . g$11601$T@1Mj)
        (hashtable-entries . g$11600$T@1Mj)
        (hashtable-delete! . g$5687$T@1Mj)
        (hashtable-copy . g$11599$T@1Mj)
        (hashtable-contains? . g$5688$T@1Mj)
        (hashtable-clear! . g$5690$T@1Mj)
        (call-with-output-file . g$6621$T@1Mj)
        (call-with-input-file . g$6620$T@1Mj)
        (write-char . g$6612$T@1Mj)
        (write . g$11598$T@1Mj)
        (with-output-to-file . g$6619$T@1Mj)
        (with-input-from-file . g$6618$T@1Mj)
        (read-char . g$6611$T@1Mj)
        (read . g$11597$T@1Mj)
        (peek-char . g$6610$T@1Mj)
        (open-output-file . g$11596$T@1Mj)
        (open-input-file . g$11595$T@1Mj)
        (newline . g$6622$T@1Mj)
        (display . g$11594$T@1Mj)
        (close-output-port . g$11593$T@1Mj)
        (close-input-port . g$11592$T@1Mj)
        (eof-object? . g$11591$T@1Mj)
        (eof-object . g$11590$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (utf-8-codec . g$11584$T@1Mj)
        (utf-16-codec . g$11583$T@1Mj)
        (transcoder-error-handling-mode . g$11582$T@1Mj)
        (transcoder-eol-style . g$11581$T@1Mj)
        (transcoder-codec . g$11580$T@1Mj)
        (transcoded-port . g$11579$T@1Mj)
        (textual-port? . g$11578$T@1Mj)
        (string->bytevector . g$11577$T@1Mj)
        (standard-output-port . g$11576$T@1Mj)
        (standard-input-port . g$11575$T@1Mj)
        (standard-error-port . g$11574$T@1Mj)
        (set-port-position! . g$11573$T@1Mj)
        (put-u8 . g$11572$T@1Mj)
        (put-string . g$11571$T@1Mj)
        (put-datum . g$6590$T@1Mj)
        (put-char . g$11570$T@1Mj)
        (put-bytevector . g$11569$T@1Mj)
        (port? . g$6595$T@1Mj)
        (port-transcoder . g$11568$T@1Mj)
        (port-position . g$11567$T@1Mj)
        (port-has-set-port-position!? . g$11566$T@1Mj)
        (port-has-port-position? . g$11565$T@1Mj)
        (port-eof? . g$11564$T@1Mj)
        (output-port-buffer-mode . g$11563$T@1Mj)
        (open-string-output-port . g$6594$T@1Mj)
        (open-string-input-port . g$11562$T@1Mj)
        (open-file-output-port . g$11561$T@1Mj)
        (open-file-input/output-port . g$11560$T@1Mj)
        (open-file-input-port . g$11559$T@1Mj)
        (open-bytevector-output-port . g$11558$T@1Mj)
        (open-bytevector-input-port . g$11557$T@1Mj)
        (native-transcoder . g$11556$T@1Mj)
        (native-eol-style . g$11555$T@1Mj)
        (make-transcoder . g$11554$T@1Mj)
        (latin-1-codec . g$11553$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (make-i/o-encoding-error . g$6211$T@1Mj)
        (make-i/o-decoding-error . g$6198$T@1Mj)
        (make-custom-textual-output-port . g$11552$T@1Mj)
        (make-custom-textual-input/output-port . g$11551$T@1Mj)
        (make-custom-textual-input-port . g$11550$T@1Mj)
        (make-custom-binary-output-port . g$11549$T@1Mj)
        (make-custom-binary-input/output-port . g$11548$T@1Mj)
        (make-custom-binary-input-port . g$11547$T@1Mj)
        (make-bytevector . g$11546$T@1Mj)
        (lookahead-u8 . g$11545$T@1Mj)
        (lookahead-char . g$11544$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (i/o-encoding-error? . g$6213$T@1Mj)
        (i/o-encoding-error-char . g$6214$T@1Mj)
        (i/o-decoding-error? . g$6199$T@1Mj)
        (get-u8 . g$11543$T@1Mj)
        (get-string-n! . g$11542$T@1Mj)
        (get-string-n . g$11541$T@1Mj)
        (get-string-all . g$11540$T@1Mj)
        (get-line . g$11539$T@1Mj)
        (get-datum . g$6591$T@1Mj)
        (get-char . g$11538$T@1Mj)
        (get-bytevector-some . g$11537$T@1Mj)
        (get-bytevector-n! . g$11536$T@1Mj)
        (get-bytevector-n . g$11535$T@1Mj)
        (get-bytevector-all . g$11534$T@1Mj)
        (flush-output-port . g$11533$T@1Mj)
        (close-port . g$11532$T@1Mj)
        (call-with-string-output-port . g$6596$T@1Mj)
        (call-with-port . g$6597$T@1Mj)
        (call-with-bytevector-output-port . g$11531$T@1Mj)
        (bytevector->string . g$11530$T@1Mj)
        (buffer-mode? . g$11529$T@1Mj)
        (binary-port? . g$11528$T@1Mj)
        (scheme-report-environment . g$8095$T@1Mj)
        (quotient . g$6257$T@1Mj)
        (null-environment . g$8094$T@1Mj)
        (remainder . g$6258$T@1Mj)
        (modulo . g$6259$T@1Mj)
        (inexact->exact . g$6254$T@1Mj)
        (force . g$6261$T@1Mj)
        (exact->inexact . g$6255$T@1Mj)
        (exit . g$11527$T@1Mj)
        (command-line . g$11134$T@1Mj)
        (string-fill! . g$11526$T@1Mj)
        (string-set! . g$11525$T@1Mj)
        (set-cdr! . g$11524$T@1Mj)
        (set-car! . g$11523$T@1Mj)
        (remove . g$5125$T@1Mj)
        (remv . g$5126$T@1Mj)
        (remp . g$5106$T@1Mj)
        (remq . g$5127$T@1Mj)
        (partition . g$5105$T@1Mj)
        (memv . g$5113$T@1Mj)
        (memq . g$5112$T@1Mj)
        (memp . g$5115$T@1Mj)
        (member . g$5114$T@1Mj)
        (exists . g$5119$T@1Mj)
        (for-all . g$5118$T@1Mj)
        (fold-right . g$5124$T@1Mj)
        (fold-left . g$5123$T@1Mj)
        (find . g$5104$T@1Mj)
        (filter . g$5107$T@1Mj)
        (cons* . g$5122$T@1Mj)
        (assv . g$5109$T@1Mj)
        (assq . g$5108$T@1Mj)
        (assp . g$5111$T@1Mj)
        (assoc . g$5110$T@1Mj)
        (with-exception-handler . g$11522$T@1Mj)
        (raise-continuable . g$11521$T@1Mj)
        (raise . g$11520$T@1Mj)
        (eval . g$8097$T@1Mj)
        (environment . g$8093$T@1Mj)
        (make-enumeration . g$6682$T@1Mj)
        (enum-set=? . g$6689$T@1Mj)
        (enum-set-universe . g$6683$T@1Mj)
        (enum-set-union . g$6690$T@1Mj)
        (enum-set-subset? . g$6688$T@1Mj)
        (enum-set-projection . g$6694$T@1Mj)
        (enum-set-member? . g$6687$T@1Mj)
        (enum-set-intersection . g$6691$T@1Mj)
        (enum-set-indexer . g$6684$T@1Mj)
        (enum-set-difference . g$6692$T@1Mj)
        (enum-set-constructor . g$6685$T@1Mj)
        (enum-set-complement . g$6693$T@1Mj)
        (enum-set->list . g$6686$T@1Mj)
        (who-condition? . g$5980$T@1Mj)
        (warning? . g$5899$T@1Mj)
        (violation? . g$5938$T@1Mj)
        (undefined-violation? . g$6050$T@1Mj)
        (syntax-violation? . g$6035$T@1Mj)
        (syntax-violation-subform . g$6037$T@1Mj)
        (syntax-violation-form . g$6036$T@1Mj)
        (syntax-violation . g$8115$T@1Mj)
        (simple-conditions . g$11519$T@1Mj)
        (serious-condition? . g$5912$T@1Mj)
        (non-continuable-violation? . g$5994$T@1Mj)
        (message-condition? . g$5885$T@1Mj)
        (make-who-condition . g$5978$T@1Mj)
        (make-warning . g$5898$T@1Mj)
        (make-violation . g$5937$T@1Mj)
        (make-undefined-violation . g$6049$T@1Mj)
        (make-syntax-violation . g$6032$T@1Mj)
        (make-serious-condition . g$5911$T@1Mj)
        (make-non-continuable-violation . g$5993$T@1Mj)
        (make-message-condition . g$5883$T@1Mj)
        (make-lexical-violation . g$6019$T@1Mj)
        (make-irritants-condition . g$5963$T@1Mj)
        (make-implementation-restriction-violation . g$6006$T@1Mj)
        (make-error . g$5924$T@1Mj)
        (make-assertion-violation . g$5950$T@1Mj)
        (lexical-violation? . g$6020$T@1Mj)
        (irritants-condition? . g$5965$T@1Mj)
        (implementation-restriction-violation? . g$6007$T@1Mj)
        (error? . g$5925$T@1Mj)
        (condition-who . g$5981$T@1Mj)
        (condition-predicate . g$11518$T@1Mj)
        (condition-message . g$5886$T@1Mj)
        (condition-irritants . g$5966$T@1Mj)
        (condition-accessor . g$11517$T@1Mj)
        (condition . g$11516$T@1Mj)
        (assertion-violation? . g$5951$T@1Mj)
        (condition? . g$11515$T@1Mj)
        (utf32->string . g$11514$T@1Mj)
        (utf16->string . g$11513$T@1Mj)
        (utf8->string . g$11512$T@1Mj)
        (uint-list->bytevector . g$11511$T@1Mj)
        (u8-list->bytevector . g$11510$T@1Mj)
        (string->utf8 . g$11509$T@1Mj)
        (string->utf32 . g$11508$T@1Mj)
        (string->utf16 . g$11507$T@1Mj)
        (sint-list->bytevector . g$11506$T@1Mj)
        (native-endianness . g$5722$T@1Mj)
        (bytevector? . g$5424$T@1Mj)
        (bytevector=? . g$11505$T@1Mj)
        (bytevector-uint-set! . g$11504$T@1Mj)
        (bytevector-uint-ref . g$11503$T@1Mj)
        (bytevector-u8-set! . g$11502$T@1Mj)
        (bytevector-u8-ref . g$11501$T@1Mj)
        (bytevector-u64-set! . g$5743$T@1Mj)
        (bytevector-u64-ref . g$5739$T@1Mj)
        (bytevector-u64-native-set! . g$5745$T@1Mj)
        (bytevector-u64-native-ref . g$5741$T@1Mj)
        (bytevector-u32-set! . g$5735$T@1Mj)
        (bytevector-u32-ref . g$5731$T@1Mj)
        (bytevector-u32-native-set! . g$5737$T@1Mj)
        (bytevector-u32-native-ref . g$5733$T@1Mj)
        (bytevector-u16-set! . g$5727$T@1Mj)
        (bytevector-u16-ref . g$5723$T@1Mj)
        (bytevector-u16-native-set! . g$5729$T@1Mj)
        (bytevector-u16-native-ref . g$5725$T@1Mj)
        (bytevector-sint-set! . g$11500$T@1Mj)
        (bytevector-sint-ref . g$11499$T@1Mj)
        (bytevector-s8-set! . g$11498$T@1Mj)
        (bytevector-s8-ref . g$11497$T@1Mj)
        (bytevector-s64-set! . g$5744$T@1Mj)
        (bytevector-s64-ref . g$5740$T@1Mj)
        (bytevector-s64-native-set! . g$5746$T@1Mj)
        (bytevector-s64-native-ref . g$5742$T@1Mj)
        (bytevector-s32-set! . g$5736$T@1Mj)
        (bytevector-s32-ref . g$5732$T@1Mj)
        (bytevector-s32-native-set! . g$5738$T@1Mj)
        (bytevector-s32-native-ref . g$5734$T@1Mj)
        (bytevector-s16-set! . g$5728$T@1Mj)
        (bytevector-s16-ref . g$5724$T@1Mj)
        (bytevector-s16-native-set! . g$5730$T@1Mj)
        (bytevector-s16-native-ref . g$5726$T@1Mj)
        (bytevector-length . g$11496$T@1Mj)
        (bytevector-ieee-single-set! . g$11495$T@1Mj)
        (bytevector-ieee-single-ref . g$11494$T@1Mj)
        (bytevector-ieee-single-native-set! . g$5749$T@1Mj)
        (bytevector-ieee-single-native-ref . g$5747$T@1Mj)
        (bytevector-ieee-double-set! . g$11493$T@1Mj)
        (bytevector-ieee-double-ref . g$11492$T@1Mj)
        (bytevector-ieee-double-native-set! . g$5750$T@1Mj)
        (bytevector-ieee-double-native-ref . g$5748$T@1Mj)
        (bytevector-fill! . g$11491$T@1Mj)
        (bytevector-copy! . g$11490$T@1Mj)
        (bytevector-copy . g$11489$T@1Mj)
        (bytevector->uint-list . g$11488$T@1Mj)
        (bytevector->u8-list . g$11487$T@1Mj)
        (bytevector->sint-list . g$11486$T@1Mj)
        (no-nans-violation? . g$6240$T@1Mj)
        (no-infinities-violation? . g$6227$T@1Mj)
        (make-no-nans-violation . g$6239$T@1Mj)
        (make-no-infinities-violation . g$6226$T@1Mj)
        (real->flonum . g$11485$T@1Mj)
        (flzero? . g$6536$T@1Mj)
        (fltruncate . g$6531$T@1Mj)
        (fltan . g$6521$T@1Mj)
        (flsqrt . g$6526$T@1Mj)
        (flsin . g$6519$T@1Mj)
        (flround . g$6532$T@1Mj)
        (flpositive? . g$6534$T@1Mj)
        (flonum? . g$5429$T@1Mj)
        (flodd? . g$6538$T@1Mj)
        (flnumerator . g$11484$T@1Mj)
        (flnegative? . g$6535$T@1Mj)
        (flnan? . g$6518$T@1Mj)
        (flmod0 . g$6512$T@1Mj)
        (flmod . g$6511$T@1Mj)
        (flmin . g$6540$T@1Mj)
        (flmax . g$6539$T@1Mj)
        (fllog . g$6525$T@1Mj)
        (flinteger? . g$6515$T@1Mj)
        (flinfinite? . g$6517$T@1Mj)
        (flfloor . g$6530$T@1Mj)
        (flfinite? . g$6516$T@1Mj)
        (flexpt . g$6528$T@1Mj)
        (flexp . g$6527$T@1Mj)
        (fleven? . g$6537$T@1Mj)
        (fldiv0-and-mod0 . g$6514$T@1Mj)
        (fldiv0 . g$11483$T@1Mj)
        (fldiv-and-mod . g$6513$T@1Mj)
        (fldiv . g$11482$T@1Mj)
        (fldenominator . g$11481$T@1Mj)
        (flcos . g$6520$T@1Mj)
        (flceiling . g$6529$T@1Mj)
        (flatan . g$6524$T@1Mj)
        (flasin . g$6522$T@1Mj)
        (flacos . g$6523$T@1Mj)
        (flabs . g$6533$T@1Mj)
        (fl>? . g$11480$T@1Mj)
        (fl>=? . g$11479$T@1Mj)
        (fl=? . g$11478$T@1Mj)
        (fl<? . g$11477$T@1Mj)
        (fl<=? . g$11476$T@1Mj)
        (fl/ . g$11475$T@1Mj)
        (fl- . g$11474$T@1Mj)
        (fl+ . g$11473$T@1Mj)
        (fl* . g$11472$T@1Mj)
        (fixnum->flonum . g$11471$T@1Mj)
        (fxzero? . g$6432$T@1Mj)
        (fxxor . g$11470$T@1Mj)
        (fxrotate-bit-field . g$6446$T@1Mj)
        (fxreverse-bit-field . g$11469$T@1Mj)
        (fxpositive? . g$6430$T@1Mj)
        (fxodd? . g$6434$T@1Mj)
        (fxnot . g$11468$T@1Mj)
        (fxnegative? . g$6431$T@1Mj)
        (fxmod0 . g$6427$T@1Mj)
        (fxmod . g$6426$T@1Mj)
        (fxmin . g$6436$T@1Mj)
        (fxmax . g$6435$T@1Mj)
        (fxlength . g$11467$T@1Mj)
        (fxior . g$11466$T@1Mj)
        (fxif . g$6440$T@1Mj)
        (fxfirst-bit-set . g$11465$T@1Mj)
        (fxeven? . g$6433$T@1Mj)
        (fxdiv0-and-mod0 . g$6429$T@1Mj)
        (fxdiv0 . g$11464$T@1Mj)
        (fxdiv-and-mod . g$6428$T@1Mj)
        (fxdiv . g$11463$T@1Mj)
        (fxcopy-bit-field . g$6443$T@1Mj)
        (fxcopy-bit . g$6441$T@1Mj)
        (fxbit-set? . g$11462$T@1Mj)
        (fxbit-field . g$6442$T@1Mj)
        (fxbit-count . g$11461$T@1Mj)
        (fxarithmetic-shift-right . g$6445$T@1Mj)
        (fxarithmetic-shift-left . g$6444$T@1Mj)
        (fxarithmetic-shift . g$11460$T@1Mj)
        (fxand . g$11459$T@1Mj)
        (fx>? . g$11458$T@1Mj)
        (fx>=? . g$11457$T@1Mj)
        (fx=? . g$11456$T@1Mj)
        (fx<? . g$11455$T@1Mj)
        (fx<=? . g$11454$T@1Mj)
        (fx-/carry . g$6438$T@1Mj)
        (fx- . g$11453$T@1Mj)
        (fx+/carry . g$6439$T@1Mj)
        (fx+ . g$11452$T@1Mj)
        (fx*/carry . g$6437$T@1Mj)
        (fx* . g$11451$T@1Mj)
        (greatest-fixnum . g$11450$T@1Mj)
        (least-fixnum . g$11449$T@1Mj)
        (fixnum-width . g$5430$T@1Mj)
        (fixnum? . g$5428$T@1Mj)
        (bitwise-rotate-bit-field . g$6389$T@1Mj)
        (bitwise-reverse-bit-field . g$11448$T@1Mj)
        (bitwise-length . g$11447$T@1Mj)
        (bitwise-if . g$6383$T@1Mj)
        (bitwise-first-bit-set . g$11446$T@1Mj)
        (bitwise-copy-bit-field . g$6386$T@1Mj)
        (bitwise-copy-bit . g$6384$T@1Mj)
        (bitwise-bit-set? . g$11445$T@1Mj)
        (bitwise-bit-field . g$6385$T@1Mj)
        (bitwise-bit-count . g$11444$T@1Mj)
        (bitwise-xor . g$11443$T@1Mj)
        (bitwise-ior . g$11442$T@1Mj)
        (bitwise-and . g$11441$T@1Mj)
        (bitwise-not . g$11440$T@1Mj)
        (bitwise-arithmetic-shift-right . g$6388$T@1Mj)
        (bitwise-arithmetic-shift-left . g$6387$T@1Mj)
        (bitwise-arithmetic-shift . g$11439$T@1Mj)
        (zero? . g$5464$T@1Mj)
        (vector? . g$5423$T@1Mj)
        (vector-set! . g$11438$T@1Mj)
        (vector-ref . g$11437$T@1Mj)
        (vector-map . g$5496$T@1Mj)
        (vector-length . g$11436$T@1Mj)
        (vector-for-each . g$5497$T@1Mj)
        (vector-fill! . g$5431$T@1Mj)
        (vector->list . g$11435$T@1Mj)
        (vector . g$11434$T@1Mj)
        (values . g$11433$T@1Mj)
        (truncate . g$11432$T@1Mj)
        (tan . g$11431$T@1Mj)
        (symbol? . g$5425$T@1Mj)
        (symbol=? . g$5481$T@1Mj)
        (symbol->string . g$11430$T@1Mj)
        (substring . g$11429$T@1Mj)
        (string? . g$11428$T@1Mj)
        (string>? . g$5478$T@1Mj)
        (string>=? . g$5480$T@1Mj)
        (string=? . g$5476$T@1Mj)
        (string<? . g$5477$T@1Mj)
        (string<=? . g$5479$T@1Mj)
        (string-ref . g$11427$T@1Mj)
        (string-length . g$11426$T@1Mj)
        (string-for-each . g$5498$T@1Mj)
        (string-copy . g$11425$T@1Mj)
        (string-append . g$11424$T@1Mj)
        (string->symbol . g$11423$T@1Mj)
        (string->number . g$11422$T@1Mj)
        (string->list . g$11421$T@1Mj)
        (string . g$11420$T@1Mj)
        (sqrt . g$11419$T@1Mj)
        (sin . g$11418$T@1Mj)
        (round . g$11417$T@1Mj)
        (reverse . g$5433$T@1Mj)
        (real? . g$11416$T@1Mj)
        (real-valued? . g$11415$T@1Mj)
        (real-part . g$11414$T@1Mj)
        (rationalize . g$5493$T@1Mj)
        (rational? . g$11413$T@1Mj)
        (rational-valued? . g$11412$T@1Mj)
        (procedure? . g$5427$T@1Mj)
        (positive? . g$5462$T@1Mj)
        (pair? . g$11411$T@1Mj)
        (odd? . g$5466$T@1Mj)
        (numerator . g$11410$T@1Mj)
        (number? . g$11409$T@1Mj)
        (number->string . g$11408$T@1Mj)
        (null? . g$11407$T@1Mj)
        (not . g$11406$T@1Mj)
        (negative? . g$5463$T@1Mj)
        (nan? . g$11405$T@1Mj)
        (min . g$5468$T@1Mj)
        (max . g$5467$T@1Mj)
        (map . g$5120$T@1Mj)
        (make-vector . g$11404$T@1Mj)
        (make-string . g$11403$T@1Mj)
        (make-rectangular . g$11402$T@1Mj)
        (make-polar . g$11401$T@1Mj)
        (magnitude . g$11400$T@1Mj)
        (log . g$11399$T@1Mj)
        (list? . g$11398$T@1Mj)
        (list-tail . g$5100$T@1Mj)
        (list-ref . g$5101$T@1Mj)
        (list->vector . g$5420$T@1Mj)
        (list->string . g$5421$T@1Mj)
        (list . g$11397$T@1Mj)
        (length . g$11396$T@1Mj)
        (lcm . g$5470$T@1Mj)
        (integer? . g$11395$T@1Mj)
        (integer-valued? . g$11394$T@1Mj)
        (integer->char . g$11393$T@1Mj)
        (infinite? . g$11392$T@1Mj)
        (inexact? . g$11391$T@1Mj)
        (inexact . g$11390$T@1Mj)
        (imag-part . g$11389$T@1Mj)
        (gcd . g$5469$T@1Mj)
        (for-each . g$5121$T@1Mj)
        (floor . g$11388$T@1Mj)
        (finite? . g$11387$T@1Mj)
        (expt . g$11386$T@1Mj)
        (exp . g$11385$T@1Mj)
        (exact? . g$11384$T@1Mj)
        (exact-integer-sqrt . g$11383$T@1Mj)
        (exact . g$11382$T@1Mj)
        (even? . g$5465$T@1Mj)
        (error . g$11381$T@1Mj)
        (eqv? . g$11380$T@1Mj)
        (equal? . g$11379$T@1Mj)
        (eq? . g$11378$T@1Mj)
        (dynamic-wind . g$11377$T@1Mj)
        (div0-and-mod0 . g$5419$T@1Mj)
        (mod0 . g$5417$T@1Mj)
        (div0 . g$11376$T@1Mj)
        (div-and-mod . g$5418$T@1Mj)
        (mod . g$5416$T@1Mj)
        (div . g$11375$T@1Mj)
        (denominator . g$11374$T@1Mj)
        (cos . g$11373$T@1Mj)
        (cons . g$11372$T@1Mj)
        (complex? . g$11371$T@1Mj)
        (char? . g$5422$T@1Mj)
        (char>? . g$5490$T@1Mj)
        (char>=? . g$5492$T@1Mj)
        (char=? . g$5488$T@1Mj)
        (char<? . g$5489$T@1Mj)
        (char<=? . g$5491$T@1Mj)
        (char->integer . g$11370$T@1Mj)
        (ceiling . g$11369$T@1Mj)
        (call-with-values . g$11368$T@1Mj)
        (call/cc . g$11367$T@1Mj)
        (call-with-current-continuation . g$11366$T@1Mj)
        (cddddr . g$5461$T@1Mj)
        (cdddar . g$5460$T@1Mj)
        (cddadr . g$5459$T@1Mj)
        (cddaar . g$5458$T@1Mj)
        (cdaddr . g$5457$T@1Mj)
        (cdadar . g$5456$T@1Mj)
        (cdaadr . g$5455$T@1Mj)
        (cdaaar . g$5454$T@1Mj)
        (cadddr . g$5453$T@1Mj)
        (caddar . g$5452$T@1Mj)
        (cadadr . g$5451$T@1Mj)
        (cadaar . g$5450$T@1Mj)
        (caaddr . g$5449$T@1Mj)
        (caadar . g$5448$T@1Mj)
        (caaadr . g$5447$T@1Mj)
        (caaaar . g$5446$T@1Mj)
        (cdddr . g$5445$T@1Mj)
        (cddar . g$5444$T@1Mj)
        (cdadr . g$5443$T@1Mj)
        (cdaar . g$5442$T@1Mj)
        (caddr . g$5441$T@1Mj)
        (cadar . g$5440$T@1Mj)
        (caadr . g$5439$T@1Mj)
        (caaar . g$5438$T@1Mj)
        (cddr . g$5437$T@1Mj)
        (cdar . g$5436$T@1Mj)
        (cadr . g$5435$T@1Mj)
        (caar . g$5434$T@1Mj)
        (cdr . g$11365$T@1Mj)
        (car . g$11364$T@1Mj)
        (boolean? . g$5426$T@1Mj)
        (boolean=? . g$5482$T@1Mj)
        (atan . g$11363$T@1Mj)
        (assertion-violation . g$11362$T@1Mj)
        (asin . g$11361$T@1Mj)
        (apply . g$11360$T@1Mj)
        (append . g$11359$T@1Mj)
        (angle . g$11358$T@1Mj)
        (acos . g$11357$T@1Mj)
        (abs . g$11356$T@1Mj)
        (/ . g$11355$T@1Mj)
        (* . g$11354$T@1Mj)
        (- . g$11353$T@1Mj)
        (+ . g$11352$T@1Mj)
        (>= . g$11351$T@1Mj)
        (> . g$11350$T@1Mj)
        (= . g$11349$T@1Mj)
        (<= . g$11348$T@1Mj)
        (< . g$11347$T@1Mj)
        (deserialize-port . g$11324$T@1Mj)
        (serialize-port . g$11323$T@1Mj)
        (enum-set? . g$6659$T@1Mj)
        (load/unload . g$11137$T@1Mj)
        (load/args . g$11136$T@1Mj)
        (printf . g$6768$T@1Mj)
        (fprintf . g$6769$T@1Mj)
        (format . g$6770$T@1Mj)
        (procedure-form . g$11322$T@1Mj)
        (procedure-environment . g$11321$T@1Mj)
        (procedure-name . g$11320$T@1Mj)
        (procedure-arity . g$11319$T@1Mj)
        (gc-collect . g$11318$T@1Mj)
        (typeof . g$11317$T@1Mj)
        (clr-type? . g$11316$T@1Mj)
        (get-clr-type . g$11315$T@1Mj)
        (vector-append . g$11313$T@1Mj)
        (vector-filter . g$11312$T@1Mj)
        (vector-reverse! . g$11311$T@1Mj)
        (vector-contains? . g$11310$T@1Mj)
        (vector-index-of . g$11309$T@1Mj)
        (vector-copy . g$11308$T@1Mj)
        (vector-binary-search . g$11307$T@1Mj)
        (string-ci-compare . g$11306$T@1Mj)
        (string-compare . g$11305$T@1Mj)
        (string-format . g$11304$T@1Mj)
        (trace-printer . g$11133$T@1Mj)
        (time-it . g$11302$T@1Mj)
        (make-parameter . g$6797$T@1Mj)
        (open-tcp-input/output-port . g$11299$T@1Mj)
        (hashtable-for-each . g$11298$T@1Mj)
        (hashtable-map . g$11297$T@1Mj)
        (environment-bindings . g$8089$T@1Mj)
        (environment-symbols . g$8092$T@1Mj)
        (interaction-environment-symbols . g$8088$T@1Mj)
        (optimization-level . g$11296$T@1Mj)
        (library-path . g$7419$T@1Mj)
        (make-compile-time-value . g$7797$T@1Mj)
        (expand->core . g$8098$T@1Mj)
        (expand . g$8096$T@1Mj)
        (syntax-transpose . g$8035$T@1Mj)
        (convert->cps . g$7116$T@1Mj)
        (installed-libraries . g$7440$T@1Mj)
        (uninstall-library . g$7431$T@1Mj)
        (pretty-gensyms . g$6880$T@1Mj)
        (pretty-width . g$6877$T@1Mj)
        (pretty-print . g$6882$T@1Mj)
        (&no-nans . g$11295$T@1Mj)
        (&no-infinities . g$11294$T@1Mj)
        (&i/o-encoding . g$11293$T@1Mj)
        (&i/o-decoding . g$11292$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj)
        (&non-continuable . g$11281$T@1Mj)
        (&undefined . g$11280$T@1Mj)
        (&syntax . g$11279$T@1Mj)
        (&lexical . g$11278$T@1Mj)
        (&implementation-restriction . g$11277$T@1Mj)
        (&who . g$11276$T@1Mj)
        (&irritants . g$11275$T@1Mj)
        (&assertion . g$11274$T@1Mj)
        (&violation . g$11273$T@1Mj)
        (&error . g$11272$T@1Mj)
        (&serious . g$11271$T@1Mj)
        (&warning . g$11270$T@1Mj)
        (&message . g$11269$T@1Mj)
        (&condition . g$11268$T@1Mj)
        (define-condition-type . g$11267$T@1Mj)
        (define-enumeration . g$11266$T@1Mj)
        (define-record-type . g$11265$T@1Mj)
        (parent-rtd . g$11264$T@1Mj)
        (nongenerative . g$11263$T@1Mj)
        (opaque . g$11262$T@1Mj)
        (sealed . g$11261$T@1Mj)
        (protocol . g$11260$T@1Mj)
        (parent . g$11259$T@1Mj)
        (immutable . g$11258$T@1Mj)
        (mutable . g$11257$T@1Mj)
        (fields . g$11256$T@1Mj)
        (error-handling-mode . g$11255$T@1Mj)
        (file-options . g$11254$T@1Mj)
        (buffer-mode . g$11253$T@1Mj)
        (eol-style . g$11252$T@1Mj)
        (guard . g$11251$T@1Mj)
        (trace-letrec-syntax . g$11250$T@1Mj)
        (trace-let-syntax . g$11249$T@1Mj)
        (trace-define-syntax . g$11248$T@1Mj)
        (trace-define . g$11247$T@1Mj)
        (trace-lambda . g$11246$T@1Mj)
        (unsyntax-splicing . g$11245$T@1Mj)
        (unsyntax . g$11244$T@1Mj)
        (unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (_ . g$11241$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (... . g$11238$T@1Mj)
        (assert . g$11237$T@1Mj)
        (endianness . g$11236$T@1Mj)
        (delay . g$11235$T@1Mj)
        (time . g$11234$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (do . g$11231$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (identifier-syntax . g$11227$T@1Mj)
        (with-syntax . g$11226$T@1Mj)
        (quasisyntax . g$11225$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (include-into . g$11222$T@1Mj)
        (include . g$11221$T@1Mj)
        (let-values . g$11219$T@1Mj)
        (let*-values . g$11218$T@1Mj)
        (record-constructor-descriptor . g$11217$T@1Mj)
        (record-type-descriptor . g$11216$T@1Mj)
        (fluid-let-syntax . g$11215$T@1Mj)
        (case . g$11214$T@1Mj)
        (parameterize . g$11213$T@1Mj)
        (unless . g$11212$T@1Mj)
        (when . g$11211$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec* . g$11209$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (case-lambda . g$11206$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (syntax . g$11204$T@1Mj)
        (syntax-case . g$11203$T@1Mj)
        (quote . g$11202$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (export . g$11197$T@1Mj)
        (import . g$11196$T@1Mj)
        (library . g$11195$T@1Mj)
        (begin . g$11194$T@1Mj)
        (module . g$11193$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11683$T@1Mj
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11300$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11684$T@1Mj
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11680$T@1Mj)
        (annotation-source . g$11679$T@1Mj)
        (annotation-expression . g$11678$T@1Mj)
        (annotation? . g$11677$T@1Mj)
        (read-annotated . g$11676$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11685$T@1Mj
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11648$T@1Mj)
        (serialize-library . g$11647$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11686$T@1Mj
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$11646$T@1Mj)
        (variable-transformer-procedure . g$7799$T@1Mj)
        (variable-transformer? . g$7798$T@1Mj)
        (eqv-hash . g$11326$T@1Mj)
        (reverse! . g$11325$T@1Mj)
        (make-promise . g$6260$T@1Mj)
        (format . g$6770$T@1Mj)
        (get-command-line . g$11314$T@1Mj)
        (make-traced-procedure . g$11303$T@1Mj)
        (make-traced-macro . g$6790$T@1Mj)
        (assertion-error . g$8111$T@1Mj)
        (library-locator . g$11301$T@1Mj)
        (get-library-paths . g$11300$T@1Mj)
        (library-path . g$7419$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11687$T@1Mj
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($$fxnot . g$11346$T@1Mj)
        ($$fx- . g$11345$T@1Mj)
        ($$fx* . g$11344$T@1Mj)
        ($$fx+ . g$11343$T@1Mj)
        ($fxxor . g$11342$T@1Mj)
        ($fxior . g$11341$T@1Mj)
        ($fxand . g$11340$T@1Mj)
        ($fx>=? . g$11339$T@1Mj)
        ($fx>? . g$11338$T@1Mj)
        ($fx<=? . g$11337$T@1Mj)
        ($fx<? . g$11336$T@1Mj)
        ($fx- . g$11335$T@1Mj)
        ($fx* . g$11334$T@1Mj)
        ($fx+ . g$11333$T@1Mj)
        ($fx=? . g$11332$T@1Mj)
        ($vector-set! . g$11331$T@1Mj)
        ($vector-ref . g$11330$T@1Mj)
        ($cdr . g$11329$T@1Mj)
        ($car . g$11328$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11688$T@1Mj
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11327$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11689$T@1Mj
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11667$T@1Mj)
        (clr-field-set!-internal . g$11666$T@1Mj)
        (clr-field-get-internal . g$11665$T@1Mj)
        (clr-cast-internal . g$11664$T@1Mj)
        (clr-call-internal . g$11663$T@1Mj)
        (clr-new-internal . g$11662$T@1Mj)
        (clr-new-array-internal . g$11661$T@1Mj)
        (clr-is-internal . g$11660$T@1Mj)
        (clr-reference-internal . g$11659$T@1Mj)
        (clr-using-internal . g$11658$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11690$T@1Mj
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (delay . g$11235$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (do . g$11231$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (case . g$11214$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (quote . g$11202$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (begin . g$11194$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11691$T@1Mj
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$11645$T@1Mj)
        (string-ci>? . g$6309$T@1Mj)
        (string-ci>=? . g$6311$T@1Mj)
        (string-ci=? . g$6307$T@1Mj)
        (string-ci<? . g$6308$T@1Mj)
        (string-ci<=? . g$6310$T@1Mj)
        (char-whitespace? . g$11640$T@1Mj)
        (char-upper-case? . g$11639$T@1Mj)
        (char-numeric? . g$11637$T@1Mj)
        (char-lower-case? . g$11636$T@1Mj)
        (char-upcase . g$11634$T@1Mj)
        (char-downcase . g$11631$T@1Mj)
        (char-ci>? . g$6319$T@1Mj)
        (char-ci>=? . g$6321$T@1Mj)
        (char-ci=? . g$6317$T@1Mj)
        (char-ci<? . g$6318$T@1Mj)
        (char-ci<=? . g$6320$T@1Mj)
        (char-alphabetic? . g$11630$T@1Mj)
        (call-with-output-file . g$6621$T@1Mj)
        (call-with-input-file . g$6620$T@1Mj)
        (write-char . g$6612$T@1Mj)
        (write . g$11598$T@1Mj)
        (with-output-to-file . g$6619$T@1Mj)
        (with-input-from-file . g$6618$T@1Mj)
        (read-char . g$6611$T@1Mj)
        (read . g$11597$T@1Mj)
        (peek-char . g$6610$T@1Mj)
        (open-output-file . g$11596$T@1Mj)
        (open-input-file . g$11595$T@1Mj)
        (newline . g$6622$T@1Mj)
        (display . g$11594$T@1Mj)
        (close-output-port . g$11593$T@1Mj)
        (close-input-port . g$11592$T@1Mj)
        (eof-object? . g$11591$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (scheme-report-environment . g$8095$T@1Mj)
        (quotient . g$6257$T@1Mj)
        (null-environment . g$8094$T@1Mj)
        (remainder . g$6258$T@1Mj)
        (modulo . g$6259$T@1Mj)
        (inexact->exact . g$6254$T@1Mj)
        (force . g$6261$T@1Mj)
        (exact->inexact . g$6255$T@1Mj)
        (string-fill! . g$11526$T@1Mj)
        (string-set! . g$11525$T@1Mj)
        (set-cdr! . g$11524$T@1Mj)
        (set-car! . g$11523$T@1Mj)
        (memv . g$5113$T@1Mj)
        (memq . g$5112$T@1Mj)
        (member . g$5114$T@1Mj)
        (assv . g$5109$T@1Mj)
        (assq . g$5108$T@1Mj)
        (assoc . g$5110$T@1Mj)
        (eval . g$8097$T@1Mj)
        (zero? . g$5464$T@1Mj)
        (vector? . g$5423$T@1Mj)
        (vector-set! . g$11438$T@1Mj)
        (vector-ref . g$11437$T@1Mj)
        (vector-length . g$11436$T@1Mj)
        (vector-fill! . g$5431$T@1Mj)
        (vector->list . g$11435$T@1Mj)
        (vector . g$11434$T@1Mj)
        (values . g$11433$T@1Mj)
        (truncate . g$11432$T@1Mj)
        (tan . g$11431$T@1Mj)
        (symbol? . g$5425$T@1Mj)
        (symbol->string . g$11430$T@1Mj)
        (substring . g$11429$T@1Mj)
        (string? . g$11428$T@1Mj)
        (string>? . g$5478$T@1Mj)
        (string>=? . g$5480$T@1Mj)
        (string=? . g$5476$T@1Mj)
        (string<? . g$5477$T@1Mj)
        (string<=? . g$5479$T@1Mj)
        (string-ref . g$11427$T@1Mj)
        (string-length . g$11426$T@1Mj)
        (string-copy . g$11425$T@1Mj)
        (string-append . g$11424$T@1Mj)
        (string->symbol . g$11423$T@1Mj)
        (string->number . g$11422$T@1Mj)
        (string->list . g$11421$T@1Mj)
        (string . g$11420$T@1Mj)
        (sqrt . g$11419$T@1Mj)
        (sin . g$11418$T@1Mj)
        (round . g$11417$T@1Mj)
        (reverse . g$5433$T@1Mj)
        (real? . g$11416$T@1Mj)
        (real-part . g$11414$T@1Mj)
        (rationalize . g$5493$T@1Mj)
        (rational? . g$11413$T@1Mj)
        (procedure? . g$5427$T@1Mj)
        (positive? . g$5462$T@1Mj)
        (pair? . g$11411$T@1Mj)
        (odd? . g$5466$T@1Mj)
        (numerator . g$11410$T@1Mj)
        (number? . g$11409$T@1Mj)
        (number->string . g$11408$T@1Mj)
        (null? . g$11407$T@1Mj)
        (not . g$11406$T@1Mj)
        (negative? . g$5463$T@1Mj)
        (min . g$5468$T@1Mj)
        (max . g$5467$T@1Mj)
        (map . g$5120$T@1Mj)
        (make-vector . g$11404$T@1Mj)
        (make-string . g$11403$T@1Mj)
        (make-rectangular . g$11402$T@1Mj)
        (make-polar . g$11401$T@1Mj)
        (magnitude . g$11400$T@1Mj)
        (log . g$11399$T@1Mj)
        (list? . g$11398$T@1Mj)
        (list-tail . g$5100$T@1Mj)
        (list-ref . g$5101$T@1Mj)
        (list->vector . g$5420$T@1Mj)
        (list->string . g$5421$T@1Mj)
        (list . g$11397$T@1Mj)
        (length . g$11396$T@1Mj)
        (lcm . g$5470$T@1Mj)
        (integer? . g$11395$T@1Mj)
        (integer->char . g$11393$T@1Mj)
        (inexact? . g$11391$T@1Mj)
        (imag-part . g$11389$T@1Mj)
        (gcd . g$5469$T@1Mj)
        (for-each . g$5121$T@1Mj)
        (floor . g$11388$T@1Mj)
        (expt . g$11386$T@1Mj)
        (exp . g$11385$T@1Mj)
        (exact? . g$11384$T@1Mj)
        (even? . g$5465$T@1Mj)
        (eqv? . g$11380$T@1Mj)
        (equal? . g$11379$T@1Mj)
        (eq? . g$11378$T@1Mj)
        (dynamic-wind . g$11377$T@1Mj)
        (denominator . g$11374$T@1Mj)
        (cos . g$11373$T@1Mj)
        (cons . g$11372$T@1Mj)
        (complex? . g$11371$T@1Mj)
        (char? . g$5422$T@1Mj)
        (char>? . g$5490$T@1Mj)
        (char>=? . g$5492$T@1Mj)
        (char=? . g$5488$T@1Mj)
        (char<? . g$5489$T@1Mj)
        (char<=? . g$5491$T@1Mj)
        (char->integer . g$11370$T@1Mj)
        (ceiling . g$11369$T@1Mj)
        (call-with-values . g$11368$T@1Mj)
        (call-with-current-continuation . g$11366$T@1Mj)
        (cddddr . g$5461$T@1Mj)
        (cdddar . g$5460$T@1Mj)
        (cddadr . g$5459$T@1Mj)
        (cddaar . g$5458$T@1Mj)
        (cdaddr . g$5457$T@1Mj)
        (cdadar . g$5456$T@1Mj)
        (cdaadr . g$5455$T@1Mj)
        (cdaaar . g$5454$T@1Mj)
        (cadddr . g$5453$T@1Mj)
        (caddar . g$5452$T@1Mj)
        (cadadr . g$5451$T@1Mj)
        (cadaar . g$5450$T@1Mj)
        (caaddr . g$5449$T@1Mj)
        (caadar . g$5448$T@1Mj)
        (caaadr . g$5447$T@1Mj)
        (caaaar . g$5446$T@1Mj)
        (cdddr . g$5445$T@1Mj)
        (cddar . g$5444$T@1Mj)
        (cdadr . g$5443$T@1Mj)
        (cdaar . g$5442$T@1Mj)
        (caddr . g$5441$T@1Mj)
        (cadar . g$5440$T@1Mj)
        (caadr . g$5439$T@1Mj)
        (caaar . g$5438$T@1Mj)
        (cddr . g$5437$T@1Mj)
        (cdar . g$5436$T@1Mj)
        (cadr . g$5435$T@1Mj)
        (caar . g$5434$T@1Mj)
        (cdr . g$11365$T@1Mj)
        (car . g$11364$T@1Mj)
        (boolean? . g$5426$T@1Mj)
        (atan . g$11363$T@1Mj)
        (asin . g$11361$T@1Mj)
        (apply . g$11360$T@1Mj)
        (append . g$11359$T@1Mj)
        (angle . g$11358$T@1Mj)
        (acos . g$11357$T@1Mj)
        (abs . g$11356$T@1Mj)
        (/ . g$11355$T@1Mj)
        (* . g$11354$T@1Mj)
        (- . g$11353$T@1Mj)
        (+ . g$11352$T@1Mj)
        (>= . g$11351$T@1Mj)
        (> . g$11350$T@1Mj)
        (= . g$11349$T@1Mj)
        (<= . g$11348$T@1Mj)
        (< . g$11347$T@1Mj)
        (unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (... . g$11238$T@1Mj)
        (delay . g$11235$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (do . g$11231$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (case . g$11214$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (quote . g$11202$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (begin . g$11194$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11692$T@1Mj
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11644$T@1Mj)
        (string-titlecase . g$11643$T@1Mj)
        (string-normalize-nfkd . g$6325$T@1Mj)
        (string-normalize-nfkc . g$6324$T@1Mj)
        (string-normalize-nfd . g$6323$T@1Mj)
        (string-normalize-nfc . g$6322$T@1Mj)
        (string-foldcase . g$11642$T@1Mj)
        (string-downcase . g$11641$T@1Mj)
        (string-ci>? . g$6309$T@1Mj)
        (string-ci>=? . g$6311$T@1Mj)
        (string-ci=? . g$6307$T@1Mj)
        (string-ci<? . g$6308$T@1Mj)
        (string-ci<=? . g$6310$T@1Mj)
        (char-whitespace? . g$11640$T@1Mj)
        (char-upper-case? . g$11639$T@1Mj)
        (char-title-case? . g$11638$T@1Mj)
        (char-numeric? . g$11637$T@1Mj)
        (char-lower-case? . g$11636$T@1Mj)
        (char-general-category . g$11635$T@1Mj)
        (char-upcase . g$11634$T@1Mj)
        (char-titlecase . g$11633$T@1Mj)
        (char-foldcase . g$11632$T@1Mj)
        (char-downcase . g$11631$T@1Mj)
        (char-ci>? . g$6319$T@1Mj)
        (char-ci>=? . g$6321$T@1Mj)
        (char-ci=? . g$6317$T@1Mj)
        (char-ci<? . g$6318$T@1Mj)
        (char-ci<=? . g$6320$T@1Mj)
        (char-alphabetic? . g$11630$T@1Mj)
        (make-variable-transformer . g$7796$T@1Mj)
        (identifier? . g$8116$T@1Mj)
        (generate-temporaries . g$8105$T@1Mj)
        (free-identifier=? . g$8106$T@1Mj)
        (syntax->datum . g$8118$T@1Mj)
        (datum->syntax . g$8117$T@1Mj)
        (bound-identifier=? . g$8107$T@1Mj)
        (record-type-descriptor? . g$11629$T@1Mj)
        (record-predicate . g$11628$T@1Mj)
        (record-mutator . g$11627$T@1Mj)
        (record-constructor . g$11626$T@1Mj)
        (record-accessor . g$11625$T@1Mj)
        (make-record-type-descriptor . g$11624$T@1Mj)
        (make-record-constructor-descriptor . g$11623$T@1Mj)
        (record? . g$11622$T@1Mj)
        (record-type-uid . g$11621$T@1Mj)
        (record-type-sealed? . g$11620$T@1Mj)
        (record-type-parent . g$11619$T@1Mj)
        (record-type-opaque? . g$11618$T@1Mj)
        (record-type-name . g$11617$T@1Mj)
        (record-type-generative? . g$11616$T@1Mj)
        (record-type-field-names . g$11615$T@1Mj)
        (record-rtd . g$11614$T@1Mj)
        (record-field-mutable? . g$11613$T@1Mj)
        (delete-file . g$5716$T@1Mj)
        (file-exists? . g$5715$T@1Mj)
        (vector-sort! . g$11612$T@1Mj)
        (vector-sort . g$11611$T@1Mj)
        (list-sort . g$6278$T@1Mj)
        (symbol-hash . g$11610$T@1Mj)
        (string-ci-hash . g$11609$T@1Mj)
        (string-hash . g$11608$T@1Mj)
        (equal-hash . g$11607$T@1Mj)
        (hashtable-equivalence-function . g$11606$T@1Mj)
        (make-hashtable . g$11605$T@1Mj)
        (hashtable-hash-function . g$11604$T@1Mj)
        (make-eqv-hashtable . g$5683$T@1Mj)
        (make-eq-hashtable . g$5682$T@1Mj)
        (hashtable? . g$11603$T@1Mj)
        (hashtable-update! . g$5689$T@1Mj)
        (hashtable-size . g$5684$T@1Mj)
        (hashtable-set! . g$5686$T@1Mj)
        (hashtable-ref . g$5685$T@1Mj)
        (hashtable-mutable? . g$11602$T@1Mj)
        (hashtable-keys . g$11601$T@1Mj)
        (hashtable-entries . g$11600$T@1Mj)
        (hashtable-delete! . g$5687$T@1Mj)
        (hashtable-copy . g$11599$T@1Mj)
        (hashtable-contains? . g$5688$T@1Mj)
        (hashtable-clear! . g$5690$T@1Mj)
        (call-with-output-file . g$6621$T@1Mj)
        (call-with-input-file . g$6620$T@1Mj)
        (write-char . g$6612$T@1Mj)
        (write . g$11598$T@1Mj)
        (with-output-to-file . g$6619$T@1Mj)
        (with-input-from-file . g$6618$T@1Mj)
        (read-char . g$6611$T@1Mj)
        (read . g$11597$T@1Mj)
        (peek-char . g$6610$T@1Mj)
        (open-output-file . g$11596$T@1Mj)
        (open-input-file . g$11595$T@1Mj)
        (newline . g$6622$T@1Mj)
        (display . g$11594$T@1Mj)
        (close-output-port . g$11593$T@1Mj)
        (close-input-port . g$11592$T@1Mj)
        (eof-object? . g$11591$T@1Mj)
        (eof-object . g$11590$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (utf-8-codec . g$11584$T@1Mj)
        (utf-16-codec . g$11583$T@1Mj)
        (transcoder-error-handling-mode . g$11582$T@1Mj)
        (transcoder-eol-style . g$11581$T@1Mj)
        (transcoder-codec . g$11580$T@1Mj)
        (transcoded-port . g$11579$T@1Mj)
        (textual-port? . g$11578$T@1Mj)
        (string->bytevector . g$11577$T@1Mj)
        (standard-output-port . g$11576$T@1Mj)
        (standard-input-port . g$11575$T@1Mj)
        (standard-error-port . g$11574$T@1Mj)
        (set-port-position! . g$11573$T@1Mj)
        (put-u8 . g$11572$T@1Mj)
        (put-string . g$11571$T@1Mj)
        (put-datum . g$6590$T@1Mj)
        (put-char . g$11570$T@1Mj)
        (put-bytevector . g$11569$T@1Mj)
        (port? . g$6595$T@1Mj)
        (port-transcoder . g$11568$T@1Mj)
        (port-position . g$11567$T@1Mj)
        (port-has-set-port-position!? . g$11566$T@1Mj)
        (port-has-port-position? . g$11565$T@1Mj)
        (port-eof? . g$11564$T@1Mj)
        (output-port-buffer-mode . g$11563$T@1Mj)
        (open-string-output-port . g$6594$T@1Mj)
        (open-string-input-port . g$11562$T@1Mj)
        (open-file-output-port . g$11561$T@1Mj)
        (open-file-input/output-port . g$11560$T@1Mj)
        (open-file-input-port . g$11559$T@1Mj)
        (open-bytevector-output-port . g$11558$T@1Mj)
        (open-bytevector-input-port . g$11557$T@1Mj)
        (native-transcoder . g$11556$T@1Mj)
        (native-eol-style . g$11555$T@1Mj)
        (make-transcoder . g$11554$T@1Mj)
        (latin-1-codec . g$11553$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (make-i/o-encoding-error . g$6211$T@1Mj)
        (make-i/o-decoding-error . g$6198$T@1Mj)
        (make-custom-textual-output-port . g$11552$T@1Mj)
        (make-custom-textual-input/output-port . g$11551$T@1Mj)
        (make-custom-textual-input-port . g$11550$T@1Mj)
        (make-custom-binary-output-port . g$11549$T@1Mj)
        (make-custom-binary-input/output-port . g$11548$T@1Mj)
        (make-custom-binary-input-port . g$11547$T@1Mj)
        (make-bytevector . g$11546$T@1Mj)
        (lookahead-u8 . g$11545$T@1Mj)
        (lookahead-char . g$11544$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (i/o-encoding-error? . g$6213$T@1Mj)
        (i/o-encoding-error-char . g$6214$T@1Mj)
        (i/o-decoding-error? . g$6199$T@1Mj)
        (get-u8 . g$11543$T@1Mj)
        (get-string-n! . g$11542$T@1Mj)
        (get-string-n . g$11541$T@1Mj)
        (get-string-all . g$11540$T@1Mj)
        (get-line . g$11539$T@1Mj)
        (get-datum . g$6591$T@1Mj)
        (get-char . g$11538$T@1Mj)
        (get-bytevector-some . g$11537$T@1Mj)
        (get-bytevector-n! . g$11536$T@1Mj)
        (get-bytevector-n . g$11535$T@1Mj)
        (get-bytevector-all . g$11534$T@1Mj)
        (flush-output-port . g$11533$T@1Mj)
        (close-port . g$11532$T@1Mj)
        (call-with-string-output-port . g$6596$T@1Mj)
        (call-with-port . g$6597$T@1Mj)
        (call-with-bytevector-output-port . g$11531$T@1Mj)
        (bytevector->string . g$11530$T@1Mj)
        (buffer-mode? . g$11529$T@1Mj)
        (binary-port? . g$11528$T@1Mj)
        (exit . g$11527$T@1Mj)
        (command-line . g$11134$T@1Mj)
        (remove . g$5125$T@1Mj)
        (remv . g$5126$T@1Mj)
        (remp . g$5106$T@1Mj)
        (remq . g$5127$T@1Mj)
        (partition . g$5105$T@1Mj)
        (memv . g$5113$T@1Mj)
        (memq . g$5112$T@1Mj)
        (memp . g$5115$T@1Mj)
        (member . g$5114$T@1Mj)
        (exists . g$5119$T@1Mj)
        (for-all . g$5118$T@1Mj)
        (fold-right . g$5124$T@1Mj)
        (fold-left . g$5123$T@1Mj)
        (find . g$5104$T@1Mj)
        (filter . g$5107$T@1Mj)
        (cons* . g$5122$T@1Mj)
        (assv . g$5109$T@1Mj)
        (assq . g$5108$T@1Mj)
        (assp . g$5111$T@1Mj)
        (assoc . g$5110$T@1Mj)
        (with-exception-handler . g$11522$T@1Mj)
        (raise-continuable . g$11521$T@1Mj)
        (raise . g$11520$T@1Mj)
        (make-enumeration . g$6682$T@1Mj)
        (enum-set=? . g$6689$T@1Mj)
        (enum-set-universe . g$6683$T@1Mj)
        (enum-set-union . g$6690$T@1Mj)
        (enum-set-subset? . g$6688$T@1Mj)
        (enum-set-projection . g$6694$T@1Mj)
        (enum-set-member? . g$6687$T@1Mj)
        (enum-set-intersection . g$6691$T@1Mj)
        (enum-set-indexer . g$6684$T@1Mj)
        (enum-set-difference . g$6692$T@1Mj)
        (enum-set-constructor . g$6685$T@1Mj)
        (enum-set-complement . g$6693$T@1Mj)
        (enum-set->list . g$6686$T@1Mj)
        (who-condition? . g$5980$T@1Mj)
        (warning? . g$5899$T@1Mj)
        (violation? . g$5938$T@1Mj)
        (undefined-violation? . g$6050$T@1Mj)
        (syntax-violation? . g$6035$T@1Mj)
        (syntax-violation-subform . g$6037$T@1Mj)
        (syntax-violation-form . g$6036$T@1Mj)
        (syntax-violation . g$8115$T@1Mj)
        (simple-conditions . g$11519$T@1Mj)
        (serious-condition? . g$5912$T@1Mj)
        (non-continuable-violation? . g$5994$T@1Mj)
        (message-condition? . g$5885$T@1Mj)
        (make-who-condition . g$5978$T@1Mj)
        (make-warning . g$5898$T@1Mj)
        (make-violation . g$5937$T@1Mj)
        (make-undefined-violation . g$6049$T@1Mj)
        (make-syntax-violation . g$6032$T@1Mj)
        (make-serious-condition . g$5911$T@1Mj)
        (make-non-continuable-violation . g$5993$T@1Mj)
        (make-message-condition . g$5883$T@1Mj)
        (make-lexical-violation . g$6019$T@1Mj)
        (make-irritants-condition . g$5963$T@1Mj)
        (make-implementation-restriction-violation . g$6006$T@1Mj)
        (make-error . g$5924$T@1Mj)
        (make-assertion-violation . g$5950$T@1Mj)
        (lexical-violation? . g$6020$T@1Mj)
        (irritants-condition? . g$5965$T@1Mj)
        (implementation-restriction-violation? . g$6007$T@1Mj)
        (error? . g$5925$T@1Mj)
        (condition-who . g$5981$T@1Mj)
        (condition-predicate . g$11518$T@1Mj)
        (condition-message . g$5886$T@1Mj)
        (condition-irritants . g$5966$T@1Mj)
        (condition-accessor . g$11517$T@1Mj)
        (condition . g$11516$T@1Mj)
        (assertion-violation? . g$5951$T@1Mj)
        (condition? . g$11515$T@1Mj)
        (utf32->string . g$11514$T@1Mj)
        (utf16->string . g$11513$T@1Mj)
        (utf8->string . g$11512$T@1Mj)
        (uint-list->bytevector . g$11511$T@1Mj)
        (u8-list->bytevector . g$11510$T@1Mj)
        (string->utf8 . g$11509$T@1Mj)
        (string->utf32 . g$11508$T@1Mj)
        (string->utf16 . g$11507$T@1Mj)
        (sint-list->bytevector . g$11506$T@1Mj)
        (native-endianness . g$5722$T@1Mj)
        (bytevector? . g$5424$T@1Mj)
        (bytevector=? . g$11505$T@1Mj)
        (bytevector-uint-set! . g$11504$T@1Mj)
        (bytevector-uint-ref . g$11503$T@1Mj)
        (bytevector-u8-set! . g$11502$T@1Mj)
        (bytevector-u8-ref . g$11501$T@1Mj)
        (bytevector-u64-set! . g$5743$T@1Mj)
        (bytevector-u64-ref . g$5739$T@1Mj)
        (bytevector-u64-native-set! . g$5745$T@1Mj)
        (bytevector-u64-native-ref . g$5741$T@1Mj)
        (bytevector-u32-set! . g$5735$T@1Mj)
        (bytevector-u32-ref . g$5731$T@1Mj)
        (bytevector-u32-native-set! . g$5737$T@1Mj)
        (bytevector-u32-native-ref . g$5733$T@1Mj)
        (bytevector-u16-set! . g$5727$T@1Mj)
        (bytevector-u16-ref . g$5723$T@1Mj)
        (bytevector-u16-native-set! . g$5729$T@1Mj)
        (bytevector-u16-native-ref . g$5725$T@1Mj)
        (bytevector-sint-set! . g$11500$T@1Mj)
        (bytevector-sint-ref . g$11499$T@1Mj)
        (bytevector-s8-set! . g$11498$T@1Mj)
        (bytevector-s8-ref . g$11497$T@1Mj)
        (bytevector-s64-set! . g$5744$T@1Mj)
        (bytevector-s64-ref . g$5740$T@1Mj)
        (bytevector-s64-native-set! . g$5746$T@1Mj)
        (bytevector-s64-native-ref . g$5742$T@1Mj)
        (bytevector-s32-set! . g$5736$T@1Mj)
        (bytevector-s32-ref . g$5732$T@1Mj)
        (bytevector-s32-native-set! . g$5738$T@1Mj)
        (bytevector-s32-native-ref . g$5734$T@1Mj)
        (bytevector-s16-set! . g$5728$T@1Mj)
        (bytevector-s16-ref . g$5724$T@1Mj)
        (bytevector-s16-native-set! . g$5730$T@1Mj)
        (bytevector-s16-native-ref . g$5726$T@1Mj)
        (bytevector-length . g$11496$T@1Mj)
        (bytevector-ieee-single-set! . g$11495$T@1Mj)
        (bytevector-ieee-single-ref . g$11494$T@1Mj)
        (bytevector-ieee-single-native-set! . g$5749$T@1Mj)
        (bytevector-ieee-single-native-ref . g$5747$T@1Mj)
        (bytevector-ieee-double-set! . g$11493$T@1Mj)
        (bytevector-ieee-double-ref . g$11492$T@1Mj)
        (bytevector-ieee-double-native-set! . g$5750$T@1Mj)
        (bytevector-ieee-double-native-ref . g$5748$T@1Mj)
        (bytevector-fill! . g$11491$T@1Mj)
        (bytevector-copy! . g$11490$T@1Mj)
        (bytevector-copy . g$11489$T@1Mj)
        (bytevector->uint-list . g$11488$T@1Mj)
        (bytevector->u8-list . g$11487$T@1Mj)
        (bytevector->sint-list . g$11486$T@1Mj)
        (no-nans-violation? . g$6240$T@1Mj)
        (no-infinities-violation? . g$6227$T@1Mj)
        (make-no-nans-violation . g$6239$T@1Mj)
        (make-no-infinities-violation . g$6226$T@1Mj)
        (real->flonum . g$11485$T@1Mj)
        (flzero? . g$6536$T@1Mj)
        (fltruncate . g$6531$T@1Mj)
        (fltan . g$6521$T@1Mj)
        (flsqrt . g$6526$T@1Mj)
        (flsin . g$6519$T@1Mj)
        (flround . g$6532$T@1Mj)
        (flpositive? . g$6534$T@1Mj)
        (flonum? . g$5429$T@1Mj)
        (flodd? . g$6538$T@1Mj)
        (flnumerator . g$11484$T@1Mj)
        (flnegative? . g$6535$T@1Mj)
        (flnan? . g$6518$T@1Mj)
        (flmod0 . g$6512$T@1Mj)
        (flmod . g$6511$T@1Mj)
        (flmin . g$6540$T@1Mj)
        (flmax . g$6539$T@1Mj)
        (fllog . g$6525$T@1Mj)
        (flinteger? . g$6515$T@1Mj)
        (flinfinite? . g$6517$T@1Mj)
        (flfloor . g$6530$T@1Mj)
        (flfinite? . g$6516$T@1Mj)
        (flexpt . g$6528$T@1Mj)
        (flexp . g$6527$T@1Mj)
        (fleven? . g$6537$T@1Mj)
        (fldiv0-and-mod0 . g$6514$T@1Mj)
        (fldiv0 . g$11483$T@1Mj)
        (fldiv-and-mod . g$6513$T@1Mj)
        (fldiv . g$11482$T@1Mj)
        (fldenominator . g$11481$T@1Mj)
        (flcos . g$6520$T@1Mj)
        (flceiling . g$6529$T@1Mj)
        (flatan . g$6524$T@1Mj)
        (flasin . g$6522$T@1Mj)
        (flacos . g$6523$T@1Mj)
        (flabs . g$6533$T@1Mj)
        (fl>? . g$11480$T@1Mj)
        (fl>=? . g$11479$T@1Mj)
        (fl=? . g$11478$T@1Mj)
        (fl<? . g$11477$T@1Mj)
        (fl<=? . g$11476$T@1Mj)
        (fl/ . g$11475$T@1Mj)
        (fl- . g$11474$T@1Mj)
        (fl+ . g$11473$T@1Mj)
        (fl* . g$11472$T@1Mj)
        (fixnum->flonum . g$11471$T@1Mj)
        (fxzero? . g$6432$T@1Mj)
        (fxxor . g$11470$T@1Mj)
        (fxrotate-bit-field . g$6446$T@1Mj)
        (fxreverse-bit-field . g$11469$T@1Mj)
        (fxpositive? . g$6430$T@1Mj)
        (fxodd? . g$6434$T@1Mj)
        (fxnot . g$11468$T@1Mj)
        (fxnegative? . g$6431$T@1Mj)
        (fxmod0 . g$6427$T@1Mj)
        (fxmod . g$6426$T@1Mj)
        (fxmin . g$6436$T@1Mj)
        (fxmax . g$6435$T@1Mj)
        (fxlength . g$11467$T@1Mj)
        (fxior . g$11466$T@1Mj)
        (fxif . g$6440$T@1Mj)
        (fxfirst-bit-set . g$11465$T@1Mj)
        (fxeven? . g$6433$T@1Mj)
        (fxdiv0-and-mod0 . g$6429$T@1Mj)
        (fxdiv0 . g$11464$T@1Mj)
        (fxdiv-and-mod . g$6428$T@1Mj)
        (fxdiv . g$11463$T@1Mj)
        (fxcopy-bit-field . g$6443$T@1Mj)
        (fxcopy-bit . g$6441$T@1Mj)
        (fxbit-set? . g$11462$T@1Mj)
        (fxbit-field . g$6442$T@1Mj)
        (fxbit-count . g$11461$T@1Mj)
        (fxarithmetic-shift-right . g$6445$T@1Mj)
        (fxarithmetic-shift-left . g$6444$T@1Mj)
        (fxarithmetic-shift . g$11460$T@1Mj)
        (fxand . g$11459$T@1Mj)
        (fx>? . g$11458$T@1Mj)
        (fx>=? . g$11457$T@1Mj)
        (fx=? . g$11456$T@1Mj)
        (fx<? . g$11455$T@1Mj)
        (fx<=? . g$11454$T@1Mj)
        (fx-/carry . g$6438$T@1Mj)
        (fx- . g$11453$T@1Mj)
        (fx+/carry . g$6439$T@1Mj)
        (fx+ . g$11452$T@1Mj)
        (fx*/carry . g$6437$T@1Mj)
        (fx* . g$11451$T@1Mj)
        (greatest-fixnum . g$11450$T@1Mj)
        (least-fixnum . g$11449$T@1Mj)
        (fixnum-width . g$5430$T@1Mj)
        (fixnum? . g$5428$T@1Mj)
        (bitwise-rotate-bit-field . g$6389$T@1Mj)
        (bitwise-reverse-bit-field . g$11448$T@1Mj)
        (bitwise-length . g$11447$T@1Mj)
        (bitwise-if . g$6383$T@1Mj)
        (bitwise-first-bit-set . g$11446$T@1Mj)
        (bitwise-copy-bit-field . g$6386$T@1Mj)
        (bitwise-copy-bit . g$6384$T@1Mj)
        (bitwise-bit-set? . g$11445$T@1Mj)
        (bitwise-bit-field . g$6385$T@1Mj)
        (bitwise-bit-count . g$11444$T@1Mj)
        (bitwise-xor . g$11443$T@1Mj)
        (bitwise-ior . g$11442$T@1Mj)
        (bitwise-and . g$11441$T@1Mj)
        (bitwise-not . g$11440$T@1Mj)
        (bitwise-arithmetic-shift-right . g$6388$T@1Mj)
        (bitwise-arithmetic-shift-left . g$6387$T@1Mj)
        (bitwise-arithmetic-shift . g$11439$T@1Mj)
        (zero? . g$5464$T@1Mj)
        (vector? . g$5423$T@1Mj)
        (vector-set! . g$11438$T@1Mj)
        (vector-ref . g$11437$T@1Mj)
        (vector-map . g$5496$T@1Mj)
        (vector-length . g$11436$T@1Mj)
        (vector-for-each . g$5497$T@1Mj)
        (vector-fill! . g$5431$T@1Mj)
        (vector->list . g$11435$T@1Mj)
        (vector . g$11434$T@1Mj)
        (values . g$11433$T@1Mj)
        (truncate . g$11432$T@1Mj)
        (tan . g$11431$T@1Mj)
        (symbol? . g$5425$T@1Mj)
        (symbol=? . g$5481$T@1Mj)
        (symbol->string . g$11430$T@1Mj)
        (substring . g$11429$T@1Mj)
        (string? . g$11428$T@1Mj)
        (string>? . g$5478$T@1Mj)
        (string>=? . g$5480$T@1Mj)
        (string=? . g$5476$T@1Mj)
        (string<? . g$5477$T@1Mj)
        (string<=? . g$5479$T@1Mj)
        (string-ref . g$11427$T@1Mj)
        (string-length . g$11426$T@1Mj)
        (string-for-each . g$5498$T@1Mj)
        (string-copy . g$11425$T@1Mj)
        (string-append . g$11424$T@1Mj)
        (string->symbol . g$11423$T@1Mj)
        (string->number . g$11422$T@1Mj)
        (string->list . g$11421$T@1Mj)
        (string . g$11420$T@1Mj)
        (sqrt . g$11419$T@1Mj)
        (sin . g$11418$T@1Mj)
        (round . g$11417$T@1Mj)
        (reverse . g$5433$T@1Mj)
        (real? . g$11416$T@1Mj)
        (real-valued? . g$11415$T@1Mj)
        (real-part . g$11414$T@1Mj)
        (rationalize . g$5493$T@1Mj)
        (rational? . g$11413$T@1Mj)
        (rational-valued? . g$11412$T@1Mj)
        (procedure? . g$5427$T@1Mj)
        (positive? . g$5462$T@1Mj)
        (pair? . g$11411$T@1Mj)
        (odd? . g$5466$T@1Mj)
        (numerator . g$11410$T@1Mj)
        (number? . g$11409$T@1Mj)
        (number->string . g$11408$T@1Mj)
        (null? . g$11407$T@1Mj)
        (not . g$11406$T@1Mj)
        (negative? . g$5463$T@1Mj)
        (nan? . g$11405$T@1Mj)
        (min . g$5468$T@1Mj)
        (max . g$5467$T@1Mj)
        (map . g$5120$T@1Mj)
        (make-vector . g$11404$T@1Mj)
        (make-string . g$11403$T@1Mj)
        (make-rectangular . g$11402$T@1Mj)
        (make-polar . g$11401$T@1Mj)
        (magnitude . g$11400$T@1Mj)
        (log . g$11399$T@1Mj)
        (list? . g$11398$T@1Mj)
        (list-tail . g$5100$T@1Mj)
        (list-ref . g$5101$T@1Mj)
        (list->vector . g$5420$T@1Mj)
        (list->string . g$5421$T@1Mj)
        (list . g$11397$T@1Mj)
        (length . g$11396$T@1Mj)
        (lcm . g$5470$T@1Mj)
        (integer? . g$11395$T@1Mj)
        (integer-valued? . g$11394$T@1Mj)
        (integer->char . g$11393$T@1Mj)
        (infinite? . g$11392$T@1Mj)
        (inexact? . g$11391$T@1Mj)
        (inexact . g$11390$T@1Mj)
        (imag-part . g$11389$T@1Mj)
        (gcd . g$5469$T@1Mj)
        (for-each . g$5121$T@1Mj)
        (floor . g$11388$T@1Mj)
        (finite? . g$11387$T@1Mj)
        (expt . g$11386$T@1Mj)
        (exp . g$11385$T@1Mj)
        (exact? . g$11384$T@1Mj)
        (exact-integer-sqrt . g$11383$T@1Mj)
        (exact . g$11382$T@1Mj)
        (even? . g$5465$T@1Mj)
        (error . g$11381$T@1Mj)
        (eqv? . g$11380$T@1Mj)
        (equal? . g$11379$T@1Mj)
        (eq? . g$11378$T@1Mj)
        (dynamic-wind . g$11377$T@1Mj)
        (div0-and-mod0 . g$5419$T@1Mj)
        (mod0 . g$5417$T@1Mj)
        (div0 . g$11376$T@1Mj)
        (div-and-mod . g$5418$T@1Mj)
        (mod . g$5416$T@1Mj)
        (div . g$11375$T@1Mj)
        (denominator . g$11374$T@1Mj)
        (cos . g$11373$T@1Mj)
        (cons . g$11372$T@1Mj)
        (complex? . g$11371$T@1Mj)
        (char? . g$5422$T@1Mj)
        (char>? . g$5490$T@1Mj)
        (char>=? . g$5492$T@1Mj)
        (char=? . g$5488$T@1Mj)
        (char<? . g$5489$T@1Mj)
        (char<=? . g$5491$T@1Mj)
        (char->integer . g$11370$T@1Mj)
        (ceiling . g$11369$T@1Mj)
        (call-with-values . g$11368$T@1Mj)
        (call/cc . g$11367$T@1Mj)
        (call-with-current-continuation . g$11366$T@1Mj)
        (cddddr . g$5461$T@1Mj)
        (cdddar . g$5460$T@1Mj)
        (cddadr . g$5459$T@1Mj)
        (cddaar . g$5458$T@1Mj)
        (cdaddr . g$5457$T@1Mj)
        (cdadar . g$5456$T@1Mj)
        (cdaadr . g$5455$T@1Mj)
        (cdaaar . g$5454$T@1Mj)
        (cadddr . g$5453$T@1Mj)
        (caddar . g$5452$T@1Mj)
        (cadadr . g$5451$T@1Mj)
        (cadaar . g$5450$T@1Mj)
        (caaddr . g$5449$T@1Mj)
        (caadar . g$5448$T@1Mj)
        (caaadr . g$5447$T@1Mj)
        (caaaar . g$5446$T@1Mj)
        (cdddr . g$5445$T@1Mj)
        (cddar . g$5444$T@1Mj)
        (cdadr . g$5443$T@1Mj)
        (cdaar . g$5442$T@1Mj)
        (caddr . g$5441$T@1Mj)
        (cadar . g$5440$T@1Mj)
        (caadr . g$5439$T@1Mj)
        (caaar . g$5438$T@1Mj)
        (cddr . g$5437$T@1Mj)
        (cdar . g$5436$T@1Mj)
        (cadr . g$5435$T@1Mj)
        (caar . g$5434$T@1Mj)
        (cdr . g$11365$T@1Mj)
        (car . g$11364$T@1Mj)
        (boolean? . g$5426$T@1Mj)
        (boolean=? . g$5482$T@1Mj)
        (atan . g$11363$T@1Mj)
        (assertion-violation . g$11362$T@1Mj)
        (asin . g$11361$T@1Mj)
        (apply . g$11360$T@1Mj)
        (append . g$11359$T@1Mj)
        (angle . g$11358$T@1Mj)
        (acos . g$11357$T@1Mj)
        (abs . g$11356$T@1Mj)
        (/ . g$11355$T@1Mj)
        (* . g$11354$T@1Mj)
        (- . g$11353$T@1Mj)
        (+ . g$11352$T@1Mj)
        (>= . g$11351$T@1Mj)
        (> . g$11350$T@1Mj)
        (= . g$11349$T@1Mj)
        (<= . g$11348$T@1Mj)
        (< . g$11347$T@1Mj)
        (&no-nans . g$11295$T@1Mj)
        (&no-infinities . g$11294$T@1Mj)
        (&i/o-encoding . g$11293$T@1Mj)
        (&i/o-decoding . g$11292$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj)
        (&non-continuable . g$11281$T@1Mj)
        (&undefined . g$11280$T@1Mj)
        (&syntax . g$11279$T@1Mj)
        (&lexical . g$11278$T@1Mj)
        (&implementation-restriction . g$11277$T@1Mj)
        (&who . g$11276$T@1Mj)
        (&irritants . g$11275$T@1Mj)
        (&assertion . g$11274$T@1Mj)
        (&violation . g$11273$T@1Mj)
        (&error . g$11272$T@1Mj)
        (&serious . g$11271$T@1Mj)
        (&warning . g$11270$T@1Mj)
        (&message . g$11269$T@1Mj)
        (&condition . g$11268$T@1Mj)
        (define-condition-type . g$11267$T@1Mj)
        (define-enumeration . g$11266$T@1Mj)
        (define-record-type . g$11265$T@1Mj)
        (parent-rtd . g$11264$T@1Mj)
        (nongenerative . g$11263$T@1Mj)
        (opaque . g$11262$T@1Mj)
        (sealed . g$11261$T@1Mj)
        (protocol . g$11260$T@1Mj)
        (parent . g$11259$T@1Mj)
        (immutable . g$11258$T@1Mj)
        (mutable . g$11257$T@1Mj)
        (fields . g$11256$T@1Mj)
        (error-handling-mode . g$11255$T@1Mj)
        (file-options . g$11254$T@1Mj)
        (buffer-mode . g$11253$T@1Mj)
        (eol-style . g$11252$T@1Mj)
        (guard . g$11251$T@1Mj)
        (unsyntax-splicing . g$11245$T@1Mj)
        (unsyntax . g$11244$T@1Mj)
        (unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (_ . g$11241$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (... . g$11238$T@1Mj)
        (assert . g$11237$T@1Mj)
        (endianness . g$11236$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (do . g$11231$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (identifier-syntax . g$11227$T@1Mj)
        (with-syntax . g$11226$T@1Mj)
        (quasisyntax . g$11225$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (let-values . g$11219$T@1Mj)
        (let*-values . g$11218$T@1Mj)
        (record-constructor-descriptor . g$11217$T@1Mj)
        (record-type-descriptor . g$11216$T@1Mj)
        (case . g$11214$T@1Mj)
        (unless . g$11212$T@1Mj)
        (when . g$11211$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec* . g$11209$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (case-lambda . g$11206$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (syntax . g$11204$T@1Mj)
        (syntax-case . g$11203$T@1Mj)
        (quote . g$11202$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (begin . g$11194$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11693$T@1Mj
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$8095$T@1Mj)
        (quotient . g$6257$T@1Mj)
        (null-environment . g$8094$T@1Mj)
        (remainder . g$6258$T@1Mj)
        (modulo . g$6259$T@1Mj)
        (inexact->exact . g$6254$T@1Mj)
        (force . g$6261$T@1Mj)
        (exact->inexact . g$6255$T@1Mj)
        (delay . g$11235$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11694$T@1Mj
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11231$T@1Mj)
        (unless . g$11212$T@1Mj)
        (when . g$11211$T@1Mj)
        (case-lambda . g$11206$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11695$T@1Mj
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8097$T@1Mj) (environment . g$8093$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11696$T@1Mj
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11524$T@1Mj) (set-car! . g$11523$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11697$T@1Mj
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11526$T@1Mj) (string-set! . g$11525$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11698$T@1Mj
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11527$T@1Mj) (command-line . g$11134$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11699$T@1Mj
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7796$T@1Mj)
        (identifier? . g$8116$T@1Mj)
        (generate-temporaries . g$8105$T@1Mj)
        (free-identifier=? . g$8106$T@1Mj)
        (syntax->datum . g$8118$T@1Mj)
        (datum->syntax . g$8117$T@1Mj)
        (bound-identifier=? . g$8107$T@1Mj)
        (syntax-violation . g$8115$T@1Mj)
        (unsyntax-splicing . g$11245$T@1Mj)
        (unsyntax . g$11244$T@1Mj)
        (_ . g$11241$T@1Mj)
        (... . g$11238$T@1Mj)
        (with-syntax . g$11226$T@1Mj)
        (quasisyntax . g$11225$T@1Mj)
        (syntax . g$11204$T@1Mj)
        (syntax-case . g$11203$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11700$T@1Mj
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5716$T@1Mj)
        (file-exists? . g$5715$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11701$T@1Mj
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11612$T@1Mj)
        (vector-sort . g$11611$T@1Mj)
        (list-sort . g$6278$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11702$T@1Mj
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5464$T@1Mj)
        (vector? . g$5423$T@1Mj)
        (vector-set! . g$11438$T@1Mj)
        (vector-ref . g$11437$T@1Mj)
        (vector-map . g$5496$T@1Mj)
        (vector-length . g$11436$T@1Mj)
        (vector-for-each . g$5497$T@1Mj)
        (vector-fill! . g$5431$T@1Mj)
        (vector->list . g$11435$T@1Mj)
        (vector . g$11434$T@1Mj)
        (values . g$11433$T@1Mj)
        (truncate . g$11432$T@1Mj)
        (tan . g$11431$T@1Mj)
        (symbol? . g$5425$T@1Mj)
        (symbol=? . g$5481$T@1Mj)
        (symbol->string . g$11430$T@1Mj)
        (substring . g$11429$T@1Mj)
        (string? . g$11428$T@1Mj)
        (string>? . g$5478$T@1Mj)
        (string>=? . g$5480$T@1Mj)
        (string=? . g$5476$T@1Mj)
        (string<? . g$5477$T@1Mj)
        (string<=? . g$5479$T@1Mj)
        (string-ref . g$11427$T@1Mj)
        (string-length . g$11426$T@1Mj)
        (string-for-each . g$5498$T@1Mj)
        (string-copy . g$11425$T@1Mj)
        (string-append . g$11424$T@1Mj)
        (string->symbol . g$11423$T@1Mj)
        (string->number . g$11422$T@1Mj)
        (string->list . g$11421$T@1Mj)
        (string . g$11420$T@1Mj)
        (sqrt . g$11419$T@1Mj)
        (sin . g$11418$T@1Mj)
        (round . g$11417$T@1Mj)
        (reverse . g$5433$T@1Mj)
        (real? . g$11416$T@1Mj)
        (real-valued? . g$11415$T@1Mj)
        (real-part . g$11414$T@1Mj)
        (rationalize . g$5493$T@1Mj)
        (rational? . g$11413$T@1Mj)
        (rational-valued? . g$11412$T@1Mj)
        (procedure? . g$5427$T@1Mj)
        (positive? . g$5462$T@1Mj)
        (pair? . g$11411$T@1Mj)
        (odd? . g$5466$T@1Mj)
        (numerator . g$11410$T@1Mj)
        (number? . g$11409$T@1Mj)
        (number->string . g$11408$T@1Mj)
        (null? . g$11407$T@1Mj)
        (not . g$11406$T@1Mj)
        (negative? . g$5463$T@1Mj)
        (nan? . g$11405$T@1Mj)
        (min . g$5468$T@1Mj)
        (max . g$5467$T@1Mj)
        (map . g$5120$T@1Mj)
        (make-vector . g$11404$T@1Mj)
        (make-string . g$11403$T@1Mj)
        (make-rectangular . g$11402$T@1Mj)
        (make-polar . g$11401$T@1Mj)
        (magnitude . g$11400$T@1Mj)
        (log . g$11399$T@1Mj)
        (list? . g$11398$T@1Mj)
        (list-tail . g$5100$T@1Mj)
        (list-ref . g$5101$T@1Mj)
        (list->vector . g$5420$T@1Mj)
        (list->string . g$5421$T@1Mj)
        (list . g$11397$T@1Mj)
        (length . g$11396$T@1Mj)
        (lcm . g$5470$T@1Mj)
        (integer? . g$11395$T@1Mj)
        (integer-valued? . g$11394$T@1Mj)
        (integer->char . g$11393$T@1Mj)
        (infinite? . g$11392$T@1Mj)
        (inexact? . g$11391$T@1Mj)
        (inexact . g$11390$T@1Mj)
        (imag-part . g$11389$T@1Mj)
        (gcd . g$5469$T@1Mj)
        (for-each . g$5121$T@1Mj)
        (floor . g$11388$T@1Mj)
        (finite? . g$11387$T@1Mj)
        (expt . g$11386$T@1Mj)
        (exp . g$11385$T@1Mj)
        (exact? . g$11384$T@1Mj)
        (exact-integer-sqrt . g$11383$T@1Mj)
        (exact . g$11382$T@1Mj)
        (even? . g$5465$T@1Mj)
        (error . g$11381$T@1Mj)
        (eqv? . g$11380$T@1Mj)
        (equal? . g$11379$T@1Mj)
        (eq? . g$11378$T@1Mj)
        (dynamic-wind . g$11377$T@1Mj)
        (div0-and-mod0 . g$5419$T@1Mj)
        (mod0 . g$5417$T@1Mj)
        (div0 . g$11376$T@1Mj)
        (div-and-mod . g$5418$T@1Mj)
        (mod . g$5416$T@1Mj)
        (div . g$11375$T@1Mj)
        (denominator . g$11374$T@1Mj)
        (cos . g$11373$T@1Mj)
        (cons . g$11372$T@1Mj)
        (complex? . g$11371$T@1Mj)
        (char? . g$5422$T@1Mj)
        (char>? . g$5490$T@1Mj)
        (char>=? . g$5492$T@1Mj)
        (char=? . g$5488$T@1Mj)
        (char<? . g$5489$T@1Mj)
        (char<=? . g$5491$T@1Mj)
        (char->integer . g$11370$T@1Mj)
        (ceiling . g$11369$T@1Mj)
        (call-with-values . g$11368$T@1Mj)
        (call/cc . g$11367$T@1Mj)
        (call-with-current-continuation . g$11366$T@1Mj)
        (cddddr . g$5461$T@1Mj)
        (cdddar . g$5460$T@1Mj)
        (cddadr . g$5459$T@1Mj)
        (cddaar . g$5458$T@1Mj)
        (cdaddr . g$5457$T@1Mj)
        (cdadar . g$5456$T@1Mj)
        (cdaadr . g$5455$T@1Mj)
        (cdaaar . g$5454$T@1Mj)
        (cadddr . g$5453$T@1Mj)
        (caddar . g$5452$T@1Mj)
        (cadadr . g$5451$T@1Mj)
        (cadaar . g$5450$T@1Mj)
        (caaddr . g$5449$T@1Mj)
        (caadar . g$5448$T@1Mj)
        (caaadr . g$5447$T@1Mj)
        (caaaar . g$5446$T@1Mj)
        (cdddr . g$5445$T@1Mj)
        (cddar . g$5444$T@1Mj)
        (cdadr . g$5443$T@1Mj)
        (cdaar . g$5442$T@1Mj)
        (caddr . g$5441$T@1Mj)
        (cadar . g$5440$T@1Mj)
        (caadr . g$5439$T@1Mj)
        (caaar . g$5438$T@1Mj)
        (cddr . g$5437$T@1Mj)
        (cdar . g$5436$T@1Mj)
        (cadr . g$5435$T@1Mj)
        (caar . g$5434$T@1Mj)
        (cdr . g$11365$T@1Mj)
        (car . g$11364$T@1Mj)
        (boolean? . g$5426$T@1Mj)
        (boolean=? . g$5482$T@1Mj)
        (atan . g$11363$T@1Mj)
        (assertion-violation . g$11362$T@1Mj)
        (asin . g$11361$T@1Mj)
        (apply . g$11360$T@1Mj)
        (append . g$11359$T@1Mj)
        (angle . g$11358$T@1Mj)
        (acos . g$11357$T@1Mj)
        (abs . g$11356$T@1Mj)
        (/ . g$11355$T@1Mj)
        (* . g$11354$T@1Mj)
        (- . g$11353$T@1Mj)
        (+ . g$11352$T@1Mj)
        (>= . g$11351$T@1Mj)
        (> . g$11350$T@1Mj)
        (= . g$11349$T@1Mj)
        (<= . g$11348$T@1Mj)
        (< . g$11347$T@1Mj)
        (unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (_ . g$11241$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (... . g$11238$T@1Mj)
        (assert . g$11237$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (identifier-syntax . g$11227$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (let-values . g$11219$T@1Mj)
        (let*-values . g$11218$T@1Mj)
        (case . g$11214$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec* . g$11209$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (quote . g$11202$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (begin . g$11194$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11703$T@1Mj
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5125$T@1Mj)
        (remv . g$5126$T@1Mj)
        (remp . g$5106$T@1Mj)
        (remq . g$5127$T@1Mj)
        (partition . g$5105$T@1Mj)
        (memv . g$5113$T@1Mj)
        (memq . g$5112$T@1Mj)
        (memp . g$5115$T@1Mj)
        (member . g$5114$T@1Mj)
        (exists . g$5119$T@1Mj)
        (for-all . g$5118$T@1Mj)
        (fold-right . g$5124$T@1Mj)
        (fold-left . g$5123$T@1Mj)
        (find . g$5104$T@1Mj)
        (filter . g$5107$T@1Mj)
        (cons* . g$5122$T@1Mj)
        (assv . g$5109$T@1Mj)
        (assq . g$5108$T@1Mj)
        (assp . g$5111$T@1Mj)
        (assoc . g$5110$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11704$T@1Mj
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$6621$T@1Mj)
        (call-with-input-file . g$6620$T@1Mj)
        (write-char . g$6612$T@1Mj)
        (write . g$11598$T@1Mj)
        (with-output-to-file . g$6619$T@1Mj)
        (with-input-from-file . g$6618$T@1Mj)
        (read-char . g$6611$T@1Mj)
        (read . g$11597$T@1Mj)
        (peek-char . g$6610$T@1Mj)
        (open-output-file . g$11596$T@1Mj)
        (open-input-file . g$11595$T@1Mj)
        (newline . g$6622$T@1Mj)
        (display . g$11594$T@1Mj)
        (close-output-port . g$11593$T@1Mj)
        (close-input-port . g$11592$T@1Mj)
        (eof-object? . g$11591$T@1Mj)
        (eof-object . g$11590$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11705$T@1Mj
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11546$T@1Mj)
        (utf32->string . g$11514$T@1Mj)
        (utf16->string . g$11513$T@1Mj)
        (utf8->string . g$11512$T@1Mj)
        (uint-list->bytevector . g$11511$T@1Mj)
        (u8-list->bytevector . g$11510$T@1Mj)
        (string->utf8 . g$11509$T@1Mj)
        (string->utf32 . g$11508$T@1Mj)
        (string->utf16 . g$11507$T@1Mj)
        (sint-list->bytevector . g$11506$T@1Mj)
        (native-endianness . g$5722$T@1Mj)
        (bytevector? . g$5424$T@1Mj)
        (bytevector=? . g$11505$T@1Mj)
        (bytevector-uint-set! . g$11504$T@1Mj)
        (bytevector-uint-ref . g$11503$T@1Mj)
        (bytevector-u8-set! . g$11502$T@1Mj)
        (bytevector-u8-ref . g$11501$T@1Mj)
        (bytevector-u64-set! . g$5743$T@1Mj)
        (bytevector-u64-ref . g$5739$T@1Mj)
        (bytevector-u64-native-set! . g$5745$T@1Mj)
        (bytevector-u64-native-ref . g$5741$T@1Mj)
        (bytevector-u32-set! . g$5735$T@1Mj)
        (bytevector-u32-ref . g$5731$T@1Mj)
        (bytevector-u32-native-set! . g$5737$T@1Mj)
        (bytevector-u32-native-ref . g$5733$T@1Mj)
        (bytevector-u16-set! . g$5727$T@1Mj)
        (bytevector-u16-ref . g$5723$T@1Mj)
        (bytevector-u16-native-set! . g$5729$T@1Mj)
        (bytevector-u16-native-ref . g$5725$T@1Mj)
        (bytevector-sint-set! . g$11500$T@1Mj)
        (bytevector-sint-ref . g$11499$T@1Mj)
        (bytevector-s8-set! . g$11498$T@1Mj)
        (bytevector-s8-ref . g$11497$T@1Mj)
        (bytevector-s64-set! . g$5744$T@1Mj)
        (bytevector-s64-ref . g$5740$T@1Mj)
        (bytevector-s64-native-set! . g$5746$T@1Mj)
        (bytevector-s64-native-ref . g$5742$T@1Mj)
        (bytevector-s32-set! . g$5736$T@1Mj)
        (bytevector-s32-ref . g$5732$T@1Mj)
        (bytevector-s32-native-set! . g$5738$T@1Mj)
        (bytevector-s32-native-ref . g$5734$T@1Mj)
        (bytevector-s16-set! . g$5728$T@1Mj)
        (bytevector-s16-ref . g$5724$T@1Mj)
        (bytevector-s16-native-set! . g$5730$T@1Mj)
        (bytevector-s16-native-ref . g$5726$T@1Mj)
        (bytevector-length . g$11496$T@1Mj)
        (bytevector-ieee-single-set! . g$11495$T@1Mj)
        (bytevector-ieee-single-ref . g$11494$T@1Mj)
        (bytevector-ieee-single-native-set! . g$5749$T@1Mj)
        (bytevector-ieee-single-native-ref . g$5747$T@1Mj)
        (bytevector-ieee-double-set! . g$11493$T@1Mj)
        (bytevector-ieee-double-ref . g$11492$T@1Mj)
        (bytevector-ieee-double-native-set! . g$5750$T@1Mj)
        (bytevector-ieee-double-native-ref . g$5748$T@1Mj)
        (bytevector-fill! . g$11491$T@1Mj)
        (bytevector-copy! . g$11490$T@1Mj)
        (bytevector-copy . g$11489$T@1Mj)
        (bytevector->uint-list . g$11488$T@1Mj)
        (bytevector->u8-list . g$11487$T@1Mj)
        (bytevector->sint-list . g$11486$T@1Mj)
        (endianness . g$11236$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11706$T@1Mj
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11644$T@1Mj)
        (string-titlecase . g$11643$T@1Mj)
        (string-normalize-nfkd . g$6325$T@1Mj)
        (string-normalize-nfkc . g$6324$T@1Mj)
        (string-normalize-nfd . g$6323$T@1Mj)
        (string-normalize-nfc . g$6322$T@1Mj)
        (string-foldcase . g$11642$T@1Mj)
        (string-downcase . g$11641$T@1Mj)
        (string-ci>? . g$6309$T@1Mj)
        (string-ci>=? . g$6311$T@1Mj)
        (string-ci=? . g$6307$T@1Mj)
        (string-ci<? . g$6308$T@1Mj)
        (string-ci<=? . g$6310$T@1Mj)
        (char-whitespace? . g$11640$T@1Mj)
        (char-upper-case? . g$11639$T@1Mj)
        (char-title-case? . g$11638$T@1Mj)
        (char-numeric? . g$11637$T@1Mj)
        (char-lower-case? . g$11636$T@1Mj)
        (char-general-category . g$11635$T@1Mj)
        (char-upcase . g$11634$T@1Mj)
        (char-titlecase . g$11633$T@1Mj)
        (char-foldcase . g$11632$T@1Mj)
        (char-downcase . g$11631$T@1Mj)
        (char-ci>? . g$6319$T@1Mj)
        (char-ci>=? . g$6321$T@1Mj)
        (char-ci=? . g$6317$T@1Mj)
        (char-ci<? . g$6318$T@1Mj)
        (char-ci<=? . g$6320$T@1Mj)
        (char-alphabetic? . g$11630$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11707$T@1Mj
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11522$T@1Mj)
        (raise-continuable . g$11521$T@1Mj)
        (raise . g$11520$T@1Mj)
        (guard . g$11251$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11708$T@1Mj
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6389$T@1Mj)
        (bitwise-reverse-bit-field . g$11448$T@1Mj)
        (bitwise-length . g$11447$T@1Mj)
        (bitwise-if . g$6383$T@1Mj)
        (bitwise-first-bit-set . g$11446$T@1Mj)
        (bitwise-copy-bit-field . g$6386$T@1Mj)
        (bitwise-copy-bit . g$6384$T@1Mj)
        (bitwise-bit-set? . g$11445$T@1Mj)
        (bitwise-bit-field . g$6385$T@1Mj)
        (bitwise-bit-count . g$11444$T@1Mj)
        (bitwise-xor . g$11443$T@1Mj)
        (bitwise-ior . g$11442$T@1Mj)
        (bitwise-and . g$11441$T@1Mj)
        (bitwise-not . g$11440$T@1Mj)
        (bitwise-arithmetic-shift-right . g$6388$T@1Mj)
        (bitwise-arithmetic-shift-left . g$6387$T@1Mj)
        (bitwise-arithmetic-shift . g$11439$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11709$T@1Mj
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6432$T@1Mj)
        (fxxor . g$11470$T@1Mj)
        (fxrotate-bit-field . g$6446$T@1Mj)
        (fxreverse-bit-field . g$11469$T@1Mj)
        (fxpositive? . g$6430$T@1Mj)
        (fxodd? . g$6434$T@1Mj)
        (fxnot . g$11468$T@1Mj)
        (fxnegative? . g$6431$T@1Mj)
        (fxmod0 . g$6427$T@1Mj)
        (fxmod . g$6426$T@1Mj)
        (fxmin . g$6436$T@1Mj)
        (fxmax . g$6435$T@1Mj)
        (fxlength . g$11467$T@1Mj)
        (fxior . g$11466$T@1Mj)
        (fxif . g$6440$T@1Mj)
        (fxfirst-bit-set . g$11465$T@1Mj)
        (fxeven? . g$6433$T@1Mj)
        (fxdiv0-and-mod0 . g$6429$T@1Mj)
        (fxdiv0 . g$11464$T@1Mj)
        (fxdiv-and-mod . g$6428$T@1Mj)
        (fxdiv . g$11463$T@1Mj)
        (fxcopy-bit-field . g$6443$T@1Mj)
        (fxcopy-bit . g$6441$T@1Mj)
        (fxbit-set? . g$11462$T@1Mj)
        (fxbit-field . g$6442$T@1Mj)
        (fxbit-count . g$11461$T@1Mj)
        (fxarithmetic-shift-right . g$6445$T@1Mj)
        (fxarithmetic-shift-left . g$6444$T@1Mj)
        (fxarithmetic-shift . g$11460$T@1Mj)
        (fxand . g$11459$T@1Mj)
        (fx>? . g$11458$T@1Mj)
        (fx>=? . g$11457$T@1Mj)
        (fx=? . g$11456$T@1Mj)
        (fx<? . g$11455$T@1Mj)
        (fx<=? . g$11454$T@1Mj)
        (fx-/carry . g$6438$T@1Mj)
        (fx- . g$11453$T@1Mj)
        (fx+/carry . g$6439$T@1Mj)
        (fx+ . g$11452$T@1Mj)
        (fx*/carry . g$6437$T@1Mj)
        (fx* . g$11451$T@1Mj)
        (greatest-fixnum . g$11450$T@1Mj)
        (least-fixnum . g$11449$T@1Mj)
        (fixnum-width . g$5430$T@1Mj)
        (fixnum? . g$5428$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11710$T@1Mj
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6240$T@1Mj)
        (no-infinities-violation? . g$6227$T@1Mj)
        (make-no-nans-violation . g$6239$T@1Mj)
        (make-no-infinities-violation . g$6226$T@1Mj)
        (real->flonum . g$11485$T@1Mj)
        (flzero? . g$6536$T@1Mj)
        (fltruncate . g$6531$T@1Mj)
        (fltan . g$6521$T@1Mj)
        (flsqrt . g$6526$T@1Mj)
        (flsin . g$6519$T@1Mj)
        (flround . g$6532$T@1Mj)
        (flpositive? . g$6534$T@1Mj)
        (flonum? . g$5429$T@1Mj)
        (flodd? . g$6538$T@1Mj)
        (flnumerator . g$11484$T@1Mj)
        (flnegative? . g$6535$T@1Mj)
        (flnan? . g$6518$T@1Mj)
        (flmod0 . g$6512$T@1Mj)
        (flmod . g$6511$T@1Mj)
        (flmin . g$6540$T@1Mj)
        (flmax . g$6539$T@1Mj)
        (fllog . g$6525$T@1Mj)
        (flinteger? . g$6515$T@1Mj)
        (flinfinite? . g$6517$T@1Mj)
        (flfloor . g$6530$T@1Mj)
        (flfinite? . g$6516$T@1Mj)
        (flexpt . g$6528$T@1Mj)
        (flexp . g$6527$T@1Mj)
        (fleven? . g$6537$T@1Mj)
        (fldiv0-and-mod0 . g$6514$T@1Mj)
        (fldiv0 . g$11483$T@1Mj)
        (fldiv-and-mod . g$6513$T@1Mj)
        (fldiv . g$11482$T@1Mj)
        (fldenominator . g$11481$T@1Mj)
        (flcos . g$6520$T@1Mj)
        (flceiling . g$6529$T@1Mj)
        (flatan . g$6524$T@1Mj)
        (flasin . g$6522$T@1Mj)
        (flacos . g$6523$T@1Mj)
        (flabs . g$6533$T@1Mj)
        (fl>? . g$11480$T@1Mj)
        (fl>=? . g$11479$T@1Mj)
        (fl=? . g$11478$T@1Mj)
        (fl<? . g$11477$T@1Mj)
        (fl<=? . g$11476$T@1Mj)
        (fl/ . g$11475$T@1Mj)
        (fl- . g$11474$T@1Mj)
        (fl+ . g$11473$T@1Mj)
        (fl* . g$11472$T@1Mj)
        (fixnum->flonum . g$11471$T@1Mj)
        (&no-nans . g$11295$T@1Mj)
        (&no-infinities . g$11294$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11711$T@1Mj
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11610$T@1Mj)
        (string-ci-hash . g$11609$T@1Mj)
        (string-hash . g$11608$T@1Mj)
        (equal-hash . g$11607$T@1Mj)
        (hashtable-equivalence-function . g$11606$T@1Mj)
        (make-hashtable . g$11605$T@1Mj)
        (hashtable-hash-function . g$11604$T@1Mj)
        (make-eqv-hashtable . g$5683$T@1Mj)
        (make-eq-hashtable . g$5682$T@1Mj)
        (hashtable? . g$11603$T@1Mj)
        (hashtable-update! . g$5689$T@1Mj)
        (hashtable-size . g$5684$T@1Mj)
        (hashtable-set! . g$5686$T@1Mj)
        (hashtable-ref . g$5685$T@1Mj)
        (hashtable-mutable? . g$11602$T@1Mj)
        (hashtable-keys . g$11601$T@1Mj)
        (hashtable-entries . g$11600$T@1Mj)
        (hashtable-delete! . g$5687$T@1Mj)
        (hashtable-copy . g$11599$T@1Mj)
        (hashtable-contains? . g$5688$T@1Mj)
        (hashtable-clear! . g$5690$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11712$T@1Mj
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11591$T@1Mj)
        (eof-object . g$11590$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (utf-8-codec . g$11584$T@1Mj)
        (utf-16-codec . g$11583$T@1Mj)
        (transcoder-error-handling-mode . g$11582$T@1Mj)
        (transcoder-eol-style . g$11581$T@1Mj)
        (transcoder-codec . g$11580$T@1Mj)
        (transcoded-port . g$11579$T@1Mj)
        (textual-port? . g$11578$T@1Mj)
        (string->bytevector . g$11577$T@1Mj)
        (standard-output-port . g$11576$T@1Mj)
        (standard-input-port . g$11575$T@1Mj)
        (standard-error-port . g$11574$T@1Mj)
        (set-port-position! . g$11573$T@1Mj)
        (put-u8 . g$11572$T@1Mj)
        (put-string . g$11571$T@1Mj)
        (put-datum . g$6590$T@1Mj)
        (put-char . g$11570$T@1Mj)
        (put-bytevector . g$11569$T@1Mj)
        (port? . g$6595$T@1Mj)
        (port-transcoder . g$11568$T@1Mj)
        (port-position . g$11567$T@1Mj)
        (port-has-set-port-position!? . g$11566$T@1Mj)
        (port-has-port-position? . g$11565$T@1Mj)
        (port-eof? . g$11564$T@1Mj)
        (output-port-buffer-mode . g$11563$T@1Mj)
        (open-string-output-port . g$6594$T@1Mj)
        (open-string-input-port . g$11562$T@1Mj)
        (open-file-output-port . g$11561$T@1Mj)
        (open-file-input/output-port . g$11560$T@1Mj)
        (open-file-input-port . g$11559$T@1Mj)
        (open-bytevector-output-port . g$11558$T@1Mj)
        (open-bytevector-input-port . g$11557$T@1Mj)
        (native-transcoder . g$11556$T@1Mj)
        (native-eol-style . g$11555$T@1Mj)
        (make-transcoder . g$11554$T@1Mj)
        (latin-1-codec . g$11553$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (make-i/o-encoding-error . g$6211$T@1Mj)
        (make-i/o-decoding-error . g$6198$T@1Mj)
        (make-custom-textual-output-port . g$11552$T@1Mj)
        (make-custom-textual-input/output-port . g$11551$T@1Mj)
        (make-custom-textual-input-port . g$11550$T@1Mj)
        (make-custom-binary-output-port . g$11549$T@1Mj)
        (make-custom-binary-input/output-port . g$11548$T@1Mj)
        (make-custom-binary-input-port . g$11547$T@1Mj)
        (lookahead-u8 . g$11545$T@1Mj)
        (lookahead-char . g$11544$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (i/o-encoding-error? . g$6213$T@1Mj)
        (i/o-encoding-error-char . g$6214$T@1Mj)
        (i/o-decoding-error? . g$6199$T@1Mj)
        (get-u8 . g$11543$T@1Mj)
        (get-string-n! . g$11542$T@1Mj)
        (get-string-n . g$11541$T@1Mj)
        (get-string-all . g$11540$T@1Mj)
        (get-line . g$11539$T@1Mj)
        (get-datum . g$6591$T@1Mj)
        (get-char . g$11538$T@1Mj)
        (get-bytevector-some . g$11537$T@1Mj)
        (get-bytevector-n! . g$11536$T@1Mj)
        (get-bytevector-n . g$11535$T@1Mj)
        (get-bytevector-all . g$11534$T@1Mj)
        (flush-output-port . g$11533$T@1Mj)
        (close-port . g$11532$T@1Mj)
        (call-with-string-output-port . g$6596$T@1Mj)
        (call-with-port . g$6597$T@1Mj)
        (call-with-bytevector-output-port . g$11531$T@1Mj)
        (bytevector->string . g$11530$T@1Mj)
        (buffer-mode? . g$11529$T@1Mj)
        (binary-port? . g$11528$T@1Mj)
        (&i/o-encoding . g$11293$T@1Mj)
        (&i/o-decoding . g$11292$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj)
        (error-handling-mode . g$11255$T@1Mj)
        (file-options . g$11254$T@1Mj)
        (buffer-mode . g$11253$T@1Mj)
        (eol-style . g$11252$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11713$T@1Mj
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$6682$T@1Mj)
        (enum-set=? . g$6689$T@1Mj)
        (enum-set-universe . g$6683$T@1Mj)
        (enum-set-union . g$6690$T@1Mj)
        (enum-set-subset? . g$6688$T@1Mj)
        (enum-set-projection . g$6694$T@1Mj)
        (enum-set-member? . g$6687$T@1Mj)
        (enum-set-intersection . g$6691$T@1Mj)
        (enum-set-indexer . g$6684$T@1Mj)
        (enum-set-difference . g$6692$T@1Mj)
        (enum-set-constructor . g$6685$T@1Mj)
        (enum-set-complement . g$6693$T@1Mj)
        (enum-set->list . g$6686$T@1Mj)
        (define-enumeration . g$11266$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11714$T@1Mj
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$5980$T@1Mj)
        (warning? . g$5899$T@1Mj)
        (violation? . g$5938$T@1Mj)
        (undefined-violation? . g$6050$T@1Mj)
        (syntax-violation? . g$6035$T@1Mj)
        (syntax-violation-subform . g$6037$T@1Mj)
        (syntax-violation-form . g$6036$T@1Mj)
        (simple-conditions . g$11519$T@1Mj)
        (serious-condition? . g$5912$T@1Mj)
        (non-continuable-violation? . g$5994$T@1Mj)
        (message-condition? . g$5885$T@1Mj)
        (make-who-condition . g$5978$T@1Mj)
        (make-warning . g$5898$T@1Mj)
        (make-violation . g$5937$T@1Mj)
        (make-undefined-violation . g$6049$T@1Mj)
        (make-syntax-violation . g$6032$T@1Mj)
        (make-serious-condition . g$5911$T@1Mj)
        (make-non-continuable-violation . g$5993$T@1Mj)
        (make-message-condition . g$5883$T@1Mj)
        (make-lexical-violation . g$6019$T@1Mj)
        (make-irritants-condition . g$5963$T@1Mj)
        (make-implementation-restriction-violation . g$6006$T@1Mj)
        (make-error . g$5924$T@1Mj)
        (make-assertion-violation . g$5950$T@1Mj)
        (lexical-violation? . g$6020$T@1Mj)
        (irritants-condition? . g$5965$T@1Mj)
        (implementation-restriction-violation? . g$6007$T@1Mj)
        (error? . g$5925$T@1Mj)
        (condition-who . g$5981$T@1Mj)
        (condition-predicate . g$11518$T@1Mj)
        (condition-message . g$5886$T@1Mj)
        (condition-irritants . g$5966$T@1Mj)
        (condition-accessor . g$11517$T@1Mj)
        (condition . g$11516$T@1Mj)
        (assertion-violation? . g$5951$T@1Mj)
        (condition? . g$11515$T@1Mj)
        (&non-continuable . g$11281$T@1Mj)
        (&undefined . g$11280$T@1Mj)
        (&syntax . g$11279$T@1Mj)
        (&lexical . g$11278$T@1Mj)
        (&implementation-restriction . g$11277$T@1Mj)
        (&who . g$11276$T@1Mj)
        (&irritants . g$11275$T@1Mj)
        (&assertion . g$11274$T@1Mj)
        (&violation . g$11273$T@1Mj)
        (&error . g$11272$T@1Mj)
        (&serious . g$11271$T@1Mj)
        (&warning . g$11270$T@1Mj)
        (&message . g$11269$T@1Mj)
        (&condition . g$11268$T@1Mj)
        (define-condition-type . g$11267$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11715$T@1Mj
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11622$T@1Mj)
        (record-type-uid . g$11621$T@1Mj)
        (record-type-sealed? . g$11620$T@1Mj)
        (record-type-parent . g$11619$T@1Mj)
        (record-type-opaque? . g$11618$T@1Mj)
        (record-type-name . g$11617$T@1Mj)
        (record-type-generative? . g$11616$T@1Mj)
        (record-type-field-names . g$11615$T@1Mj)
        (record-rtd . g$11614$T@1Mj)
        (record-field-mutable? . g$11613$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11716$T@1Mj
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11629$T@1Mj)
        (record-predicate . g$11628$T@1Mj)
        (record-mutator . g$11627$T@1Mj)
        (record-constructor . g$11626$T@1Mj)
        (record-accessor . g$11625$T@1Mj)
        (make-record-type-descriptor . g$11624$T@1Mj)
        (make-record-constructor-descriptor . g$11623$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11717$T@1Mj
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11265$T@1Mj)
        (parent-rtd . g$11264$T@1Mj)
        (nongenerative . g$11263$T@1Mj)
        (opaque . g$11262$T@1Mj)
        (sealed . g$11261$T@1Mj)
        (protocol . g$11260$T@1Mj)
        (parent . g$11259$T@1Mj)
        (immutable . g$11258$T@1Mj)
        (mutable . g$11257$T@1Mj)
        (fields . g$11256$T@1Mj)
        (record-constructor-descriptor . g$11217$T@1Mj)
        (record-type-descriptor . g$11216$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11718$T@1Mj
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$7992$T@1Mj)
        (&no-nans-rcd . g$6242$T@1Mj)
        (&no-nans-rtd . g$6241$T@1Mj)
        (&no-infinities-rcd . g$6229$T@1Mj)
        (&no-infinities-rtd . g$6228$T@1Mj)
        (&i/o-encoding-rcd . g$6216$T@1Mj)
        (&i/o-encoding-rtd . g$6215$T@1Mj)
        (&i/o-decoding-rcd . g$6201$T@1Mj)
        (&i/o-decoding-rtd . g$6200$T@1Mj)
        (&i/o-port-rcd . g$6188$T@1Mj)
        (&i/o-port-rtd . g$6187$T@1Mj)
        (&i/o-file-does-not-exist-rcd . g$6173$T@1Mj)
        (&i/o-file-does-not-exist-rtd . g$6172$T@1Mj)
        (&i/o-file-already-exists-rcd . g$6160$T@1Mj)
        (&i/o-file-already-exists-rtd . g$6159$T@1Mj)
        (&i/o-file-is-read-only-rcd . g$6147$T@1Mj)
        (&i/o-file-is-read-only-rtd . g$6146$T@1Mj)
        (&i/o-file-protection-rcd . g$6134$T@1Mj)
        (&i/o-file-protection-rtd . g$6133$T@1Mj)
        (&i/o-filename-rcd . g$6121$T@1Mj)
        (&i/o-filename-rtd . g$6120$T@1Mj)
        (&i/o-invalid-position-rcd . g$6106$T@1Mj)
        (&i/o-invalid-position-rtd . g$6105$T@1Mj)
        (&i/o-write-rcd . g$6091$T@1Mj)
        (&i/o-write-rtd . g$6090$T@1Mj)
        (&i/o-read-rcd . g$6078$T@1Mj)
        (&i/o-read-rtd . g$6077$T@1Mj)
        (&i/o-rcd . g$6065$T@1Mj)
        (&i/o-rtd . g$6064$T@1Mj)
        (&undefined-rcd . g$6052$T@1Mj)
        (&undefined-rtd . g$6051$T@1Mj)
        (&syntax-rcd . g$6039$T@1Mj)
        (&syntax-rtd . g$6038$T@1Mj)
        (&lexical-rcd . g$6022$T@1Mj)
        (&lexical-rtd . g$6021$T@1Mj)
        (&implementation-restriction-rcd . g$6009$T@1Mj)
        (&implementation-restriction-rtd . g$6008$T@1Mj)
        (&non-continuable-rcd . g$5996$T@1Mj)
        (&non-continuable-rtd . g$5995$T@1Mj)
        (&who-rcd . g$5983$T@1Mj)
        (&who-rtd . g$5982$T@1Mj)
        (&irritants-rcd . g$5968$T@1Mj)
        (&irritants-rtd . g$5967$T@1Mj)
        (&assertion-rcd . g$5953$T@1Mj)
        (&assertion-rtd . g$5952$T@1Mj)
        (&violation-rcd . g$5940$T@1Mj)
        (&violation-rtd . g$5939$T@1Mj)
        (&error-rcd . g$5927$T@1Mj)
        (&error-rtd . g$5926$T@1Mj)
        (&serious-rcd . g$5914$T@1Mj)
        (&serious-rtd . g$5913$T@1Mj)
        (&warning-rcd . g$5901$T@1Mj)
        (&warning-rtd . g$5900$T@1Mj)
        (&message-rcd . g$5888$T@1Mj)
        (&message-rtd . g$5887$T@1Mj)
        (&condition-rcd . g$5848$T@1Mj)
        (&condition-rtd . g$5847$T@1Mj)
        (library-letrec* . g$11681$T@1Mj)
        (annotation-stripped . g$11680$T@1Mj)
        (annotation-source . g$11679$T@1Mj)
        (annotation-expression . g$11678$T@1Mj)
        (annotation? . g$11677$T@1Mj)
        (read-annotated . g$11676$T@1Mj)
        (tanh . g$11675$T@1Mj)
        (cosh . g$11674$T@1Mj)
        (sinh . g$11673$T@1Mj)
        (make-guid . g$11672$T@1Mj)
        (unspecified? . g$11671$T@1Mj)
        (make-list . g$5103$T@1Mj)
        (last-pair . g$5102$T@1Mj)
        (load-r5rs . g$11670$T@1Mj)
        (license . g$11669$T@1Mj)
        (stacktrace . g$11668$T@1Mj)
        (ironscheme-build . g$11139$T@1Mj)
        (define-clr-class-internal . g$11667$T@1Mj)
        (clr-field-set!-internal . g$11666$T@1Mj)
        (clr-field-get-internal . g$11665$T@1Mj)
        (clr-cast-internal . g$11664$T@1Mj)
        (clr-call-internal . g$11663$T@1Mj)
        (clr-new-internal . g$11662$T@1Mj)
        (clr-new-array-internal . g$11661$T@1Mj)
        (clr-is-internal . g$11660$T@1Mj)
        (clr-reference-internal . g$11659$T@1Mj)
        (clr-using-internal . g$11658$T@1Mj)
        (syntax-error . g$8112$T@1Mj)
        (syntax-dispatch . g$7987$T@1Mj)
        (compile-core . g$11657$T@1Mj)
        (eval-core . g$11656$T@1Mj)
        (remove-location . g$11655$T@1Mj)
        (set-symbol-value! . g$11654$T@1Mj)
        (symbol-value . g$11653$T@1Mj)
        (symbol-bound? . g$11652$T@1Mj)
        (ungensym . g$11651$T@1Mj)
        (gensym . g$11650$T@1Mj)
        (void . g$11649$T@1Mj)
        (load-serialized-library . g$11648$T@1Mj)
        (serialize-library . g$11647$T@1Mj)
        (compile-system-libraries . g$11143$T@1Mj)
        (compile->closure . g$11145$T@1Mj)
        (compile . g$11144$T@1Mj)
        (load . g$11138$T@1Mj)
        (string-normalize . g$11646$T@1Mj)
        (interaction-environment . g$8122$T@1Mj)
        (char-ready? . g$11645$T@1Mj)
        (string-upcase . g$11644$T@1Mj)
        (string-titlecase . g$11643$T@1Mj)
        (string-normalize-nfkd . g$6325$T@1Mj)
        (string-normalize-nfkc . g$6324$T@1Mj)
        (string-normalize-nfd . g$6323$T@1Mj)
        (string-normalize-nfc . g$6322$T@1Mj)
        (string-foldcase . g$11642$T@1Mj)
        (string-downcase . g$11641$T@1Mj)
        (string-ci>? . g$6309$T@1Mj)
        (string-ci>=? . g$6311$T@1Mj)
        (string-ci=? . g$6307$T@1Mj)
        (string-ci<? . g$6308$T@1Mj)
        (string-ci<=? . g$6310$T@1Mj)
        (char-whitespace? . g$11640$T@1Mj)
        (char-upper-case? . g$11639$T@1Mj)
        (char-title-case? . g$11638$T@1Mj)
        (char-numeric? . g$11637$T@1Mj)
        (char-lower-case? . g$11636$T@1Mj)
        (char-general-category . g$11635$T@1Mj)
        (char-upcase . g$11634$T@1Mj)
        (char-titlecase . g$11633$T@1Mj)
        (char-foldcase . g$11632$T@1Mj)
        (char-downcase . g$11631$T@1Mj)
        (char-ci>? . g$6319$T@1Mj)
        (char-ci>=? . g$6321$T@1Mj)
        (char-ci=? . g$6317$T@1Mj)
        (char-ci<? . g$6318$T@1Mj)
        (char-ci<=? . g$6320$T@1Mj)
        (char-alphabetic? . g$11630$T@1Mj)
        (variable-transformer-procedure . g$7799$T@1Mj)
        (variable-transformer? . g$7798$T@1Mj)
        (make-variable-transformer . g$7796$T@1Mj)
        (identifier? . g$8116$T@1Mj)
        (generate-temporaries . g$8105$T@1Mj)
        (free-identifier=? . g$8106$T@1Mj)
        (syntax->datum . g$8118$T@1Mj)
        (datum->syntax . g$8117$T@1Mj)
        (bound-identifier=? . g$8107$T@1Mj)
        (record-type-descriptor? . g$11629$T@1Mj)
        (record-predicate . g$11628$T@1Mj)
        (record-mutator . g$11627$T@1Mj)
        (record-constructor . g$11626$T@1Mj)
        (record-accessor . g$11625$T@1Mj)
        (make-record-type-descriptor . g$11624$T@1Mj)
        (make-record-constructor-descriptor . g$11623$T@1Mj)
        (record? . g$11622$T@1Mj)
        (record-type-uid . g$11621$T@1Mj)
        (record-type-sealed? . g$11620$T@1Mj)
        (record-type-parent . g$11619$T@1Mj)
        (record-type-opaque? . g$11618$T@1Mj)
        (record-type-name . g$11617$T@1Mj)
        (record-type-generative? . g$11616$T@1Mj)
        (record-type-field-names . g$11615$T@1Mj)
        (record-rtd . g$11614$T@1Mj)
        (record-field-mutable? . g$11613$T@1Mj)
        (delete-file . g$5716$T@1Mj)
        (file-exists? . g$5715$T@1Mj)
        (vector-sort! . g$11612$T@1Mj)
        (vector-sort . g$11611$T@1Mj)
        (list-sort . g$6278$T@1Mj)
        (symbol-hash . g$11610$T@1Mj)
        (string-ci-hash . g$11609$T@1Mj)
        (string-hash . g$11608$T@1Mj)
        (equal-hash . g$11607$T@1Mj)
        (hashtable-equivalence-function . g$11606$T@1Mj)
        (make-hashtable . g$11605$T@1Mj)
        (hashtable-hash-function . g$11604$T@1Mj)
        (make-eqv-hashtable . g$5683$T@1Mj)
        (make-eq-hashtable . g$5682$T@1Mj)
        (hashtable? . g$11603$T@1Mj)
        (hashtable-update! . g$5689$T@1Mj)
        (hashtable-size . g$5684$T@1Mj)
        (hashtable-set! . g$5686$T@1Mj)
        (hashtable-ref . g$5685$T@1Mj)
        (hashtable-mutable? . g$11602$T@1Mj)
        (hashtable-keys . g$11601$T@1Mj)
        (hashtable-entries . g$11600$T@1Mj)
        (hashtable-delete! . g$5687$T@1Mj)
        (hashtable-copy . g$11599$T@1Mj)
        (hashtable-contains? . g$5688$T@1Mj)
        (hashtable-clear! . g$5690$T@1Mj)
        (call-with-output-file . g$6621$T@1Mj)
        (call-with-input-file . g$6620$T@1Mj)
        (write-char . g$6612$T@1Mj)
        (write . g$11598$T@1Mj)
        (with-output-to-file . g$6619$T@1Mj)
        (with-input-from-file . g$6618$T@1Mj)
        (read-char . g$6611$T@1Mj)
        (read . g$11597$T@1Mj)
        (peek-char . g$6610$T@1Mj)
        (open-output-file . g$11596$T@1Mj)
        (open-input-file . g$11595$T@1Mj)
        (newline . g$6622$T@1Mj)
        (display . g$11594$T@1Mj)
        (close-output-port . g$11593$T@1Mj)
        (close-input-port . g$11592$T@1Mj)
        (eof-object? . g$11591$T@1Mj)
        (eof-object . g$11590$T@1Mj)
        (current-error-port . g$11589$T@1Mj)
        (current-output-port . g$11588$T@1Mj)
        (current-input-port . g$11587$T@1Mj)
        (output-port? . g$11586$T@1Mj)
        (input-port? . g$11585$T@1Mj)
        (utf-8-codec . g$11584$T@1Mj)
        (utf-16-codec . g$11583$T@1Mj)
        (transcoder-error-handling-mode . g$11582$T@1Mj)
        (transcoder-eol-style . g$11581$T@1Mj)
        (transcoder-codec . g$11580$T@1Mj)
        (transcoded-port . g$11579$T@1Mj)
        (textual-port? . g$11578$T@1Mj)
        (string->bytevector . g$11577$T@1Mj)
        (standard-output-port . g$11576$T@1Mj)
        (standard-input-port . g$11575$T@1Mj)
        (standard-error-port . g$11574$T@1Mj)
        (set-port-position! . g$11573$T@1Mj)
        (put-u8 . g$11572$T@1Mj)
        (put-string . g$11571$T@1Mj)
        (put-datum . g$6590$T@1Mj)
        (put-char . g$11570$T@1Mj)
        (put-bytevector . g$11569$T@1Mj)
        (port? . g$6595$T@1Mj)
        (port-transcoder . g$11568$T@1Mj)
        (port-position . g$11567$T@1Mj)
        (port-has-set-port-position!? . g$11566$T@1Mj)
        (port-has-port-position? . g$11565$T@1Mj)
        (port-eof? . g$11564$T@1Mj)
        (output-port-buffer-mode . g$11563$T@1Mj)
        (open-string-output-port . g$6594$T@1Mj)
        (open-string-input-port . g$11562$T@1Mj)
        (open-file-output-port . g$11561$T@1Mj)
        (open-file-input/output-port . g$11560$T@1Mj)
        (open-file-input-port . g$11559$T@1Mj)
        (open-bytevector-output-port . g$11558$T@1Mj)
        (open-bytevector-input-port . g$11557$T@1Mj)
        (native-transcoder . g$11556$T@1Mj)
        (native-eol-style . g$11555$T@1Mj)
        (make-transcoder . g$11554$T@1Mj)
        (latin-1-codec . g$11553$T@1Mj)
        (make-i/o-write-error . g$6088$T@1Mj)
        (make-i/o-read-error . g$6075$T@1Mj)
        (make-i/o-port-error . g$6183$T@1Mj)
        (make-i/o-invalid-position-error . g$6101$T@1Mj)
        (make-i/o-filename-error . g$6116$T@1Mj)
        (make-i/o-file-protection-error . g$6131$T@1Mj)
        (make-i/o-file-is-read-only-error . g$6144$T@1Mj)
        (make-i/o-file-does-not-exist-error . g$6170$T@1Mj)
        (make-i/o-file-already-exists-error . g$6157$T@1Mj)
        (make-i/o-error . g$6062$T@1Mj)
        (make-i/o-encoding-error . g$6211$T@1Mj)
        (make-i/o-decoding-error . g$6198$T@1Mj)
        (make-custom-textual-output-port . g$11552$T@1Mj)
        (make-custom-textual-input/output-port . g$11551$T@1Mj)
        (make-custom-textual-input-port . g$11550$T@1Mj)
        (make-custom-binary-output-port . g$11549$T@1Mj)
        (make-custom-binary-input/output-port . g$11548$T@1Mj)
        (make-custom-binary-input-port . g$11547$T@1Mj)
        (make-bytevector . g$11546$T@1Mj)
        (lookahead-u8 . g$11545$T@1Mj)
        (lookahead-char . g$11544$T@1Mj)
        (i/o-write-error? . g$6089$T@1Mj)
        (i/o-read-error? . g$6076$T@1Mj)
        (i/o-port-error? . g$6185$T@1Mj)
        (i/o-invalid-position-error? . g$6103$T@1Mj)
        (i/o-error-position . g$6104$T@1Mj)
        (i/o-filename-error? . g$6118$T@1Mj)
        (i/o-file-protection-error? . g$6132$T@1Mj)
        (i/o-file-is-read-only-error? . g$6145$T@1Mj)
        (i/o-file-does-not-exist-error? . g$6171$T@1Mj)
        (i/o-file-already-exists-error? . g$6158$T@1Mj)
        (i/o-error? . g$6063$T@1Mj)
        (i/o-error-port . g$6186$T@1Mj)
        (i/o-error-filename . g$6119$T@1Mj)
        (i/o-encoding-error? . g$6213$T@1Mj)
        (i/o-encoding-error-char . g$6214$T@1Mj)
        (i/o-decoding-error? . g$6199$T@1Mj)
        (get-u8 . g$11543$T@1Mj)
        (get-string-n! . g$11542$T@1Mj)
        (get-string-n . g$11541$T@1Mj)
        (get-string-all . g$11540$T@1Mj)
        (get-line . g$11539$T@1Mj)
        (get-datum . g$6591$T@1Mj)
        (get-char . g$11538$T@1Mj)
        (get-bytevector-some . g$11537$T@1Mj)
        (get-bytevector-n! . g$11536$T@1Mj)
        (get-bytevector-n . g$11535$T@1Mj)
        (get-bytevector-all . g$11534$T@1Mj)
        (flush-output-port . g$11533$T@1Mj)
        (close-port . g$11532$T@1Mj)
        (call-with-string-output-port . g$6596$T@1Mj)
        (call-with-port . g$6597$T@1Mj)
        (call-with-bytevector-output-port . g$11531$T@1Mj)
        (bytevector->string . g$11530$T@1Mj)
        (buffer-mode? . g$11529$T@1Mj)
        (binary-port? . g$11528$T@1Mj)
        (scheme-report-environment . g$8095$T@1Mj)
        (quotient . g$6257$T@1Mj)
        (null-environment . g$8094$T@1Mj)
        (remainder . g$6258$T@1Mj)
        (modulo . g$6259$T@1Mj)
        (inexact->exact . g$6254$T@1Mj)
        (force . g$6261$T@1Mj)
        (exact->inexact . g$6255$T@1Mj)
        (exit . g$11527$T@1Mj)
        (command-line . g$11134$T@1Mj)
        (string-fill! . g$11526$T@1Mj)
        (string-set! . g$11525$T@1Mj)
        (set-cdr! . g$11524$T@1Mj)
        (set-car! . g$11523$T@1Mj)
        (remove . g$5125$T@1Mj)
        (remv . g$5126$T@1Mj)
        (remp . g$5106$T@1Mj)
        (remq . g$5127$T@1Mj)
        (partition . g$5105$T@1Mj)
        (memv . g$5113$T@1Mj)
        (memq . g$5112$T@1Mj)
        (memp . g$5115$T@1Mj)
        (member . g$5114$T@1Mj)
        (exists . g$5119$T@1Mj)
        (for-all . g$5118$T@1Mj)
        (fold-right . g$5124$T@1Mj)
        (fold-left . g$5123$T@1Mj)
        (find . g$5104$T@1Mj)
        (filter . g$5107$T@1Mj)
        (cons* . g$5122$T@1Mj)
        (assv . g$5109$T@1Mj)
        (assq . g$5108$T@1Mj)
        (assp . g$5111$T@1Mj)
        (assoc . g$5110$T@1Mj)
        (with-exception-handler . g$11522$T@1Mj)
        (raise-continuable . g$11521$T@1Mj)
        (raise . g$11520$T@1Mj)
        (eval . g$8097$T@1Mj)
        (environment . g$8093$T@1Mj)
        (make-enumeration . g$6682$T@1Mj)
        (enum-set=? . g$6689$T@1Mj)
        (enum-set-universe . g$6683$T@1Mj)
        (enum-set-union . g$6690$T@1Mj)
        (enum-set-subset? . g$6688$T@1Mj)
        (enum-set-projection . g$6694$T@1Mj)
        (enum-set-member? . g$6687$T@1Mj)
        (enum-set-intersection . g$6691$T@1Mj)
        (enum-set-indexer . g$6684$T@1Mj)
        (enum-set-difference . g$6692$T@1Mj)
        (enum-set-constructor . g$6685$T@1Mj)
        (enum-set-complement . g$6693$T@1Mj)
        (enum-set->list . g$6686$T@1Mj)
        (who-condition? . g$5980$T@1Mj)
        (warning? . g$5899$T@1Mj)
        (violation? . g$5938$T@1Mj)
        (undefined-violation? . g$6050$T@1Mj)
        (syntax-violation? . g$6035$T@1Mj)
        (syntax-violation-subform . g$6037$T@1Mj)
        (syntax-violation-form . g$6036$T@1Mj)
        (syntax-violation . g$8115$T@1Mj)
        (simple-conditions . g$11519$T@1Mj)
        (serious-condition? . g$5912$T@1Mj)
        (non-continuable-violation? . g$5994$T@1Mj)
        (message-condition? . g$5885$T@1Mj)
        (make-who-condition . g$5978$T@1Mj)
        (make-warning . g$5898$T@1Mj)
        (make-violation . g$5937$T@1Mj)
        (make-undefined-violation . g$6049$T@1Mj)
        (make-syntax-violation . g$6032$T@1Mj)
        (make-serious-condition . g$5911$T@1Mj)
        (make-non-continuable-violation . g$5993$T@1Mj)
        (make-message-condition . g$5883$T@1Mj)
        (make-lexical-violation . g$6019$T@1Mj)
        (make-irritants-condition . g$5963$T@1Mj)
        (make-implementation-restriction-violation . g$6006$T@1Mj)
        (make-error . g$5924$T@1Mj)
        (make-assertion-violation . g$5950$T@1Mj)
        (lexical-violation? . g$6020$T@1Mj)
        (irritants-condition? . g$5965$T@1Mj)
        (implementation-restriction-violation? . g$6007$T@1Mj)
        (error? . g$5925$T@1Mj)
        (condition-who . g$5981$T@1Mj)
        (condition-predicate . g$11518$T@1Mj)
        (condition-message . g$5886$T@1Mj)
        (condition-irritants . g$5966$T@1Mj)
        (condition-accessor . g$11517$T@1Mj)
        (condition . g$11516$T@1Mj)
        (assertion-violation? . g$5951$T@1Mj)
        (condition? . g$11515$T@1Mj)
        (utf32->string . g$11514$T@1Mj)
        (utf16->string . g$11513$T@1Mj)
        (utf8->string . g$11512$T@1Mj)
        (uint-list->bytevector . g$11511$T@1Mj)
        (u8-list->bytevector . g$11510$T@1Mj)
        (string->utf8 . g$11509$T@1Mj)
        (string->utf32 . g$11508$T@1Mj)
        (string->utf16 . g$11507$T@1Mj)
        (sint-list->bytevector . g$11506$T@1Mj)
        (native-endianness . g$5722$T@1Mj)
        (bytevector? . g$5424$T@1Mj)
        (bytevector=? . g$11505$T@1Mj)
        (bytevector-uint-set! . g$11504$T@1Mj)
        (bytevector-uint-ref . g$11503$T@1Mj)
        (bytevector-u8-set! . g$11502$T@1Mj)
        (bytevector-u8-ref . g$11501$T@1Mj)
        (bytevector-u64-set! . g$5743$T@1Mj)
        (bytevector-u64-ref . g$5739$T@1Mj)
        (bytevector-u64-native-set! . g$5745$T@1Mj)
        (bytevector-u64-native-ref . g$5741$T@1Mj)
        (bytevector-u32-set! . g$5735$T@1Mj)
        (bytevector-u32-ref . g$5731$T@1Mj)
        (bytevector-u32-native-set! . g$5737$T@1Mj)
        (bytevector-u32-native-ref . g$5733$T@1Mj)
        (bytevector-u16-set! . g$5727$T@1Mj)
        (bytevector-u16-ref . g$5723$T@1Mj)
        (bytevector-u16-native-set! . g$5729$T@1Mj)
        (bytevector-u16-native-ref . g$5725$T@1Mj)
        (bytevector-sint-set! . g$11500$T@1Mj)
        (bytevector-sint-ref . g$11499$T@1Mj)
        (bytevector-s8-set! . g$11498$T@1Mj)
        (bytevector-s8-ref . g$11497$T@1Mj)
        (bytevector-s64-set! . g$5744$T@1Mj)
        (bytevector-s64-ref . g$5740$T@1Mj)
        (bytevector-s64-native-set! . g$5746$T@1Mj)
        (bytevector-s64-native-ref . g$5742$T@1Mj)
        (bytevector-s32-set! . g$5736$T@1Mj)
        (bytevector-s32-ref . g$5732$T@1Mj)
        (bytevector-s32-native-set! . g$5738$T@1Mj)
        (bytevector-s32-native-ref . g$5734$T@1Mj)
        (bytevector-s16-set! . g$5728$T@1Mj)
        (bytevector-s16-ref . g$5724$T@1Mj)
        (bytevector-s16-native-set! . g$5730$T@1Mj)
        (bytevector-s16-native-ref . g$5726$T@1Mj)
        (bytevector-length . g$11496$T@1Mj)
        (bytevector-ieee-single-set! . g$11495$T@1Mj)
        (bytevector-ieee-single-ref . g$11494$T@1Mj)
        (bytevector-ieee-single-native-set! . g$5749$T@1Mj)
        (bytevector-ieee-single-native-ref . g$5747$T@1Mj)
        (bytevector-ieee-double-set! . g$11493$T@1Mj)
        (bytevector-ieee-double-ref . g$11492$T@1Mj)
        (bytevector-ieee-double-native-set! . g$5750$T@1Mj)
        (bytevector-ieee-double-native-ref . g$5748$T@1Mj)
        (bytevector-fill! . g$11491$T@1Mj)
        (bytevector-copy! . g$11490$T@1Mj)
        (bytevector-copy . g$11489$T@1Mj)
        (bytevector->uint-list . g$11488$T@1Mj)
        (bytevector->u8-list . g$11487$T@1Mj)
        (bytevector->sint-list . g$11486$T@1Mj)
        (no-nans-violation? . g$6240$T@1Mj)
        (no-infinities-violation? . g$6227$T@1Mj)
        (make-no-nans-violation . g$6239$T@1Mj)
        (make-no-infinities-violation . g$6226$T@1Mj)
        (real->flonum . g$11485$T@1Mj)
        (flzero? . g$6536$T@1Mj)
        (fltruncate . g$6531$T@1Mj)
        (fltan . g$6521$T@1Mj)
        (flsqrt . g$6526$T@1Mj)
        (flsin . g$6519$T@1Mj)
        (flround . g$6532$T@1Mj)
        (flpositive? . g$6534$T@1Mj)
        (flonum? . g$5429$T@1Mj)
        (flodd? . g$6538$T@1Mj)
        (flnumerator . g$11484$T@1Mj)
        (flnegative? . g$6535$T@1Mj)
        (flnan? . g$6518$T@1Mj)
        (flmod0 . g$6512$T@1Mj)
        (flmod . g$6511$T@1Mj)
        (flmin . g$6540$T@1Mj)
        (flmax . g$6539$T@1Mj)
        (fllog . g$6525$T@1Mj)
        (flinteger? . g$6515$T@1Mj)
        (flinfinite? . g$6517$T@1Mj)
        (flfloor . g$6530$T@1Mj)
        (flfinite? . g$6516$T@1Mj)
        (flexpt . g$6528$T@1Mj)
        (flexp . g$6527$T@1Mj)
        (fleven? . g$6537$T@1Mj)
        (fldiv0-and-mod0 . g$6514$T@1Mj)
        (fldiv0 . g$11483$T@1Mj)
        (fldiv-and-mod . g$6513$T@1Mj)
        (fldiv . g$11482$T@1Mj)
        (fldenominator . g$11481$T@1Mj)
        (flcos . g$6520$T@1Mj)
        (flceiling . g$6529$T@1Mj)
        (flatan . g$6524$T@1Mj)
        (flasin . g$6522$T@1Mj)
        (flacos . g$6523$T@1Mj)
        (flabs . g$6533$T@1Mj)
        (fl>? . g$11480$T@1Mj)
        (fl>=? . g$11479$T@1Mj)
        (fl=? . g$11478$T@1Mj)
        (fl<? . g$11477$T@1Mj)
        (fl<=? . g$11476$T@1Mj)
        (fl/ . g$11475$T@1Mj)
        (fl- . g$11474$T@1Mj)
        (fl+ . g$11473$T@1Mj)
        (fl* . g$11472$T@1Mj)
        (fixnum->flonum . g$11471$T@1Mj)
        (fxzero? . g$6432$T@1Mj)
        (fxxor . g$11470$T@1Mj)
        (fxrotate-bit-field . g$6446$T@1Mj)
        (fxreverse-bit-field . g$11469$T@1Mj)
        (fxpositive? . g$6430$T@1Mj)
        (fxodd? . g$6434$T@1Mj)
        (fxnot . g$11468$T@1Mj)
        (fxnegative? . g$6431$T@1Mj)
        (fxmod0 . g$6427$T@1Mj)
        (fxmod . g$6426$T@1Mj)
        (fxmin . g$6436$T@1Mj)
        (fxmax . g$6435$T@1Mj)
        (fxlength . g$11467$T@1Mj)
        (fxior . g$11466$T@1Mj)
        (fxif . g$6440$T@1Mj)
        (fxfirst-bit-set . g$11465$T@1Mj)
        (fxeven? . g$6433$T@1Mj)
        (fxdiv0-and-mod0 . g$6429$T@1Mj)
        (fxdiv0 . g$11464$T@1Mj)
        (fxdiv-and-mod . g$6428$T@1Mj)
        (fxdiv . g$11463$T@1Mj)
        (fxcopy-bit-field . g$6443$T@1Mj)
        (fxcopy-bit . g$6441$T@1Mj)
        (fxbit-set? . g$11462$T@1Mj)
        (fxbit-field . g$6442$T@1Mj)
        (fxbit-count . g$11461$T@1Mj)
        (fxarithmetic-shift-right . g$6445$T@1Mj)
        (fxarithmetic-shift-left . g$6444$T@1Mj)
        (fxarithmetic-shift . g$11460$T@1Mj)
        (fxand . g$11459$T@1Mj)
        (fx>? . g$11458$T@1Mj)
        (fx>=? . g$11457$T@1Mj)
        (fx=? . g$11456$T@1Mj)
        (fx<? . g$11455$T@1Mj)
        (fx<=? . g$11454$T@1Mj)
        (fx-/carry . g$6438$T@1Mj)
        (fx- . g$11453$T@1Mj)
        (fx+/carry . g$6439$T@1Mj)
        (fx+ . g$11452$T@1Mj)
        (fx*/carry . g$6437$T@1Mj)
        (fx* . g$11451$T@1Mj)
        (greatest-fixnum . g$11450$T@1Mj)
        (least-fixnum . g$11449$T@1Mj)
        (fixnum-width . g$5430$T@1Mj)
        (fixnum? . g$5428$T@1Mj)
        (bitwise-rotate-bit-field . g$6389$T@1Mj)
        (bitwise-reverse-bit-field . g$11448$T@1Mj)
        (bitwise-length . g$11447$T@1Mj)
        (bitwise-if . g$6383$T@1Mj)
        (bitwise-first-bit-set . g$11446$T@1Mj)
        (bitwise-copy-bit-field . g$6386$T@1Mj)
        (bitwise-copy-bit . g$6384$T@1Mj)
        (bitwise-bit-set? . g$11445$T@1Mj)
        (bitwise-bit-field . g$6385$T@1Mj)
        (bitwise-bit-count . g$11444$T@1Mj)
        (bitwise-xor . g$11443$T@1Mj)
        (bitwise-ior . g$11442$T@1Mj)
        (bitwise-and . g$11441$T@1Mj)
        (bitwise-not . g$11440$T@1Mj)
        (bitwise-arithmetic-shift-right . g$6388$T@1Mj)
        (bitwise-arithmetic-shift-left . g$6387$T@1Mj)
        (bitwise-arithmetic-shift . g$11439$T@1Mj)
        (zero? . g$5464$T@1Mj)
        (vector? . g$5423$T@1Mj)
        (vector-set! . g$11438$T@1Mj)
        (vector-ref . g$11437$T@1Mj)
        (vector-map . g$5496$T@1Mj)
        (vector-length . g$11436$T@1Mj)
        (vector-for-each . g$5497$T@1Mj)
        (vector-fill! . g$5431$T@1Mj)
        (vector->list . g$11435$T@1Mj)
        (vector . g$11434$T@1Mj)
        (values . g$11433$T@1Mj)
        (truncate . g$11432$T@1Mj)
        (tan . g$11431$T@1Mj)
        (symbol? . g$5425$T@1Mj)
        (symbol=? . g$5481$T@1Mj)
        (symbol->string . g$11430$T@1Mj)
        (substring . g$11429$T@1Mj)
        (string? . g$11428$T@1Mj)
        (string>? . g$5478$T@1Mj)
        (string>=? . g$5480$T@1Mj)
        (string=? . g$5476$T@1Mj)
        (string<? . g$5477$T@1Mj)
        (string<=? . g$5479$T@1Mj)
        (string-ref . g$11427$T@1Mj)
        (string-length . g$11426$T@1Mj)
        (string-for-each . g$5498$T@1Mj)
        (string-copy . g$11425$T@1Mj)
        (string-append . g$11424$T@1Mj)
        (string->symbol . g$11423$T@1Mj)
        (string->number . g$11422$T@1Mj)
        (string->list . g$11421$T@1Mj)
        (string . g$11420$T@1Mj)
        (sqrt . g$11419$T@1Mj)
        (sin . g$11418$T@1Mj)
        (round . g$11417$T@1Mj)
        (reverse . g$5433$T@1Mj)
        (real? . g$11416$T@1Mj)
        (real-valued? . g$11415$T@1Mj)
        (real-part . g$11414$T@1Mj)
        (rationalize . g$5493$T@1Mj)
        (rational? . g$11413$T@1Mj)
        (rational-valued? . g$11412$T@1Mj)
        (procedure? . g$5427$T@1Mj)
        (positive? . g$5462$T@1Mj)
        (pair? . g$11411$T@1Mj)
        (odd? . g$5466$T@1Mj)
        (numerator . g$11410$T@1Mj)
        (number? . g$11409$T@1Mj)
        (number->string . g$11408$T@1Mj)
        (null? . g$11407$T@1Mj)
        (not . g$11406$T@1Mj)
        (negative? . g$5463$T@1Mj)
        (nan? . g$11405$T@1Mj)
        (min . g$5468$T@1Mj)
        (max . g$5467$T@1Mj)
        (map . g$5120$T@1Mj)
        (make-vector . g$11404$T@1Mj)
        (make-string . g$11403$T@1Mj)
        (make-rectangular . g$11402$T@1Mj)
        (make-polar . g$11401$T@1Mj)
        (magnitude . g$11400$T@1Mj)
        (log . g$11399$T@1Mj)
        (list? . g$11398$T@1Mj)
        (list-tail . g$5100$T@1Mj)
        (list-ref . g$5101$T@1Mj)
        (list->vector . g$5420$T@1Mj)
        (list->string . g$5421$T@1Mj)
        (list . g$11397$T@1Mj)
        (length . g$11396$T@1Mj)
        (lcm . g$5470$T@1Mj)
        (integer? . g$11395$T@1Mj)
        (integer-valued? . g$11394$T@1Mj)
        (integer->char . g$11393$T@1Mj)
        (infinite? . g$11392$T@1Mj)
        (inexact? . g$11391$T@1Mj)
        (inexact . g$11390$T@1Mj)
        (imag-part . g$11389$T@1Mj)
        (gcd . g$5469$T@1Mj)
        (for-each . g$5121$T@1Mj)
        (floor . g$11388$T@1Mj)
        (finite? . g$11387$T@1Mj)
        (expt . g$11386$T@1Mj)
        (exp . g$11385$T@1Mj)
        (exact? . g$11384$T@1Mj)
        (exact-integer-sqrt . g$11383$T@1Mj)
        (exact . g$11382$T@1Mj)
        (even? . g$5465$T@1Mj)
        (error . g$11381$T@1Mj)
        (eqv? . g$11380$T@1Mj)
        (equal? . g$11379$T@1Mj)
        (eq? . g$11378$T@1Mj)
        (dynamic-wind . g$11377$T@1Mj)
        (div0-and-mod0 . g$5419$T@1Mj)
        (mod0 . g$5417$T@1Mj)
        (div0 . g$11376$T@1Mj)
        (div-and-mod . g$5418$T@1Mj)
        (mod . g$5416$T@1Mj)
        (div . g$11375$T@1Mj)
        (denominator . g$11374$T@1Mj)
        (cos . g$11373$T@1Mj)
        (cons . g$11372$T@1Mj)
        (complex? . g$11371$T@1Mj)
        (char? . g$5422$T@1Mj)
        (char>? . g$5490$T@1Mj)
        (char>=? . g$5492$T@1Mj)
        (char=? . g$5488$T@1Mj)
        (char<? . g$5489$T@1Mj)
        (char<=? . g$5491$T@1Mj)
        (char->integer . g$11370$T@1Mj)
        (ceiling . g$11369$T@1Mj)
        (call-with-values . g$11368$T@1Mj)
        (call/cc . g$11367$T@1Mj)
        (call-with-current-continuation . g$11366$T@1Mj)
        (cddddr . g$5461$T@1Mj)
        (cdddar . g$5460$T@1Mj)
        (cddadr . g$5459$T@1Mj)
        (cddaar . g$5458$T@1Mj)
        (cdaddr . g$5457$T@1Mj)
        (cdadar . g$5456$T@1Mj)
        (cdaadr . g$5455$T@1Mj)
        (cdaaar . g$5454$T@1Mj)
        (cadddr . g$5453$T@1Mj)
        (caddar . g$5452$T@1Mj)
        (cadadr . g$5451$T@1Mj)
        (cadaar . g$5450$T@1Mj)
        (caaddr . g$5449$T@1Mj)
        (caadar . g$5448$T@1Mj)
        (caaadr . g$5447$T@1Mj)
        (caaaar . g$5446$T@1Mj)
        (cdddr . g$5445$T@1Mj)
        (cddar . g$5444$T@1Mj)
        (cdadr . g$5443$T@1Mj)
        (cdaar . g$5442$T@1Mj)
        (caddr . g$5441$T@1Mj)
        (cadar . g$5440$T@1Mj)
        (caadr . g$5439$T@1Mj)
        (caaar . g$5438$T@1Mj)
        (cddr . g$5437$T@1Mj)
        (cdar . g$5436$T@1Mj)
        (cadr . g$5435$T@1Mj)
        (caar . g$5434$T@1Mj)
        (cdr . g$11365$T@1Mj)
        (car . g$11364$T@1Mj)
        (boolean? . g$5426$T@1Mj)
        (boolean=? . g$5482$T@1Mj)
        (atan . g$11363$T@1Mj)
        (assertion-violation . g$11362$T@1Mj)
        (asin . g$11361$T@1Mj)
        (apply . g$11360$T@1Mj)
        (append . g$11359$T@1Mj)
        (angle . g$11358$T@1Mj)
        (acos . g$11357$T@1Mj)
        (abs . g$11356$T@1Mj)
        (/ . g$11355$T@1Mj)
        (* . g$11354$T@1Mj)
        (- . g$11353$T@1Mj)
        (+ . g$11352$T@1Mj)
        (>= . g$11351$T@1Mj)
        (> . g$11350$T@1Mj)
        (= . g$11349$T@1Mj)
        (<= . g$11348$T@1Mj)
        (< . g$11347$T@1Mj)
        ($$fxnot . g$11346$T@1Mj)
        ($$fx- . g$11345$T@1Mj)
        ($$fx* . g$11344$T@1Mj)
        ($$fx+ . g$11343$T@1Mj)
        ($fxxor . g$11342$T@1Mj)
        ($fxior . g$11341$T@1Mj)
        ($fxand . g$11340$T@1Mj)
        ($fx>=? . g$11339$T@1Mj)
        ($fx>? . g$11338$T@1Mj)
        ($fx<=? . g$11337$T@1Mj)
        ($fx<? . g$11336$T@1Mj)
        ($fx- . g$11335$T@1Mj)
        ($fx* . g$11334$T@1Mj)
        ($fx+ . g$11333$T@1Mj)
        ($fx=? . g$11332$T@1Mj)
        ($vector-set! . g$11331$T@1Mj)
        ($vector-ref . g$11330$T@1Mj)
        ($cdr . g$11329$T@1Mj)
        ($car . g$11328$T@1Mj)
        (make-record-printer . g$11327$T@1Mj)
        (eqv-hash . g$11326$T@1Mj)
        (reverse! . g$11325$T@1Mj)
        (deserialize-port . g$11324$T@1Mj)
        (serialize-port . g$11323$T@1Mj)
        (enum-set? . g$6659$T@1Mj)
        (make-promise . g$6260$T@1Mj)
        (load/unload . g$11137$T@1Mj)
        (load/args . g$11136$T@1Mj)
        (printf . g$6768$T@1Mj)
        (fprintf . g$6769$T@1Mj)
        (format . g$6770$T@1Mj)
        (procedure-form . g$11322$T@1Mj)
        (procedure-environment . g$11321$T@1Mj)
        (procedure-name . g$11320$T@1Mj)
        (procedure-arity . g$11319$T@1Mj)
        (gc-collect . g$11318$T@1Mj)
        (typeof . g$11317$T@1Mj)
        (clr-type? . g$11316$T@1Mj)
        (get-clr-type . g$11315$T@1Mj)
        (get-command-line . g$11314$T@1Mj)
        (vector-append . g$11313$T@1Mj)
        (vector-filter . g$11312$T@1Mj)
        (vector-reverse! . g$11311$T@1Mj)
        (vector-contains? . g$11310$T@1Mj)
        (vector-index-of . g$11309$T@1Mj)
        (vector-copy . g$11308$T@1Mj)
        (vector-binary-search . g$11307$T@1Mj)
        (string-ci-compare . g$11306$T@1Mj)
        (string-compare . g$11305$T@1Mj)
        (string-format . g$11304$T@1Mj)
        (trace-printer . g$11133$T@1Mj)
        (make-traced-procedure . g$11303$T@1Mj)
        (make-traced-macro . g$6790$T@1Mj)
        (assertion-error . g$8111$T@1Mj)
        (time-it . g$11302$T@1Mj)
        (make-parameter . g$6797$T@1Mj)
        (library-locator . g$11301$T@1Mj)
        (get-library-paths . g$11300$T@1Mj)
        (open-tcp-input/output-port . g$11299$T@1Mj)
        (hashtable-for-each . g$11298$T@1Mj)
        (hashtable-map . g$11297$T@1Mj)
        (environment-bindings . g$8089$T@1Mj)
        (environment-symbols . g$8092$T@1Mj)
        (interaction-environment-symbols . g$8088$T@1Mj)
        (optimization-level . g$11296$T@1Mj)
        (library-path . g$7419$T@1Mj)
        (make-compile-time-value . g$7797$T@1Mj)
        (expand->core . g$8098$T@1Mj)
        (expand . g$8096$T@1Mj)
        (syntax-transpose . g$8035$T@1Mj)
        (convert->cps . g$7116$T@1Mj)
        (installed-libraries . g$7440$T@1Mj)
        (uninstall-library . g$7431$T@1Mj)
        (pretty-gensyms . g$6880$T@1Mj)
        (pretty-width . g$6877$T@1Mj)
        (pretty-print . g$6882$T@1Mj)
        (&no-nans . g$11295$T@1Mj)
        (&no-infinities . g$11294$T@1Mj)
        (&i/o-encoding . g$11293$T@1Mj)
        (&i/o-decoding . g$11292$T@1Mj)
        (&i/o-port . g$11291$T@1Mj)
        (&i/o-file-does-not-exist . g$11290$T@1Mj)
        (&i/o-file-already-exists . g$11289$T@1Mj)
        (&i/o-file-is-read-only . g$11288$T@1Mj)
        (&i/o-file-protection . g$11287$T@1Mj)
        (&i/o-filename . g$11286$T@1Mj)
        (&i/o-invalid-position . g$11285$T@1Mj)
        (&i/o-write . g$11284$T@1Mj)
        (&i/o-read . g$11283$T@1Mj)
        (&i/o . g$11282$T@1Mj)
        (&non-continuable . g$11281$T@1Mj)
        (&undefined . g$11280$T@1Mj)
        (&syntax . g$11279$T@1Mj)
        (&lexical . g$11278$T@1Mj)
        (&implementation-restriction . g$11277$T@1Mj)
        (&who . g$11276$T@1Mj)
        (&irritants . g$11275$T@1Mj)
        (&assertion . g$11274$T@1Mj)
        (&violation . g$11273$T@1Mj)
        (&error . g$11272$T@1Mj)
        (&serious . g$11271$T@1Mj)
        (&warning . g$11270$T@1Mj)
        (&message . g$11269$T@1Mj)
        (&condition . g$11268$T@1Mj)
        (define-condition-type . g$11267$T@1Mj)
        (define-enumeration . g$11266$T@1Mj)
        (define-record-type . g$11265$T@1Mj)
        (parent-rtd . g$11264$T@1Mj)
        (nongenerative . g$11263$T@1Mj)
        (opaque . g$11262$T@1Mj)
        (sealed . g$11261$T@1Mj)
        (protocol . g$11260$T@1Mj)
        (parent . g$11259$T@1Mj)
        (immutable . g$11258$T@1Mj)
        (mutable . g$11257$T@1Mj)
        (fields . g$11256$T@1Mj)
        (error-handling-mode . g$11255$T@1Mj)
        (file-options . g$11254$T@1Mj)
        (buffer-mode . g$11253$T@1Mj)
        (eol-style . g$11252$T@1Mj)
        (guard . g$11251$T@1Mj)
        (trace-letrec-syntax . g$11250$T@1Mj)
        (trace-let-syntax . g$11249$T@1Mj)
        (trace-define-syntax . g$11248$T@1Mj)
        (trace-define . g$11247$T@1Mj)
        (trace-lambda . g$11246$T@1Mj)
        (unsyntax-splicing . g$11245$T@1Mj)
        (unsyntax . g$11244$T@1Mj)
        (unquote-splicing . g$11243$T@1Mj)
        (unquote . g$11242$T@1Mj)
        (_ . g$11241$T@1Mj)
        (else . g$11240$T@1Mj)
        (=> . g$11239$T@1Mj)
        (... . g$11238$T@1Mj)
        (assert . g$11237$T@1Mj)
        (endianness . g$11236$T@1Mj)
        (delay . g$11235$T@1Mj)
        (time . g$11234$T@1Mj)
        (or . g$11233$T@1Mj)
        (and . g$11232$T@1Mj)
        (do . g$11231$T@1Mj)
        (cond . g$11230$T@1Mj)
        (let* . g$11229$T@1Mj)
        (let . g$11228$T@1Mj)
        (identifier-syntax . g$11227$T@1Mj)
        (with-syntax . g$11226$T@1Mj)
        (quasisyntax . g$11225$T@1Mj)
        (quasiquote . g$11224$T@1Mj)
        (syntax-rules . g$11223$T@1Mj)
        (include-into . g$11222$T@1Mj)
        (include . g$11221$T@1Mj)
        (define-struct . g$11220$T@1Mj)
        (let-values . g$11219$T@1Mj)
        (let*-values . g$11218$T@1Mj)
        (record-constructor-descriptor . g$11217$T@1Mj)
        (record-type-descriptor . g$11216$T@1Mj)
        (fluid-let-syntax . g$11215$T@1Mj)
        (case . g$11214$T@1Mj)
        (parameterize . g$11213$T@1Mj)
        (unless . g$11212$T@1Mj)
        (when . g$11211$T@1Mj)
        (if . g$11210$T@1Mj)
        (letrec* . g$11209$T@1Mj)
        (letrec . g$11208$T@1Mj)
        (type-descriptor . g$11207$T@1Mj)
        (case-lambda . g$11206$T@1Mj)
        (lambda . g$11205$T@1Mj)
        (syntax . g$11204$T@1Mj)
        (syntax-case . g$11203$T@1Mj)
        (quote . g$11202$T@1Mj)
        (foreign-call . g$11201$T@1Mj)
        (letrec-syntax . g$11200$T@1Mj)
        (let-syntax . g$11199$T@1Mj)
        (set! . g$11198$T@1Mj)
        (export . g$11197$T@1Mj)
        (import . g$11196$T@1Mj)
        (library . g$11195$T@1Mj)
        (begin . g$11194$T@1Mj)
        (module . g$11193$T@1Mj)
        (define-syntax . g$11192$T@1Mj)
        (define . g$11191$T@1Mj))
      '((g$7992$T@1Mj core-prim . ellipsis-map)
        (g$6242$T@1Mj core-prim . &no-nans-rcd)
        (g$6241$T@1Mj core-prim . &no-nans-rtd)
        (g$6229$T@1Mj core-prim . &no-infinities-rcd)
        (g$6228$T@1Mj core-prim . &no-infinities-rtd)
        (g$6216$T@1Mj core-prim . &i/o-encoding-rcd)
        (g$6215$T@1Mj core-prim . &i/o-encoding-rtd)
        (g$6201$T@1Mj core-prim . &i/o-decoding-rcd)
        (g$6200$T@1Mj core-prim . &i/o-decoding-rtd)
        (g$6188$T@1Mj core-prim . &i/o-port-rcd)
        (g$6187$T@1Mj core-prim . &i/o-port-rtd)
        (g$6173$T@1Mj core-prim . &i/o-file-does-not-exist-rcd)
        (g$6172$T@1Mj core-prim . &i/o-file-does-not-exist-rtd)
        (g$6160$T@1Mj core-prim . &i/o-file-already-exists-rcd)
        (g$6159$T@1Mj core-prim . &i/o-file-already-exists-rtd)
        (g$6147$T@1Mj core-prim . &i/o-file-is-read-only-rcd)
        (g$6146$T@1Mj core-prim . &i/o-file-is-read-only-rtd)
        (g$6134$T@1Mj core-prim . &i/o-file-protection-rcd)
        (g$6133$T@1Mj core-prim . &i/o-file-protection-rtd)
        (g$6121$T@1Mj core-prim . &i/o-filename-rcd)
        (g$6120$T@1Mj core-prim . &i/o-filename-rtd)
        (g$6106$T@1Mj core-prim . &i/o-invalid-position-rcd)
        (g$6105$T@1Mj core-prim . &i/o-invalid-position-rtd)
        (g$6091$T@1Mj core-prim . &i/o-write-rcd)
        (g$6090$T@1Mj core-prim . &i/o-write-rtd)
        (g$6078$T@1Mj core-prim . &i/o-read-rcd)
        (g$6077$T@1Mj core-prim . &i/o-read-rtd)
        (g$6065$T@1Mj core-prim . &i/o-rcd)
        (g$6064$T@1Mj core-prim . &i/o-rtd)
        (g$6052$T@1Mj core-prim . &undefined-rcd)
        (g$6051$T@1Mj core-prim . &undefined-rtd)
        (g$6039$T@1Mj core-prim . &syntax-rcd)
        (g$6038$T@1Mj core-prim . &syntax-rtd)
        (g$6022$T@1Mj core-prim . &lexical-rcd)
        (g$6021$T@1Mj core-prim . &lexical-rtd)
        (g$6009$T@1Mj core-prim . &implementation-restriction-rcd)
        (g$6008$T@1Mj core-prim . &implementation-restriction-rtd)
        (g$5996$T@1Mj core-prim . &non-continuable-rcd)
        (g$5995$T@1Mj core-prim . &non-continuable-rtd)
        (g$5983$T@1Mj core-prim . &who-rcd)
        (g$5982$T@1Mj core-prim . &who-rtd)
        (g$5968$T@1Mj core-prim . &irritants-rcd)
        (g$5967$T@1Mj core-prim . &irritants-rtd)
        (g$5953$T@1Mj core-prim . &assertion-rcd)
        (g$5952$T@1Mj core-prim . &assertion-rtd)
        (g$5940$T@1Mj core-prim . &violation-rcd)
        (g$5939$T@1Mj core-prim . &violation-rtd)
        (g$5927$T@1Mj core-prim . &error-rcd)
        (g$5926$T@1Mj core-prim . &error-rtd)
        (g$5914$T@1Mj core-prim . &serious-rcd)
        (g$5913$T@1Mj core-prim . &serious-rtd)
        (g$5901$T@1Mj core-prim . &warning-rcd)
        (g$5900$T@1Mj core-prim . &warning-rtd)
        (g$5888$T@1Mj core-prim . &message-rcd)
        (g$5887$T@1Mj core-prim . &message-rtd)
        (g$5848$T@1Mj core-prim . &condition-rcd)
        (g$5847$T@1Mj core-prim . &condition-rtd)
        (g$11681$T@1Mj core-prim . library-letrec*)
        (g$11680$T@1Mj core-prim . annotation-stripped)
        (g$11679$T@1Mj core-prim . annotation-source)
        (g$11678$T@1Mj core-prim . annotation-expression)
        (g$11677$T@1Mj core-prim . annotation?)
        (g$11676$T@1Mj core-prim . read-annotated)
        (g$11675$T@1Mj core-prim . tanh)
        (g$11674$T@1Mj core-prim . cosh)
        (g$11673$T@1Mj core-prim . sinh)
        (g$11672$T@1Mj core-prim . make-guid)
        (g$11671$T@1Mj core-prim . unspecified?)
        (g$5103$T@1Mj core-prim . make-list)
        (g$5102$T@1Mj core-prim . last-pair)
        (g$11670$T@1Mj core-prim . load-r5rs)
        (g$11669$T@1Mj core-prim . license)
        (g$11668$T@1Mj core-prim . stacktrace)
        (g$11139$T@1Mj core-prim . ironscheme-build)
        (g$11667$T@1Mj core-prim . define-clr-class-internal)
        (g$11666$T@1Mj core-prim . clr-field-set!-internal)
        (g$11665$T@1Mj core-prim . clr-field-get-internal)
        (g$11664$T@1Mj core-prim . clr-cast-internal)
        (g$11663$T@1Mj core-prim . clr-call-internal)
        (g$11662$T@1Mj core-prim . clr-new-internal)
        (g$11661$T@1Mj core-prim . clr-new-array-internal)
        (g$11660$T@1Mj core-prim . clr-is-internal)
        (g$11659$T@1Mj core-prim . clr-reference-internal)
        (g$11658$T@1Mj core-prim . clr-using-internal)
        (g$8112$T@1Mj core-prim . syntax-error)
        (g$7987$T@1Mj core-prim . syntax-dispatch)
        (g$11657$T@1Mj core-prim . compile-core)
        (g$11656$T@1Mj core-prim . eval-core)
        (g$11655$T@1Mj core-prim . remove-location)
        (g$11654$T@1Mj core-prim . set-symbol-value!)
        (g$11653$T@1Mj core-prim . symbol-value)
        (g$11652$T@1Mj core-prim . symbol-bound?)
        (g$11651$T@1Mj core-prim . ungensym)
        (g$11650$T@1Mj core-prim . gensym)
        (g$11649$T@1Mj core-prim . void)
        (g$11648$T@1Mj core-prim . load-serialized-library)
        (g$11647$T@1Mj core-prim . serialize-library)
        (g$11143$T@1Mj core-prim . compile-system-libraries)
        (g$11145$T@1Mj core-prim . compile->closure)
        (g$11144$T@1Mj core-prim . compile)
        (g$11138$T@1Mj core-prim . load)
        (g$11646$T@1Mj core-prim . string-normalize)
        (g$8122$T@1Mj core-prim . interaction-environment)
        (g$11645$T@1Mj core-prim . char-ready?)
        (g$11644$T@1Mj core-prim . string-upcase)
        (g$11643$T@1Mj core-prim . string-titlecase)
        (g$6325$T@1Mj core-prim . string-normalize-nfkd)
        (g$6324$T@1Mj core-prim . string-normalize-nfkc)
        (g$6323$T@1Mj core-prim . string-normalize-nfd)
        (g$6322$T@1Mj core-prim . string-normalize-nfc)
        (g$11642$T@1Mj core-prim . string-foldcase)
        (g$11641$T@1Mj core-prim . string-downcase)
        (g$6309$T@1Mj core-prim . string-ci>?)
        (g$6311$T@1Mj core-prim . string-ci>=?)
        (g$6307$T@1Mj core-prim . string-ci=?)
        (g$6308$T@1Mj core-prim . string-ci<?)
        (g$6310$T@1Mj core-prim . string-ci<=?)
        (g$11640$T@1Mj core-prim . char-whitespace?)
        (g$11639$T@1Mj core-prim . char-upper-case?)
        (g$11638$T@1Mj core-prim . char-title-case?)
        (g$11637$T@1Mj core-prim . char-numeric?)
        (g$11636$T@1Mj core-prim . char-lower-case?)
        (g$11635$T@1Mj core-prim . char-general-category)
        (g$11634$T@1Mj core-prim . char-upcase)
        (g$11633$T@1Mj core-prim . char-titlecase)
        (g$11632$T@1Mj core-prim . char-foldcase)
        (g$11631$T@1Mj core-prim . char-downcase)
        (g$6319$T@1Mj core-prim . char-ci>?)
        (g$6321$T@1Mj core-prim . char-ci>=?)
        (g$6317$T@1Mj core-prim . char-ci=?)
        (g$6318$T@1Mj core-prim . char-ci<?)
        (g$6320$T@1Mj core-prim . char-ci<=?)
        (g$11630$T@1Mj core-prim . char-alphabetic?)
        (g$7799$T@1Mj core-prim . variable-transformer-procedure)
        (g$7798$T@1Mj core-prim . variable-transformer?)
        (g$7796$T@1Mj core-prim . make-variable-transformer)
        (g$8116$T@1Mj core-prim . identifier?)
        (g$8105$T@1Mj core-prim . generate-temporaries)
        (g$8106$T@1Mj core-prim . free-identifier=?)
        (g$8118$T@1Mj core-prim . syntax->datum)
        (g$8117$T@1Mj core-prim . datum->syntax)
        (g$8107$T@1Mj core-prim . bound-identifier=?)
        (g$11629$T@1Mj core-prim . record-type-descriptor?)
        (g$11628$T@1Mj core-prim . record-predicate)
        (g$11627$T@1Mj core-prim . record-mutator)
        (g$11626$T@1Mj core-prim . record-constructor)
        (g$11625$T@1Mj core-prim . record-accessor)
        (g$11624$T@1Mj core-prim . make-record-type-descriptor)
        (g$11623$T@1Mj core-prim . make-record-constructor-descriptor)
        (g$11622$T@1Mj core-prim . record?)
        (g$11621$T@1Mj core-prim . record-type-uid)
        (g$11620$T@1Mj core-prim . record-type-sealed?)
        (g$11619$T@1Mj core-prim . record-type-parent)
        (g$11618$T@1Mj core-prim . record-type-opaque?)
        (g$11617$T@1Mj core-prim . record-type-name)
        (g$11616$T@1Mj core-prim . record-type-generative?)
        (g$11615$T@1Mj core-prim . record-type-field-names)
        (g$11614$T@1Mj core-prim . record-rtd)
        (g$11613$T@1Mj core-prim . record-field-mutable?)
        (g$5716$T@1Mj core-prim . delete-file)
        (g$5715$T@1Mj core-prim . file-exists?)
        (g$11612$T@1Mj core-prim . vector-sort!)
        (g$11611$T@1Mj core-prim . vector-sort)
        (g$6278$T@1Mj core-prim . list-sort)
        (g$11610$T@1Mj core-prim . symbol-hash)
        (g$11609$T@1Mj core-prim . string-ci-hash)
        (g$11608$T@1Mj core-prim . string-hash)
        (g$11607$T@1Mj core-prim . equal-hash)
        (g$11606$T@1Mj core-prim . hashtable-equivalence-function)
        (g$11605$T@1Mj core-prim . make-hashtable)
        (g$11604$T@1Mj core-prim . hashtable-hash-function)
        (g$5683$T@1Mj core-prim . make-eqv-hashtable)
        (g$5682$T@1Mj core-prim . make-eq-hashtable)
        (g$11603$T@1Mj core-prim . hashtable?)
        (g$5689$T@1Mj core-prim . hashtable-update!)
        (g$5684$T@1Mj core-prim . hashtable-size)
        (g$5686$T@1Mj core-prim . hashtable-set!)
        (g$5685$T@1Mj core-prim . hashtable-ref)
        (g$11602$T@1Mj core-prim . hashtable-mutable?)
        (g$11601$T@1Mj core-prim . hashtable-keys)
        (g$11600$T@1Mj core-prim . hashtable-entries)
        (g$5687$T@1Mj core-prim . hashtable-delete!)
        (g$11599$T@1Mj core-prim . hashtable-copy)
        (g$5688$T@1Mj core-prim . hashtable-contains?)
        (g$5690$T@1Mj core-prim . hashtable-clear!)
        (g$6621$T@1Mj core-prim . call-with-output-file)
        (g$6620$T@1Mj core-prim . call-with-input-file)
        (g$6612$T@1Mj core-prim . write-char)
        (g$11598$T@1Mj core-prim . write)
        (g$6619$T@1Mj core-prim . with-output-to-file)
        (g$6618$T@1Mj core-prim . with-input-from-file)
        (g$6611$T@1Mj core-prim . read-char)
        (g$11597$T@1Mj core-prim . read)
        (g$6610$T@1Mj core-prim . peek-char)
        (g$11596$T@1Mj core-prim . open-output-file)
        (g$11595$T@1Mj core-prim . open-input-file)
        (g$6622$T@1Mj core-prim . newline)
        (g$11594$T@1Mj core-prim . display)
        (g$11593$T@1Mj core-prim . close-output-port)
        (g$11592$T@1Mj core-prim . close-input-port)
        (g$11591$T@1Mj core-prim . eof-object?)
        (g$11590$T@1Mj core-prim . eof-object)
        (g$11589$T@1Mj core-prim . current-error-port)
        (g$11588$T@1Mj core-prim . current-output-port)
        (g$11587$T@1Mj core-prim . current-input-port)
        (g$11586$T@1Mj core-prim . output-port?)
        (g$11585$T@1Mj core-prim . input-port?)
        (g$11584$T@1Mj core-prim . utf-8-codec)
        (g$11583$T@1Mj core-prim . utf-16-codec)
        (g$11582$T@1Mj core-prim . transcoder-error-handling-mode)
        (g$11581$T@1Mj core-prim . transcoder-eol-style)
        (g$11580$T@1Mj core-prim . transcoder-codec)
        (g$11579$T@1Mj core-prim . transcoded-port)
        (g$11578$T@1Mj core-prim . textual-port?)
        (g$11577$T@1Mj core-prim . string->bytevector)
        (g$11576$T@1Mj core-prim . standard-output-port)
        (g$11575$T@1Mj core-prim . standard-input-port)
        (g$11574$T@1Mj core-prim . standard-error-port)
        (g$11573$T@1Mj core-prim . set-port-position!)
        (g$11572$T@1Mj core-prim . put-u8)
        (g$11571$T@1Mj core-prim . put-string)
        (g$6590$T@1Mj core-prim . put-datum)
        (g$11570$T@1Mj core-prim . put-char)
        (g$11569$T@1Mj core-prim . put-bytevector)
        (g$6595$T@1Mj core-prim . port?)
        (g$11568$T@1Mj core-prim . port-transcoder)
        (g$11567$T@1Mj core-prim . port-position)
        (g$11566$T@1Mj core-prim . port-has-set-port-position!?)
        (g$11565$T@1Mj core-prim . port-has-port-position?)
        (g$11564$T@1Mj core-prim . port-eof?)
        (g$11563$T@1Mj core-prim . output-port-buffer-mode)
        (g$6594$T@1Mj core-prim . open-string-output-port)
        (g$11562$T@1Mj core-prim . open-string-input-port)
        (g$11561$T@1Mj core-prim . open-file-output-port)
        (g$11560$T@1Mj core-prim . open-file-input/output-port)
        (g$11559$T@1Mj core-prim . open-file-input-port)
        (g$11558$T@1Mj core-prim . open-bytevector-output-port)
        (g$11557$T@1Mj core-prim . open-bytevector-input-port)
        (g$11556$T@1Mj core-prim . native-transcoder)
        (g$11555$T@1Mj core-prim . native-eol-style)
        (g$11554$T@1Mj core-prim . make-transcoder)
        (g$11553$T@1Mj core-prim . latin-1-codec)
        (g$6088$T@1Mj core-prim . make-i/o-write-error)
        (g$6075$T@1Mj core-prim . make-i/o-read-error)
        (g$6183$T@1Mj core-prim . make-i/o-port-error)
        (g$6101$T@1Mj core-prim . make-i/o-invalid-position-error)
        (g$6116$T@1Mj core-prim . make-i/o-filename-error)
        (g$6131$T@1Mj core-prim . make-i/o-file-protection-error)
        (g$6144$T@1Mj core-prim . make-i/o-file-is-read-only-error)
        (g$6170$T@1Mj core-prim . make-i/o-file-does-not-exist-error)
        (g$6157$T@1Mj core-prim . make-i/o-file-already-exists-error)
        (g$6062$T@1Mj core-prim . make-i/o-error)
        (g$6211$T@1Mj core-prim . make-i/o-encoding-error)
        (g$6198$T@1Mj core-prim . make-i/o-decoding-error)
        (g$11552$T@1Mj core-prim . make-custom-textual-output-port)
        (g$11551$T@1Mj
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$11550$T@1Mj core-prim . make-custom-textual-input-port)
        (g$11549$T@1Mj core-prim . make-custom-binary-output-port)
        (g$11548$T@1Mj core-prim . make-custom-binary-input/output-port)
        (g$11547$T@1Mj core-prim . make-custom-binary-input-port)
        (g$11546$T@1Mj core-prim . make-bytevector)
        (g$11545$T@1Mj core-prim . lookahead-u8)
        (g$11544$T@1Mj core-prim . lookahead-char)
        (g$6089$T@1Mj core-prim . i/o-write-error?)
        (g$6076$T@1Mj core-prim . i/o-read-error?)
        (g$6185$T@1Mj core-prim . i/o-port-error?)
        (g$6103$T@1Mj core-prim . i/o-invalid-position-error?)
        (g$6104$T@1Mj core-prim . i/o-error-position)
        (g$6118$T@1Mj core-prim . i/o-filename-error?)
        (g$6132$T@1Mj core-prim . i/o-file-protection-error?)
        (g$6145$T@1Mj core-prim . i/o-file-is-read-only-error?)
        (g$6171$T@1Mj core-prim . i/o-file-does-not-exist-error?)
        (g$6158$T@1Mj core-prim . i/o-file-already-exists-error?)
        (g$6063$T@1Mj core-prim . i/o-error?)
        (g$6186$T@1Mj core-prim . i/o-error-port)
        (g$6119$T@1Mj core-prim . i/o-error-filename)
        (g$6213$T@1Mj core-prim . i/o-encoding-error?)
        (g$6214$T@1Mj core-prim . i/o-encoding-error-char)
        (g$6199$T@1Mj core-prim . i/o-decoding-error?)
        (g$11543$T@1Mj core-prim . get-u8)
        (g$11542$T@1Mj core-prim . get-string-n!)
        (g$11541$T@1Mj core-prim . get-string-n)
        (g$11540$T@1Mj core-prim . get-string-all)
        (g$11539$T@1Mj core-prim . get-line)
        (g$6591$T@1Mj core-prim . get-datum)
        (g$11538$T@1Mj core-prim . get-char)
        (g$11537$T@1Mj core-prim . get-bytevector-some)
        (g$11536$T@1Mj core-prim . get-bytevector-n!)
        (g$11535$T@1Mj core-prim . get-bytevector-n)
        (g$11534$T@1Mj core-prim . get-bytevector-all)
        (g$11533$T@1Mj core-prim . flush-output-port)
        (g$11532$T@1Mj core-prim . close-port)
        (g$6596$T@1Mj core-prim . call-with-string-output-port)
        (g$6597$T@1Mj core-prim . call-with-port)
        (g$11531$T@1Mj core-prim . call-with-bytevector-output-port)
        (g$11530$T@1Mj core-prim . bytevector->string)
        (g$11529$T@1Mj core-prim . buffer-mode?)
        (g$11528$T@1Mj core-prim . binary-port?)
        (g$8095$T@1Mj core-prim . scheme-report-environment)
        (g$6257$T@1Mj core-prim . quotient)
        (g$8094$T@1Mj core-prim . null-environment)
        (g$6258$T@1Mj core-prim . remainder)
        (g$6259$T@1Mj core-prim . modulo)
        (g$6254$T@1Mj core-prim . inexact->exact)
        (g$6261$T@1Mj core-prim . force)
        (g$6255$T@1Mj core-prim . exact->inexact)
        (g$11527$T@1Mj core-prim . exit)
        (g$11134$T@1Mj core-prim . command-line)
        (g$11526$T@1Mj core-prim . string-fill!)
        (g$11525$T@1Mj core-prim . string-set!)
        (g$11524$T@1Mj core-prim . set-cdr!)
        (g$11523$T@1Mj core-prim . set-car!)
        (g$5125$T@1Mj core-prim . remove)
        (g$5126$T@1Mj core-prim . remv)
        (g$5106$T@1Mj core-prim . remp)
        (g$5127$T@1Mj core-prim . remq)
        (g$5105$T@1Mj core-prim . partition)
        (g$5113$T@1Mj core-prim . memv)
        (g$5112$T@1Mj core-prim . memq)
        (g$5115$T@1Mj core-prim . memp)
        (g$5114$T@1Mj core-prim . member)
        (g$5119$T@1Mj core-prim . exists)
        (g$5118$T@1Mj core-prim . for-all)
        (g$5124$T@1Mj core-prim . fold-right)
        (g$5123$T@1Mj core-prim . fold-left)
        (g$5104$T@1Mj core-prim . find)
        (g$5107$T@1Mj core-prim . filter)
        (g$5122$T@1Mj core-prim . cons*)
        (g$5109$T@1Mj core-prim . assv)
        (g$5108$T@1Mj core-prim . assq)
        (g$5111$T@1Mj core-prim . assp)
        (g$5110$T@1Mj core-prim . assoc)
        (g$11522$T@1Mj core-prim . with-exception-handler)
        (g$11521$T@1Mj core-prim . raise-continuable)
        (g$11520$T@1Mj core-prim . raise)
        (g$8097$T@1Mj core-prim . eval)
        (g$8093$T@1Mj core-prim . environment)
        (g$6682$T@1Mj core-prim . make-enumeration)
        (g$6689$T@1Mj core-prim . enum-set=?)
        (g$6683$T@1Mj core-prim . enum-set-universe)
        (g$6690$T@1Mj core-prim . enum-set-union)
        (g$6688$T@1Mj core-prim . enum-set-subset?)
        (g$6694$T@1Mj core-prim . enum-set-projection)
        (g$6687$T@1Mj core-prim . enum-set-member?)
        (g$6691$T@1Mj core-prim . enum-set-intersection)
        (g$6684$T@1Mj core-prim . enum-set-indexer)
        (g$6692$T@1Mj core-prim . enum-set-difference)
        (g$6685$T@1Mj core-prim . enum-set-constructor)
        (g$6693$T@1Mj core-prim . enum-set-complement)
        (g$6686$T@1Mj core-prim . enum-set->list)
        (g$5980$T@1Mj core-prim . who-condition?)
        (g$5899$T@1Mj core-prim . warning?)
        (g$5938$T@1Mj core-prim . violation?)
        (g$6050$T@1Mj core-prim . undefined-violation?)
        (g$6035$T@1Mj core-prim . syntax-violation?)
        (g$6037$T@1Mj core-prim . syntax-violation-subform)
        (g$6036$T@1Mj core-prim . syntax-violation-form)
        (g$8115$T@1Mj core-prim . syntax-violation)
        (g$11519$T@1Mj core-prim . simple-conditions)
        (g$5912$T@1Mj core-prim . serious-condition?)
        (g$5994$T@1Mj core-prim . non-continuable-violation?)
        (g$5885$T@1Mj core-prim . message-condition?)
        (g$5978$T@1Mj core-prim . make-who-condition)
        (g$5898$T@1Mj core-prim . make-warning)
        (g$5937$T@1Mj core-prim . make-violation)
        (g$6049$T@1Mj core-prim . make-undefined-violation)
        (g$6032$T@1Mj core-prim . make-syntax-violation)
        (g$5911$T@1Mj core-prim . make-serious-condition)
        (g$5993$T@1Mj core-prim . make-non-continuable-violation)
        (g$5883$T@1Mj core-prim . make-message-condition)
        (g$6019$T@1Mj core-prim . make-lexical-violation)
        (g$5963$T@1Mj core-prim . make-irritants-condition)
        (g$6006$T@1Mj
          core-prim
          .
          make-implementation-restriction-violation)
        (g$5924$T@1Mj core-prim . make-error)
        (g$5950$T@1Mj core-prim . make-assertion-violation)
        (g$6020$T@1Mj core-prim . lexical-violation?)
        (g$5965$T@1Mj core-prim . irritants-condition?)
        (g$6007$T@1Mj core-prim . implementation-restriction-violation?)
        (g$5925$T@1Mj core-prim . error?)
        (g$5981$T@1Mj core-prim . condition-who)
        (g$11518$T@1Mj core-prim . condition-predicate)
        (g$5886$T@1Mj core-prim . condition-message)
        (g$5966$T@1Mj core-prim . condition-irritants)
        (g$11517$T@1Mj core-prim . condition-accessor)
        (g$11516$T@1Mj core-prim . condition)
        (g$5951$T@1Mj core-prim . assertion-violation?)
        (g$11515$T@1Mj core-prim . condition?)
        (g$11514$T@1Mj core-prim . utf32->string)
        (g$11513$T@1Mj core-prim . utf16->string)
        (g$11512$T@1Mj core-prim . utf8->string)
        (g$11511$T@1Mj core-prim . uint-list->bytevector)
        (g$11510$T@1Mj core-prim . u8-list->bytevector)
        (g$11509$T@1Mj core-prim . string->utf8)
        (g$11508$T@1Mj core-prim . string->utf32)
        (g$11507$T@1Mj core-prim . string->utf16)
        (g$11506$T@1Mj core-prim . sint-list->bytevector)
        (g$5722$T@1Mj core-prim . native-endianness)
        (g$5424$T@1Mj core-prim . bytevector?)
        (g$11505$T@1Mj core-prim . bytevector=?)
        (g$11504$T@1Mj core-prim . bytevector-uint-set!)
        (g$11503$T@1Mj core-prim . bytevector-uint-ref)
        (g$11502$T@1Mj core-prim . bytevector-u8-set!)
        (g$11501$T@1Mj core-prim . bytevector-u8-ref)
        (g$5743$T@1Mj core-prim . bytevector-u64-set!)
        (g$5739$T@1Mj core-prim . bytevector-u64-ref)
        (g$5745$T@1Mj core-prim . bytevector-u64-native-set!)
        (g$5741$T@1Mj core-prim . bytevector-u64-native-ref)
        (g$5735$T@1Mj core-prim . bytevector-u32-set!)
        (g$5731$T@1Mj core-prim . bytevector-u32-ref)
        (g$5737$T@1Mj core-prim . bytevector-u32-native-set!)
        (g$5733$T@1Mj core-prim . bytevector-u32-native-ref)
        (g$5727$T@1Mj core-prim . bytevector-u16-set!)
        (g$5723$T@1Mj core-prim . bytevector-u16-ref)
        (g$5729$T@1Mj core-prim . bytevector-u16-native-set!)
        (g$5725$T@1Mj core-prim . bytevector-u16-native-ref)
        (g$11500$T@1Mj core-prim . bytevector-sint-set!)
        (g$11499$T@1Mj core-prim . bytevector-sint-ref)
        (g$11498$T@1Mj core-prim . bytevector-s8-set!)
        (g$11497$T@1Mj core-prim . bytevector-s8-ref)
        (g$5744$T@1Mj core-prim . bytevector-s64-set!)
        (g$5740$T@1Mj core-prim . bytevector-s64-ref)
        (g$5746$T@1Mj core-prim . bytevector-s64-native-set!)
        (g$5742$T@1Mj core-prim . bytevector-s64-native-ref)
        (g$5736$T@1Mj core-prim . bytevector-s32-set!)
        (g$5732$T@1Mj core-prim . bytevector-s32-ref)
        (g$5738$T@1Mj core-prim . bytevector-s32-native-set!)
        (g$5734$T@1Mj core-prim . bytevector-s32-native-ref)
        (g$5728$T@1Mj core-prim . bytevector-s16-set!)
        (g$5724$T@1Mj core-prim . bytevector-s16-ref)
        (g$5730$T@1Mj core-prim . bytevector-s16-native-set!)
        (g$5726$T@1Mj core-prim . bytevector-s16-native-ref)
        (g$11496$T@1Mj core-prim . bytevector-length)
        (g$11495$T@1Mj core-prim . bytevector-ieee-single-set!)
        (g$11494$T@1Mj core-prim . bytevector-ieee-single-ref)
        (g$5749$T@1Mj core-prim . bytevector-ieee-single-native-set!)
        (g$5747$T@1Mj core-prim . bytevector-ieee-single-native-ref)
        (g$11493$T@1Mj core-prim . bytevector-ieee-double-set!)
        (g$11492$T@1Mj core-prim . bytevector-ieee-double-ref)
        (g$5750$T@1Mj core-prim . bytevector-ieee-double-native-set!)
        (g$5748$T@1Mj core-prim . bytevector-ieee-double-native-ref)
        (g$11491$T@1Mj core-prim . bytevector-fill!)
        (g$11490$T@1Mj core-prim . bytevector-copy!)
        (g$11489$T@1Mj core-prim . bytevector-copy)
        (g$11488$T@1Mj core-prim . bytevector->uint-list)
        (g$11487$T@1Mj core-prim . bytevector->u8-list)
        (g$11486$T@1Mj core-prim . bytevector->sint-list)
        (g$6240$T@1Mj core-prim . no-nans-violation?)
        (g$6227$T@1Mj core-prim . no-infinities-violation?)
        (g$6239$T@1Mj core-prim . make-no-nans-violation)
        (g$6226$T@1Mj core-prim . make-no-infinities-violation)
        (g$11485$T@1Mj core-prim . real->flonum)
        (g$6536$T@1Mj core-prim . flzero?)
        (g$6531$T@1Mj core-prim . fltruncate)
        (g$6521$T@1Mj core-prim . fltan)
        (g$6526$T@1Mj core-prim . flsqrt)
        (g$6519$T@1Mj core-prim . flsin)
        (g$6532$T@1Mj core-prim . flround)
        (g$6534$T@1Mj core-prim . flpositive?)
        (g$5429$T@1Mj core-prim . flonum?)
        (g$6538$T@1Mj core-prim . flodd?)
        (g$11484$T@1Mj core-prim . flnumerator)
        (g$6535$T@1Mj core-prim . flnegative?)
        (g$6518$T@1Mj core-prim . flnan?)
        (g$6512$T@1Mj core-prim . flmod0)
        (g$6511$T@1Mj core-prim . flmod)
        (g$6540$T@1Mj core-prim . flmin)
        (g$6539$T@1Mj core-prim . flmax)
        (g$6525$T@1Mj core-prim . fllog)
        (g$6515$T@1Mj core-prim . flinteger?)
        (g$6517$T@1Mj core-prim . flinfinite?)
        (g$6530$T@1Mj core-prim . flfloor)
        (g$6516$T@1Mj core-prim . flfinite?)
        (g$6528$T@1Mj core-prim . flexpt)
        (g$6527$T@1Mj core-prim . flexp)
        (g$6537$T@1Mj core-prim . fleven?)
        (g$6514$T@1Mj core-prim . fldiv0-and-mod0)
        (g$11483$T@1Mj core-prim . fldiv0)
        (g$6513$T@1Mj core-prim . fldiv-and-mod)
        (g$11482$T@1Mj core-prim . fldiv)
        (g$11481$T@1Mj core-prim . fldenominator)
        (g$6520$T@1Mj core-prim . flcos)
        (g$6529$T@1Mj core-prim . flceiling)
        (g$6524$T@1Mj core-prim . flatan)
        (g$6522$T@1Mj core-prim . flasin)
        (g$6523$T@1Mj core-prim . flacos)
        (g$6533$T@1Mj core-prim . flabs)
        (g$11480$T@1Mj core-prim . fl>?)
        (g$11479$T@1Mj core-prim . fl>=?)
        (g$11478$T@1Mj core-prim . fl=?)
        (g$11477$T@1Mj core-prim . fl<?)
        (g$11476$T@1Mj core-prim . fl<=?)
        (g$11475$T@1Mj core-prim . fl/)
        (g$11474$T@1Mj core-prim . fl-)
        (g$11473$T@1Mj core-prim . fl+)
        (g$11472$T@1Mj core-prim . fl*)
        (g$11471$T@1Mj core-prim . fixnum->flonum)
        (g$6432$T@1Mj core-prim . fxzero?)
        (g$11470$T@1Mj core-prim . fxxor)
        (g$6446$T@1Mj core-prim . fxrotate-bit-field)
        (g$11469$T@1Mj core-prim . fxreverse-bit-field)
        (g$6430$T@1Mj core-prim . fxpositive?)
        (g$6434$T@1Mj core-prim . fxodd?)
        (g$11468$T@1Mj core-prim . fxnot)
        (g$6431$T@1Mj core-prim . fxnegative?)
        (g$6427$T@1Mj core-prim . fxmod0)
        (g$6426$T@1Mj core-prim . fxmod)
        (g$6436$T@1Mj core-prim . fxmin)
        (g$6435$T@1Mj core-prim . fxmax)
        (g$11467$T@1Mj core-prim . fxlength)
        (g$11466$T@1Mj core-prim . fxior)
        (g$6440$T@1Mj core-prim . fxif)
        (g$11465$T@1Mj core-prim . fxfirst-bit-set)
        (g$6433$T@1Mj core-prim . fxeven?)
        (g$6429$T@1Mj core-prim . fxdiv0-and-mod0)
        (g$11464$T@1Mj core-prim . fxdiv0)
        (g$6428$T@1Mj core-prim . fxdiv-and-mod)
        (g$11463$T@1Mj core-prim . fxdiv)
        (g$6443$T@1Mj core-prim . fxcopy-bit-field)
        (g$6441$T@1Mj core-prim . fxcopy-bit)
        (g$11462$T@1Mj core-prim . fxbit-set?)
        (g$6442$T@1Mj core-prim . fxbit-field)
        (g$11461$T@1Mj core-prim . fxbit-count)
        (g$6445$T@1Mj core-prim . fxarithmetic-shift-right)
        (g$6444$T@1Mj core-prim . fxarithmetic-shift-left)
        (g$11460$T@1Mj core-prim . fxarithmetic-shift)
        (g$11459$T@1Mj core-prim . fxand)
        (g$11458$T@1Mj core-prim . fx>?)
        (g$11457$T@1Mj core-prim . fx>=?)
        (g$11456$T@1Mj core-prim . fx=?)
        (g$11455$T@1Mj core-prim . fx<?)
        (g$11454$T@1Mj core-prim . fx<=?)
        (g$6438$T@1Mj core-prim . fx-/carry)
        (g$11453$T@1Mj core-prim . fx-)
        (g$6439$T@1Mj core-prim . fx+/carry)
        (g$11452$T@1Mj core-prim . fx+)
        (g$6437$T@1Mj core-prim . fx*/carry)
        (g$11451$T@1Mj core-prim . fx*)
        (g$11450$T@1Mj core-prim . greatest-fixnum)
        (g$11449$T@1Mj core-prim . least-fixnum)
        (g$5430$T@1Mj core-prim . fixnum-width)
        (g$5428$T@1Mj core-prim . fixnum?)
        (g$6389$T@1Mj core-prim . bitwise-rotate-bit-field)
        (g$11448$T@1Mj core-prim . bitwise-reverse-bit-field)
        (g$11447$T@1Mj core-prim . bitwise-length)
        (g$6383$T@1Mj core-prim . bitwise-if)
        (g$11446$T@1Mj core-prim . bitwise-first-bit-set)
        (g$6386$T@1Mj core-prim . bitwise-copy-bit-field)
        (g$6384$T@1Mj core-prim . bitwise-copy-bit)
        (g$11445$T@1Mj core-prim . bitwise-bit-set?)
        (g$6385$T@1Mj core-prim . bitwise-bit-field)
        (g$11444$T@1Mj core-prim . bitwise-bit-count)
        (g$11443$T@1Mj core-prim . bitwise-xor)
        (g$11442$T@1Mj core-prim . bitwise-ior)
        (g$11441$T@1Mj core-prim . bitwise-and)
        (g$11440$T@1Mj core-prim . bitwise-not)
        (g$6388$T@1Mj core-prim . bitwise-arithmetic-shift-right)
        (g$6387$T@1Mj core-prim . bitwise-arithmetic-shift-left)
        (g$11439$T@1Mj core-prim . bitwise-arithmetic-shift)
        (g$5464$T@1Mj core-prim . zero?)
        (g$5423$T@1Mj core-prim . vector?)
        (g$11438$T@1Mj core-prim . vector-set!)
        (g$11437$T@1Mj core-prim . vector-ref)
        (g$5496$T@1Mj core-prim . vector-map)
        (g$11436$T@1Mj core-prim . vector-length)
        (g$5497$T@1Mj core-prim . vector-for-each)
        (g$5431$T@1Mj core-prim . vector-fill!)
        (g$11435$T@1Mj core-prim . vector->list)
        (g$11434$T@1Mj core-prim . vector)
        (g$11433$T@1Mj core-prim . values)
        (g$11432$T@1Mj core-prim . truncate)
        (g$11431$T@1Mj core-prim . tan)
        (g$5425$T@1Mj core-prim . symbol?)
        (g$5481$T@1Mj core-prim . symbol=?)
        (g$11430$T@1Mj core-prim . symbol->string)
        (g$11429$T@1Mj core-prim . substring)
        (g$11428$T@1Mj core-prim . string?)
        (g$5478$T@1Mj core-prim . string>?)
        (g$5480$T@1Mj core-prim . string>=?)
        (g$5476$T@1Mj core-prim . string=?)
        (g$5477$T@1Mj core-prim . string<?)
        (g$5479$T@1Mj core-prim . string<=?)
        (g$11427$T@1Mj core-prim . string-ref)
        (g$11426$T@1Mj core-prim . string-length)
        (g$5498$T@1Mj core-prim . string-for-each)
        (g$11425$T@1Mj core-prim . string-copy)
        (g$11424$T@1Mj core-prim . string-append)
        (g$11423$T@1Mj core-prim . string->symbol)
        (g$11422$T@1Mj core-prim . string->number)
        (g$11421$T@1Mj core-prim . string->list)
        (g$11420$T@1Mj core-prim . string)
        (g$11419$T@1Mj core-prim . sqrt)
        (g$11418$T@1Mj core-prim . sin)
        (g$11417$T@1Mj core-prim . round)
        (g$5433$T@1Mj core-prim . reverse)
        (g$11416$T@1Mj core-prim . real?)
        (g$11415$T@1Mj core-prim . real-valued?)
        (g$11414$T@1Mj core-prim . real-part)
        (g$5493$T@1Mj core-prim . rationalize)
        (g$11413$T@1Mj core-prim . rational?)
        (g$11412$T@1Mj core-prim . rational-valued?)
        (g$5427$T@1Mj core-prim . procedure?)
        (g$5462$T@1Mj core-prim . positive?)
        (g$11411$T@1Mj core-prim . pair?)
        (g$5466$T@1Mj core-prim . odd?)
        (g$11410$T@1Mj core-prim . numerator)
        (g$11409$T@1Mj core-prim . number?)
        (g$11408$T@1Mj core-prim . number->string)
        (g$11407$T@1Mj core-prim . null?)
        (g$11406$T@1Mj core-prim . not)
        (g$5463$T@1Mj core-prim . negative?)
        (g$11405$T@1Mj core-prim . nan?)
        (g$5468$T@1Mj core-prim . min)
        (g$5467$T@1Mj core-prim . max)
        (g$5120$T@1Mj core-prim . map)
        (g$11404$T@1Mj core-prim . make-vector)
        (g$11403$T@1Mj core-prim . make-string)
        (g$11402$T@1Mj core-prim . make-rectangular)
        (g$11401$T@1Mj core-prim . make-polar)
        (g$11400$T@1Mj core-prim . magnitude)
        (g$11399$T@1Mj core-prim . log)
        (g$11398$T@1Mj core-prim . list?)
        (g$5100$T@1Mj core-prim . list-tail)
        (g$5101$T@1Mj core-prim . list-ref)
        (g$5420$T@1Mj core-prim . list->vector)
        (g$5421$T@1Mj core-prim . list->string)
        (g$11397$T@1Mj core-prim . list)
        (g$11396$T@1Mj core-prim . length)
        (g$5470$T@1Mj core-prim . lcm)
        (g$11395$T@1Mj core-prim . integer?)
        (g$11394$T@1Mj core-prim . integer-valued?)
        (g$11393$T@1Mj core-prim . integer->char)
        (g$11392$T@1Mj core-prim . infinite?)
        (g$11391$T@1Mj core-prim . inexact?)
        (g$11390$T@1Mj core-prim . inexact)
        (g$11389$T@1Mj core-prim . imag-part)
        (g$5469$T@1Mj core-prim . gcd)
        (g$5121$T@1Mj core-prim . for-each)
        (g$11388$T@1Mj core-prim . floor)
        (g$11387$T@1Mj core-prim . finite?)
        (g$11386$T@1Mj core-prim . expt)
        (g$11385$T@1Mj core-prim . exp)
        (g$11384$T@1Mj core-prim . exact?)
        (g$11383$T@1Mj core-prim . exact-integer-sqrt)
        (g$11382$T@1Mj core-prim . exact)
        (g$5465$T@1Mj core-prim . even?)
        (g$11381$T@1Mj core-prim . error)
        (g$11380$T@1Mj core-prim . eqv?)
        (g$11379$T@1Mj core-prim . equal?)
        (g$11378$T@1Mj core-prim . eq?)
        (g$11377$T@1Mj core-prim . dynamic-wind)
        (g$5419$T@1Mj core-prim . div0-and-mod0)
        (g$5417$T@1Mj core-prim . mod0)
        (g$11376$T@1Mj core-prim . div0)
        (g$5418$T@1Mj core-prim . div-and-mod)
        (g$5416$T@1Mj core-prim . mod)
        (g$11375$T@1Mj core-prim . div)
        (g$11374$T@1Mj core-prim . denominator)
        (g$11373$T@1Mj core-prim . cos)
        (g$11372$T@1Mj core-prim . cons)
        (g$11371$T@1Mj core-prim . complex?)
        (g$5422$T@1Mj core-prim . char?)
        (g$5490$T@1Mj core-prim . char>?)
        (g$5492$T@1Mj core-prim . char>=?)
        (g$5488$T@1Mj core-prim . char=?)
        (g$5489$T@1Mj core-prim . char<?)
        (g$5491$T@1Mj core-prim . char<=?)
        (g$11370$T@1Mj core-prim . char->integer)
        (g$11369$T@1Mj core-prim . ceiling)
        (g$11368$T@1Mj core-prim . call-with-values)
        (g$11367$T@1Mj core-prim . call/cc)
        (g$11366$T@1Mj core-prim . call-with-current-continuation)
        (g$5461$T@1Mj core-prim . cddddr)
        (g$5460$T@1Mj core-prim . cdddar)
        (g$5459$T@1Mj core-prim . cddadr)
        (g$5458$T@1Mj core-prim . cddaar)
        (g$5457$T@1Mj core-prim . cdaddr)
        (g$5456$T@1Mj core-prim . cdadar)
        (g$5455$T@1Mj core-prim . cdaadr)
        (g$5454$T@1Mj core-prim . cdaaar)
        (g$5453$T@1Mj core-prim . cadddr)
        (g$5452$T@1Mj core-prim . caddar)
        (g$5451$T@1Mj core-prim . cadadr)
        (g$5450$T@1Mj core-prim . cadaar)
        (g$5449$T@1Mj core-prim . caaddr)
        (g$5448$T@1Mj core-prim . caadar)
        (g$5447$T@1Mj core-prim . caaadr)
        (g$5446$T@1Mj core-prim . caaaar)
        (g$5445$T@1Mj core-prim . cdddr)
        (g$5444$T@1Mj core-prim . cddar)
        (g$5443$T@1Mj core-prim . cdadr)
        (g$5442$T@1Mj core-prim . cdaar)
        (g$5441$T@1Mj core-prim . caddr)
        (g$5440$T@1Mj core-prim . cadar)
        (g$5439$T@1Mj core-prim . caadr)
        (g$5438$T@1Mj core-prim . caaar)
        (g$5437$T@1Mj core-prim . cddr)
        (g$5436$T@1Mj core-prim . cdar)
        (g$5435$T@1Mj core-prim . cadr)
        (g$5434$T@1Mj core-prim . caar)
        (g$11365$T@1Mj core-prim . cdr)
        (g$11364$T@1Mj core-prim . car)
        (g$5426$T@1Mj core-prim . boolean?)
        (g$5482$T@1Mj core-prim . boolean=?)
        (g$11363$T@1Mj core-prim . atan)
        (g$11362$T@1Mj core-prim . assertion-violation)
        (g$11361$T@1Mj core-prim . asin)
        (g$11360$T@1Mj core-prim . apply)
        (g$11359$T@1Mj core-prim . append)
        (g$11358$T@1Mj core-prim . angle)
        (g$11357$T@1Mj core-prim . acos)
        (g$11356$T@1Mj core-prim . abs)
        (g$11355$T@1Mj core-prim . /)
        (g$11354$T@1Mj core-prim . *)
        (g$11353$T@1Mj core-prim . -)
        (g$11352$T@1Mj core-prim . +)
        (g$11351$T@1Mj core-prim . >=)
        (g$11350$T@1Mj core-prim . >)
        (g$11349$T@1Mj core-prim . =)
        (g$11348$T@1Mj core-prim . <=)
        (g$11347$T@1Mj core-prim . <)
        (g$11346$T@1Mj core-prim . $$fxnot)
        (g$11345$T@1Mj core-prim . $$fx-)
        (g$11344$T@1Mj core-prim . $$fx*)
        (g$11343$T@1Mj core-prim . $$fx+)
        (g$11342$T@1Mj core-prim . $fxxor)
        (g$11341$T@1Mj core-prim . $fxior)
        (g$11340$T@1Mj core-prim . $fxand)
        (g$11339$T@1Mj core-prim . $fx>=?)
        (g$11338$T@1Mj core-prim . $fx>?)
        (g$11337$T@1Mj core-prim . $fx<=?)
        (g$11336$T@1Mj core-prim . $fx<?)
        (g$11335$T@1Mj core-prim . $fx-)
        (g$11334$T@1Mj core-prim . $fx*)
        (g$11333$T@1Mj core-prim . $fx+)
        (g$11332$T@1Mj core-prim . $fx=?)
        (g$11331$T@1Mj core-prim . $vector-set!)
        (g$11330$T@1Mj core-prim . $vector-ref)
        (g$11329$T@1Mj core-prim . $cdr)
        (g$11328$T@1Mj core-prim . $car)
        (g$11327$T@1Mj core-prim . make-record-printer)
        (g$11326$T@1Mj core-prim . eqv-hash)
        (g$11325$T@1Mj core-prim . reverse!)
        (g$11324$T@1Mj core-prim . deserialize-port)
        (g$11323$T@1Mj core-prim . serialize-port)
        (g$6659$T@1Mj core-prim . enum-set?)
        (g$6260$T@1Mj core-prim . make-promise)
        (g$11137$T@1Mj core-prim . load/unload)
        (g$11136$T@1Mj core-prim . load/args)
        (g$6768$T@1Mj core-prim . printf)
        (g$6769$T@1Mj core-prim . fprintf)
        (g$6770$T@1Mj core-prim . format)
        (g$11322$T@1Mj core-prim . procedure-form)
        (g$11321$T@1Mj core-prim . procedure-environment)
        (g$11320$T@1Mj core-prim . procedure-name)
        (g$11319$T@1Mj core-prim . procedure-arity)
        (g$11318$T@1Mj core-prim . gc-collect)
        (g$11317$T@1Mj core-prim . typeof)
        (g$11316$T@1Mj core-prim . clr-type?)
        (g$11315$T@1Mj core-prim . get-clr-type)
        (g$11314$T@1Mj core-prim . get-command-line)
        (g$11313$T@1Mj core-prim . vector-append)
        (g$11312$T@1Mj core-prim . vector-filter)
        (g$11311$T@1Mj core-prim . vector-reverse!)
        (g$11310$T@1Mj core-prim . vector-contains?)
        (g$11309$T@1Mj core-prim . vector-index-of)
        (g$11308$T@1Mj core-prim . vector-copy)
        (g$11307$T@1Mj core-prim . vector-binary-search)
        (g$11306$T@1Mj core-prim . string-ci-compare)
        (g$11305$T@1Mj core-prim . string-compare)
        (g$11304$T@1Mj core-prim . string-format)
        (g$11133$T@1Mj core-prim . trace-printer)
        (g$11303$T@1Mj core-prim . make-traced-procedure)
        (g$6790$T@1Mj core-prim . make-traced-macro)
        (g$8111$T@1Mj core-prim . assertion-error)
        (g$11302$T@1Mj core-prim . time-it)
        (g$6797$T@1Mj core-prim . make-parameter)
        (g$11301$T@1Mj core-prim . library-locator)
        (g$11300$T@1Mj core-prim . get-library-paths)
        (g$11299$T@1Mj core-prim . open-tcp-input/output-port)
        (g$11298$T@1Mj core-prim . hashtable-for-each)
        (g$11297$T@1Mj core-prim . hashtable-map)
        (g$8089$T@1Mj core-prim . environment-bindings)
        (g$8092$T@1Mj core-prim . environment-symbols)
        (g$8088$T@1Mj core-prim . interaction-environment-symbols)
        (g$11296$T@1Mj core-prim . optimization-level)
        (g$7419$T@1Mj core-prim . library-path)
        (g$7797$T@1Mj core-prim . make-compile-time-value)
        (g$8098$T@1Mj core-prim . expand->core)
        (g$8096$T@1Mj core-prim . expand)
        (g$8035$T@1Mj core-prim . syntax-transpose)
        (g$7116$T@1Mj core-prim . convert->cps)
        (g$7440$T@1Mj core-prim . installed-libraries)
        (g$7431$T@1Mj core-prim . uninstall-library)
        (g$6880$T@1Mj core-prim . pretty-gensyms)
        (g$6877$T@1Mj core-prim . pretty-width)
        (g$6882$T@1Mj core-prim . pretty-print)
        (g$11295$T@1Mj $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11294$T@1Mj $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11293$T@1Mj $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11292$T@1Mj $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11291$T@1Mj $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11290$T@1Mj
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11289$T@1Mj
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11288$T@1Mj
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11287$T@1Mj
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11286$T@1Mj $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11285$T@1Mj
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11284$T@1Mj $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11283$T@1Mj $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11282$T@1Mj $core-rtd &i/o-rtd &i/o-rcd)
        (g$11281$T@1Mj
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$11280$T@1Mj $core-rtd &undefined-rtd &undefined-rcd)
        (g$11279$T@1Mj $core-rtd &syntax-rtd &syntax-rcd)
        (g$11278$T@1Mj $core-rtd &lexical-rtd &lexical-rcd)
        (g$11277$T@1Mj
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11276$T@1Mj $core-rtd &who-rtd &who-rcd)
        (g$11275$T@1Mj $core-rtd &irritants-rtd &irritants-rcd)
        (g$11274$T@1Mj $core-rtd &assertion-rtd &assertion-rcd)
        (g$11273$T@1Mj $core-rtd &violation-rtd &violation-rcd)
        (g$11272$T@1Mj $core-rtd &error-rtd &error-rcd)
        (g$11271$T@1Mj $core-rtd &serious-rtd &serious-rcd)
        (g$11270$T@1Mj $core-rtd &warning-rtd &warning-rcd)
        (g$11269$T@1Mj $core-rtd &message-rtd &message-rcd)
        (g$11268$T@1Mj $core-rtd &condition-rtd &condition-rcd)
        (g$11267$T@1Mj macro . define-condition-type)
        (g$11266$T@1Mj macro . define-enumeration)
        (g$11265$T@1Mj macro . define-record-type)
        (g$11264$T@1Mj macro . parent-rtd)
        (g$11263$T@1Mj macro . nongenerative)
        (g$11262$T@1Mj macro . opaque)
        (g$11261$T@1Mj macro . sealed)
        (g$11260$T@1Mj macro . protocol)
        (g$11259$T@1Mj macro . parent)
        (g$11258$T@1Mj macro . immutable)
        (g$11257$T@1Mj macro . mutable)
        (g$11256$T@1Mj macro . fields)
        (g$11255$T@1Mj macro . error-handling-mode)
        (g$11254$T@1Mj macro . file-options)
        (g$11253$T@1Mj macro . buffer-mode)
        (g$11252$T@1Mj macro . eol-style)
        (g$11251$T@1Mj macro . guard)
        (g$11250$T@1Mj macro . trace-letrec-syntax)
        (g$11249$T@1Mj macro . trace-let-syntax)
        (g$11248$T@1Mj macro . trace-define-syntax)
        (g$11247$T@1Mj macro . trace-define)
        (g$11246$T@1Mj macro . trace-lambda)
        (g$11245$T@1Mj macro . unsyntax-splicing)
        (g$11244$T@1Mj macro . unsyntax)
        (g$11243$T@1Mj macro . unquote-splicing)
        (g$11242$T@1Mj macro . unquote)
        (g$11241$T@1Mj macro . _)
        (g$11240$T@1Mj macro . else)
        (g$11239$T@1Mj macro . =>)
        (g$11238$T@1Mj macro . ...)
        (g$11237$T@1Mj macro . assert)
        (g$11236$T@1Mj macro . endianness)
        (g$11235$T@1Mj macro . delay)
        (g$11234$T@1Mj macro . time)
        (g$11233$T@1Mj macro . or)
        (g$11232$T@1Mj macro . and)
        (g$11231$T@1Mj macro . do)
        (g$11230$T@1Mj macro . cond)
        (g$11229$T@1Mj macro . let*)
        (g$11228$T@1Mj macro . let)
        (g$11227$T@1Mj macro . identifier-syntax)
        (g$11226$T@1Mj macro . with-syntax)
        (g$11225$T@1Mj macro . quasisyntax)
        (g$11224$T@1Mj macro . quasiquote)
        (g$11223$T@1Mj macro . syntax-rules)
        (g$11222$T@1Mj macro . include-into)
        (g$11221$T@1Mj macro . include)
        (g$11220$T@1Mj macro . define-struct)
        (g$11219$T@1Mj macro . let-values)
        (g$11218$T@1Mj macro . let*-values)
        (g$11217$T@1Mj core-macro . record-constructor-descriptor)
        (g$11216$T@1Mj core-macro . record-type-descriptor)
        (g$11215$T@1Mj core-macro . fluid-let-syntax)
        (g$11214$T@1Mj macro . case)
        (g$11213$T@1Mj macro . parameterize)
        (g$11212$T@1Mj macro . unless)
        (g$11211$T@1Mj macro . when)
        (g$11210$T@1Mj core-macro . if)
        (g$11209$T@1Mj core-macro . letrec*)
        (g$11208$T@1Mj core-macro . letrec)
        (g$11207$T@1Mj core-macro . type-descriptor)
        (g$11206$T@1Mj core-macro . case-lambda)
        (g$11205$T@1Mj core-macro . lambda)
        (g$11204$T@1Mj core-macro . syntax)
        (g$11203$T@1Mj core-macro . syntax-case)
        (g$11202$T@1Mj core-macro . quote)
        (g$11201$T@1Mj core-macro . foreign-call)
        (g$11200$T@1Mj letrec-syntax)
        (g$11199$T@1Mj let-syntax)
        (g$11198$T@1Mj set!)
        (g$11197$T@1Mj export)
        (g$11196$T@1Mj import)
        (g$11195$T@1Mj library)
        (g$11194$T@1Mj begin)
        (g$11193$T@1Mj module)
        (g$11192$T@1Mj define-syntax)
        (g$11191$T@1Mj define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$15211$T@1Mj
      'g$11719$T@1Mj
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11657$T@1Mj)
        (eval-core . g$11656$T@1Mj)
        (set-symbol-value! . g$11654$T@1Mj)
        (symbol-value . g$11653$T@1Mj)
        (gensym . g$11650$T@1Mj)
        (void . g$11649$T@1Mj))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$19723$T@1Mj
     g$trace-printer$19788$T@1Mj
     (g$make-parameter$14369$T@1Mj g$pretty-print$14579$T@1Mj))
   (g$command-line$19724$T@1Mj
     g$command-line$19789$T@1Mj
     (g$make-parameter$14369$T@1Mj (get-command-line)))
   (g$local-library-path$19725$T@1Mj
     g$local-library-path$19790$T@1Mj
     (case-lambda
       ((g$filename$19739$T@1Mj)
        (cons
          (g$get-directory-name$12588$T@1Mj g$filename$19739$T@1Mj)
          (g$library-path$15195$T@1Mj)))))
   (g$load/args$19726$T@1Mj
     g$load/args$19791$T@1Mj
     (case-lambda
       ((g$filename$19740$T@1Mj . g$args$19741$T@1Mj)
        (begin
          (apply
            g$load-r6rs-top-level$19736$T@1Mj
            g$filename$19740$T@1Mj
            'load
            g$args$19741$T@1Mj)
          (void)))))
   (g$load/unload$19727$T@1Mj
     g$load/unload$19792$T@1Mj
     (case-lambda
       ((g$filename$19742$T@1Mj)
        ((case-lambda
           ((g$libs$19743$T@1Mj)
            (begin
              (g$load$19728$T@1Mj g$filename$19742$T@1Mj)
              (g$for-each$11725$T@1Mj
                (case-lambda
                  ((g$lib$19744$T@1Mj)
                   (if (not (g$memq$11716$T@1Mj
                              g$lib$19744$T@1Mj
                              g$libs$19743$T@1Mj))
                     (g$uninstall-library$15207$T@1Mj g$lib$19744$T@1Mj)
                     (void))))
                (g$installed-libraries$15216$T@1Mj)))))
         (g$installed-libraries$15216$T@1Mj)))))
   (g$load$19728$T@1Mj
     g$load$19793$T@1Mj
     (case-lambda
       ((g$filename$19745$T@1Mj)
        (begin
          (apply
            g$load-r6rs-top-level$19736$T@1Mj
            g$filename$19745$T@1Mj
            'load
            (cdr (g$command-line$19724$T@1Mj)))
          (void)))))
   (g$ironscheme-build$19729$T@1Mj
     g$ironscheme-build$19794$T@1Mj
     (case-lambda
       (() (g$ironscheme-build$19729$T@1Mj '#f))
       ((g$cps?$19746$T@1Mj)
        (begin
          (g$call-with-output-file$13985$T@1Mj
            '"build-options.ss"
            (case-lambda
              ((g$p$19747$T@1Mj)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$19746$T@1Mj)
                   g$p$19747$T@1Mj)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$19746$T@1Mj))
                   g$p$19747$T@1Mj)
                 (g$newline$13986$T@1Mj g$p$19747$T@1Mj)))))
          (g$load$19728$T@1Mj '"ironscheme-buildscript.ss")))))
   (g$foreground-color$19730$T@1Mj
     g$foreground-color$19795$T@1Mj
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$19748$T@1Mj)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$19748$T@1Mj))))
   (g$system-exception?$19731$T@1Mj
     g$system-exception?$19796$T@1Mj
     (case-lambda
       ((g$e$19749$T@1Mj)
        (clr-is-internal 'SystemException g$e$19749$T@1Mj))))
   (g$eval-top-level$19732$T@1Mj
     g$eval-top-level$19797$T@1Mj
     (case-lambda
       ((g$x$19750$T@1Mj)
        (call/cc
          (case-lambda
            ((g$k$19751$T@1Mj)
             (with-exception-handler
               (case-lambda
                 ((g$e$19752$T@1Mj)
                  ((case-lambda
                     ((g$serious?$19753$T@1Mj)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$19758$T@1Mj
                              g$current-output-port$19759$T@1Mj
                              g$foreground-color$19760$T@1Mj
                              g$current-output-port$19761$T@1Mj)
                            ((case-lambda
                               ((g$swap$19762$T@1Mj)
                                (dynamic-wind
                                  g$swap$19762$T@1Mj
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$19753$T@1Mj
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$19752$T@1Mj)
                                       (g$newline$13986$T@1Mj))))
                                  g$swap$19762$T@1Mj)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$19763$T@1Mj)
                                      (begin
                                        (g$foreground-color$19758$T@1Mj
                                          g$foreground-color$19760$T@1Mj)
                                        (set! g$foreground-color$19760$T@1Mj
                                          g$t$19763$T@1Mj))))
                                   (g$foreground-color$19758$T@1Mj))
                                  ((case-lambda
                                     ((g$t$19764$T@1Mj)
                                      (begin
                                        (g$current-output-port$19759$T@1Mj
                                          g$current-output-port$19761$T@1Mj)
                                        (set! g$current-output-port$19761$T@1Mj
                                          g$t$19764$T@1Mj))))
                                   (g$current-output-port$19759$T@1Mj))))))))
                         g$foreground-color$19730$T@1Mj
                         current-output-port
                         (if g$serious?$19753$T@1Mj 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$19753$T@1Mj
                          (g$k$19751$T@1Mj)
                          (void)))))
                   ((case-lambda
                      ((g$t$19765$T@1Mj)
                       (if g$t$19765$T@1Mj
                         g$t$19765$T@1Mj
                         (begin
                           '#f
                           (g$system-exception?$19731$T@1Mj
                             g$e$19752$T@1Mj)))))
                    (g$serious-condition?$13161$T@1Mj
                      g$e$19752$T@1Mj)))))
               (case-lambda
                 (()
                  (g$eval$19696$T@1Mj
                    g$x$19750$T@1Mj
                    (g$interaction-environment$19721$T@1Mj)))))))))))
   (g$compile-system-libraries$19733$T@1Mj
     g$compile-system-libraries$19798$T@1Mj
     (case-lambda
       (()
        (g$eval-top-level$19732$T@1Mj
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$19734$T@1Mj
     g$compile$19799$T@1Mj
     (case-lambda
       ((g$filename$19766$T@1Mj)
        (g$load-r6rs-top-level$19736$T@1Mj
          g$filename$19766$T@1Mj
          'compile))))
   (g$compile->closure$19735$T@1Mj
     g$compile->closure$19800$T@1Mj
     (case-lambda
       ((g$filename$19767$T@1Mj)
        (g$load-r6rs-top-level$19736$T@1Mj
          g$filename$19767$T@1Mj
          'closure))))
   (g$load-r6rs-top-level$19736$T@1Mj
     g$load-r6rs-top-level$19801$T@1Mj
     (case-lambda
       ((g$filename$19768$T@1Mj g$how$19769$T@1Mj . g$args$19770$T@1Mj)
        ((case-lambda
           ((g$library-path$19773$T@1Mj g$library-path$19774$T@1Mj)
            ((case-lambda
               ((g$swap$19775$T@1Mj)
                (dynamic-wind
                  g$swap$19775$T@1Mj
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$19776$T@1Mj)
                         ((case-lambda
                            ((g$t$19777$T@1Mj)
                             (if (eqv? g$t$19777$T@1Mj 'closure)
                               (g$pre-compile-r6rs-top-level$19719$T@1Mj
                                 g$x*$19776$T@1Mj)
                               (if (eqv? g$t$19777$T@1Mj 'load)
                                 ((case-lambda
                                    ((g$command-line$19780$T@1Mj
                                       g$command-line$19781$T@1Mj)
                                     ((case-lambda
                                        ((g$swap$19782$T@1Mj)
                                         (dynamic-wind
                                           g$swap$19782$T@1Mj
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$19718$T@1Mj
                                                 g$x*$19776$T@1Mj))))
                                           g$swap$19782$T@1Mj)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$19783$T@1Mj)
                                             (begin
                                               (g$command-line$19780$T@1Mj
                                                 g$command-line$19781$T@1Mj)
                                               (set! g$command-line$19781$T@1Mj
                                                 g$t$19783$T@1Mj))))
                                          (g$command-line$19780$T@1Mj)))))))
                                  g$command-line$19724$T@1Mj
                                  (cons
                                    g$filename$19768$T@1Mj
                                    (g$map$11724$T@1Mj
                                      (case-lambda
                                        ((g$x$19784$T@1Mj)
                                         (g$format$14160$T@1Mj
                                           '"~a"
                                           g$x$19784$T@1Mj)))
                                      g$args$19770$T@1Mj)))
                                 (if (eqv? g$t$19777$T@1Mj 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$19718$T@1Mj
                                       g$x*$19776$T@1Mj)
                                     (g$serialize-all$15199$T@1Mj
                                       serialize-library
                                       g$compile-core-expr$14947$T@1Mj))
                                   (if '#f '#f (void)))))))
                          g$how$19769$T@1Mj)))
                      (g$with-input-from-file$13982$T@1Mj
                        g$filename$19768$T@1Mj
                        (case-lambda
                          (()
                           ((letrec ((g$f$19785$T@1Mj
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$19786$T@1Mj)
                                              (if (eof-object?
                                                    g$x$19786$T@1Mj)
                                                '()
                                                (cons
                                                  g$x$19786$T@1Mj
                                                  (g$f$19785$T@1Mj)))))
                                           (read-annotated))))))
                              g$f$19785$T@1Mj))))))))
                  g$swap$19775$T@1Mj)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$19787$T@1Mj)
                    (begin
                      (g$library-path$19773$T@1Mj
                        g$library-path$19774$T@1Mj)
                      (set! g$library-path$19774$T@1Mj
                        g$t$19787$T@1Mj))))
                 (g$library-path$19773$T@1Mj)))))))
         g$library-path$15195$T@1Mj
         (g$local-library-path$19725$T@1Mj g$filename$19768$T@1Mj)))))
   (g$fo$19737$T@1Mj
     g$fo$19802$T@1Mj
     (g$make-enumeration$14122$T@1Mj '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$15200$T@1Mj
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$19738$T@1Mj)
         (if (g$serious-condition?$13161$T@1Mj g$ex$19738$T@1Mj)
           (raise g$ex$19738$T@1Mj)
           (begin
             (display g$ex$19738$T@1Mj)
             (g$newline$13986$T@1Mj))))))
    (set-symbol-value! 'load g$load$19728$T@1Mj)
    (set-symbol-value! 'compile g$compile$19734$T@1Mj)
    (set-symbol-value! 'compile->closure g$compile->closure$19735$T@1Mj)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$19732$T@1Mj)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$19687$T@1Mj)
    (set-symbol-value! 'expanded2core g$expanded->core$14946$T@1Mj)
    (set-symbol-value! 'trace-printer g$trace-printer$19723$T@1Mj)
    (set-symbol-value! 'convert->cps g$convert->cps$14897$T@1Mj)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$14370$T@1Mj
      (g$enum-set-constructor$14125$T@1Mj g$fo$19737$T@1Mj))
    (g$library-path$15195$T@1Mj (get-library-paths))
    (g$library-extensions$15196$T@1Mj
      (cons '".ironscheme.sls" (g$library-extensions$15196$T@1Mj)))))

